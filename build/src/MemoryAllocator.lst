GAS LISTING /tmp/ccco2gsb.s 			page 1


   1              		.file	"MemoryAllocator.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN15MemoryAllocator7kmallocEmNS_7PurposeE
   9              	_ZN15MemoryAllocator7kmallocEmNS_7PurposeE:
  10              	.LFB3:
  11              		.file 1 "src/MemoryAllocator.cpp"
   1:src/MemoryAllocator.cpp **** //
   2:src/MemoryAllocator.cpp **** // Created by os on 5/12/23.
   3:src/MemoryAllocator.cpp **** //
   4:src/MemoryAllocator.cpp **** 
   5:src/MemoryAllocator.cpp **** #include "../h/MemoryAllocator.hpp"
   6:src/MemoryAllocator.cpp **** #include "../h/helper.hpp"
   7:src/MemoryAllocator.cpp **** 
   8:src/MemoryAllocator.cpp **** bool MemoryAllocator::initialized = false;
   9:src/MemoryAllocator.cpp **** MemoryAllocator::FreeMemSegment* MemoryAllocator::freeMemHead = nullptr;
  10:src/MemoryAllocator.cpp **** MemoryAllocator::UsedMemSegment* MemoryAllocator::usedMemHead = nullptr;
  11:src/MemoryAllocator.cpp **** 
  12:src/MemoryAllocator.cpp **** void* MemoryAllocator::kmalloc(size_t size, Purpose pur) {
  12              		.loc 1 12 58
  13              		.cfi_startproc
  14              	.LVL0:
  15 0000 130101FF 		addi	sp,sp,-16
  16              		.cfi_def_cfa_offset 16
  17 0004 23348100 		sd	s0,8(sp)
  18              		.cfi_offset 8, -8
  19 0008 13040101 		addi	s0,sp,16
  20              		.cfi_def_cfa 8, 0
  13:src/MemoryAllocator.cpp **** 	if (size <= 0) return nullptr;
  21              		.loc 1 13 2
  22 000c 630C0512 		beqz	a0,.L14
  14:src/MemoryAllocator.cpp **** 
  15:src/MemoryAllocator.cpp **** 	//pocetna inicijalizacija
  16:src/MemoryAllocator.cpp **** 	if (!initialized) {
  23              		.loc 1 16 2
  24              		.loc 1 16 6 is_stmt 0
  25 0010 97070000 		lbu	a5,.LANCHOR0
  25      83C70700 
  26              		.loc 1 16 2
  27 0018 63980704 		bnez	a5,.L3
  17:src/MemoryAllocator.cpp **** 		freeMemHead = (FreeMemSegment*)HEAP_START_ADDR;
  28              		.loc 1 17 3 is_stmt 1
  29              		.loc 1 17 15 is_stmt 0
  30 001c 17060000 		la	a2,HEAP_START_ADDR
  30      03360600 
  31 0024 83370600 		ld	a5,0(a2)
  32 0028 17070000 		lla	a4,.LANCHOR0
  32      13070700 
  33 0030 2334F700 		sd	a5,8(a4)
  18:src/MemoryAllocator.cpp **** 		freeMemHead->next = nullptr;
  34              		.loc 1 18 3 is_stmt 1
  35              		.loc 1 18 21 is_stmt 0
  36 0034 23B00700 		sd	zero,0(a5)
  19:src/MemoryAllocator.cpp **** 		freeMemHead->prev = nullptr;
GAS LISTING /tmp/ccco2gsb.s 			page 2


  37              		.loc 1 19 3 is_stmt 1
  38              		.loc 1 19 16 is_stmt 0
  39 0038 83368700 		ld	a3,8(a4)
  40              		.loc 1 19 21
  41 003c 23B40600 		sd	zero,8(a3)
  20:src/MemoryAllocator.cpp **** 		freeMemHead->size = (char*)HEAP_END_ADDR - (char*)HEAP_START_ADDR - sizeof(FreeMemSegment);
  42              		.loc 1 20 3 is_stmt 1
  43              		.loc 1 20 23 is_stmt 0
  44 0040 97070000 		la	a5,HEAP_END_ADDR
  44      83B70700 
  45 0048 83B70700 		ld	a5,0(a5)
  46              		.loc 1 20 46
  47 004c 03360600 		ld	a2,0(a2)
  48              		.loc 1 20 44
  49 0050 B387C740 		sub	a5,a5,a2
  50              		.loc 1 20 69
  51 0054 938787FE 		addi	a5,a5,-24
  52              		.loc 1 20 21
  53 0058 23B8F600 		sd	a5,16(a3)
  21:src/MemoryAllocator.cpp **** 		usedMemHead = nullptr;
  54              		.loc 1 21 3 is_stmt 1
  55              		.loc 1 21 15 is_stmt 0
  56 005c 23380700 		sd	zero,16(a4)
  22:src/MemoryAllocator.cpp **** 
  23:src/MemoryAllocator.cpp **** 		initialized = true;
  57              		.loc 1 23 3 is_stmt 1
  58              		.loc 1 23 15 is_stmt 0
  59 0060 93071000 		li	a5,1
  60 0064 2300F700 		sb	a5,0(a4)
  61              	.L3:
  24:src/MemoryAllocator.cpp **** 	}
  25:src/MemoryAllocator.cpp **** 
  26:src/MemoryAllocator.cpp **** 	//alokacija uvek zaokruzena na blokove
  27:src/MemoryAllocator.cpp **** 	//size += sizeof(UsedMemSegment); ;prebaceno u mem_alloc
  28:src/MemoryAllocator.cpp **** 	size_t blocks = size / MEM_BLOCK_SIZE + (size % MEM_BLOCK_SIZE ? 1 : 0);
  62              		.loc 1 28 2 is_stmt 1
  63              		.loc 1 28 23 is_stmt 0
  64 0068 93576500 		srli	a5,a0,6
  65              		.loc 1 28 48
  66 006c 1375F503 		andi	a0,a0,63
  67              	.LVL1:
  68              		.loc 1 28 65
  69 0070 63040500 		beqz	a0,.L4
  70 0074 13051000 		li	a0,1
  71              	.L4:
  72              		.loc 1 28 9 discriminator 4
  73 0078 3385A700 		add	a0,a5,a0
  74              	.LVL2:
  29:src/MemoryAllocator.cpp **** 	size = blocks * MEM_BLOCK_SIZE;
  75              		.loc 1 29 2 is_stmt 1 discriminator 4
  76              		.loc 1 29 7 is_stmt 0 discriminator 4
  77 007c 93176500 		slli	a5,a0,6
  78              	.LVL3:
  30:src/MemoryAllocator.cpp **** 
  31:src/MemoryAllocator.cpp **** 	//trazenje slobodnog segmenta po first-fit algoritmu
  32:src/MemoryAllocator.cpp **** 	for (FreeMemSegment* current = freeMemHead; current; current = current->next) {
  79              		.loc 1 32 2 is_stmt 1 discriminator 4
GAS LISTING /tmp/ccco2gsb.s 			page 3


  80              	.LBB2:
  81              		.loc 1 32 23 is_stmt 0 discriminator 4
  82 0080 17050000 		ld	a0,.LANCHOR0+8
  82      03350500 
  83              	.LVL4:
  84              	.L6:
  85              		.loc 1 32 46 is_stmt 1 discriminator 1
  86 0088 6300050A 		beqz	a0,.L1
  87              	.LBB3:
  33:src/MemoryAllocator.cpp **** 		if (current->size < size) continue;
  88              		.loc 1 33 3
  89              		.loc 1 33 16 is_stmt 0
  90 008c 03370501 		ld	a4,16(a0)
  91              		.loc 1 33 3
  92 0090 6368F706 		bltu	a4,a5,.L16
  34:src/MemoryAllocator.cpp **** 
  35:src/MemoryAllocator.cpp **** 		//pravljenje novog slobodnog fragmenta od ostatka fragmenta
  36:src/MemoryAllocator.cpp **** 		FreeMemSegment* remainderFree = (FreeMemSegment*)((char*)current + size);
  93              		.loc 1 36 3 is_stmt 1
  94              		.loc 1 36 19 is_stmt 0
  95 0094 B306F500 		add	a3,a0,a5
  96              	.LVL5:
  37:src/MemoryAllocator.cpp **** 		remainderFree->size = current->size - size;
  97              		.loc 1 37 3 is_stmt 1
  98              		.loc 1 37 39 is_stmt 0
  99 0098 3307F740 		sub	a4,a4,a5
 100              		.loc 1 37 23
 101 009c 23B8E600 		sd	a4,16(a3)
  38:src/MemoryAllocator.cpp **** 		remainderFree->prev = current->prev;
 102              		.loc 1 38 3 is_stmt 1
 103              		.loc 1 38 34 is_stmt 0
 104 00a0 03378500 		ld	a4,8(a0)
 105              		.loc 1 38 23
 106 00a4 23B4E600 		sd	a4,8(a3)
  39:src/MemoryAllocator.cpp **** 		if (current->prev) current->prev->next = remainderFree;
 107              		.loc 1 39 3 is_stmt 1
 108 00a8 63040700 		beqz	a4,.L7
 109              		.loc 1 39 22 discriminator 1
 110              		.loc 1 39 42 is_stmt 0 discriminator 1
 111 00ac 2330D700 		sd	a3,0(a4)
 112              	.L7:
  40:src/MemoryAllocator.cpp **** 		remainderFree->next = current->next;
 113              		.loc 1 40 3 is_stmt 1
 114              		.loc 1 40 34 is_stmt 0
 115 00b0 03370500 		ld	a4,0(a0)
 116              		.loc 1 40 23
 117 00b4 23B0E600 		sd	a4,0(a3)
  41:src/MemoryAllocator.cpp **** 		if (current->next) current->next->prev = remainderFree;
 118              		.loc 1 41 3 is_stmt 1
 119 00b8 63040700 		beqz	a4,.L8
 120              		.loc 1 41 22 discriminator 1
 121              		.loc 1 41 42 is_stmt 0 discriminator 1
 122 00bc 2334D700 		sd	a3,8(a4)
 123              	.L8:
  42:src/MemoryAllocator.cpp **** 		if (freeMemHead == current) freeMemHead = remainderFree;
 124              		.loc 1 42 3 is_stmt 1
 125              		.loc 1 42 19 is_stmt 0
GAS LISTING /tmp/ccco2gsb.s 			page 4


 126 00c0 17070000 		ld	a4,.LANCHOR0+8
 126      03370700 
 127              		.loc 1 42 3
 128 00c8 6300A704 		beq	a4,a0,.L17
 129              	.L9:
  43:src/MemoryAllocator.cpp **** 
  44:src/MemoryAllocator.cpp **** 		//ubacivanje novog fragmenta u listu zauzetih fragmenata
  45:src/MemoryAllocator.cpp **** 		UsedMemSegment* newFragment = (UsedMemSegment*)current;
 130              		.loc 1 45 3 is_stmt 1
 131              	.LVL6:
  46:src/MemoryAllocator.cpp **** 		newFragment->size = size;
 132              		.loc 1 46 3
 133              		.loc 1 46 21 is_stmt 0
 134 00cc 2334F500 		sd	a5,8(a0)
  47:src/MemoryAllocator.cpp **** 		newFragment->purpose = pur;
 135              		.loc 1 47 3 is_stmt 1
 136              		.loc 1 47 24 is_stmt 0
 137 00d0 2328B500 		sw	a1,16(a0)
  48:src/MemoryAllocator.cpp **** 		newFragment->usableFirstAddress = (char*)newFragment + sizeof(UsedMemSegment);
 138              		.loc 1 48 3 is_stmt 1
 139              		.loc 1 48 56 is_stmt 0
 140 00d4 93070502 		addi	a5,a0,32
 141              	.LVL7:
 142              		.loc 1 48 35
 143 00d8 233CF500 		sd	a5,24(a0)
  49:src/MemoryAllocator.cpp **** 		UsedMemSegment* prevUsed = nullptr;
 144              		.loc 1 49 3 is_stmt 1
 145              	.LVL8:
  50:src/MemoryAllocator.cpp **** 		for (UsedMemSegment* cur = usedMemHead; cur && cur < newFragment; prevUsed = cur, cur = cur->next
 146              		.loc 1 50 3
 147              	.LBB4:
 148              		.loc 1 50 24 is_stmt 0
 149 00dc 97060000 		ld	a3,.LANCHOR0+16
 149      83B60600 
 150              	.LVL9:
 151 00e4 93870600 		mv	a5,a3
 152              	.LBE4:
  49:src/MemoryAllocator.cpp **** 		UsedMemSegment* prevUsed = nullptr;
 153              		.loc 1 49 19
 154 00e8 13070000 		li	a4,0
 155              	.LVL10:
 156              	.L11:
 157              	.LBB5:
 158              		.loc 1 50 47 is_stmt 1 discriminator 4
 159 00ec 63840702 		beqz	a5,.L10
 160              		.loc 1 50 47 is_stmt 0 discriminator 2
 161 00f0 63F2A702 		bleu	a0,a5,.L10
 162              		.loc 1 50 3 is_stmt 1 discriminator 3
 163              	.LVL11:
 164              		.loc 1 50 78 is_stmt 0 discriminator 3
 165 00f4 13870700 		mv	a4,a5
 166              		.loc 1 50 89 discriminator 3
 167 00f8 83B70700 		ld	a5,0(a5)
 168              	.LVL12:
 169              		.loc 1 50 3 discriminator 3
 170 00fc 6FF01FFF 		j	.L11
 171              	.LVL13:
GAS LISTING /tmp/ccco2gsb.s 			page 5


 172              	.L16:
 173              	.LBE5:
  33:src/MemoryAllocator.cpp **** 
 174              		.loc 1 33 29 is_stmt 1 discriminator 1
 175              	.LBE3:
  32:src/MemoryAllocator.cpp **** 		if (current->size < size) continue;
 176              		.loc 1 32 2 discriminator 1
  32:src/MemoryAllocator.cpp **** 		if (current->size < size) continue;
 177              		.loc 1 32 63 is_stmt 0 discriminator 1
 178 0100 03350500 		ld	a0,0(a0)
 179              	.LVL14:
  32:src/MemoryAllocator.cpp **** 		if (current->size < size) continue;
 180              		.loc 1 32 2 discriminator 1
 181 0104 6FF05FF8 		j	.L6
 182              	.LVL15:
 183              	.L17:
 184              	.LBB6:
  42:src/MemoryAllocator.cpp **** 
 185              		.loc 1 42 31 is_stmt 1 discriminator 1
  42:src/MemoryAllocator.cpp **** 
 186              		.loc 1 42 43 is_stmt 0 discriminator 1
 187 0108 17070000 		sd	a3,.LANCHOR0+8,a4
 187      2330D700 
 188 0110 6FF0DFFB 		j	.L9
 189              	.LVL16:
 190              	.L10:
  51:src/MemoryAllocator.cpp **** 		if (!prevUsed) {
 191              		.loc 1 51 3 is_stmt 1
 192 0114 63000702 		beqz	a4,.L18
  52:src/MemoryAllocator.cpp **** 			newFragment->next = usedMemHead;
  53:src/MemoryAllocator.cpp **** 			usedMemHead = newFragment;
  54:src/MemoryAllocator.cpp **** 		} else {
  55:src/MemoryAllocator.cpp **** 			newFragment->next = prevUsed->next;
 193              		.loc 1 55 4
 194              		.loc 1 55 34 is_stmt 0
 195 0118 83370700 		ld	a5,0(a4)
 196              	.LVL17:
 197              		.loc 1 55 22
 198 011c 2330F500 		sd	a5,0(a0)
  56:src/MemoryAllocator.cpp **** 			prevUsed->next = newFragment;
 199              		.loc 1 56 4 is_stmt 1
 200              		.loc 1 56 19 is_stmt 0
 201 0120 2330A700 		sd	a0,0(a4)
 202              	.LVL18:
 203              	.L13:
  57:src/MemoryAllocator.cpp **** 		}
  58:src/MemoryAllocator.cpp **** 		//return (char*)newFragment + sizeof(UsedMemSegment);
  59:src/MemoryAllocator.cpp **** 		return newFragment->usableFirstAddress;
 204              		.loc 1 59 3 is_stmt 1
 205              		.loc 1 59 23 is_stmt 0
 206 0124 03358501 		ld	a0,24(a0)
 207              	.LVL19:
 208              	.L1:
 209              	.LBE6:
 210              	.LBE2:
  60:src/MemoryAllocator.cpp **** 	}
  61:src/MemoryAllocator.cpp **** 	return nullptr;
GAS LISTING /tmp/ccco2gsb.s 			page 6


  62:src/MemoryAllocator.cpp **** }
 211              		.loc 1 62 1
 212 0128 03348100 		ld	s0,8(sp)
 213              		.cfi_remember_state
 214              		.cfi_restore 8
 215              		.cfi_def_cfa 2, 16
 216 012c 13010101 		addi	sp,sp,16
 217              		.cfi_def_cfa_offset 0
 218 0130 67800000 		jr	ra
 219              	.LVL20:
 220              	.L18:
 221              		.cfi_restore_state
 222              	.LBB8:
 223              	.LBB7:
  52:src/MemoryAllocator.cpp **** 			usedMemHead = newFragment;
 224              		.loc 1 52 4 is_stmt 1
  52:src/MemoryAllocator.cpp **** 			usedMemHead = newFragment;
 225              		.loc 1 52 22 is_stmt 0
 226 0134 2330D500 		sd	a3,0(a0)
  53:src/MemoryAllocator.cpp **** 		} else {
 227              		.loc 1 53 4 is_stmt 1
  53:src/MemoryAllocator.cpp **** 		} else {
 228              		.loc 1 53 16 is_stmt 0
 229 0138 97070000 		sd	a0,.LANCHOR0+16,a5
 229      23B0A700 
 230              	.LVL21:
 231 0140 6FF05FFE 		j	.L13
 232              	.LVL22:
 233              	.L14:
 234              	.LBE7:
 235              	.LBE8:
  13:src/MemoryAllocator.cpp **** 
 236              		.loc 1 13 24
 237 0144 13050000 		li	a0,0
 238              	.LVL23:
 239 0148 6FF01FFE 		j	.L1
 240              		.cfi_endproc
 241              	.LFE3:
 243              		.align	2
 244              		.globl	_ZN15MemoryAllocator9tryToJoinEPNS_14FreeMemSegmentE
 246              	_ZN15MemoryAllocator9tryToJoinEPNS_14FreeMemSegmentE:
 247              	.LFB5:
  63:src/MemoryAllocator.cpp **** 
  64:src/MemoryAllocator.cpp **** int MemoryAllocator::kfree(void* ptr) {
  65:src/MemoryAllocator.cpp **** 	if (!ptr) return 0;
  66:src/MemoryAllocator.cpp **** 	if (!usedMemHead) return -1;
  67:src/MemoryAllocator.cpp **** 	ptr = (char*)ptr - sizeof(UsedMemSegment);
  68:src/MemoryAllocator.cpp **** 	//trazenje adrese ptr u listi zauzetih segmenata
  69:src/MemoryAllocator.cpp **** 	UsedMemSegment* currentUsed = usedMemHead;
  70:src/MemoryAllocator.cpp **** 	UsedMemSegment* prevUsed = nullptr;
  71:src/MemoryAllocator.cpp **** 	for (; currentUsed && currentUsed != ptr; prevUsed = currentUsed, currentUsed = currentUsed->next)
  72:src/MemoryAllocator.cpp **** 	if (currentUsed != ptr) return -1;    //adresa ne odgovara segmentu alociranom preko kmalloc
  73:src/MemoryAllocator.cpp **** 
  74:src/MemoryAllocator.cpp **** 	//prevezivanje liste zauzetih segmenata
  75:src/MemoryAllocator.cpp **** 	if (prevUsed) prevUsed->next = currentUsed->next;
  76:src/MemoryAllocator.cpp **** 	else usedMemHead = currentUsed->next;
  77:src/MemoryAllocator.cpp **** 
GAS LISTING /tmp/ccco2gsb.s 			page 7


  78:src/MemoryAllocator.cpp **** 	//oslobadjanje segmenta i ubacivanje u listu slobodnih
  79:src/MemoryAllocator.cpp **** 	FreeMemSegment* prevFree = nullptr;
  80:src/MemoryAllocator.cpp **** 	if (!freeMemHead || ptr < (char*)freeMemHead) {
  81:src/MemoryAllocator.cpp **** 		prevFree = nullptr;
  82:src/MemoryAllocator.cpp **** 	} else {
  83:src/MemoryAllocator.cpp **** 		for (prevFree = freeMemHead;
  84:src/MemoryAllocator.cpp **** 			 prevFree->next != nullptr && ptr > (char*)(prevFree->next); prevFree = prevFree->next);
  85:src/MemoryAllocator.cpp **** 	}
  86:src/MemoryAllocator.cpp **** 	FreeMemSegment* newFree = (FreeMemSegment*)ptr;
  87:src/MemoryAllocator.cpp **** 	size_t segmentSize = ((UsedMemSegment*)ptr)->size;
  88:src/MemoryAllocator.cpp **** 	newFree->size = segmentSize;
  89:src/MemoryAllocator.cpp **** 	newFree->prev = prevFree;
  90:src/MemoryAllocator.cpp **** 	if (prevFree) newFree->next = prevFree->next;
  91:src/MemoryAllocator.cpp **** 	else newFree->next = freeMemHead;
  92:src/MemoryAllocator.cpp **** 	if (newFree->next) newFree->next->prev = newFree;
  93:src/MemoryAllocator.cpp **** 	if (prevFree) prevFree->next = newFree;
  94:src/MemoryAllocator.cpp **** 	else freeMemHead = newFree;
  95:src/MemoryAllocator.cpp **** 
  96:src/MemoryAllocator.cpp **** 	//spajanje uzastopnih slobodnih segmenata
  97:src/MemoryAllocator.cpp **** 	tryToJoin(newFree);
  98:src/MemoryAllocator.cpp **** 	tryToJoin(prevFree);
  99:src/MemoryAllocator.cpp **** 	return 0;
 100:src/MemoryAllocator.cpp **** }
 101:src/MemoryAllocator.cpp **** 
 102:src/MemoryAllocator.cpp **** int MemoryAllocator::tryToJoin(MemoryAllocator::FreeMemSegment* current) {
 248              		.loc 1 102 74 is_stmt 1
 249              		.cfi_startproc
 250              	.LVL24:
 251 014c 130101FF 		addi	sp,sp,-16
 252              		.cfi_def_cfa_offset 16
 253 0150 23348100 		sd	s0,8(sp)
 254              		.cfi_offset 8, -8
 255 0154 13040101 		addi	s0,sp,16
 256              		.cfi_def_cfa 8, 0
 103:src/MemoryAllocator.cpp **** 	if (!current) return 0;
 257              		.loc 1 103 2
 258 0158 63060504 		beqz	a0,.L22
 104:src/MemoryAllocator.cpp **** 	bool nextExists = current->next != nullptr;
 259              		.loc 1 104 2
 260              		.loc 1 104 29 is_stmt 0
 261 015c 83370500 		ld	a5,0(a0)
 262              	.LVL25:
 105:src/MemoryAllocator.cpp **** 	char* nextAddr = (char*)current + current->size;
 263              		.loc 1 105 2 is_stmt 1
 264              		.loc 1 105 45 is_stmt 0
 265 0160 03370501 		ld	a4,16(a0)
 266              		.loc 1 105 8
 267 0164 B306E500 		add	a3,a0,a4
 268              	.LVL26:
 106:src/MemoryAllocator.cpp **** 	char* cnext = (char*)current->next;
 269              		.loc 1 106 2 is_stmt 1
 107:src/MemoryAllocator.cpp **** 	bool nextIsConnected = (nextAddr == cnext);
 270              		.loc 1 107 2
 108:src/MemoryAllocator.cpp **** 	if (nextExists && nextIsConnected) {
 271              		.loc 1 108 2
 272 0168 63820704 		beqz	a5,.L23
 273              		.loc 1 108 17 is_stmt 0 discriminator 1
GAS LISTING /tmp/ccco2gsb.s 			page 8


 274 016c 638AD700 		beq	a5,a3,.L26
 109:src/MemoryAllocator.cpp **** 		current->size += current->next->size;
 110:src/MemoryAllocator.cpp **** 		current->next = current->next->next;
 111:src/MemoryAllocator.cpp **** 		if (current->next) current->next->prev = current;
 112:src/MemoryAllocator.cpp **** 		return 1;
 113:src/MemoryAllocator.cpp **** 	} else return 0;
 275              		.loc 1 113 16
 276 0170 13050000 		li	a0,0
 277              	.LVL27:
 278              	.L20:
 114:src/MemoryAllocator.cpp **** }
 279              		.loc 1 114 1
 280 0174 03348100 		ld	s0,8(sp)
 281              		.cfi_remember_state
 282              		.cfi_restore 8
 283              		.cfi_def_cfa 2, 16
 284 0178 13010101 		addi	sp,sp,16
 285              		.cfi_def_cfa_offset 0
 286 017c 67800000 		jr	ra
 287              	.LVL28:
 288              	.L26:
 289              		.cfi_restore_state
 109:src/MemoryAllocator.cpp **** 		current->size += current->next->size;
 290              		.loc 1 109 3 is_stmt 1
 109:src/MemoryAllocator.cpp **** 		current->size += current->next->size;
 291              		.loc 1 109 35 is_stmt 0
 292 0180 83B60701 		ld	a3,16(a5)
 293              	.LVL29:
 109:src/MemoryAllocator.cpp **** 		current->size += current->next->size;
 294              		.loc 1 109 17
 295 0184 3307D700 		add	a4,a4,a3
 296              	.LVL30:
 297 0188 2338E500 		sd	a4,16(a0)
 298              	.LVL31:
 110:src/MemoryAllocator.cpp **** 		if (current->next) current->next->prev = current;
 299              		.loc 1 110 3 is_stmt 1
 110:src/MemoryAllocator.cpp **** 		if (current->next) current->next->prev = current;
 300              		.loc 1 110 34 is_stmt 0
 301 018c 83B70700 		ld	a5,0(a5)
 302              	.LVL32:
 110:src/MemoryAllocator.cpp **** 		if (current->next) current->next->prev = current;
 303              		.loc 1 110 17
 304 0190 2330F500 		sd	a5,0(a0)
 305              	.LVL33:
 111:src/MemoryAllocator.cpp **** 		return 1;
 306              		.loc 1 111 3 is_stmt 1
 307 0194 63840700 		beqz	a5,.L21
 111:src/MemoryAllocator.cpp **** 		return 1;
 308              		.loc 1 111 22 discriminator 1
 111:src/MemoryAllocator.cpp **** 		return 1;
 309              		.loc 1 111 42 is_stmt 0 discriminator 1
 310 0198 23B4A700 		sd	a0,8(a5)
 311              	.L21:
 112:src/MemoryAllocator.cpp **** 	} else return 0;
 312              		.loc 1 112 3 is_stmt 1
 112:src/MemoryAllocator.cpp **** 	} else return 0;
 313              		.loc 1 112 10 is_stmt 0
GAS LISTING /tmp/ccco2gsb.s 			page 9


 314 019c 13051000 		li	a0,1
 315              	.LVL34:
 316 01a0 6FF05FFD 		j	.L20
 317              	.LVL35:
 318              	.L22:
 103:src/MemoryAllocator.cpp **** 	bool nextExists = current->next != nullptr;
 319              		.loc 1 103 23
 320 01a4 13050000 		li	a0,0
 321              	.LVL36:
 322 01a8 6FF0DFFC 		j	.L20
 323              	.LVL37:
 324              	.L23:
 113:src/MemoryAllocator.cpp **** }
 325              		.loc 1 113 16
 326 01ac 13050000 		li	a0,0
 327              	.LVL38:
 328 01b0 6FF05FFC 		j	.L20
 329              		.cfi_endproc
 330              	.LFE5:
 332              		.align	2
 333              		.globl	_ZN15MemoryAllocator5kfreeEPv
 335              	_ZN15MemoryAllocator5kfreeEPv:
 336              	.LFB4:
  64:src/MemoryAllocator.cpp **** 	if (!ptr) return 0;
 337              		.loc 1 64 39 is_stmt 1
 338              		.cfi_startproc
 339              	.LVL39:
  65:src/MemoryAllocator.cpp **** 	if (!usedMemHead) return -1;
 340              		.loc 1 65 2
 341 01b4 63040510 		beqz	a0,.L40
 342 01b8 93060500 		mv	a3,a0
  66:src/MemoryAllocator.cpp **** 	ptr = (char*)ptr - sizeof(UsedMemSegment);
 343              		.loc 1 66 2
  66:src/MemoryAllocator.cpp **** 	ptr = (char*)ptr - sizeof(UsedMemSegment);
 344              		.loc 1 66 6 is_stmt 0
 345 01bc 97070000 		ld	a5,.LANCHOR0+16
 345      83B70700 
  66:src/MemoryAllocator.cpp **** 	ptr = (char*)ptr - sizeof(UsedMemSegment);
 346              		.loc 1 66 2
 347 01c4 63800710 		beqz	a5,.L41
  67:src/MemoryAllocator.cpp **** 	//trazenje adrese ptr u listi zauzetih segmenata
 348              		.loc 1 67 2 is_stmt 1
  67:src/MemoryAllocator.cpp **** 	//trazenje adrese ptr u listi zauzetih segmenata
 349              		.loc 1 67 6 is_stmt 0
 350 01c8 130505FE 		addi	a0,a0,-32
 351              	.LVL40:
  69:src/MemoryAllocator.cpp **** 	UsedMemSegment* prevUsed = nullptr;
 352              		.loc 1 69 2 is_stmt 1
  70:src/MemoryAllocator.cpp **** 	for (; currentUsed && currentUsed != ptr; prevUsed = currentUsed, currentUsed = currentUsed->next)
 353              		.loc 1 70 2
  70:src/MemoryAllocator.cpp **** 	for (; currentUsed && currentUsed != ptr; prevUsed = currentUsed, currentUsed = currentUsed->next)
 354              		.loc 1 70 18 is_stmt 0
 355 01cc 13070000 		li	a4,0
 356              	.LVL41:
 357              	.L30:
  71:src/MemoryAllocator.cpp **** 	if (currentUsed != ptr) return -1;    //adresa ne odgovara segmentu alociranom preko kmalloc
 358              		.loc 1 71 2 is_stmt 1 discriminator 3
GAS LISTING /tmp/ccco2gsb.s 			page 10


  71:src/MemoryAllocator.cpp **** 	if (currentUsed != ptr) return -1;    //adresa ne odgovara segmentu alociranom preko kmalloc
 359              		.loc 1 71 21 discriminator 3
 360 01d0 638A0700 		beqz	a5,.L29
  71:src/MemoryAllocator.cpp **** 	if (currentUsed != ptr) return -1;    //adresa ne odgovara segmentu alociranom preko kmalloc
 361              		.loc 1 71 21 is_stmt 0 discriminator 1
 362 01d4 6388A700 		beq	a5,a0,.L29
  71:src/MemoryAllocator.cpp **** 	if (currentUsed != ptr) return -1;    //adresa ne odgovara segmentu alociranom preko kmalloc
 363              		.loc 1 71 2 is_stmt 1 discriminator 2
 364              	.LVL42:
  71:src/MemoryAllocator.cpp **** 	if (currentUsed != ptr) return -1;    //adresa ne odgovara segmentu alociranom preko kmalloc
 365              		.loc 1 71 53 is_stmt 0 discriminator 2
 366 01d8 13870700 		mv	a4,a5
  71:src/MemoryAllocator.cpp **** 	if (currentUsed != ptr) return -1;    //adresa ne odgovara segmentu alociranom preko kmalloc
 367              		.loc 1 71 80 discriminator 2
 368 01dc 83B70700 		ld	a5,0(a5)
 369              	.LVL43:
  71:src/MemoryAllocator.cpp **** 	if (currentUsed != ptr) return -1;    //adresa ne odgovara segmentu alociranom preko kmalloc
 370              		.loc 1 71 2 discriminator 2
 371 01e0 6FF01FFF 		j	.L30
 372              	.L29:
  72:src/MemoryAllocator.cpp **** 
 373              		.loc 1 72 2 is_stmt 1
 374 01e4 6394A70E 		bne	a5,a0,.L42
  64:src/MemoryAllocator.cpp **** 	if (!ptr) return 0;
 375              		.loc 1 64 39 is_stmt 0
 376 01e8 130101FE 		addi	sp,sp,-32
 377              		.cfi_def_cfa_offset 32
 378 01ec 233C1100 		sd	ra,24(sp)
 379 01f0 23388100 		sd	s0,16(sp)
 380 01f4 23349100 		sd	s1,8(sp)
 381              		.cfi_offset 1, -8
 382              		.cfi_offset 8, -16
 383              		.cfi_offset 9, -24
 384 01f8 13040102 		addi	s0,sp,32
 385              		.cfi_def_cfa 8, 0
  75:src/MemoryAllocator.cpp **** 	else usedMemHead = currentUsed->next;
 386              		.loc 1 75 2 is_stmt 1
 387 01fc 63080702 		beqz	a4,.L31
  75:src/MemoryAllocator.cpp **** 	else usedMemHead = currentUsed->next;
 388              		.loc 1 75 16 discriminator 1
  75:src/MemoryAllocator.cpp **** 	else usedMemHead = currentUsed->next;
 389              		.loc 1 75 46 is_stmt 0 discriminator 1
 390 0200 83B70700 		ld	a5,0(a5)
 391              	.LVL44:
  75:src/MemoryAllocator.cpp **** 	else usedMemHead = currentUsed->next;
 392              		.loc 1 75 31 discriminator 1
 393 0204 2330F700 		sd	a5,0(a4)
 394              	.LVL45:
 395              	.L32:
  79:src/MemoryAllocator.cpp **** 	if (!freeMemHead || ptr < (char*)freeMemHead) {
 396              		.loc 1 79 2 is_stmt 1
  80:src/MemoryAllocator.cpp **** 		prevFree = nullptr;
 397              		.loc 1 80 2
  80:src/MemoryAllocator.cpp **** 		prevFree = nullptr;
 398              		.loc 1 80 6 is_stmt 0
 399 0208 97070000 		ld	a5,.LANCHOR0+8
 399      83B70700 
GAS LISTING /tmp/ccco2gsb.s 			page 11


  80:src/MemoryAllocator.cpp **** 		prevFree = nullptr;
 400              		.loc 1 80 2
 401 0210 63860702 		beqz	a5,.L43
  80:src/MemoryAllocator.cpp **** 		prevFree = nullptr;
 402              		.loc 1 80 19 discriminator 1
 403 0214 6368F502 		bgtu	a5,a0,.L44
 404              	.LVL46:
 405              	.L34:
  84:src/MemoryAllocator.cpp **** 	}
 406              		.loc 1 84 31 is_stmt 1 discriminator 3
 407 0218 93840700 		mv	s1,a5
  84:src/MemoryAllocator.cpp **** 	}
 408              		.loc 1 84 15 is_stmt 0 discriminator 3
 409 021c 83B70700 		ld	a5,0(a5)
 410              	.LVL47:
  84:src/MemoryAllocator.cpp **** 	}
 411              		.loc 1 84 31 discriminator 3
 412 0220 63840702 		beqz	a5,.L33
  84:src/MemoryAllocator.cpp **** 	}
 413              		.loc 1 84 31 discriminator 1
 414 0224 E3EAA7FE 		bltu	a5,a0,.L34
 415 0228 6F000002 		j	.L33
 416              	.LVL48:
 417              	.L31:
  76:src/MemoryAllocator.cpp **** 
 418              		.loc 1 76 7 is_stmt 1
  76:src/MemoryAllocator.cpp **** 
 419              		.loc 1 76 34 is_stmt 0
 420 022c 83B70700 		ld	a5,0(a5)
 421              	.LVL49:
  76:src/MemoryAllocator.cpp **** 
 422              		.loc 1 76 19
 423 0230 17070000 		sd	a5,.LANCHOR0+16,a4
 423      2330F700 
 424              	.LVL50:
 425 0238 6FF01FFD 		j	.L32
 426              	.LVL51:
 427              	.L43:
  81:src/MemoryAllocator.cpp **** 	} else {
 428              		.loc 1 81 12
 429 023c 93840700 		mv	s1,a5
 430 0240 6F008000 		j	.L33
 431              	.L44:
 432 0244 93040000 		li	s1,0
 433              	.LVL52:
 434              	.L33:
  86:src/MemoryAllocator.cpp **** 	size_t segmentSize = ((UsedMemSegment*)ptr)->size;
 435              		.loc 1 86 2 is_stmt 1
  87:src/MemoryAllocator.cpp **** 	newFree->size = segmentSize;
 436              		.loc 1 87 2
  87:src/MemoryAllocator.cpp **** 	newFree->size = segmentSize;
 437              		.loc 1 87 9 is_stmt 0
 438 0248 83B786FE 		ld	a5,-24(a3)
 439              	.LVL53:
  88:src/MemoryAllocator.cpp **** 	newFree->prev = prevFree;
 440              		.loc 1 88 2 is_stmt 1
  88:src/MemoryAllocator.cpp **** 	newFree->prev = prevFree;
GAS LISTING /tmp/ccco2gsb.s 			page 12


 441              		.loc 1 88 16 is_stmt 0
 442 024c 23B8F6FE 		sd	a5,-16(a3)
  89:src/MemoryAllocator.cpp **** 	if (prevFree) newFree->next = prevFree->next;
 443              		.loc 1 89 2 is_stmt 1
  89:src/MemoryAllocator.cpp **** 	if (prevFree) newFree->next = prevFree->next;
 444              		.loc 1 89 16 is_stmt 0
 445 0250 23B496FE 		sd	s1,-24(a3)
  90:src/MemoryAllocator.cpp **** 	else newFree->next = freeMemHead;
 446              		.loc 1 90 2 is_stmt 1
 447 0254 63860404 		beqz	s1,.L35
  90:src/MemoryAllocator.cpp **** 	else newFree->next = freeMemHead;
 448              		.loc 1 90 16 discriminator 1
  90:src/MemoryAllocator.cpp **** 	else newFree->next = freeMemHead;
 449              		.loc 1 90 42 is_stmt 0 discriminator 1
 450 0258 83B70400 		ld	a5,0(s1)
 451              	.LVL54:
  90:src/MemoryAllocator.cpp **** 	else newFree->next = freeMemHead;
 452              		.loc 1 90 30 discriminator 1
 453 025c 23B0F6FE 		sd	a5,-32(a3)
 454              	.L36:
  92:src/MemoryAllocator.cpp **** 	if (prevFree) prevFree->next = newFree;
 455              		.loc 1 92 2 is_stmt 1
  92:src/MemoryAllocator.cpp **** 	if (prevFree) prevFree->next = newFree;
 456              		.loc 1 92 15 is_stmt 0
 457 0260 83B706FE 		ld	a5,-32(a3)
  92:src/MemoryAllocator.cpp **** 	if (prevFree) prevFree->next = newFree;
 458              		.loc 1 92 2
 459 0264 63840700 		beqz	a5,.L37
  92:src/MemoryAllocator.cpp **** 	if (prevFree) prevFree->next = newFree;
 460              		.loc 1 92 21 is_stmt 1 discriminator 1
  92:src/MemoryAllocator.cpp **** 	if (prevFree) prevFree->next = newFree;
 461              		.loc 1 92 41 is_stmt 0 discriminator 1
 462 0268 23B4A700 		sd	a0,8(a5)
 463              	.LVL55:
 464              	.L37:
  93:src/MemoryAllocator.cpp **** 	else freeMemHead = newFree;
 465              		.loc 1 93 2 is_stmt 1
 466 026c 63820404 		beqz	s1,.L38
  93:src/MemoryAllocator.cpp **** 	else freeMemHead = newFree;
 467              		.loc 1 93 16 discriminator 1
  93:src/MemoryAllocator.cpp **** 	else freeMemHead = newFree;
 468              		.loc 1 93 31 is_stmt 0 discriminator 1
 469 0270 23B0A400 		sd	a0,0(s1)
 470              	.L39:
  97:src/MemoryAllocator.cpp **** 	tryToJoin(prevFree);
 471              		.loc 1 97 2 is_stmt 1
  97:src/MemoryAllocator.cpp **** 	tryToJoin(prevFree);
 472              		.loc 1 97 11 is_stmt 0
 473 0274 97000000 		call	_ZN15MemoryAllocator9tryToJoinEPNS_14FreeMemSegmentE
 473      E7800000 
 474              	.LVL56:
  98:src/MemoryAllocator.cpp **** 	return 0;
 475              		.loc 1 98 2 is_stmt 1
  98:src/MemoryAllocator.cpp **** 	return 0;
 476              		.loc 1 98 11 is_stmt 0
 477 027c 13850400 		mv	a0,s1
 478 0280 97000000 		call	_ZN15MemoryAllocator9tryToJoinEPNS_14FreeMemSegmentE
GAS LISTING /tmp/ccco2gsb.s 			page 13


 478      E7800000 
 479              	.LVL57:
  99:src/MemoryAllocator.cpp **** }
 480              		.loc 1 99 2 is_stmt 1
  99:src/MemoryAllocator.cpp **** }
 481              		.loc 1 99 9 is_stmt 0
 482 0288 13050000 		li	a0,0
 100:src/MemoryAllocator.cpp **** 
 483              		.loc 1 100 1
 484 028c 83308101 		ld	ra,24(sp)
 485              		.cfi_remember_state
 486              		.cfi_restore 1
 487 0290 03340101 		ld	s0,16(sp)
 488              		.cfi_restore 8
 489              		.cfi_def_cfa 2, 32
 490 0294 83348100 		ld	s1,8(sp)
 491              		.cfi_restore 9
 492              	.LVL58:
 493 0298 13010102 		addi	sp,sp,32
 494              		.cfi_def_cfa_offset 0
 495 029c 67800000 		jr	ra
 496              	.LVL59:
 497              	.L35:
 498              		.cfi_restore_state
  91:src/MemoryAllocator.cpp **** 	if (newFree->next) newFree->next->prev = newFree;
 499              		.loc 1 91 7 is_stmt 1
  91:src/MemoryAllocator.cpp **** 	if (newFree->next) newFree->next->prev = newFree;
 500              		.loc 1 91 21 is_stmt 0
 501 02a0 97070000 		ld	a5,.LANCHOR0+8
 501      83B70700 
 502              	.LVL60:
 503 02a8 23B0F6FE 		sd	a5,-32(a3)
 504 02ac 6FF05FFB 		j	.L36
 505              	.LVL61:
 506              	.L38:
  94:src/MemoryAllocator.cpp **** 
 507              		.loc 1 94 7 is_stmt 1
  94:src/MemoryAllocator.cpp **** 
 508              		.loc 1 94 19 is_stmt 0
 509 02b0 97070000 		sd	a0,.LANCHOR0+8,a5
 509      23B0A700 
 510 02b8 6FF0DFFB 		j	.L39
 511              	.LVL62:
 512              	.L40:
 513              		.cfi_def_cfa_register 2
 514              		.cfi_restore 1
 515              		.cfi_restore 8
 516              		.cfi_restore 9
  65:src/MemoryAllocator.cpp **** 	if (!usedMemHead) return -1;
 517              		.loc 1 65 19
 518 02bc 13050000 		li	a0,0
 519              	.LVL63:
 520 02c0 67800000 		ret
 521              	.LVL64:
 522              	.L41:
  66:src/MemoryAllocator.cpp **** 	ptr = (char*)ptr - sizeof(UsedMemSegment);
 523              		.loc 1 66 28
GAS LISTING /tmp/ccco2gsb.s 			page 14


 524 02c4 1305F0FF 		li	a0,-1
 525              	.LVL65:
 526 02c8 67800000 		ret
 527              	.LVL66:
 528              	.L42:
  72:src/MemoryAllocator.cpp **** 
 529              		.loc 1 72 34
 530 02cc 1305F0FF 		li	a0,-1
 531              	.LVL67:
 100:src/MemoryAllocator.cpp **** 
 532              		.loc 1 100 1
 533 02d0 67800000 		ret
 534              		.cfi_endproc
 535              	.LFE4:
 537              		.align	2
 538              		.globl	_ZN15MemoryAllocator12checkPurposeEPvNS_7PurposeE
 540              	_ZN15MemoryAllocator12checkPurposeEPvNS_7PurposeE:
 541              	.LFB6:
 115:src/MemoryAllocator.cpp **** 
 116:src/MemoryAllocator.cpp **** bool MemoryAllocator::checkPurpose(void* ptr, MemoryAllocator::Purpose p) {
 542              		.loc 1 116 75 is_stmt 1
 543              		.cfi_startproc
 544              	.LVL68:
 545 02d4 130101FF 		addi	sp,sp,-16
 546              		.cfi_def_cfa_offset 16
 547 02d8 23348100 		sd	s0,8(sp)
 548              		.cfi_offset 8, -8
 549 02dc 13040101 		addi	s0,sp,16
 550              		.cfi_def_cfa 8, 0
 117:src/MemoryAllocator.cpp **** 	ptr = (char*)ptr - sizeof(UsedMemSegment);
 551              		.loc 1 117 2
 552              	.LVL69:
 118:src/MemoryAllocator.cpp **** 	return ((UsedMemSegment*)ptr)->purpose == p;
 553              		.loc 1 118 2
 554              		.loc 1 118 33 is_stmt 0
 555 02e0 032505FF 		lw	a0,-16(a0)
 556              	.LVL70:
 557              		.loc 1 118 44
 558 02e4 3305B540 		sub	a0,a0,a1
 119:src/MemoryAllocator.cpp **** }
 559              		.loc 1 119 1
 560 02e8 13351500 		seqz	a0,a0
 561 02ec 03348100 		ld	s0,8(sp)
 562              		.cfi_restore 8
 563              		.cfi_def_cfa 2, 16
 564 02f0 13010101 		addi	sp,sp,16
 565              		.cfi_def_cfa_offset 0
 566 02f4 67800000 		jr	ra
 567              		.cfi_endproc
 568              	.LFE6:
 570              		.globl	_ZN15MemoryAllocator11usedMemHeadE
 571              		.globl	_ZN15MemoryAllocator11freeMemHeadE
 572              		.globl	_ZN15MemoryAllocator11initializedE
 573              		.bss
 574              		.align	3
 575              		.set	.LANCHOR0,. + 0
 578              	_ZN15MemoryAllocator11initializedE:
GAS LISTING /tmp/ccco2gsb.s 			page 15


 579 0000 00       		.zero	1
 580 0001 00000000 		.zero	7
 580      000000
 583              	_ZN15MemoryAllocator11freeMemHeadE:
 584 0008 00000000 		.zero	8
 584      00000000 
 587              	_ZN15MemoryAllocator11usedMemHeadE:
 588 0010 00000000 		.zero	8
 588      00000000 
 589              		.text
 590              	.Letext0:
 591              		.file 2 "src/../h/../lib/hw.h"
 592              		.file 3 "src/../h/MemoryAllocator.hpp"
GAS LISTING /tmp/ccco2gsb.s 			page 16


DEFINED SYMBOLS
                            *ABS*:0000000000000000 MemoryAllocator.cpp
     /tmp/ccco2gsb.s:9      .text:0000000000000000 _ZN15MemoryAllocator7kmallocEmNS_7PurposeE
     /tmp/ccco2gsb.s:13     .text:0000000000000000 .L0 
     /tmp/ccco2gsb.s:15     .text:0000000000000000 .L0 
     /tmp/ccco2gsb.s:16     .text:0000000000000004 .L0 
     /tmp/ccco2gsb.s:18     .text:0000000000000008 .L0 
     /tmp/ccco2gsb.s:20     .text:000000000000000c .L0 
     /tmp/ccco2gsb.s:22     .text:000000000000000c .L0 
     /tmp/ccco2gsb.s:24     .text:0000000000000010 .L0 
     /tmp/ccco2gsb.s:25     .text:0000000000000010 .L0 
     /tmp/ccco2gsb.s:27     .text:0000000000000018 .L0 
     /tmp/ccco2gsb.s:29     .text:000000000000001c .L0 
     /tmp/ccco2gsb.s:30     .text:000000000000001c .L0 
     /tmp/ccco2gsb.s:35     .text:0000000000000034 .L0 
     /tmp/ccco2gsb.s:36     .text:0000000000000034 .L0 
     /tmp/ccco2gsb.s:38     .text:0000000000000038 .L0 
     /tmp/ccco2gsb.s:39     .text:0000000000000038 .L0 
     /tmp/ccco2gsb.s:41     .text:000000000000003c .L0 
     /tmp/ccco2gsb.s:43     .text:0000000000000040 .L0 
     /tmp/ccco2gsb.s:44     .text:0000000000000040 .L0 
     /tmp/ccco2gsb.s:47     .text:000000000000004c .L0 
     /tmp/ccco2gsb.s:49     .text:0000000000000050 .L0 
     /tmp/ccco2gsb.s:51     .text:0000000000000054 .L0 
     /tmp/ccco2gsb.s:53     .text:0000000000000058 .L0 
     /tmp/ccco2gsb.s:55     .text:000000000000005c .L0 
     /tmp/ccco2gsb.s:56     .text:000000000000005c .L0 
     /tmp/ccco2gsb.s:58     .text:0000000000000060 .L0 
     /tmp/ccco2gsb.s:59     .text:0000000000000060 .L0 
     /tmp/ccco2gsb.s:63     .text:0000000000000068 .L0 
     /tmp/ccco2gsb.s:64     .text:0000000000000068 .L0 
     /tmp/ccco2gsb.s:66     .text:000000000000006c .L0 
     /tmp/ccco2gsb.s:69     .text:0000000000000070 .L0 
     /tmp/ccco2gsb.s:73     .text:0000000000000078 .L0 
     /tmp/ccco2gsb.s:76     .text:000000000000007c .L0 
     /tmp/ccco2gsb.s:77     .text:000000000000007c .L0 
     /tmp/ccco2gsb.s:81     .text:0000000000000080 .L0 
     /tmp/ccco2gsb.s:82     .text:0000000000000080 .L0 
     /tmp/ccco2gsb.s:86     .text:0000000000000088 .L0 
     /tmp/ccco2gsb.s:89     .text:000000000000008c .L0 
     /tmp/ccco2gsb.s:90     .text:000000000000008c .L0 
     /tmp/ccco2gsb.s:92     .text:0000000000000090 .L0 
     /tmp/ccco2gsb.s:94     .text:0000000000000094 .L0 
     /tmp/ccco2gsb.s:95     .text:0000000000000094 .L0 
     /tmp/ccco2gsb.s:98     .text:0000000000000098 .L0 
     /tmp/ccco2gsb.s:99     .text:0000000000000098 .L0 
     /tmp/ccco2gsb.s:101    .text:000000000000009c .L0 
     /tmp/ccco2gsb.s:103    .text:00000000000000a0 .L0 
     /tmp/ccco2gsb.s:104    .text:00000000000000a0 .L0 
     /tmp/ccco2gsb.s:106    .text:00000000000000a4 .L0 
     /tmp/ccco2gsb.s:108    .text:00000000000000a8 .L0 
     /tmp/ccco2gsb.s:110    .text:00000000000000ac .L0 
     /tmp/ccco2gsb.s:111    .text:00000000000000ac .L0 
     /tmp/ccco2gsb.s:114    .text:00000000000000b0 .L0 
     /tmp/ccco2gsb.s:115    .text:00000000000000b0 .L0 
     /tmp/ccco2gsb.s:117    .text:00000000000000b4 .L0 
     /tmp/ccco2gsb.s:119    .text:00000000000000b8 .L0 
GAS LISTING /tmp/ccco2gsb.s 			page 17


     /tmp/ccco2gsb.s:121    .text:00000000000000bc .L0 
     /tmp/ccco2gsb.s:122    .text:00000000000000bc .L0 
     /tmp/ccco2gsb.s:125    .text:00000000000000c0 .L0 
     /tmp/ccco2gsb.s:126    .text:00000000000000c0 .L0 
     /tmp/ccco2gsb.s:128    .text:00000000000000c8 .L0 
     /tmp/ccco2gsb.s:132    .text:00000000000000cc .L0 
     /tmp/ccco2gsb.s:133    .text:00000000000000cc .L0 
     /tmp/ccco2gsb.s:134    .text:00000000000000cc .L0 
     /tmp/ccco2gsb.s:136    .text:00000000000000d0 .L0 
     /tmp/ccco2gsb.s:137    .text:00000000000000d0 .L0 
     /tmp/ccco2gsb.s:139    .text:00000000000000d4 .L0 
     /tmp/ccco2gsb.s:140    .text:00000000000000d4 .L0 
     /tmp/ccco2gsb.s:143    .text:00000000000000d8 .L0 
     /tmp/ccco2gsb.s:146    .text:00000000000000dc .L0 
     /tmp/ccco2gsb.s:148    .text:00000000000000dc .L0 
     /tmp/ccco2gsb.s:149    .text:00000000000000dc .L0 
     /tmp/ccco2gsb.s:154    .text:00000000000000e8 .L0 
     /tmp/ccco2gsb.s:159    .text:00000000000000ec .L0 
     /tmp/ccco2gsb.s:161    .text:00000000000000f0 .L0 
     /tmp/ccco2gsb.s:164    .text:00000000000000f4 .L0 
     /tmp/ccco2gsb.s:165    .text:00000000000000f4 .L0 
     /tmp/ccco2gsb.s:167    .text:00000000000000f8 .L0 
     /tmp/ccco2gsb.s:170    .text:00000000000000fc .L0 
     /tmp/ccco2gsb.s:176    .text:0000000000000100 .L0 
     /tmp/ccco2gsb.s:177    .text:0000000000000100 .L0 
     /tmp/ccco2gsb.s:178    .text:0000000000000100 .L0 
     /tmp/ccco2gsb.s:181    .text:0000000000000104 .L0 
     /tmp/ccco2gsb.s:186    .text:0000000000000108 .L0 
     /tmp/ccco2gsb.s:187    .text:0000000000000108 .L0 
     /tmp/ccco2gsb.s:192    .text:0000000000000114 .L0 
     /tmp/ccco2gsb.s:194    .text:0000000000000118 .L0 
     /tmp/ccco2gsb.s:195    .text:0000000000000118 .L0 
     /tmp/ccco2gsb.s:198    .text:000000000000011c .L0 
     /tmp/ccco2gsb.s:200    .text:0000000000000120 .L0 
     /tmp/ccco2gsb.s:201    .text:0000000000000120 .L0 
     /tmp/ccco2gsb.s:205    .text:0000000000000124 .L0 
     /tmp/ccco2gsb.s:206    .text:0000000000000124 .L0 
     /tmp/ccco2gsb.s:212    .text:0000000000000128 .L0 
     /tmp/ccco2gsb.s:213    .text:000000000000012c .L0 
     /tmp/ccco2gsb.s:214    .text:000000000000012c .L0 
     /tmp/ccco2gsb.s:215    .text:000000000000012c .L0 
     /tmp/ccco2gsb.s:217    .text:0000000000000130 .L0 
     /tmp/ccco2gsb.s:221    .text:0000000000000134 .L0 
     /tmp/ccco2gsb.s:225    .text:0000000000000134 .L0 
     /tmp/ccco2gsb.s:226    .text:0000000000000134 .L0 
     /tmp/ccco2gsb.s:228    .text:0000000000000138 .L0 
     /tmp/ccco2gsb.s:229    .text:0000000000000138 .L0 
     /tmp/ccco2gsb.s:237    .text:0000000000000144 .L0 
     /tmp/ccco2gsb.s:240    .text:000000000000014c .L0 
     /tmp/ccco2gsb.s:246    .text:000000000000014c _ZN15MemoryAllocator9tryToJoinEPNS_14FreeMemSegmentE
     /tmp/ccco2gsb.s:249    .text:000000000000014c .L0 
     /tmp/ccco2gsb.s:251    .text:000000000000014c .L0 
     /tmp/ccco2gsb.s:252    .text:0000000000000150 .L0 
     /tmp/ccco2gsb.s:254    .text:0000000000000154 .L0 
     /tmp/ccco2gsb.s:256    .text:0000000000000158 .L0 
     /tmp/ccco2gsb.s:258    .text:0000000000000158 .L0 
     /tmp/ccco2gsb.s:260    .text:000000000000015c .L0 
GAS LISTING /tmp/ccco2gsb.s 			page 18


     /tmp/ccco2gsb.s:261    .text:000000000000015c .L0 
     /tmp/ccco2gsb.s:264    .text:0000000000000160 .L0 
     /tmp/ccco2gsb.s:265    .text:0000000000000160 .L0 
     /tmp/ccco2gsb.s:267    .text:0000000000000164 .L0 
     /tmp/ccco2gsb.s:270    .text:0000000000000168 .L0 
     /tmp/ccco2gsb.s:271    .text:0000000000000168 .L0 
     /tmp/ccco2gsb.s:272    .text:0000000000000168 .L0 
     /tmp/ccco2gsb.s:274    .text:000000000000016c .L0 
     /tmp/ccco2gsb.s:276    .text:0000000000000170 .L0 
     /tmp/ccco2gsb.s:280    .text:0000000000000174 .L0 
     /tmp/ccco2gsb.s:281    .text:0000000000000178 .L0 
     /tmp/ccco2gsb.s:282    .text:0000000000000178 .L0 
     /tmp/ccco2gsb.s:283    .text:0000000000000178 .L0 
     /tmp/ccco2gsb.s:285    .text:000000000000017c .L0 
     /tmp/ccco2gsb.s:289    .text:0000000000000180 .L0 
     /tmp/ccco2gsb.s:291    .text:0000000000000180 .L0 
     /tmp/ccco2gsb.s:292    .text:0000000000000180 .L0 
     /tmp/ccco2gsb.s:295    .text:0000000000000184 .L0 
     /tmp/ccco2gsb.s:300    .text:000000000000018c .L0 
     /tmp/ccco2gsb.s:301    .text:000000000000018c .L0 
     /tmp/ccco2gsb.s:304    .text:0000000000000190 .L0 
     /tmp/ccco2gsb.s:307    .text:0000000000000194 .L0 
     /tmp/ccco2gsb.s:309    .text:0000000000000198 .L0 
     /tmp/ccco2gsb.s:310    .text:0000000000000198 .L0 
     /tmp/ccco2gsb.s:313    .text:000000000000019c .L0 
     /tmp/ccco2gsb.s:314    .text:000000000000019c .L0 
     /tmp/ccco2gsb.s:320    .text:00000000000001a4 .L0 
     /tmp/ccco2gsb.s:326    .text:00000000000001ac .L0 
     /tmp/ccco2gsb.s:329    .text:00000000000001b4 .L0 
     /tmp/ccco2gsb.s:335    .text:00000000000001b4 _ZN15MemoryAllocator5kfreeEPv
     /tmp/ccco2gsb.s:338    .text:00000000000001b4 .L0 
     /tmp/ccco2gsb.s:340    .text:00000000000001b4 .L0 
     /tmp/ccco2gsb.s:341    .text:00000000000001b4 .L0 
     /tmp/ccco2gsb.s:344    .text:00000000000001bc .L0 
     /tmp/ccco2gsb.s:345    .text:00000000000001bc .L0 
     /tmp/ccco2gsb.s:347    .text:00000000000001c4 .L0 
     /tmp/ccco2gsb.s:349    .text:00000000000001c8 .L0 
     /tmp/ccco2gsb.s:350    .text:00000000000001c8 .L0 
     /tmp/ccco2gsb.s:353    .text:00000000000001cc .L0 
     /tmp/ccco2gsb.s:354    .text:00000000000001cc .L0 
     /tmp/ccco2gsb.s:355    .text:00000000000001cc .L0 
     /tmp/ccco2gsb.s:359    .text:00000000000001d0 .L0 
     /tmp/ccco2gsb.s:360    .text:00000000000001d0 .L0 
     /tmp/ccco2gsb.s:362    .text:00000000000001d4 .L0 
     /tmp/ccco2gsb.s:365    .text:00000000000001d8 .L0 
     /tmp/ccco2gsb.s:366    .text:00000000000001d8 .L0 
     /tmp/ccco2gsb.s:368    .text:00000000000001dc .L0 
     /tmp/ccco2gsb.s:371    .text:00000000000001e0 .L0 
     /tmp/ccco2gsb.s:374    .text:00000000000001e4 .L0 
     /tmp/ccco2gsb.s:376    .text:00000000000001e8 .L0 
     /tmp/ccco2gsb.s:377    .text:00000000000001ec .L0 
     /tmp/ccco2gsb.s:381    .text:00000000000001f8 .L0 
     /tmp/ccco2gsb.s:382    .text:00000000000001f8 .L0 
     /tmp/ccco2gsb.s:383    .text:00000000000001f8 .L0 
     /tmp/ccco2gsb.s:385    .text:00000000000001fc .L0 
     /tmp/ccco2gsb.s:387    .text:00000000000001fc .L0 
     /tmp/ccco2gsb.s:389    .text:0000000000000200 .L0 
GAS LISTING /tmp/ccco2gsb.s 			page 19


     /tmp/ccco2gsb.s:390    .text:0000000000000200 .L0 
     /tmp/ccco2gsb.s:393    .text:0000000000000204 .L0 
     /tmp/ccco2gsb.s:397    .text:0000000000000208 .L0 
     /tmp/ccco2gsb.s:398    .text:0000000000000208 .L0 
     /tmp/ccco2gsb.s:399    .text:0000000000000208 .L0 
     /tmp/ccco2gsb.s:401    .text:0000000000000210 .L0 
     /tmp/ccco2gsb.s:403    .text:0000000000000214 .L0 
     /tmp/ccco2gsb.s:407    .text:0000000000000218 .L0 
     /tmp/ccco2gsb.s:409    .text:000000000000021c .L0 
     /tmp/ccco2gsb.s:412    .text:0000000000000220 .L0 
     /tmp/ccco2gsb.s:414    .text:0000000000000224 .L0 
     /tmp/ccco2gsb.s:419    .text:000000000000022c .L0 
     /tmp/ccco2gsb.s:420    .text:000000000000022c .L0 
     /tmp/ccco2gsb.s:423    .text:0000000000000230 .L0 
     /tmp/ccco2gsb.s:429    .text:000000000000023c .L0 
     /tmp/ccco2gsb.s:436    .text:0000000000000248 .L0 
     /tmp/ccco2gsb.s:437    .text:0000000000000248 .L0 
     /tmp/ccco2gsb.s:438    .text:0000000000000248 .L0 
     /tmp/ccco2gsb.s:441    .text:000000000000024c .L0 
     /tmp/ccco2gsb.s:442    .text:000000000000024c .L0 
     /tmp/ccco2gsb.s:444    .text:0000000000000250 .L0 
     /tmp/ccco2gsb.s:445    .text:0000000000000250 .L0 
     /tmp/ccco2gsb.s:447    .text:0000000000000254 .L0 
     /tmp/ccco2gsb.s:449    .text:0000000000000258 .L0 
     /tmp/ccco2gsb.s:450    .text:0000000000000258 .L0 
     /tmp/ccco2gsb.s:453    .text:000000000000025c .L0 
     /tmp/ccco2gsb.s:456    .text:0000000000000260 .L0 
     /tmp/ccco2gsb.s:457    .text:0000000000000260 .L0 
     /tmp/ccco2gsb.s:459    .text:0000000000000264 .L0 
     /tmp/ccco2gsb.s:461    .text:0000000000000268 .L0 
     /tmp/ccco2gsb.s:462    .text:0000000000000268 .L0 
     /tmp/ccco2gsb.s:466    .text:000000000000026c .L0 
     /tmp/ccco2gsb.s:468    .text:0000000000000270 .L0 
     /tmp/ccco2gsb.s:469    .text:0000000000000270 .L0 
     /tmp/ccco2gsb.s:472    .text:0000000000000274 .L0 
     /tmp/ccco2gsb.s:473    .text:0000000000000274 .L0 
     /tmp/ccco2gsb.s:476    .text:000000000000027c .L0 
     /tmp/ccco2gsb.s:477    .text:000000000000027c .L0 
     /tmp/ccco2gsb.s:481    .text:0000000000000288 .L0 
     /tmp/ccco2gsb.s:482    .text:0000000000000288 .L0 
     /tmp/ccco2gsb.s:484    .text:000000000000028c .L0 
     /tmp/ccco2gsb.s:485    .text:0000000000000290 .L0 
     /tmp/ccco2gsb.s:486    .text:0000000000000290 .L0 
     /tmp/ccco2gsb.s:488    .text:0000000000000294 .L0 
     /tmp/ccco2gsb.s:489    .text:0000000000000294 .L0 
     /tmp/ccco2gsb.s:491    .text:0000000000000298 .L0 
     /tmp/ccco2gsb.s:494    .text:000000000000029c .L0 
     /tmp/ccco2gsb.s:498    .text:00000000000002a0 .L0 
     /tmp/ccco2gsb.s:500    .text:00000000000002a0 .L0 
     /tmp/ccco2gsb.s:501    .text:00000000000002a0 .L0 
     /tmp/ccco2gsb.s:508    .text:00000000000002b0 .L0 
     /tmp/ccco2gsb.s:509    .text:00000000000002b0 .L0 
     /tmp/ccco2gsb.s:513    .text:00000000000002bc .L0 
     /tmp/ccco2gsb.s:514    .text:00000000000002bc .L0 
     /tmp/ccco2gsb.s:515    .text:00000000000002bc .L0 
     /tmp/ccco2gsb.s:516    .text:00000000000002bc .L0 
     /tmp/ccco2gsb.s:518    .text:00000000000002bc .L0 
GAS LISTING /tmp/ccco2gsb.s 			page 20


     /tmp/ccco2gsb.s:524    .text:00000000000002c4 .L0 
     /tmp/ccco2gsb.s:530    .text:00000000000002cc .L0 
     /tmp/ccco2gsb.s:533    .text:00000000000002d0 .L0 
     /tmp/ccco2gsb.s:534    .text:00000000000002d4 .L0 
     /tmp/ccco2gsb.s:540    .text:00000000000002d4 _ZN15MemoryAllocator12checkPurposeEPvNS_7PurposeE
     /tmp/ccco2gsb.s:543    .text:00000000000002d4 .L0 
     /tmp/ccco2gsb.s:545    .text:00000000000002d4 .L0 
     /tmp/ccco2gsb.s:546    .text:00000000000002d8 .L0 
     /tmp/ccco2gsb.s:548    .text:00000000000002dc .L0 
     /tmp/ccco2gsb.s:550    .text:00000000000002e0 .L0 
     /tmp/ccco2gsb.s:553    .text:00000000000002e0 .L0 
     /tmp/ccco2gsb.s:554    .text:00000000000002e0 .L0 
     /tmp/ccco2gsb.s:555    .text:00000000000002e0 .L0 
     /tmp/ccco2gsb.s:558    .text:00000000000002e4 .L0 
     /tmp/ccco2gsb.s:560    .text:00000000000002e8 .L0 
     /tmp/ccco2gsb.s:562    .text:00000000000002f0 .L0 
     /tmp/ccco2gsb.s:563    .text:00000000000002f0 .L0 
     /tmp/ccco2gsb.s:565    .text:00000000000002f4 .L0 
     /tmp/ccco2gsb.s:567    .text:00000000000002f8 .L0 
     /tmp/ccco2gsb.s:587    .bss:0000000000000010 _ZN15MemoryAllocator11usedMemHeadE
     /tmp/ccco2gsb.s:583    .bss:0000000000000008 _ZN15MemoryAllocator11freeMemHeadE
     /tmp/ccco2gsb.s:578    .bss:0000000000000000 _ZN15MemoryAllocator11initializedE
     /tmp/ccco2gsb.s:575    .bss:0000000000000000 .LANCHOR0
     /tmp/ccco2gsb.s:593    .text:00000000000002f8 .L0 
     /tmp/ccco2gsb.s:25     .text:0000000000000010 .L0 
     /tmp/ccco2gsb.s:30     .text:000000000000001c .L0 
     /tmp/ccco2gsb.s:32     .text:0000000000000028 .L0 
     /tmp/ccco2gsb.s:44     .text:0000000000000040 .L0 
     /tmp/ccco2gsb.s:82     .text:0000000000000080 .L0 
     /tmp/ccco2gsb.s:126    .text:00000000000000c0 .L0 
     /tmp/ccco2gsb.s:149    .text:00000000000000dc .L0 
     /tmp/ccco2gsb.s:187    .text:0000000000000108 .L0 
     /tmp/ccco2gsb.s:229    .text:0000000000000138 .L0 
     /tmp/ccco2gsb.s:345    .text:00000000000001bc .L0 
     /tmp/ccco2gsb.s:399    .text:0000000000000208 .L0 
     /tmp/ccco2gsb.s:423    .text:0000000000000230 .L0 
     /tmp/ccco2gsb.s:501    .text:00000000000002a0 .L0 
     /tmp/ccco2gsb.s:509    .text:00000000000002b0 .L0 
     /tmp/ccco2gsb.s:233    .text:0000000000000144 .L14
     /tmp/ccco2gsb.s:61     .text:0000000000000068 .L3
     /tmp/ccco2gsb.s:71     .text:0000000000000078 .L4
     /tmp/ccco2gsb.s:208    .text:0000000000000128 .L1
     /tmp/ccco2gsb.s:172    .text:0000000000000100 .L16
     /tmp/ccco2gsb.s:112    .text:00000000000000b0 .L7
     /tmp/ccco2gsb.s:123    .text:00000000000000c0 .L8
     /tmp/ccco2gsb.s:183    .text:0000000000000108 .L17
     /tmp/ccco2gsb.s:190    .text:0000000000000114 .L10
     /tmp/ccco2gsb.s:156    .text:00000000000000ec .L11
     /tmp/ccco2gsb.s:84     .text:0000000000000088 .L6
     /tmp/ccco2gsb.s:129    .text:00000000000000cc .L9
     /tmp/ccco2gsb.s:220    .text:0000000000000134 .L18
     /tmp/ccco2gsb.s:203    .text:0000000000000124 .L13
     /tmp/ccco2gsb.s:318    .text:00000000000001a4 .L22
     /tmp/ccco2gsb.s:324    .text:00000000000001ac .L23
     /tmp/ccco2gsb.s:288    .text:0000000000000180 .L26
     /tmp/ccco2gsb.s:311    .text:000000000000019c .L21
     /tmp/ccco2gsb.s:278    .text:0000000000000174 .L20
GAS LISTING /tmp/ccco2gsb.s 			page 21


     /tmp/ccco2gsb.s:512    .text:00000000000002bc .L40
     /tmp/ccco2gsb.s:522    .text:00000000000002c4 .L41
     /tmp/ccco2gsb.s:372    .text:00000000000001e4 .L29
     /tmp/ccco2gsb.s:357    .text:00000000000001d0 .L30
     /tmp/ccco2gsb.s:528    .text:00000000000002cc .L42
     /tmp/ccco2gsb.s:417    .text:000000000000022c .L31
     /tmp/ccco2gsb.s:427    .text:000000000000023c .L43
     /tmp/ccco2gsb.s:431    .text:0000000000000244 .L44
     /tmp/ccco2gsb.s:434    .text:0000000000000248 .L33
     /tmp/ccco2gsb.s:405    .text:0000000000000218 .L34
     /tmp/ccco2gsb.s:395    .text:0000000000000208 .L32
     /tmp/ccco2gsb.s:497    .text:00000000000002a0 .L35
     /tmp/ccco2gsb.s:464    .text:000000000000026c .L37
     /tmp/ccco2gsb.s:506    .text:00000000000002b0 .L38
     /tmp/ccco2gsb.s:454    .text:0000000000000260 .L36
     /tmp/ccco2gsb.s:470    .text:0000000000000274 .L39
     /tmp/ccco2gsb.s:1165   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccco2gsb.s:2342   .debug_str:000000000000018f .LASF56
     /tmp/ccco2gsb.s:2372   .debug_str:000000000000032a .LASF57
     /tmp/ccco2gsb.s:2384   .debug_str:0000000000000382 .LASF58
     /tmp/ccco2gsb.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccco2gsb.s:590    .text:00000000000002f8 .Letext0
     /tmp/ccco2gsb.s:2278   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccco2gsb.s:2352   .debug_str:000000000000029d .LASF0
     /tmp/ccco2gsb.s:2326   .debug_str:000000000000011f .LASF1
     /tmp/ccco2gsb.s:2318   .debug_str:00000000000000e0 .LASF2
     /tmp/ccco2gsb.s:2294   .debug_str:0000000000000055 .LASF4
     /tmp/ccco2gsb.s:2324   .debug_str:000000000000010d .LASF3
     /tmp/ccco2gsb.s:2286   .debug_str:000000000000002f .LASF5
     /tmp/ccco2gsb.s:2282   .debug_str:000000000000000c .LASF6
     /tmp/ccco2gsb.s:2314   .debug_str:00000000000000be .LASF7
     /tmp/ccco2gsb.s:2366   .debug_str:00000000000002f7 .LASF8
     /tmp/ccco2gsb.s:2292   .debug_str:0000000000000047 .LASF9
     /tmp/ccco2gsb.s:2406   .debug_str:0000000000000483 .LASF10
     /tmp/ccco2gsb.s:2316   .debug_str:00000000000000d1 .LASF11
     /tmp/ccco2gsb.s:2394   .debug_str:00000000000003f1 .LASF12
     /tmp/ccco2gsb.s:2374   .debug_str:0000000000000342 .LASF13
     /tmp/ccco2gsb.s:2328   .debug_str:0000000000000132 .LASF14
     /tmp/ccco2gsb.s:2306   .debug_str:000000000000008f .LASF15
     /tmp/ccco2gsb.s:2370   .debug_str:0000000000000314 .LASF16
     /tmp/ccco2gsb.s:2284   .debug_str:000000000000001f .LASF59
     /tmp/ccco2gsb.s:2376   .debug_str:0000000000000352 .LASF60
     /tmp/ccco2gsb.s:2336   .debug_str:0000000000000169 .LASF17
     /tmp/ccco2gsb.s:2302   .debug_str:0000000000000076 .LASF18
     /tmp/ccco2gsb.s:2340   .debug_str:0000000000000188 .LASF19
     /tmp/ccco2gsb.s:2334   .debug_str:0000000000000164 .LASF20
     /tmp/ccco2gsb.s:2388   .debug_str:00000000000003a8 .LASF21
     /tmp/ccco2gsb.s:2382   .debug_str:0000000000000373 .LASF25
     /tmp/ccco2gsb.s:2288   .debug_str:0000000000000036 .LASF22
     /tmp/ccco2gsb.s:2404   .debug_str:000000000000047e .LASF23
     /tmp/ccco2gsb.s:2402   .debug_str:0000000000000479 .LASF24
     /tmp/ccco2gsb.s:2304   .debug_str:0000000000000080 .LASF26
     /tmp/ccco2gsb.s:2344   .debug_str:0000000000000253 .LASF27
     /tmp/ccco2gsb.s:2320   .debug_str:00000000000000ee .LASF28
     /tmp/ccco2gsb.s:2330   .debug_str:000000000000013e .LASF29
     /tmp/ccco2gsb.s:2346   .debug_str:000000000000025b .LASF31
     /tmp/ccco2gsb.s:2312   .debug_str:00000000000000b8 .LASF30
GAS LISTING /tmp/ccco2gsb.s 			page 22


     /tmp/ccco2gsb.s:2332   .debug_str:0000000000000146 .LASF32
     /tmp/ccco2gsb.s:2368   .debug_str:0000000000000307 .LASF33
     /tmp/ccco2gsb.s:2396   .debug_str:0000000000000401 .LASF34
     /tmp/ccco2gsb.s:2338   .debug_str:000000000000016f .LASF61
     /tmp/ccco2gsb.s:2356   .debug_str:00000000000002b6 .LASF35
     /tmp/ccco2gsb.s:2290   .debug_str:000000000000003b .LASF36
     /tmp/ccco2gsb.s:2322   .debug_str:0000000000000101 .LASF37
     /tmp/ccco2gsb.s:2392   .debug_str:00000000000003e7 .LASF62
     /tmp/ccco2gsb.s:2390   .debug_str:00000000000003b2 .LASF63
     /tmp/ccco2gsb.s:2298   .debug_str:0000000000000065 .LASF38
     /tmp/ccco2gsb.s:2364   .debug_str:00000000000002d4 .LASF39
     /tmp/ccco2gsb.s:2400   .debug_str:0000000000000456 .LASF40
     /tmp/ccco2gsb.s:2398   .debug_str:0000000000000433 .LASF41
     /tmp/ccco2gsb.s:541    .text:00000000000002d4 .LFB6
     /tmp/ccco2gsb.s:568    .text:00000000000002f8 .LFE6
     /tmp/ccco2gsb.s:1677   .debug_loc:0000000000000000 .LLST18
     /tmp/ccco2gsb.s:247    .text:000000000000014c .LFB5
     /tmp/ccco2gsb.s:330    .text:00000000000001b4 .LFE5
     /tmp/ccco2gsb.s:2386   .debug_str:00000000000003a0 .LASF42
     /tmp/ccco2gsb.s:1700   .debug_loc:0000000000000051 .LLST7
     /tmp/ccco2gsb.s:2310   .debug_str:00000000000000ad .LASF43
     /tmp/ccco2gsb.s:1747   .debug_loc:0000000000000105 .LLST8
     /tmp/ccco2gsb.s:2296   .debug_str:000000000000005c .LASF44
     /tmp/ccco2gsb.s:1783   .debug_loc:0000000000000172 .LLST9
     /tmp/ccco2gsb.s:2362   .debug_str:00000000000002ce .LASF45
     /tmp/ccco2gsb.s:1817   .debug_loc:00000000000001ec .LLST10
     /tmp/ccco2gsb.s:2380   .debug_str:0000000000000363 .LASF46
     /tmp/ccco2gsb.s:1837   .debug_loc:0000000000000249 .LLST11
     /tmp/ccco2gsb.s:2358   .debug_str:00000000000002c2 .LASF47
     /tmp/ccco2gsb.s:336    .text:00000000000001b4 .LFB4
     /tmp/ccco2gsb.s:535    .text:00000000000002d4 .LFE4
     /tmp/ccco2gsb.s:1892   .debug_loc:00000000000002d8 .LLST12
     /tmp/ccco2gsb.s:2354   .debug_str:00000000000002aa .LASF48
     /tmp/ccco2gsb.s:1942   .debug_loc:000000000000039e .LLST13
     /tmp/ccco2gsb.s:2378   .debug_str:000000000000035a .LASF49
     /tmp/ccco2gsb.s:1966   .debug_loc:000000000000040e .LLST14
     /tmp/ccco2gsb.s:2348   .debug_str:0000000000000286 .LASF50
     /tmp/ccco2gsb.s:1994   .debug_loc:0000000000000491 .LLST15
     /tmp/ccco2gsb.s:2308   .debug_str:00000000000000a5 .LASF51
     /tmp/ccco2gsb.s:2023   .debug_loc:0000000000000515 .LLST16
     /tmp/ccco2gsb.s:2280   .debug_str:0000000000000000 .LASF52
     /tmp/ccco2gsb.s:2044   .debug_loc:0000000000000564 .LLST17
     /tmp/ccco2gsb.s:474    .text:000000000000027c .LVL56
     /tmp/ccco2gsb.s:479    .text:0000000000000288 .LVL57
     /tmp/ccco2gsb.s:10     .text:0000000000000000 .LFB3
     /tmp/ccco2gsb.s:241    .text:000000000000014c .LFE3
     /tmp/ccco2gsb.s:2065   .debug_loc:00000000000005c2 .LLST0
     /tmp/ccco2gsb.s:2360   .debug_str:00000000000002c7 .LASF53
     /tmp/ccco2gsb.s:2113   .debug_loc:0000000000000686 .LLST1
     /tmp/ccco2gsb.s:2256   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccco2gsb.s:2120   .debug_loc:00000000000006a9 .LLST2
     /tmp/ccco2gsb.s:2350   .debug_str:000000000000028f .LASF54
     /tmp/ccco2gsb.s:2131   .debug_loc:00000000000006df .LLST3
     /tmp/ccco2gsb.s:2300   .debug_str:000000000000006a .LASF55
     /tmp/ccco2gsb.s:2172   .debug_loc:0000000000000760 .LLST4
     /tmp/ccco2gsb.s:2187   .debug_loc:00000000000007a9 .LLST5
     /tmp/ccco2gsb.s:2215   .debug_loc:000000000000082c .LLST6
GAS LISTING /tmp/ccco2gsb.s 			page 23


     /tmp/ccco2gsb.s:544    .text:00000000000002d4 .LVL68
     /tmp/ccco2gsb.s:552    .text:00000000000002e0 .LVL69
     /tmp/ccco2gsb.s:556    .text:00000000000002e4 .LVL70
     /tmp/ccco2gsb.s:250    .text:000000000000014c .LVL24
     /tmp/ccco2gsb.s:277    .text:0000000000000174 .LVL27
     /tmp/ccco2gsb.s:287    .text:0000000000000180 .LVL28
     /tmp/ccco2gsb.s:315    .text:00000000000001a0 .LVL34
     /tmp/ccco2gsb.s:317    .text:00000000000001a4 .LVL35
     /tmp/ccco2gsb.s:321    .text:00000000000001a8 .LVL36
     /tmp/ccco2gsb.s:323    .text:00000000000001ac .LVL37
     /tmp/ccco2gsb.s:327    .text:00000000000001b0 .LVL38
     /tmp/ccco2gsb.s:262    .text:0000000000000160 .LVL25
     /tmp/ccco2gsb.s:302    .text:0000000000000190 .LVL32
     /tmp/ccco2gsb.s:305    .text:0000000000000194 .LVL33
     /tmp/ccco2gsb.s:268    .text:0000000000000168 .LVL26
     /tmp/ccco2gsb.s:293    .text:0000000000000184 .LVL29
     /tmp/ccco2gsb.s:296    .text:0000000000000188 .LVL30
     /tmp/ccco2gsb.s:298    .text:000000000000018c .LVL31
     /tmp/ccco2gsb.s:339    .text:00000000000001b4 .LVL39
     /tmp/ccco2gsb.s:351    .text:00000000000001cc .LVL40
     /tmp/ccco2gsb.s:496    .text:00000000000002a0 .LVL59
     /tmp/ccco2gsb.s:519    .text:00000000000002c0 .LVL63
     /tmp/ccco2gsb.s:521    .text:00000000000002c4 .LVL64
     /tmp/ccco2gsb.s:525    .text:00000000000002c8 .LVL65
     /tmp/ccco2gsb.s:527    .text:00000000000002cc .LVL66
     /tmp/ccco2gsb.s:531    .text:00000000000002d0 .LVL67
     /tmp/ccco2gsb.s:364    .text:00000000000001d8 .LVL42
     /tmp/ccco2gsb.s:369    .text:00000000000001e0 .LVL43
     /tmp/ccco2gsb.s:391    .text:0000000000000204 .LVL44
     /tmp/ccco2gsb.s:416    .text:000000000000022c .LVL48
     /tmp/ccco2gsb.s:421    .text:0000000000000230 .LVL49
     /tmp/ccco2gsb.s:356    .text:00000000000001d0 .LVL41
     /tmp/ccco2gsb.s:394    .text:0000000000000208 .LVL45
     /tmp/ccco2gsb.s:424    .text:0000000000000238 .LVL50
     /tmp/ccco2gsb.s:404    .text:0000000000000218 .LVL46
     /tmp/ccco2gsb.s:410    .text:0000000000000220 .LVL47
     /tmp/ccco2gsb.s:426    .text:000000000000023c .LVL51
     /tmp/ccco2gsb.s:433    .text:0000000000000248 .LVL52
     /tmp/ccco2gsb.s:492    .text:0000000000000298 .LVL58
     /tmp/ccco2gsb.s:511    .text:00000000000002bc .LVL62
     /tmp/ccco2gsb.s:439    .text:000000000000024c .LVL53
     /tmp/ccco2gsb.s:451    .text:000000000000025c .LVL54
     /tmp/ccco2gsb.s:463    .text:000000000000026c .LVL55
     /tmp/ccco2gsb.s:502    .text:00000000000002a8 .LVL60
     /tmp/ccco2gsb.s:505    .text:00000000000002b0 .LVL61
     /tmp/ccco2gsb.s:14     .text:0000000000000000 .LVL0
     /tmp/ccco2gsb.s:67     .text:0000000000000070 .LVL1
     /tmp/ccco2gsb.s:78     .text:0000000000000080 .LVL3
     /tmp/ccco2gsb.s:141    .text:00000000000000d8 .LVL7
     /tmp/ccco2gsb.s:171    .text:0000000000000100 .LVL13
     /tmp/ccco2gsb.s:189    .text:0000000000000114 .LVL16
     /tmp/ccco2gsb.s:202    .text:0000000000000124 .LVL18
     /tmp/ccco2gsb.s:219    .text:0000000000000134 .LVL20
     /tmp/ccco2gsb.s:232    .text:0000000000000144 .LVL22
     /tmp/ccco2gsb.s:238    .text:0000000000000148 .LVL23
     /tmp/ccco2gsb.s:74     .text:000000000000007c .LVL2
     /tmp/ccco2gsb.s:83     .text:0000000000000088 .LVL4
GAS LISTING /tmp/ccco2gsb.s 			page 24


     /tmp/ccco2gsb.s:207    .text:0000000000000128 .LVL19
     /tmp/ccco2gsb.s:96     .text:0000000000000098 .LVL5
     /tmp/ccco2gsb.s:150    .text:00000000000000e4 .LVL9
     /tmp/ccco2gsb.s:182    .text:0000000000000108 .LVL15
     /tmp/ccco2gsb.s:131    .text:00000000000000cc .LVL6
     /tmp/ccco2gsb.s:145    .text:00000000000000dc .LVL8
     /tmp/ccco2gsb.s:155    .text:00000000000000ec .LVL10
     /tmp/ccco2gsb.s:163    .text:00000000000000f4 .LVL11
     /tmp/ccco2gsb.s:168    .text:00000000000000fc .LVL12
     /tmp/ccco2gsb.s:196    .text:000000000000011c .LVL17
     /tmp/ccco2gsb.s:230    .text:0000000000000140 .LVL21
     /tmp/ccco2gsb.s:594    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccco2gsb.s:80     .text:0000000000000080 .LBB2
     /tmp/ccco2gsb.s:210    .text:0000000000000128 .LBE2
     /tmp/ccco2gsb.s:222    .text:0000000000000134 .LBB8
     /tmp/ccco2gsb.s:235    .text:0000000000000144 .LBE8
     /tmp/ccco2gsb.s:87     .text:000000000000008c .LBB3
     /tmp/ccco2gsb.s:175    .text:0000000000000100 .LBE3
     /tmp/ccco2gsb.s:184    .text:0000000000000108 .LBB6
     /tmp/ccco2gsb.s:209    .text:0000000000000128 .LBE6
     /tmp/ccco2gsb.s:223    .text:0000000000000134 .LBB7
     /tmp/ccco2gsb.s:234    .text:0000000000000144 .LBE7
     /tmp/ccco2gsb.s:147    .text:00000000000000dc .LBB4
     /tmp/ccco2gsb.s:152    .text:00000000000000e8 .LBE4
     /tmp/ccco2gsb.s:157    .text:00000000000000ec .LBB5
     /tmp/ccco2gsb.s:173    .text:0000000000000100 .LBE5

UNDEFINED SYMBOLS
HEAP_START_ADDR
HEAP_END_ADDR
