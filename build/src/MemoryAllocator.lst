GAS LISTING /tmp/ccaBlXnF.s 			page 1


   1              		.file	"MemoryAllocator.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN15MemoryAllocator7kmallocEmNS_7PurposeE
   9              	_ZN15MemoryAllocator7kmallocEmNS_7PurposeE:
  10              	.LFB3:
  11              		.file 1 "src/MemoryAllocator.cpp"
   1:src/MemoryAllocator.cpp **** //
   2:src/MemoryAllocator.cpp **** // Created by os on 5/12/23.
   3:src/MemoryAllocator.cpp **** //
   4:src/MemoryAllocator.cpp **** 
   5:src/MemoryAllocator.cpp **** #include "../h/MemoryAllocator.hpp"
   6:src/MemoryAllocator.cpp **** #include "../h/helper.hpp"
   7:src/MemoryAllocator.cpp **** 
   8:src/MemoryAllocator.cpp **** bool MemoryAllocator::initialized = false;
   9:src/MemoryAllocator.cpp **** MemoryAllocator::FreeMemSegment* MemoryAllocator::freeMemHead = nullptr;
  10:src/MemoryAllocator.cpp **** MemoryAllocator::UsedMemSegment* MemoryAllocator::usedMemHead = nullptr;
  11:src/MemoryAllocator.cpp **** 
  12:src/MemoryAllocator.cpp **** void* MemoryAllocator::kmalloc(size_t size, Purpose pur) {
  12              		.loc 1 12 58
  13              		.cfi_startproc
  14              	.LVL0:
  15 0000 130101FF 		addi	sp,sp,-16
  16              		.cfi_def_cfa_offset 16
  17 0004 23348100 		sd	s0,8(sp)
  18              		.cfi_offset 8, -8
  19 0008 13040101 		addi	s0,sp,16
  20              		.cfi_def_cfa 8, 0
  13:src/MemoryAllocator.cpp **** 	//size je u broju bajtova, ukljucuje i mesto potrebno za zaglavlje UsedMemSegment
  14:src/MemoryAllocator.cpp **** 	if (size <= 0) return nullptr;
  21              		.loc 1 14 2
  22 000c 63080512 		beqz	a0,.L16
  15:src/MemoryAllocator.cpp **** 
  16:src/MemoryAllocator.cpp **** 
  17:src/MemoryAllocator.cpp **** 	//alokacija uvek zaokruzena na blokove
  18:src/MemoryAllocator.cpp **** 	//size += sizeof(UsedMemSegment); ;prebaceno u mem_alloc
  19:src/MemoryAllocator.cpp **** 	size_t blocks = size / MEM_BLOCK_SIZE + (size % MEM_BLOCK_SIZE ? 1 : 0);
  23              		.loc 1 19 2
  24              		.loc 1 19 23 is_stmt 0
  25 0010 93576500 		srli	a5,a0,6
  26              		.loc 1 19 48
  27 0014 1375F503 		andi	a0,a0,63
  28              	.LVL1:
  29              		.loc 1 19 65
  30 0018 63040500 		beqz	a0,.L3
  31 001c 13051000 		li	a0,1
  32              	.L3:
  33              		.loc 1 19 9 discriminator 4
  34 0020 3385A700 		add	a0,a5,a0
  35              	.LVL2:
  20:src/MemoryAllocator.cpp **** 	size = blocks * MEM_BLOCK_SIZE;
  36              		.loc 1 20 2 is_stmt 1 discriminator 4
  37              		.loc 1 20 7 is_stmt 0 discriminator 4
  38 0024 93176500 		slli	a5,a0,6
GAS LISTING /tmp/ccaBlXnF.s 			page 2


  39              	.LVL3:
  21:src/MemoryAllocator.cpp **** 
  22:src/MemoryAllocator.cpp **** 	//trazenje slobodnog segmenta po first-fit algoritmu
  23:src/MemoryAllocator.cpp **** 	for (FreeMemSegment* current = freeMemHead; current; current = current->next) {
  40              		.loc 1 23 2 is_stmt 1 discriminator 4
  41              	.LBB2:
  42              		.loc 1 23 23 is_stmt 0 discriminator 4
  43 0028 17050000 		ld	a0,.LANCHOR0
  43      03350500 
  44              	.LVL4:
  45              	.L5:
  46              		.loc 1 23 46 is_stmt 1 discriminator 1
  47 0030 6308050E 		beqz	a0,.L1
  48              	.LBB3:
  24:src/MemoryAllocator.cpp **** 		if (current->size < size) continue;
  49              		.loc 1 24 3
  50              		.loc 1 24 16 is_stmt 0
  51 0034 03370501 		ld	a4,16(a0)
  52              		.loc 1 24 3
  53 0038 636AF706 		bltu	a4,a5,.L19
  25:src/MemoryAllocator.cpp **** 
  26:src/MemoryAllocator.cpp **** 		//pravljenje novog slobodnog fragmenta od ostatka fragmenta
  27:src/MemoryAllocator.cpp **** 		FreeMemSegment* remainderFree = (FreeMemSegment*)((char*)current + size);
  54              		.loc 1 27 3 is_stmt 1
  55              		.loc 1 27 19 is_stmt 0
  56 003c B306F500 		add	a3,a0,a5
  57              	.LVL5:
  28:src/MemoryAllocator.cpp **** 		size_t remainingSize = current->size - size;
  58              		.loc 1 28 3 is_stmt 1
  59              		.loc 1 28 10 is_stmt 0
  60 0040 3306F740 		sub	a2,a4,a5
  61              	.LVL6:
  29:src/MemoryAllocator.cpp **** 		if (remainingSize <= sizeof(UsedMemSegment)) {
  62              		.loc 1 29 3 is_stmt 1
  63 0044 13080002 		li	a6,32
  64 0048 636EC806 		bgtu	a2,a6,.L6
  30:src/MemoryAllocator.cpp **** 			//ne preostaje dovoljno veliki slobodni segment;dodeljujemo ceo trenutno alociranom
  31:src/MemoryAllocator.cpp **** 			size += remainingSize;
  65              		.loc 1 31 4
  66              	.LVL7:
  32:src/MemoryAllocator.cpp **** 			if (current->prev) current->prev->next = current->next;
  67              		.loc 1 32 4
  68              		.loc 1 32 17 is_stmt 0
  69 004c 83378500 		ld	a5,8(a0)
  70              		.loc 1 32 4
  71 0050 63860700 		beqz	a5,.L7
  72              		.loc 1 32 23 is_stmt 1 discriminator 1
  73              		.loc 1 32 54 is_stmt 0 discriminator 1
  74 0054 83360500 		ld	a3,0(a0)
  75              	.LVL8:
  76              		.loc 1 32 43 discriminator 1
  77 0058 23B0D700 		sd	a3,0(a5)
  78              	.L7:
  33:src/MemoryAllocator.cpp **** 			if (current->next) current->next->prev = current->prev;
  79              		.loc 1 33 4 is_stmt 1
  80              		.loc 1 33 17 is_stmt 0
  81 005c 83370500 		ld	a5,0(a0)
GAS LISTING /tmp/ccaBlXnF.s 			page 3


  82              		.loc 1 33 4
  83 0060 63860700 		beqz	a5,.L8
  84              		.loc 1 33 23 is_stmt 1 discriminator 1
  85              		.loc 1 33 54 is_stmt 0 discriminator 1
  86 0064 83368500 		ld	a3,8(a0)
  87              		.loc 1 33 43 discriminator 1
  88 0068 23B4D700 		sd	a3,8(a5)
  89              	.L8:
  34:src/MemoryAllocator.cpp **** 			if (freeMemHead == current) { freeMemHead = current->next; }
  90              		.loc 1 34 4 is_stmt 1
  91              		.loc 1 34 20 is_stmt 0
  92 006c 97070000 		ld	a5,.LANCHOR0
  92      83B70700 
  93              		.loc 1 34 4
  94 0074 6380A704 		beq	a5,a0,.L20
  95              	.L9:
  35:src/MemoryAllocator.cpp **** 		} else {
  36:src/MemoryAllocator.cpp **** 			remainderFree->size = remainingSize;
  37:src/MemoryAllocator.cpp **** 			remainderFree->prev = current->prev;
  38:src/MemoryAllocator.cpp **** 			if (current->prev) current->prev->next = remainderFree;
  39:src/MemoryAllocator.cpp **** 			remainderFree->next = current->next;
  40:src/MemoryAllocator.cpp **** 			if (current->next) current->next->prev = remainderFree;
  41:src/MemoryAllocator.cpp **** 			if (freeMemHead == current) { freeMemHead = remainderFree; }
  42:src/MemoryAllocator.cpp **** 		}
  43:src/MemoryAllocator.cpp **** 		//ubacivanje novog fragmenta u listu zauzetih fragmenata
  44:src/MemoryAllocator.cpp **** 		UsedMemSegment* newFragment = (UsedMemSegment*)current;
  96              		.loc 1 44 3 is_stmt 1
  97              	.LVL9:
  45:src/MemoryAllocator.cpp **** 		newFragment->size = size;
  98              		.loc 1 45 3
  99              		.loc 1 45 21 is_stmt 0
 100 0078 2334E500 		sd	a4,8(a0)
  46:src/MemoryAllocator.cpp **** 		newFragment->purpose = pur;
 101              		.loc 1 46 3 is_stmt 1
 102              		.loc 1 46 24 is_stmt 0
 103 007c 2328B500 		sw	a1,16(a0)
  47:src/MemoryAllocator.cpp **** 		newFragment->usableFirstAddress = (char*)newFragment + sizeof(UsedMemSegment);
 104              		.loc 1 47 3 is_stmt 1
 105              		.loc 1 47 56 is_stmt 0
 106 0080 93070502 		addi	a5,a0,32
 107              		.loc 1 47 35
 108 0084 233CF500 		sd	a5,24(a0)
  48:src/MemoryAllocator.cpp **** 		UsedMemSegment* prevUsed = nullptr;
 109              		.loc 1 48 3 is_stmt 1
 110              	.LVL10:
  49:src/MemoryAllocator.cpp **** 		for (UsedMemSegment* cur = usedMemHead;
 111              		.loc 1 49 3
 112              	.LBB4:
 113              		.loc 1 49 24 is_stmt 0
 114 0088 97060000 		ld	a3,.LANCHOR0+8
 114      83B60600 
 115              	.LVL11:
 116 0090 93870600 		mv	a5,a3
 117              	.LBE4:
  48:src/MemoryAllocator.cpp **** 		UsedMemSegment* prevUsed = nullptr;
 118              		.loc 1 48 19
 119 0094 13070000 		li	a4,0
GAS LISTING /tmp/ccaBlXnF.s 			page 4


 120              	.LVL12:
 121              	.L13:
 122              	.LBB5:
  50:src/MemoryAllocator.cpp **** 			 cur && ((char*)cur < (char*)newFragment); cur = cur->next) {
 123              		.loc 1 50 9 is_stmt 1 discriminator 3
 124 0098 638A0706 		beqz	a5,.L12
 125              		.loc 1 50 9 is_stmt 0 discriminator 1
 126 009c 63F8A706 		bleu	a0,a5,.L12
  51:src/MemoryAllocator.cpp **** 			prevUsed = cur;
 127              		.loc 1 51 4 is_stmt 1 discriminator 2
 128              	.LVL13:
  49:src/MemoryAllocator.cpp **** 		for (UsedMemSegment* cur = usedMemHead;
 129              		.loc 1 49 3 discriminator 2
 130              		.loc 1 51 13 is_stmt 0 discriminator 2
 131 00a0 13870700 		mv	a4,a5
  50:src/MemoryAllocator.cpp **** 			 cur && ((char*)cur < (char*)newFragment); cur = cur->next) {
 132              		.loc 1 50 51 discriminator 2
 133 00a4 83B70700 		ld	a5,0(a5)
 134              	.LVL14:
  49:src/MemoryAllocator.cpp **** 		for (UsedMemSegment* cur = usedMemHead;
 135              		.loc 1 49 3 discriminator 2
 136 00a8 6FF01FFF 		j	.L13
 137              	.LVL15:
 138              	.L19:
 139              	.LBE5:
  24:src/MemoryAllocator.cpp **** 
 140              		.loc 1 24 29 is_stmt 1 discriminator 1
 141              	.LBE3:
  23:src/MemoryAllocator.cpp **** 		if (current->size < size) continue;
 142              		.loc 1 23 2 discriminator 1
  23:src/MemoryAllocator.cpp **** 		if (current->size < size) continue;
 143              		.loc 1 23 63 is_stmt 0 discriminator 1
 144 00ac 03350500 		ld	a0,0(a0)
 145              	.LVL16:
  23:src/MemoryAllocator.cpp **** 		if (current->size < size) continue;
 146              		.loc 1 23 2 discriminator 1
 147 00b0 6FF01FF8 		j	.L5
 148              	.LVL17:
 149              	.L20:
 150              	.LBB6:
  34:src/MemoryAllocator.cpp **** 		} else {
 151              		.loc 1 34 34 is_stmt 1 discriminator 1
  34:src/MemoryAllocator.cpp **** 		} else {
 152              		.loc 1 34 57 is_stmt 0 discriminator 1
 153 00b4 83370500 		ld	a5,0(a0)
  34:src/MemoryAllocator.cpp **** 		} else {
 154              		.loc 1 34 46 discriminator 1
 155 00b8 97060000 		sd	a5,.LANCHOR0,a3
 155      23B0F600 
 156 00c0 6FF09FFB 		j	.L9
 157              	.LVL18:
 158              	.L6:
  36:src/MemoryAllocator.cpp **** 			remainderFree->prev = current->prev;
 159              		.loc 1 36 4 is_stmt 1
  36:src/MemoryAllocator.cpp **** 			remainderFree->prev = current->prev;
 160              		.loc 1 36 24 is_stmt 0
 161 00c4 23B8C600 		sd	a2,16(a3)
GAS LISTING /tmp/ccaBlXnF.s 			page 5


  37:src/MemoryAllocator.cpp **** 			if (current->prev) current->prev->next = remainderFree;
 162              		.loc 1 37 4 is_stmt 1
  37:src/MemoryAllocator.cpp **** 			if (current->prev) current->prev->next = remainderFree;
 163              		.loc 1 37 35 is_stmt 0
 164 00c8 03378500 		ld	a4,8(a0)
  37:src/MemoryAllocator.cpp **** 			if (current->prev) current->prev->next = remainderFree;
 165              		.loc 1 37 24
 166 00cc 23B4E600 		sd	a4,8(a3)
  38:src/MemoryAllocator.cpp **** 			remainderFree->next = current->next;
 167              		.loc 1 38 4 is_stmt 1
 168 00d0 63040700 		beqz	a4,.L10
  38:src/MemoryAllocator.cpp **** 			remainderFree->next = current->next;
 169              		.loc 1 38 23 discriminator 1
  38:src/MemoryAllocator.cpp **** 			remainderFree->next = current->next;
 170              		.loc 1 38 43 is_stmt 0 discriminator 1
 171 00d4 2330D700 		sd	a3,0(a4)
 172              	.L10:
  39:src/MemoryAllocator.cpp **** 			if (current->next) current->next->prev = remainderFree;
 173              		.loc 1 39 4 is_stmt 1
  39:src/MemoryAllocator.cpp **** 			if (current->next) current->next->prev = remainderFree;
 174              		.loc 1 39 35 is_stmt 0
 175 00d8 03370500 		ld	a4,0(a0)
  39:src/MemoryAllocator.cpp **** 			if (current->next) current->next->prev = remainderFree;
 176              		.loc 1 39 24
 177 00dc 23B0E600 		sd	a4,0(a3)
  40:src/MemoryAllocator.cpp **** 			if (freeMemHead == current) { freeMemHead = remainderFree; }
 178              		.loc 1 40 4 is_stmt 1
 179 00e0 63040700 		beqz	a4,.L11
  40:src/MemoryAllocator.cpp **** 			if (freeMemHead == current) { freeMemHead = remainderFree; }
 180              		.loc 1 40 23 discriminator 1
  40:src/MemoryAllocator.cpp **** 			if (freeMemHead == current) { freeMemHead = remainderFree; }
 181              		.loc 1 40 43 is_stmt 0 discriminator 1
 182 00e4 2334D700 		sd	a3,8(a4)
 183              	.L11:
  41:src/MemoryAllocator.cpp **** 		}
 184              		.loc 1 41 4 is_stmt 1
  41:src/MemoryAllocator.cpp **** 		}
 185              		.loc 1 41 20 is_stmt 0
 186 00e8 17070000 		ld	a4,.LANCHOR0
 186      03370700 
  41:src/MemoryAllocator.cpp **** 		}
 187              		.loc 1 41 4
 188 00f0 6306A700 		beq	a4,a0,.L21
 189              	.LBE6:
 190              	.LBE2:
  20:src/MemoryAllocator.cpp **** 
 191              		.loc 1 20 7
 192 00f4 13870700 		mv	a4,a5
 193 00f8 6FF01FF8 		j	.L9
 194              	.L21:
 195              	.LBB10:
 196              	.LBB7:
  41:src/MemoryAllocator.cpp **** 		}
 197              		.loc 1 41 34 is_stmt 1 discriminator 1
  41:src/MemoryAllocator.cpp **** 		}
 198              		.loc 1 41 46 is_stmt 0 discriminator 1
 199 00fc 17070000 		sd	a3,.LANCHOR0,a4
GAS LISTING /tmp/ccaBlXnF.s 			page 6


 199      2330D700 
 200              	.LBE7:
 201              	.LBE10:
  20:src/MemoryAllocator.cpp **** 
 202              		.loc 1 20 7 discriminator 1
 203 0104 13870700 		mv	a4,a5
 204              	.LBB11:
 205              	.LBB8:
 206 0108 6FF01FF7 		j	.L9
 207              	.LVL19:
 208              	.L12:
  52:src/MemoryAllocator.cpp **** 		}
  53:src/MemoryAllocator.cpp **** 		if (!prevUsed) {
 209              		.loc 1 53 3 is_stmt 1
 210 010c 63000702 		beqz	a4,.L22
  54:src/MemoryAllocator.cpp **** 			newFragment->next = usedMemHead;
  55:src/MemoryAllocator.cpp **** 			usedMemHead = newFragment;
  56:src/MemoryAllocator.cpp **** 		} else {
  57:src/MemoryAllocator.cpp **** 			newFragment->next = prevUsed->next;
 211              		.loc 1 57 4
 212              		.loc 1 57 34 is_stmt 0
 213 0110 83370700 		ld	a5,0(a4)
 214              	.LVL20:
 215              		.loc 1 57 22
 216 0114 2330F500 		sd	a5,0(a0)
  58:src/MemoryAllocator.cpp **** 			prevUsed->next = newFragment;
 217              		.loc 1 58 4 is_stmt 1
 218              		.loc 1 58 19 is_stmt 0
 219 0118 2330A700 		sd	a0,0(a4)
 220              	.LVL21:
 221              	.L15:
  59:src/MemoryAllocator.cpp **** 		}
  60:src/MemoryAllocator.cpp **** 		//return (char*)newFragment + sizeof(UsedMemSegment);
  61:src/MemoryAllocator.cpp **** 		return newFragment->usableFirstAddress;
 222              		.loc 1 61 3 is_stmt 1
 223              		.loc 1 61 23 is_stmt 0
 224 011c 03358501 		ld	a0,24(a0)
 225              	.LVL22:
 226              	.L1:
 227              	.LBE8:
 228              	.LBE11:
  62:src/MemoryAllocator.cpp **** 	}
  63:src/MemoryAllocator.cpp **** 	return nullptr;
  64:src/MemoryAllocator.cpp **** }
 229              		.loc 1 64 1
 230 0120 03348100 		ld	s0,8(sp)
 231              		.cfi_remember_state
 232              		.cfi_restore 8
 233              		.cfi_def_cfa 2, 16
 234 0124 13010101 		addi	sp,sp,16
 235              		.cfi_def_cfa_offset 0
 236 0128 67800000 		jr	ra
 237              	.LVL23:
 238              	.L22:
 239              		.cfi_restore_state
 240              	.LBB12:
 241              	.LBB9:
GAS LISTING /tmp/ccaBlXnF.s 			page 7


  54:src/MemoryAllocator.cpp **** 			usedMemHead = newFragment;
 242              		.loc 1 54 4 is_stmt 1
  54:src/MemoryAllocator.cpp **** 			usedMemHead = newFragment;
 243              		.loc 1 54 22 is_stmt 0
 244 012c 2330D500 		sd	a3,0(a0)
  55:src/MemoryAllocator.cpp **** 		} else {
 245              		.loc 1 55 4 is_stmt 1
  55:src/MemoryAllocator.cpp **** 		} else {
 246              		.loc 1 55 16 is_stmt 0
 247 0130 97070000 		sd	a0,.LANCHOR0+8,a5
 247      23B0A700 
 248              	.LVL24:
 249 0138 6FF05FFE 		j	.L15
 250              	.LVL25:
 251              	.L16:
 252              	.LBE9:
 253              	.LBE12:
  14:src/MemoryAllocator.cpp **** 
 254              		.loc 1 14 24
 255 013c 13050000 		li	a0,0
 256              	.LVL26:
 257 0140 6FF01FFE 		j	.L1
 258              		.cfi_endproc
 259              	.LFE3:
 261              		.align	2
 262              		.globl	_ZN15MemoryAllocator9tryToJoinEPNS_14FreeMemSegmentE
 264              	_ZN15MemoryAllocator9tryToJoinEPNS_14FreeMemSegmentE:
 265              	.LFB5:
  65:src/MemoryAllocator.cpp **** 
  66:src/MemoryAllocator.cpp **** int MemoryAllocator::kfree(void* ptr) {
  67:src/MemoryAllocator.cpp **** 	if (!ptr) return 0;
  68:src/MemoryAllocator.cpp **** 	if (!usedMemHead) return -1;
  69:src/MemoryAllocator.cpp **** 	//ptr pokazuje na usableFirstAddress, pre toga je zaglavlje segmenta
  70:src/MemoryAllocator.cpp **** 	ptr = (char*)ptr - sizeof(UsedMemSegment);
  71:src/MemoryAllocator.cpp **** 
  72:src/MemoryAllocator.cpp **** 	//trazenje adrese ptr u listi zauzetih segmenata
  73:src/MemoryAllocator.cpp **** 	UsedMemSegment* currentUsed = usedMemHead;
  74:src/MemoryAllocator.cpp **** 	UsedMemSegment* prevUsed = nullptr;
  75:src/MemoryAllocator.cpp **** 	for (; currentUsed && ((char*)currentUsed != (char*)ptr); currentUsed = currentUsed->next) {
  76:src/MemoryAllocator.cpp **** 		prevUsed = currentUsed;
  77:src/MemoryAllocator.cpp **** 	}
  78:src/MemoryAllocator.cpp **** 	if ((char*)currentUsed != (char*)ptr) return -1;    //adresa ne odgovara segmentu alociranom preko
  79:src/MemoryAllocator.cpp **** 
  80:src/MemoryAllocator.cpp **** 	//prevezivanje liste zauzetih segmenata
  81:src/MemoryAllocator.cpp **** 	if (prevUsed) prevUsed->next = currentUsed->next;
  82:src/MemoryAllocator.cpp **** 	else usedMemHead = currentUsed->next;
  83:src/MemoryAllocator.cpp **** 
  84:src/MemoryAllocator.cpp **** 	//oslobadjanje segmenta i ubacivanje u listu slobodnih
  85:src/MemoryAllocator.cpp **** 	FreeMemSegment* prevFree = nullptr;
  86:src/MemoryAllocator.cpp **** 	if (!freeMemHead || ((char*)ptr < (char*)freeMemHead)) {
  87:src/MemoryAllocator.cpp **** 		prevFree = nullptr;
  88:src/MemoryAllocator.cpp **** 	} else {
  89:src/MemoryAllocator.cpp **** 		for (prevFree = freeMemHead;
  90:src/MemoryAllocator.cpp **** 			 prevFree->next && (char*)ptr > (char*)(prevFree->next); prevFree = prevFree->next);
  91:src/MemoryAllocator.cpp **** 	}
  92:src/MemoryAllocator.cpp **** 	FreeMemSegment* newFree = (FreeMemSegment*)ptr;
  93:src/MemoryAllocator.cpp **** 	size_t segmentSize = ((UsedMemSegment*)ptr)->size;
GAS LISTING /tmp/ccaBlXnF.s 			page 8


  94:src/MemoryAllocator.cpp **** 	newFree->size = segmentSize;
  95:src/MemoryAllocator.cpp **** 	newFree->prev = prevFree;
  96:src/MemoryAllocator.cpp **** 	if (prevFree) newFree->next = prevFree->next;
  97:src/MemoryAllocator.cpp **** 	else newFree->next = freeMemHead;
  98:src/MemoryAllocator.cpp **** 	if (newFree->next) newFree->next->prev = newFree;
  99:src/MemoryAllocator.cpp **** 	if (prevFree) prevFree->next = newFree;
 100:src/MemoryAllocator.cpp **** 	else freeMemHead = newFree;
 101:src/MemoryAllocator.cpp **** 
 102:src/MemoryAllocator.cpp **** 	//spajanje uzastopnih slobodnih segmenata
 103:src/MemoryAllocator.cpp **** 	tryToJoin(newFree);
 104:src/MemoryAllocator.cpp **** 	tryToJoin(prevFree);
 105:src/MemoryAllocator.cpp **** 	return 0;
 106:src/MemoryAllocator.cpp **** }
 107:src/MemoryAllocator.cpp **** 
 108:src/MemoryAllocator.cpp **** int MemoryAllocator::tryToJoin(MemoryAllocator::FreeMemSegment* current) {
 266              		.loc 1 108 74 is_stmt 1
 267              		.cfi_startproc
 268              	.LVL27:
 269 0144 130101FF 		addi	sp,sp,-16
 270              		.cfi_def_cfa_offset 16
 271 0148 23348100 		sd	s0,8(sp)
 272              		.cfi_offset 8, -8
 273 014c 13040101 		addi	s0,sp,16
 274              		.cfi_def_cfa 8, 0
 109:src/MemoryAllocator.cpp **** 	if (!current) return 0;
 275              		.loc 1 109 2
 276 0150 63060504 		beqz	a0,.L26
 110:src/MemoryAllocator.cpp **** 	bool nextExists = current->next != nullptr;
 277              		.loc 1 110 2
 278              		.loc 1 110 29 is_stmt 0
 279 0154 83370500 		ld	a5,0(a0)
 280              	.LVL28:
 111:src/MemoryAllocator.cpp **** 	char* nextAddr = (char*)current + current->size;
 281              		.loc 1 111 2 is_stmt 1
 282              		.loc 1 111 45 is_stmt 0
 283 0158 03370501 		ld	a4,16(a0)
 284              		.loc 1 111 8
 285 015c B306E500 		add	a3,a0,a4
 286              	.LVL29:
 112:src/MemoryAllocator.cpp **** 	char* cnext = (char*)current->next;
 287              		.loc 1 112 2 is_stmt 1
 113:src/MemoryAllocator.cpp **** 	bool nextIsConnected = (nextAddr == cnext);
 288              		.loc 1 113 2
 114:src/MemoryAllocator.cpp **** 	if (nextExists && nextIsConnected) {
 289              		.loc 1 114 2
 290 0160 63820704 		beqz	a5,.L27
 291              		.loc 1 114 17 is_stmt 0 discriminator 1
 292 0164 638AD700 		beq	a5,a3,.L30
 115:src/MemoryAllocator.cpp **** 		current->size += current->next->size;
 116:src/MemoryAllocator.cpp **** 		current->next = current->next->next;
 117:src/MemoryAllocator.cpp **** 		if (current->next) current->next->prev = current;
 118:src/MemoryAllocator.cpp **** 		return 1;
 119:src/MemoryAllocator.cpp **** 	} else return 0;
 293              		.loc 1 119 16
 294 0168 13050000 		li	a0,0
 295              	.LVL30:
 296              	.L24:
GAS LISTING /tmp/ccaBlXnF.s 			page 9


 120:src/MemoryAllocator.cpp **** }
 297              		.loc 1 120 1
 298 016c 03348100 		ld	s0,8(sp)
 299              		.cfi_remember_state
 300              		.cfi_restore 8
 301              		.cfi_def_cfa 2, 16
 302 0170 13010101 		addi	sp,sp,16
 303              		.cfi_def_cfa_offset 0
 304 0174 67800000 		jr	ra
 305              	.LVL31:
 306              	.L30:
 307              		.cfi_restore_state
 115:src/MemoryAllocator.cpp **** 		current->size += current->next->size;
 308              		.loc 1 115 3 is_stmt 1
 115:src/MemoryAllocator.cpp **** 		current->size += current->next->size;
 309              		.loc 1 115 35 is_stmt 0
 310 0178 83B60701 		ld	a3,16(a5)
 311              	.LVL32:
 115:src/MemoryAllocator.cpp **** 		current->size += current->next->size;
 312              		.loc 1 115 17
 313 017c 3307D700 		add	a4,a4,a3
 314              	.LVL33:
 315 0180 2338E500 		sd	a4,16(a0)
 316              	.LVL34:
 116:src/MemoryAllocator.cpp **** 		if (current->next) current->next->prev = current;
 317              		.loc 1 116 3 is_stmt 1
 116:src/MemoryAllocator.cpp **** 		if (current->next) current->next->prev = current;
 318              		.loc 1 116 34 is_stmt 0
 319 0184 83B70700 		ld	a5,0(a5)
 320              	.LVL35:
 116:src/MemoryAllocator.cpp **** 		if (current->next) current->next->prev = current;
 321              		.loc 1 116 17
 322 0188 2330F500 		sd	a5,0(a0)
 323              	.LVL36:
 117:src/MemoryAllocator.cpp **** 		return 1;
 324              		.loc 1 117 3 is_stmt 1
 325 018c 63840700 		beqz	a5,.L25
 117:src/MemoryAllocator.cpp **** 		return 1;
 326              		.loc 1 117 22 discriminator 1
 117:src/MemoryAllocator.cpp **** 		return 1;
 327              		.loc 1 117 42 is_stmt 0 discriminator 1
 328 0190 23B4A700 		sd	a0,8(a5)
 329              	.L25:
 118:src/MemoryAllocator.cpp **** 	} else return 0;
 330              		.loc 1 118 3 is_stmt 1
 118:src/MemoryAllocator.cpp **** 	} else return 0;
 331              		.loc 1 118 10 is_stmt 0
 332 0194 13051000 		li	a0,1
 333              	.LVL37:
 334 0198 6FF05FFD 		j	.L24
 335              	.LVL38:
 336              	.L26:
 109:src/MemoryAllocator.cpp **** 	bool nextExists = current->next != nullptr;
 337              		.loc 1 109 23
 338 019c 13050000 		li	a0,0
 339              	.LVL39:
 340 01a0 6FF0DFFC 		j	.L24
GAS LISTING /tmp/ccaBlXnF.s 			page 10


 341              	.LVL40:
 342              	.L27:
 119:src/MemoryAllocator.cpp **** }
 343              		.loc 1 119 16
 344 01a4 13050000 		li	a0,0
 345              	.LVL41:
 346 01a8 6FF05FFC 		j	.L24
 347              		.cfi_endproc
 348              	.LFE5:
 350              		.align	2
 351              		.globl	_ZN15MemoryAllocator5kfreeEPv
 353              	_ZN15MemoryAllocator5kfreeEPv:
 354              	.LFB4:
  66:src/MemoryAllocator.cpp **** 	if (!ptr) return 0;
 355              		.loc 1 66 39 is_stmt 1
 356              		.cfi_startproc
 357              	.LVL42:
  67:src/MemoryAllocator.cpp **** 	if (!usedMemHead) return -1;
 358              		.loc 1 67 2
 359 01ac 63040510 		beqz	a0,.L44
 360 01b0 93060500 		mv	a3,a0
  68:src/MemoryAllocator.cpp **** 	//ptr pokazuje na usableFirstAddress, pre toga je zaglavlje segmenta
 361              		.loc 1 68 2
  68:src/MemoryAllocator.cpp **** 	//ptr pokazuje na usableFirstAddress, pre toga je zaglavlje segmenta
 362              		.loc 1 68 6 is_stmt 0
 363 01b4 97070000 		ld	a5,.LANCHOR0+8
 363      83B70700 
  68:src/MemoryAllocator.cpp **** 	//ptr pokazuje na usableFirstAddress, pre toga je zaglavlje segmenta
 364              		.loc 1 68 2
 365 01bc 63800710 		beqz	a5,.L45
  70:src/MemoryAllocator.cpp **** 
 366              		.loc 1 70 2 is_stmt 1
  70:src/MemoryAllocator.cpp **** 
 367              		.loc 1 70 6 is_stmt 0
 368 01c0 130505FE 		addi	a0,a0,-32
 369              	.LVL43:
  73:src/MemoryAllocator.cpp **** 	UsedMemSegment* prevUsed = nullptr;
 370              		.loc 1 73 2 is_stmt 1
  74:src/MemoryAllocator.cpp **** 	for (; currentUsed && ((char*)currentUsed != (char*)ptr); currentUsed = currentUsed->next) {
 371              		.loc 1 74 2
  74:src/MemoryAllocator.cpp **** 	for (; currentUsed && ((char*)currentUsed != (char*)ptr); currentUsed = currentUsed->next) {
 372              		.loc 1 74 18 is_stmt 0
 373 01c4 13070000 		li	a4,0
 374              	.LVL44:
 375              	.L34:
  75:src/MemoryAllocator.cpp **** 		prevUsed = currentUsed;
 376              		.loc 1 75 2 is_stmt 1 discriminator 3
  75:src/MemoryAllocator.cpp **** 		prevUsed = currentUsed;
 377              		.loc 1 75 21 discriminator 3
 378 01c8 638A0700 		beqz	a5,.L33
  75:src/MemoryAllocator.cpp **** 		prevUsed = currentUsed;
 379              		.loc 1 75 21 is_stmt 0 discriminator 1
 380 01cc 6388A700 		beq	a5,a0,.L33
  76:src/MemoryAllocator.cpp **** 	}
 381              		.loc 1 76 3 is_stmt 1 discriminator 2
 382              	.LVL45:
  75:src/MemoryAllocator.cpp **** 		prevUsed = currentUsed;
GAS LISTING /tmp/ccaBlXnF.s 			page 11


 383              		.loc 1 75 2 discriminator 2
  76:src/MemoryAllocator.cpp **** 	}
 384              		.loc 1 76 12 is_stmt 0 discriminator 2
 385 01d0 13870700 		mv	a4,a5
  75:src/MemoryAllocator.cpp **** 		prevUsed = currentUsed;
 386              		.loc 1 75 72 discriminator 2
 387 01d4 83B70700 		ld	a5,0(a5)
 388              	.LVL46:
  75:src/MemoryAllocator.cpp **** 		prevUsed = currentUsed;
 389              		.loc 1 75 2 discriminator 2
 390 01d8 6FF01FFF 		j	.L34
 391              	.L33:
  78:src/MemoryAllocator.cpp **** 
 392              		.loc 1 78 2 is_stmt 1
 393 01dc 6394A70E 		bne	a5,a0,.L46
  66:src/MemoryAllocator.cpp **** 	if (!ptr) return 0;
 394              		.loc 1 66 39 is_stmt 0
 395 01e0 130101FE 		addi	sp,sp,-32
 396              		.cfi_def_cfa_offset 32
 397 01e4 233C1100 		sd	ra,24(sp)
 398 01e8 23388100 		sd	s0,16(sp)
 399 01ec 23349100 		sd	s1,8(sp)
 400              		.cfi_offset 1, -8
 401              		.cfi_offset 8, -16
 402              		.cfi_offset 9, -24
 403 01f0 13040102 		addi	s0,sp,32
 404              		.cfi_def_cfa 8, 0
  81:src/MemoryAllocator.cpp **** 	else usedMemHead = currentUsed->next;
 405              		.loc 1 81 2 is_stmt 1
 406 01f4 63080702 		beqz	a4,.L35
  81:src/MemoryAllocator.cpp **** 	else usedMemHead = currentUsed->next;
 407              		.loc 1 81 16 discriminator 1
  81:src/MemoryAllocator.cpp **** 	else usedMemHead = currentUsed->next;
 408              		.loc 1 81 46 is_stmt 0 discriminator 1
 409 01f8 83B70700 		ld	a5,0(a5)
 410              	.LVL47:
  81:src/MemoryAllocator.cpp **** 	else usedMemHead = currentUsed->next;
 411              		.loc 1 81 31 discriminator 1
 412 01fc 2330F700 		sd	a5,0(a4)
 413              	.LVL48:
 414              	.L36:
  85:src/MemoryAllocator.cpp **** 	if (!freeMemHead || ((char*)ptr < (char*)freeMemHead)) {
 415              		.loc 1 85 2 is_stmt 1
  86:src/MemoryAllocator.cpp **** 		prevFree = nullptr;
 416              		.loc 1 86 2
  86:src/MemoryAllocator.cpp **** 		prevFree = nullptr;
 417              		.loc 1 86 6 is_stmt 0
 418 0200 97070000 		ld	a5,.LANCHOR0
 418      83B70700 
  86:src/MemoryAllocator.cpp **** 		prevFree = nullptr;
 419              		.loc 1 86 2
 420 0208 63860702 		beqz	a5,.L47
  86:src/MemoryAllocator.cpp **** 		prevFree = nullptr;
 421              		.loc 1 86 19 discriminator 1
 422 020c 6368F502 		bgtu	a5,a0,.L48
 423              	.LVL49:
 424              	.L38:
GAS LISTING /tmp/ccaBlXnF.s 			page 12


  90:src/MemoryAllocator.cpp **** 	}
 425              		.loc 1 90 20 is_stmt 1 discriminator 3
 426 0210 93840700 		mv	s1,a5
  90:src/MemoryAllocator.cpp **** 	}
 427              		.loc 1 90 15 is_stmt 0 discriminator 3
 428 0214 83B70700 		ld	a5,0(a5)
 429              	.LVL50:
  90:src/MemoryAllocator.cpp **** 	}
 430              		.loc 1 90 20 discriminator 3
 431 0218 63840702 		beqz	a5,.L37
  90:src/MemoryAllocator.cpp **** 	}
 432              		.loc 1 90 20 discriminator 1
 433 021c E3EAA7FE 		bltu	a5,a0,.L38
 434 0220 6F000002 		j	.L37
 435              	.LVL51:
 436              	.L35:
  82:src/MemoryAllocator.cpp **** 
 437              		.loc 1 82 7 is_stmt 1
  82:src/MemoryAllocator.cpp **** 
 438              		.loc 1 82 34 is_stmt 0
 439 0224 83B70700 		ld	a5,0(a5)
 440              	.LVL52:
  82:src/MemoryAllocator.cpp **** 
 441              		.loc 1 82 19
 442 0228 17070000 		sd	a5,.LANCHOR0+8,a4
 442      2330F700 
 443              	.LVL53:
 444 0230 6FF01FFD 		j	.L36
 445              	.LVL54:
 446              	.L47:
  87:src/MemoryAllocator.cpp **** 	} else {
 447              		.loc 1 87 12
 448 0234 93840700 		mv	s1,a5
 449 0238 6F008000 		j	.L37
 450              	.L48:
 451 023c 93040000 		li	s1,0
 452              	.LVL55:
 453              	.L37:
  92:src/MemoryAllocator.cpp **** 	size_t segmentSize = ((UsedMemSegment*)ptr)->size;
 454              		.loc 1 92 2 is_stmt 1
  93:src/MemoryAllocator.cpp **** 	newFree->size = segmentSize;
 455              		.loc 1 93 2
  93:src/MemoryAllocator.cpp **** 	newFree->size = segmentSize;
 456              		.loc 1 93 9 is_stmt 0
 457 0240 83B786FE 		ld	a5,-24(a3)
 458              	.LVL56:
  94:src/MemoryAllocator.cpp **** 	newFree->prev = prevFree;
 459              		.loc 1 94 2 is_stmt 1
  94:src/MemoryAllocator.cpp **** 	newFree->prev = prevFree;
 460              		.loc 1 94 16 is_stmt 0
 461 0244 23B8F6FE 		sd	a5,-16(a3)
  95:src/MemoryAllocator.cpp **** 	if (prevFree) newFree->next = prevFree->next;
 462              		.loc 1 95 2 is_stmt 1
  95:src/MemoryAllocator.cpp **** 	if (prevFree) newFree->next = prevFree->next;
 463              		.loc 1 95 16 is_stmt 0
 464 0248 23B496FE 		sd	s1,-24(a3)
  96:src/MemoryAllocator.cpp **** 	else newFree->next = freeMemHead;
GAS LISTING /tmp/ccaBlXnF.s 			page 13


 465              		.loc 1 96 2 is_stmt 1
 466 024c 63860404 		beqz	s1,.L39
  96:src/MemoryAllocator.cpp **** 	else newFree->next = freeMemHead;
 467              		.loc 1 96 16 discriminator 1
  96:src/MemoryAllocator.cpp **** 	else newFree->next = freeMemHead;
 468              		.loc 1 96 42 is_stmt 0 discriminator 1
 469 0250 83B70400 		ld	a5,0(s1)
 470              	.LVL57:
  96:src/MemoryAllocator.cpp **** 	else newFree->next = freeMemHead;
 471              		.loc 1 96 30 discriminator 1
 472 0254 23B0F6FE 		sd	a5,-32(a3)
 473              	.L40:
  98:src/MemoryAllocator.cpp **** 	if (prevFree) prevFree->next = newFree;
 474              		.loc 1 98 2 is_stmt 1
  98:src/MemoryAllocator.cpp **** 	if (prevFree) prevFree->next = newFree;
 475              		.loc 1 98 15 is_stmt 0
 476 0258 83B706FE 		ld	a5,-32(a3)
  98:src/MemoryAllocator.cpp **** 	if (prevFree) prevFree->next = newFree;
 477              		.loc 1 98 2
 478 025c 63840700 		beqz	a5,.L41
  98:src/MemoryAllocator.cpp **** 	if (prevFree) prevFree->next = newFree;
 479              		.loc 1 98 21 is_stmt 1 discriminator 1
  98:src/MemoryAllocator.cpp **** 	if (prevFree) prevFree->next = newFree;
 480              		.loc 1 98 41 is_stmt 0 discriminator 1
 481 0260 23B4A700 		sd	a0,8(a5)
 482              	.LVL58:
 483              	.L41:
  99:src/MemoryAllocator.cpp **** 	else freeMemHead = newFree;
 484              		.loc 1 99 2 is_stmt 1
 485 0264 63820404 		beqz	s1,.L42
  99:src/MemoryAllocator.cpp **** 	else freeMemHead = newFree;
 486              		.loc 1 99 16 discriminator 1
  99:src/MemoryAllocator.cpp **** 	else freeMemHead = newFree;
 487              		.loc 1 99 31 is_stmt 0 discriminator 1
 488 0268 23B0A400 		sd	a0,0(s1)
 489              	.L43:
 103:src/MemoryAllocator.cpp **** 	tryToJoin(prevFree);
 490              		.loc 1 103 2 is_stmt 1
 103:src/MemoryAllocator.cpp **** 	tryToJoin(prevFree);
 491              		.loc 1 103 11 is_stmt 0
 492 026c 97000000 		call	_ZN15MemoryAllocator9tryToJoinEPNS_14FreeMemSegmentE
 492      E7800000 
 493              	.LVL59:
 104:src/MemoryAllocator.cpp **** 	return 0;
 494              		.loc 1 104 2 is_stmt 1
 104:src/MemoryAllocator.cpp **** 	return 0;
 495              		.loc 1 104 11 is_stmt 0
 496 0274 13850400 		mv	a0,s1
 497 0278 97000000 		call	_ZN15MemoryAllocator9tryToJoinEPNS_14FreeMemSegmentE
 497      E7800000 
 498              	.LVL60:
 105:src/MemoryAllocator.cpp **** }
 499              		.loc 1 105 2 is_stmt 1
 105:src/MemoryAllocator.cpp **** }
 500              		.loc 1 105 9 is_stmt 0
 501 0280 13050000 		li	a0,0
 106:src/MemoryAllocator.cpp **** 
GAS LISTING /tmp/ccaBlXnF.s 			page 14


 502              		.loc 1 106 1
 503 0284 83308101 		ld	ra,24(sp)
 504              		.cfi_remember_state
 505              		.cfi_restore 1
 506 0288 03340101 		ld	s0,16(sp)
 507              		.cfi_restore 8
 508              		.cfi_def_cfa 2, 32
 509 028c 83348100 		ld	s1,8(sp)
 510              		.cfi_restore 9
 511              	.LVL61:
 512 0290 13010102 		addi	sp,sp,32
 513              		.cfi_def_cfa_offset 0
 514 0294 67800000 		jr	ra
 515              	.LVL62:
 516              	.L39:
 517              		.cfi_restore_state
  97:src/MemoryAllocator.cpp **** 	if (newFree->next) newFree->next->prev = newFree;
 518              		.loc 1 97 7 is_stmt 1
  97:src/MemoryAllocator.cpp **** 	if (newFree->next) newFree->next->prev = newFree;
 519              		.loc 1 97 21 is_stmt 0
 520 0298 97070000 		ld	a5,.LANCHOR0
 520      83B70700 
 521              	.LVL63:
 522 02a0 23B0F6FE 		sd	a5,-32(a3)
 523 02a4 6FF05FFB 		j	.L40
 524              	.LVL64:
 525              	.L42:
 100:src/MemoryAllocator.cpp **** 
 526              		.loc 1 100 7 is_stmt 1
 100:src/MemoryAllocator.cpp **** 
 527              		.loc 1 100 19 is_stmt 0
 528 02a8 97070000 		sd	a0,.LANCHOR0,a5
 528      23B0A700 
 529 02b0 6FF0DFFB 		j	.L43
 530              	.LVL65:
 531              	.L44:
 532              		.cfi_def_cfa_register 2
 533              		.cfi_restore 1
 534              		.cfi_restore 8
 535              		.cfi_restore 9
  67:src/MemoryAllocator.cpp **** 	if (!usedMemHead) return -1;
 536              		.loc 1 67 19
 537 02b4 13050000 		li	a0,0
 538              	.LVL66:
 539 02b8 67800000 		ret
 540              	.LVL67:
 541              	.L45:
  68:src/MemoryAllocator.cpp **** 	//ptr pokazuje na usableFirstAddress, pre toga je zaglavlje segmenta
 542              		.loc 1 68 28
 543 02bc 1305F0FF 		li	a0,-1
 544              	.LVL68:
 545 02c0 67800000 		ret
 546              	.LVL69:
 547              	.L46:
  78:src/MemoryAllocator.cpp **** 
 548              		.loc 1 78 48
 549 02c4 1305F0FF 		li	a0,-1
GAS LISTING /tmp/ccaBlXnF.s 			page 15


 550              	.LVL70:
 106:src/MemoryAllocator.cpp **** 
 551              		.loc 1 106 1
 552 02c8 67800000 		ret
 553              		.cfi_endproc
 554              	.LFE4:
 556              		.align	2
 557              		.globl	_ZN15MemoryAllocator12checkPurposeEPvNS_7PurposeE
 559              	_ZN15MemoryAllocator12checkPurposeEPvNS_7PurposeE:
 560              	.LFB6:
 121:src/MemoryAllocator.cpp **** 
 122:src/MemoryAllocator.cpp **** bool MemoryAllocator::checkPurpose(void* ptr, MemoryAllocator::Purpose p) {
 561              		.loc 1 122 75 is_stmt 1
 562              		.cfi_startproc
 563              	.LVL71:
 564 02cc 130101FF 		addi	sp,sp,-16
 565              		.cfi_def_cfa_offset 16
 566 02d0 23348100 		sd	s0,8(sp)
 567              		.cfi_offset 8, -8
 568 02d4 13040101 		addi	s0,sp,16
 569              		.cfi_def_cfa 8, 0
 123:src/MemoryAllocator.cpp **** 	ptr = (char*)ptr - sizeof(UsedMemSegment);
 570              		.loc 1 123 2
 571              	.LVL72:
 124:src/MemoryAllocator.cpp **** 	return ((UsedMemSegment*)ptr)->purpose == p;
 572              		.loc 1 124 2
 573              		.loc 1 124 33 is_stmt 0
 574 02d8 032505FF 		lw	a0,-16(a0)
 575              	.LVL73:
 576              		.loc 1 124 44
 577 02dc 3305B540 		sub	a0,a0,a1
 125:src/MemoryAllocator.cpp **** }
 578              		.loc 1 125 1
 579 02e0 13351500 		seqz	a0,a0
 580 02e4 03348100 		ld	s0,8(sp)
 581              		.cfi_restore 8
 582              		.cfi_def_cfa 2, 16
 583 02e8 13010101 		addi	sp,sp,16
 584              		.cfi_def_cfa_offset 0
 585 02ec 67800000 		jr	ra
 586              		.cfi_endproc
 587              	.LFE6:
 589              		.align	2
 590              		.globl	_ZN15MemoryAllocator19initMemoryAllocatorEv
 592              	_ZN15MemoryAllocator19initMemoryAllocatorEv:
 593              	.LFB7:
 126:src/MemoryAllocator.cpp **** 
 127:src/MemoryAllocator.cpp **** void MemoryAllocator::initMemoryAllocator() {
 594              		.loc 1 127 45 is_stmt 1
 595              		.cfi_startproc
 596 02f0 130101FF 		addi	sp,sp,-16
 597              		.cfi_def_cfa_offset 16
 598 02f4 23348100 		sd	s0,8(sp)
 599              		.cfi_offset 8, -8
 600 02f8 13040101 		addi	s0,sp,16
 601              		.cfi_def_cfa 8, 0
 128:src/MemoryAllocator.cpp **** //pocetna inicijalizacija
GAS LISTING /tmp/ccaBlXnF.s 			page 16


 129:src/MemoryAllocator.cpp **** 	if (!initialized) {
 602              		.loc 1 129 2
 603              		.loc 1 129 6 is_stmt 0
 604 02fc 97070000 		lbu	a5,.LANCHOR0+16
 604      83C70700 
 605              		.loc 1 129 2
 606 0304 63960704 		bnez	a5,.L55
 130:src/MemoryAllocator.cpp **** 		freeMemHead = (FreeMemSegment*)HEAP_START_ADDR;
 607              		.loc 1 130 3 is_stmt 1
 608              		.loc 1 130 15 is_stmt 0
 609 0308 17060000 		la	a2,HEAP_START_ADDR
 609      03360600 
 610 0310 03370600 		ld	a4,0(a2)
 611 0314 97070000 		lla	a5,.LANCHOR0
 611      93870700 
 612 031c 23B0E700 		sd	a4,0(a5)
 131:src/MemoryAllocator.cpp **** 		freeMemHead->next = nullptr;
 613              		.loc 1 131 3 is_stmt 1
 614              		.loc 1 131 21 is_stmt 0
 615 0320 23300700 		sd	zero,0(a4)
 132:src/MemoryAllocator.cpp **** 		freeMemHead->prev = nullptr;
 616              		.loc 1 132 3 is_stmt 1
 617              		.loc 1 132 16 is_stmt 0
 618 0324 83B60700 		ld	a3,0(a5)
 619              		.loc 1 132 21
 620 0328 23B40600 		sd	zero,8(a3)
 133:src/MemoryAllocator.cpp **** 		freeMemHead->size = (char*)HEAP_END_ADDR - (char*)HEAP_START_ADDR;//- sizeof(FreeMemSegment);
 621              		.loc 1 133 3 is_stmt 1
 622              		.loc 1 133 23 is_stmt 0
 623 032c 17070000 		la	a4,HEAP_END_ADDR
 623      03370700 
 624 0334 03370700 		ld	a4,0(a4)
 625              		.loc 1 133 46
 626 0338 03360600 		ld	a2,0(a2)
 627              		.loc 1 133 44
 628 033c 3307C740 		sub	a4,a4,a2
 629              		.loc 1 133 21
 630 0340 23B8E600 		sd	a4,16(a3)
 134:src/MemoryAllocator.cpp **** 		usedMemHead = nullptr;
 631              		.loc 1 134 3 is_stmt 1
 632              		.loc 1 134 15 is_stmt 0
 633 0344 23B40700 		sd	zero,8(a5)
 135:src/MemoryAllocator.cpp **** 
 136:src/MemoryAllocator.cpp **** 		initialized = true;
 634              		.loc 1 136 3 is_stmt 1
 635              		.loc 1 136 15 is_stmt 0
 636 0348 13071000 		li	a4,1
 637 034c 2388E700 		sb	a4,16(a5)
 638              	.L55:
 137:src/MemoryAllocator.cpp **** 	}
 138:src/MemoryAllocator.cpp **** }
 639              		.loc 1 138 1
 640 0350 03348100 		ld	s0,8(sp)
 641              		.cfi_restore 8
 642              		.cfi_def_cfa 2, 16
 643 0354 13010101 		addi	sp,sp,16
 644              		.cfi_def_cfa_offset 0
GAS LISTING /tmp/ccaBlXnF.s 			page 17


 645 0358 67800000 		jr	ra
 646              		.cfi_endproc
 647              	.LFE7:
 649              		.globl	_ZN15MemoryAllocator11usedMemHeadE
 650              		.globl	_ZN15MemoryAllocator11freeMemHeadE
 651              		.globl	_ZN15MemoryAllocator11initializedE
 652              		.bss
 653              		.align	3
 654              		.set	.LANCHOR0,. + 0
 657              	_ZN15MemoryAllocator11freeMemHeadE:
 658 0000 00000000 		.zero	8
 658      00000000 
 661              	_ZN15MemoryAllocator11usedMemHeadE:
 662 0008 00000000 		.zero	8
 662      00000000 
 665              	_ZN15MemoryAllocator11initializedE:
 666 0010 00       		.zero	1
 667              		.text
 668              	.Letext0:
 669              		.file 2 "src/../h/../lib/hw.h"
 670              		.file 3 "src/../h/MemoryAllocator.hpp"
GAS LISTING /tmp/ccaBlXnF.s 			page 18


DEFINED SYMBOLS
                            *ABS*:0000000000000000 MemoryAllocator.cpp
     /tmp/ccaBlXnF.s:9      .text:0000000000000000 _ZN15MemoryAllocator7kmallocEmNS_7PurposeE
     /tmp/ccaBlXnF.s:13     .text:0000000000000000 .L0 
     /tmp/ccaBlXnF.s:15     .text:0000000000000000 .L0 
     /tmp/ccaBlXnF.s:16     .text:0000000000000004 .L0 
     /tmp/ccaBlXnF.s:18     .text:0000000000000008 .L0 
     /tmp/ccaBlXnF.s:20     .text:000000000000000c .L0 
     /tmp/ccaBlXnF.s:22     .text:000000000000000c .L0 
     /tmp/ccaBlXnF.s:24     .text:0000000000000010 .L0 
     /tmp/ccaBlXnF.s:25     .text:0000000000000010 .L0 
     /tmp/ccaBlXnF.s:27     .text:0000000000000014 .L0 
     /tmp/ccaBlXnF.s:30     .text:0000000000000018 .L0 
     /tmp/ccaBlXnF.s:34     .text:0000000000000020 .L0 
     /tmp/ccaBlXnF.s:37     .text:0000000000000024 .L0 
     /tmp/ccaBlXnF.s:38     .text:0000000000000024 .L0 
     /tmp/ccaBlXnF.s:42     .text:0000000000000028 .L0 
     /tmp/ccaBlXnF.s:43     .text:0000000000000028 .L0 
     /tmp/ccaBlXnF.s:47     .text:0000000000000030 .L0 
     /tmp/ccaBlXnF.s:50     .text:0000000000000034 .L0 
     /tmp/ccaBlXnF.s:51     .text:0000000000000034 .L0 
     /tmp/ccaBlXnF.s:53     .text:0000000000000038 .L0 
     /tmp/ccaBlXnF.s:55     .text:000000000000003c .L0 
     /tmp/ccaBlXnF.s:56     .text:000000000000003c .L0 
     /tmp/ccaBlXnF.s:59     .text:0000000000000040 .L0 
     /tmp/ccaBlXnF.s:60     .text:0000000000000040 .L0 
     /tmp/ccaBlXnF.s:63     .text:0000000000000044 .L0 
     /tmp/ccaBlXnF.s:67     .text:000000000000004c .L0 
     /tmp/ccaBlXnF.s:68     .text:000000000000004c .L0 
     /tmp/ccaBlXnF.s:69     .text:000000000000004c .L0 
     /tmp/ccaBlXnF.s:71     .text:0000000000000050 .L0 
     /tmp/ccaBlXnF.s:73     .text:0000000000000054 .L0 
     /tmp/ccaBlXnF.s:74     .text:0000000000000054 .L0 
     /tmp/ccaBlXnF.s:77     .text:0000000000000058 .L0 
     /tmp/ccaBlXnF.s:80     .text:000000000000005c .L0 
     /tmp/ccaBlXnF.s:81     .text:000000000000005c .L0 
     /tmp/ccaBlXnF.s:83     .text:0000000000000060 .L0 
     /tmp/ccaBlXnF.s:85     .text:0000000000000064 .L0 
     /tmp/ccaBlXnF.s:86     .text:0000000000000064 .L0 
     /tmp/ccaBlXnF.s:88     .text:0000000000000068 .L0 
     /tmp/ccaBlXnF.s:91     .text:000000000000006c .L0 
     /tmp/ccaBlXnF.s:92     .text:000000000000006c .L0 
     /tmp/ccaBlXnF.s:94     .text:0000000000000074 .L0 
     /tmp/ccaBlXnF.s:98     .text:0000000000000078 .L0 
     /tmp/ccaBlXnF.s:99     .text:0000000000000078 .L0 
     /tmp/ccaBlXnF.s:100    .text:0000000000000078 .L0 
     /tmp/ccaBlXnF.s:102    .text:000000000000007c .L0 
     /tmp/ccaBlXnF.s:103    .text:000000000000007c .L0 
     /tmp/ccaBlXnF.s:105    .text:0000000000000080 .L0 
     /tmp/ccaBlXnF.s:106    .text:0000000000000080 .L0 
     /tmp/ccaBlXnF.s:108    .text:0000000000000084 .L0 
     /tmp/ccaBlXnF.s:111    .text:0000000000000088 .L0 
     /tmp/ccaBlXnF.s:113    .text:0000000000000088 .L0 
     /tmp/ccaBlXnF.s:114    .text:0000000000000088 .L0 
     /tmp/ccaBlXnF.s:119    .text:0000000000000094 .L0 
     /tmp/ccaBlXnF.s:124    .text:0000000000000098 .L0 
     /tmp/ccaBlXnF.s:126    .text:000000000000009c .L0 
GAS LISTING /tmp/ccaBlXnF.s 			page 19


     /tmp/ccaBlXnF.s:129    .text:00000000000000a0 .L0 
     /tmp/ccaBlXnF.s:130    .text:00000000000000a0 .L0 
     /tmp/ccaBlXnF.s:131    .text:00000000000000a0 .L0 
     /tmp/ccaBlXnF.s:133    .text:00000000000000a4 .L0 
     /tmp/ccaBlXnF.s:136    .text:00000000000000a8 .L0 
     /tmp/ccaBlXnF.s:142    .text:00000000000000ac .L0 
     /tmp/ccaBlXnF.s:143    .text:00000000000000ac .L0 
     /tmp/ccaBlXnF.s:144    .text:00000000000000ac .L0 
     /tmp/ccaBlXnF.s:147    .text:00000000000000b0 .L0 
     /tmp/ccaBlXnF.s:152    .text:00000000000000b4 .L0 
     /tmp/ccaBlXnF.s:153    .text:00000000000000b4 .L0 
     /tmp/ccaBlXnF.s:155    .text:00000000000000b8 .L0 
     /tmp/ccaBlXnF.s:160    .text:00000000000000c4 .L0 
     /tmp/ccaBlXnF.s:161    .text:00000000000000c4 .L0 
     /tmp/ccaBlXnF.s:163    .text:00000000000000c8 .L0 
     /tmp/ccaBlXnF.s:164    .text:00000000000000c8 .L0 
     /tmp/ccaBlXnF.s:166    .text:00000000000000cc .L0 
     /tmp/ccaBlXnF.s:168    .text:00000000000000d0 .L0 
     /tmp/ccaBlXnF.s:170    .text:00000000000000d4 .L0 
     /tmp/ccaBlXnF.s:171    .text:00000000000000d4 .L0 
     /tmp/ccaBlXnF.s:174    .text:00000000000000d8 .L0 
     /tmp/ccaBlXnF.s:175    .text:00000000000000d8 .L0 
     /tmp/ccaBlXnF.s:177    .text:00000000000000dc .L0 
     /tmp/ccaBlXnF.s:179    .text:00000000000000e0 .L0 
     /tmp/ccaBlXnF.s:181    .text:00000000000000e4 .L0 
     /tmp/ccaBlXnF.s:182    .text:00000000000000e4 .L0 
     /tmp/ccaBlXnF.s:185    .text:00000000000000e8 .L0 
     /tmp/ccaBlXnF.s:186    .text:00000000000000e8 .L0 
     /tmp/ccaBlXnF.s:188    .text:00000000000000f0 .L0 
     /tmp/ccaBlXnF.s:192    .text:00000000000000f4 .L0 
     /tmp/ccaBlXnF.s:198    .text:00000000000000fc .L0 
     /tmp/ccaBlXnF.s:199    .text:00000000000000fc .L0 
     /tmp/ccaBlXnF.s:203    .text:0000000000000104 .L0 
     /tmp/ccaBlXnF.s:210    .text:000000000000010c .L0 
     /tmp/ccaBlXnF.s:212    .text:0000000000000110 .L0 
     /tmp/ccaBlXnF.s:213    .text:0000000000000110 .L0 
     /tmp/ccaBlXnF.s:216    .text:0000000000000114 .L0 
     /tmp/ccaBlXnF.s:218    .text:0000000000000118 .L0 
     /tmp/ccaBlXnF.s:219    .text:0000000000000118 .L0 
     /tmp/ccaBlXnF.s:223    .text:000000000000011c .L0 
     /tmp/ccaBlXnF.s:224    .text:000000000000011c .L0 
     /tmp/ccaBlXnF.s:230    .text:0000000000000120 .L0 
     /tmp/ccaBlXnF.s:231    .text:0000000000000124 .L0 
     /tmp/ccaBlXnF.s:232    .text:0000000000000124 .L0 
     /tmp/ccaBlXnF.s:233    .text:0000000000000124 .L0 
     /tmp/ccaBlXnF.s:235    .text:0000000000000128 .L0 
     /tmp/ccaBlXnF.s:239    .text:000000000000012c .L0 
     /tmp/ccaBlXnF.s:243    .text:000000000000012c .L0 
     /tmp/ccaBlXnF.s:244    .text:000000000000012c .L0 
     /tmp/ccaBlXnF.s:246    .text:0000000000000130 .L0 
     /tmp/ccaBlXnF.s:247    .text:0000000000000130 .L0 
     /tmp/ccaBlXnF.s:255    .text:000000000000013c .L0 
     /tmp/ccaBlXnF.s:258    .text:0000000000000144 .L0 
     /tmp/ccaBlXnF.s:264    .text:0000000000000144 _ZN15MemoryAllocator9tryToJoinEPNS_14FreeMemSegmentE
     /tmp/ccaBlXnF.s:267    .text:0000000000000144 .L0 
     /tmp/ccaBlXnF.s:269    .text:0000000000000144 .L0 
     /tmp/ccaBlXnF.s:270    .text:0000000000000148 .L0 
GAS LISTING /tmp/ccaBlXnF.s 			page 20


     /tmp/ccaBlXnF.s:272    .text:000000000000014c .L0 
     /tmp/ccaBlXnF.s:274    .text:0000000000000150 .L0 
     /tmp/ccaBlXnF.s:276    .text:0000000000000150 .L0 
     /tmp/ccaBlXnF.s:278    .text:0000000000000154 .L0 
     /tmp/ccaBlXnF.s:279    .text:0000000000000154 .L0 
     /tmp/ccaBlXnF.s:282    .text:0000000000000158 .L0 
     /tmp/ccaBlXnF.s:283    .text:0000000000000158 .L0 
     /tmp/ccaBlXnF.s:285    .text:000000000000015c .L0 
     /tmp/ccaBlXnF.s:288    .text:0000000000000160 .L0 
     /tmp/ccaBlXnF.s:289    .text:0000000000000160 .L0 
     /tmp/ccaBlXnF.s:290    .text:0000000000000160 .L0 
     /tmp/ccaBlXnF.s:292    .text:0000000000000164 .L0 
     /tmp/ccaBlXnF.s:294    .text:0000000000000168 .L0 
     /tmp/ccaBlXnF.s:298    .text:000000000000016c .L0 
     /tmp/ccaBlXnF.s:299    .text:0000000000000170 .L0 
     /tmp/ccaBlXnF.s:300    .text:0000000000000170 .L0 
     /tmp/ccaBlXnF.s:301    .text:0000000000000170 .L0 
     /tmp/ccaBlXnF.s:303    .text:0000000000000174 .L0 
     /tmp/ccaBlXnF.s:307    .text:0000000000000178 .L0 
     /tmp/ccaBlXnF.s:309    .text:0000000000000178 .L0 
     /tmp/ccaBlXnF.s:310    .text:0000000000000178 .L0 
     /tmp/ccaBlXnF.s:313    .text:000000000000017c .L0 
     /tmp/ccaBlXnF.s:318    .text:0000000000000184 .L0 
     /tmp/ccaBlXnF.s:319    .text:0000000000000184 .L0 
     /tmp/ccaBlXnF.s:322    .text:0000000000000188 .L0 
     /tmp/ccaBlXnF.s:325    .text:000000000000018c .L0 
     /tmp/ccaBlXnF.s:327    .text:0000000000000190 .L0 
     /tmp/ccaBlXnF.s:328    .text:0000000000000190 .L0 
     /tmp/ccaBlXnF.s:331    .text:0000000000000194 .L0 
     /tmp/ccaBlXnF.s:332    .text:0000000000000194 .L0 
     /tmp/ccaBlXnF.s:338    .text:000000000000019c .L0 
     /tmp/ccaBlXnF.s:344    .text:00000000000001a4 .L0 
     /tmp/ccaBlXnF.s:347    .text:00000000000001ac .L0 
     /tmp/ccaBlXnF.s:353    .text:00000000000001ac _ZN15MemoryAllocator5kfreeEPv
     /tmp/ccaBlXnF.s:356    .text:00000000000001ac .L0 
     /tmp/ccaBlXnF.s:358    .text:00000000000001ac .L0 
     /tmp/ccaBlXnF.s:359    .text:00000000000001ac .L0 
     /tmp/ccaBlXnF.s:362    .text:00000000000001b4 .L0 
     /tmp/ccaBlXnF.s:363    .text:00000000000001b4 .L0 
     /tmp/ccaBlXnF.s:365    .text:00000000000001bc .L0 
     /tmp/ccaBlXnF.s:367    .text:00000000000001c0 .L0 
     /tmp/ccaBlXnF.s:368    .text:00000000000001c0 .L0 
     /tmp/ccaBlXnF.s:371    .text:00000000000001c4 .L0 
     /tmp/ccaBlXnF.s:372    .text:00000000000001c4 .L0 
     /tmp/ccaBlXnF.s:373    .text:00000000000001c4 .L0 
     /tmp/ccaBlXnF.s:377    .text:00000000000001c8 .L0 
     /tmp/ccaBlXnF.s:378    .text:00000000000001c8 .L0 
     /tmp/ccaBlXnF.s:380    .text:00000000000001cc .L0 
     /tmp/ccaBlXnF.s:383    .text:00000000000001d0 .L0 
     /tmp/ccaBlXnF.s:384    .text:00000000000001d0 .L0 
     /tmp/ccaBlXnF.s:385    .text:00000000000001d0 .L0 
     /tmp/ccaBlXnF.s:387    .text:00000000000001d4 .L0 
     /tmp/ccaBlXnF.s:390    .text:00000000000001d8 .L0 
     /tmp/ccaBlXnF.s:393    .text:00000000000001dc .L0 
     /tmp/ccaBlXnF.s:395    .text:00000000000001e0 .L0 
     /tmp/ccaBlXnF.s:396    .text:00000000000001e4 .L0 
     /tmp/ccaBlXnF.s:400    .text:00000000000001f0 .L0 
GAS LISTING /tmp/ccaBlXnF.s 			page 21


     /tmp/ccaBlXnF.s:401    .text:00000000000001f0 .L0 
     /tmp/ccaBlXnF.s:402    .text:00000000000001f0 .L0 
     /tmp/ccaBlXnF.s:404    .text:00000000000001f4 .L0 
     /tmp/ccaBlXnF.s:406    .text:00000000000001f4 .L0 
     /tmp/ccaBlXnF.s:408    .text:00000000000001f8 .L0 
     /tmp/ccaBlXnF.s:409    .text:00000000000001f8 .L0 
     /tmp/ccaBlXnF.s:412    .text:00000000000001fc .L0 
     /tmp/ccaBlXnF.s:416    .text:0000000000000200 .L0 
     /tmp/ccaBlXnF.s:417    .text:0000000000000200 .L0 
     /tmp/ccaBlXnF.s:418    .text:0000000000000200 .L0 
     /tmp/ccaBlXnF.s:420    .text:0000000000000208 .L0 
     /tmp/ccaBlXnF.s:422    .text:000000000000020c .L0 
     /tmp/ccaBlXnF.s:426    .text:0000000000000210 .L0 
     /tmp/ccaBlXnF.s:428    .text:0000000000000214 .L0 
     /tmp/ccaBlXnF.s:431    .text:0000000000000218 .L0 
     /tmp/ccaBlXnF.s:433    .text:000000000000021c .L0 
     /tmp/ccaBlXnF.s:438    .text:0000000000000224 .L0 
     /tmp/ccaBlXnF.s:439    .text:0000000000000224 .L0 
     /tmp/ccaBlXnF.s:442    .text:0000000000000228 .L0 
     /tmp/ccaBlXnF.s:448    .text:0000000000000234 .L0 
     /tmp/ccaBlXnF.s:455    .text:0000000000000240 .L0 
     /tmp/ccaBlXnF.s:456    .text:0000000000000240 .L0 
     /tmp/ccaBlXnF.s:457    .text:0000000000000240 .L0 
     /tmp/ccaBlXnF.s:460    .text:0000000000000244 .L0 
     /tmp/ccaBlXnF.s:461    .text:0000000000000244 .L0 
     /tmp/ccaBlXnF.s:463    .text:0000000000000248 .L0 
     /tmp/ccaBlXnF.s:464    .text:0000000000000248 .L0 
     /tmp/ccaBlXnF.s:466    .text:000000000000024c .L0 
     /tmp/ccaBlXnF.s:468    .text:0000000000000250 .L0 
     /tmp/ccaBlXnF.s:469    .text:0000000000000250 .L0 
     /tmp/ccaBlXnF.s:472    .text:0000000000000254 .L0 
     /tmp/ccaBlXnF.s:475    .text:0000000000000258 .L0 
     /tmp/ccaBlXnF.s:476    .text:0000000000000258 .L0 
     /tmp/ccaBlXnF.s:478    .text:000000000000025c .L0 
     /tmp/ccaBlXnF.s:480    .text:0000000000000260 .L0 
     /tmp/ccaBlXnF.s:481    .text:0000000000000260 .L0 
     /tmp/ccaBlXnF.s:485    .text:0000000000000264 .L0 
     /tmp/ccaBlXnF.s:487    .text:0000000000000268 .L0 
     /tmp/ccaBlXnF.s:488    .text:0000000000000268 .L0 
     /tmp/ccaBlXnF.s:491    .text:000000000000026c .L0 
     /tmp/ccaBlXnF.s:492    .text:000000000000026c .L0 
     /tmp/ccaBlXnF.s:495    .text:0000000000000274 .L0 
     /tmp/ccaBlXnF.s:496    .text:0000000000000274 .L0 
     /tmp/ccaBlXnF.s:500    .text:0000000000000280 .L0 
     /tmp/ccaBlXnF.s:501    .text:0000000000000280 .L0 
     /tmp/ccaBlXnF.s:503    .text:0000000000000284 .L0 
     /tmp/ccaBlXnF.s:504    .text:0000000000000288 .L0 
     /tmp/ccaBlXnF.s:505    .text:0000000000000288 .L0 
     /tmp/ccaBlXnF.s:507    .text:000000000000028c .L0 
     /tmp/ccaBlXnF.s:508    .text:000000000000028c .L0 
     /tmp/ccaBlXnF.s:510    .text:0000000000000290 .L0 
     /tmp/ccaBlXnF.s:513    .text:0000000000000294 .L0 
     /tmp/ccaBlXnF.s:517    .text:0000000000000298 .L0 
     /tmp/ccaBlXnF.s:519    .text:0000000000000298 .L0 
     /tmp/ccaBlXnF.s:520    .text:0000000000000298 .L0 
     /tmp/ccaBlXnF.s:527    .text:00000000000002a8 .L0 
     /tmp/ccaBlXnF.s:528    .text:00000000000002a8 .L0 
GAS LISTING /tmp/ccaBlXnF.s 			page 22


     /tmp/ccaBlXnF.s:532    .text:00000000000002b4 .L0 
     /tmp/ccaBlXnF.s:533    .text:00000000000002b4 .L0 
     /tmp/ccaBlXnF.s:534    .text:00000000000002b4 .L0 
     /tmp/ccaBlXnF.s:535    .text:00000000000002b4 .L0 
     /tmp/ccaBlXnF.s:537    .text:00000000000002b4 .L0 
     /tmp/ccaBlXnF.s:543    .text:00000000000002bc .L0 
     /tmp/ccaBlXnF.s:549    .text:00000000000002c4 .L0 
     /tmp/ccaBlXnF.s:552    .text:00000000000002c8 .L0 
     /tmp/ccaBlXnF.s:553    .text:00000000000002cc .L0 
     /tmp/ccaBlXnF.s:559    .text:00000000000002cc _ZN15MemoryAllocator12checkPurposeEPvNS_7PurposeE
     /tmp/ccaBlXnF.s:562    .text:00000000000002cc .L0 
     /tmp/ccaBlXnF.s:564    .text:00000000000002cc .L0 
     /tmp/ccaBlXnF.s:565    .text:00000000000002d0 .L0 
     /tmp/ccaBlXnF.s:567    .text:00000000000002d4 .L0 
     /tmp/ccaBlXnF.s:569    .text:00000000000002d8 .L0 
     /tmp/ccaBlXnF.s:572    .text:00000000000002d8 .L0 
     /tmp/ccaBlXnF.s:573    .text:00000000000002d8 .L0 
     /tmp/ccaBlXnF.s:574    .text:00000000000002d8 .L0 
     /tmp/ccaBlXnF.s:577    .text:00000000000002dc .L0 
     /tmp/ccaBlXnF.s:579    .text:00000000000002e0 .L0 
     /tmp/ccaBlXnF.s:581    .text:00000000000002e8 .L0 
     /tmp/ccaBlXnF.s:582    .text:00000000000002e8 .L0 
     /tmp/ccaBlXnF.s:584    .text:00000000000002ec .L0 
     /tmp/ccaBlXnF.s:586    .text:00000000000002f0 .L0 
     /tmp/ccaBlXnF.s:592    .text:00000000000002f0 _ZN15MemoryAllocator19initMemoryAllocatorEv
     /tmp/ccaBlXnF.s:595    .text:00000000000002f0 .L0 
     /tmp/ccaBlXnF.s:596    .text:00000000000002f0 .L0 
     /tmp/ccaBlXnF.s:597    .text:00000000000002f4 .L0 
     /tmp/ccaBlXnF.s:599    .text:00000000000002f8 .L0 
     /tmp/ccaBlXnF.s:601    .text:00000000000002fc .L0 
     /tmp/ccaBlXnF.s:603    .text:00000000000002fc .L0 
     /tmp/ccaBlXnF.s:604    .text:00000000000002fc .L0 
     /tmp/ccaBlXnF.s:606    .text:0000000000000304 .L0 
     /tmp/ccaBlXnF.s:608    .text:0000000000000308 .L0 
     /tmp/ccaBlXnF.s:609    .text:0000000000000308 .L0 
     /tmp/ccaBlXnF.s:614    .text:0000000000000320 .L0 
     /tmp/ccaBlXnF.s:615    .text:0000000000000320 .L0 
     /tmp/ccaBlXnF.s:617    .text:0000000000000324 .L0 
     /tmp/ccaBlXnF.s:618    .text:0000000000000324 .L0 
     /tmp/ccaBlXnF.s:620    .text:0000000000000328 .L0 
     /tmp/ccaBlXnF.s:622    .text:000000000000032c .L0 
     /tmp/ccaBlXnF.s:623    .text:000000000000032c .L0 
     /tmp/ccaBlXnF.s:626    .text:0000000000000338 .L0 
     /tmp/ccaBlXnF.s:628    .text:000000000000033c .L0 
     /tmp/ccaBlXnF.s:630    .text:0000000000000340 .L0 
     /tmp/ccaBlXnF.s:632    .text:0000000000000344 .L0 
     /tmp/ccaBlXnF.s:633    .text:0000000000000344 .L0 
     /tmp/ccaBlXnF.s:635    .text:0000000000000348 .L0 
     /tmp/ccaBlXnF.s:636    .text:0000000000000348 .L0 
     /tmp/ccaBlXnF.s:640    .text:0000000000000350 .L0 
     /tmp/ccaBlXnF.s:641    .text:0000000000000354 .L0 
     /tmp/ccaBlXnF.s:642    .text:0000000000000354 .L0 
     /tmp/ccaBlXnF.s:644    .text:0000000000000358 .L0 
     /tmp/ccaBlXnF.s:646    .text:000000000000035c .L0 
     /tmp/ccaBlXnF.s:661    .bss:0000000000000008 _ZN15MemoryAllocator11usedMemHeadE
     /tmp/ccaBlXnF.s:657    .bss:0000000000000000 _ZN15MemoryAllocator11freeMemHeadE
     /tmp/ccaBlXnF.s:665    .bss:0000000000000010 _ZN15MemoryAllocator11initializedE
GAS LISTING /tmp/ccaBlXnF.s 			page 23


     /tmp/ccaBlXnF.s:654    .bss:0000000000000000 .LANCHOR0
     /tmp/ccaBlXnF.s:671    .text:000000000000035c .L0 
     /tmp/ccaBlXnF.s:43     .text:0000000000000028 .L0 
     /tmp/ccaBlXnF.s:92     .text:000000000000006c .L0 
     /tmp/ccaBlXnF.s:114    .text:0000000000000088 .L0 
     /tmp/ccaBlXnF.s:155    .text:00000000000000b8 .L0 
     /tmp/ccaBlXnF.s:186    .text:00000000000000e8 .L0 
     /tmp/ccaBlXnF.s:199    .text:00000000000000fc .L0 
     /tmp/ccaBlXnF.s:247    .text:0000000000000130 .L0 
     /tmp/ccaBlXnF.s:363    .text:00000000000001b4 .L0 
     /tmp/ccaBlXnF.s:418    .text:0000000000000200 .L0 
     /tmp/ccaBlXnF.s:442    .text:0000000000000228 .L0 
     /tmp/ccaBlXnF.s:520    .text:0000000000000298 .L0 
     /tmp/ccaBlXnF.s:528    .text:00000000000002a8 .L0 
     /tmp/ccaBlXnF.s:604    .text:00000000000002fc .L0 
     /tmp/ccaBlXnF.s:609    .text:0000000000000308 .L0 
     /tmp/ccaBlXnF.s:611    .text:0000000000000314 .L0 
     /tmp/ccaBlXnF.s:623    .text:000000000000032c .L0 
     /tmp/ccaBlXnF.s:251    .text:000000000000013c .L16
     /tmp/ccaBlXnF.s:32     .text:0000000000000020 .L3
     /tmp/ccaBlXnF.s:226    .text:0000000000000120 .L1
     /tmp/ccaBlXnF.s:138    .text:00000000000000ac .L19
     /tmp/ccaBlXnF.s:158    .text:00000000000000c4 .L6
     /tmp/ccaBlXnF.s:78     .text:000000000000005c .L7
     /tmp/ccaBlXnF.s:89     .text:000000000000006c .L8
     /tmp/ccaBlXnF.s:149    .text:00000000000000b4 .L20
     /tmp/ccaBlXnF.s:208    .text:000000000000010c .L12
     /tmp/ccaBlXnF.s:121    .text:0000000000000098 .L13
     /tmp/ccaBlXnF.s:45     .text:0000000000000030 .L5
     /tmp/ccaBlXnF.s:95     .text:0000000000000078 .L9
     /tmp/ccaBlXnF.s:172    .text:00000000000000d8 .L10
     /tmp/ccaBlXnF.s:183    .text:00000000000000e8 .L11
     /tmp/ccaBlXnF.s:194    .text:00000000000000fc .L21
     /tmp/ccaBlXnF.s:238    .text:000000000000012c .L22
     /tmp/ccaBlXnF.s:221    .text:000000000000011c .L15
     /tmp/ccaBlXnF.s:336    .text:000000000000019c .L26
     /tmp/ccaBlXnF.s:342    .text:00000000000001a4 .L27
     /tmp/ccaBlXnF.s:306    .text:0000000000000178 .L30
     /tmp/ccaBlXnF.s:329    .text:0000000000000194 .L25
     /tmp/ccaBlXnF.s:296    .text:000000000000016c .L24
     /tmp/ccaBlXnF.s:531    .text:00000000000002b4 .L44
     /tmp/ccaBlXnF.s:541    .text:00000000000002bc .L45
     /tmp/ccaBlXnF.s:391    .text:00000000000001dc .L33
     /tmp/ccaBlXnF.s:375    .text:00000000000001c8 .L34
     /tmp/ccaBlXnF.s:547    .text:00000000000002c4 .L46
     /tmp/ccaBlXnF.s:436    .text:0000000000000224 .L35
     /tmp/ccaBlXnF.s:446    .text:0000000000000234 .L47
     /tmp/ccaBlXnF.s:450    .text:000000000000023c .L48
     /tmp/ccaBlXnF.s:453    .text:0000000000000240 .L37
     /tmp/ccaBlXnF.s:424    .text:0000000000000210 .L38
     /tmp/ccaBlXnF.s:414    .text:0000000000000200 .L36
     /tmp/ccaBlXnF.s:516    .text:0000000000000298 .L39
     /tmp/ccaBlXnF.s:483    .text:0000000000000264 .L41
     /tmp/ccaBlXnF.s:525    .text:00000000000002a8 .L42
     /tmp/ccaBlXnF.s:473    .text:0000000000000258 .L40
     /tmp/ccaBlXnF.s:489    .text:000000000000026c .L43
     /tmp/ccaBlXnF.s:638    .text:0000000000000350 .L55
GAS LISTING /tmp/ccaBlXnF.s 			page 24


     /tmp/ccaBlXnF.s:1266   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccaBlXnF.s:2490   .debug_str:000000000000018f .LASF57
     /tmp/ccaBlXnF.s:2522   .debug_str:000000000000033e .LASF58
     /tmp/ccaBlXnF.s:2538   .debug_str:00000000000003d0 .LASF59
     /tmp/ccaBlXnF.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccaBlXnF.s:668    .text:000000000000035c .Letext0
     /tmp/ccaBlXnF.s:2426   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccaBlXnF.s:2500   .debug_str:000000000000029d .LASF0
     /tmp/ccaBlXnF.s:2474   .debug_str:000000000000011f .LASF1
     /tmp/ccaBlXnF.s:2466   .debug_str:00000000000000e0 .LASF2
     /tmp/ccaBlXnF.s:2442   .debug_str:0000000000000055 .LASF4
     /tmp/ccaBlXnF.s:2472   .debug_str:000000000000010d .LASF3
     /tmp/ccaBlXnF.s:2434   .debug_str:000000000000002f .LASF5
     /tmp/ccaBlXnF.s:2430   .debug_str:000000000000000c .LASF6
     /tmp/ccaBlXnF.s:2462   .debug_str:00000000000000be .LASF7
     /tmp/ccaBlXnF.s:2516   .debug_str:000000000000030b .LASF8
     /tmp/ccaBlXnF.s:2440   .debug_str:0000000000000047 .LASF9
     /tmp/ccaBlXnF.s:2560   .debug_str:00000000000004d1 .LASF10
     /tmp/ccaBlXnF.s:2464   .debug_str:00000000000000d1 .LASF11
     /tmp/ccaBlXnF.s:2548   .debug_str:000000000000043f .LASF12
     /tmp/ccaBlXnF.s:2524   .debug_str:0000000000000356 .LASF13
     /tmp/ccaBlXnF.s:2476   .debug_str:0000000000000132 .LASF14
     /tmp/ccaBlXnF.s:2454   .debug_str:000000000000008f .LASF15
     /tmp/ccaBlXnF.s:2520   .debug_str:0000000000000328 .LASF16
     /tmp/ccaBlXnF.s:2432   .debug_str:000000000000001f .LASF60
     /tmp/ccaBlXnF.s:2526   .debug_str:0000000000000366 .LASF61
     /tmp/ccaBlXnF.s:2484   .debug_str:0000000000000169 .LASF17
     /tmp/ccaBlXnF.s:2450   .debug_str:0000000000000076 .LASF18
     /tmp/ccaBlXnF.s:2488   .debug_str:0000000000000188 .LASF19
     /tmp/ccaBlXnF.s:2482   .debug_str:0000000000000164 .LASF20
     /tmp/ccaBlXnF.s:2542   .debug_str:00000000000003f6 .LASF21
     /tmp/ccaBlXnF.s:2534   .debug_str:0000000000000395 .LASF25
     /tmp/ccaBlXnF.s:2436   .debug_str:0000000000000036 .LASF22
     /tmp/ccaBlXnF.s:2558   .debug_str:00000000000004cc .LASF23
     /tmp/ccaBlXnF.s:2556   .debug_str:00000000000004c7 .LASF24
     /tmp/ccaBlXnF.s:2452   .debug_str:0000000000000080 .LASF26
     /tmp/ccaBlXnF.s:2492   .debug_str:0000000000000253 .LASF27
     /tmp/ccaBlXnF.s:2468   .debug_str:00000000000000ee .LASF28
     /tmp/ccaBlXnF.s:2478   .debug_str:000000000000013e .LASF29
     /tmp/ccaBlXnF.s:2494   .debug_str:000000000000025b .LASF31
     /tmp/ccaBlXnF.s:2460   .debug_str:00000000000000b8 .LASF30
     /tmp/ccaBlXnF.s:2480   .debug_str:0000000000000146 .LASF32
     /tmp/ccaBlXnF.s:2518   .debug_str:000000000000031b .LASF33
     /tmp/ccaBlXnF.s:2550   .debug_str:000000000000044f .LASF34
     /tmp/ccaBlXnF.s:2504   .debug_str:00000000000002b6 .LASF62
     /tmp/ccaBlXnF.s:2536   .debug_str:00000000000003a4 .LASF63
     /tmp/ccaBlXnF.s:2486   .debug_str:000000000000016f .LASF64
     /tmp/ccaBlXnF.s:2508   .debug_str:00000000000002cf .LASF35
     /tmp/ccaBlXnF.s:2438   .debug_str:000000000000003b .LASF36
     /tmp/ccaBlXnF.s:2470   .debug_str:0000000000000101 .LASF37
     /tmp/ccaBlXnF.s:2546   .debug_str:0000000000000435 .LASF65
     /tmp/ccaBlXnF.s:2544   .debug_str:0000000000000400 .LASF66
     /tmp/ccaBlXnF.s:2446   .debug_str:0000000000000065 .LASF38
     /tmp/ccaBlXnF.s:2514   .debug_str:00000000000002e8 .LASF39
     /tmp/ccaBlXnF.s:2554   .debug_str:00000000000004a4 .LASF40
     /tmp/ccaBlXnF.s:2552   .debug_str:0000000000000481 .LASF41
     /tmp/ccaBlXnF.s:593    .text:00000000000002f0 .LFB7
GAS LISTING /tmp/ccaBlXnF.s 			page 25


     /tmp/ccaBlXnF.s:647    .text:000000000000035c .LFE7
     /tmp/ccaBlXnF.s:560    .text:00000000000002cc .LFB6
     /tmp/ccaBlXnF.s:587    .text:00000000000002f0 .LFE6
     /tmp/ccaBlXnF.s:1820   .debug_loc:0000000000000000 .LLST19
     /tmp/ccaBlXnF.s:265    .text:0000000000000144 .LFB5
     /tmp/ccaBlXnF.s:348    .text:00000000000001ac .LFE5
     /tmp/ccaBlXnF.s:2540   .debug_str:00000000000003ee .LASF42
     /tmp/ccaBlXnF.s:1843   .debug_loc:0000000000000051 .LLST8
     /tmp/ccaBlXnF.s:2458   .debug_str:00000000000000ad .LASF43
     /tmp/ccaBlXnF.s:1890   .debug_loc:0000000000000105 .LLST9
     /tmp/ccaBlXnF.s:2444   .debug_str:000000000000005c .LASF44
     /tmp/ccaBlXnF.s:1926   .debug_loc:0000000000000172 .LLST10
     /tmp/ccaBlXnF.s:2512   .debug_str:00000000000002e2 .LASF45
     /tmp/ccaBlXnF.s:1960   .debug_loc:00000000000001ec .LLST11
     /tmp/ccaBlXnF.s:2532   .debug_str:0000000000000385 .LASF46
     /tmp/ccaBlXnF.s:1980   .debug_loc:0000000000000249 .LLST12
     /tmp/ccaBlXnF.s:2506   .debug_str:00000000000002ca .LASF47
     /tmp/ccaBlXnF.s:354    .text:00000000000001ac .LFB4
     /tmp/ccaBlXnF.s:554    .text:00000000000002cc .LFE4
     /tmp/ccaBlXnF.s:2035   .debug_loc:00000000000002d8 .LLST13
     /tmp/ccaBlXnF.s:2502   .debug_str:00000000000002aa .LASF48
     /tmp/ccaBlXnF.s:2085   .debug_loc:000000000000039e .LLST14
     /tmp/ccaBlXnF.s:2530   .debug_str:000000000000037c .LASF49
     /tmp/ccaBlXnF.s:2109   .debug_loc:000000000000040e .LLST15
     /tmp/ccaBlXnF.s:2496   .debug_str:0000000000000286 .LASF50
     /tmp/ccaBlXnF.s:2137   .debug_loc:0000000000000491 .LLST16
     /tmp/ccaBlXnF.s:2456   .debug_str:00000000000000a5 .LASF51
     /tmp/ccaBlXnF.s:2166   .debug_loc:0000000000000515 .LLST17
     /tmp/ccaBlXnF.s:2428   .debug_str:0000000000000000 .LASF52
     /tmp/ccaBlXnF.s:2187   .debug_loc:0000000000000564 .LLST18
     /tmp/ccaBlXnF.s:493    .text:0000000000000274 .LVL59
     /tmp/ccaBlXnF.s:498    .text:0000000000000280 .LVL60
     /tmp/ccaBlXnF.s:10     .text:0000000000000000 .LFB3
     /tmp/ccaBlXnF.s:259    .text:0000000000000144 .LFE3
     /tmp/ccaBlXnF.s:2208   .debug_loc:00000000000005c2 .LLST0
     /tmp/ccaBlXnF.s:2510   .debug_str:00000000000002db .LASF53
     /tmp/ccaBlXnF.s:2268   .debug_loc:00000000000006bf .LLST1
     /tmp/ccaBlXnF.s:2396   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccaBlXnF.s:2275   .debug_loc:00000000000006e2 .LLST2
     /tmp/ccaBlXnF.s:2498   .debug_str:000000000000028f .LASF54
     /tmp/ccaBlXnF.s:2286   .debug_loc:0000000000000718 .LLST3
     /tmp/ccaBlXnF.s:2528   .debug_str:000000000000036e .LASF55
     /tmp/ccaBlXnF.s:2297   .debug_loc:000000000000074e .LLST4
     /tmp/ccaBlXnF.s:2448   .debug_str:000000000000006a .LASF56
     /tmp/ccaBlXnF.s:2312   .debug_loc:0000000000000797 .LLST5
     /tmp/ccaBlXnF.s:2327   .debug_loc:00000000000007e0 .LLST6
     /tmp/ccaBlXnF.s:2355   .debug_loc:0000000000000863 .LLST7
     /tmp/ccaBlXnF.s:563    .text:00000000000002cc .LVL71
     /tmp/ccaBlXnF.s:571    .text:00000000000002d8 .LVL72
     /tmp/ccaBlXnF.s:575    .text:00000000000002dc .LVL73
     /tmp/ccaBlXnF.s:268    .text:0000000000000144 .LVL27
     /tmp/ccaBlXnF.s:295    .text:000000000000016c .LVL30
     /tmp/ccaBlXnF.s:305    .text:0000000000000178 .LVL31
     /tmp/ccaBlXnF.s:333    .text:0000000000000198 .LVL37
     /tmp/ccaBlXnF.s:335    .text:000000000000019c .LVL38
     /tmp/ccaBlXnF.s:339    .text:00000000000001a0 .LVL39
     /tmp/ccaBlXnF.s:341    .text:00000000000001a4 .LVL40
GAS LISTING /tmp/ccaBlXnF.s 			page 26


     /tmp/ccaBlXnF.s:345    .text:00000000000001a8 .LVL41
     /tmp/ccaBlXnF.s:280    .text:0000000000000158 .LVL28
     /tmp/ccaBlXnF.s:320    .text:0000000000000188 .LVL35
     /tmp/ccaBlXnF.s:323    .text:000000000000018c .LVL36
     /tmp/ccaBlXnF.s:286    .text:0000000000000160 .LVL29
     /tmp/ccaBlXnF.s:311    .text:000000000000017c .LVL32
     /tmp/ccaBlXnF.s:314    .text:0000000000000180 .LVL33
     /tmp/ccaBlXnF.s:316    .text:0000000000000184 .LVL34
     /tmp/ccaBlXnF.s:357    .text:00000000000001ac .LVL42
     /tmp/ccaBlXnF.s:369    .text:00000000000001c4 .LVL43
     /tmp/ccaBlXnF.s:515    .text:0000000000000298 .LVL62
     /tmp/ccaBlXnF.s:538    .text:00000000000002b8 .LVL66
     /tmp/ccaBlXnF.s:540    .text:00000000000002bc .LVL67
     /tmp/ccaBlXnF.s:544    .text:00000000000002c0 .LVL68
     /tmp/ccaBlXnF.s:546    .text:00000000000002c4 .LVL69
     /tmp/ccaBlXnF.s:550    .text:00000000000002c8 .LVL70
     /tmp/ccaBlXnF.s:382    .text:00000000000001d0 .LVL45
     /tmp/ccaBlXnF.s:388    .text:00000000000001d8 .LVL46
     /tmp/ccaBlXnF.s:410    .text:00000000000001fc .LVL47
     /tmp/ccaBlXnF.s:435    .text:0000000000000224 .LVL51
     /tmp/ccaBlXnF.s:440    .text:0000000000000228 .LVL52
     /tmp/ccaBlXnF.s:374    .text:00000000000001c8 .LVL44
     /tmp/ccaBlXnF.s:413    .text:0000000000000200 .LVL48
     /tmp/ccaBlXnF.s:443    .text:0000000000000230 .LVL53
     /tmp/ccaBlXnF.s:423    .text:0000000000000210 .LVL49
     /tmp/ccaBlXnF.s:429    .text:0000000000000218 .LVL50
     /tmp/ccaBlXnF.s:445    .text:0000000000000234 .LVL54
     /tmp/ccaBlXnF.s:452    .text:0000000000000240 .LVL55
     /tmp/ccaBlXnF.s:511    .text:0000000000000290 .LVL61
     /tmp/ccaBlXnF.s:530    .text:00000000000002b4 .LVL65
     /tmp/ccaBlXnF.s:458    .text:0000000000000244 .LVL56
     /tmp/ccaBlXnF.s:470    .text:0000000000000254 .LVL57
     /tmp/ccaBlXnF.s:482    .text:0000000000000264 .LVL58
     /tmp/ccaBlXnF.s:521    .text:00000000000002a0 .LVL63
     /tmp/ccaBlXnF.s:524    .text:00000000000002a8 .LVL64
     /tmp/ccaBlXnF.s:14     .text:0000000000000000 .LVL0
     /tmp/ccaBlXnF.s:28     .text:0000000000000018 .LVL1
     /tmp/ccaBlXnF.s:39     .text:0000000000000028 .LVL3
     /tmp/ccaBlXnF.s:66     .text:000000000000004c .LVL7
     /tmp/ccaBlXnF.s:120    .text:0000000000000098 .LVL12
     /tmp/ccaBlXnF.s:137    .text:00000000000000ac .LVL15
     /tmp/ccaBlXnF.s:148    .text:00000000000000b4 .LVL17
     /tmp/ccaBlXnF.s:157    .text:00000000000000c4 .LVL18
     /tmp/ccaBlXnF.s:207    .text:000000000000010c .LVL19
     /tmp/ccaBlXnF.s:220    .text:000000000000011c .LVL21
     /tmp/ccaBlXnF.s:237    .text:000000000000012c .LVL23
     /tmp/ccaBlXnF.s:250    .text:000000000000013c .LVL25
     /tmp/ccaBlXnF.s:256    .text:0000000000000140 .LVL26
     /tmp/ccaBlXnF.s:35     .text:0000000000000024 .LVL2
     /tmp/ccaBlXnF.s:44     .text:0000000000000030 .LVL4
     /tmp/ccaBlXnF.s:225    .text:0000000000000120 .LVL22
     /tmp/ccaBlXnF.s:57     .text:0000000000000040 .LVL5
     /tmp/ccaBlXnF.s:75     .text:0000000000000058 .LVL8
     /tmp/ccaBlXnF.s:61     .text:0000000000000044 .LVL6
     /tmp/ccaBlXnF.s:97     .text:0000000000000078 .LVL9
     /tmp/ccaBlXnF.s:110    .text:0000000000000088 .LVL10
     /tmp/ccaBlXnF.s:128    .text:00000000000000a0 .LVL13
GAS LISTING /tmp/ccaBlXnF.s 			page 27


     /tmp/ccaBlXnF.s:134    .text:00000000000000a8 .LVL14
     /tmp/ccaBlXnF.s:115    .text:0000000000000090 .LVL11
     /tmp/ccaBlXnF.s:214    .text:0000000000000114 .LVL20
     /tmp/ccaBlXnF.s:248    .text:0000000000000138 .LVL24
     /tmp/ccaBlXnF.s:672    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccaBlXnF.s:41     .text:0000000000000028 .LBB2
     /tmp/ccaBlXnF.s:190    .text:00000000000000f4 .LBE2
     /tmp/ccaBlXnF.s:195    .text:00000000000000fc .LBB10
     /tmp/ccaBlXnF.s:201    .text:0000000000000104 .LBE10
     /tmp/ccaBlXnF.s:204    .text:0000000000000108 .LBB11
     /tmp/ccaBlXnF.s:228    .text:0000000000000120 .LBE11
     /tmp/ccaBlXnF.s:240    .text:000000000000012c .LBB12
     /tmp/ccaBlXnF.s:253    .text:000000000000013c .LBE12
     /tmp/ccaBlXnF.s:48     .text:0000000000000034 .LBB3
     /tmp/ccaBlXnF.s:141    .text:00000000000000ac .LBE3
     /tmp/ccaBlXnF.s:150    .text:00000000000000b4 .LBB6
     /tmp/ccaBlXnF.s:189    .text:00000000000000f4 .LBE6
     /tmp/ccaBlXnF.s:196    .text:00000000000000fc .LBB7
     /tmp/ccaBlXnF.s:200    .text:0000000000000104 .LBE7
     /tmp/ccaBlXnF.s:205    .text:0000000000000108 .LBB8
     /tmp/ccaBlXnF.s:227    .text:0000000000000120 .LBE8
     /tmp/ccaBlXnF.s:241    .text:000000000000012c .LBB9
     /tmp/ccaBlXnF.s:252    .text:000000000000013c .LBE9
     /tmp/ccaBlXnF.s:112    .text:0000000000000088 .LBB4
     /tmp/ccaBlXnF.s:117    .text:0000000000000094 .LBE4
     /tmp/ccaBlXnF.s:122    .text:0000000000000098 .LBB5
     /tmp/ccaBlXnF.s:139    .text:00000000000000ac .LBE5

UNDEFINED SYMBOLS
HEAP_START_ADDR
HEAP_END_ADDR
