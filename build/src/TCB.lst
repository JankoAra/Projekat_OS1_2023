GAS LISTING /tmp/ccNn7P7W.s 			page 1


   1              		.file	"TCB.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN3TCB7wrapperEv
   9              	_ZN3TCB7wrapperEv:
  10              	.LFB48:
  11              		.file 1 "src/TCB.cpp"
   1:src/TCB.cpp   **** //
   2:src/TCB.cpp   **** // Created by os on 5/23/23.
   3:src/TCB.cpp   **** //
   4:src/TCB.cpp   **** 
   5:src/TCB.cpp   **** #include "../h/TCB.hpp"
   6:src/TCB.cpp   **** #include "../h/Riscv.hpp"
   7:src/TCB.cpp   **** #include "../h/Scheduler.hpp"
   8:src/TCB.cpp   **** #include "../h/MemoryAllocator.hpp"
   9:src/TCB.cpp   **** #include "../h/syscall_c.hpp"
  10:src/TCB.cpp   **** 
  11:src/TCB.cpp   **** TCB* TCB::running = nullptr;
  12:src/TCB.cpp   **** uint64 TCB::runningTimeSlice = 0;
  13:src/TCB.cpp   **** 
  14:src/TCB.cpp   **** TCB* TCB::createThread(TCB::Body function, void* args, uint64* stack) {
  15:src/TCB.cpp   **** 	//pravljenje niti
  16:src/TCB.cpp   **** 	TCB* newThread = new TCB(function, args, stack);
  17:src/TCB.cpp   **** 
  18:src/TCB.cpp   **** 	//startovanje niti(stavljanje u Scheduler); main nit je vec aktivna, ne stavlja se u Scheduler
  19:src/TCB.cpp   **** 	if (function != nullptr) Scheduler::put(newThread);
  20:src/TCB.cpp   **** 	return newThread;
  21:src/TCB.cpp   **** }
  22:src/TCB.cpp   **** 
  23:src/TCB.cpp   **** void TCB::dispatch() {
  24:src/TCB.cpp   **** 	TCB* old = TCB::running;
  25:src/TCB.cpp   **** 	if (!old->finished && !old->blocked && old->timeToSleep == 0 && !old->needToJoin) {
  26:src/TCB.cpp   **** 		Scheduler::put(old);
  27:src/TCB.cpp   **** 	}
  28:src/TCB.cpp   **** 	TCB::running = Scheduler::get();
  29:src/TCB.cpp   **** 	TCB::runningTimeSlice = 0;
  30:src/TCB.cpp   **** 
  31:src/TCB.cpp   **** 	//sada biramo u kom rezimu ce se izvrsavati nit, upisom bita SSTATUS_SPP
  32:src/TCB.cpp   **** 	//ako treba da se izvrsava main kernel nit, povratak je u sistemski rezim, inace u korisnicki
  33:src/TCB.cpp   **** 	if (TCB::running->threadFunction == nullptr) {
  34:src/TCB.cpp   **** 		Riscv::ms_sstatus(Riscv::SSTATUS_SPP);
  35:src/TCB.cpp   **** 	} else {
  36:src/TCB.cpp   **** 		Riscv::mc_sstatus(Riscv::SSTATUS_SPP);
  37:src/TCB.cpp   **** 	}
  38:src/TCB.cpp   **** 
  39:src/TCB.cpp   **** 	if (old != TCB::running) TCB::contextSwitch(&old->context, &running->context);
  40:src/TCB.cpp   **** }
  41:src/TCB.cpp   **** 
  42:src/TCB.cpp   **** void TCB::yield() {
  43:src/TCB.cpp   **** 	Riscv::pushRegisters();
  44:src/TCB.cpp   **** 	TCB::dispatch();
  45:src/TCB.cpp   **** 	Riscv::popRegisters();
  46:src/TCB.cpp   **** }
  47:src/TCB.cpp   **** 
GAS LISTING /tmp/ccNn7P7W.s 			page 2


  48:src/TCB.cpp   **** void TCB::wrapper() {
  12              		.loc 1 48 21
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23341100 		sd	ra,8(sp)
  17 0008 23308100 		sd	s0,0(sp)
  18              		.cfi_offset 1, -8
  19              		.cfi_offset 8, -16
  20 000c 13040101 		addi	s0,sp,16
  21              		.cfi_def_cfa 8, 0
  49:src/TCB.cpp   **** 	//pocetak wrappera se izvrsava u supervisor modu,
  50:src/TCB.cpp   **** 	//jer nismo izasli iz prekidne rutine prilikom promene konteksta (dispatch/yield)
  51:src/TCB.cpp   **** 	Riscv::popSppSpie();
  22              		.loc 1 51 2
  23              		.loc 1 51 19 is_stmt 0
  24 0010 97000000 		call	_ZN5Riscv10popSppSpieEv@plt
  24      E7800000 
  25              	.LVL0:
  52:src/TCB.cpp   **** 	//na dalje se izvrsavamo u user modu
  53:src/TCB.cpp   **** 	running->threadFunction(running->args);
  26              		.loc 1 53 2 is_stmt 1
  27              		.loc 1 53 11 is_stmt 0
  28 0018 97070000 		ld	a5,.LANCHOR0
  28      83B70700 
  29 0020 03B70701 		ld	a4,16(a5)
  30              		.loc 1 53 25
  31 0024 03B50702 		ld	a0,32(a5)
  32 0028 E7000700 		jalr	a4
  33              	.LVL1:
  54:src/TCB.cpp   **** 	//running->finished = true;
  55:src/TCB.cpp   **** 	//i dalje smo u user modu, moramo promenu niti vrsiti sistemskim pozivom
  56:src/TCB.cpp   **** 	thread_exit();
  34              		.loc 1 56 2 is_stmt 1
  35              		.loc 1 56 13 is_stmt 0
  36 002c 97000000 		call	_Z11thread_exitv@plt
  36      E7800000 
  37              	.LVL2:
  57:src/TCB.cpp   **** }
  38              		.loc 1 57 1
  39 0034 83308100 		ld	ra,8(sp)
  40              		.cfi_restore 1
  41 0038 03340100 		ld	s0,0(sp)
  42              		.cfi_restore 8
  43              		.cfi_def_cfa 2, 16
  44 003c 13010101 		addi	sp,sp,16
  45              		.cfi_def_cfa_offset 0
  46 0040 67800000 		jr	ra
  47              		.cfi_endproc
  48              	.LFE48:
  50              		.align	2
  51              		.globl	_ZN3TCB8dispatchEv
  53              	_ZN3TCB8dispatchEv:
  54              	.LFB46:
  23:src/TCB.cpp   **** 	TCB* old = TCB::running;
  55              		.loc 1 23 22 is_stmt 1
  56              		.cfi_startproc
GAS LISTING /tmp/ccNn7P7W.s 			page 3


  57 0044 130101FE 		addi	sp,sp,-32
  58              		.cfi_def_cfa_offset 32
  59 0048 233C1100 		sd	ra,24(sp)
  60 004c 23388100 		sd	s0,16(sp)
  61 0050 23349100 		sd	s1,8(sp)
  62              		.cfi_offset 1, -8
  63              		.cfi_offset 8, -16
  64              		.cfi_offset 9, -24
  65 0054 13040102 		addi	s0,sp,32
  66              		.cfi_def_cfa 8, 0
  24:src/TCB.cpp   **** 	if (!old->finished && !old->blocked && old->timeToSleep == 0 && !old->needToJoin) {
  67              		.loc 1 24 2
  24:src/TCB.cpp   **** 	if (!old->finished && !old->blocked && old->timeToSleep == 0 && !old->needToJoin) {
  68              		.loc 1 24 7 is_stmt 0
  69 0058 97040000 		ld	s1,.LANCHOR0
  69      83B40400 
  70              	.LVL3:
  25:src/TCB.cpp   **** 		Scheduler::put(old);
  71              		.loc 1 25 2 is_stmt 1
  25:src/TCB.cpp   **** 		Scheduler::put(old);
  72              		.loc 1 25 12 is_stmt 0
  73 0060 83C70403 		lbu	a5,48(s1)
  25:src/TCB.cpp   **** 		Scheduler::put(old);
  74              		.loc 1 25 2
  75 0064 639E0700 		bnez	a5,.L4
  25:src/TCB.cpp   **** 		Scheduler::put(old);
  76              		.loc 1 25 30 discriminator 1
  77 0068 83C71403 		lbu	a5,49(s1)
  25:src/TCB.cpp   **** 		Scheduler::put(old);
  78              		.loc 1 25 21 discriminator 1
  79 006c 639A0700 		bnez	a5,.L4
  25:src/TCB.cpp   **** 		Scheduler::put(old);
  80              		.loc 1 25 46 discriminator 2
  81 0070 83B70404 		ld	a5,64(s1)
  25:src/TCB.cpp   **** 		Scheduler::put(old);
  82              		.loc 1 25 38 discriminator 2
  83 0074 63960700 		bnez	a5,.L4
  25:src/TCB.cpp   **** 		Scheduler::put(old);
  84              		.loc 1 25 72 discriminator 3
  85 0078 83C72403 		lbu	a5,50(s1)
  25:src/TCB.cpp   **** 		Scheduler::put(old);
  86              		.loc 1 25 63 discriminator 3
  87 007c 638A0704 		beqz	a5,.L9
  88              	.L4:
  28:src/TCB.cpp   **** 	TCB::runningTimeSlice = 0;
  89              		.loc 1 28 2 is_stmt 1
  28:src/TCB.cpp   **** 	TCB::runningTimeSlice = 0;
  90              		.loc 1 28 31 is_stmt 0
  91 0080 97000000 		call	_ZN9Scheduler3getEv@plt
  91      E7800000 
  92              	.LVL4:
  93 0088 93050500 		mv	a1,a0
  28:src/TCB.cpp   **** 	TCB::runningTimeSlice = 0;
  94              		.loc 1 28 15
  95 008c 97070000 		lla	a5,.LANCHOR0
  95      93870700 
  96 0094 23B0A700 		sd	a0,0(a5)
GAS LISTING /tmp/ccNn7P7W.s 			page 4


  29:src/TCB.cpp   **** 
  97              		.loc 1 29 2 is_stmt 1
  29:src/TCB.cpp   **** 
  98              		.loc 1 29 24 is_stmt 0
  99 0098 23B40700 		sd	zero,8(a5)
  33:src/TCB.cpp   **** 		Riscv::ms_sstatus(Riscv::SSTATUS_SPP);
 100              		.loc 1 33 2 is_stmt 1
  33:src/TCB.cpp   **** 		Riscv::ms_sstatus(Riscv::SSTATUS_SPP);
 101              		.loc 1 33 20 is_stmt 0
 102 009c 83370501 		ld	a5,16(a0)
  33:src/TCB.cpp   **** 		Riscv::ms_sstatus(Riscv::SSTATUS_SPP);
 103              		.loc 1 33 2
 104 00a0 63800704 		beqz	a5,.L10
  36:src/TCB.cpp   **** 	}
 105              		.loc 1 36 3 is_stmt 1
 106              	.LVL5:
 107              	.LBB21:
 108              	.LBB22:
 109              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 5/17/23.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJEKAT2023_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJEKAT2023_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** class Riscv {
  11:src/../h/Riscv.hpp **** public:
  12:src/../h/Riscv.hpp **** 
  13:src/../h/Riscv.hpp **** 	static void popSppSpie();
  14:src/../h/Riscv.hpp **** 
  15:src/../h/Riscv.hpp **** 	//stavljanje registara x3-x31 na stek
  16:src/../h/Riscv.hpp **** 	static void pushRegisters();    //implementacija u asm
  17:src/../h/Riscv.hpp **** 
  18:src/../h/Riscv.hpp **** 	//skidanje registara x3-x31 sa steka
  19:src/../h/Riscv.hpp **** 	static void popRegisters();     //implementacija u asm
  20:src/../h/Riscv.hpp **** 
  21:src/../h/Riscv.hpp **** 	//read scause
  22:src/../h/Riscv.hpp **** 	static uint64 r_scause();
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp **** 	//write scause
  25:src/../h/Riscv.hpp **** 	static void w_scause(uint64 scause);
  26:src/../h/Riscv.hpp **** 
  27:src/../h/Riscv.hpp **** 	//read sepc
  28:src/../h/Riscv.hpp **** 	static uint64 r_sepc();
  29:src/../h/Riscv.hpp **** 
  30:src/../h/Riscv.hpp **** 	//write sepc
  31:src/../h/Riscv.hpp **** 	static void w_sepc(uint64 sepc);
  32:src/../h/Riscv.hpp **** 
  33:src/../h/Riscv.hpp **** 	//read stvec
  34:src/../h/Riscv.hpp **** 	static uint64 r_stvec();
  35:src/../h/Riscv.hpp **** 
  36:src/../h/Riscv.hpp **** 	//write stvec
  37:src/../h/Riscv.hpp **** 	static void w_stvec(uint64 stvec);
  38:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/ccNn7P7W.s 			page 5


  39:src/../h/Riscv.hpp **** 	enum BitMaskSip {
  40:src/../h/Riscv.hpp **** 		//postoji zahtev za softverski prekid
  41:src/../h/Riscv.hpp **** 		SIP_SSIP = (1 << 1),
  42:src/../h/Riscv.hpp **** 		//postoji prekid od tajmera
  43:src/../h/Riscv.hpp **** 		SIP_STIP = (1 << 5),
  44:src/../h/Riscv.hpp **** 		//postoji zahtev za spoljasnji hardverski prekid
  45:src/../h/Riscv.hpp **** 		SIP_SEIP = (1 << 9)
  46:src/../h/Riscv.hpp **** 	};
  47:src/../h/Riscv.hpp **** 
  48:src/../h/Riscv.hpp **** 	//mask set sip
  49:src/../h/Riscv.hpp **** 	static void ms_sip(uint64 mask);
  50:src/../h/Riscv.hpp **** 
  51:src/../h/Riscv.hpp **** 	//mask clear sip
  52:src/../h/Riscv.hpp **** 	static void mc_sip(uint64 mask);
  53:src/../h/Riscv.hpp **** 
  54:src/../h/Riscv.hpp **** 	//read sip
  55:src/../h/Riscv.hpp **** 	static uint64 r_sip();
  56:src/../h/Riscv.hpp **** 
  57:src/../h/Riscv.hpp **** 	//write sip
  58:src/../h/Riscv.hpp **** 	static void w_sip(uint64 sip);
  59:src/../h/Riscv.hpp **** 
  60:src/../h/Riscv.hpp **** 	//kada se pozove sret, SIE dobija vrednost SPIE, SPIE se postavlja na 1,
  61:src/../h/Riscv.hpp **** 	//rezim se postavlja na osnovu SPP bita, SPP se postavlja na 0
  62:src/../h/Riscv.hpp **** 	enum BitMaskSstatus {
  63:src/../h/Riscv.hpp **** 		//1 - dozvoljeni prekidi; 0- nedozvoljeni prekidi; igonrise se u korisnickom rezimu
  64:src/../h/Riscv.hpp **** 		SSTATUS_SIE = (1 << 1),
  65:src/../h/Riscv.hpp **** 		//prethodna vrednost bita SIE
  66:src/../h/Riscv.hpp **** 		SSTATUS_SPIE = (1 << 5),
  67:src/../h/Riscv.hpp **** 		//iz kog rezima se desio skok; 0 - iz korisnickog; 1 - iz sistemskog
  68:src/../h/Riscv.hpp **** 		SSTATUS_SPP = (1 << 8)
  69:src/../h/Riscv.hpp **** 	};
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp **** 	//mask set sstatus
  72:src/../h/Riscv.hpp **** 	static void ms_sstatus(uint64 mask);
  73:src/../h/Riscv.hpp **** 
  74:src/../h/Riscv.hpp **** 	//mask clear sstatus
  75:src/../h/Riscv.hpp **** 	static void mc_sstatus(uint64 mask);
  76:src/../h/Riscv.hpp **** 
  77:src/../h/Riscv.hpp **** 	//read sstatus
  78:src/../h/Riscv.hpp **** 	static uint64 r_sstatus();
  79:src/../h/Riscv.hpp **** 
  80:src/../h/Riscv.hpp **** 	//write sstatus
  81:src/../h/Riscv.hpp **** 	static void w_sstatus(uint64 sstatus);
  82:src/../h/Riscv.hpp **** 
  83:src/../h/Riscv.hpp **** 	//upisuje kod sistemskog poziva u registar a0
  84:src/../h/Riscv.hpp **** 	static void loadOpCode(uint64 opCode);
  85:src/../h/Riscv.hpp **** 
  86:src/../h/Riscv.hpp **** };
  87:src/../h/Riscv.hpp **** 
  88:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause() {
  89:src/../h/Riscv.hpp **** 	uint64 volatile scause;
  90:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[scause], scause": [scause] "=r"(scause));
  91:src/../h/Riscv.hpp **** 	return scause;
  92:src/../h/Riscv.hpp **** }
  93:src/../h/Riscv.hpp **** 
  94:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
  95:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw scause, %[scause]": :[scause] "r"(scause));
GAS LISTING /tmp/ccNn7P7W.s 			page 6


  96:src/../h/Riscv.hpp **** }
  97:src/../h/Riscv.hpp **** 
  98:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc() {
  99:src/../h/Riscv.hpp **** 	uint64 volatile sepc;
 100:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[sepc], sepc": [sepc] "=r"(sepc));
 101:src/../h/Riscv.hpp **** 	return sepc;
 102:src/../h/Riscv.hpp **** }
 103:src/../h/Riscv.hpp **** 
 104:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
 105:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 106:src/../h/Riscv.hpp **** }
 107:src/../h/Riscv.hpp **** 
 108:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec() {
 109:src/../h/Riscv.hpp **** 	uint64 volatile stvec;
 110:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[stvec], stvec": [stvec] "=r"(stvec));
 111:src/../h/Riscv.hpp **** 	return stvec;
 112:src/../h/Riscv.hpp **** }
 113:src/../h/Riscv.hpp **** 
 114:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 115:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw stvec, %[stvec]": :[stvec] "r"(stvec));
 116:src/../h/Riscv.hpp **** }
 117:src/../h/Riscv.hpp **** 
 118:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 119:src/../h/Riscv.hpp **** 	__asm__ volatile("csrs sip, %[mask]": :[mask] "r"(mask));
 120:src/../h/Riscv.hpp **** }
 121:src/../h/Riscv.hpp **** 
 122:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 123:src/../h/Riscv.hpp **** 	__asm__ volatile("csrc sip, %[mask]": :[mask] "r"(mask));
 124:src/../h/Riscv.hpp **** }
 125:src/../h/Riscv.hpp **** 
 126:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip() {
 127:src/../h/Riscv.hpp **** 	uint64 volatile sip;
 128:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[sip], sip": [sip] "=r"(sip));
 129:src/../h/Riscv.hpp **** 	return sip;
 130:src/../h/Riscv.hpp **** }
 131:src/../h/Riscv.hpp **** 
 132:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip) {
 133:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw sip, %[sip]": :[sip] "r"(sip));
 134:src/../h/Riscv.hpp **** }
 135:src/../h/Riscv.hpp **** 
 136:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
 137:src/../h/Riscv.hpp **** 	__asm__ volatile("csrs sstatus, %[mask]": :[mask] "r"(mask));
 138:src/../h/Riscv.hpp **** }
 139:src/../h/Riscv.hpp **** 
 140:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask) {
 141:src/../h/Riscv.hpp **** 	__asm__ volatile("csrc sstatus, %[mask]": :[mask] "r"(mask));
 110              		.loc 2 141 2
 111              		.loc 2 141 62 is_stmt 0
 112 00a4 93070010 		li	a5,256
 113              	#APP
 114              	# 141 "src/../h/Riscv.hpp" 1
 142              	}
 115              		csrc sstatus, a5
 116              	# 0 "" 2
 117              	.LVL6:
 118              	#NO_APP
 119              	.L6:
GAS LISTING /tmp/ccNn7P7W.s 			page 7


 120              	.LBE22:
 121              	.LBE21:
  39:src/TCB.cpp   **** }
 122              		.loc 1 39 2 is_stmt 1
 123 00ac 6388B400 		beq	s1,a1,.L3
  39:src/TCB.cpp   **** }
 124              		.loc 1 39 27 discriminator 1
  39:src/TCB.cpp   **** }
 125              		.loc 1 39 45 is_stmt 0 discriminator 1
 126 00b0 13850400 		mv	a0,s1
 127 00b4 97000000 		call	_ZN3TCB13contextSwitchEPNS_7ContextES1_@plt
 127      E7800000 
 128              	.LVL7:
 129              	.L3:
  40:src/TCB.cpp   **** 
 130              		.loc 1 40 1
 131 00bc 83308101 		ld	ra,24(sp)
 132              		.cfi_remember_state
 133              		.cfi_restore 1
 134 00c0 03340101 		ld	s0,16(sp)
 135              		.cfi_restore 8
 136              		.cfi_def_cfa 2, 32
 137 00c4 83348100 		ld	s1,8(sp)
 138              		.cfi_restore 9
 139              	.LVL8:
 140 00c8 13010102 		addi	sp,sp,32
 141              		.cfi_def_cfa_offset 0
 142 00cc 67800000 		jr	ra
 143              	.LVL9:
 144              	.L9:
 145              		.cfi_restore_state
  26:src/TCB.cpp   **** 	}
 146              		.loc 1 26 3 is_stmt 1
  26:src/TCB.cpp   **** 	}
 147              		.loc 1 26 17 is_stmt 0
 148 00d0 13850400 		mv	a0,s1
 149 00d4 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 149      E7800000 
 150              	.LVL10:
 151 00dc 6FF05FFA 		j	.L4
 152              	.L10:
  34:src/TCB.cpp   **** 	} else {
 153              		.loc 1 34 3 is_stmt 1
 154              	.LVL11:
 155              	.LBB23:
 156              	.LBB24:
 137:src/../h/Riscv.hpp **** }
 157              		.loc 2 137 2
 137:src/../h/Riscv.hpp **** }
 158              		.loc 2 137 62 is_stmt 0
 159 00e0 93070010 		li	a5,256
 160              	#APP
 161              	# 137 "src/../h/Riscv.hpp" 1
 138:src/../h/Riscv.hpp **** 
 162              		csrs sstatus, a5
 163              	# 0 "" 2
 164              		.loc 2 138 1
GAS LISTING /tmp/ccNn7P7W.s 			page 8


 165              	#NO_APP
 166 00e8 6FF05FFC 		j	.L6
 167              	.LBE24:
 168              	.LBE23:
 169              		.cfi_endproc
 170              	.LFE46:
 172              		.align	2
 173              		.globl	_ZN3TCB5yieldEv
 175              	_ZN3TCB5yieldEv:
 176              	.LFB47:
  42:src/TCB.cpp   **** 	Riscv::pushRegisters();
 177              		.loc 1 42 19 is_stmt 1
 178              		.cfi_startproc
 179 00ec 130101FF 		addi	sp,sp,-16
 180              		.cfi_def_cfa_offset 16
 181 00f0 23341100 		sd	ra,8(sp)
 182 00f4 23308100 		sd	s0,0(sp)
 183              		.cfi_offset 1, -8
 184              		.cfi_offset 8, -16
 185 00f8 13040101 		addi	s0,sp,16
 186              		.cfi_def_cfa 8, 0
  43:src/TCB.cpp   **** 	TCB::dispatch();
 187              		.loc 1 43 2
  43:src/TCB.cpp   **** 	TCB::dispatch();
 188              		.loc 1 43 22 is_stmt 0
 189 00fc 97000000 		call	_ZN5Riscv13pushRegistersEv@plt
 189      E7800000 
 190              	.LVL12:
  44:src/TCB.cpp   **** 	Riscv::popRegisters();
 191              		.loc 1 44 2 is_stmt 1
  44:src/TCB.cpp   **** 	Riscv::popRegisters();
 192              		.loc 1 44 15 is_stmt 0
 193 0104 97000000 		call	_ZN3TCB8dispatchEv
 193      E7800000 
 194              	.LVL13:
  45:src/TCB.cpp   **** }
 195              		.loc 1 45 2 is_stmt 1
  45:src/TCB.cpp   **** }
 196              		.loc 1 45 21 is_stmt 0
 197 010c 97000000 		call	_ZN5Riscv12popRegistersEv@plt
 197      E7800000 
 198              	.LVL14:
  46:src/TCB.cpp   **** 
 199              		.loc 1 46 1
 200 0114 83308100 		ld	ra,8(sp)
 201              		.cfi_restore 1
 202 0118 03340100 		ld	s0,0(sp)
 203              		.cfi_restore 8
 204              		.cfi_def_cfa 2, 16
 205 011c 13010101 		addi	sp,sp,16
 206              		.cfi_def_cfa_offset 0
 207 0120 67800000 		jr	ra
 208              		.cfi_endproc
 209              	.LFE47:
 211              		.align	2
 212              		.globl	_ZN3TCBnwEm
 214              	_ZN3TCBnwEm:
GAS LISTING /tmp/ccNn7P7W.s 			page 9


 215              	.LFB49:
  58:src/TCB.cpp   **** 
  59:src/TCB.cpp   **** void* TCB::operator new(size_t size) {
 216              		.loc 1 59 38 is_stmt 1
 217              		.cfi_startproc
 218              	.LVL15:
 219 0124 130101FF 		addi	sp,sp,-16
 220              		.cfi_def_cfa_offset 16
 221 0128 23341100 		sd	ra,8(sp)
 222 012c 23308100 		sd	s0,0(sp)
 223              		.cfi_offset 1, -8
 224              		.cfi_offset 8, -16
 225 0130 13040101 		addi	s0,sp,16
 226              		.cfi_def_cfa 8, 0
  60:src/TCB.cpp   **** 	return MemoryAllocator::kmalloc(size + sizeof(MemoryAllocator::UsedMemSegment), MemoryAllocator::T
 227              		.loc 1 60 2
 228              		.loc 1 60 33 is_stmt 0
 229 0134 93052000 		li	a1,2
 230 0138 13058501 		addi	a0,a0,24
 231              	.LVL16:
 232 013c 97000000 		call	_ZN15MemoryAllocator7kmallocEmNS_7PurposeE@plt
 232      E7800000 
 233              	.LVL17:
  61:src/TCB.cpp   **** }
 234              		.loc 1 61 1
 235 0144 83308100 		ld	ra,8(sp)
 236              		.cfi_restore 1
 237 0148 03340100 		ld	s0,0(sp)
 238              		.cfi_restore 8
 239              		.cfi_def_cfa 2, 16
 240 014c 13010101 		addi	sp,sp,16
 241              		.cfi_def_cfa_offset 0
 242 0150 67800000 		jr	ra
 243              		.cfi_endproc
 244              	.LFE49:
 246              		.align	2
 247              		.globl	_ZN3TCB12createThreadEPFvPvES0_Pm
 249              	_ZN3TCB12createThreadEPFvPvES0_Pm:
 250              	.LFB45:
  14:src/TCB.cpp   **** 	//pravljenje niti
 251              		.loc 1 14 71 is_stmt 1
 252              		.cfi_startproc
 253              	.LVL18:
 254 0154 130101FD 		addi	sp,sp,-48
 255              		.cfi_def_cfa_offset 48
 256 0158 23341102 		sd	ra,40(sp)
 257 015c 23308102 		sd	s0,32(sp)
 258 0160 233C9100 		sd	s1,24(sp)
 259 0164 23382101 		sd	s2,16(sp)
 260 0168 23343101 		sd	s3,8(sp)
 261 016c 23304101 		sd	s4,0(sp)
 262              		.cfi_offset 1, -8
 263              		.cfi_offset 8, -16
 264              		.cfi_offset 9, -24
 265              		.cfi_offset 18, -32
 266              		.cfi_offset 19, -40
 267              		.cfi_offset 20, -48
GAS LISTING /tmp/ccNn7P7W.s 			page 10


 268 0170 13040103 		addi	s0,sp,48
 269              		.cfi_def_cfa 8, 0
 270 0174 93090500 		mv	s3,a0
 271 0178 138A0500 		mv	s4,a1
 272 017c 13090600 		mv	s2,a2
  16:src/TCB.cpp   **** 
 273              		.loc 1 16 2
  16:src/TCB.cpp   **** 
 274              		.loc 1 16 48 is_stmt 0
 275 0180 13050006 		li	a0,96
 276              	.LVL19:
 277 0184 97000000 		call	_ZN3TCBnwEm
 277      E7800000 
 278              	.LVL20:
 279 018c 93040500 		mv	s1,a0
 280              	.LVL21:
 281              	.LBB25:
 282              	.LBB26:
 283              		.file 3 "src/../h/TCB.hpp"
   1:src/../h/TCB.hpp **** //
   2:src/../h/TCB.hpp **** // Created by os on 5/23/23.
   3:src/../h/TCB.hpp **** //
   4:src/../h/TCB.hpp **** 
   5:src/../h/TCB.hpp **** #ifndef PROJEKAT2023_TCB_HPP
   6:src/../h/TCB.hpp **** #define PROJEKAT2023_TCB_HPP
   7:src/../h/TCB.hpp **** 
   8:src/../h/TCB.hpp **** #include "../lib/hw.h"
   9:src/../h/TCB.hpp **** #include "../h/ThreadQueue.hpp"
  10:src/../h/TCB.hpp **** 
  11:src/../h/TCB.hpp **** class TCB {
  12:src/../h/TCB.hpp **** public:
  13:src/../h/TCB.hpp **** 	friend class Scheduler;
  14:src/../h/TCB.hpp **** 
  15:src/../h/TCB.hpp **** 	using Body = void (*)(void*);
  16:src/../h/TCB.hpp **** 
  17:src/../h/TCB.hpp **** 	static TCB* createThread(Body function, void* args, uint64* stack);
  18:src/../h/TCB.hpp **** 	static void start(TCB* newTcb);
  19:src/../h/TCB.hpp **** 
  20:src/../h/TCB.hpp **** 	bool isFinished() { return finished; }
  21:src/../h/TCB.hpp **** 
  22:src/../h/TCB.hpp **** 	void setFinished(bool finish) { this->finished = finish; }
  23:src/../h/TCB.hpp **** 
  24:src/../h/TCB.hpp **** 	bool isBlocked() { return blocked; }
  25:src/../h/TCB.hpp **** 
  26:src/../h/TCB.hpp **** 	void setBlocked(bool block) { this->blocked = block; }
  27:src/../h/TCB.hpp **** 
  28:src/../h/TCB.hpp **** 	uint64 getTimeSlice() { return timeSlice; }
  29:src/../h/TCB.hpp **** 
  30:src/../h/TCB.hpp **** 	void setTimeSlice(uint64 value) { timeSlice = value; }
  31:src/../h/TCB.hpp **** 
  32:src/../h/TCB.hpp **** 	//static void threadSleep(time_t sleepTime);
  33:src/../h/TCB.hpp **** 
  34:src/../h/TCB.hpp **** 	static void threadJoin(TCB* handle);
  35:src/../h/TCB.hpp **** 
  36:src/../h/TCB.hpp **** 	static void releaseJoined();
  37:src/../h/TCB.hpp **** 
  38:src/../h/TCB.hpp **** 	static void yield();
GAS LISTING /tmp/ccNn7P7W.s 			page 11


  39:src/../h/TCB.hpp **** 
  40:src/../h/TCB.hpp **** 	static void dispatch();
  41:src/../h/TCB.hpp **** 
  42:src/../h/TCB.hpp **** 	static void wrapper();
  43:src/../h/TCB.hpp **** 
  44:src/../h/TCB.hpp **** 	static TCB* running;
  45:src/../h/TCB.hpp **** 	static uint64 runningTimeSlice;
  46:src/../h/TCB.hpp **** 
  47:src/../h/TCB.hpp **** //	TCB* getNextInScheduler(){
  48:src/../h/TCB.hpp **** //		return nextInScheduler;
  49:src/../h/TCB.hpp **** //	}
  50:src/../h/TCB.hpp **** //	void setNextInScheduler(TCB* tcb){
  51:src/../h/TCB.hpp **** //		nextInScheduler = tcb;
  52:src/../h/TCB.hpp **** //	}
  53:src/../h/TCB.hpp **** 
  54:src/../h/TCB.hpp **** private:
  55:src/../h/TCB.hpp **** 	//kontekst procesora za datu nit
  56:src/../h/TCB.hpp **** 	struct Context {
  57:src/../h/TCB.hpp **** 		uint64 ra;
  58:src/../h/TCB.hpp **** 		uint64 sp;
  59:src/../h/TCB.hpp **** 	} context;
  60:src/../h/TCB.hpp **** 	Body threadFunction;    //funkcija koja se izvrsava
  61:src/../h/TCB.hpp **** 	uint64* stack;            //najniza adresa steka; stek raste ka nizim adresama, pokazuje na posled
  62:src/../h/TCB.hpp **** 	void* args;                //argumenti poziva funkcije
  63:src/../h/TCB.hpp **** 	uint64 timeSlice;        //vremenski odsecak dodeljen datoj niti
  64:src/../h/TCB.hpp **** 	bool finished;            //da li je nit zavrsila izvrsavanje funkcije
  65:src/../h/TCB.hpp **** 	bool blocked;            //da li je nit blokirana
  66:src/../h/TCB.hpp **** 	bool needToJoin;        //da li je nit pozvala join i ceka da se neka druga zavrsi
  67:src/../h/TCB.hpp **** 	TCB* nextInScheduler;    // pokazivac na sledecu nit u Scheduler-u
  68:src/../h/TCB.hpp **** 	time_t timeToSleep;        //vreme na koje je uspavana nit
  69:src/../h/TCB.hpp **** 	TCB* nextSleeping;        //sledeca nit u listi za spavanje u Scheduler-u
  70:src/../h/TCB.hpp **** 	ThreadQueue waitingToJoin;    //red niti koje su pozvale join nad ovom niti
  71:src/../h/TCB.hpp **** 
  72:src/../h/TCB.hpp **** 
  73:src/../h/TCB.hpp **** 	TCB(Body function, void* args, uint64* stack) : threadFunction(function), stack(stack), args(args)
  74:src/../h/TCB.hpp **** 													timeSlice(DEFAULT_TIME_SLICE), finished(false), blocked(false),
  75:src/../h/TCB.hpp **** 													needToJoin(false),
  76:src/../h/TCB.hpp **** 													nextInScheduler(nullptr), timeToSleep(0), nextSleeping(nullptr) {
 284              		.loc 3 76 76
 285 0190 23383501 		sd	s3,16(a0)
 286 0194 233C2501 		sd	s2,24(a0)
 287 0198 23304503 		sd	s4,32(a0)
 288 019c 93072000 		li	a5,2
 289 01a0 2334F502 		sd	a5,40(a0)
 290 01a4 23080502 		sb	zero,48(a0)
 291 01a8 A3080502 		sb	zero,49(a0)
 292 01ac 23090502 		sb	zero,50(a0)
 293 01b0 233C0502 		sd	zero,56(a0)
 294 01b4 23300504 		sd	zero,64(a0)
 295 01b8 23340504 		sd	zero,72(a0)
 296              	.LVL22:
 297              	.LBB27:
 298              	.LBB28:
 299              		.file 4 "src/../h/../h/ThreadQueue.hpp"
   1:src/../h/../h/ThreadQueue.hpp **** //
   2:src/../h/../h/ThreadQueue.hpp **** // Created by os on 6/4/23.
   3:src/../h/../h/ThreadQueue.hpp **** //
GAS LISTING /tmp/ccNn7P7W.s 			page 12


   4:src/../h/../h/ThreadQueue.hpp **** 
   5:src/../h/../h/ThreadQueue.hpp **** #ifndef PROJEKAT2023_THREADQUEUE_HPP
   6:src/../h/../h/ThreadQueue.hpp **** #define PROJEKAT2023_THREADQUEUE_HPP
   7:src/../h/../h/ThreadQueue.hpp **** 
   8:src/../h/../h/ThreadQueue.hpp **** #include "../h/MemoryAllocator.hpp"
   9:src/../h/../h/ThreadQueue.hpp **** #include "../h/syscall_c.hpp"
  10:src/../h/../h/ThreadQueue.hpp **** 
  11:src/../h/../h/ThreadQueue.hpp **** class TCB;
  12:src/../h/../h/ThreadQueue.hpp **** 
  13:src/../h/../h/ThreadQueue.hpp **** class ThreadQueue {
  14:src/../h/../h/ThreadQueue.hpp **** private:
  15:src/../h/../h/ThreadQueue.hpp **** 	struct Node {
  16:src/../h/../h/ThreadQueue.hpp **** 		TCB* data;
  17:src/../h/../h/ThreadQueue.hpp **** 		Node* next;
  18:src/../h/../h/ThreadQueue.hpp **** 
  19:src/../h/../h/ThreadQueue.hpp **** 		Node(TCB* d) : data(d), next(nullptr) {}
  20:src/../h/../h/ThreadQueue.hpp **** 
  21:src/../h/../h/ThreadQueue.hpp **** 		static void* operator new(size_t size) {
  22:src/../h/../h/ThreadQueue.hpp **** 			return mem_alloc(size);
  23:src/../h/../h/ThreadQueue.hpp **** 		}
  24:src/../h/../h/ThreadQueue.hpp **** 
  25:src/../h/../h/ThreadQueue.hpp **** 		static void operator delete(void* ptr) {
  26:src/../h/../h/ThreadQueue.hpp **** 			mem_free(ptr);
  27:src/../h/../h/ThreadQueue.hpp **** 		}
  28:src/../h/../h/ThreadQueue.hpp **** 	};
  29:src/../h/../h/ThreadQueue.hpp **** 
  30:src/../h/../h/ThreadQueue.hpp **** 	Node* front;
  31:src/../h/../h/ThreadQueue.hpp **** 	Node* back;
  32:src/../h/../h/ThreadQueue.hpp **** 
  33:src/../h/../h/ThreadQueue.hpp **** public:
  34:src/../h/../h/ThreadQueue.hpp **** 	ThreadQueue() : front(nullptr), back(nullptr) {}
 300              		.loc 4 34 46
 301 01bc 23380504 		sd	zero,80(a0)
 302 01c0 233C0504 		sd	zero,88(a0)
 303              	.LVL23:
 304              	.LBE28:
 305              	.LBE27:
 306              	.LBB29:
  77:src/../h/TCB.hpp **** 		//formiranje pocetnog konteksta; specijalni uslovi za main funkciju kojoj se pocetni kontekst aut
  78:src/../h/TCB.hpp **** 		uint64 startRa = threadFunction != nullptr ? (uint64)&wrapper : 0;
 307              		.loc 3 78 3 is_stmt 1
 308              		.loc 3 78 46 is_stmt 0
 309 01c4 638A0904 		beqz	s3,.L19
 310 01c8 97070000 		lla	a5,_ZN3TCB7wrapperEv
 310      93870700 
 311              	.L16:
 312              	.LVL24:
  79:src/../h/TCB.hpp **** 		uint64 startSp = stack != nullptr ? (uint64)&stack[DEFAULT_STACK_SIZE] : 0;
 313              		.loc 3 79 3 is_stmt 1
 314              		.loc 3 79 37 is_stmt 0
 315 01d0 63080904 		beqz	s2,.L20
 316              		.loc 3 79 47
 317 01d4 37860000 		li	a2,32768
 318 01d8 3309C900 		add	s2,s2,a2
 319              	.LVL25:
 320              	.L17:
  80:src/../h/TCB.hpp **** 		this->context.ra = startRa;
GAS LISTING /tmp/ccNn7P7W.s 			page 13


 321              		.loc 3 80 3 is_stmt 1
 322              		.loc 3 80 20 is_stmt 0
 323 01dc 23B0F400 		sd	a5,0(s1)
  81:src/../h/TCB.hpp **** 		this->context.sp = startSp;
 324              		.loc 3 81 3 is_stmt 1
 325              		.loc 3 81 20 is_stmt 0
 326 01e0 23B42401 		sd	s2,8(s1)
 327              	.LVL26:
 328              	.LBE29:
 329              	.LBE26:
 330              	.LBE25:
  19:src/TCB.cpp   **** 	return newThread;
 331              		.loc 1 19 2 is_stmt 1
 332 01e4 63880900 		beqz	s3,.L15
  19:src/TCB.cpp   **** 	return newThread;
 333              		.loc 1 19 27 discriminator 1
  19:src/TCB.cpp   **** 	return newThread;
 334              		.loc 1 19 41 is_stmt 0 discriminator 1
 335 01e8 13850400 		mv	a0,s1
 336 01ec 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 336      E7800000 
 337              	.LVL27:
  20:src/TCB.cpp   **** }
 338              		.loc 1 20 2 is_stmt 1 discriminator 1
 339              	.L15:
  21:src/TCB.cpp   **** 
 340              		.loc 1 21 1 is_stmt 0
 341 01f4 13850400 		mv	a0,s1
 342 01f8 83308102 		ld	ra,40(sp)
 343              		.cfi_remember_state
 344              		.cfi_restore 1
 345 01fc 03340102 		ld	s0,32(sp)
 346              		.cfi_restore 8
 347              		.cfi_def_cfa 2, 48
 348 0200 83348101 		ld	s1,24(sp)
 349              		.cfi_restore 9
 350              	.LVL28:
 351 0204 03390101 		ld	s2,16(sp)
 352              		.cfi_restore 18
 353              	.LVL29:
 354 0208 83398100 		ld	s3,8(sp)
 355              		.cfi_restore 19
 356              	.LVL30:
 357 020c 033A0100 		ld	s4,0(sp)
 358              		.cfi_restore 20
 359              	.LVL31:
 360 0210 13010103 		addi	sp,sp,48
 361              		.cfi_def_cfa_offset 0
 362 0214 67800000 		jr	ra
 363              	.LVL32:
 364              	.L19:
 365              		.cfi_restore_state
 366              	.LBB32:
 367              	.LBB31:
 368              	.LBB30:
  78:src/../h/TCB.hpp **** 		uint64 startSp = stack != nullptr ? (uint64)&stack[DEFAULT_STACK_SIZE] : 0;
 369              		.loc 3 78 46
GAS LISTING /tmp/ccNn7P7W.s 			page 14


 370 0218 93070000 		li	a5,0
 371 021c 6FF05FFB 		j	.L16
 372              	.LVL33:
 373              	.L20:
  79:src/../h/TCB.hpp **** 		this->context.ra = startRa;
 374              		.loc 3 79 37
 375 0220 13090000 		li	s2,0
 376              	.LVL34:
 377 0224 6FF09FFB 		j	.L17
 378              	.LBE30:
 379              	.LBE31:
 380              	.LBE32:
 381              		.cfi_endproc
 382              	.LFE45:
 384              		.align	2
 385              		.globl	_ZN3TCBdlEPv
 387              	_ZN3TCBdlEPv:
 388              	.LFB50:
  62:src/TCB.cpp   **** 
  63:src/TCB.cpp   **** void TCB::operator delete(void* ptr) {
 389              		.loc 1 63 38 is_stmt 1
 390              		.cfi_startproc
 391              	.LVL35:
 392 0228 130101FF 		addi	sp,sp,-16
 393              		.cfi_def_cfa_offset 16
 394 022c 23341100 		sd	ra,8(sp)
 395 0230 23308100 		sd	s0,0(sp)
 396              		.cfi_offset 1, -8
 397              		.cfi_offset 8, -16
 398 0234 13040101 		addi	s0,sp,16
 399              		.cfi_def_cfa 8, 0
  64:src/TCB.cpp   **** 	MemoryAllocator::kfree(ptr);
 400              		.loc 1 64 2
 401              		.loc 1 64 24 is_stmt 0
 402 0238 97000000 		call	_ZN15MemoryAllocator5kfreeEPv@plt
 402      E7800000 
 403              	.LVL36:
  65:src/TCB.cpp   **** }
 404              		.loc 1 65 1
 405 0240 83308100 		ld	ra,8(sp)
 406              		.cfi_restore 1
 407 0244 03340100 		ld	s0,0(sp)
 408              		.cfi_restore 8
 409              		.cfi_def_cfa 2, 16
 410 0248 13010101 		addi	sp,sp,16
 411              		.cfi_def_cfa_offset 0
 412 024c 67800000 		jr	ra
 413              		.cfi_endproc
 414              	.LFE50:
 416              		.align	2
 417              		.globl	_ZN3TCB10threadJoinEPS_
 419              	_ZN3TCB10threadJoinEPS_:
 420              	.LFB51:
  66:src/TCB.cpp   **** 
  67:src/TCB.cpp   **** void TCB::threadJoin(TCB* handle) {
 421              		.loc 1 67 35 is_stmt 1
 422              		.cfi_startproc
GAS LISTING /tmp/ccNn7P7W.s 			page 15


 423              	.LVL37:
  68:src/TCB.cpp   **** 	if(handle->finished) return;
 424              		.loc 1 68 2
 425              		.loc 1 68 13 is_stmt 0
 426 0250 83470503 		lbu	a5,48(a0)
 427              		.loc 1 68 2
 428 0254 63840700 		beqz	a5,.L30
 429 0258 67800000 		ret
 430              	.L30:
  67:src/TCB.cpp   **** 	if(handle->finished) return;
 431              		.loc 1 67 35
 432 025c 130101FF 		addi	sp,sp,-16
 433              		.cfi_def_cfa_offset 16
 434 0260 23341100 		sd	ra,8(sp)
 435 0264 23308100 		sd	s0,0(sp)
 436              		.cfi_offset 1, -8
 437              		.cfi_offset 8, -16
 438 0268 13040101 		addi	s0,sp,16
 439              		.cfi_def_cfa 8, 0
  69:src/TCB.cpp   **** 	TCB::running->needToJoin = true;
 440              		.loc 1 69 2 is_stmt 1
 441              		.loc 1 69 16 is_stmt 0
 442 026c 97050000 		ld	a1,.LANCHOR0
 442      83B50500 
 443              		.loc 1 69 27
 444 0274 93071000 		li	a5,1
 445 0278 2389F502 		sb	a5,50(a1)
  70:src/TCB.cpp   **** 	handle->waitingToJoin.putLast(TCB::running);
 446              		.loc 1 70 2 is_stmt 1
 447              		.loc 1 70 31 is_stmt 0
 448 027c 13050505 		addi	a0,a0,80
 449              	.LVL38:
 450 0280 97000000 		call	_ZN11ThreadQueue7putLastEP3TCB@plt
 450      E7800000 
 451              	.LVL39:
  71:src/TCB.cpp   **** }
 452              		.loc 1 71 1
 453 0288 83308100 		ld	ra,8(sp)
 454              		.cfi_restore 1
 455 028c 03340100 		ld	s0,0(sp)
 456              		.cfi_restore 8
 457              		.cfi_def_cfa 2, 16
 458 0290 13010101 		addi	sp,sp,16
 459              		.cfi_def_cfa_offset 0
 460 0294 67800000 		jr	ra
 461              		.cfi_endproc
 462              	.LFE51:
 464              		.align	2
 465              		.globl	_ZN3TCB13releaseJoinedEv
 467              	_ZN3TCB13releaseJoinedEv:
 468              	.LFB52:
  72:src/TCB.cpp   **** 
  73:src/TCB.cpp   **** void TCB::releaseJoined() {
 469              		.loc 1 73 27 is_stmt 1
 470              		.cfi_startproc
  74:src/TCB.cpp   **** 	while(!TCB::running->waitingToJoin.isEmpty()){
 471              		.loc 1 74 2
GAS LISTING /tmp/ccNn7P7W.s 			page 16


 472              		.loc 1 74 8
 473              		.loc 1 74 23 is_stmt 0
 474 0298 17050000 		ld	a0,.LANCHOR0
 474      03350500 
 475              	.LVL40:
 476              	.LBB33:
 477              	.LBB34:
  35:src/../h/../h/ThreadQueue.hpp **** 
  36:src/../h/../h/ThreadQueue.hpp **** 	ThreadQueue(const ThreadQueue&) = delete;
  37:src/../h/../h/ThreadQueue.hpp **** 
  38:src/../h/../h/ThreadQueue.hpp **** 	ThreadQueue& operator=(const ThreadQueue&) = delete;
  39:src/../h/../h/ThreadQueue.hpp **** 
  40:src/../h/../h/ThreadQueue.hpp **** 	~ThreadQueue() {
  41:src/../h/../h/ThreadQueue.hpp **** 		while (!isEmpty()) {
  42:src/../h/../h/ThreadQueue.hpp **** 			Node* node = front;
  43:src/../h/../h/ThreadQueue.hpp **** 			front = front->next;
  44:src/../h/../h/ThreadQueue.hpp **** 			delete node;
  45:src/../h/../h/ThreadQueue.hpp **** 		}
  46:src/../h/../h/ThreadQueue.hpp **** 	}
  47:src/../h/../h/ThreadQueue.hpp **** 
  48:src/../h/../h/ThreadQueue.hpp **** 	bool isEmpty() const {
  49:src/../h/../h/ThreadQueue.hpp **** 		return front == nullptr;
 478              		.loc 4 49 3 is_stmt 1
 479              		.loc 4 49 10 is_stmt 0
 480 02a0 83370505 		ld	a5,80(a0)
 481              	.LVL41:
 482              	.LBE34:
 483              	.LBE33:
 484              		.loc 1 74 8
 485 02a4 63860704 		beqz	a5,.L39
  73:src/TCB.cpp   **** 	while(!TCB::running->waitingToJoin.isEmpty()){
 486              		.loc 1 73 27
 487 02a8 130101FF 		addi	sp,sp,-16
 488              		.cfi_def_cfa_offset 16
 489 02ac 23341100 		sd	ra,8(sp)
 490 02b0 23308100 		sd	s0,0(sp)
 491              		.cfi_offset 1, -8
 492              		.cfi_offset 8, -16
 493 02b4 13040101 		addi	s0,sp,16
 494              		.cfi_def_cfa 8, 0
 495              	.L35:
 496              	.LBB36:
  75:src/TCB.cpp   **** 		TCB* tcb = TCB::running->waitingToJoin.getFirst();
 497              		.loc 1 75 3 is_stmt 1
 498              		.loc 1 75 50 is_stmt 0
 499 02b8 13050505 		addi	a0,a0,80
 500 02bc 97000000 		call	_ZN11ThreadQueue8getFirstEv@plt
 500      E7800000 
 501              	.LVL42:
  76:src/TCB.cpp   **** 		tcb->needToJoin = false;
 502              		.loc 1 76 3 is_stmt 1
 503              		.loc 1 76 19 is_stmt 0
 504 02c4 23090502 		sb	zero,50(a0)
  77:src/TCB.cpp   **** 		Scheduler::put(tcb);
 505              		.loc 1 77 3 is_stmt 1
 506              		.loc 1 77 17 is_stmt 0
 507 02c8 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
GAS LISTING /tmp/ccNn7P7W.s 			page 17


 507      E7800000 
 508              	.LVL43:
 509              	.LBE36:
  74:src/TCB.cpp   **** 		TCB* tcb = TCB::running->waitingToJoin.getFirst();
 510              		.loc 1 74 2 is_stmt 1
  74:src/TCB.cpp   **** 		TCB* tcb = TCB::running->waitingToJoin.getFirst();
 511              		.loc 1 74 8
  74:src/TCB.cpp   **** 		TCB* tcb = TCB::running->waitingToJoin.getFirst();
 512              		.loc 1 74 23 is_stmt 0
 513 02d0 17050000 		ld	a0,.LANCHOR0
 513      03350500 
 514              	.LVL44:
 515              	.LBB37:
 516              	.LBB35:
 517              		.loc 4 49 3 is_stmt 1
 518              		.loc 4 49 10 is_stmt 0
 519 02d8 83370505 		ld	a5,80(a0)
 520              	.LVL45:
 521              	.LBE35:
 522              	.LBE37:
  74:src/TCB.cpp   **** 		TCB* tcb = TCB::running->waitingToJoin.getFirst();
 523              		.loc 1 74 8
 524 02dc E39E07FC 		bnez	a5,.L35
  78:src/TCB.cpp   **** 	}
  79:src/TCB.cpp   **** }
 525              		.loc 1 79 1
 526 02e0 83308100 		ld	ra,8(sp)
 527              		.cfi_restore 1
 528 02e4 03340100 		ld	s0,0(sp)
 529              		.cfi_restore 8
 530              		.cfi_def_cfa 2, 16
 531 02e8 13010101 		addi	sp,sp,16
 532              		.cfi_def_cfa_offset 0
 533 02ec 67800000 		jr	ra
 534              	.L39:
 535 02f0 67800000 		ret
 536              		.cfi_endproc
 537              	.LFE52:
 539              		.align	2
 540              		.globl	_ZN3TCB5startEPS_
 542              	_ZN3TCB5startEPS_:
 543              	.LFB53:
  80:src/TCB.cpp   **** 
  81:src/TCB.cpp   **** void TCB::start(TCB* newTcb) {
 544              		.loc 1 81 30 is_stmt 1
 545              		.cfi_startproc
 546              	.LVL46:
  82:src/TCB.cpp   **** 	//startovanje niti(stavljanje u Scheduler); main nit je vec aktivna, ne stavlja se u Scheduler
  83:src/TCB.cpp   **** 	if (newTcb->threadFunction != nullptr) Scheduler::put(newTcb);
 547              		.loc 1 83 2
 548              		.loc 1 83 14 is_stmt 0
 549 02f4 83370501 		ld	a5,16(a0)
 550              		.loc 1 83 2
 551 02f8 63860702 		beqz	a5,.L43
  81:src/TCB.cpp   **** 	//startovanje niti(stavljanje u Scheduler); main nit je vec aktivna, ne stavlja se u Scheduler
 552              		.loc 1 81 30 discriminator 1
 553 02fc 130101FF 		addi	sp,sp,-16
GAS LISTING /tmp/ccNn7P7W.s 			page 18


 554              		.cfi_def_cfa_offset 16
 555 0300 23341100 		sd	ra,8(sp)
 556 0304 23308100 		sd	s0,0(sp)
 557              		.cfi_offset 1, -8
 558              		.cfi_offset 8, -16
 559 0308 13040101 		addi	s0,sp,16
 560              		.cfi_def_cfa 8, 0
 561              		.loc 1 83 41 is_stmt 1 discriminator 1
 562              		.loc 1 83 55 is_stmt 0 discriminator 1
 563 030c 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 563      E7800000 
 564              	.LVL47:
  84:src/TCB.cpp   **** }
 565              		.loc 1 84 1 discriminator 1
 566 0314 83308100 		ld	ra,8(sp)
 567              		.cfi_restore 1
 568 0318 03340100 		ld	s0,0(sp)
 569              		.cfi_restore 8
 570              		.cfi_def_cfa 2, 16
 571 031c 13010101 		addi	sp,sp,16
 572              		.cfi_def_cfa_offset 0
 573 0320 67800000 		jr	ra
 574              	.LVL48:
 575              	.L43:
 576 0324 67800000 		ret
 577              		.cfi_endproc
 578              	.LFE53:
 580              		.globl	_ZN3TCB16runningTimeSliceE
 581              		.globl	_ZN3TCB7runningE
 582              		.bss
 583              		.align	3
 584              		.set	.LANCHOR0,. + 0
 587              	_ZN3TCB7runningE:
 588 0000 00000000 		.zero	8
 588      00000000 
 591              	_ZN3TCB16runningTimeSliceE:
 592 0008 00000000 		.zero	8
 592      00000000 
 593              		.text
 594              	.Letext0:
 595              		.file 5 "src/../h/../lib/hw.h"
 596              		.file 6 "src/../h/../h/../h/MemoryAllocator.hpp"
 597              		.file 7 "src/../h/Scheduler.hpp"
 598              		.file 8 "src/../h/../h/../h/syscall_c.hpp"
GAS LISTING /tmp/ccNn7P7W.s 			page 19


DEFINED SYMBOLS
                            *ABS*:0000000000000000 TCB.cpp
     /tmp/ccNn7P7W.s:9      .text:0000000000000000 _ZN3TCB7wrapperEv
     /tmp/ccNn7P7W.s:13     .text:0000000000000000 .L0 
     /tmp/ccNn7P7W.s:14     .text:0000000000000000 .L0 
     /tmp/ccNn7P7W.s:15     .text:0000000000000004 .L0 
     /tmp/ccNn7P7W.s:18     .text:000000000000000c .L0 
     /tmp/ccNn7P7W.s:19     .text:000000000000000c .L0 
     /tmp/ccNn7P7W.s:21     .text:0000000000000010 .L0 
     /tmp/ccNn7P7W.s:23     .text:0000000000000010 .L0 
     /tmp/ccNn7P7W.s:24     .text:0000000000000010 .L0 
     /tmp/ccNn7P7W.s:27     .text:0000000000000018 .L0 
     /tmp/ccNn7P7W.s:28     .text:0000000000000018 .L0 
     /tmp/ccNn7P7W.s:31     .text:0000000000000024 .L0 
     /tmp/ccNn7P7W.s:35     .text:000000000000002c .L0 
     /tmp/ccNn7P7W.s:36     .text:000000000000002c .L0 
     /tmp/ccNn7P7W.s:39     .text:0000000000000034 .L0 
     /tmp/ccNn7P7W.s:40     .text:0000000000000038 .L0 
     /tmp/ccNn7P7W.s:42     .text:000000000000003c .L0 
     /tmp/ccNn7P7W.s:43     .text:000000000000003c .L0 
     /tmp/ccNn7P7W.s:45     .text:0000000000000040 .L0 
     /tmp/ccNn7P7W.s:47     .text:0000000000000044 .L0 
     /tmp/ccNn7P7W.s:53     .text:0000000000000044 _ZN3TCB8dispatchEv
     /tmp/ccNn7P7W.s:56     .text:0000000000000044 .L0 
     /tmp/ccNn7P7W.s:57     .text:0000000000000044 .L0 
     /tmp/ccNn7P7W.s:58     .text:0000000000000048 .L0 
     /tmp/ccNn7P7W.s:62     .text:0000000000000054 .L0 
     /tmp/ccNn7P7W.s:63     .text:0000000000000054 .L0 
     /tmp/ccNn7P7W.s:64     .text:0000000000000054 .L0 
     /tmp/ccNn7P7W.s:66     .text:0000000000000058 .L0 
     /tmp/ccNn7P7W.s:68     .text:0000000000000058 .L0 
     /tmp/ccNn7P7W.s:69     .text:0000000000000058 .L0 
     /tmp/ccNn7P7W.s:72     .text:0000000000000060 .L0 
     /tmp/ccNn7P7W.s:73     .text:0000000000000060 .L0 
     /tmp/ccNn7P7W.s:75     .text:0000000000000064 .L0 
     /tmp/ccNn7P7W.s:77     .text:0000000000000068 .L0 
     /tmp/ccNn7P7W.s:79     .text:000000000000006c .L0 
     /tmp/ccNn7P7W.s:81     .text:0000000000000070 .L0 
     /tmp/ccNn7P7W.s:83     .text:0000000000000074 .L0 
     /tmp/ccNn7P7W.s:85     .text:0000000000000078 .L0 
     /tmp/ccNn7P7W.s:87     .text:000000000000007c .L0 
     /tmp/ccNn7P7W.s:90     .text:0000000000000080 .L0 
     /tmp/ccNn7P7W.s:91     .text:0000000000000080 .L0 
     /tmp/ccNn7P7W.s:95     .text:000000000000008c .L0 
     /tmp/ccNn7P7W.s:98     .text:0000000000000098 .L0 
     /tmp/ccNn7P7W.s:99     .text:0000000000000098 .L0 
     /tmp/ccNn7P7W.s:101    .text:000000000000009c .L0 
     /tmp/ccNn7P7W.s:102    .text:000000000000009c .L0 
     /tmp/ccNn7P7W.s:104    .text:00000000000000a0 .L0 
     /tmp/ccNn7P7W.s:110    .text:00000000000000a4 .L0 
     /tmp/ccNn7P7W.s:111    .text:00000000000000a4 .L0 
     /tmp/ccNn7P7W.s:112    .text:00000000000000a4 .L0 
     /tmp/ccNn7P7W.s:123    .text:00000000000000ac .L0 
     /tmp/ccNn7P7W.s:125    .text:00000000000000b0 .L0 
     /tmp/ccNn7P7W.s:126    .text:00000000000000b0 .L0 
     /tmp/ccNn7P7W.s:131    .text:00000000000000bc .L0 
     /tmp/ccNn7P7W.s:132    .text:00000000000000c0 .L0 
GAS LISTING /tmp/ccNn7P7W.s 			page 20


     /tmp/ccNn7P7W.s:133    .text:00000000000000c0 .L0 
     /tmp/ccNn7P7W.s:135    .text:00000000000000c4 .L0 
     /tmp/ccNn7P7W.s:136    .text:00000000000000c4 .L0 
     /tmp/ccNn7P7W.s:138    .text:00000000000000c8 .L0 
     /tmp/ccNn7P7W.s:141    .text:00000000000000cc .L0 
     /tmp/ccNn7P7W.s:145    .text:00000000000000d0 .L0 
     /tmp/ccNn7P7W.s:147    .text:00000000000000d0 .L0 
     /tmp/ccNn7P7W.s:148    .text:00000000000000d0 .L0 
     /tmp/ccNn7P7W.s:157    .text:00000000000000e0 .L0 
     /tmp/ccNn7P7W.s:158    .text:00000000000000e0 .L0 
     /tmp/ccNn7P7W.s:159    .text:00000000000000e0 .L0 
     /tmp/ccNn7P7W.s:166    .text:00000000000000e8 .L0 
     /tmp/ccNn7P7W.s:169    .text:00000000000000ec .L0 
     /tmp/ccNn7P7W.s:175    .text:00000000000000ec _ZN3TCB5yieldEv
     /tmp/ccNn7P7W.s:178    .text:00000000000000ec .L0 
     /tmp/ccNn7P7W.s:179    .text:00000000000000ec .L0 
     /tmp/ccNn7P7W.s:180    .text:00000000000000f0 .L0 
     /tmp/ccNn7P7W.s:183    .text:00000000000000f8 .L0 
     /tmp/ccNn7P7W.s:184    .text:00000000000000f8 .L0 
     /tmp/ccNn7P7W.s:186    .text:00000000000000fc .L0 
     /tmp/ccNn7P7W.s:188    .text:00000000000000fc .L0 
     /tmp/ccNn7P7W.s:189    .text:00000000000000fc .L0 
     /tmp/ccNn7P7W.s:192    .text:0000000000000104 .L0 
     /tmp/ccNn7P7W.s:193    .text:0000000000000104 .L0 
     /tmp/ccNn7P7W.s:196    .text:000000000000010c .L0 
     /tmp/ccNn7P7W.s:197    .text:000000000000010c .L0 
     /tmp/ccNn7P7W.s:200    .text:0000000000000114 .L0 
     /tmp/ccNn7P7W.s:201    .text:0000000000000118 .L0 
     /tmp/ccNn7P7W.s:203    .text:000000000000011c .L0 
     /tmp/ccNn7P7W.s:204    .text:000000000000011c .L0 
     /tmp/ccNn7P7W.s:206    .text:0000000000000120 .L0 
     /tmp/ccNn7P7W.s:208    .text:0000000000000124 .L0 
     /tmp/ccNn7P7W.s:214    .text:0000000000000124 _ZN3TCBnwEm
     /tmp/ccNn7P7W.s:217    .text:0000000000000124 .L0 
     /tmp/ccNn7P7W.s:219    .text:0000000000000124 .L0 
     /tmp/ccNn7P7W.s:220    .text:0000000000000128 .L0 
     /tmp/ccNn7P7W.s:223    .text:0000000000000130 .L0 
     /tmp/ccNn7P7W.s:224    .text:0000000000000130 .L0 
     /tmp/ccNn7P7W.s:226    .text:0000000000000134 .L0 
     /tmp/ccNn7P7W.s:228    .text:0000000000000134 .L0 
     /tmp/ccNn7P7W.s:229    .text:0000000000000134 .L0 
     /tmp/ccNn7P7W.s:235    .text:0000000000000144 .L0 
     /tmp/ccNn7P7W.s:236    .text:0000000000000148 .L0 
     /tmp/ccNn7P7W.s:238    .text:000000000000014c .L0 
     /tmp/ccNn7P7W.s:239    .text:000000000000014c .L0 
     /tmp/ccNn7P7W.s:241    .text:0000000000000150 .L0 
     /tmp/ccNn7P7W.s:243    .text:0000000000000154 .L0 
     /tmp/ccNn7P7W.s:249    .text:0000000000000154 _ZN3TCB12createThreadEPFvPvES0_Pm
     /tmp/ccNn7P7W.s:252    .text:0000000000000154 .L0 
     /tmp/ccNn7P7W.s:254    .text:0000000000000154 .L0 
     /tmp/ccNn7P7W.s:255    .text:0000000000000158 .L0 
     /tmp/ccNn7P7W.s:262    .text:0000000000000170 .L0 
     /tmp/ccNn7P7W.s:263    .text:0000000000000170 .L0 
     /tmp/ccNn7P7W.s:264    .text:0000000000000170 .L0 
     /tmp/ccNn7P7W.s:265    .text:0000000000000170 .L0 
     /tmp/ccNn7P7W.s:266    .text:0000000000000170 .L0 
     /tmp/ccNn7P7W.s:267    .text:0000000000000170 .L0 
GAS LISTING /tmp/ccNn7P7W.s 			page 21


     /tmp/ccNn7P7W.s:269    .text:0000000000000174 .L0 
     /tmp/ccNn7P7W.s:274    .text:0000000000000180 .L0 
     /tmp/ccNn7P7W.s:275    .text:0000000000000180 .L0 
     /tmp/ccNn7P7W.s:285    .text:0000000000000190 .L0 
     /tmp/ccNn7P7W.s:301    .text:00000000000001bc .L0 
     /tmp/ccNn7P7W.s:308    .text:00000000000001c4 .L0 
     /tmp/ccNn7P7W.s:309    .text:00000000000001c4 .L0 
     /tmp/ccNn7P7W.s:314    .text:00000000000001d0 .L0 
     /tmp/ccNn7P7W.s:315    .text:00000000000001d0 .L0 
     /tmp/ccNn7P7W.s:317    .text:00000000000001d4 .L0 
     /tmp/ccNn7P7W.s:322    .text:00000000000001dc .L0 
     /tmp/ccNn7P7W.s:323    .text:00000000000001dc .L0 
     /tmp/ccNn7P7W.s:325    .text:00000000000001e0 .L0 
     /tmp/ccNn7P7W.s:326    .text:00000000000001e0 .L0 
     /tmp/ccNn7P7W.s:332    .text:00000000000001e4 .L0 
     /tmp/ccNn7P7W.s:334    .text:00000000000001e8 .L0 
     /tmp/ccNn7P7W.s:335    .text:00000000000001e8 .L0 
     /tmp/ccNn7P7W.s:340    .text:00000000000001f4 .L0 
     /tmp/ccNn7P7W.s:341    .text:00000000000001f4 .L0 
     /tmp/ccNn7P7W.s:343    .text:00000000000001fc .L0 
     /tmp/ccNn7P7W.s:344    .text:00000000000001fc .L0 
     /tmp/ccNn7P7W.s:346    .text:0000000000000200 .L0 
     /tmp/ccNn7P7W.s:347    .text:0000000000000200 .L0 
     /tmp/ccNn7P7W.s:349    .text:0000000000000204 .L0 
     /tmp/ccNn7P7W.s:352    .text:0000000000000208 .L0 
     /tmp/ccNn7P7W.s:355    .text:000000000000020c .L0 
     /tmp/ccNn7P7W.s:358    .text:0000000000000210 .L0 
     /tmp/ccNn7P7W.s:361    .text:0000000000000214 .L0 
     /tmp/ccNn7P7W.s:365    .text:0000000000000218 .L0 
     /tmp/ccNn7P7W.s:370    .text:0000000000000218 .L0 
     /tmp/ccNn7P7W.s:375    .text:0000000000000220 .L0 
     /tmp/ccNn7P7W.s:381    .text:0000000000000228 .L0 
     /tmp/ccNn7P7W.s:387    .text:0000000000000228 _ZN3TCBdlEPv
     /tmp/ccNn7P7W.s:390    .text:0000000000000228 .L0 
     /tmp/ccNn7P7W.s:392    .text:0000000000000228 .L0 
     /tmp/ccNn7P7W.s:393    .text:000000000000022c .L0 
     /tmp/ccNn7P7W.s:396    .text:0000000000000234 .L0 
     /tmp/ccNn7P7W.s:397    .text:0000000000000234 .L0 
     /tmp/ccNn7P7W.s:399    .text:0000000000000238 .L0 
     /tmp/ccNn7P7W.s:401    .text:0000000000000238 .L0 
     /tmp/ccNn7P7W.s:402    .text:0000000000000238 .L0 
     /tmp/ccNn7P7W.s:405    .text:0000000000000240 .L0 
     /tmp/ccNn7P7W.s:406    .text:0000000000000244 .L0 
     /tmp/ccNn7P7W.s:408    .text:0000000000000248 .L0 
     /tmp/ccNn7P7W.s:409    .text:0000000000000248 .L0 
     /tmp/ccNn7P7W.s:411    .text:000000000000024c .L0 
     /tmp/ccNn7P7W.s:413    .text:0000000000000250 .L0 
     /tmp/ccNn7P7W.s:419    .text:0000000000000250 _ZN3TCB10threadJoinEPS_
     /tmp/ccNn7P7W.s:422    .text:0000000000000250 .L0 
     /tmp/ccNn7P7W.s:424    .text:0000000000000250 .L0 
     /tmp/ccNn7P7W.s:425    .text:0000000000000250 .L0 
     /tmp/ccNn7P7W.s:426    .text:0000000000000250 .L0 
     /tmp/ccNn7P7W.s:428    .text:0000000000000254 .L0 
     /tmp/ccNn7P7W.s:432    .text:000000000000025c .L0 
     /tmp/ccNn7P7W.s:433    .text:0000000000000260 .L0 
     /tmp/ccNn7P7W.s:436    .text:0000000000000268 .L0 
     /tmp/ccNn7P7W.s:437    .text:0000000000000268 .L0 
GAS LISTING /tmp/ccNn7P7W.s 			page 22


     /tmp/ccNn7P7W.s:439    .text:000000000000026c .L0 
     /tmp/ccNn7P7W.s:441    .text:000000000000026c .L0 
     /tmp/ccNn7P7W.s:442    .text:000000000000026c .L0 
     /tmp/ccNn7P7W.s:444    .text:0000000000000274 .L0 
     /tmp/ccNn7P7W.s:447    .text:000000000000027c .L0 
     /tmp/ccNn7P7W.s:448    .text:000000000000027c .L0 
     /tmp/ccNn7P7W.s:453    .text:0000000000000288 .L0 
     /tmp/ccNn7P7W.s:454    .text:000000000000028c .L0 
     /tmp/ccNn7P7W.s:456    .text:0000000000000290 .L0 
     /tmp/ccNn7P7W.s:457    .text:0000000000000290 .L0 
     /tmp/ccNn7P7W.s:459    .text:0000000000000294 .L0 
     /tmp/ccNn7P7W.s:461    .text:0000000000000298 .L0 
     /tmp/ccNn7P7W.s:467    .text:0000000000000298 _ZN3TCB13releaseJoinedEv
     /tmp/ccNn7P7W.s:470    .text:0000000000000298 .L0 
     /tmp/ccNn7P7W.s:471    .text:0000000000000298 .L0 
     /tmp/ccNn7P7W.s:472    .text:0000000000000298 .L0 
     /tmp/ccNn7P7W.s:473    .text:0000000000000298 .L0 
     /tmp/ccNn7P7W.s:474    .text:0000000000000298 .L0 
     /tmp/ccNn7P7W.s:479    .text:00000000000002a0 .L0 
     /tmp/ccNn7P7W.s:480    .text:00000000000002a0 .L0 
     /tmp/ccNn7P7W.s:485    .text:00000000000002a4 .L0 
     /tmp/ccNn7P7W.s:487    .text:00000000000002a8 .L0 
     /tmp/ccNn7P7W.s:488    .text:00000000000002ac .L0 
     /tmp/ccNn7P7W.s:491    .text:00000000000002b4 .L0 
     /tmp/ccNn7P7W.s:492    .text:00000000000002b4 .L0 
     /tmp/ccNn7P7W.s:494    .text:00000000000002b8 .L0 
     /tmp/ccNn7P7W.s:498    .text:00000000000002b8 .L0 
     /tmp/ccNn7P7W.s:499    .text:00000000000002b8 .L0 
     /tmp/ccNn7P7W.s:503    .text:00000000000002c4 .L0 
     /tmp/ccNn7P7W.s:504    .text:00000000000002c4 .L0 
     /tmp/ccNn7P7W.s:506    .text:00000000000002c8 .L0 
     /tmp/ccNn7P7W.s:507    .text:00000000000002c8 .L0 
     /tmp/ccNn7P7W.s:511    .text:00000000000002d0 .L0 
     /tmp/ccNn7P7W.s:512    .text:00000000000002d0 .L0 
     /tmp/ccNn7P7W.s:513    .text:00000000000002d0 .L0 
     /tmp/ccNn7P7W.s:518    .text:00000000000002d8 .L0 
     /tmp/ccNn7P7W.s:519    .text:00000000000002d8 .L0 
     /tmp/ccNn7P7W.s:524    .text:00000000000002dc .L0 
     /tmp/ccNn7P7W.s:526    .text:00000000000002e0 .L0 
     /tmp/ccNn7P7W.s:527    .text:00000000000002e4 .L0 
     /tmp/ccNn7P7W.s:529    .text:00000000000002e8 .L0 
     /tmp/ccNn7P7W.s:530    .text:00000000000002e8 .L0 
     /tmp/ccNn7P7W.s:532    .text:00000000000002ec .L0 
     /tmp/ccNn7P7W.s:536    .text:00000000000002f4 .L0 
     /tmp/ccNn7P7W.s:542    .text:00000000000002f4 _ZN3TCB5startEPS_
     /tmp/ccNn7P7W.s:545    .text:00000000000002f4 .L0 
     /tmp/ccNn7P7W.s:547    .text:00000000000002f4 .L0 
     /tmp/ccNn7P7W.s:548    .text:00000000000002f4 .L0 
     /tmp/ccNn7P7W.s:549    .text:00000000000002f4 .L0 
     /tmp/ccNn7P7W.s:551    .text:00000000000002f8 .L0 
     /tmp/ccNn7P7W.s:553    .text:00000000000002fc .L0 
     /tmp/ccNn7P7W.s:554    .text:0000000000000300 .L0 
     /tmp/ccNn7P7W.s:557    .text:0000000000000308 .L0 
     /tmp/ccNn7P7W.s:558    .text:0000000000000308 .L0 
     /tmp/ccNn7P7W.s:560    .text:000000000000030c .L0 
     /tmp/ccNn7P7W.s:562    .text:000000000000030c .L0 
     /tmp/ccNn7P7W.s:563    .text:000000000000030c .L0 
GAS LISTING /tmp/ccNn7P7W.s 			page 23


     /tmp/ccNn7P7W.s:566    .text:0000000000000314 .L0 
     /tmp/ccNn7P7W.s:567    .text:0000000000000318 .L0 
     /tmp/ccNn7P7W.s:569    .text:000000000000031c .L0 
     /tmp/ccNn7P7W.s:570    .text:000000000000031c .L0 
     /tmp/ccNn7P7W.s:572    .text:0000000000000320 .L0 
     /tmp/ccNn7P7W.s:577    .text:0000000000000328 .L0 
     /tmp/ccNn7P7W.s:591    .bss:0000000000000008 _ZN3TCB16runningTimeSliceE
     /tmp/ccNn7P7W.s:587    .bss:0000000000000000 _ZN3TCB7runningE
     /tmp/ccNn7P7W.s:584    .bss:0000000000000000 .LANCHOR0
     /tmp/ccNn7P7W.s:599    .text:0000000000000328 .L0 
     /tmp/ccNn7P7W.s:28     .text:0000000000000018 .L0 
     /tmp/ccNn7P7W.s:69     .text:0000000000000058 .L0 
     /tmp/ccNn7P7W.s:95     .text:000000000000008c .L0 
     /tmp/ccNn7P7W.s:310    .text:00000000000001c8 .L0 
     /tmp/ccNn7P7W.s:442    .text:000000000000026c .L0 
     /tmp/ccNn7P7W.s:474    .text:0000000000000298 .L0 
     /tmp/ccNn7P7W.s:513    .text:00000000000002d0 .L0 
     /tmp/ccNn7P7W.s:88     .text:0000000000000080 .L4
     /tmp/ccNn7P7W.s:144    .text:00000000000000d0 .L9
     /tmp/ccNn7P7W.s:152    .text:00000000000000e0 .L10
     /tmp/ccNn7P7W.s:129    .text:00000000000000bc .L3
     /tmp/ccNn7P7W.s:119    .text:00000000000000ac .L6
     /tmp/ccNn7P7W.s:364    .text:0000000000000218 .L19
     /tmp/ccNn7P7W.s:373    .text:0000000000000220 .L20
     /tmp/ccNn7P7W.s:339    .text:00000000000001f4 .L15
     /tmp/ccNn7P7W.s:311    .text:00000000000001d0 .L16
     /tmp/ccNn7P7W.s:320    .text:00000000000001dc .L17
     /tmp/ccNn7P7W.s:430    .text:000000000000025c .L30
     /tmp/ccNn7P7W.s:534    .text:00000000000002f0 .L39
     /tmp/ccNn7P7W.s:495    .text:00000000000002b8 .L35
     /tmp/ccNn7P7W.s:575    .text:0000000000000324 .L43
     /tmp/ccNn7P7W.s:2290   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccNn7P7W.s:4113   .debug_str:00000000000008ba .LASF177
     /tmp/ccNn7P7W.s:3891   .debug_str:000000000000023c .LASF178
     /tmp/ccNn7P7W.s:4071   .debug_str:000000000000074f .LASF179
     /tmp/ccNn7P7W.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccNn7P7W.s:594    .text:0000000000000328 .Letext0
     /tmp/ccNn7P7W.s:3817   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccNn7P7W.s:3939   .debug_str:00000000000003c7 .LASF0
     /tmp/ccNn7P7W.s:3967   .debug_str:0000000000000471 .LASF1
     /tmp/ccNn7P7W.s:4053   .debug_str:00000000000006d2 .LASF2
     /tmp/ccNn7P7W.s:4061   .debug_str:000000000000071a .LASF4
     /tmp/ccNn7P7W.s:3949   .debug_str:0000000000000401 .LASF3
     /tmp/ccNn7P7W.s:3825   .debug_str:0000000000000043 .LASF5
     /tmp/ccNn7P7W.s:4029   .debug_str:00000000000005f4 .LASF6
     /tmp/ccNn7P7W.s:4023   .debug_str:00000000000005d3 .LASF7
     /tmp/ccNn7P7W.s:3955   .debug_str:000000000000042f .LASF8
     /tmp/ccNn7P7W.s:3917   .debug_str:0000000000000317 .LASF9
     /tmp/ccNn7P7W.s:3923   .debug_str:000000000000034b .LASF10
     /tmp/ccNn7P7W.s:3855   .debug_str:0000000000000135 .LASF11
     /tmp/ccNn7P7W.s:3905   .debug_str:00000000000002cb .LASF12
     /tmp/ccNn7P7W.s:3867   .debug_str:000000000000018f .LASF13
     /tmp/ccNn7P7W.s:3853   .debug_str:0000000000000125 .LASF14
     /tmp/ccNn7P7W.s:4093   .debug_str:000000000000082c .LASF15
     /tmp/ccNn7P7W.s:4097   .debug_str:000000000000084c .LASF16
     /tmp/ccNn7P7W.s:4081   .debug_str:00000000000007b0 .LASF17
     /tmp/ccNn7P7W.s:4021   .debug_str:00000000000005c3 .LASF39
GAS LISTING /tmp/ccNn7P7W.s 			page 24


     /tmp/ccNn7P7W.s:4015   .debug_str:00000000000005a6 .LASF111
     /tmp/ccNn7P7W.s:4027   .debug_str:00000000000005ee .LASF18
     /tmp/ccNn7P7W.s:4171   .debug_str:0000000000000b24 .LASF19
     /tmp/ccNn7P7W.s:4045   .debug_str:00000000000006ab .LASF20
     /tmp/ccNn7P7W.s:4135   .debug_str:0000000000000a32 .LASF21
     /tmp/ccNn7P7W.s:3979   .debug_str:00000000000004ac .LASF22
     /tmp/ccNn7P7W.s:4031   .debug_str:00000000000005fb .LASF26
     /tmp/ccNn7P7W.s:3857   .debug_str:0000000000000144 .LASF23
     /tmp/ccNn7P7W.s:3837   .debug_str:00000000000000b1 .LASF24
     /tmp/ccNn7P7W.s:3965   .debug_str:000000000000046c .LASF25
     /tmp/ccNn7P7W.s:3887   .debug_str:0000000000000225 .LASF27
     /tmp/ccNn7P7W.s:4041   .debug_str:0000000000000682 .LASF28
     /tmp/ccNn7P7W.s:4163   .debug_str:0000000000000afa .LASF29
     /tmp/ccNn7P7W.s:4121   .debug_str:00000000000009a5 .LASF31
     /tmp/ccNn7P7W.s:3913   .debug_str:000000000000030b .LASF30
     /tmp/ccNn7P7W.s:4011   .debug_str:0000000000000583 .LASF32
     /tmp/ccNn7P7W.s:3839   .debug_str:00000000000000b6 .LASF33
     /tmp/ccNn7P7W.s:4037   .debug_str:0000000000000638 .LASF34
     /tmp/ccNn7P7W.s:3835   .debug_str:0000000000000098 .LASF43
     /tmp/ccNn7P7W.s:4047   .debug_str:00000000000006b2 .LASF35
     /tmp/ccNn7P7W.s:4141   .debug_str:0000000000000a52 .LASF36
     /tmp/ccNn7P7W.s:3937   .debug_str:00000000000003bb .LASF37
     /tmp/ccNn7P7W.s:3947   .debug_str:00000000000003f7 .LASF81
     /tmp/ccNn7P7W.s:4091   .debug_str:00000000000007f7 .LASF83
     /tmp/ccNn7P7W.s:3981   .debug_str:00000000000004b6 .LASF38
     /tmp/ccNn7P7W.s:4101   .debug_str:0000000000000877 .LASF88
     /tmp/ccNn7P7W.s:4115   .debug_str:000000000000097e .LASF40
     /tmp/ccNn7P7W.s:4159   .debug_str:0000000000000abe .LASF41
     /tmp/ccNn7P7W.s:4013   .debug_str:00000000000005a1 .LASF180
     /tmp/ccNn7P7W.s:4175   .debug_str:0000000000000b44 .LASF42
     /tmp/ccNn7P7W.s:3951   .debug_str:0000000000000413 .LASF44
     /tmp/ccNn7P7W.s:4103   .debug_str:000000000000087f .LASF47
     /tmp/ccNn7P7W.s:4137   .debug_str:0000000000000a37 .LASF49
     /tmp/ccNn7P7W.s:3843   .debug_str:00000000000000d4 .LASF45
     /tmp/ccNn7P7W.s:4131   .debug_str:0000000000000a10 .LASF46
     /tmp/ccNn7P7W.s:4055   .debug_str:00000000000006e0 .LASF48
     /tmp/ccNn7P7W.s:4095   .debug_str:0000000000000838 .LASF50
     /tmp/ccNn7P7W.s:4107   .debug_str:0000000000000897 .LASF51
     /tmp/ccNn7P7W.s:3901   .debug_str:000000000000029c .LASF52
     /tmp/ccNn7P7W.s:3973   .debug_str:0000000000000492 .LASF53
     /tmp/ccNn7P7W.s:4039   .debug_str:000000000000066a .LASF54
     /tmp/ccNn7P7W.s:3883   .debug_str:000000000000020f .LASF55
     /tmp/ccNn7P7W.s:4059   .debug_str:0000000000000702 .LASF56
     /tmp/ccNn7P7W.s:4133   .debug_str:0000000000000a27 .LASF57
     /tmp/ccNn7P7W.s:3907   .debug_str:00000000000002da .LASF58
     /tmp/ccNn7P7W.s:4149   .debug_str:0000000000000a75 .LASF59
     /tmp/ccNn7P7W.s:3903   .debug_str:00000000000002b2 .LASF61
     /tmp/ccNn7P7W.s:3971   .debug_str:000000000000048c .LASF60
     /tmp/ccNn7P7W.s:4117   .debug_str:000000000000098b .LASF62
     /tmp/ccNn7P7W.s:3885   .debug_str:000000000000021c .LASF63
     /tmp/ccNn7P7W.s:3863   .debug_str:0000000000000166 .LASF64
     /tmp/ccNn7P7W.s:3975   .debug_str:000000000000049f .LASF65
     /tmp/ccNn7P7W.s:3831   .debug_str:0000000000000071 .LASF66
     /tmp/ccNn7P7W.s:4109   .debug_str:00000000000008a2 .LASF67
     /tmp/ccNn7P7W.s:3849   .debug_str:0000000000000105 .LASF68
     /tmp/ccNn7P7W.s:4127   .debug_str:00000000000009f3 .LASF69
     /tmp/ccNn7P7W.s:3851   .debug_str:0000000000000116 .LASF70
GAS LISTING /tmp/ccNn7P7W.s 			page 25


     /tmp/ccNn7P7W.s:4181   .debug_str:0000000000000b6b .LASF71
     /tmp/ccNn7P7W.s:4139   .debug_str:0000000000000a4d .LASF72
     /tmp/ccNn7P7W.s:4119   .debug_str:000000000000099b .LASF73
     /tmp/ccNn7P7W.s:4079   .debug_str:00000000000007a7 .LASF74
     /tmp/ccNn7P7W.s:4007   .debug_str:0000000000000566 .LASF75
     /tmp/ccNn7P7W.s:3931   .debug_str:0000000000000386 .LASF76
     /tmp/ccNn7P7W.s:4111   .debug_str:00000000000008aa .LASF77
     /tmp/ccNn7P7W.s:4019   .debug_str:00000000000005b7 .LASF78
     /tmp/ccNn7P7W.s:3819   .debug_str:0000000000000000 .LASF79
     /tmp/ccNn7P7W.s:3821   .debug_str:000000000000000d .LASF80
     /tmp/ccNn7P7W.s:4173   .debug_str:0000000000000b2e .LASF157
     /tmp/ccNn7P7W.s:3873   .debug_str:00000000000001cc .LASF82
     /tmp/ccNn7P7W.s:3823   .debug_str:000000000000001b .LASF84
     /tmp/ccNn7P7W.s:4187   .debug_str:0000000000000baa .LASF85
     /tmp/ccNn7P7W.s:3921   .debug_str:000000000000033f .LASF86
     /tmp/ccNn7P7W.s:3941   .debug_str:00000000000003d4 .LASF93
     /tmp/ccNn7P7W.s:4005   .debug_str:0000000000000559 .LASF94
     /tmp/ccNn7P7W.s:4003   .debug_str:000000000000054d .LASF87
     /tmp/ccNn7P7W.s:3881   .debug_str:000000000000020a .LASF89
     /tmp/ccNn7P7W.s:3961   .debug_str:0000000000000462 .LASF90
     /tmp/ccNn7P7W.s:3893   .debug_str:0000000000000248 .LASF91
     /tmp/ccNn7P7W.s:3875   .debug_str:00000000000001da .LASF92
     /tmp/ccNn7P7W.s:4033   .debug_str:000000000000060a .LASF95
     /tmp/ccNn7P7W.s:3915   .debug_str:0000000000000311 .LASF96
     /tmp/ccNn7P7W.s:3963   .debug_str:0000000000000467 .LASF97
     /tmp/ccNn7P7W.s:3833   .debug_str:0000000000000083 .LASF98
     /tmp/ccNn7P7W.s:3919   .debug_str:0000000000000327 .LASF99
     /tmp/ccNn7P7W.s:3877   .debug_str:00000000000001f4 .LASF181
     /tmp/ccNn7P7W.s:4125   .debug_str:00000000000009db .LASF182
     /tmp/ccNn7P7W.s:4105   .debug_str:000000000000088a .LASF100
     /tmp/ccNn7P7W.s:4157   .debug_str:0000000000000aa9 .LASF101
     /tmp/ccNn7P7W.s:3889   .debug_str:0000000000000234 .LASF102
     /tmp/ccNn7P7W.s:3829   .debug_str:0000000000000055 .LASF103
     /tmp/ccNn7P7W.s:3969   .debug_str:0000000000000484 .LASF104
     /tmp/ccNn7P7W.s:3989   .debug_str:00000000000004f3 .LASF105
     /tmp/ccNn7P7W.s:3845   .debug_str:00000000000000e0 .LASF106
     /tmp/ccNn7P7W.s:3847   .debug_str:00000000000000e9 .LASF107
     /tmp/ccNn7P7W.s:3869   .debug_str:000000000000019f .LASF108
     /tmp/ccNn7P7W.s:4151   .debug_str:0000000000000a83 .LASF109
     /tmp/ccNn7P7W.s:4153   .debug_str:0000000000000a99 .LASF110
     /tmp/ccNn7P7W.s:3895   .debug_str:0000000000000266 .LASF112
     /tmp/ccNn7P7W.s:3897   .debug_str:0000000000000275 .LASF113
     /tmp/ccNn7P7W.s:3959   .debug_str:0000000000000455 .LASF114
     /tmp/ccNn7P7W.s:3879   .debug_str:00000000000001fe .LASF115
     /tmp/ccNn7P7W.s:3929   .debug_str:000000000000037b .LASF116
     /tmp/ccNn7P7W.s:4001   .debug_str:0000000000000535 .LASF117
     /tmp/ccNn7P7W.s:4069   .debug_str:0000000000000741 .LASF118
     /tmp/ccNn7P7W.s:4075   .debug_str:0000000000000777 .LASF119
     /tmp/ccNn7P7W.s:3943   .debug_str:00000000000003e4 .LASF120
     /tmp/ccNn7P7W.s:4161   .debug_str:0000000000000ae0 .LASF121
     /tmp/ccNn7P7W.s:4167   .debug_str:0000000000000b09 .LASF124
     /tmp/ccNn7P7W.s:4129   .debug_str:00000000000009fb .LASF126
     /tmp/ccNn7P7W.s:4049   .debug_str:00000000000006be .LASF122
     /tmp/ccNn7P7W.s:4009   .debug_str:000000000000056e .LASF123
     /tmp/ccNn7P7W.s:4143   .debug_str:0000000000000a5e .LASF125
     /tmp/ccNn7P7W.s:4035   .debug_str:0000000000000625 .LASF127
     /tmp/ccNn7P7W.s:3999   .debug_str:000000000000052e .LASF128
GAS LISTING /tmp/ccNn7P7W.s 			page 26


     /tmp/ccNn7P7W.s:3957   .debug_str:0000000000000442 .LASF129
     /tmp/ccNn7P7W.s:3991   .debug_str:0000000000000512 .LASF130
     /tmp/ccNn7P7W.s:4089   .debug_str:00000000000007e3 .LASF131
     /tmp/ccNn7P7W.s:3993   .debug_str:000000000000051a .LASF132
     /tmp/ccNn7P7W.s:3909   .debug_str:00000000000002f2 .LASF133
     /tmp/ccNn7P7W.s:4087   .debug_str:00000000000007dc .LASF134
     /tmp/ccNn7P7W.s:4065   .debug_str:0000000000000727 .LASF135
     /tmp/ccNn7P7W.s:4067   .debug_str:000000000000073a .LASF136
     /tmp/ccNn7P7W.s:3861   .debug_str:0000000000000153 .LASF137
     /tmp/ccNn7P7W.s:4063   .debug_str:0000000000000721 .LASF138
     /tmp/ccNn7P7W.s:3935   .debug_str:00000000000003a9 .LASF139
     /tmp/ccNn7P7W.s:3945   .debug_str:00000000000003f1 .LASF140
     /tmp/ccNn7P7W.s:3927   .debug_str:0000000000000369 .LASF141
     /tmp/ccNn7P7W.s:3827   .debug_str:000000000000004a .LASF142
     /tmp/ccNn7P7W.s:4057   .debug_str:00000000000006ea .LASF143
     /tmp/ccNn7P7W.s:4051   .debug_str:00000000000006c7 .LASF144
     /tmp/ccNn7P7W.s:4185   .debug_str:0000000000000b92 .LASF145
     /tmp/ccNn7P7W.s:4155   .debug_str:0000000000000a9f .LASF146
     /tmp/ccNn7P7W.s:3865   .debug_str:0000000000000179 .LASF147
     /tmp/ccNn7P7W.s:3859   .debug_str:0000000000000149 .LASF148
     /tmp/ccNn7P7W.s:3987   .debug_str:00000000000004dd .LASF149
     /tmp/ccNn7P7W.s:4123   .debug_str:00000000000009d0 .LASF150
     /tmp/ccNn7P7W.s:3871   .debug_str:00000000000001b4 .LASF151
     /tmp/ccNn7P7W.s:3953   .debug_str:0000000000000425 .LASF152
     /tmp/ccNn7P7W.s:4085   .debug_str:00000000000007d7 .LASF153
     /tmp/ccNn7P7W.s:3995   .debug_str:0000000000000522 .LASF154
     /tmp/ccNn7P7W.s:4179   .debug_str:0000000000000b5e .LASF155
     /tmp/ccNn7P7W.s:4169   .debug_str:0000000000000b12 .LASF156
     /tmp/ccNn7P7W.s:3933   .debug_str:0000000000000391 .LASF158
     /tmp/ccNn7P7W.s:4177   .debug_str:0000000000000b4a .LASF183
     /tmp/ccNn7P7W.s:3925   .debug_str:0000000000000359 .LASF159
     /tmp/ccNn7P7W.s:4043   .debug_str:000000000000068a .LASF160
     /tmp/ccNn7P7W.s:4147   .debug_str:0000000000000a6a .LASF161
     /tmp/ccNn7P7W.s:4183   .debug_str:0000000000000b71 .LASF162
     /tmp/ccNn7P7W.s:3977   .debug_str:00000000000004a7 .LASF163
     /tmp/ccNn7P7W.s:4099   .debug_str:0000000000000862 .LASF164
     /tmp/ccNn7P7W.s:3841   .debug_str:00000000000000c3 .LASF165
     /tmp/ccNn7P7W.s:3899   .debug_str:0000000000000281 .LASF166
     /tmp/ccNn7P7W.s:543    .text:00000000000002f4 .LFB53
     /tmp/ccNn7P7W.s:578    .text:0000000000000328 .LFE53
     /tmp/ccNn7P7W.s:3997   .debug_str:0000000000000527 .LASF167
     /tmp/ccNn7P7W.s:3502   .debug_loc:0000000000000000 .LLST18
     /tmp/ccNn7P7W.s:564    .text:0000000000000314 .LVL47
     /tmp/ccNn7P7W.s:468    .text:0000000000000298 .LFB52
     /tmp/ccNn7P7W.s:537    .text:00000000000002f4 .LFE52
     /tmp/ccNn7P7W.s:496    .text:00000000000002b8 .LBB36
     /tmp/ccNn7P7W.s:509    .text:00000000000002d0 .LBE36
     /tmp/ccNn7P7W.s:3520   .debug_loc:000000000000004c .LLST17
     /tmp/ccNn7P7W.s:501    .text:00000000000002c4 .LVL42
     /tmp/ccNn7P7W.s:508    .text:00000000000002d0 .LVL43
     /tmp/ccNn7P7W.s:476    .text:00000000000002a0 .LBB33
     /tmp/ccNn7P7W.s:3797   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccNn7P7W.s:3527   .debug_loc:000000000000006f .LLST16
     /tmp/ccNn7P7W.s:420    .text:0000000000000250 .LFB51
     /tmp/ccNn7P7W.s:462    .text:0000000000000298 .LFE51
     /tmp/ccNn7P7W.s:4165   .debug_str:0000000000000b02 .LASF168
     /tmp/ccNn7P7W.s:3542   .debug_loc:00000000000000ab .LLST15
GAS LISTING /tmp/ccNn7P7W.s 			page 27


     /tmp/ccNn7P7W.s:451    .text:0000000000000288 .LVL39
     /tmp/ccNn7P7W.s:388    .text:0000000000000228 .LFB50
     /tmp/ccNn7P7W.s:414    .text:0000000000000250 .LFE50
     /tmp/ccNn7P7W.s:3562   .debug_loc:00000000000000fa .LLST14
     /tmp/ccNn7P7W.s:403    .text:0000000000000240 .LVL36
     /tmp/ccNn7P7W.s:215    .text:0000000000000124 .LFB49
     /tmp/ccNn7P7W.s:244    .text:0000000000000154 .LFE49
     /tmp/ccNn7P7W.s:3576   .debug_loc:0000000000000133 .LLST2
     /tmp/ccNn7P7W.s:233    .text:0000000000000144 .LVL17
     /tmp/ccNn7P7W.s:10     .text:0000000000000000 .LFB48
     /tmp/ccNn7P7W.s:48     .text:0000000000000044 .LFE48
     /tmp/ccNn7P7W.s:25     .text:0000000000000018 .LVL0
     /tmp/ccNn7P7W.s:37     .text:0000000000000034 .LVL2
     /tmp/ccNn7P7W.s:176    .text:00000000000000ec .LFB47
     /tmp/ccNn7P7W.s:209    .text:0000000000000124 .LFE47
     /tmp/ccNn7P7W.s:190    .text:0000000000000104 .LVL12
     /tmp/ccNn7P7W.s:194    .text:000000000000010c .LVL13
     /tmp/ccNn7P7W.s:198    .text:0000000000000114 .LVL14
     /tmp/ccNn7P7W.s:54     .text:0000000000000044 .LFB46
     /tmp/ccNn7P7W.s:170    .text:00000000000000ec .LFE46
     /tmp/ccNn7P7W.s:3596   .debug_loc:0000000000000181 .LLST0
     /tmp/ccNn7P7W.s:107    .text:00000000000000a4 .LBB21
     /tmp/ccNn7P7W.s:121    .text:00000000000000ac .LBE21
     /tmp/ccNn7P7W.s:3607   .debug_loc:00000000000001b7 .LLST1
     /tmp/ccNn7P7W.s:155    .text:00000000000000e0 .LBB23
     /tmp/ccNn7P7W.s:168    .text:00000000000000ec .LBE23
     /tmp/ccNn7P7W.s:92     .text:0000000000000088 .LVL4
     /tmp/ccNn7P7W.s:128    .text:00000000000000bc .LVL7
     /tmp/ccNn7P7W.s:150    .text:00000000000000dc .LVL10
     /tmp/ccNn7P7W.s:250    .text:0000000000000154 .LFB45
     /tmp/ccNn7P7W.s:382    .text:0000000000000228 .LFE45
     /tmp/ccNn7P7W.s:4017   .debug_str:00000000000005ae .LASF169
     /tmp/ccNn7P7W.s:3616   .debug_loc:00000000000001dd .LLST3
     /tmp/ccNn7P7W.s:3638   .debug_loc:000000000000023c .LLST4
     /tmp/ccNn7P7W.s:3660   .debug_loc:000000000000029b .LLST5
     /tmp/ccNn7P7W.s:4073   .debug_str:000000000000076d .LASF170
     /tmp/ccNn7P7W.s:3692   .debug_loc:0000000000000322 .LLST6
     /tmp/ccNn7P7W.s:281    .text:0000000000000190 .LBB25
     /tmp/ccNn7P7W.s:3703   .debug_loc:0000000000000358 .LLST7
     /tmp/ccNn7P7W.s:3724   .debug_loc:00000000000003b6 .LLST8
     /tmp/ccNn7P7W.s:3735   .debug_loc:00000000000003ec .LLST9
     /tmp/ccNn7P7W.s:3746   .debug_loc:0000000000000422 .LLST10
     /tmp/ccNn7P7W.s:297    .text:00000000000001bc .LBB27
     /tmp/ccNn7P7W.s:305    .text:00000000000001c4 .LBE27
     /tmp/ccNn7P7W.s:3757   .debug_loc:0000000000000458 .LLST11
     /tmp/ccNn7P7W.s:3766   .debug_loc:000000000000047e .LLST12
     /tmp/ccNn7P7W.s:3777   .debug_loc:00000000000004b4 .LLST13
     /tmp/ccNn7P7W.s:278    .text:000000000000018c .LVL20
     /tmp/ccNn7P7W.s:337    .text:00000000000001f4 .LVL27
     /tmp/ccNn7P7W.s:4145   .debug_str:0000000000000a65 .LASF171
     /tmp/ccNn7P7W.s:3911   .debug_str:0000000000000306 .LASF174
     /tmp/ccNn7P7W.s:4025   .debug_str:00000000000005e6 .LASF172
     /tmp/ccNn7P7W.s:4189   .debug_str:0000000000000bb7 .LASF173
     /tmp/ccNn7P7W.s:3985   .debug_str:00000000000004c7 .LASF175
     /tmp/ccNn7P7W.s:4077   .debug_str:0000000000000792 .LASF176
     /tmp/ccNn7P7W.s:4083   .debug_str:00000000000007c6 .LASF184
     /tmp/ccNn7P7W.s:3983   .debug_str:00000000000004bb .LASF185
GAS LISTING /tmp/ccNn7P7W.s 			page 28


     /tmp/ccNn7P7W.s:546    .text:00000000000002f4 .LVL46
     /tmp/ccNn7P7W.s:574    .text:0000000000000324 .LVL48
     /tmp/ccNn7P7W.s:475    .text:00000000000002a0 .LVL40
     /tmp/ccNn7P7W.s:481    .text:00000000000002a4 .LVL41
     /tmp/ccNn7P7W.s:514    .text:00000000000002d8 .LVL44
     /tmp/ccNn7P7W.s:520    .text:00000000000002dc .LVL45
     /tmp/ccNn7P7W.s:423    .text:0000000000000250 .LVL37
     /tmp/ccNn7P7W.s:449    .text:0000000000000280 .LVL38
     /tmp/ccNn7P7W.s:391    .text:0000000000000228 .LVL35
     /tmp/ccNn7P7W.s:218    .text:0000000000000124 .LVL15
     /tmp/ccNn7P7W.s:231    .text:000000000000013c .LVL16
     /tmp/ccNn7P7W.s:70     .text:0000000000000060 .LVL3
     /tmp/ccNn7P7W.s:139    .text:00000000000000c8 .LVL8
     /tmp/ccNn7P7W.s:143    .text:00000000000000d0 .LVL9
     /tmp/ccNn7P7W.s:106    .text:00000000000000a4 .LVL5
     /tmp/ccNn7P7W.s:117    .text:00000000000000ac .LVL6
     /tmp/ccNn7P7W.s:253    .text:0000000000000154 .LVL18
     /tmp/ccNn7P7W.s:276    .text:0000000000000184 .LVL19
     /tmp/ccNn7P7W.s:356    .text:000000000000020c .LVL30
     /tmp/ccNn7P7W.s:363    .text:0000000000000218 .LVL32
     /tmp/ccNn7P7W.s:359    .text:0000000000000210 .LVL31
     /tmp/ccNn7P7W.s:319    .text:00000000000001dc .LVL25
     /tmp/ccNn7P7W.s:376    .text:0000000000000224 .LVL34
     /tmp/ccNn7P7W.s:327    .text:00000000000001e4 .LVL26
     /tmp/ccNn7P7W.s:350    .text:0000000000000204 .LVL28
     /tmp/ccNn7P7W.s:280    .text:0000000000000190 .LVL21
     /tmp/ccNn7P7W.s:296    .text:00000000000001bc .LVL22
     /tmp/ccNn7P7W.s:303    .text:00000000000001c4 .LVL23
     /tmp/ccNn7P7W.s:312    .text:00000000000001d0 .LVL24
     /tmp/ccNn7P7W.s:372    .text:0000000000000220 .LVL33
     /tmp/ccNn7P7W.s:353    .text:0000000000000208 .LVL29
     /tmp/ccNn7P7W.s:600    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccNn7P7W.s:330    .text:00000000000001e4 .LBE25
     /tmp/ccNn7P7W.s:366    .text:0000000000000218 .LBB32
     /tmp/ccNn7P7W.s:380    .text:0000000000000228 .LBE32
     /tmp/ccNn7P7W.s:306    .text:00000000000001c4 .LBB29
     /tmp/ccNn7P7W.s:328    .text:00000000000001e4 .LBE29
     /tmp/ccNn7P7W.s:368    .text:0000000000000218 .LBB30
     /tmp/ccNn7P7W.s:378    .text:0000000000000228 .LBE30
     /tmp/ccNn7P7W.s:483    .text:00000000000002a4 .LBE33
     /tmp/ccNn7P7W.s:515    .text:00000000000002d8 .LBB37
     /tmp/ccNn7P7W.s:522    .text:00000000000002dc .LBE37

UNDEFINED SYMBOLS
_ZN5Riscv10popSppSpieEv
_Z11thread_exitv
_ZN9Scheduler3getEv
_ZN3TCB13contextSwitchEPNS_7ContextES1_
_ZN9Scheduler3putEP3TCB
_ZN5Riscv13pushRegistersEv
_ZN5Riscv12popRegistersEv
_ZN15MemoryAllocator7kmallocEmNS_7PurposeE
_ZN15MemoryAllocator5kfreeEPv
_ZN11ThreadQueue7putLastEP3TCB
_ZN11ThreadQueue8getFirstEv
