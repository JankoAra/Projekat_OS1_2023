GAS LISTING /tmp/ccEEP0Eu.s 			page 1


   1              		.file	"TCB.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN3TCB7wrapperEv
   9              	_ZN3TCB7wrapperEv:
  10              	.LFB46:
  11              		.file 1 "src/TCB.cpp"
   1:src/TCB.cpp   **** //
   2:src/TCB.cpp   **** // Created by os on 5/23/23.
   3:src/TCB.cpp   **** //
   4:src/TCB.cpp   **** 
   5:src/TCB.cpp   **** #include "../h/TCB.hpp"
   6:src/TCB.cpp   **** #include "../h/Riscv.hpp"
   7:src/TCB.cpp   **** #include "../h/Scheduler.hpp"
   8:src/TCB.cpp   **** #include "../h/MemoryAllocator.hpp"
   9:src/TCB.cpp   **** #include "../h/syscall_c.hpp"
  10:src/TCB.cpp   **** 
  11:src/TCB.cpp   **** TCB* TCB::running = nullptr;
  12:src/TCB.cpp   **** uint64 TCB::runningTimeSlice = 0;
  13:src/TCB.cpp   **** 
  14:src/TCB.cpp   **** TCB* TCB::createThread(TCB::Body function, void* args, uint64* stack) {
  15:src/TCB.cpp   ****     //pravljenje niti
  16:src/TCB.cpp   ****     TCB* newThread = new TCB(function, args, stack);
  17:src/TCB.cpp   **** 
  18:src/TCB.cpp   ****     //startovanje niti(stavljanje u Scheduler); main nit je vec aktivna, ne stavlja se u Scheduler
  19:src/TCB.cpp   ****     //if (functionToRun != nullptr) Scheduler::put(newThread);
  20:src/TCB.cpp   ****     return newThread;
  21:src/TCB.cpp   **** }
  22:src/TCB.cpp   **** 
  23:src/TCB.cpp   **** void kernelConsumerFunction(void*);
  24:src/TCB.cpp   **** 
  25:src/TCB.cpp   **** void idle(void*);
  26:src/TCB.cpp   **** 
  27:src/TCB.cpp   **** void userMain();
  28:src/TCB.cpp   **** 
  29:src/TCB.cpp   **** void TCB::dispatch() {
  30:src/TCB.cpp   ****     TCB* old = TCB::running;
  31:src/TCB.cpp   ****     if (old->status == ACTIVE) {
  32:src/TCB.cpp   ****         Scheduler::put(old);
  33:src/TCB.cpp   ****     }
  34:src/TCB.cpp   ****     TCB::running = Scheduler::get();
  35:src/TCB.cpp   ****     TCB::runningTimeSlice = 0;
  36:src/TCB.cpp   **** 
  37:src/TCB.cpp   ****     //sada biramo u kom rezimu ce se izvrsavati nit, upisom bita SSTATUS_SPP
  38:src/TCB.cpp   ****     //ako treba da se izvrsava kernel nit, povratak je u sistemski rezim, inace u korisnicki
  39:src/TCB.cpp   ****     if (TCB::running->threadFunction == nullptr || TCB::running->threadFunction == kernelConsumerFu
  40:src/TCB.cpp   ****         TCB::running->threadFunction == idle) {
  41:src/TCB.cpp   ****         Riscv::ms_sstatus(Riscv::SSTATUS_SPP);
  42:src/TCB.cpp   ****     } else {
  43:src/TCB.cpp   ****         Riscv::mc_sstatus(Riscv::SSTATUS_SPP);
  44:src/TCB.cpp   ****     }
  45:src/TCB.cpp   **** 
  46:src/TCB.cpp   ****     if (old != TCB::running) TCB::contextSwitch(&old->context, &running->context);
  47:src/TCB.cpp   **** }
GAS LISTING /tmp/ccEEP0Eu.s 			page 2


  48:src/TCB.cpp   **** 
  49:src/TCB.cpp   **** void TCB::yield() {
  50:src/TCB.cpp   ****     Riscv::pushRegisters();
  51:src/TCB.cpp   ****     TCB::dispatch();
  52:src/TCB.cpp   ****     Riscv::popRegisters();
  53:src/TCB.cpp   **** }
  54:src/TCB.cpp   **** 
  55:src/TCB.cpp   **** void TCB::wrapper() {
  12              		.loc 1 55 21
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23341100 		sd	ra,8(sp)
  17 0008 23308100 		sd	s0,0(sp)
  18              		.cfi_offset 1, -8
  19              		.cfi_offset 8, -16
  20 000c 13040101 		addi	s0,sp,16
  21              		.cfi_def_cfa 8, 0
  56:src/TCB.cpp   ****     //pocetak wrappera se izvrsava u supervisor modu,
  57:src/TCB.cpp   ****     //jer nismo izasli iz prekidne rutine prilikom promene konteksta (dispatch/yield)
  58:src/TCB.cpp   ****     Riscv::popSppSpie();
  22              		.loc 1 58 5
  23              		.loc 1 58 22 is_stmt 0
  24 0010 97000000 		call	_ZN5Riscv10popSppSpieEv@plt
  24      E7800000 
  25              	.LVL0:
  59:src/TCB.cpp   ****     //na dalje se izvrsavamo u user modu
  60:src/TCB.cpp   ****     running->threadFunction(running->args);
  26              		.loc 1 60 5 is_stmt 1
  27              		.loc 1 60 14 is_stmt 0
  28 0018 97070000 		ld	a5,.LANCHOR0
  28      83B70700 
  29 0020 03B70701 		ld	a4,16(a5)
  30              		.loc 1 60 28
  31 0024 03B50702 		ld	a0,32(a5)
  32 0028 E7000700 		jalr	a4
  33              	.LVL1:
  61:src/TCB.cpp   ****     //running->finished = true;
  62:src/TCB.cpp   ****     //i dalje smo u user modu, moramo promenu niti vrsiti sistemskim pozivom
  63:src/TCB.cpp   ****     thread_exit();
  34              		.loc 1 63 5 is_stmt 1
  35              		.loc 1 63 16 is_stmt 0
  36 002c 97000000 		call	_Z11thread_exitv@plt
  36      E7800000 
  37              	.LVL2:
  64:src/TCB.cpp   **** }
  38              		.loc 1 64 1
  39 0034 83308100 		ld	ra,8(sp)
  40              		.cfi_restore 1
  41 0038 03340100 		ld	s0,0(sp)
  42              		.cfi_restore 8
  43              		.cfi_def_cfa 2, 16
  44 003c 13010101 		addi	sp,sp,16
  45              		.cfi_def_cfa_offset 0
  46 0040 67800000 		jr	ra
  47              		.cfi_endproc
  48              	.LFE46:
GAS LISTING /tmp/ccEEP0Eu.s 			page 3


  50              		.align	2
  51              		.globl	_ZN3TCB8dispatchEv
  53              	_ZN3TCB8dispatchEv:
  54              	.LFB44:
  29:src/TCB.cpp   ****     TCB* old = TCB::running;
  55              		.loc 1 29 22 is_stmt 1
  56              		.cfi_startproc
  57 0044 130101FE 		addi	sp,sp,-32
  58              		.cfi_def_cfa_offset 32
  59 0048 233C1100 		sd	ra,24(sp)
  60 004c 23388100 		sd	s0,16(sp)
  61 0050 23349100 		sd	s1,8(sp)
  62              		.cfi_offset 1, -8
  63              		.cfi_offset 8, -16
  64              		.cfi_offset 9, -24
  65 0054 13040102 		addi	s0,sp,32
  66              		.cfi_def_cfa 8, 0
  30:src/TCB.cpp   ****     if (old->status == ACTIVE) {
  67              		.loc 1 30 5
  30:src/TCB.cpp   ****     if (old->status == ACTIVE) {
  68              		.loc 1 30 10 is_stmt 0
  69 0058 97040000 		ld	s1,.LANCHOR0
  69      83B40400 
  70              	.LVL3:
  31:src/TCB.cpp   ****         Scheduler::put(old);
  71              		.loc 1 31 5 is_stmt 1
  31:src/TCB.cpp   ****         Scheduler::put(old);
  72              		.loc 1 31 14 is_stmt 0
  73 0060 03A78405 		lw	a4,88(s1)
  31:src/TCB.cpp   ****         Scheduler::put(old);
  74              		.loc 1 31 5
  75 0064 93071000 		li	a5,1
  76 0068 6306F704 		beq	a4,a5,.L10
  77              	.L4:
  34:src/TCB.cpp   ****     TCB::runningTimeSlice = 0;
  78              		.loc 1 34 5 is_stmt 1
  34:src/TCB.cpp   ****     TCB::runningTimeSlice = 0;
  79              		.loc 1 34 34 is_stmt 0
  80 006c 97000000 		call	_ZN9Scheduler3getEv@plt
  80      E7800000 
  81              	.LVL4:
  82 0074 93050500 		mv	a1,a0
  34:src/TCB.cpp   ****     TCB::runningTimeSlice = 0;
  83              		.loc 1 34 18
  84 0078 97070000 		lla	a5,.LANCHOR0
  84      93870700 
  85 0080 23B0A700 		sd	a0,0(a5)
  35:src/TCB.cpp   **** 
  86              		.loc 1 35 5 is_stmt 1
  35:src/TCB.cpp   **** 
  87              		.loc 1 35 27 is_stmt 0
  88 0084 23B40700 		sd	zero,8(a5)
  39:src/TCB.cpp   ****         TCB::running->threadFunction == idle) {
  89              		.loc 1 39 5 is_stmt 1
  39:src/TCB.cpp   ****         TCB::running->threadFunction == idle) {
  90              		.loc 1 39 23 is_stmt 0
  91 0088 83370501 		ld	a5,16(a0)
GAS LISTING /tmp/ccEEP0Eu.s 			page 4


  39:src/TCB.cpp   ****         TCB::running->threadFunction == idle) {
  92              		.loc 1 39 5
  93 008c 638C0702 		beqz	a5,.L5
  39:src/TCB.cpp   ****         TCB::running->threadFunction == idle) {
  94              		.loc 1 39 49 discriminator 1
  95 0090 17070000 		la	a4,_Z22kernelConsumerFunctionPv
  95      03370700 
  96 0098 6386E702 		beq	a5,a4,.L5
  39:src/TCB.cpp   ****         TCB::running->threadFunction == idle) {
  97              		.loc 1 39 107 discriminator 2
  98 009c 17070000 		la	a4,_Z4idlePv
  98      03370700 
  99 00a4 6380E702 		beq	a5,a4,.L5
  43:src/TCB.cpp   ****     }
 100              		.loc 1 43 9 is_stmt 1
 101              	.LVL5:
 102              	.LBB21:
 103              	.LBB22:
 104              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 5/17/23.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJEKAT2023_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJEKAT2023_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** class Riscv {
  11:src/../h/Riscv.hpp **** public:
  12:src/../h/Riscv.hpp **** 
  13:src/../h/Riscv.hpp **** 	static void popSppSpie();
  14:src/../h/Riscv.hpp **** 
  15:src/../h/Riscv.hpp **** 	//stavljanje registara x3-x31 na stek
  16:src/../h/Riscv.hpp **** 	static void pushRegisters();    //implementacija u asm
  17:src/../h/Riscv.hpp **** 
  18:src/../h/Riscv.hpp **** 	//skidanje registara x3-x31 sa steka
  19:src/../h/Riscv.hpp **** 	static void popRegisters();     //implementacija u asm
  20:src/../h/Riscv.hpp **** 
  21:src/../h/Riscv.hpp **** 	//read scause
  22:src/../h/Riscv.hpp **** 	static uint64 r_scause();
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp **** 	//write scause
  25:src/../h/Riscv.hpp **** 	static void w_scause(uint64 scause);
  26:src/../h/Riscv.hpp **** 
  27:src/../h/Riscv.hpp **** 	//read sepc
  28:src/../h/Riscv.hpp **** 	static uint64 r_sepc();
  29:src/../h/Riscv.hpp **** 
  30:src/../h/Riscv.hpp **** 	//write sepc
  31:src/../h/Riscv.hpp **** 	static void w_sepc(uint64 sepc);
  32:src/../h/Riscv.hpp **** 
  33:src/../h/Riscv.hpp **** 	//read stvec
  34:src/../h/Riscv.hpp **** 	static uint64 r_stvec();
  35:src/../h/Riscv.hpp **** 
  36:src/../h/Riscv.hpp **** 	//write stvec
  37:src/../h/Riscv.hpp **** 	static void w_stvec(uint64 stvec);
  38:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/ccEEP0Eu.s 			page 5


  39:src/../h/Riscv.hpp **** 	enum BitMaskSip {
  40:src/../h/Riscv.hpp **** 		//postoji zahtev za softverski prekid
  41:src/../h/Riscv.hpp **** 		SIP_SSIP = (1 << 1),
  42:src/../h/Riscv.hpp **** 		//postoji prekid od tajmera
  43:src/../h/Riscv.hpp **** 		SIP_STIP = (1 << 5),
  44:src/../h/Riscv.hpp **** 		//postoji zahtev za spoljasnji hardverski prekid
  45:src/../h/Riscv.hpp **** 		SIP_SEIP = (1 << 9)
  46:src/../h/Riscv.hpp **** 	};
  47:src/../h/Riscv.hpp **** 
  48:src/../h/Riscv.hpp **** 	//mask set sip
  49:src/../h/Riscv.hpp **** 	static void ms_sip(uint64 mask);
  50:src/../h/Riscv.hpp **** 
  51:src/../h/Riscv.hpp **** 	//mask clear sip
  52:src/../h/Riscv.hpp **** 	static void mc_sip(uint64 mask);
  53:src/../h/Riscv.hpp **** 
  54:src/../h/Riscv.hpp **** 	//read sip
  55:src/../h/Riscv.hpp **** 	static uint64 r_sip();
  56:src/../h/Riscv.hpp **** 
  57:src/../h/Riscv.hpp **** 	//write sip
  58:src/../h/Riscv.hpp **** 	static void w_sip(uint64 sip);
  59:src/../h/Riscv.hpp **** 
  60:src/../h/Riscv.hpp **** 	//kada se pozove sret, SIE dobija vrednost SPIE, SPIE se postavlja na 1,
  61:src/../h/Riscv.hpp **** 	//rezim se postavlja na osnovu SPP bita, SPP se postavlja na 0
  62:src/../h/Riscv.hpp **** 	enum BitMaskSstatus {
  63:src/../h/Riscv.hpp **** 		//1 - dozvoljeni prekidi; 0- nedozvoljeni prekidi; igonrise se u korisnickom rezimu
  64:src/../h/Riscv.hpp **** 		SSTATUS_SIE = (1 << 1),
  65:src/../h/Riscv.hpp **** 		//prethodna vrednost bita SIE
  66:src/../h/Riscv.hpp **** 		SSTATUS_SPIE = (1 << 5),
  67:src/../h/Riscv.hpp **** 		//iz kog rezima se desio skok; 0 - iz korisnickog; 1 - iz sistemskog
  68:src/../h/Riscv.hpp **** 		SSTATUS_SPP = (1 << 8)
  69:src/../h/Riscv.hpp **** 	};
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp **** 	//mask set sstatus
  72:src/../h/Riscv.hpp **** 	static void ms_sstatus(uint64 mask);
  73:src/../h/Riscv.hpp **** 
  74:src/../h/Riscv.hpp **** 	//mask clear sstatus
  75:src/../h/Riscv.hpp **** 	static void mc_sstatus(uint64 mask);
  76:src/../h/Riscv.hpp **** 
  77:src/../h/Riscv.hpp **** 	//read sstatus
  78:src/../h/Riscv.hpp **** 	static uint64 r_sstatus();
  79:src/../h/Riscv.hpp **** 
  80:src/../h/Riscv.hpp **** 	//write sstatus
  81:src/../h/Riscv.hpp **** 	static void w_sstatus(uint64 sstatus);
  82:src/../h/Riscv.hpp **** 
  83:src/../h/Riscv.hpp **** 	//upisuje kod sistemskog poziva u registar a0
  84:src/../h/Riscv.hpp **** 	static void loadOpCode(uint64 opCode);
  85:src/../h/Riscv.hpp **** 
  86:src/../h/Riscv.hpp **** };
  87:src/../h/Riscv.hpp **** 
  88:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause() {
  89:src/../h/Riscv.hpp **** 	uint64 volatile scause;
  90:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[scause], scause": [scause] "=r"(scause));
  91:src/../h/Riscv.hpp **** 	return scause;
  92:src/../h/Riscv.hpp **** }
  93:src/../h/Riscv.hpp **** 
  94:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
  95:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw scause, %[scause]": :[scause] "r"(scause));
GAS LISTING /tmp/ccEEP0Eu.s 			page 6


  96:src/../h/Riscv.hpp **** }
  97:src/../h/Riscv.hpp **** 
  98:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc() {
  99:src/../h/Riscv.hpp **** 	uint64 volatile sepc;
 100:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[sepc], sepc": [sepc] "=r"(sepc));
 101:src/../h/Riscv.hpp **** 	return sepc;
 102:src/../h/Riscv.hpp **** }
 103:src/../h/Riscv.hpp **** 
 104:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
 105:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 106:src/../h/Riscv.hpp **** }
 107:src/../h/Riscv.hpp **** 
 108:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec() {
 109:src/../h/Riscv.hpp **** 	uint64 volatile stvec;
 110:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[stvec], stvec": [stvec] "=r"(stvec));
 111:src/../h/Riscv.hpp **** 	return stvec;
 112:src/../h/Riscv.hpp **** }
 113:src/../h/Riscv.hpp **** 
 114:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 115:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw stvec, %[stvec]": :[stvec] "r"(stvec));
 116:src/../h/Riscv.hpp **** }
 117:src/../h/Riscv.hpp **** 
 118:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 119:src/../h/Riscv.hpp **** 	__asm__ volatile("csrs sip, %[mask]": :[mask] "r"(mask));
 120:src/../h/Riscv.hpp **** }
 121:src/../h/Riscv.hpp **** 
 122:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 123:src/../h/Riscv.hpp **** 	__asm__ volatile("csrc sip, %[mask]": :[mask] "r"(mask));
 124:src/../h/Riscv.hpp **** }
 125:src/../h/Riscv.hpp **** 
 126:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip() {
 127:src/../h/Riscv.hpp **** 	uint64 volatile sip;
 128:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[sip], sip": [sip] "=r"(sip));
 129:src/../h/Riscv.hpp **** 	return sip;
 130:src/../h/Riscv.hpp **** }
 131:src/../h/Riscv.hpp **** 
 132:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip) {
 133:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw sip, %[sip]": :[sip] "r"(sip));
 134:src/../h/Riscv.hpp **** }
 135:src/../h/Riscv.hpp **** 
 136:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
 137:src/../h/Riscv.hpp **** 	__asm__ volatile("csrs sstatus, %[mask]": :[mask] "r"(mask));
 138:src/../h/Riscv.hpp **** }
 139:src/../h/Riscv.hpp **** 
 140:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask) {
 141:src/../h/Riscv.hpp **** 	__asm__ volatile("csrc sstatus, %[mask]": :[mask] "r"(mask));
 105              		.loc 2 141 2
 106              		.loc 2 141 62 is_stmt 0
 107 00a8 93070010 		li	a5,256
 108              	#APP
 109              	# 141 "src/../h/Riscv.hpp" 1
 142              	}
 110              		csrc sstatus, a5
 111              	# 0 "" 2
 112              		.loc 2 142 1
 113              	#NO_APP
 114 00b0 6F00C001 		j	.L7
GAS LISTING /tmp/ccEEP0Eu.s 			page 7


 115              	.LVL6:
 116              	.L10:
 117              	.LBE22:
 118              	.LBE21:
  32:src/TCB.cpp   ****     }
 119              		.loc 1 32 9 is_stmt 1
  32:src/TCB.cpp   ****     }
 120              		.loc 1 32 23 is_stmt 0
 121 00b4 13850400 		mv	a0,s1
 122 00b8 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 122      E7800000 
 123              	.LVL7:
 124 00c0 6FF0DFFA 		j	.L4
 125              	.L5:
  41:src/TCB.cpp   ****     } else {
 126              		.loc 1 41 9 is_stmt 1
 127              	.LVL8:
 128              	.LBB23:
 129              	.LBB24:
 137:src/../h/Riscv.hpp **** }
 130              		.loc 2 137 2
 137:src/../h/Riscv.hpp **** }
 131              		.loc 2 137 62 is_stmt 0
 132 00c4 93070010 		li	a5,256
 133              	#APP
 134              	# 137 "src/../h/Riscv.hpp" 1
 135              		csrs sstatus, a5
 136              	# 0 "" 2
 137              	.LVL9:
 138              	#NO_APP
 139              	.L7:
 140              	.LBE24:
 141              	.LBE23:
  46:src/TCB.cpp   **** }
 142              		.loc 1 46 5 is_stmt 1
 143 00cc 6388B400 		beq	s1,a1,.L3
  46:src/TCB.cpp   **** }
 144              		.loc 1 46 30 discriminator 1
  46:src/TCB.cpp   **** }
 145              		.loc 1 46 48 is_stmt 0 discriminator 1
 146 00d0 13850400 		mv	a0,s1
 147 00d4 97000000 		call	_ZN3TCB13contextSwitchEPNS_7ContextES1_@plt
 147      E7800000 
 148              	.LVL10:
 149              	.L3:
  47:src/TCB.cpp   **** 
 150              		.loc 1 47 1
 151 00dc 83308101 		ld	ra,24(sp)
 152              		.cfi_restore 1
 153 00e0 03340101 		ld	s0,16(sp)
 154              		.cfi_restore 8
 155              		.cfi_def_cfa 2, 32
 156 00e4 83348100 		ld	s1,8(sp)
 157              		.cfi_restore 9
 158              	.LVL11:
 159 00e8 13010102 		addi	sp,sp,32
 160              		.cfi_def_cfa_offset 0
GAS LISTING /tmp/ccEEP0Eu.s 			page 8


 161 00ec 67800000 		jr	ra
 162              		.cfi_endproc
 163              	.LFE44:
 165              		.align	2
 166              		.globl	_ZN3TCB5yieldEv
 168              	_ZN3TCB5yieldEv:
 169              	.LFB45:
  49:src/TCB.cpp   ****     Riscv::pushRegisters();
 170              		.loc 1 49 19 is_stmt 1
 171              		.cfi_startproc
 172 00f0 130101FF 		addi	sp,sp,-16
 173              		.cfi_def_cfa_offset 16
 174 00f4 23341100 		sd	ra,8(sp)
 175 00f8 23308100 		sd	s0,0(sp)
 176              		.cfi_offset 1, -8
 177              		.cfi_offset 8, -16
 178 00fc 13040101 		addi	s0,sp,16
 179              		.cfi_def_cfa 8, 0
  50:src/TCB.cpp   ****     TCB::dispatch();
 180              		.loc 1 50 5
  50:src/TCB.cpp   ****     TCB::dispatch();
 181              		.loc 1 50 25 is_stmt 0
 182 0100 97000000 		call	_ZN5Riscv13pushRegistersEv@plt
 182      E7800000 
 183              	.LVL12:
  51:src/TCB.cpp   ****     Riscv::popRegisters();
 184              		.loc 1 51 5 is_stmt 1
  51:src/TCB.cpp   ****     Riscv::popRegisters();
 185              		.loc 1 51 18 is_stmt 0
 186 0108 97000000 		call	_ZN3TCB8dispatchEv
 186      E7800000 
 187              	.LVL13:
  52:src/TCB.cpp   **** }
 188              		.loc 1 52 5 is_stmt 1
  52:src/TCB.cpp   **** }
 189              		.loc 1 52 24 is_stmt 0
 190 0110 97000000 		call	_ZN5Riscv12popRegistersEv@plt
 190      E7800000 
 191              	.LVL14:
  53:src/TCB.cpp   **** 
 192              		.loc 1 53 1
 193 0118 83308100 		ld	ra,8(sp)
 194              		.cfi_restore 1
 195 011c 03340100 		ld	s0,0(sp)
 196              		.cfi_restore 8
 197              		.cfi_def_cfa 2, 16
 198 0120 13010101 		addi	sp,sp,16
 199              		.cfi_def_cfa_offset 0
 200 0124 67800000 		jr	ra
 201              		.cfi_endproc
 202              	.LFE45:
 204              		.align	2
 205              		.globl	_ZN3TCBnwEm
 207              	_ZN3TCBnwEm:
 208              	.LFB47:
  65:src/TCB.cpp   **** 
  66:src/TCB.cpp   **** void* TCB::operator new(size_t size) {
GAS LISTING /tmp/ccEEP0Eu.s 			page 9


 209              		.loc 1 66 38 is_stmt 1
 210              		.cfi_startproc
 211              	.LVL15:
 212 0128 130101FF 		addi	sp,sp,-16
 213              		.cfi_def_cfa_offset 16
 214 012c 23341100 		sd	ra,8(sp)
 215 0130 23308100 		sd	s0,0(sp)
 216              		.cfi_offset 1, -8
 217              		.cfi_offset 8, -16
 218 0134 13040101 		addi	s0,sp,16
 219              		.cfi_def_cfa 8, 0
  67:src/TCB.cpp   ****     return mem_alloc(size);
 220              		.loc 1 67 5
 221              		.loc 1 67 21 is_stmt 0
 222 0138 97000000 		call	_Z9mem_allocm@plt
 222      E7800000 
 223              	.LVL16:
  68:src/TCB.cpp   ****     //return MemoryAllocator::kmalloc(size + sizeof(MemoryAllocator::UsedMemSegment), MemoryAllocat
  69:src/TCB.cpp   **** }
 224              		.loc 1 69 1
 225 0140 83308100 		ld	ra,8(sp)
 226              		.cfi_restore 1
 227 0144 03340100 		ld	s0,0(sp)
 228              		.cfi_restore 8
 229              		.cfi_def_cfa 2, 16
 230 0148 13010101 		addi	sp,sp,16
 231              		.cfi_def_cfa_offset 0
 232 014c 67800000 		jr	ra
 233              		.cfi_endproc
 234              	.LFE47:
 236              		.align	2
 237              		.globl	_ZN3TCB12createThreadEPFvPvES0_Pm
 239              	_ZN3TCB12createThreadEPFvPvES0_Pm:
 240              	.LFB43:
  14:src/TCB.cpp   ****     //pravljenje niti
 241              		.loc 1 14 71 is_stmt 1
 242              		.cfi_startproc
 243              	.LVL17:
 244 0150 130101FD 		addi	sp,sp,-48
 245              		.cfi_def_cfa_offset 48
 246 0154 23341102 		sd	ra,40(sp)
 247 0158 23308102 		sd	s0,32(sp)
 248 015c 233C9100 		sd	s1,24(sp)
 249 0160 23382101 		sd	s2,16(sp)
 250 0164 23343101 		sd	s3,8(sp)
 251              		.cfi_offset 1, -8
 252              		.cfi_offset 8, -16
 253              		.cfi_offset 9, -24
 254              		.cfi_offset 18, -32
 255              		.cfi_offset 19, -40
 256 0168 13040103 		addi	s0,sp,48
 257              		.cfi_def_cfa 8, 0
 258 016c 13090500 		mv	s2,a0
 259 0170 93890500 		mv	s3,a1
 260 0174 93040600 		mv	s1,a2
  16:src/TCB.cpp   **** 
 261              		.loc 1 16 5
GAS LISTING /tmp/ccEEP0Eu.s 			page 10


  16:src/TCB.cpp   **** 
 262              		.loc 1 16 51 is_stmt 0
 263 0178 13050006 		li	a0,96
 264              	.LVL18:
 265 017c 97000000 		call	_ZN3TCBnwEm
 265      E7800000 
 266              	.LVL19:
 267              	.LBB25:
 268              	.LBB26:
 269              		.file 3 "src/../h/TCB.hpp"
   1:src/../h/TCB.hpp **** //
   2:src/../h/TCB.hpp **** // Created by os on 5/23/23.
   3:src/../h/TCB.hpp **** //
   4:src/../h/TCB.hpp **** 
   5:src/../h/TCB.hpp **** #ifndef PROJEKAT2023_TCB_HPP
   6:src/../h/TCB.hpp **** #define PROJEKAT2023_TCB_HPP
   7:src/../h/TCB.hpp **** 
   8:src/../h/TCB.hpp **** #include "../lib/hw.h"
   9:src/../h/TCB.hpp **** #include "../h/ThreadQueue.hpp"
  10:src/../h/TCB.hpp **** 
  11:src/../h/TCB.hpp **** class TCB {
  12:src/../h/TCB.hpp **** public:
  13:src/../h/TCB.hpp ****     friend class Scheduler;
  14:src/../h/TCB.hpp **** 
  15:src/../h/TCB.hpp ****     using Body = void (*)(void*);
  16:src/../h/TCB.hpp **** 
  17:src/../h/TCB.hpp ****     enum ThreadStatus {
  18:src/../h/TCB.hpp ****         CREATED, ACTIVE, BLOCKED, JOINING, SLEEPING, FINISHED
  19:src/../h/TCB.hpp ****     };
  20:src/../h/TCB.hpp **** 
  21:src/../h/TCB.hpp ****     void setStatus(ThreadStatus stat) { this->status = stat; }
  22:src/../h/TCB.hpp **** 
  23:src/../h/TCB.hpp ****     ThreadStatus getStatus() { return this->status; }
  24:src/../h/TCB.hpp **** 
  25:src/../h/TCB.hpp ****     static TCB* createThread(Body function, void* args, uint64* stack);
  26:src/../h/TCB.hpp **** 
  27:src/../h/TCB.hpp ****     static void start(TCB* newTcb);
  28:src/../h/TCB.hpp **** 
  29:src/../h/TCB.hpp **** //    bool isFinished() { return finished; }
  30:src/../h/TCB.hpp **** //
  31:src/../h/TCB.hpp **** //    void setFinished(bool finish) { this->finished = finish; }
  32:src/../h/TCB.hpp **** //
  33:src/../h/TCB.hpp **** //    bool isBlocked() { return blocked; }
  34:src/../h/TCB.hpp **** //
  35:src/../h/TCB.hpp **** //    void setBlocked(bool block) { this->blocked = block; }
  36:src/../h/TCB.hpp **** 
  37:src/../h/TCB.hpp ****     uint64 getTimeSlice() { return timeSlice; }
  38:src/../h/TCB.hpp **** 
  39:src/../h/TCB.hpp ****     void setTimeSlice(uint64 value) { timeSlice = value; }
  40:src/../h/TCB.hpp **** 
  41:src/../h/TCB.hpp ****     //static void threadSleep(time_t sleepTime);
  42:src/../h/TCB.hpp **** 
  43:src/../h/TCB.hpp ****     static void threadJoin(TCB* handle);
  44:src/../h/TCB.hpp **** 
  45:src/../h/TCB.hpp ****     static void releaseJoined();
  46:src/../h/TCB.hpp **** 
  47:src/../h/TCB.hpp ****     static void yield();
GAS LISTING /tmp/ccEEP0Eu.s 			page 11


  48:src/../h/TCB.hpp **** 
  49:src/../h/TCB.hpp ****     static void dispatch();
  50:src/../h/TCB.hpp **** 
  51:src/../h/TCB.hpp ****     static void wrapper();
  52:src/../h/TCB.hpp **** 
  53:src/../h/TCB.hpp ****     static TCB* running;
  54:src/../h/TCB.hpp ****     static uint64 runningTimeSlice;
  55:src/../h/TCB.hpp **** 
  56:src/../h/TCB.hpp ****     static void* operator new(size_t size);
  57:src/../h/TCB.hpp **** 
  58:src/../h/TCB.hpp ****     static void operator delete(void* ptr);
  59:src/../h/TCB.hpp **** 
  60:src/../h/TCB.hpp **** private:
  61:src/../h/TCB.hpp ****     //kontekst procesora za datu nit
  62:src/../h/TCB.hpp ****     struct Context {
  63:src/../h/TCB.hpp ****         uint64 ra;
  64:src/../h/TCB.hpp ****         uint64 sp;
  65:src/../h/TCB.hpp ****     } context;
  66:src/../h/TCB.hpp ****     Body threadFunction;    //funkcija koja se izvrsava
  67:src/../h/TCB.hpp ****     uint64* stack;            //najniza adresa steka; stek raste ka nizim adresama, pokazuje na pos
  68:src/../h/TCB.hpp ****     void* args;                //argumenti poziva funkcije
  69:src/../h/TCB.hpp ****     uint64 timeSlice;        //vremenski odsecak dodeljen datoj niti
  70:src/../h/TCB.hpp ****    // bool finished;            //da li je nit zavrsila izvrsavanje funkcije
  71:src/../h/TCB.hpp ****     //bool blocked;            //da li je nit blokirana
  72:src/../h/TCB.hpp ****    // bool needToJoin;        //da li je nit pozvala join i ceka da se neka druga zavrsi
  73:src/../h/TCB.hpp ****     TCB* nextInScheduler;    // pokazivac na sledecu nit u Scheduler-u
  74:src/../h/TCB.hpp ****     time_t timeToSleep;        //vreme na koje je uspavana nit
  75:src/../h/TCB.hpp ****     TCB* nextSleeping;        //sledeca nit u listi za spavanje u Scheduler-u
  76:src/../h/TCB.hpp ****     ThreadQueue waitingToJoin;    //red niti koje su pozvale join nad ovom niti
  77:src/../h/TCB.hpp ****     ThreadStatus status;    //status niti
  78:src/../h/TCB.hpp **** 
  79:src/../h/TCB.hpp **** 
  80:src/../h/TCB.hpp ****     TCB(Body function, void* args, uint64* stack) : threadFunction(function), stack(stack), args(ar
  81:src/../h/TCB.hpp ****                                                     timeSlice(DEFAULT_TIME_SLICE), nextInScheduler(
  82:src/../h/TCB.hpp ****                                                     nextSleeping(nullptr), status(CREATED) {
 270              		.loc 3 82 90
 271 0184 23382501 		sd	s2,16(a0)
 272 0188 233C9500 		sd	s1,24(a0)
 273 018c 23303503 		sd	s3,32(a0)
 274 0190 93072000 		li	a5,2
 275 0194 2334F502 		sd	a5,40(a0)
 276 0198 23380502 		sd	zero,48(a0)
 277 019c 233C0502 		sd	zero,56(a0)
 278 01a0 23300504 		sd	zero,64(a0)
 279              	.LVL20:
 280              	.LBB27:
 281              	.LBB28:
 282              		.file 4 "src/../h/../h/ThreadQueue.hpp"
   1:src/../h/../h/ThreadQueue.hpp **** //
   2:src/../h/../h/ThreadQueue.hpp **** // Created by os on 6/4/23.
   3:src/../h/../h/ThreadQueue.hpp **** //
   4:src/../h/../h/ThreadQueue.hpp **** 
   5:src/../h/../h/ThreadQueue.hpp **** #ifndef PROJEKAT2023_THREADQUEUE_HPP
   6:src/../h/../h/ThreadQueue.hpp **** #define PROJEKAT2023_THREADQUEUE_HPP
   7:src/../h/../h/ThreadQueue.hpp **** 
   8:src/../h/../h/ThreadQueue.hpp **** #include "../h/MemoryAllocator.hpp"
   9:src/../h/../h/ThreadQueue.hpp **** #include "../h/syscall_c.hpp"
GAS LISTING /tmp/ccEEP0Eu.s 			page 12


  10:src/../h/../h/ThreadQueue.hpp **** 
  11:src/../h/../h/ThreadQueue.hpp **** class TCB;
  12:src/../h/../h/ThreadQueue.hpp **** 
  13:src/../h/../h/ThreadQueue.hpp **** class ThreadQueue {
  14:src/../h/../h/ThreadQueue.hpp **** private:
  15:src/../h/../h/ThreadQueue.hpp ****     struct Node {
  16:src/../h/../h/ThreadQueue.hpp ****         TCB *data;
  17:src/../h/../h/ThreadQueue.hpp ****         Node *next;
  18:src/../h/../h/ThreadQueue.hpp **** 
  19:src/../h/../h/ThreadQueue.hpp ****         Node(TCB *d) : data(d), next(nullptr) {}
  20:src/../h/../h/ThreadQueue.hpp **** 
  21:src/../h/../h/ThreadQueue.hpp ****         static void *operator new(size_t size) {
  22:src/../h/../h/ThreadQueue.hpp ****             return mem_alloc(size);
  23:src/../h/../h/ThreadQueue.hpp ****         }
  24:src/../h/../h/ThreadQueue.hpp **** 
  25:src/../h/../h/ThreadQueue.hpp ****         static void operator delete(void *ptr) {
  26:src/../h/../h/ThreadQueue.hpp ****             mem_free(ptr);
  27:src/../h/../h/ThreadQueue.hpp ****         }
  28:src/../h/../h/ThreadQueue.hpp ****     };
  29:src/../h/../h/ThreadQueue.hpp **** 
  30:src/../h/../h/ThreadQueue.hpp ****     Node *front;
  31:src/../h/../h/ThreadQueue.hpp ****     Node *back;
  32:src/../h/../h/ThreadQueue.hpp **** 
  33:src/../h/../h/ThreadQueue.hpp **** public:
  34:src/../h/../h/ThreadQueue.hpp ****     ThreadQueue() : front(nullptr), back(nullptr) {}
 283              		.loc 4 34 49
 284 01a4 23340504 		sd	zero,72(a0)
 285 01a8 23380504 		sd	zero,80(a0)
 286              	.LVL21:
 287              	.LBE28:
 288              	.LBE27:
 289              		.loc 3 82 90
 290 01ac 232C0504 		sw	zero,88(a0)
 291              	.LBB29:
  83:src/../h/TCB.hpp ****         //formiranje pocetnog konteksta; specijalni uslovi za main funkciju kojoj se pocetni kontek
  84:src/../h/TCB.hpp ****         uint64 startRa = threadFunction != nullptr ? (uint64)&wrapper : 0;
 292              		.loc 3 84 9 is_stmt 1
 293              		.loc 3 84 52 is_stmt 0
 294 01b0 630E0902 		beqz	s2,.L18
 295 01b4 97070000 		lla	a5,_ZN3TCB7wrapperEv
 295      93870700 
 296              	.L16:
 297              	.LVL22:
  85:src/../h/TCB.hpp ****         uint64 startSp = stack != nullptr ? (uint64)&stack[DEFAULT_STACK_SIZE] : 0;
 298              		.loc 3 85 9 is_stmt 1
 299              		.loc 3 85 43 is_stmt 0
 300 01bc 638C0402 		beqz	s1,.L19
 301              		.loc 3 85 53
 302 01c0 37860000 		li	a2,32768
 303 01c4 B384C400 		add	s1,s1,a2
 304              	.LVL23:
 305              	.L17:
  86:src/../h/TCB.hpp ****         this->context.ra = startRa;
 306              		.loc 3 86 9 is_stmt 1
 307              		.loc 3 86 26 is_stmt 0
 308 01c8 2330F500 		sd	a5,0(a0)
  87:src/../h/TCB.hpp ****         this->context.sp = startSp;
GAS LISTING /tmp/ccEEP0Eu.s 			page 13


 309              		.loc 3 87 9 is_stmt 1
 310              		.loc 3 87 26 is_stmt 0
 311 01cc 23349500 		sd	s1,8(a0)
 312              	.LVL24:
 313              	.LBE29:
 314              	.LBE26:
 315              	.LBE25:
  20:src/TCB.cpp   **** }
 316              		.loc 1 20 5 is_stmt 1
  21:src/TCB.cpp   **** 
 317              		.loc 1 21 1 is_stmt 0
 318 01d0 83308102 		ld	ra,40(sp)
 319              		.cfi_remember_state
 320              		.cfi_restore 1
 321 01d4 03340102 		ld	s0,32(sp)
 322              		.cfi_restore 8
 323              		.cfi_def_cfa 2, 48
 324 01d8 83348101 		ld	s1,24(sp)
 325              		.cfi_restore 9
 326              	.LVL25:
 327 01dc 03390101 		ld	s2,16(sp)
 328              		.cfi_restore 18
 329              	.LVL26:
 330 01e0 83398100 		ld	s3,8(sp)
 331              		.cfi_restore 19
 332              	.LVL27:
 333 01e4 13010103 		addi	sp,sp,48
 334              		.cfi_def_cfa_offset 0
 335 01e8 67800000 		jr	ra
 336              	.LVL28:
 337              	.L18:
 338              		.cfi_restore_state
 339              	.LBB32:
 340              	.LBB31:
 341              	.LBB30:
  84:src/../h/TCB.hpp ****         uint64 startSp = stack != nullptr ? (uint64)&stack[DEFAULT_STACK_SIZE] : 0;
 342              		.loc 3 84 52
 343 01ec 93070000 		li	a5,0
 344 01f0 6FF0DFFC 		j	.L16
 345              	.LVL29:
 346              	.L19:
  85:src/../h/TCB.hpp ****         this->context.ra = startRa;
 347              		.loc 3 85 43
 348 01f4 93040000 		li	s1,0
 349              	.LVL30:
 350 01f8 6FF01FFD 		j	.L17
 351              	.LBE30:
 352              	.LBE31:
 353              	.LBE32:
 354              		.cfi_endproc
 355              	.LFE43:
 357              		.align	2
 358              		.globl	_ZN3TCBdlEPv
 360              	_ZN3TCBdlEPv:
 361              	.LFB48:
  70:src/TCB.cpp   **** 
  71:src/TCB.cpp   **** void TCB::operator delete(void* ptr) {
GAS LISTING /tmp/ccEEP0Eu.s 			page 14


 362              		.loc 1 71 38 is_stmt 1
 363              		.cfi_startproc
 364              	.LVL31:
 365 01fc 130101FF 		addi	sp,sp,-16
 366              		.cfi_def_cfa_offset 16
 367 0200 23341100 		sd	ra,8(sp)
 368 0204 23308100 		sd	s0,0(sp)
 369              		.cfi_offset 1, -8
 370              		.cfi_offset 8, -16
 371 0208 13040101 		addi	s0,sp,16
 372              		.cfi_def_cfa 8, 0
  72:src/TCB.cpp   ****     mem_free(ptr);
 373              		.loc 1 72 5
 374              		.loc 1 72 13 is_stmt 0
 375 020c 97000000 		call	_Z8mem_freePv@plt
 375      E7800000 
 376              	.LVL32:
  73:src/TCB.cpp   ****     //MemoryAllocator::kfree(ptr);
  74:src/TCB.cpp   **** }
 377              		.loc 1 74 1
 378 0214 83308100 		ld	ra,8(sp)
 379              		.cfi_restore 1
 380 0218 03340100 		ld	s0,0(sp)
 381              		.cfi_restore 8
 382              		.cfi_def_cfa 2, 16
 383 021c 13010101 		addi	sp,sp,16
 384              		.cfi_def_cfa_offset 0
 385 0220 67800000 		jr	ra
 386              		.cfi_endproc
 387              	.LFE48:
 389              		.align	2
 390              		.globl	_ZN3TCB10threadJoinEPS_
 392              	_ZN3TCB10threadJoinEPS_:
 393              	.LFB49:
  75:src/TCB.cpp   **** 
  76:src/TCB.cpp   **** void TCB::threadJoin(TCB* handle) {
 394              		.loc 1 76 35 is_stmt 1
 395              		.cfi_startproc
 396              	.LVL33:
  77:src/TCB.cpp   ****     if (handle->status == FINISHED) return;
 397              		.loc 1 77 5
 398              		.loc 1 77 17 is_stmt 0
 399 0224 03278505 		lw	a4,88(a0)
 400              		.loc 1 77 5
 401 0228 93075000 		li	a5,5
 402 022c 6300F704 		beq	a4,a5,.L26
  76:src/TCB.cpp   ****     if (handle->status == FINISHED) return;
 403              		.loc 1 76 35
 404 0230 130101FF 		addi	sp,sp,-16
 405              		.cfi_def_cfa_offset 16
 406 0234 23341100 		sd	ra,8(sp)
 407 0238 23308100 		sd	s0,0(sp)
 408              		.cfi_offset 1, -8
 409              		.cfi_offset 8, -16
 410 023c 13040101 		addi	s0,sp,16
 411              		.cfi_def_cfa 8, 0
  78:src/TCB.cpp   ****     TCB::running->status = JOINING;
GAS LISTING /tmp/ccEEP0Eu.s 			page 15


 412              		.loc 1 78 5 is_stmt 1
 413              		.loc 1 78 19 is_stmt 0
 414 0240 97050000 		ld	a1,.LANCHOR0
 414      83B50500 
 415              		.loc 1 78 26
 416 0248 93073000 		li	a5,3
 417 024c 23ACF504 		sw	a5,88(a1)
  79:src/TCB.cpp   ****     handle->waitingToJoin.putLast(TCB::running);
 418              		.loc 1 79 5 is_stmt 1
 419              		.loc 1 79 34 is_stmt 0
 420 0250 13058504 		addi	a0,a0,72
 421              	.LVL34:
 422 0254 97000000 		call	_ZN11ThreadQueue7putLastEP3TCB@plt
 422      E7800000 
 423              	.LVL35:
  80:src/TCB.cpp   **** }
 424              		.loc 1 80 1
 425 025c 83308100 		ld	ra,8(sp)
 426              		.cfi_restore 1
 427 0260 03340100 		ld	s0,0(sp)
 428              		.cfi_restore 8
 429              		.cfi_def_cfa 2, 16
 430 0264 13010101 		addi	sp,sp,16
 431              		.cfi_def_cfa_offset 0
 432 0268 67800000 		jr	ra
 433              	.LVL36:
 434              	.L26:
 435 026c 67800000 		ret
 436              		.cfi_endproc
 437              	.LFE49:
 439              		.align	2
 440              		.globl	_ZN3TCB13releaseJoinedEv
 442              	_ZN3TCB13releaseJoinedEv:
 443              	.LFB50:
  81:src/TCB.cpp   **** 
  82:src/TCB.cpp   **** void TCB::releaseJoined() {
 444              		.loc 1 82 27 is_stmt 1
 445              		.cfi_startproc
  83:src/TCB.cpp   ****     while (!TCB::running->waitingToJoin.isEmpty()) {
 446              		.loc 1 83 5
 447              		.loc 1 83 12
 448              		.loc 1 83 27 is_stmt 0
 449 0270 17050000 		ld	a0,.LANCHOR0
 449      03350500 
 450              	.LVL37:
 451              	.LBB33:
 452              	.LBB34:
  35:src/../h/../h/ThreadQueue.hpp **** 
  36:src/../h/../h/ThreadQueue.hpp ****     ThreadQueue(const ThreadQueue &) = delete;
  37:src/../h/../h/ThreadQueue.hpp **** 
  38:src/../h/../h/ThreadQueue.hpp ****     ThreadQueue &operator=(const ThreadQueue &) = delete;
  39:src/../h/../h/ThreadQueue.hpp **** 
  40:src/../h/../h/ThreadQueue.hpp ****     ~ThreadQueue() {
  41:src/../h/../h/ThreadQueue.hpp ****         while (!isEmpty()) {
  42:src/../h/../h/ThreadQueue.hpp ****             Node *node = front;
  43:src/../h/../h/ThreadQueue.hpp ****             front = front->next;
  44:src/../h/../h/ThreadQueue.hpp ****             delete node;
GAS LISTING /tmp/ccEEP0Eu.s 			page 16


  45:src/../h/../h/ThreadQueue.hpp ****         }
  46:src/../h/../h/ThreadQueue.hpp ****     }
  47:src/../h/../h/ThreadQueue.hpp **** 
  48:src/../h/../h/ThreadQueue.hpp ****     bool isEmpty() const {
  49:src/../h/../h/ThreadQueue.hpp ****         bool ret = front == nullptr;
 453              		.loc 4 49 9 is_stmt 1
 454              		.loc 4 49 20 is_stmt 0
 455 0278 83378504 		ld	a5,72(a0)
 456              	.LVL38:
  50:src/../h/../h/ThreadQueue.hpp ****         return ret;
 457              		.loc 4 50 9 is_stmt 1
 458              	.LBE34:
 459              	.LBE33:
 460              		.loc 1 83 12 is_stmt 0
 461 027c 63880704 		beqz	a5,.L37
  82:src/TCB.cpp   ****     while (!TCB::running->waitingToJoin.isEmpty()) {
 462              		.loc 1 82 27
 463 0280 130101FF 		addi	sp,sp,-16
 464              		.cfi_def_cfa_offset 16
 465 0284 23341100 		sd	ra,8(sp)
 466 0288 23308100 		sd	s0,0(sp)
 467              		.cfi_offset 1, -8
 468              		.cfi_offset 8, -16
 469 028c 13040101 		addi	s0,sp,16
 470              		.cfi_def_cfa 8, 0
 471              	.L33:
 472              	.LBB36:
  84:src/TCB.cpp   ****         TCB* tcb = TCB::running->waitingToJoin.getFirst();
 473              		.loc 1 84 9 is_stmt 1
 474              		.loc 1 84 56 is_stmt 0
 475 0290 13058504 		addi	a0,a0,72
 476 0294 97000000 		call	_ZN11ThreadQueue8getFirstEv@plt
 476      E7800000 
 477              	.LVL39:
  85:src/TCB.cpp   ****         tcb->status = ACTIVE;
 478              		.loc 1 85 9 is_stmt 1
 479              		.loc 1 85 21 is_stmt 0
 480 029c 93071000 		li	a5,1
 481 02a0 232CF504 		sw	a5,88(a0)
  86:src/TCB.cpp   ****         Scheduler::put(tcb);
 482              		.loc 1 86 9 is_stmt 1
 483              		.loc 1 86 23 is_stmt 0
 484 02a4 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 484      E7800000 
 485              	.LVL40:
 486              	.LBE36:
  83:src/TCB.cpp   ****         TCB* tcb = TCB::running->waitingToJoin.getFirst();
 487              		.loc 1 83 5 is_stmt 1
  83:src/TCB.cpp   ****         TCB* tcb = TCB::running->waitingToJoin.getFirst();
 488              		.loc 1 83 12
  83:src/TCB.cpp   ****         TCB* tcb = TCB::running->waitingToJoin.getFirst();
 489              		.loc 1 83 27 is_stmt 0
 490 02ac 17050000 		ld	a0,.LANCHOR0
 490      03350500 
 491              	.LVL41:
 492              	.LBB37:
 493              	.LBB35:
GAS LISTING /tmp/ccEEP0Eu.s 			page 17


  49:src/../h/../h/ThreadQueue.hpp ****         return ret;
 494              		.loc 4 49 9 is_stmt 1
  49:src/../h/../h/ThreadQueue.hpp ****         return ret;
 495              		.loc 4 49 20 is_stmt 0
 496 02b4 83378504 		ld	a5,72(a0)
 497              	.LVL42:
 498              		.loc 4 50 9 is_stmt 1
 499              	.LBE35:
 500              	.LBE37:
  83:src/TCB.cpp   ****         TCB* tcb = TCB::running->waitingToJoin.getFirst();
 501              		.loc 1 83 12 is_stmt 0
 502 02b8 E39C07FC 		bnez	a5,.L33
  87:src/TCB.cpp   ****     }
  88:src/TCB.cpp   **** }
 503              		.loc 1 88 1
 504 02bc 83308100 		ld	ra,8(sp)
 505              		.cfi_restore 1
 506 02c0 03340100 		ld	s0,0(sp)
 507              		.cfi_restore 8
 508              		.cfi_def_cfa 2, 16
 509 02c4 13010101 		addi	sp,sp,16
 510              		.cfi_def_cfa_offset 0
 511 02c8 67800000 		jr	ra
 512              	.L37:
 513 02cc 67800000 		ret
 514              		.cfi_endproc
 515              	.LFE50:
 517              		.align	2
 518              		.globl	_ZN3TCB5startEPS_
 520              	_ZN3TCB5startEPS_:
 521              	.LFB51:
  89:src/TCB.cpp   **** 
  90:src/TCB.cpp   **** void TCB::start(TCB* newTcb) {
 522              		.loc 1 90 30 is_stmt 1
 523              		.cfi_startproc
 524              	.LVL43:
  91:src/TCB.cpp   ****     //startovanje niti(stavljanje u Scheduler); main nit je vec aktivna, ne stavlja se u Scheduler
  92:src/TCB.cpp   ****     if (newTcb->threadFunction != nullptr) {
 525              		.loc 1 92 5
 526              		.loc 1 92 17 is_stmt 0
 527 02d0 83370501 		ld	a5,16(a0)
 528              		.loc 1 92 5
 529 02d4 63800704 		beqz	a5,.L41
  90:src/TCB.cpp   ****     //startovanje niti(stavljanje u Scheduler); main nit je vec aktivna, ne stavlja se u Scheduler
 530              		.loc 1 90 30
 531 02d8 130101FE 		addi	sp,sp,-32
 532              		.cfi_def_cfa_offset 32
 533 02dc 233C1100 		sd	ra,24(sp)
 534 02e0 23388100 		sd	s0,16(sp)
 535 02e4 23349100 		sd	s1,8(sp)
 536              		.cfi_offset 1, -8
 537              		.cfi_offset 8, -16
 538              		.cfi_offset 9, -24
 539 02e8 13040102 		addi	s0,sp,32
 540              		.cfi_def_cfa 8, 0
 541 02ec 93040500 		mv	s1,a0
  93:src/TCB.cpp   ****         Scheduler::put(newTcb);
GAS LISTING /tmp/ccEEP0Eu.s 			page 18


 542              		.loc 1 93 9 is_stmt 1
 543              		.loc 1 93 23 is_stmt 0
 544 02f0 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 544      E7800000 
 545              	.LVL44:
  94:src/TCB.cpp   ****         newTcb->status = ACTIVE;
 546              		.loc 1 94 9 is_stmt 1
 547              		.loc 1 94 24 is_stmt 0
 548 02f8 93071000 		li	a5,1
 549 02fc 23ACF404 		sw	a5,88(s1)
  95:src/TCB.cpp   ****     }
  96:src/TCB.cpp   **** }
 550              		.loc 1 96 1
 551 0300 83308101 		ld	ra,24(sp)
 552              		.cfi_restore 1
 553 0304 03340101 		ld	s0,16(sp)
 554              		.cfi_restore 8
 555              		.cfi_def_cfa 2, 32
 556 0308 83348100 		ld	s1,8(sp)
 557              		.cfi_restore 9
 558              	.LVL45:
 559 030c 13010102 		addi	sp,sp,32
 560              		.cfi_def_cfa_offset 0
 561 0310 67800000 		jr	ra
 562              	.LVL46:
 563              	.L41:
 564 0314 67800000 		ret
 565              		.cfi_endproc
 566              	.LFE51:
 568              		.globl	_ZN3TCB16runningTimeSliceE
 569              		.globl	_ZN3TCB7runningE
 570              		.bss
 571              		.align	3
 572              		.set	.LANCHOR0,. + 0
 575              	_ZN3TCB7runningE:
 576 0000 00000000 		.zero	8
 576      00000000 
 579              	_ZN3TCB16runningTimeSliceE:
 580 0008 00000000 		.zero	8
 580      00000000 
 581              		.text
 582              	.Letext0:
 583              		.file 5 "src/../h/../lib/hw.h"
 584              		.file 6 "src/../h/Scheduler.hpp"
 585              		.file 7 "src/../h/../h/../h/syscall_c.hpp"
GAS LISTING /tmp/ccEEP0Eu.s 			page 19


DEFINED SYMBOLS
                            *ABS*:0000000000000000 TCB.cpp
     /tmp/ccEEP0Eu.s:9      .text:0000000000000000 _ZN3TCB7wrapperEv
     /tmp/ccEEP0Eu.s:13     .text:0000000000000000 .L0 
     /tmp/ccEEP0Eu.s:14     .text:0000000000000000 .L0 
     /tmp/ccEEP0Eu.s:15     .text:0000000000000004 .L0 
     /tmp/ccEEP0Eu.s:18     .text:000000000000000c .L0 
     /tmp/ccEEP0Eu.s:19     .text:000000000000000c .L0 
     /tmp/ccEEP0Eu.s:21     .text:0000000000000010 .L0 
     /tmp/ccEEP0Eu.s:23     .text:0000000000000010 .L0 
     /tmp/ccEEP0Eu.s:24     .text:0000000000000010 .L0 
     /tmp/ccEEP0Eu.s:27     .text:0000000000000018 .L0 
     /tmp/ccEEP0Eu.s:28     .text:0000000000000018 .L0 
     /tmp/ccEEP0Eu.s:31     .text:0000000000000024 .L0 
     /tmp/ccEEP0Eu.s:35     .text:000000000000002c .L0 
     /tmp/ccEEP0Eu.s:36     .text:000000000000002c .L0 
     /tmp/ccEEP0Eu.s:39     .text:0000000000000034 .L0 
     /tmp/ccEEP0Eu.s:40     .text:0000000000000038 .L0 
     /tmp/ccEEP0Eu.s:42     .text:000000000000003c .L0 
     /tmp/ccEEP0Eu.s:43     .text:000000000000003c .L0 
     /tmp/ccEEP0Eu.s:45     .text:0000000000000040 .L0 
     /tmp/ccEEP0Eu.s:47     .text:0000000000000044 .L0 
     /tmp/ccEEP0Eu.s:53     .text:0000000000000044 _ZN3TCB8dispatchEv
     /tmp/ccEEP0Eu.s:56     .text:0000000000000044 .L0 
     /tmp/ccEEP0Eu.s:57     .text:0000000000000044 .L0 
     /tmp/ccEEP0Eu.s:58     .text:0000000000000048 .L0 
     /tmp/ccEEP0Eu.s:62     .text:0000000000000054 .L0 
     /tmp/ccEEP0Eu.s:63     .text:0000000000000054 .L0 
     /tmp/ccEEP0Eu.s:64     .text:0000000000000054 .L0 
     /tmp/ccEEP0Eu.s:66     .text:0000000000000058 .L0 
     /tmp/ccEEP0Eu.s:68     .text:0000000000000058 .L0 
     /tmp/ccEEP0Eu.s:69     .text:0000000000000058 .L0 
     /tmp/ccEEP0Eu.s:72     .text:0000000000000060 .L0 
     /tmp/ccEEP0Eu.s:73     .text:0000000000000060 .L0 
     /tmp/ccEEP0Eu.s:75     .text:0000000000000064 .L0 
     /tmp/ccEEP0Eu.s:79     .text:000000000000006c .L0 
     /tmp/ccEEP0Eu.s:80     .text:000000000000006c .L0 
     /tmp/ccEEP0Eu.s:84     .text:0000000000000078 .L0 
     /tmp/ccEEP0Eu.s:87     .text:0000000000000084 .L0 
     /tmp/ccEEP0Eu.s:88     .text:0000000000000084 .L0 
     /tmp/ccEEP0Eu.s:90     .text:0000000000000088 .L0 
     /tmp/ccEEP0Eu.s:91     .text:0000000000000088 .L0 
     /tmp/ccEEP0Eu.s:93     .text:000000000000008c .L0 
     /tmp/ccEEP0Eu.s:95     .text:0000000000000090 .L0 
     /tmp/ccEEP0Eu.s:98     .text:000000000000009c .L0 
     /tmp/ccEEP0Eu.s:105    .text:00000000000000a8 .L0 
     /tmp/ccEEP0Eu.s:106    .text:00000000000000a8 .L0 
     /tmp/ccEEP0Eu.s:107    .text:00000000000000a8 .L0 
     /tmp/ccEEP0Eu.s:114    .text:00000000000000b0 .L0 
     /tmp/ccEEP0Eu.s:120    .text:00000000000000b4 .L0 
     /tmp/ccEEP0Eu.s:121    .text:00000000000000b4 .L0 
     /tmp/ccEEP0Eu.s:130    .text:00000000000000c4 .L0 
     /tmp/ccEEP0Eu.s:131    .text:00000000000000c4 .L0 
     /tmp/ccEEP0Eu.s:132    .text:00000000000000c4 .L0 
     /tmp/ccEEP0Eu.s:143    .text:00000000000000cc .L0 
     /tmp/ccEEP0Eu.s:145    .text:00000000000000d0 .L0 
     /tmp/ccEEP0Eu.s:146    .text:00000000000000d0 .L0 
GAS LISTING /tmp/ccEEP0Eu.s 			page 20


     /tmp/ccEEP0Eu.s:151    .text:00000000000000dc .L0 
     /tmp/ccEEP0Eu.s:152    .text:00000000000000e0 .L0 
     /tmp/ccEEP0Eu.s:154    .text:00000000000000e4 .L0 
     /tmp/ccEEP0Eu.s:155    .text:00000000000000e4 .L0 
     /tmp/ccEEP0Eu.s:157    .text:00000000000000e8 .L0 
     /tmp/ccEEP0Eu.s:160    .text:00000000000000ec .L0 
     /tmp/ccEEP0Eu.s:162    .text:00000000000000f0 .L0 
     /tmp/ccEEP0Eu.s:168    .text:00000000000000f0 _ZN3TCB5yieldEv
     /tmp/ccEEP0Eu.s:171    .text:00000000000000f0 .L0 
     /tmp/ccEEP0Eu.s:172    .text:00000000000000f0 .L0 
     /tmp/ccEEP0Eu.s:173    .text:00000000000000f4 .L0 
     /tmp/ccEEP0Eu.s:176    .text:00000000000000fc .L0 
     /tmp/ccEEP0Eu.s:177    .text:00000000000000fc .L0 
     /tmp/ccEEP0Eu.s:179    .text:0000000000000100 .L0 
     /tmp/ccEEP0Eu.s:181    .text:0000000000000100 .L0 
     /tmp/ccEEP0Eu.s:182    .text:0000000000000100 .L0 
     /tmp/ccEEP0Eu.s:185    .text:0000000000000108 .L0 
     /tmp/ccEEP0Eu.s:186    .text:0000000000000108 .L0 
     /tmp/ccEEP0Eu.s:189    .text:0000000000000110 .L0 
     /tmp/ccEEP0Eu.s:190    .text:0000000000000110 .L0 
     /tmp/ccEEP0Eu.s:193    .text:0000000000000118 .L0 
     /tmp/ccEEP0Eu.s:194    .text:000000000000011c .L0 
     /tmp/ccEEP0Eu.s:196    .text:0000000000000120 .L0 
     /tmp/ccEEP0Eu.s:197    .text:0000000000000120 .L0 
     /tmp/ccEEP0Eu.s:199    .text:0000000000000124 .L0 
     /tmp/ccEEP0Eu.s:201    .text:0000000000000128 .L0 
     /tmp/ccEEP0Eu.s:207    .text:0000000000000128 _ZN3TCBnwEm
     /tmp/ccEEP0Eu.s:210    .text:0000000000000128 .L0 
     /tmp/ccEEP0Eu.s:212    .text:0000000000000128 .L0 
     /tmp/ccEEP0Eu.s:213    .text:000000000000012c .L0 
     /tmp/ccEEP0Eu.s:216    .text:0000000000000134 .L0 
     /tmp/ccEEP0Eu.s:217    .text:0000000000000134 .L0 
     /tmp/ccEEP0Eu.s:219    .text:0000000000000138 .L0 
     /tmp/ccEEP0Eu.s:221    .text:0000000000000138 .L0 
     /tmp/ccEEP0Eu.s:222    .text:0000000000000138 .L0 
     /tmp/ccEEP0Eu.s:225    .text:0000000000000140 .L0 
     /tmp/ccEEP0Eu.s:226    .text:0000000000000144 .L0 
     /tmp/ccEEP0Eu.s:228    .text:0000000000000148 .L0 
     /tmp/ccEEP0Eu.s:229    .text:0000000000000148 .L0 
     /tmp/ccEEP0Eu.s:231    .text:000000000000014c .L0 
     /tmp/ccEEP0Eu.s:233    .text:0000000000000150 .L0 
     /tmp/ccEEP0Eu.s:239    .text:0000000000000150 _ZN3TCB12createThreadEPFvPvES0_Pm
     /tmp/ccEEP0Eu.s:242    .text:0000000000000150 .L0 
     /tmp/ccEEP0Eu.s:244    .text:0000000000000150 .L0 
     /tmp/ccEEP0Eu.s:245    .text:0000000000000154 .L0 
     /tmp/ccEEP0Eu.s:251    .text:0000000000000168 .L0 
     /tmp/ccEEP0Eu.s:252    .text:0000000000000168 .L0 
     /tmp/ccEEP0Eu.s:253    .text:0000000000000168 .L0 
     /tmp/ccEEP0Eu.s:254    .text:0000000000000168 .L0 
     /tmp/ccEEP0Eu.s:255    .text:0000000000000168 .L0 
     /tmp/ccEEP0Eu.s:257    .text:000000000000016c .L0 
     /tmp/ccEEP0Eu.s:262    .text:0000000000000178 .L0 
     /tmp/ccEEP0Eu.s:263    .text:0000000000000178 .L0 
     /tmp/ccEEP0Eu.s:271    .text:0000000000000184 .L0 
     /tmp/ccEEP0Eu.s:284    .text:00000000000001a4 .L0 
     /tmp/ccEEP0Eu.s:290    .text:00000000000001ac .L0 
     /tmp/ccEEP0Eu.s:293    .text:00000000000001b0 .L0 
GAS LISTING /tmp/ccEEP0Eu.s 			page 21


     /tmp/ccEEP0Eu.s:294    .text:00000000000001b0 .L0 
     /tmp/ccEEP0Eu.s:299    .text:00000000000001bc .L0 
     /tmp/ccEEP0Eu.s:300    .text:00000000000001bc .L0 
     /tmp/ccEEP0Eu.s:302    .text:00000000000001c0 .L0 
     /tmp/ccEEP0Eu.s:307    .text:00000000000001c8 .L0 
     /tmp/ccEEP0Eu.s:308    .text:00000000000001c8 .L0 
     /tmp/ccEEP0Eu.s:310    .text:00000000000001cc .L0 
     /tmp/ccEEP0Eu.s:311    .text:00000000000001cc .L0 
     /tmp/ccEEP0Eu.s:317    .text:00000000000001d0 .L0 
     /tmp/ccEEP0Eu.s:318    .text:00000000000001d0 .L0 
     /tmp/ccEEP0Eu.s:319    .text:00000000000001d4 .L0 
     /tmp/ccEEP0Eu.s:320    .text:00000000000001d4 .L0 
     /tmp/ccEEP0Eu.s:322    .text:00000000000001d8 .L0 
     /tmp/ccEEP0Eu.s:323    .text:00000000000001d8 .L0 
     /tmp/ccEEP0Eu.s:325    .text:00000000000001dc .L0 
     /tmp/ccEEP0Eu.s:328    .text:00000000000001e0 .L0 
     /tmp/ccEEP0Eu.s:331    .text:00000000000001e4 .L0 
     /tmp/ccEEP0Eu.s:334    .text:00000000000001e8 .L0 
     /tmp/ccEEP0Eu.s:338    .text:00000000000001ec .L0 
     /tmp/ccEEP0Eu.s:343    .text:00000000000001ec .L0 
     /tmp/ccEEP0Eu.s:348    .text:00000000000001f4 .L0 
     /tmp/ccEEP0Eu.s:354    .text:00000000000001fc .L0 
     /tmp/ccEEP0Eu.s:360    .text:00000000000001fc _ZN3TCBdlEPv
     /tmp/ccEEP0Eu.s:363    .text:00000000000001fc .L0 
     /tmp/ccEEP0Eu.s:365    .text:00000000000001fc .L0 
     /tmp/ccEEP0Eu.s:366    .text:0000000000000200 .L0 
     /tmp/ccEEP0Eu.s:369    .text:0000000000000208 .L0 
     /tmp/ccEEP0Eu.s:370    .text:0000000000000208 .L0 
     /tmp/ccEEP0Eu.s:372    .text:000000000000020c .L0 
     /tmp/ccEEP0Eu.s:374    .text:000000000000020c .L0 
     /tmp/ccEEP0Eu.s:375    .text:000000000000020c .L0 
     /tmp/ccEEP0Eu.s:378    .text:0000000000000214 .L0 
     /tmp/ccEEP0Eu.s:379    .text:0000000000000218 .L0 
     /tmp/ccEEP0Eu.s:381    .text:000000000000021c .L0 
     /tmp/ccEEP0Eu.s:382    .text:000000000000021c .L0 
     /tmp/ccEEP0Eu.s:384    .text:0000000000000220 .L0 
     /tmp/ccEEP0Eu.s:386    .text:0000000000000224 .L0 
     /tmp/ccEEP0Eu.s:392    .text:0000000000000224 _ZN3TCB10threadJoinEPS_
     /tmp/ccEEP0Eu.s:395    .text:0000000000000224 .L0 
     /tmp/ccEEP0Eu.s:397    .text:0000000000000224 .L0 
     /tmp/ccEEP0Eu.s:398    .text:0000000000000224 .L0 
     /tmp/ccEEP0Eu.s:399    .text:0000000000000224 .L0 
     /tmp/ccEEP0Eu.s:401    .text:0000000000000228 .L0 
     /tmp/ccEEP0Eu.s:404    .text:0000000000000230 .L0 
     /tmp/ccEEP0Eu.s:405    .text:0000000000000234 .L0 
     /tmp/ccEEP0Eu.s:408    .text:000000000000023c .L0 
     /tmp/ccEEP0Eu.s:409    .text:000000000000023c .L0 
     /tmp/ccEEP0Eu.s:411    .text:0000000000000240 .L0 
     /tmp/ccEEP0Eu.s:413    .text:0000000000000240 .L0 
     /tmp/ccEEP0Eu.s:414    .text:0000000000000240 .L0 
     /tmp/ccEEP0Eu.s:416    .text:0000000000000248 .L0 
     /tmp/ccEEP0Eu.s:419    .text:0000000000000250 .L0 
     /tmp/ccEEP0Eu.s:420    .text:0000000000000250 .L0 
     /tmp/ccEEP0Eu.s:425    .text:000000000000025c .L0 
     /tmp/ccEEP0Eu.s:426    .text:0000000000000260 .L0 
     /tmp/ccEEP0Eu.s:428    .text:0000000000000264 .L0 
     /tmp/ccEEP0Eu.s:429    .text:0000000000000264 .L0 
GAS LISTING /tmp/ccEEP0Eu.s 			page 22


     /tmp/ccEEP0Eu.s:431    .text:0000000000000268 .L0 
     /tmp/ccEEP0Eu.s:436    .text:0000000000000270 .L0 
     /tmp/ccEEP0Eu.s:442    .text:0000000000000270 _ZN3TCB13releaseJoinedEv
     /tmp/ccEEP0Eu.s:445    .text:0000000000000270 .L0 
     /tmp/ccEEP0Eu.s:446    .text:0000000000000270 .L0 
     /tmp/ccEEP0Eu.s:447    .text:0000000000000270 .L0 
     /tmp/ccEEP0Eu.s:448    .text:0000000000000270 .L0 
     /tmp/ccEEP0Eu.s:449    .text:0000000000000270 .L0 
     /tmp/ccEEP0Eu.s:454    .text:0000000000000278 .L0 
     /tmp/ccEEP0Eu.s:455    .text:0000000000000278 .L0 
     /tmp/ccEEP0Eu.s:460    .text:000000000000027c .L0 
     /tmp/ccEEP0Eu.s:461    .text:000000000000027c .L0 
     /tmp/ccEEP0Eu.s:463    .text:0000000000000280 .L0 
     /tmp/ccEEP0Eu.s:464    .text:0000000000000284 .L0 
     /tmp/ccEEP0Eu.s:467    .text:000000000000028c .L0 
     /tmp/ccEEP0Eu.s:468    .text:000000000000028c .L0 
     /tmp/ccEEP0Eu.s:470    .text:0000000000000290 .L0 
     /tmp/ccEEP0Eu.s:474    .text:0000000000000290 .L0 
     /tmp/ccEEP0Eu.s:475    .text:0000000000000290 .L0 
     /tmp/ccEEP0Eu.s:479    .text:000000000000029c .L0 
     /tmp/ccEEP0Eu.s:480    .text:000000000000029c .L0 
     /tmp/ccEEP0Eu.s:483    .text:00000000000002a4 .L0 
     /tmp/ccEEP0Eu.s:484    .text:00000000000002a4 .L0 
     /tmp/ccEEP0Eu.s:488    .text:00000000000002ac .L0 
     /tmp/ccEEP0Eu.s:489    .text:00000000000002ac .L0 
     /tmp/ccEEP0Eu.s:490    .text:00000000000002ac .L0 
     /tmp/ccEEP0Eu.s:495    .text:00000000000002b4 .L0 
     /tmp/ccEEP0Eu.s:496    .text:00000000000002b4 .L0 
     /tmp/ccEEP0Eu.s:501    .text:00000000000002b8 .L0 
     /tmp/ccEEP0Eu.s:502    .text:00000000000002b8 .L0 
     /tmp/ccEEP0Eu.s:504    .text:00000000000002bc .L0 
     /tmp/ccEEP0Eu.s:505    .text:00000000000002c0 .L0 
     /tmp/ccEEP0Eu.s:507    .text:00000000000002c4 .L0 
     /tmp/ccEEP0Eu.s:508    .text:00000000000002c4 .L0 
     /tmp/ccEEP0Eu.s:510    .text:00000000000002c8 .L0 
     /tmp/ccEEP0Eu.s:514    .text:00000000000002d0 .L0 
     /tmp/ccEEP0Eu.s:520    .text:00000000000002d0 _ZN3TCB5startEPS_
     /tmp/ccEEP0Eu.s:523    .text:00000000000002d0 .L0 
     /tmp/ccEEP0Eu.s:525    .text:00000000000002d0 .L0 
     /tmp/ccEEP0Eu.s:526    .text:00000000000002d0 .L0 
     /tmp/ccEEP0Eu.s:527    .text:00000000000002d0 .L0 
     /tmp/ccEEP0Eu.s:529    .text:00000000000002d4 .L0 
     /tmp/ccEEP0Eu.s:531    .text:00000000000002d8 .L0 
     /tmp/ccEEP0Eu.s:532    .text:00000000000002dc .L0 
     /tmp/ccEEP0Eu.s:536    .text:00000000000002e8 .L0 
     /tmp/ccEEP0Eu.s:537    .text:00000000000002e8 .L0 
     /tmp/ccEEP0Eu.s:538    .text:00000000000002e8 .L0 
     /tmp/ccEEP0Eu.s:540    .text:00000000000002ec .L0 
     /tmp/ccEEP0Eu.s:543    .text:00000000000002f0 .L0 
     /tmp/ccEEP0Eu.s:544    .text:00000000000002f0 .L0 
     /tmp/ccEEP0Eu.s:547    .text:00000000000002f8 .L0 
     /tmp/ccEEP0Eu.s:548    .text:00000000000002f8 .L0 
     /tmp/ccEEP0Eu.s:551    .text:0000000000000300 .L0 
     /tmp/ccEEP0Eu.s:552    .text:0000000000000304 .L0 
     /tmp/ccEEP0Eu.s:554    .text:0000000000000308 .L0 
     /tmp/ccEEP0Eu.s:555    .text:0000000000000308 .L0 
     /tmp/ccEEP0Eu.s:557    .text:000000000000030c .L0 
GAS LISTING /tmp/ccEEP0Eu.s 			page 23


     /tmp/ccEEP0Eu.s:560    .text:0000000000000310 .L0 
     /tmp/ccEEP0Eu.s:565    .text:0000000000000318 .L0 
     /tmp/ccEEP0Eu.s:579    .bss:0000000000000008 _ZN3TCB16runningTimeSliceE
     /tmp/ccEEP0Eu.s:575    .bss:0000000000000000 _ZN3TCB7runningE
     /tmp/ccEEP0Eu.s:572    .bss:0000000000000000 .LANCHOR0
     /tmp/ccEEP0Eu.s:586    .text:0000000000000318 .L0 
     /tmp/ccEEP0Eu.s:28     .text:0000000000000018 .L0 
     /tmp/ccEEP0Eu.s:69     .text:0000000000000058 .L0 
     /tmp/ccEEP0Eu.s:84     .text:0000000000000078 .L0 
     /tmp/ccEEP0Eu.s:95     .text:0000000000000090 .L0 
     /tmp/ccEEP0Eu.s:98     .text:000000000000009c .L0 
     /tmp/ccEEP0Eu.s:295    .text:00000000000001b4 .L0 
     /tmp/ccEEP0Eu.s:414    .text:0000000000000240 .L0 
     /tmp/ccEEP0Eu.s:449    .text:0000000000000270 .L0 
     /tmp/ccEEP0Eu.s:490    .text:00000000000002ac .L0 
     /tmp/ccEEP0Eu.s:116    .text:00000000000000b4 .L10
     /tmp/ccEEP0Eu.s:125    .text:00000000000000c4 .L5
     /tmp/ccEEP0Eu.s:139    .text:00000000000000cc .L7
     /tmp/ccEEP0Eu.s:77     .text:000000000000006c .L4
     /tmp/ccEEP0Eu.s:149    .text:00000000000000dc .L3
     /tmp/ccEEP0Eu.s:337    .text:00000000000001ec .L18
     /tmp/ccEEP0Eu.s:346    .text:00000000000001f4 .L19
     /tmp/ccEEP0Eu.s:296    .text:00000000000001bc .L16
     /tmp/ccEEP0Eu.s:305    .text:00000000000001c8 .L17
     /tmp/ccEEP0Eu.s:434    .text:000000000000026c .L26
     /tmp/ccEEP0Eu.s:512    .text:00000000000002cc .L37
     /tmp/ccEEP0Eu.s:471    .text:0000000000000290 .L33
     /tmp/ccEEP0Eu.s:563    .text:0000000000000314 .L41
     /tmp/ccEEP0Eu.s:2089   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccEEP0Eu.s:3833   .debug_str:00000000000007dd .LASF161
     /tmp/ccEEP0Eu.s:3639   .debug_str:0000000000000226 .LASF162
     /tmp/ccEEP0Eu.s:3797   .debug_str:00000000000006c0 .LASF163
     /tmp/ccEEP0Eu.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccEEP0Eu.s:582    .text:0000000000000318 .Letext0
     /tmp/ccEEP0Eu.s:3565   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccEEP0Eu.s:3683   .debug_str:00000000000003b2 .LASF0
     /tmp/ccEEP0Eu.s:3705   .debug_str:0000000000000435 .LASF1
     /tmp/ccEEP0Eu.s:3777   .debug_str:0000000000000635 .LASF2
     /tmp/ccEEP0Eu.s:3787   .debug_str:000000000000068b .LASF4
     /tmp/ccEEP0Eu.s:3689   .debug_str:00000000000003cf .LASF3
     /tmp/ccEEP0Eu.s:3577   .debug_str:0000000000000058 .LASF5
     /tmp/ccEEP0Eu.s:3759   .debug_str:000000000000059d .LASF6
     /tmp/ccEEP0Eu.s:3755   .debug_str:0000000000000582 .LASF7
     /tmp/ccEEP0Eu.s:3693   .debug_str:00000000000003f3 .LASF8
     /tmp/ccEEP0Eu.s:3659   .debug_str:00000000000002d5 .LASF9
     /tmp/ccEEP0Eu.s:3665   .debug_str:0000000000000309 .LASF10
     /tmp/ccEEP0Eu.s:3601   .debug_str:000000000000011e .LASF11
     /tmp/ccEEP0Eu.s:3651   .debug_str:000000000000029f .LASF12
     /tmp/ccEEP0Eu.s:3615   .debug_str:0000000000000178 .LASF13
     /tmp/ccEEP0Eu.s:3599   .debug_str:000000000000010e .LASF14
     /tmp/ccEEP0Eu.s:3819   .debug_str:0000000000000779 .LASF15
     /tmp/ccEEP0Eu.s:3821   .debug_str:0000000000000785 .LASF16
     /tmp/ccEEP0Eu.s:3807   .debug_str:0000000000000725 .LASF17
     /tmp/ccEEP0Eu.s:3717   .debug_str:000000000000047c .LASF18
     /tmp/ccEEP0Eu.s:3803   .debug_str:0000000000000703 .LASF87
     /tmp/ccEEP0Eu.s:3761   .debug_str:00000000000005a4 .LASF19
     /tmp/ccEEP0Eu.s:3627   .debug_str:00000000000001e9 .LASF20
GAS LISTING /tmp/ccEEP0Eu.s 			page 24


     /tmp/ccEEP0Eu.s:3569   .debug_str:000000000000000b .LASF21
     /tmp/ccEEP0Eu.s:3579   .debug_str:000000000000005f .LASF22
     /tmp/ccEEP0Eu.s:3609   .debug_str:0000000000000146 .LASF23
     /tmp/ccEEP0Eu.s:3593   .debug_str:00000000000000e5 .LASF24
     /tmp/ccEEP0Eu.s:3825   .debug_str:00000000000007b0 .LASF64
     /tmp/ccEEP0Eu.s:3605   .debug_str:0000000000000132 .LASF25
     /tmp/ccEEP0Eu.s:3667   .debug_str:0000000000000317 .LASF27
     /tmp/ccEEP0Eu.s:3685   .debug_str:00000000000003bf .LASF29
     /tmp/ccEEP0Eu.s:3715   .debug_str:0000000000000468 .LASF31
     /tmp/ccEEP0Eu.s:3817   .debug_str:000000000000076c .LASF26
     /tmp/ccEEP0Eu.s:3875   .debug_str:0000000000000990 .LASF28
     /tmp/ccEEP0Eu.s:3749   .debug_str:0000000000000568 .LASF164
     /tmp/ccEEP0Eu.s:3889   .debug_str:0000000000000a0c .LASF35
     /tmp/ccEEP0Eu.s:3691   .debug_str:00000000000003e1 .LASF37
     /tmp/ccEEP0Eu.s:3711   .debug_str:0000000000000456 .LASF30
     /tmp/ccEEP0Eu.s:3767   .debug_str:00000000000005da .LASF32
     /tmp/ccEEP0Eu.s:3631   .debug_str:00000000000001f5 .LASF33
     /tmp/ccEEP0Eu.s:3783   .debug_str:0000000000000665 .LASF34
     /tmp/ccEEP0Eu.s:3849   .debug_str:000000000000090b .LASF36
     /tmp/ccEEP0Eu.s:3653   .debug_str:00000000000002ae .LASF38
     /tmp/ccEEP0Eu.s:3865   .debug_str:0000000000000947 .LASF39
     /tmp/ccEEP0Eu.s:3649   .debug_str:0000000000000286 .LASF41
     /tmp/ccEEP0Eu.s:3709   .debug_str:0000000000000450 .LASF40
     /tmp/ccEEP0Eu.s:3835   .debug_str:00000000000008a1 .LASF42
     /tmp/ccEEP0Eu.s:3633   .debug_str:0000000000000202 .LASF43
     /tmp/ccEEP0Eu.s:3611   .debug_str:000000000000014f .LASF44
     /tmp/ccEEP0Eu.s:3855   .debug_str:0000000000000921 .LASF45
     /tmp/ccEEP0Eu.s:3583   .debug_str:0000000000000083 .LASF46
     /tmp/ccEEP0Eu.s:3829   .debug_str:00000000000007c5 .LASF47
     /tmp/ccEEP0Eu.s:3595   .debug_str:00000000000000ee .LASF48
     /tmp/ccEEP0Eu.s:3899   .debug_str:0000000000000a51 .LASF49
     /tmp/ccEEP0Eu.s:3663   .debug_str:00000000000002fd .LASF50
     /tmp/ccEEP0Eu.s:3573   .debug_str:0000000000000020 .LASF51
     /tmp/ccEEP0Eu.s:3743   .debug_str:0000000000000532 .LASF52
     /tmp/ccEEP0Eu.s:3845   .debug_str:00000000000008ee .LASF53
     /tmp/ccEEP0Eu.s:3597   .debug_str:00000000000000ff .LASF54
     /tmp/ccEEP0Eu.s:3895   .debug_str:0000000000000a33 .LASF55
     /tmp/ccEEP0Eu.s:3853   .debug_str:000000000000091c .LASF56
     /tmp/ccEEP0Eu.s:3837   .debug_str:00000000000008b1 .LASF57
     /tmp/ccEEP0Eu.s:3831   .debug_str:00000000000007cd .LASF58
     /tmp/ccEEP0Eu.s:3753   .debug_str:0000000000000576 .LASF59
     /tmp/ccEEP0Eu.s:3571   .debug_str:0000000000000013 .LASF60
     /tmp/ccEEP0Eu.s:3785   .debug_str:000000000000067d .LASF61
     /tmp/ccEEP0Eu.s:3861   .debug_str:0000000000000935 .LASF62
     /tmp/ccEEP0Eu.s:3887   .debug_str:00000000000009f6 .LASF134
     /tmp/ccEEP0Eu.s:3621   .debug_str:00000000000001b5 .LASF70
     /tmp/ccEEP0Eu.s:3575   .debug_str:0000000000000030 .LASF71
     /tmp/ccEEP0Eu.s:3741   .debug_str:0000000000000526 .LASF63
     /tmp/ccEEP0Eu.s:3629   .debug_str:00000000000001f0 .LASF65
     /tmp/ccEEP0Eu.s:3699   .debug_str:0000000000000426 .LASF66
     /tmp/ccEEP0Eu.s:3603   .debug_str:000000000000012d .LASF67
     /tmp/ccEEP0Eu.s:3641   .debug_str:0000000000000232 .LASF68
     /tmp/ccEEP0Eu.s:3623   .debug_str:00000000000001c3 .LASF69
     /tmp/ccEEP0Eu.s:3763   .debug_str:00000000000005ac .LASF72
     /tmp/ccEEP0Eu.s:3851   .debug_str:0000000000000916 .LASF73
     /tmp/ccEEP0Eu.s:3701   .debug_str:000000000000042b .LASF74
     /tmp/ccEEP0Eu.s:3585   .debug_str:0000000000000095 .LASF75
GAS LISTING /tmp/ccEEP0Eu.s 			page 25


     /tmp/ccEEP0Eu.s:3661   .debug_str:00000000000002e5 .LASF76
     /tmp/ccEEP0Eu.s:3779   .debug_str:0000000000000643 .LASF165
     /tmp/ccEEP0Eu.s:3843   .debug_str:00000000000008d6 .LASF166
     /tmp/ccEEP0Eu.s:3827   .debug_str:00000000000007b8 .LASF77
     /tmp/ccEEP0Eu.s:3873   .debug_str:000000000000097b .LASF78
     /tmp/ccEEP0Eu.s:3635   .debug_str:000000000000020b .LASF79
     /tmp/ccEEP0Eu.s:3581   .debug_str:0000000000000067 .LASF80
     /tmp/ccEEP0Eu.s:3707   .debug_str:0000000000000448 .LASF81
     /tmp/ccEEP0Eu.s:3729   .debug_str:00000000000004df .LASF82
     /tmp/ccEEP0Eu.s:3591   .debug_str:00000000000000dc .LASF83
     /tmp/ccEEP0Eu.s:3727   .debug_str:00000000000004c3 .LASF84
     /tmp/ccEEP0Eu.s:3617   .debug_str:0000000000000188 .LASF85
     /tmp/ccEEP0Eu.s:3867   .debug_str:0000000000000955 .LASF127
     /tmp/ccEEP0Eu.s:3869   .debug_str:000000000000096b .LASF86
     /tmp/ccEEP0Eu.s:3643   .debug_str:0000000000000250 .LASF88
     /tmp/ccEEP0Eu.s:3645   .debug_str:000000000000025f .LASF89
     /tmp/ccEEP0Eu.s:3697   .debug_str:0000000000000419 .LASF90
     /tmp/ccEEP0Eu.s:3625   .debug_str:00000000000001dd .LASF91
     /tmp/ccEEP0Eu.s:3673   .debug_str:000000000000035c .LASF92
     /tmp/ccEEP0Eu.s:3681   .debug_str:000000000000039a .LASF93
     /tmp/ccEEP0Eu.s:3795   .debug_str:00000000000006b2 .LASF94
     /tmp/ccEEP0Eu.s:3801   .debug_str:00000000000006e8 .LASF95
     /tmp/ccEEP0Eu.s:3731   .debug_str:00000000000004fe .LASF96
     /tmp/ccEEP0Eu.s:3877   .debug_str:00000000000009b2 .LASF97
     /tmp/ccEEP0Eu.s:3883   .debug_str:00000000000009db .LASF100
     /tmp/ccEEP0Eu.s:3847   .debug_str:00000000000008f6 .LASF102
     /tmp/ccEEP0Eu.s:3773   .debug_str:0000000000000621 .LASF98
     /tmp/ccEEP0Eu.s:3747   .debug_str:0000000000000553 .LASF99
     /tmp/ccEEP0Eu.s:3857   .debug_str:0000000000000929 .LASF101
     /tmp/ccEEP0Eu.s:3765   .debug_str:00000000000005c7 .LASF103
     /tmp/ccEEP0Eu.s:3739   .debug_str:000000000000051f .LASF104
     /tmp/ccEEP0Eu.s:3695   .debug_str:0000000000000406 .LASF105
     /tmp/ccEEP0Eu.s:3879   .debug_str:00000000000009cc .LASF106
     /tmp/ccEEP0Eu.s:3815   .debug_str:0000000000000758 .LASF107
     /tmp/ccEEP0Eu.s:3733   .debug_str:000000000000050b .LASF108
     /tmp/ccEEP0Eu.s:3745   .debug_str:000000000000053f .LASF109
     /tmp/ccEEP0Eu.s:3813   .debug_str:0000000000000751 .LASF110
     /tmp/ccEEP0Eu.s:3791   .debug_str:0000000000000698 .LASF111
     /tmp/ccEEP0Eu.s:3793   .debug_str:00000000000006ab .LASF112
     /tmp/ccEEP0Eu.s:3637   .debug_str:0000000000000213 .LASF113
     /tmp/ccEEP0Eu.s:3789   .debug_str:0000000000000692 .LASF114
     /tmp/ccEEP0Eu.s:3677   .debug_str:000000000000037f .LASF115
     /tmp/ccEEP0Eu.s:3687   .debug_str:00000000000003c9 .LASF116
     /tmp/ccEEP0Eu.s:3671   .debug_str:000000000000034a .LASF117
     /tmp/ccEEP0Eu.s:3567   .debug_str:0000000000000000 .LASF118
     /tmp/ccEEP0Eu.s:3781   .debug_str:000000000000064d .LASF119
     /tmp/ccEEP0Eu.s:3775   .debug_str:000000000000062a .LASF120
     /tmp/ccEEP0Eu.s:3897   .debug_str:0000000000000a39 .LASF121
     /tmp/ccEEP0Eu.s:3871   .debug_str:0000000000000971 .LASF122
     /tmp/ccEEP0Eu.s:3613   .debug_str:0000000000000162 .LASF123
     /tmp/ccEEP0Eu.s:3607   .debug_str:000000000000013c .LASF124
     /tmp/ccEEP0Eu.s:3723   .debug_str:00000000000004a3 .LASF125
     /tmp/ccEEP0Eu.s:3841   .debug_str:00000000000008cb .LASF126
     /tmp/ccEEP0Eu.s:3619   .debug_str:000000000000019d .LASF128
     /tmp/ccEEP0Eu.s:3657   .debug_str:00000000000002cb .LASF129
     /tmp/ccEEP0Eu.s:3811   .debug_str:000000000000074c .LASF130
     /tmp/ccEEP0Eu.s:3735   .debug_str:0000000000000513 .LASF131
GAS LISTING /tmp/ccEEP0Eu.s 			page 26


     /tmp/ccEEP0Eu.s:3893   .debug_str:0000000000000a26 .LASF132
     /tmp/ccEEP0Eu.s:3885   .debug_str:00000000000009e4 .LASF133
     /tmp/ccEEP0Eu.s:3675   .debug_str:0000000000000367 .LASF135
     /tmp/ccEEP0Eu.s:3891   .debug_str:0000000000000a12 .LASF167
     /tmp/ccEEP0Eu.s:3839   .debug_str:00000000000008bb .LASF136
     /tmp/ccEEP0Eu.s:3769   .debug_str:00000000000005f2 .LASF137
     /tmp/ccEEP0Eu.s:3863   .debug_str:000000000000093c .LASF138
     /tmp/ccEEP0Eu.s:3587   .debug_str:00000000000000aa .LASF139
     /tmp/ccEEP0Eu.s:3713   .debug_str:0000000000000463 .LASF140
     /tmp/ccEEP0Eu.s:3823   .debug_str:000000000000079b .LASF141
     /tmp/ccEEP0Eu.s:3589   .debug_str:00000000000000cb .LASF142
     /tmp/ccEEP0Eu.s:3647   .debug_str:000000000000026b .LASF143
     /tmp/ccEEP0Eu.s:521    .text:00000000000002d0 .LFB51
     /tmp/ccEEP0Eu.s:566    .text:0000000000000318 .LFE51
     /tmp/ccEEP0Eu.s:3737   .debug_str:0000000000000518 .LASF144
     /tmp/ccEEP0Eu.s:3253   .debug_loc:0000000000000000 .LLST19
     /tmp/ccEEP0Eu.s:545    .text:00000000000002f8 .LVL44
     /tmp/ccEEP0Eu.s:443    .text:0000000000000270 .LFB50
     /tmp/ccEEP0Eu.s:515    .text:00000000000002d0 .LFE50
     /tmp/ccEEP0Eu.s:472    .text:0000000000000290 .LBB36
     /tmp/ccEEP0Eu.s:486    .text:00000000000002ac .LBE36
     /tmp/ccEEP0Eu.s:3275   .debug_loc:000000000000005f .LLST18
     /tmp/ccEEP0Eu.s:477    .text:000000000000029c .LVL39
     /tmp/ccEEP0Eu.s:485    .text:00000000000002ac .LVL40
     /tmp/ccEEP0Eu.s:451    .text:0000000000000278 .LBB33
     /tmp/ccEEP0Eu.s:3545   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccEEP0Eu.s:3282   .debug_loc:0000000000000082 .LLST17
     /tmp/ccEEP0Eu.s:393    .text:0000000000000224 .LFB49
     /tmp/ccEEP0Eu.s:437    .text:0000000000000270 .LFE49
     /tmp/ccEEP0Eu.s:3881   .debug_str:00000000000009d4 .LASF145
     /tmp/ccEEP0Eu.s:3297   .debug_loc:00000000000000be .LLST16
     /tmp/ccEEP0Eu.s:423    .text:000000000000025c .LVL35
     /tmp/ccEEP0Eu.s:361    .text:00000000000001fc .LFB48
     /tmp/ccEEP0Eu.s:387    .text:0000000000000224 .LFE48
     /tmp/ccEEP0Eu.s:3321   .debug_loc:0000000000000120 .LLST15
     /tmp/ccEEP0Eu.s:376    .text:0000000000000214 .LVL32
     /tmp/ccEEP0Eu.s:208    .text:0000000000000128 .LFB47
     /tmp/ccEEP0Eu.s:234    .text:0000000000000150 .LFE47
     /tmp/ccEEP0Eu.s:3703   .debug_str:0000000000000430 .LASF146
     /tmp/ccEEP0Eu.s:3335   .debug_loc:0000000000000159 .LLST3
     /tmp/ccEEP0Eu.s:223    .text:0000000000000140 .LVL16
     /tmp/ccEEP0Eu.s:10     .text:0000000000000000 .LFB46
     /tmp/ccEEP0Eu.s:48     .text:0000000000000044 .LFE46
     /tmp/ccEEP0Eu.s:25     .text:0000000000000018 .LVL0
     /tmp/ccEEP0Eu.s:37     .text:0000000000000034 .LVL2
     /tmp/ccEEP0Eu.s:169    .text:00000000000000f0 .LFB45
     /tmp/ccEEP0Eu.s:202    .text:0000000000000128 .LFE45
     /tmp/ccEEP0Eu.s:183    .text:0000000000000108 .LVL12
     /tmp/ccEEP0Eu.s:187    .text:0000000000000110 .LVL13
     /tmp/ccEEP0Eu.s:191    .text:0000000000000118 .LVL14
     /tmp/ccEEP0Eu.s:54     .text:0000000000000044 .LFB44
     /tmp/ccEEP0Eu.s:163    .text:00000000000000f0 .LFE44
     /tmp/ccEEP0Eu.s:3349   .debug_loc:0000000000000192 .LLST0
     /tmp/ccEEP0Eu.s:102    .text:00000000000000a8 .LBB21
     /tmp/ccEEP0Eu.s:118    .text:00000000000000b4 .LBE21
     /tmp/ccEEP0Eu.s:3356   .debug_loc:00000000000001b5 .LLST1
     /tmp/ccEEP0Eu.s:128    .text:00000000000000c4 .LBB23
GAS LISTING /tmp/ccEEP0Eu.s 			page 27


     /tmp/ccEEP0Eu.s:141    .text:00000000000000cc .LBE23
     /tmp/ccEEP0Eu.s:3365   .debug_loc:00000000000001db .LLST2
     /tmp/ccEEP0Eu.s:81     .text:0000000000000074 .LVL4
     /tmp/ccEEP0Eu.s:123    .text:00000000000000c0 .LVL7
     /tmp/ccEEP0Eu.s:148    .text:00000000000000dc .LVL10
     /tmp/ccEEP0Eu.s:240    .text:0000000000000150 .LFB43
     /tmp/ccEEP0Eu.s:355    .text:00000000000001fc .LFE43
     /tmp/ccEEP0Eu.s:3751   .debug_str:000000000000056d .LASF147
     /tmp/ccEEP0Eu.s:3374   .debug_loc:0000000000000201 .LLST4
     /tmp/ccEEP0Eu.s:3394   .debug_loc:000000000000025e .LLST5
     /tmp/ccEEP0Eu.s:3414   .debug_loc:00000000000002bb .LLST6
     /tmp/ccEEP0Eu.s:3799   .debug_str:00000000000006de .LASF148
     /tmp/ccEEP0Eu.s:3439   .debug_loc:000000000000032c .LLST7
     /tmp/ccEEP0Eu.s:267    .text:0000000000000184 .LBB25
     /tmp/ccEEP0Eu.s:3446   .debug_loc:000000000000034f .LLST8
     /tmp/ccEEP0Eu.s:3467   .debug_loc:00000000000003ad .LLST9
     /tmp/ccEEP0Eu.s:3478   .debug_loc:00000000000003e3 .LLST10
     /tmp/ccEEP0Eu.s:3489   .debug_loc:0000000000000419 .LLST11
     /tmp/ccEEP0Eu.s:280    .text:00000000000001a4 .LBB27
     /tmp/ccEEP0Eu.s:288    .text:00000000000001ac .LBE27
     /tmp/ccEEP0Eu.s:3500   .debug_loc:000000000000044f .LLST12
     /tmp/ccEEP0Eu.s:3509   .debug_loc:0000000000000475 .LLST13
     /tmp/ccEEP0Eu.s:3520   .debug_loc:00000000000004ab .LLST14
     /tmp/ccEEP0Eu.s:266    .text:0000000000000184 .LVL19
     /tmp/ccEEP0Eu.s:3859   .debug_str:0000000000000930 .LASF149
     /tmp/ccEEP0Eu.s:3655   .debug_str:00000000000002c6 .LASF152
     /tmp/ccEEP0Eu.s:3757   .debug_str:0000000000000595 .LASF150
     /tmp/ccEEP0Eu.s:3901   .debug_str:0000000000000a5e .LASF151
     /tmp/ccEEP0Eu.s:3721   .debug_str:000000000000048d .LASF153
     /tmp/ccEEP0Eu.s:3805   .debug_str:0000000000000710 .LASF154
     /tmp/ccEEP0Eu.s:3771   .debug_str:0000000000000613 .LASF155
     /tmp/ccEEP0Eu.s:3679   .debug_str:0000000000000391 .LASF157
     /tmp/ccEEP0Eu.s:3669   .debug_str:000000000000033c .LASF156
     /tmp/ccEEP0Eu.s:3725   .debug_str:00000000000004b9 .LASF158
     /tmp/ccEEP0Eu.s:3809   .debug_str:000000000000073b .LASF159
     /tmp/ccEEP0Eu.s:3719   .debug_str:0000000000000481 .LASF160
     /tmp/ccEEP0Eu.s:524    .text:00000000000002d0 .LVL43
     /tmp/ccEEP0Eu.s:558    .text:000000000000030c .LVL45
     /tmp/ccEEP0Eu.s:562    .text:0000000000000314 .LVL46
     /tmp/ccEEP0Eu.s:450    .text:0000000000000278 .LVL37
     /tmp/ccEEP0Eu.s:456    .text:000000000000027c .LVL38
     /tmp/ccEEP0Eu.s:491    .text:00000000000002b4 .LVL41
     /tmp/ccEEP0Eu.s:497    .text:00000000000002b8 .LVL42
     /tmp/ccEEP0Eu.s:396    .text:0000000000000224 .LVL33
     /tmp/ccEEP0Eu.s:421    .text:0000000000000254 .LVL34
     /tmp/ccEEP0Eu.s:433    .text:000000000000026c .LVL36
     /tmp/ccEEP0Eu.s:364    .text:00000000000001fc .LVL31
     /tmp/ccEEP0Eu.s:211    .text:0000000000000128 .LVL15
     /tmp/ccEEP0Eu.s:70     .text:0000000000000060 .LVL3
     /tmp/ccEEP0Eu.s:158    .text:00000000000000e8 .LVL11
     /tmp/ccEEP0Eu.s:101    .text:00000000000000a8 .LVL5
     /tmp/ccEEP0Eu.s:115    .text:00000000000000b4 .LVL6
     /tmp/ccEEP0Eu.s:127    .text:00000000000000c4 .LVL8
     /tmp/ccEEP0Eu.s:137    .text:00000000000000cc .LVL9
     /tmp/ccEEP0Eu.s:243    .text:0000000000000150 .LVL17
     /tmp/ccEEP0Eu.s:264    .text:000000000000017c .LVL18
     /tmp/ccEEP0Eu.s:329    .text:00000000000001e0 .LVL26
GAS LISTING /tmp/ccEEP0Eu.s 			page 28


     /tmp/ccEEP0Eu.s:336    .text:00000000000001ec .LVL28
     /tmp/ccEEP0Eu.s:332    .text:00000000000001e4 .LVL27
     /tmp/ccEEP0Eu.s:304    .text:00000000000001c8 .LVL23
     /tmp/ccEEP0Eu.s:349    .text:00000000000001f8 .LVL30
     /tmp/ccEEP0Eu.s:312    .text:00000000000001d0 .LVL24
     /tmp/ccEEP0Eu.s:279    .text:00000000000001a4 .LVL20
     /tmp/ccEEP0Eu.s:286    .text:00000000000001ac .LVL21
     /tmp/ccEEP0Eu.s:297    .text:00000000000001bc .LVL22
     /tmp/ccEEP0Eu.s:345    .text:00000000000001f4 .LVL29
     /tmp/ccEEP0Eu.s:326    .text:00000000000001dc .LVL25
     /tmp/ccEEP0Eu.s:587    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccEEP0Eu.s:315    .text:00000000000001d0 .LBE25
     /tmp/ccEEP0Eu.s:339    .text:00000000000001ec .LBB32
     /tmp/ccEEP0Eu.s:353    .text:00000000000001fc .LBE32
     /tmp/ccEEP0Eu.s:291    .text:00000000000001b0 .LBB29
     /tmp/ccEEP0Eu.s:313    .text:00000000000001d0 .LBE29
     /tmp/ccEEP0Eu.s:341    .text:00000000000001ec .LBB30
     /tmp/ccEEP0Eu.s:351    .text:00000000000001fc .LBE30
     /tmp/ccEEP0Eu.s:459    .text:000000000000027c .LBE33
     /tmp/ccEEP0Eu.s:492    .text:00000000000002b4 .LBB37
     /tmp/ccEEP0Eu.s:500    .text:00000000000002b8 .LBE37

UNDEFINED SYMBOLS
_ZN5Riscv10popSppSpieEv
_Z11thread_exitv
_ZN9Scheduler3getEv
_Z22kernelConsumerFunctionPv
_Z4idlePv
_ZN9Scheduler3putEP3TCB
_ZN3TCB13contextSwitchEPNS_7ContextES1_
_ZN5Riscv13pushRegistersEv
_ZN5Riscv12popRegistersEv
_Z9mem_allocm
_Z8mem_freePv
_ZN11ThreadQueue7putLastEP3TCB
_ZN11ThreadQueue8getFirstEv
