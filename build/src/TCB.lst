GAS LISTING /tmp/ccdK4uAb.s 			page 1


   1              		.file	"TCB.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN3TCB7wrapperEv
   9              	_ZN3TCB7wrapperEv:
  10              	.LFB34:
  11              		.file 1 "src/TCB.cpp"
   1:src/TCB.cpp   **** //
   2:src/TCB.cpp   **** // Created by os on 5/23/23.
   3:src/TCB.cpp   **** //
   4:src/TCB.cpp   **** 
   5:src/TCB.cpp   **** #include "../h/TCB.hpp"
   6:src/TCB.cpp   **** #include "../h/Riscv.hpp"
   7:src/TCB.cpp   **** #include "../h/Scheduler.hpp"
   8:src/TCB.cpp   **** #include "../h/MemoryAllocator.hpp"
   9:src/TCB.cpp   **** #include "../h/syscall_c.hpp"
  10:src/TCB.cpp   **** 
  11:src/TCB.cpp   **** TCB* TCB::running = nullptr;
  12:src/TCB.cpp   **** uint64 TCB::runningTimeSlice = 0;
  13:src/TCB.cpp   **** 
  14:src/TCB.cpp   **** TCB* TCB::createThread(TCB::Body function, void* args, uint64* stack) {
  15:src/TCB.cpp   **** 	//pravljenje niti
  16:src/TCB.cpp   **** 	TCB* newThread = new TCB(function, args, stack);
  17:src/TCB.cpp   **** 
  18:src/TCB.cpp   **** 	//startovanje niti(stavljanje u Scheduler); main nit je vec aktivna, ne stavlja se u Scheduler
  19:src/TCB.cpp   **** 	if (function != nullptr) Scheduler::put(newThread);
  20:src/TCB.cpp   **** 	return newThread;
  21:src/TCB.cpp   **** }
  22:src/TCB.cpp   **** 
  23:src/TCB.cpp   **** void TCB::dispatch() {
  24:src/TCB.cpp   **** 	TCB* old = TCB::running;
  25:src/TCB.cpp   **** 	if (!old->finished && !old->blocked && old->timeToSleep == 0) {
  26:src/TCB.cpp   **** 		Scheduler::put(old);
  27:src/TCB.cpp   **** 	}
  28:src/TCB.cpp   **** 	TCB::running = Scheduler::get();
  29:src/TCB.cpp   **** 	TCB::runningTimeSlice = 0;
  30:src/TCB.cpp   **** 
  31:src/TCB.cpp   **** 	//sada biramo u kom rezimu ce se izvrsavati nit, upisom bita SSTATUS_SPP
  32:src/TCB.cpp   **** 	//ako treba da se izvrsava main kernel nit, povratak je u sistemski rezim, inace u korisnicki
  33:src/TCB.cpp   **** 	if (TCB::running->threadFunction == nullptr) {
  34:src/TCB.cpp   **** 		Riscv::ms_sstatus(Riscv::SSTATUS_SPP);
  35:src/TCB.cpp   **** 	} else {
  36:src/TCB.cpp   **** 		Riscv::mc_sstatus(Riscv::SSTATUS_SPP);
  37:src/TCB.cpp   **** 	}
  38:src/TCB.cpp   **** 
  39:src/TCB.cpp   **** 	if (old != TCB::running) TCB::contextSwitch(&old->context, &running->context);
  40:src/TCB.cpp   **** }
  41:src/TCB.cpp   **** 
  42:src/TCB.cpp   **** void TCB::yield() {
  43:src/TCB.cpp   **** 	Riscv::pushRegisters();
  44:src/TCB.cpp   **** 	TCB::dispatch();
  45:src/TCB.cpp   **** 	Riscv::popRegisters();
  46:src/TCB.cpp   **** }
  47:src/TCB.cpp   **** 
GAS LISTING /tmp/ccdK4uAb.s 			page 2


  48:src/TCB.cpp   **** void TCB::wrapper() {
  12              		.loc 1 48 21
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23341100 		sd	ra,8(sp)
  17 0008 23308100 		sd	s0,0(sp)
  18              		.cfi_offset 1, -8
  19              		.cfi_offset 8, -16
  20 000c 13040101 		addi	s0,sp,16
  21              		.cfi_def_cfa 8, 0
  49:src/TCB.cpp   **** 	//pocetak wrappera se izvrsava u supervisor modu,
  50:src/TCB.cpp   **** 	//jer nismo izasli iz prekidne rutine prilikom promene konteksta (dispatch/yield)
  51:src/TCB.cpp   **** 	Riscv::popSppSpie();
  22              		.loc 1 51 2
  23              		.loc 1 51 19 is_stmt 0
  24 0010 97000000 		call	_ZN5Riscv10popSppSpieEv@plt
  24      E7800000 
  25              	.LVL0:
  52:src/TCB.cpp   **** 	//na dalje se izvrsavamo u user modu
  53:src/TCB.cpp   **** 	running->threadFunction(running->args);
  26              		.loc 1 53 2 is_stmt 1
  27              		.loc 1 53 11 is_stmt 0
  28 0018 97070000 		ld	a5,.LANCHOR0
  28      83B70700 
  29 0020 03B70701 		ld	a4,16(a5)
  30              		.loc 1 53 25
  31 0024 03B50702 		ld	a0,32(a5)
  32 0028 E7000700 		jalr	a4
  33              	.LVL1:
  54:src/TCB.cpp   **** 	//running->finished = true;
  55:src/TCB.cpp   **** 	//i dalje smo u user modu, moramo promenu niti vrsiti sistemskim pozivom
  56:src/TCB.cpp   **** 	thread_exit();
  34              		.loc 1 56 2 is_stmt 1
  35              		.loc 1 56 13 is_stmt 0
  36 002c 97000000 		call	_Z11thread_exitv@plt
  36      E7800000 
  37              	.LVL2:
  57:src/TCB.cpp   **** }
  38              		.loc 1 57 1
  39 0034 83308100 		ld	ra,8(sp)
  40              		.cfi_restore 1
  41 0038 03340100 		ld	s0,0(sp)
  42              		.cfi_restore 8
  43              		.cfi_def_cfa 2, 16
  44 003c 13010101 		addi	sp,sp,16
  45              		.cfi_def_cfa_offset 0
  46 0040 67800000 		jr	ra
  47              		.cfi_endproc
  48              	.LFE34:
  50              		.align	2
  51              		.globl	_ZN3TCB8dispatchEv
  53              	_ZN3TCB8dispatchEv:
  54              	.LFB32:
  23:src/TCB.cpp   **** 	TCB* old = TCB::running;
  55              		.loc 1 23 22 is_stmt 1
  56              		.cfi_startproc
GAS LISTING /tmp/ccdK4uAb.s 			page 3


  57 0044 130101FE 		addi	sp,sp,-32
  58              		.cfi_def_cfa_offset 32
  59 0048 233C1100 		sd	ra,24(sp)
  60 004c 23388100 		sd	s0,16(sp)
  61 0050 23349100 		sd	s1,8(sp)
  62              		.cfi_offset 1, -8
  63              		.cfi_offset 8, -16
  64              		.cfi_offset 9, -24
  65 0054 13040102 		addi	s0,sp,32
  66              		.cfi_def_cfa 8, 0
  24:src/TCB.cpp   **** 	if (!old->finished && !old->blocked && old->timeToSleep == 0) {
  67              		.loc 1 24 2
  24:src/TCB.cpp   **** 	if (!old->finished && !old->blocked && old->timeToSleep == 0) {
  68              		.loc 1 24 7 is_stmt 0
  69 0058 97040000 		ld	s1,.LANCHOR0
  69      83B40400 
  70              	.LVL3:
  25:src/TCB.cpp   **** 		Scheduler::put(old);
  71              		.loc 1 25 2 is_stmt 1
  25:src/TCB.cpp   **** 		Scheduler::put(old);
  72              		.loc 1 25 12 is_stmt 0
  73 0060 83C70403 		lbu	a5,48(s1)
  25:src/TCB.cpp   **** 		Scheduler::put(old);
  74              		.loc 1 25 2
  75 0064 639A0700 		bnez	a5,.L4
  25:src/TCB.cpp   **** 		Scheduler::put(old);
  76              		.loc 1 25 30 discriminator 1
  77 0068 83C71403 		lbu	a5,49(s1)
  25:src/TCB.cpp   **** 		Scheduler::put(old);
  78              		.loc 1 25 21 discriminator 1
  79 006c 63960700 		bnez	a5,.L4
  25:src/TCB.cpp   **** 		Scheduler::put(old);
  80              		.loc 1 25 46 discriminator 2
  81 0070 83B70404 		ld	a5,64(s1)
  25:src/TCB.cpp   **** 		Scheduler::put(old);
  82              		.loc 1 25 38 discriminator 2
  83 0074 638A0704 		beqz	a5,.L9
  84              	.L4:
  28:src/TCB.cpp   **** 	TCB::runningTimeSlice = 0;
  85              		.loc 1 28 2 is_stmt 1
  28:src/TCB.cpp   **** 	TCB::runningTimeSlice = 0;
  86              		.loc 1 28 31 is_stmt 0
  87 0078 97000000 		call	_ZN9Scheduler3getEv@plt
  87      E7800000 
  88              	.LVL4:
  89 0080 93050500 		mv	a1,a0
  28:src/TCB.cpp   **** 	TCB::runningTimeSlice = 0;
  90              		.loc 1 28 15
  91 0084 97070000 		lla	a5,.LANCHOR0
  91      93870700 
  92 008c 23B0A700 		sd	a0,0(a5)
  29:src/TCB.cpp   **** 
  93              		.loc 1 29 2 is_stmt 1
  29:src/TCB.cpp   **** 
  94              		.loc 1 29 24 is_stmt 0
  95 0090 23B40700 		sd	zero,8(a5)
  33:src/TCB.cpp   **** 		Riscv::ms_sstatus(Riscv::SSTATUS_SPP);
GAS LISTING /tmp/ccdK4uAb.s 			page 4


  96              		.loc 1 33 2 is_stmt 1
  33:src/TCB.cpp   **** 		Riscv::ms_sstatus(Riscv::SSTATUS_SPP);
  97              		.loc 1 33 20 is_stmt 0
  98 0094 83370501 		ld	a5,16(a0)
  33:src/TCB.cpp   **** 		Riscv::ms_sstatus(Riscv::SSTATUS_SPP);
  99              		.loc 1 33 2
 100 0098 63800704 		beqz	a5,.L10
  36:src/TCB.cpp   **** 	}
 101              		.loc 1 36 3 is_stmt 1
 102              	.LVL5:
 103              	.LBB10:
 104              	.LBB11:
 105              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 5/17/23.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJEKAT2023_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJEKAT2023_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** class Riscv {
  11:src/../h/Riscv.hpp **** public:
  12:src/../h/Riscv.hpp **** 
  13:src/../h/Riscv.hpp **** 	static void popSppSpie();
  14:src/../h/Riscv.hpp **** 
  15:src/../h/Riscv.hpp **** 	//stavljanje registara x3-x31 na stek
  16:src/../h/Riscv.hpp **** 	static void pushRegisters();    //implementacija u asm
  17:src/../h/Riscv.hpp **** 
  18:src/../h/Riscv.hpp **** 	//skidanje registara x3-x31 sa steka
  19:src/../h/Riscv.hpp **** 	static void popRegisters();     //implementacija u asm
  20:src/../h/Riscv.hpp **** 
  21:src/../h/Riscv.hpp **** 	//read scause
  22:src/../h/Riscv.hpp **** 	static uint64 r_scause();
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp **** 	//write scause
  25:src/../h/Riscv.hpp **** 	static void w_scause(uint64 scause);
  26:src/../h/Riscv.hpp **** 
  27:src/../h/Riscv.hpp **** 	//read sepc
  28:src/../h/Riscv.hpp **** 	static uint64 r_sepc();
  29:src/../h/Riscv.hpp **** 
  30:src/../h/Riscv.hpp **** 	//write sepc
  31:src/../h/Riscv.hpp **** 	static void w_sepc(uint64 sepc);
  32:src/../h/Riscv.hpp **** 
  33:src/../h/Riscv.hpp **** 	//read stvec
  34:src/../h/Riscv.hpp **** 	static uint64 r_stvec();
  35:src/../h/Riscv.hpp **** 
  36:src/../h/Riscv.hpp **** 	//write stvec
  37:src/../h/Riscv.hpp **** 	static void w_stvec(uint64 stvec);
  38:src/../h/Riscv.hpp **** 
  39:src/../h/Riscv.hpp **** 	enum BitMaskSip {
  40:src/../h/Riscv.hpp **** 		//postoji zahtev za softverski prekid
  41:src/../h/Riscv.hpp **** 		SIP_SSIP = (1 << 1),
  42:src/../h/Riscv.hpp **** 		//postoji prekid od tajmera
  43:src/../h/Riscv.hpp **** 		SIP_STIP = (1 << 5),
  44:src/../h/Riscv.hpp **** 		//postoji zahtev za spoljasnji hardverski prekid
GAS LISTING /tmp/ccdK4uAb.s 			page 5


  45:src/../h/Riscv.hpp **** 		SIP_SEIP = (1 << 9)
  46:src/../h/Riscv.hpp **** 	};
  47:src/../h/Riscv.hpp **** 
  48:src/../h/Riscv.hpp **** 	//mask set sip
  49:src/../h/Riscv.hpp **** 	static void ms_sip(uint64 mask);
  50:src/../h/Riscv.hpp **** 
  51:src/../h/Riscv.hpp **** 	//mask clear sip
  52:src/../h/Riscv.hpp **** 	static void mc_sip(uint64 mask);
  53:src/../h/Riscv.hpp **** 
  54:src/../h/Riscv.hpp **** 	//read sip
  55:src/../h/Riscv.hpp **** 	static uint64 r_sip();
  56:src/../h/Riscv.hpp **** 
  57:src/../h/Riscv.hpp **** 	//write sip
  58:src/../h/Riscv.hpp **** 	static void w_sip(uint64 sip);
  59:src/../h/Riscv.hpp **** 
  60:src/../h/Riscv.hpp **** 	//kada se pozove sret, SIE dobija vrednost SPIE, SPIE se postavlja na 1,
  61:src/../h/Riscv.hpp **** 	//rezim se postavlja na osnovu SPP bita, SPP se postavlja na 0
  62:src/../h/Riscv.hpp **** 	enum BitMaskSstatus {
  63:src/../h/Riscv.hpp **** 		//1 - dozvoljeni prekidi; 0- nedozvoljeni prekidi; igonrise se u korisnickom rezimu
  64:src/../h/Riscv.hpp **** 		SSTATUS_SIE = (1 << 1),
  65:src/../h/Riscv.hpp **** 		//prethodna vrednost bita SIE
  66:src/../h/Riscv.hpp **** 		SSTATUS_SPIE = (1 << 5),
  67:src/../h/Riscv.hpp **** 		//iz kog rezima se desio skok; 0 - iz korisnickog; 1 - iz sistemskog
  68:src/../h/Riscv.hpp **** 		SSTATUS_SPP = (1 << 8)
  69:src/../h/Riscv.hpp **** 	};
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp **** 	//mask set sstatus
  72:src/../h/Riscv.hpp **** 	static void ms_sstatus(uint64 mask);
  73:src/../h/Riscv.hpp **** 
  74:src/../h/Riscv.hpp **** 	//mask clear sstatus
  75:src/../h/Riscv.hpp **** 	static void mc_sstatus(uint64 mask);
  76:src/../h/Riscv.hpp **** 
  77:src/../h/Riscv.hpp **** 	//read sstatus
  78:src/../h/Riscv.hpp **** 	static uint64 r_sstatus();
  79:src/../h/Riscv.hpp **** 
  80:src/../h/Riscv.hpp **** 	//write sstatus
  81:src/../h/Riscv.hpp **** 	static void w_sstatus(uint64 sstatus);
  82:src/../h/Riscv.hpp **** 
  83:src/../h/Riscv.hpp **** 	//upisuje kod sistemskog poziva u registar a0
  84:src/../h/Riscv.hpp **** 	static void loadOpCode(uint64 opCode);
  85:src/../h/Riscv.hpp **** 
  86:src/../h/Riscv.hpp **** };
  87:src/../h/Riscv.hpp **** 
  88:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause() {
  89:src/../h/Riscv.hpp **** 	uint64 volatile scause;
  90:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[scause], scause": [scause] "=r"(scause));
  91:src/../h/Riscv.hpp **** 	return scause;
  92:src/../h/Riscv.hpp **** }
  93:src/../h/Riscv.hpp **** 
  94:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
  95:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw scause, %[scause]": :[scause] "r"(scause));
  96:src/../h/Riscv.hpp **** }
  97:src/../h/Riscv.hpp **** 
  98:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc() {
  99:src/../h/Riscv.hpp **** 	uint64 volatile sepc;
 100:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[sepc], sepc": [sepc] "=r"(sepc));
 101:src/../h/Riscv.hpp **** 	return sepc;
GAS LISTING /tmp/ccdK4uAb.s 			page 6


 102:src/../h/Riscv.hpp **** }
 103:src/../h/Riscv.hpp **** 
 104:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
 105:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 106:src/../h/Riscv.hpp **** }
 107:src/../h/Riscv.hpp **** 
 108:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec() {
 109:src/../h/Riscv.hpp **** 	uint64 volatile stvec;
 110:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[stvec], stvec": [stvec] "=r"(stvec));
 111:src/../h/Riscv.hpp **** 	return stvec;
 112:src/../h/Riscv.hpp **** }
 113:src/../h/Riscv.hpp **** 
 114:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 115:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw stvec, %[stvec]": :[stvec] "r"(stvec));
 116:src/../h/Riscv.hpp **** }
 117:src/../h/Riscv.hpp **** 
 118:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 119:src/../h/Riscv.hpp **** 	__asm__ volatile("csrs sip, %[mask]": :[mask] "r"(mask));
 120:src/../h/Riscv.hpp **** }
 121:src/../h/Riscv.hpp **** 
 122:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 123:src/../h/Riscv.hpp **** 	__asm__ volatile("csrc sip, %[mask]": :[mask] "r"(mask));
 124:src/../h/Riscv.hpp **** }
 125:src/../h/Riscv.hpp **** 
 126:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip() {
 127:src/../h/Riscv.hpp **** 	uint64 volatile sip;
 128:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[sip], sip": [sip] "=r"(sip));
 129:src/../h/Riscv.hpp **** 	return sip;
 130:src/../h/Riscv.hpp **** }
 131:src/../h/Riscv.hpp **** 
 132:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip) {
 133:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw sip, %[sip]": :[sip] "r"(sip));
 134:src/../h/Riscv.hpp **** }
 135:src/../h/Riscv.hpp **** 
 136:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
 137:src/../h/Riscv.hpp **** 	__asm__ volatile("csrs sstatus, %[mask]": :[mask] "r"(mask));
 138:src/../h/Riscv.hpp **** }
 139:src/../h/Riscv.hpp **** 
 140:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask) {
 141:src/../h/Riscv.hpp **** 	__asm__ volatile("csrc sstatus, %[mask]": :[mask] "r"(mask));
 106              		.loc 2 141 2
 107              		.loc 2 141 62 is_stmt 0
 108 009c 93070010 		li	a5,256
 109              	#APP
 110              	# 141 "src/../h/Riscv.hpp" 1
 142              	}
 111              		csrc sstatus, a5
 112              	# 0 "" 2
 113              	.LVL6:
 114              	#NO_APP
 115              	.L6:
 116              	.LBE11:
 117              	.LBE10:
  39:src/TCB.cpp   **** }
 118              		.loc 1 39 2 is_stmt 1
 119 00a4 6388B400 		beq	s1,a1,.L3
  39:src/TCB.cpp   **** }
GAS LISTING /tmp/ccdK4uAb.s 			page 7


 120              		.loc 1 39 27 discriminator 1
  39:src/TCB.cpp   **** }
 121              		.loc 1 39 45 is_stmt 0 discriminator 1
 122 00a8 13850400 		mv	a0,s1
 123 00ac 97000000 		call	_ZN3TCB13contextSwitchEPNS_7ContextES1_@plt
 123      E7800000 
 124              	.LVL7:
 125              	.L3:
  40:src/TCB.cpp   **** 
 126              		.loc 1 40 1
 127 00b4 83308101 		ld	ra,24(sp)
 128              		.cfi_remember_state
 129              		.cfi_restore 1
 130 00b8 03340101 		ld	s0,16(sp)
 131              		.cfi_restore 8
 132              		.cfi_def_cfa 2, 32
 133 00bc 83348100 		ld	s1,8(sp)
 134              		.cfi_restore 9
 135              	.LVL8:
 136 00c0 13010102 		addi	sp,sp,32
 137              		.cfi_def_cfa_offset 0
 138 00c4 67800000 		jr	ra
 139              	.LVL9:
 140              	.L9:
 141              		.cfi_restore_state
  26:src/TCB.cpp   **** 	}
 142              		.loc 1 26 3 is_stmt 1
  26:src/TCB.cpp   **** 	}
 143              		.loc 1 26 17 is_stmt 0
 144 00c8 13850400 		mv	a0,s1
 145 00cc 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 145      E7800000 
 146              	.LVL10:
 147 00d4 6FF05FFA 		j	.L4
 148              	.L10:
  34:src/TCB.cpp   **** 	} else {
 149              		.loc 1 34 3 is_stmt 1
 150              	.LVL11:
 151              	.LBB12:
 152              	.LBB13:
 137:src/../h/Riscv.hpp **** }
 153              		.loc 2 137 2
 137:src/../h/Riscv.hpp **** }
 154              		.loc 2 137 62 is_stmt 0
 155 00d8 93070010 		li	a5,256
 156              	#APP
 157              	# 137 "src/../h/Riscv.hpp" 1
 138:src/../h/Riscv.hpp **** 
 158              		csrs sstatus, a5
 159              	# 0 "" 2
 160              		.loc 2 138 1
 161              	#NO_APP
 162 00e0 6FF05FFC 		j	.L6
 163              	.LBE13:
 164              	.LBE12:
 165              		.cfi_endproc
 166              	.LFE32:
GAS LISTING /tmp/ccdK4uAb.s 			page 8


 168              		.align	2
 169              		.globl	_ZN3TCB5yieldEv
 171              	_ZN3TCB5yieldEv:
 172              	.LFB33:
  42:src/TCB.cpp   **** 	Riscv::pushRegisters();
 173              		.loc 1 42 19 is_stmt 1
 174              		.cfi_startproc
 175 00e4 130101FF 		addi	sp,sp,-16
 176              		.cfi_def_cfa_offset 16
 177 00e8 23341100 		sd	ra,8(sp)
 178 00ec 23308100 		sd	s0,0(sp)
 179              		.cfi_offset 1, -8
 180              		.cfi_offset 8, -16
 181 00f0 13040101 		addi	s0,sp,16
 182              		.cfi_def_cfa 8, 0
  43:src/TCB.cpp   **** 	TCB::dispatch();
 183              		.loc 1 43 2
  43:src/TCB.cpp   **** 	TCB::dispatch();
 184              		.loc 1 43 22 is_stmt 0
 185 00f4 97000000 		call	_ZN5Riscv13pushRegistersEv@plt
 185      E7800000 
 186              	.LVL12:
  44:src/TCB.cpp   **** 	Riscv::popRegisters();
 187              		.loc 1 44 2 is_stmt 1
  44:src/TCB.cpp   **** 	Riscv::popRegisters();
 188              		.loc 1 44 15 is_stmt 0
 189 00fc 97000000 		call	_ZN3TCB8dispatchEv
 189      E7800000 
 190              	.LVL13:
  45:src/TCB.cpp   **** }
 191              		.loc 1 45 2 is_stmt 1
  45:src/TCB.cpp   **** }
 192              		.loc 1 45 21 is_stmt 0
 193 0104 97000000 		call	_ZN5Riscv12popRegistersEv@plt
 193      E7800000 
 194              	.LVL14:
  46:src/TCB.cpp   **** 
 195              		.loc 1 46 1
 196 010c 83308100 		ld	ra,8(sp)
 197              		.cfi_restore 1
 198 0110 03340100 		ld	s0,0(sp)
 199              		.cfi_restore 8
 200              		.cfi_def_cfa 2, 16
 201 0114 13010101 		addi	sp,sp,16
 202              		.cfi_def_cfa_offset 0
 203 0118 67800000 		jr	ra
 204              		.cfi_endproc
 205              	.LFE33:
 207              		.align	2
 208              		.globl	_ZN3TCBnwEm
 210              	_ZN3TCBnwEm:
 211              	.LFB35:
  58:src/TCB.cpp   **** 
  59:src/TCB.cpp   **** void* TCB::operator new(size_t size) {
 212              		.loc 1 59 38 is_stmt 1
 213              		.cfi_startproc
 214              	.LVL15:
GAS LISTING /tmp/ccdK4uAb.s 			page 9


 215 011c 130101FF 		addi	sp,sp,-16
 216              		.cfi_def_cfa_offset 16
 217 0120 23341100 		sd	ra,8(sp)
 218 0124 23308100 		sd	s0,0(sp)
 219              		.cfi_offset 1, -8
 220              		.cfi_offset 8, -16
 221 0128 13040101 		addi	s0,sp,16
 222              		.cfi_def_cfa 8, 0
  60:src/TCB.cpp   **** 	return MemoryAllocator::kmalloc(size + sizeof(MemoryAllocator::UsedMemSegment));
 223              		.loc 1 60 2
 224              		.loc 1 60 33 is_stmt 0
 225 012c 13050501 		addi	a0,a0,16
 226              	.LVL16:
 227 0130 97000000 		call	_ZN15MemoryAllocator7kmallocEm@plt
 227      E7800000 
 228              	.LVL17:
  61:src/TCB.cpp   **** }
 229              		.loc 1 61 1
 230 0138 83308100 		ld	ra,8(sp)
 231              		.cfi_restore 1
 232 013c 03340100 		ld	s0,0(sp)
 233              		.cfi_restore 8
 234              		.cfi_def_cfa 2, 16
 235 0140 13010101 		addi	sp,sp,16
 236              		.cfi_def_cfa_offset 0
 237 0144 67800000 		jr	ra
 238              		.cfi_endproc
 239              	.LFE35:
 241              		.align	2
 242              		.globl	_ZN3TCB12createThreadEPFvPvES0_Pm
 244              	_ZN3TCB12createThreadEPFvPvES0_Pm:
 245              	.LFB31:
  14:src/TCB.cpp   **** 	//pravljenje niti
 246              		.loc 1 14 71 is_stmt 1
 247              		.cfi_startproc
 248              	.LVL18:
 249 0148 130101FD 		addi	sp,sp,-48
 250              		.cfi_def_cfa_offset 48
 251 014c 23341102 		sd	ra,40(sp)
 252 0150 23308102 		sd	s0,32(sp)
 253 0154 233C9100 		sd	s1,24(sp)
 254 0158 23382101 		sd	s2,16(sp)
 255 015c 23343101 		sd	s3,8(sp)
 256 0160 23304101 		sd	s4,0(sp)
 257              		.cfi_offset 1, -8
 258              		.cfi_offset 8, -16
 259              		.cfi_offset 9, -24
 260              		.cfi_offset 18, -32
 261              		.cfi_offset 19, -40
 262              		.cfi_offset 20, -48
 263 0164 13040103 		addi	s0,sp,48
 264              		.cfi_def_cfa 8, 0
 265 0168 93090500 		mv	s3,a0
 266 016c 138A0500 		mv	s4,a1
 267 0170 13090600 		mv	s2,a2
  16:src/TCB.cpp   **** 
 268              		.loc 1 16 2
GAS LISTING /tmp/ccdK4uAb.s 			page 10


  16:src/TCB.cpp   **** 
 269              		.loc 1 16 48 is_stmt 0
 270 0174 13050005 		li	a0,80
 271              	.LVL19:
 272 0178 97000000 		call	_ZN3TCBnwEm
 272      E7800000 
 273              	.LVL20:
 274 0180 93040500 		mv	s1,a0
 275              	.LVL21:
 276              	.LBB14:
 277              	.LBB15:
 278              		.file 3 "src/../h/TCB.hpp"
   1:src/../h/TCB.hpp **** //
   2:src/../h/TCB.hpp **** // Created by os on 5/23/23.
   3:src/../h/TCB.hpp **** //
   4:src/../h/TCB.hpp **** 
   5:src/../h/TCB.hpp **** #ifndef PROJEKAT2023_TCB_HPP
   6:src/../h/TCB.hpp **** #define PROJEKAT2023_TCB_HPP
   7:src/../h/TCB.hpp **** 
   8:src/../h/TCB.hpp **** #include "../lib/hw.h"
   9:src/../h/TCB.hpp **** 
  10:src/../h/TCB.hpp **** class TCB {
  11:src/../h/TCB.hpp **** public:
  12:src/../h/TCB.hpp **** 	friend class Scheduler;
  13:src/../h/TCB.hpp **** 
  14:src/../h/TCB.hpp **** 	using Body = void (*)(void*);
  15:src/../h/TCB.hpp **** 
  16:src/../h/TCB.hpp **** 	static TCB* createThread(Body function, void* args, uint64* stack);
  17:src/../h/TCB.hpp **** 
  18:src/../h/TCB.hpp **** 	bool isFinished() { return finished; }
  19:src/../h/TCB.hpp **** 
  20:src/../h/TCB.hpp **** 	void setFinished(bool finish) { this->finished = finish; }
  21:src/../h/TCB.hpp **** 
  22:src/../h/TCB.hpp **** 	bool isBlocked() { return blocked; }
  23:src/../h/TCB.hpp **** 
  24:src/../h/TCB.hpp **** 	void setBlocked(bool block) { this->blocked = block; }
  25:src/../h/TCB.hpp **** 
  26:src/../h/TCB.hpp **** 	uint64 getTimeSlice() { return timeSlice; }
  27:src/../h/TCB.hpp **** 
  28:src/../h/TCB.hpp **** 	void setTimeSlice(uint64 value) { timeSlice = value; }
  29:src/../h/TCB.hpp **** 
  30:src/../h/TCB.hpp **** 	//static void threadSleep(time_t sleepTime);
  31:src/../h/TCB.hpp **** 
  32:src/../h/TCB.hpp **** 	static void threadJoin(TCB* handle);
  33:src/../h/TCB.hpp **** 
  34:src/../h/TCB.hpp **** 	static void yield();
  35:src/../h/TCB.hpp **** 
  36:src/../h/TCB.hpp **** 	static void dispatch();
  37:src/../h/TCB.hpp **** 
  38:src/../h/TCB.hpp **** 	static void wrapper();
  39:src/../h/TCB.hpp **** 
  40:src/../h/TCB.hpp **** 	static TCB* running;
  41:src/../h/TCB.hpp **** 	static uint64 runningTimeSlice;
  42:src/../h/TCB.hpp **** 
  43:src/../h/TCB.hpp **** //	TCB* getNextInScheduler(){
  44:src/../h/TCB.hpp **** //		return nextInScheduler;
  45:src/../h/TCB.hpp **** //	}
GAS LISTING /tmp/ccdK4uAb.s 			page 11


  46:src/../h/TCB.hpp **** //	void setNextInScheduler(TCB* tcb){
  47:src/../h/TCB.hpp **** //		nextInScheduler = tcb;
  48:src/../h/TCB.hpp **** //	}
  49:src/../h/TCB.hpp **** 
  50:src/../h/TCB.hpp **** private:
  51:src/../h/TCB.hpp **** 	//kontekst procesora za datu nit
  52:src/../h/TCB.hpp **** 	struct Context {
  53:src/../h/TCB.hpp **** 		uint64 ra;
  54:src/../h/TCB.hpp **** 		uint64 sp;
  55:src/../h/TCB.hpp **** 	} context;
  56:src/../h/TCB.hpp **** 	Body threadFunction;    //funkcija koja se izvrsava
  57:src/../h/TCB.hpp **** 	uint64* stack;            //najniza adresa steka; stek raste ka nizim adresama, pokazuje na posled
  58:src/../h/TCB.hpp **** 	void* args;                //argumenti poziva funkcije
  59:src/../h/TCB.hpp **** 	uint64 timeSlice;        //vremenski odsecak dodeljen datoj niti
  60:src/../h/TCB.hpp **** 	bool finished;            //da li je nit zavrsila izvrsavanje funkcije
  61:src/../h/TCB.hpp **** 	bool blocked;            //da li je nit blokirana
  62:src/../h/TCB.hpp **** 	TCB* nextInScheduler;    // pokazivac na sledecu nit u Scheduler-u
  63:src/../h/TCB.hpp **** 	time_t timeToSleep;
  64:src/../h/TCB.hpp **** 	TCB* nextSleeping;
  65:src/../h/TCB.hpp **** 
  66:src/../h/TCB.hpp **** 	TCB(Body function, void* args, uint64* stack) : threadFunction(function), stack(stack), args(args)
  67:src/../h/TCB.hpp **** 													timeSlice(DEFAULT_TIME_SLICE), finished(false), blocked(false),
  68:src/../h/TCB.hpp **** 													nextInScheduler(nullptr), timeToSleep(0), nextSleeping(nullptr) {
 279              		.loc 3 68 76
 280 0184 23383501 		sd	s3,16(a0)
 281 0188 233C2501 		sd	s2,24(a0)
 282 018c 23304503 		sd	s4,32(a0)
 283 0190 93072000 		li	a5,2
 284 0194 2334F502 		sd	a5,40(a0)
 285 0198 23080502 		sb	zero,48(a0)
 286 019c A3080502 		sb	zero,49(a0)
 287 01a0 233C0502 		sd	zero,56(a0)
 288 01a4 23300504 		sd	zero,64(a0)
 289 01a8 23340504 		sd	zero,72(a0)
 290              	.LBB16:
  69:src/../h/TCB.hpp **** 		//formiranje pocetnog konteksta; specijalni uslovi za main funkciju kojoj se pocetni kontekst aut
  70:src/../h/TCB.hpp **** 		uint64 startRa = threadFunction != nullptr ? (uint64)&wrapper : 0;
 291              		.loc 3 70 3 is_stmt 1
 292              		.loc 3 70 46 is_stmt 0
 293 01ac 638A0904 		beqz	s3,.L19
 294 01b0 97070000 		lla	a5,_ZN3TCB7wrapperEv
 294      93870700 
 295              	.L16:
 296              	.LVL22:
  71:src/../h/TCB.hpp **** 		uint64 startSp = stack != nullptr ? (uint64)&stack[DEFAULT_STACK_SIZE] : 0;
 297              		.loc 3 71 3 is_stmt 1
 298              		.loc 3 71 37 is_stmt 0
 299 01b8 63080904 		beqz	s2,.L20
 300              		.loc 3 71 47
 301 01bc 37860000 		li	a2,32768
 302 01c0 3309C900 		add	s2,s2,a2
 303              	.LVL23:
 304              	.L17:
  72:src/../h/TCB.hpp **** 		this->context.ra = startRa;
 305              		.loc 3 72 3 is_stmt 1
 306              		.loc 3 72 20 is_stmt 0
 307 01c4 23B0F400 		sd	a5,0(s1)
GAS LISTING /tmp/ccdK4uAb.s 			page 12


  73:src/../h/TCB.hpp **** 		this->context.sp = startSp;
 308              		.loc 3 73 3 is_stmt 1
 309              		.loc 3 73 20 is_stmt 0
 310 01c8 23B42401 		sd	s2,8(s1)
 311              	.LVL24:
 312              	.LBE16:
 313              	.LBE15:
 314              	.LBE14:
  19:src/TCB.cpp   **** 	return newThread;
 315              		.loc 1 19 2 is_stmt 1
 316 01cc 63880900 		beqz	s3,.L15
  19:src/TCB.cpp   **** 	return newThread;
 317              		.loc 1 19 27 discriminator 1
  19:src/TCB.cpp   **** 	return newThread;
 318              		.loc 1 19 41 is_stmt 0 discriminator 1
 319 01d0 13850400 		mv	a0,s1
 320 01d4 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 320      E7800000 
 321              	.LVL25:
  20:src/TCB.cpp   **** }
 322              		.loc 1 20 2 is_stmt 1 discriminator 1
 323              	.L15:
  21:src/TCB.cpp   **** 
 324              		.loc 1 21 1 is_stmt 0
 325 01dc 13850400 		mv	a0,s1
 326 01e0 83308102 		ld	ra,40(sp)
 327              		.cfi_remember_state
 328              		.cfi_restore 1
 329 01e4 03340102 		ld	s0,32(sp)
 330              		.cfi_restore 8
 331              		.cfi_def_cfa 2, 48
 332 01e8 83348101 		ld	s1,24(sp)
 333              		.cfi_restore 9
 334              	.LVL26:
 335 01ec 03390101 		ld	s2,16(sp)
 336              		.cfi_restore 18
 337              	.LVL27:
 338 01f0 83398100 		ld	s3,8(sp)
 339              		.cfi_restore 19
 340              	.LVL28:
 341 01f4 033A0100 		ld	s4,0(sp)
 342              		.cfi_restore 20
 343              	.LVL29:
 344 01f8 13010103 		addi	sp,sp,48
 345              		.cfi_def_cfa_offset 0
 346 01fc 67800000 		jr	ra
 347              	.LVL30:
 348              	.L19:
 349              		.cfi_restore_state
 350              	.LBB19:
 351              	.LBB18:
 352              	.LBB17:
  70:src/../h/TCB.hpp **** 		uint64 startSp = stack != nullptr ? (uint64)&stack[DEFAULT_STACK_SIZE] : 0;
 353              		.loc 3 70 46
 354 0200 93070000 		li	a5,0
 355 0204 6FF05FFB 		j	.L16
 356              	.LVL31:
GAS LISTING /tmp/ccdK4uAb.s 			page 13


 357              	.L20:
  71:src/../h/TCB.hpp **** 		this->context.ra = startRa;
 358              		.loc 3 71 37
 359 0208 13090000 		li	s2,0
 360              	.LVL32:
 361 020c 6FF09FFB 		j	.L17
 362              	.LBE17:
 363              	.LBE18:
 364              	.LBE19:
 365              		.cfi_endproc
 366              	.LFE31:
 368              		.align	2
 369              		.globl	_ZN3TCBdlEPv
 371              	_ZN3TCBdlEPv:
 372              	.LFB36:
  62:src/TCB.cpp   **** 
  63:src/TCB.cpp   **** void TCB::operator delete(void* ptr) {
 373              		.loc 1 63 38 is_stmt 1
 374              		.cfi_startproc
 375              	.LVL33:
 376 0210 130101FF 		addi	sp,sp,-16
 377              		.cfi_def_cfa_offset 16
 378 0214 23341100 		sd	ra,8(sp)
 379 0218 23308100 		sd	s0,0(sp)
 380              		.cfi_offset 1, -8
 381              		.cfi_offset 8, -16
 382 021c 13040101 		addi	s0,sp,16
 383              		.cfi_def_cfa 8, 0
  64:src/TCB.cpp   **** 	MemoryAllocator::kfree(ptr);
 384              		.loc 1 64 2
 385              		.loc 1 64 24 is_stmt 0
 386 0220 97000000 		call	_ZN15MemoryAllocator5kfreeEPv@plt
 386      E7800000 
 387              	.LVL34:
  65:src/TCB.cpp   **** }
 388              		.loc 1 65 1
 389 0228 83308100 		ld	ra,8(sp)
 390              		.cfi_restore 1
 391 022c 03340100 		ld	s0,0(sp)
 392              		.cfi_restore 8
 393              		.cfi_def_cfa 2, 16
 394 0230 13010101 		addi	sp,sp,16
 395              		.cfi_def_cfa_offset 0
 396 0234 67800000 		jr	ra
 397              		.cfi_endproc
 398              	.LFE36:
 400              		.globl	_ZN3TCB16runningTimeSliceE
 401              		.globl	_ZN3TCB7runningE
 402              		.bss
 403              		.align	3
 404              		.set	.LANCHOR0,. + 0
 407              	_ZN3TCB7runningE:
 408 0000 00000000 		.zero	8
 408      00000000 
 411              	_ZN3TCB16runningTimeSliceE:
 412 0008 00000000 		.zero	8
 412      00000000 
GAS LISTING /tmp/ccdK4uAb.s 			page 14


 413              		.text
 414              	.Letext0:
 415              		.file 4 "src/../h/../lib/hw.h"
 416              		.file 5 "src/../h/Scheduler.hpp"
 417              		.file 6 "src/../h/MemoryAllocator.hpp"
 418              		.file 7 "src/../h/syscall_c.hpp"
GAS LISTING /tmp/ccdK4uAb.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 TCB.cpp
     /tmp/ccdK4uAb.s:9      .text:0000000000000000 _ZN3TCB7wrapperEv
     /tmp/ccdK4uAb.s:13     .text:0000000000000000 .L0 
     /tmp/ccdK4uAb.s:14     .text:0000000000000000 .L0 
     /tmp/ccdK4uAb.s:15     .text:0000000000000004 .L0 
     /tmp/ccdK4uAb.s:18     .text:000000000000000c .L0 
     /tmp/ccdK4uAb.s:19     .text:000000000000000c .L0 
     /tmp/ccdK4uAb.s:21     .text:0000000000000010 .L0 
     /tmp/ccdK4uAb.s:23     .text:0000000000000010 .L0 
     /tmp/ccdK4uAb.s:24     .text:0000000000000010 .L0 
     /tmp/ccdK4uAb.s:27     .text:0000000000000018 .L0 
     /tmp/ccdK4uAb.s:28     .text:0000000000000018 .L0 
     /tmp/ccdK4uAb.s:31     .text:0000000000000024 .L0 
     /tmp/ccdK4uAb.s:35     .text:000000000000002c .L0 
     /tmp/ccdK4uAb.s:36     .text:000000000000002c .L0 
     /tmp/ccdK4uAb.s:39     .text:0000000000000034 .L0 
     /tmp/ccdK4uAb.s:40     .text:0000000000000038 .L0 
     /tmp/ccdK4uAb.s:42     .text:000000000000003c .L0 
     /tmp/ccdK4uAb.s:43     .text:000000000000003c .L0 
     /tmp/ccdK4uAb.s:45     .text:0000000000000040 .L0 
     /tmp/ccdK4uAb.s:47     .text:0000000000000044 .L0 
     /tmp/ccdK4uAb.s:53     .text:0000000000000044 _ZN3TCB8dispatchEv
     /tmp/ccdK4uAb.s:56     .text:0000000000000044 .L0 
     /tmp/ccdK4uAb.s:57     .text:0000000000000044 .L0 
     /tmp/ccdK4uAb.s:58     .text:0000000000000048 .L0 
     /tmp/ccdK4uAb.s:62     .text:0000000000000054 .L0 
     /tmp/ccdK4uAb.s:63     .text:0000000000000054 .L0 
     /tmp/ccdK4uAb.s:64     .text:0000000000000054 .L0 
     /tmp/ccdK4uAb.s:66     .text:0000000000000058 .L0 
     /tmp/ccdK4uAb.s:68     .text:0000000000000058 .L0 
     /tmp/ccdK4uAb.s:69     .text:0000000000000058 .L0 
     /tmp/ccdK4uAb.s:72     .text:0000000000000060 .L0 
     /tmp/ccdK4uAb.s:73     .text:0000000000000060 .L0 
     /tmp/ccdK4uAb.s:75     .text:0000000000000064 .L0 
     /tmp/ccdK4uAb.s:77     .text:0000000000000068 .L0 
     /tmp/ccdK4uAb.s:79     .text:000000000000006c .L0 
     /tmp/ccdK4uAb.s:81     .text:0000000000000070 .L0 
     /tmp/ccdK4uAb.s:83     .text:0000000000000074 .L0 
     /tmp/ccdK4uAb.s:86     .text:0000000000000078 .L0 
     /tmp/ccdK4uAb.s:87     .text:0000000000000078 .L0 
     /tmp/ccdK4uAb.s:91     .text:0000000000000084 .L0 
     /tmp/ccdK4uAb.s:94     .text:0000000000000090 .L0 
     /tmp/ccdK4uAb.s:95     .text:0000000000000090 .L0 
     /tmp/ccdK4uAb.s:97     .text:0000000000000094 .L0 
     /tmp/ccdK4uAb.s:98     .text:0000000000000094 .L0 
     /tmp/ccdK4uAb.s:100    .text:0000000000000098 .L0 
     /tmp/ccdK4uAb.s:106    .text:000000000000009c .L0 
     /tmp/ccdK4uAb.s:107    .text:000000000000009c .L0 
     /tmp/ccdK4uAb.s:108    .text:000000000000009c .L0 
     /tmp/ccdK4uAb.s:119    .text:00000000000000a4 .L0 
     /tmp/ccdK4uAb.s:121    .text:00000000000000a8 .L0 
     /tmp/ccdK4uAb.s:122    .text:00000000000000a8 .L0 
     /tmp/ccdK4uAb.s:127    .text:00000000000000b4 .L0 
     /tmp/ccdK4uAb.s:128    .text:00000000000000b8 .L0 
     /tmp/ccdK4uAb.s:129    .text:00000000000000b8 .L0 
     /tmp/ccdK4uAb.s:131    .text:00000000000000bc .L0 
GAS LISTING /tmp/ccdK4uAb.s 			page 16


     /tmp/ccdK4uAb.s:132    .text:00000000000000bc .L0 
     /tmp/ccdK4uAb.s:134    .text:00000000000000c0 .L0 
     /tmp/ccdK4uAb.s:137    .text:00000000000000c4 .L0 
     /tmp/ccdK4uAb.s:141    .text:00000000000000c8 .L0 
     /tmp/ccdK4uAb.s:143    .text:00000000000000c8 .L0 
     /tmp/ccdK4uAb.s:144    .text:00000000000000c8 .L0 
     /tmp/ccdK4uAb.s:153    .text:00000000000000d8 .L0 
     /tmp/ccdK4uAb.s:154    .text:00000000000000d8 .L0 
     /tmp/ccdK4uAb.s:155    .text:00000000000000d8 .L0 
     /tmp/ccdK4uAb.s:162    .text:00000000000000e0 .L0 
     /tmp/ccdK4uAb.s:165    .text:00000000000000e4 .L0 
     /tmp/ccdK4uAb.s:171    .text:00000000000000e4 _ZN3TCB5yieldEv
     /tmp/ccdK4uAb.s:174    .text:00000000000000e4 .L0 
     /tmp/ccdK4uAb.s:175    .text:00000000000000e4 .L0 
     /tmp/ccdK4uAb.s:176    .text:00000000000000e8 .L0 
     /tmp/ccdK4uAb.s:179    .text:00000000000000f0 .L0 
     /tmp/ccdK4uAb.s:180    .text:00000000000000f0 .L0 
     /tmp/ccdK4uAb.s:182    .text:00000000000000f4 .L0 
     /tmp/ccdK4uAb.s:184    .text:00000000000000f4 .L0 
     /tmp/ccdK4uAb.s:185    .text:00000000000000f4 .L0 
     /tmp/ccdK4uAb.s:188    .text:00000000000000fc .L0 
     /tmp/ccdK4uAb.s:189    .text:00000000000000fc .L0 
     /tmp/ccdK4uAb.s:192    .text:0000000000000104 .L0 
     /tmp/ccdK4uAb.s:193    .text:0000000000000104 .L0 
     /tmp/ccdK4uAb.s:196    .text:000000000000010c .L0 
     /tmp/ccdK4uAb.s:197    .text:0000000000000110 .L0 
     /tmp/ccdK4uAb.s:199    .text:0000000000000114 .L0 
     /tmp/ccdK4uAb.s:200    .text:0000000000000114 .L0 
     /tmp/ccdK4uAb.s:202    .text:0000000000000118 .L0 
     /tmp/ccdK4uAb.s:204    .text:000000000000011c .L0 
     /tmp/ccdK4uAb.s:210    .text:000000000000011c _ZN3TCBnwEm
     /tmp/ccdK4uAb.s:213    .text:000000000000011c .L0 
     /tmp/ccdK4uAb.s:215    .text:000000000000011c .L0 
     /tmp/ccdK4uAb.s:216    .text:0000000000000120 .L0 
     /tmp/ccdK4uAb.s:219    .text:0000000000000128 .L0 
     /tmp/ccdK4uAb.s:220    .text:0000000000000128 .L0 
     /tmp/ccdK4uAb.s:222    .text:000000000000012c .L0 
     /tmp/ccdK4uAb.s:224    .text:000000000000012c .L0 
     /tmp/ccdK4uAb.s:225    .text:000000000000012c .L0 
     /tmp/ccdK4uAb.s:230    .text:0000000000000138 .L0 
     /tmp/ccdK4uAb.s:231    .text:000000000000013c .L0 
     /tmp/ccdK4uAb.s:233    .text:0000000000000140 .L0 
     /tmp/ccdK4uAb.s:234    .text:0000000000000140 .L0 
     /tmp/ccdK4uAb.s:236    .text:0000000000000144 .L0 
     /tmp/ccdK4uAb.s:238    .text:0000000000000148 .L0 
     /tmp/ccdK4uAb.s:244    .text:0000000000000148 _ZN3TCB12createThreadEPFvPvES0_Pm
     /tmp/ccdK4uAb.s:247    .text:0000000000000148 .L0 
     /tmp/ccdK4uAb.s:249    .text:0000000000000148 .L0 
     /tmp/ccdK4uAb.s:250    .text:000000000000014c .L0 
     /tmp/ccdK4uAb.s:257    .text:0000000000000164 .L0 
     /tmp/ccdK4uAb.s:258    .text:0000000000000164 .L0 
     /tmp/ccdK4uAb.s:259    .text:0000000000000164 .L0 
     /tmp/ccdK4uAb.s:260    .text:0000000000000164 .L0 
     /tmp/ccdK4uAb.s:261    .text:0000000000000164 .L0 
     /tmp/ccdK4uAb.s:262    .text:0000000000000164 .L0 
     /tmp/ccdK4uAb.s:264    .text:0000000000000168 .L0 
     /tmp/ccdK4uAb.s:269    .text:0000000000000174 .L0 
GAS LISTING /tmp/ccdK4uAb.s 			page 17


     /tmp/ccdK4uAb.s:270    .text:0000000000000174 .L0 
     /tmp/ccdK4uAb.s:280    .text:0000000000000184 .L0 
     /tmp/ccdK4uAb.s:292    .text:00000000000001ac .L0 
     /tmp/ccdK4uAb.s:293    .text:00000000000001ac .L0 
     /tmp/ccdK4uAb.s:298    .text:00000000000001b8 .L0 
     /tmp/ccdK4uAb.s:299    .text:00000000000001b8 .L0 
     /tmp/ccdK4uAb.s:301    .text:00000000000001bc .L0 
     /tmp/ccdK4uAb.s:306    .text:00000000000001c4 .L0 
     /tmp/ccdK4uAb.s:307    .text:00000000000001c4 .L0 
     /tmp/ccdK4uAb.s:309    .text:00000000000001c8 .L0 
     /tmp/ccdK4uAb.s:310    .text:00000000000001c8 .L0 
     /tmp/ccdK4uAb.s:316    .text:00000000000001cc .L0 
     /tmp/ccdK4uAb.s:318    .text:00000000000001d0 .L0 
     /tmp/ccdK4uAb.s:319    .text:00000000000001d0 .L0 
     /tmp/ccdK4uAb.s:324    .text:00000000000001dc .L0 
     /tmp/ccdK4uAb.s:325    .text:00000000000001dc .L0 
     /tmp/ccdK4uAb.s:327    .text:00000000000001e4 .L0 
     /tmp/ccdK4uAb.s:328    .text:00000000000001e4 .L0 
     /tmp/ccdK4uAb.s:330    .text:00000000000001e8 .L0 
     /tmp/ccdK4uAb.s:331    .text:00000000000001e8 .L0 
     /tmp/ccdK4uAb.s:333    .text:00000000000001ec .L0 
     /tmp/ccdK4uAb.s:336    .text:00000000000001f0 .L0 
     /tmp/ccdK4uAb.s:339    .text:00000000000001f4 .L0 
     /tmp/ccdK4uAb.s:342    .text:00000000000001f8 .L0 
     /tmp/ccdK4uAb.s:345    .text:00000000000001fc .L0 
     /tmp/ccdK4uAb.s:349    .text:0000000000000200 .L0 
     /tmp/ccdK4uAb.s:354    .text:0000000000000200 .L0 
     /tmp/ccdK4uAb.s:359    .text:0000000000000208 .L0 
     /tmp/ccdK4uAb.s:365    .text:0000000000000210 .L0 
     /tmp/ccdK4uAb.s:371    .text:0000000000000210 _ZN3TCBdlEPv
     /tmp/ccdK4uAb.s:374    .text:0000000000000210 .L0 
     /tmp/ccdK4uAb.s:376    .text:0000000000000210 .L0 
     /tmp/ccdK4uAb.s:377    .text:0000000000000214 .L0 
     /tmp/ccdK4uAb.s:380    .text:000000000000021c .L0 
     /tmp/ccdK4uAb.s:381    .text:000000000000021c .L0 
     /tmp/ccdK4uAb.s:383    .text:0000000000000220 .L0 
     /tmp/ccdK4uAb.s:385    .text:0000000000000220 .L0 
     /tmp/ccdK4uAb.s:386    .text:0000000000000220 .L0 
     /tmp/ccdK4uAb.s:389    .text:0000000000000228 .L0 
     /tmp/ccdK4uAb.s:390    .text:000000000000022c .L0 
     /tmp/ccdK4uAb.s:392    .text:0000000000000230 .L0 
     /tmp/ccdK4uAb.s:393    .text:0000000000000230 .L0 
     /tmp/ccdK4uAb.s:395    .text:0000000000000234 .L0 
     /tmp/ccdK4uAb.s:397    .text:0000000000000238 .L0 
     /tmp/ccdK4uAb.s:411    .bss:0000000000000008 _ZN3TCB16runningTimeSliceE
     /tmp/ccdK4uAb.s:407    .bss:0000000000000000 _ZN3TCB7runningE
     /tmp/ccdK4uAb.s:404    .bss:0000000000000000 .LANCHOR0
     /tmp/ccdK4uAb.s:419    .text:0000000000000238 .L0 
     /tmp/ccdK4uAb.s:28     .text:0000000000000018 .L0 
     /tmp/ccdK4uAb.s:69     .text:0000000000000058 .L0 
     /tmp/ccdK4uAb.s:91     .text:0000000000000084 .L0 
     /tmp/ccdK4uAb.s:294    .text:00000000000001b0 .L0 
     /tmp/ccdK4uAb.s:84     .text:0000000000000078 .L4
     /tmp/ccdK4uAb.s:140    .text:00000000000000c8 .L9
     /tmp/ccdK4uAb.s:148    .text:00000000000000d8 .L10
     /tmp/ccdK4uAb.s:125    .text:00000000000000b4 .L3
     /tmp/ccdK4uAb.s:115    .text:00000000000000a4 .L6
GAS LISTING /tmp/ccdK4uAb.s 			page 18


     /tmp/ccdK4uAb.s:348    .text:0000000000000200 .L19
     /tmp/ccdK4uAb.s:357    .text:0000000000000208 .L20
     /tmp/ccdK4uAb.s:323    .text:00000000000001dc .L15
     /tmp/ccdK4uAb.s:295    .text:00000000000001b8 .L16
     /tmp/ccdK4uAb.s:304    .text:00000000000001c4 .L17
     /tmp/ccdK4uAb.s:1671   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccdK4uAb.s:3274   .debug_str:00000000000006dd .LASF133
     /tmp/ccdK4uAb.s:3068   .debug_str:00000000000000f8 .LASF134
     /tmp/ccdK4uAb.s:3134   .debug_str:00000000000002cf .LASF135
     /tmp/ccdK4uAb.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccdK4uAb.s:414    .text:0000000000000238 .Letext0
     /tmp/ccdK4uAb.s:3030   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccdK4uAb.s:3192   .debug_str:0000000000000494 .LASF0
     /tmp/ccdK4uAb.s:3208   .debug_str:00000000000004d9 .LASF1
     /tmp/ccdK4uAb.s:3178   .debug_str:0000000000000438 .LASF2
     /tmp/ccdK4uAb.s:3146   .debug_str:0000000000000356 .LASF4
     /tmp/ccdK4uAb.s:3252   .debug_str:0000000000000631 .LASF3
     /tmp/ccdK4uAb.s:3062   .debug_str:00000000000000b0 .LASF5
     /tmp/ccdK4uAb.s:3102   .debug_str:00000000000001e5 .LASF6
     /tmp/ccdK4uAb.s:3212   .debug_str:00000000000004fd .LASF7
     /tmp/ccdK4uAb.s:3190   .debug_str:0000000000000481 .LASF8
     /tmp/ccdK4uAb.s:3286   .debug_str:0000000000000803 .LASF9
     /tmp/ccdK4uAb.s:3132   .debug_str:00000000000002c1 .LASF10
     /tmp/ccdK4uAb.s:3230   .debug_str:0000000000000589 .LASF11
     /tmp/ccdK4uAb.s:3276   .debug_str:00000000000007a1 .LASF12
     /tmp/ccdK4uAb.s:3164   .debug_str:00000000000003c9 .LASF13
     /tmp/ccdK4uAb.s:3038   .debug_str:000000000000002a .LASF14
     /tmp/ccdK4uAb.s:3078   .debug_str:0000000000000141 .LASF15
     /tmp/ccdK4uAb.s:3246   .debug_str:00000000000005fd .LASF16
     /tmp/ccdK4uAb.s:3094   .debug_str:00000000000001a7 .LASF17
     /tmp/ccdK4uAb.s:3048   .debug_str:0000000000000065 .LASF136
     /tmp/ccdK4uAb.s:3158   .debug_str:0000000000000399 .LASF18
     /tmp/ccdK4uAb.s:3306   .debug_str:00000000000008a3 .LASF20
     /tmp/ccdK4uAb.s:3236   .debug_str:00000000000005bc .LASF137
     /tmp/ccdK4uAb.s:3214   .debug_str:0000000000000510 .LASF22
     /tmp/ccdK4uAb.s:3168   .debug_str:00000000000003f1 .LASF24
     /tmp/ccdK4uAb.s:3180   .debug_str:0000000000000446 .LASF19
     /tmp/ccdK4uAb.s:3140   .debug_str:0000000000000329 .LASF21
     /tmp/ccdK4uAb.s:3046   .debug_str:000000000000005b .LASF23
     /tmp/ccdK4uAb.s:3220   .debug_str:0000000000000531 .LASF25
     /tmp/ccdK4uAb.s:3150   .debug_str:0000000000000372 .LASF26
     /tmp/ccdK4uAb.s:3280   .debug_str:00000000000007d1 .LASF27
     /tmp/ccdK4uAb.s:3170   .debug_str:0000000000000407 .LASF28
     /tmp/ccdK4uAb.s:3228   .debug_str:0000000000000571 .LASF29
     /tmp/ccdK4uAb.s:3284   .debug_str:00000000000007f6 .LASF30
     /tmp/ccdK4uAb.s:3290   .debug_str:0000000000000834 .LASF31
     /tmp/ccdK4uAb.s:3108   .debug_str:0000000000000219 .LASF50
     /tmp/ccdK4uAb.s:3126   .debug_str:0000000000000290 .LASF52
     /tmp/ccdK4uAb.s:3248   .debug_str:0000000000000613 .LASF32
     /tmp/ccdK4uAb.s:3184   .debug_str:0000000000000459 .LASF34
     /tmp/ccdK4uAb.s:3196   .debug_str:00000000000004a8 .LASF33
     /tmp/ccdK4uAb.s:3116   .debug_str:0000000000000250 .LASF35
     /tmp/ccdK4uAb.s:3264   .debug_str:00000000000006a8 .LASF36
     /tmp/ccdK4uAb.s:3256   .debug_str:0000000000000653 .LASF37
     /tmp/ccdK4uAb.s:3114   .debug_str:0000000000000248 .LASF38
     /tmp/ccdK4uAb.s:3234   .debug_str:00000000000005ab .LASF39
     /tmp/ccdK4uAb.s:3156   .debug_str:0000000000000391 .LASF40
GAS LISTING /tmp/ccdK4uAb.s 			page 19


     /tmp/ccdK4uAb.s:3176   .debug_str:0000000000000429 .LASF41
     /tmp/ccdK4uAb.s:3198   .debug_str:00000000000004b1 .LASF42
     /tmp/ccdK4uAb.s:3200   .debug_str:00000000000004b7 .LASF43
     /tmp/ccdK4uAb.s:3204   .debug_str:00000000000004c9 .LASF44
     /tmp/ccdK4uAb.s:3152   .debug_str:000000000000037d .LASF45
     /tmp/ccdK4uAb.s:3032   .debug_str:0000000000000000 .LASF46
     /tmp/ccdK4uAb.s:3254   .debug_str:0000000000000643 .LASF47
     /tmp/ccdK4uAb.s:3142   .debug_str:0000000000000340 .LASF48
     /tmp/ccdK4uAb.s:3216   .debug_str:000000000000051b .LASF49
     /tmp/ccdK4uAb.s:3310   .debug_str:00000000000008dd .LASF102
     /tmp/ccdK4uAb.s:3294   .debug_str:000000000000085b .LASF93
     /tmp/ccdK4uAb.s:3136   .debug_str:00000000000002ed .LASF95
     /tmp/ccdK4uAb.s:3298   .debug_str:0000000000000874 .LASF51
     /tmp/ccdK4uAb.s:3268   .debug_str:00000000000006b8 .LASF53
     /tmp/ccdK4uAb.s:3260   .debug_str:0000000000000683 .LASF138
     /tmp/ccdK4uAb.s:3240   .debug_str:00000000000005c6 .LASF139
     /tmp/ccdK4uAb.s:3118   .debug_str:0000000000000263 .LASF54
     /tmp/ccdK4uAb.s:3206   .debug_str:00000000000004d3 .LASF55
     /tmp/ccdK4uAb.s:3098   .debug_str:00000000000001d1 .LASF140
     /tmp/ccdK4uAb.s:3088   .debug_str:000000000000017b .LASF56
     /tmp/ccdK4uAb.s:3162   .debug_str:00000000000003bc .LASF57
     /tmp/ccdK4uAb.s:3064   .debug_str:00000000000000b7 .LASF58
     /tmp/ccdK4uAb.s:3242   .debug_str:00000000000005d3 .LASF59
     /tmp/ccdK4uAb.s:3308   .debug_str:00000000000008c5 .LASF60
     /tmp/ccdK4uAb.s:3060   .debug_str:00000000000000a2 .LASF61
     /tmp/ccdK4uAb.s:3112   .debug_str:000000000000022d .LASF62
     /tmp/ccdK4uAb.s:3120   .debug_str:0000000000000268 .LASF63
     /tmp/ccdK4uAb.s:3036   .debug_str:0000000000000010 .LASF64
     /tmp/ccdK4uAb.s:3040   .debug_str:000000000000003a .LASF67
     /tmp/ccdK4uAb.s:3262   .debug_str:0000000000000693 .LASF69
     /tmp/ccdK4uAb.s:3110   .debug_str:0000000000000224 .LASF65
     /tmp/ccdK4uAb.s:3084   .debug_str:000000000000015e .LASF66
     /tmp/ccdK4uAb.s:3182   .debug_str:0000000000000452 .LASF68
     /tmp/ccdK4uAb.s:3232   .debug_str:0000000000000598 .LASF70
     /tmp/ccdK4uAb.s:3272   .debug_str:00000000000006d6 .LASF71
     /tmp/ccdK4uAb.s:3130   .debug_str:00000000000002ae .LASF72
     /tmp/ccdK4uAb.s:3124   .debug_str:0000000000000288 .LASF73
     /tmp/ccdK4uAb.s:3096   .debug_str:00000000000001bd .LASF74
     /tmp/ccdK4uAb.s:3034   .debug_str:0000000000000008 .LASF75
     /tmp/ccdK4uAb.s:3138   .debug_str:0000000000000315 .LASF76
     /tmp/ccdK4uAb.s:3194   .debug_str:00000000000004a1 .LASF77
     /tmp/ccdK4uAb.s:3304   .debug_str:0000000000000890 .LASF78
     /tmp/ccdK4uAb.s:3058   .debug_str:000000000000009b .LASF79
     /tmp/ccdK4uAb.s:3122   .debug_str:0000000000000275 .LASF80
     /tmp/ccdK4uAb.s:3128   .debug_str:00000000000002a8 .LASF81
     /tmp/ccdK4uAb.s:3270   .debug_str:00000000000006c4 .LASF82
     /tmp/ccdK4uAb.s:3056   .debug_str:0000000000000095 .LASF83
     /tmp/ccdK4uAb.s:3322   .debug_str:0000000000000931 .LASF84
     /tmp/ccdK4uAb.s:3312   .debug_str:00000000000008f3 .LASF85
     /tmp/ccdK4uAb.s:3250   .debug_str:0000000000000619 .LASF86
     /tmp/ccdK4uAb.s:3154   .debug_str:0000000000000386 .LASF87
     /tmp/ccdK4uAb.s:3166   .debug_str:00000000000003d9 .LASF88
     /tmp/ccdK4uAb.s:3076   .debug_str:0000000000000137 .LASF89
     /tmp/ccdK4uAb.s:3222   .debug_str:0000000000000545 .LASF90
     /tmp/ccdK4uAb.s:3052   .debug_str:000000000000007f .LASF91
     /tmp/ccdK4uAb.s:3070   .debug_str:0000000000000104 .LASF92
     /tmp/ccdK4uAb.s:3080   .debug_str:000000000000014d .LASF94
GAS LISTING /tmp/ccdK4uAb.s 			page 20


     /tmp/ccdK4uAb.s:3316   .debug_str:0000000000000903 .LASF96
     /tmp/ccdK4uAb.s:3224   .debug_str:000000000000055b .LASF97
     /tmp/ccdK4uAb.s:3100   .debug_str:00000000000001e0 .LASF98
     /tmp/ccdK4uAb.s:3172   .debug_str:0000000000000414 .LASF99
     /tmp/ccdK4uAb.s:3202   .debug_str:00000000000004bc .LASF100
     /tmp/ccdK4uAb.s:3050   .debug_str:000000000000006d .LASF101
     /tmp/ccdK4uAb.s:3074   .debug_str:000000000000011f .LASF103
     /tmp/ccdK4uAb.s:3106   .debug_str:0000000000000205 .LASF141
     /tmp/ccdK4uAb.s:3174   .debug_str:0000000000000419 .LASF104
     /tmp/ccdK4uAb.s:3288   .debug_str:0000000000000813 .LASF105
     /tmp/ccdK4uAb.s:3296   .debug_str:0000000000000869 .LASF106
     /tmp/ccdK4uAb.s:3278   .debug_str:00000000000007b0 .LASF107
     /tmp/ccdK4uAb.s:3072   .debug_str:000000000000011a .LASF108
     /tmp/ccdK4uAb.s:3148   .debug_str:000000000000035d .LASF109
     /tmp/ccdK4uAb.s:3188   .debug_str:0000000000000471 .LASF110
     /tmp/ccdK4uAb.s:3282   .debug_str:00000000000007e7 .LASF114
     /tmp/ccdK4uAb.s:3314   .debug_str:00000000000008fe .LASF111
     /tmp/ccdK4uAb.s:3302   .debug_str:000000000000088b .LASF112
     /tmp/ccdK4uAb.s:3238   .debug_str:00000000000005c1 .LASF113
     /tmp/ccdK4uAb.s:3292   .debug_str:000000000000084c .LASF115
     /tmp/ccdK4uAb.s:3266   .debug_str:00000000000006b0 .LASF116
     /tmp/ccdK4uAb.s:3244   .debug_str:00000000000005de .LASF117
     /tmp/ccdK4uAb.s:3082   .debug_str:0000000000000158 .LASF118
     /tmp/ccdK4uAb.s:3258   .debug_str:0000000000000665 .LASF119
     /tmp/ccdK4uAb.s:3104   .debug_str:00000000000001ec .LASF120
     /tmp/ccdK4uAb.s:3044   .debug_str:000000000000004f .LASF121
     /tmp/ccdK4uAb.s:3042   .debug_str:0000000000000043 .LASF122
     /tmp/ccdK4uAb.s:3226   .debug_str:0000000000000565 .LASF123
     /tmp/ccdK4uAb.s:3300   .debug_str:0000000000000881 .LASF124
     /tmp/ccdK4uAb.s:3066   .debug_str:00000000000000c3 .LASF125
     /tmp/ccdK4uAb.s:3320   .debug_str:0000000000000920 .LASF126
     /tmp/ccdK4uAb.s:3090   .debug_str:0000000000000187 .LASF127
     /tmp/ccdK4uAb.s:372    .text:0000000000000210 .LFB36
     /tmp/ccdK4uAb.s:398    .text:0000000000000238 .LFE36
     /tmp/ccdK4uAb.s:2790   .debug_loc:0000000000000000 .LLST13
     /tmp/ccdK4uAb.s:387    .text:0000000000000228 .LVL34
     /tmp/ccdK4uAb.s:211    .text:000000000000011c .LFB35
     /tmp/ccdK4uAb.s:239    .text:0000000000000148 .LFE35
     /tmp/ccdK4uAb.s:2804   .debug_loc:0000000000000039 .LLST2
     /tmp/ccdK4uAb.s:228    .text:0000000000000138 .LVL17
     /tmp/ccdK4uAb.s:10     .text:0000000000000000 .LFB34
     /tmp/ccdK4uAb.s:48     .text:0000000000000044 .LFE34
     /tmp/ccdK4uAb.s:25     .text:0000000000000018 .LVL0
     /tmp/ccdK4uAb.s:37     .text:0000000000000034 .LVL2
     /tmp/ccdK4uAb.s:172    .text:00000000000000e4 .LFB33
     /tmp/ccdK4uAb.s:205    .text:000000000000011c .LFE33
     /tmp/ccdK4uAb.s:186    .text:00000000000000fc .LVL12
     /tmp/ccdK4uAb.s:190    .text:0000000000000104 .LVL13
     /tmp/ccdK4uAb.s:194    .text:000000000000010c .LVL14
     /tmp/ccdK4uAb.s:54     .text:0000000000000044 .LFB32
     /tmp/ccdK4uAb.s:166    .text:00000000000000e4 .LFE32
     /tmp/ccdK4uAb.s:2824   .debug_loc:0000000000000087 .LLST0
     /tmp/ccdK4uAb.s:103    .text:000000000000009c .LBB10
     /tmp/ccdK4uAb.s:117    .text:00000000000000a4 .LBE10
     /tmp/ccdK4uAb.s:2835   .debug_loc:00000000000000bd .LLST1
     /tmp/ccdK4uAb.s:151    .text:00000000000000d8 .LBB12
     /tmp/ccdK4uAb.s:164    .text:00000000000000e4 .LBE12
GAS LISTING /tmp/ccdK4uAb.s 			page 21


     /tmp/ccdK4uAb.s:88     .text:0000000000000080 .LVL4
     /tmp/ccdK4uAb.s:124    .text:00000000000000b4 .LVL7
     /tmp/ccdK4uAb.s:146    .text:00000000000000d4 .LVL10
     /tmp/ccdK4uAb.s:245    .text:0000000000000148 .LFB31
     /tmp/ccdK4uAb.s:366    .text:0000000000000210 .LFE31
     /tmp/ccdK4uAb.s:3218   .debug_str:0000000000000528 .LASF128
     /tmp/ccdK4uAb.s:2844   .debug_loc:00000000000000e3 .LLST3
     /tmp/ccdK4uAb.s:2866   .debug_loc:0000000000000142 .LLST4
     /tmp/ccdK4uAb.s:2888   .debug_loc:00000000000001a1 .LLST5
     /tmp/ccdK4uAb.s:3144   .debug_str:000000000000034c .LASF129
     /tmp/ccdK4uAb.s:2920   .debug_loc:0000000000000228 .LLST6
     /tmp/ccdK4uAb.s:276    .text:0000000000000184 .LBB14
     /tmp/ccdK4uAb.s:3016   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccdK4uAb.s:2931   .debug_loc:000000000000025e .LLST7
     /tmp/ccdK4uAb.s:2952   .debug_loc:00000000000002bc .LLST8
     /tmp/ccdK4uAb.s:2963   .debug_loc:00000000000002f2 .LLST9
     /tmp/ccdK4uAb.s:2974   .debug_loc:0000000000000328 .LLST10
     /tmp/ccdK4uAb.s:2985   .debug_loc:000000000000035e .LLST11
     /tmp/ccdK4uAb.s:2996   .debug_loc:0000000000000394 .LLST12
     /tmp/ccdK4uAb.s:273    .text:0000000000000180 .LVL20
     /tmp/ccdK4uAb.s:321    .text:00000000000001dc .LVL25
     /tmp/ccdK4uAb.s:3318   .debug_str:000000000000091b .LASF130
     /tmp/ccdK4uAb.s:3092   .debug_str:00000000000001a2 .LASF142
     /tmp/ccdK4uAb.s:3186   .debug_str:0000000000000469 .LASF131
     /tmp/ccdK4uAb.s:3086   .debug_str:0000000000000173 .LASF132
     /tmp/ccdK4uAb.s:3160   .debug_str:00000000000003a6 .LASF143
     /tmp/ccdK4uAb.s:3210   .debug_str:00000000000004ec .LASF144
     /tmp/ccdK4uAb.s:3054   .debug_str:0000000000000089 .LASF145
     /tmp/ccdK4uAb.s:375    .text:0000000000000210 .LVL33
     /tmp/ccdK4uAb.s:214    .text:000000000000011c .LVL15
     /tmp/ccdK4uAb.s:226    .text:0000000000000130 .LVL16
     /tmp/ccdK4uAb.s:70     .text:0000000000000060 .LVL3
     /tmp/ccdK4uAb.s:135    .text:00000000000000c0 .LVL8
     /tmp/ccdK4uAb.s:139    .text:00000000000000c8 .LVL9
     /tmp/ccdK4uAb.s:102    .text:000000000000009c .LVL5
     /tmp/ccdK4uAb.s:113    .text:00000000000000a4 .LVL6
     /tmp/ccdK4uAb.s:248    .text:0000000000000148 .LVL18
     /tmp/ccdK4uAb.s:271    .text:0000000000000178 .LVL19
     /tmp/ccdK4uAb.s:340    .text:00000000000001f4 .LVL28
     /tmp/ccdK4uAb.s:347    .text:0000000000000200 .LVL30
     /tmp/ccdK4uAb.s:343    .text:00000000000001f8 .LVL29
     /tmp/ccdK4uAb.s:303    .text:00000000000001c4 .LVL23
     /tmp/ccdK4uAb.s:360    .text:000000000000020c .LVL32
     /tmp/ccdK4uAb.s:311    .text:00000000000001cc .LVL24
     /tmp/ccdK4uAb.s:334    .text:00000000000001ec .LVL26
     /tmp/ccdK4uAb.s:275    .text:0000000000000184 .LVL21
     /tmp/ccdK4uAb.s:296    .text:00000000000001b8 .LVL22
     /tmp/ccdK4uAb.s:356    .text:0000000000000208 .LVL31
     /tmp/ccdK4uAb.s:337    .text:00000000000001f0 .LVL27
     /tmp/ccdK4uAb.s:420    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccdK4uAb.s:314    .text:00000000000001cc .LBE14
     /tmp/ccdK4uAb.s:350    .text:0000000000000200 .LBB19
     /tmp/ccdK4uAb.s:364    .text:0000000000000210 .LBE19
     /tmp/ccdK4uAb.s:290    .text:00000000000001ac .LBB16
     /tmp/ccdK4uAb.s:312    .text:00000000000001cc .LBE16
     /tmp/ccdK4uAb.s:352    .text:0000000000000200 .LBB17
     /tmp/ccdK4uAb.s:362    .text:0000000000000210 .LBE17
GAS LISTING /tmp/ccdK4uAb.s 			page 22



UNDEFINED SYMBOLS
_ZN5Riscv10popSppSpieEv
_Z11thread_exitv
_ZN9Scheduler3getEv
_ZN3TCB13contextSwitchEPNS_7ContextES1_
_ZN9Scheduler3putEP3TCB
_ZN5Riscv13pushRegistersEv
_ZN5Riscv12popRegistersEv
_ZN15MemoryAllocator7kmallocEm
_ZN15MemoryAllocator5kfreeEPv
