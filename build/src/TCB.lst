GAS LISTING /tmp/cc6dlNas.s 			page 1


   1              		.file	"TCB.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN3TCB7wrapperEv
   9              	_ZN3TCB7wrapperEv:
  10              	.LFB46:
  11              		.file 1 "src/TCB.cpp"
   1:src/TCB.cpp   **** //
   2:src/TCB.cpp   **** // Created by os on 5/23/23.
   3:src/TCB.cpp   **** //
   4:src/TCB.cpp   **** 
   5:src/TCB.cpp   **** #include "../h/TCB.hpp"
   6:src/TCB.cpp   **** #include "../h/Riscv.hpp"
   7:src/TCB.cpp   **** #include "../h/Scheduler.hpp"
   8:src/TCB.cpp   **** #include "../h/MemoryAllocator.hpp"
   9:src/TCB.cpp   **** #include "../h/syscall_c.hpp"
  10:src/TCB.cpp   **** 
  11:src/TCB.cpp   **** TCB* TCB::running = nullptr;
  12:src/TCB.cpp   **** uint64 TCB::runningTimeSlice = 0;
  13:src/TCB.cpp   **** 
  14:src/TCB.cpp   **** TCB* TCB::createThread(TCB::Body function, void* args, uint64* stack) {
  15:src/TCB.cpp   ****     //pravljenje niti
  16:src/TCB.cpp   ****     TCB* newThread = new TCB(function, args, stack);
  17:src/TCB.cpp   **** 
  18:src/TCB.cpp   ****     //startovanje niti(stavljanje u Scheduler); main nit je vec aktivna, ne stavlja se u Scheduler
  19:src/TCB.cpp   ****     //if (functionToRun != nullptr) Scheduler::put(newThread);
  20:src/TCB.cpp   ****     return newThread;
  21:src/TCB.cpp   **** }
  22:src/TCB.cpp   **** 
  23:src/TCB.cpp   **** void kernelConsumerFunction(void*);
  24:src/TCB.cpp   **** 
  25:src/TCB.cpp   **** void idle(void*);
  26:src/TCB.cpp   **** 
  27:src/TCB.cpp   **** void userMain();
  28:src/TCB.cpp   **** 
  29:src/TCB.cpp   **** void TCB::dispatch() {
  30:src/TCB.cpp   ****     TCB* old = TCB::running;
  31:src/TCB.cpp   ****     if (old->status == ACTIVE) {
  32:src/TCB.cpp   ****         Scheduler::put(old);
  33:src/TCB.cpp   ****     }
  34:src/TCB.cpp   ****     TCB::running = Scheduler::get();
  35:src/TCB.cpp   ****     TCB::runningTimeSlice = 0;
  36:src/TCB.cpp   **** 
  37:src/TCB.cpp   ****     //sada biramo u kom rezimu ce se izvrsavati nit, upisom bita SSTATUS_SPP
  38:src/TCB.cpp   ****     //ako treba da se izvrsava kernel nit, povratak je u sistemski rezim, inace u korisnicki
  39:src/TCB.cpp   ****     if (TCB::running->threadFunction == nullptr || TCB::running->threadFunction == kernelConsumerFu
  40:src/TCB.cpp   ****         TCB::running->threadFunction == idle) {
  41:src/TCB.cpp   ****         Riscv::ms_sstatus(Riscv::SSTATUS_SPP);
  42:src/TCB.cpp   ****     } else {
  43:src/TCB.cpp   ****         Riscv::mc_sstatus(Riscv::SSTATUS_SPP);
  44:src/TCB.cpp   ****     }
  45:src/TCB.cpp   **** 
  46:src/TCB.cpp   ****     if (old != TCB::running) TCB::contextSwitch(&old->context, &running->context);
  47:src/TCB.cpp   **** }
GAS LISTING /tmp/cc6dlNas.s 			page 2


  48:src/TCB.cpp   **** 
  49:src/TCB.cpp   **** void TCB::yield() {
  50:src/TCB.cpp   ****     //Riscv::pushRegisters();
  51:src/TCB.cpp   ****     TCB::dispatch();
  52:src/TCB.cpp   ****     //Riscv::popRegisters();
  53:src/TCB.cpp   **** }
  54:src/TCB.cpp   **** 
  55:src/TCB.cpp   **** void TCB::wrapper() {
  12              		.loc 1 55 21
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23341100 		sd	ra,8(sp)
  17 0008 23308100 		sd	s0,0(sp)
  18              		.cfi_offset 1, -8
  19              		.cfi_offset 8, -16
  20 000c 13040101 		addi	s0,sp,16
  21              		.cfi_def_cfa 8, 0
  56:src/TCB.cpp   ****     //pocetak wrappera se izvrsava u supervisor modu,
  57:src/TCB.cpp   ****     //jer nismo izasli iz prekidne rutine prilikom promene konteksta (dispatch/yield)
  58:src/TCB.cpp   ****     Riscv::popSppSpie();
  22              		.loc 1 58 5
  23              		.loc 1 58 22 is_stmt 0
  24 0010 97000000 		call	_ZN5Riscv10popSppSpieEv@plt
  24      E7800000 
  25              	.LVL0:
  59:src/TCB.cpp   ****     //na dalje se izvrsavamo u user modu
  60:src/TCB.cpp   ****     running->threadFunction(running->args);
  26              		.loc 1 60 5 is_stmt 1
  27              		.loc 1 60 14 is_stmt 0
  28 0018 97070000 		ld	a5,.LANCHOR0
  28      83B70700 
  29 0020 03B70701 		ld	a4,16(a5)
  30              		.loc 1 60 28
  31 0024 03B50702 		ld	a0,32(a5)
  32 0028 E7000700 		jalr	a4
  33              	.LVL1:
  61:src/TCB.cpp   ****     //running->finished = true;
  62:src/TCB.cpp   ****     //i dalje smo u user modu, moramo promenu niti vrsiti sistemskim pozivom
  63:src/TCB.cpp   ****     thread_exit();
  34              		.loc 1 63 5 is_stmt 1
  35              		.loc 1 63 16 is_stmt 0
  36 002c 97000000 		call	_Z11thread_exitv@plt
  36      E7800000 
  37              	.LVL2:
  64:src/TCB.cpp   **** }
  38              		.loc 1 64 1
  39 0034 83308100 		ld	ra,8(sp)
  40              		.cfi_restore 1
  41 0038 03340100 		ld	s0,0(sp)
  42              		.cfi_restore 8
  43              		.cfi_def_cfa 2, 16
  44 003c 13010101 		addi	sp,sp,16
  45              		.cfi_def_cfa_offset 0
  46 0040 67800000 		jr	ra
  47              		.cfi_endproc
  48              	.LFE46:
GAS LISTING /tmp/cc6dlNas.s 			page 3


  50              		.align	2
  51              		.globl	_ZN3TCB8dispatchEv
  53              	_ZN3TCB8dispatchEv:
  54              	.LFB44:
  29:src/TCB.cpp   ****     TCB* old = TCB::running;
  55              		.loc 1 29 22 is_stmt 1
  56              		.cfi_startproc
  57 0044 130101FE 		addi	sp,sp,-32
  58              		.cfi_def_cfa_offset 32
  59 0048 233C1100 		sd	ra,24(sp)
  60 004c 23388100 		sd	s0,16(sp)
  61 0050 23349100 		sd	s1,8(sp)
  62              		.cfi_offset 1, -8
  63              		.cfi_offset 8, -16
  64              		.cfi_offset 9, -24
  65 0054 13040102 		addi	s0,sp,32
  66              		.cfi_def_cfa 8, 0
  30:src/TCB.cpp   ****     if (old->status == ACTIVE) {
  67              		.loc 1 30 5
  30:src/TCB.cpp   ****     if (old->status == ACTIVE) {
  68              		.loc 1 30 10 is_stmt 0
  69 0058 97040000 		ld	s1,.LANCHOR0
  69      83B40400 
  70              	.LVL3:
  31:src/TCB.cpp   ****         Scheduler::put(old);
  71              		.loc 1 31 5 is_stmt 1
  31:src/TCB.cpp   ****         Scheduler::put(old);
  72              		.loc 1 31 14 is_stmt 0
  73 0060 03A78405 		lw	a4,88(s1)
  31:src/TCB.cpp   ****         Scheduler::put(old);
  74              		.loc 1 31 5
  75 0064 93071000 		li	a5,1
  76 0068 6306F704 		beq	a4,a5,.L10
  77              	.L4:
  34:src/TCB.cpp   ****     TCB::runningTimeSlice = 0;
  78              		.loc 1 34 5 is_stmt 1
  34:src/TCB.cpp   ****     TCB::runningTimeSlice = 0;
  79              		.loc 1 34 34 is_stmt 0
  80 006c 97000000 		call	_ZN9Scheduler3getEv@plt
  80      E7800000 
  81              	.LVL4:
  82 0074 93050500 		mv	a1,a0
  34:src/TCB.cpp   ****     TCB::runningTimeSlice = 0;
  83              		.loc 1 34 18
  84 0078 97070000 		lla	a5,.LANCHOR0
  84      93870700 
  85 0080 23B0A700 		sd	a0,0(a5)
  35:src/TCB.cpp   **** 
  86              		.loc 1 35 5 is_stmt 1
  35:src/TCB.cpp   **** 
  87              		.loc 1 35 27 is_stmt 0
  88 0084 23B40700 		sd	zero,8(a5)
  39:src/TCB.cpp   ****         TCB::running->threadFunction == idle) {
  89              		.loc 1 39 5 is_stmt 1
  39:src/TCB.cpp   ****         TCB::running->threadFunction == idle) {
  90              		.loc 1 39 23 is_stmt 0
  91 0088 83370501 		ld	a5,16(a0)
GAS LISTING /tmp/cc6dlNas.s 			page 4


  39:src/TCB.cpp   ****         TCB::running->threadFunction == idle) {
  92              		.loc 1 39 5
  93 008c 638C0702 		beqz	a5,.L5
  39:src/TCB.cpp   ****         TCB::running->threadFunction == idle) {
  94              		.loc 1 39 49 discriminator 1
  95 0090 17070000 		la	a4,_Z22kernelConsumerFunctionPv
  95      03370700 
  96 0098 6386E702 		beq	a5,a4,.L5
  39:src/TCB.cpp   ****         TCB::running->threadFunction == idle) {
  97              		.loc 1 39 107 discriminator 2
  98 009c 17070000 		la	a4,_Z4idlePv
  98      03370700 
  99 00a4 6380E702 		beq	a5,a4,.L5
  43:src/TCB.cpp   ****     }
 100              		.loc 1 43 9 is_stmt 1
 101              	.LVL5:
 102              	.LBB21:
 103              	.LBB22:
 104              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 5/17/23.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJEKAT2023_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJEKAT2023_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** class Riscv {
  11:src/../h/Riscv.hpp **** public:
  12:src/../h/Riscv.hpp **** 
  13:src/../h/Riscv.hpp **** 	static void popSppSpie();
  14:src/../h/Riscv.hpp **** 
  15:src/../h/Riscv.hpp **** 	//stavljanje registara x3-x31 na stek
  16:src/../h/Riscv.hpp **** 	static void pushRegisters();    //implementacija u asm
  17:src/../h/Riscv.hpp **** 
  18:src/../h/Riscv.hpp **** 	//skidanje registara x3-x31 sa steka
  19:src/../h/Riscv.hpp **** 	static void popRegisters();     //implementacija u asm
  20:src/../h/Riscv.hpp **** 
  21:src/../h/Riscv.hpp **** 	//read scause
  22:src/../h/Riscv.hpp **** 	static uint64 r_scause();
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp **** 	//write scause
  25:src/../h/Riscv.hpp **** 	static void w_scause(uint64 scause);
  26:src/../h/Riscv.hpp **** 
  27:src/../h/Riscv.hpp **** 	//read sepc
  28:src/../h/Riscv.hpp **** 	static uint64 r_sepc();
  29:src/../h/Riscv.hpp **** 
  30:src/../h/Riscv.hpp **** 	//write sepc
  31:src/../h/Riscv.hpp **** 	static void w_sepc(uint64 sepc);
  32:src/../h/Riscv.hpp **** 
  33:src/../h/Riscv.hpp **** 	//read stvec
  34:src/../h/Riscv.hpp **** 	static uint64 r_stvec();
  35:src/../h/Riscv.hpp **** 
  36:src/../h/Riscv.hpp **** 	//write stvec
  37:src/../h/Riscv.hpp **** 	static void w_stvec(uint64 stvec);
  38:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/cc6dlNas.s 			page 5


  39:src/../h/Riscv.hpp **** 	enum BitMaskSip {
  40:src/../h/Riscv.hpp **** 		//postoji zahtev za softverski prekid
  41:src/../h/Riscv.hpp **** 		SIP_SSIP = (1 << 1),
  42:src/../h/Riscv.hpp **** 		//postoji prekid od tajmera
  43:src/../h/Riscv.hpp **** 		SIP_STIP = (1 << 5),
  44:src/../h/Riscv.hpp **** 		//postoji zahtev za spoljasnji hardverski prekid
  45:src/../h/Riscv.hpp **** 		SIP_SEIP = (1 << 9)
  46:src/../h/Riscv.hpp **** 	};
  47:src/../h/Riscv.hpp **** 
  48:src/../h/Riscv.hpp **** 	//mask set sip
  49:src/../h/Riscv.hpp **** 	static void ms_sip(uint64 mask);
  50:src/../h/Riscv.hpp **** 
  51:src/../h/Riscv.hpp **** 	//mask clear sip
  52:src/../h/Riscv.hpp **** 	static void mc_sip(uint64 mask);
  53:src/../h/Riscv.hpp **** 
  54:src/../h/Riscv.hpp **** 	//read sip
  55:src/../h/Riscv.hpp **** 	static uint64 r_sip();
  56:src/../h/Riscv.hpp **** 
  57:src/../h/Riscv.hpp **** 	//write sip
  58:src/../h/Riscv.hpp **** 	static void w_sip(uint64 sip);
  59:src/../h/Riscv.hpp **** 
  60:src/../h/Riscv.hpp **** 	//kada se pozove sret, SIE dobija vrednost SPIE, SPIE se postavlja na 1,
  61:src/../h/Riscv.hpp **** 	//rezim se postavlja na osnovu SPP bita, SPP se postavlja na 0
  62:src/../h/Riscv.hpp **** 	enum BitMaskSstatus {
  63:src/../h/Riscv.hpp **** 		//1 - dozvoljeni prekidi; 0- nedozvoljeni prekidi; igonrise se u korisnickom rezimu
  64:src/../h/Riscv.hpp **** 		SSTATUS_SIE = (1 << 1),
  65:src/../h/Riscv.hpp **** 		//prethodna vrednost bita SIE
  66:src/../h/Riscv.hpp **** 		SSTATUS_SPIE = (1 << 5),
  67:src/../h/Riscv.hpp **** 		//iz kog rezima se desio skok; 0 - iz korisnickog; 1 - iz sistemskog
  68:src/../h/Riscv.hpp **** 		SSTATUS_SPP = (1 << 8)
  69:src/../h/Riscv.hpp **** 	};
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp **** 	//mask set sstatus
  72:src/../h/Riscv.hpp **** 	static void ms_sstatus(uint64 mask);
  73:src/../h/Riscv.hpp **** 
  74:src/../h/Riscv.hpp **** 	//mask clear sstatus
  75:src/../h/Riscv.hpp **** 	static void mc_sstatus(uint64 mask);
  76:src/../h/Riscv.hpp **** 
  77:src/../h/Riscv.hpp **** 	//read sstatus
  78:src/../h/Riscv.hpp **** 	static uint64 r_sstatus();
  79:src/../h/Riscv.hpp **** 
  80:src/../h/Riscv.hpp **** 	//write sstatus
  81:src/../h/Riscv.hpp **** 	static void w_sstatus(uint64 sstatus);
  82:src/../h/Riscv.hpp **** 
  83:src/../h/Riscv.hpp **** 	//upisuje kod sistemskog poziva u registar a0
  84:src/../h/Riscv.hpp **** 	static void loadOpCode(uint64 opCode);
  85:src/../h/Riscv.hpp **** 
  86:src/../h/Riscv.hpp **** };
  87:src/../h/Riscv.hpp **** 
  88:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause() {
  89:src/../h/Riscv.hpp **** 	uint64 volatile scause;
  90:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[scause], scause": [scause] "=r"(scause));
  91:src/../h/Riscv.hpp **** 	return scause;
  92:src/../h/Riscv.hpp **** }
  93:src/../h/Riscv.hpp **** 
  94:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
  95:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw scause, %[scause]": :[scause] "r"(scause));
GAS LISTING /tmp/cc6dlNas.s 			page 6


  96:src/../h/Riscv.hpp **** }
  97:src/../h/Riscv.hpp **** 
  98:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc() {
  99:src/../h/Riscv.hpp **** 	uint64 volatile sepc;
 100:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[sepc], sepc": [sepc] "=r"(sepc));
 101:src/../h/Riscv.hpp **** 	return sepc;
 102:src/../h/Riscv.hpp **** }
 103:src/../h/Riscv.hpp **** 
 104:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
 105:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 106:src/../h/Riscv.hpp **** }
 107:src/../h/Riscv.hpp **** 
 108:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec() {
 109:src/../h/Riscv.hpp **** 	uint64 volatile stvec;
 110:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[stvec], stvec": [stvec] "=r"(stvec));
 111:src/../h/Riscv.hpp **** 	return stvec;
 112:src/../h/Riscv.hpp **** }
 113:src/../h/Riscv.hpp **** 
 114:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 115:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw stvec, %[stvec]": :[stvec] "r"(stvec));
 116:src/../h/Riscv.hpp **** }
 117:src/../h/Riscv.hpp **** 
 118:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 119:src/../h/Riscv.hpp **** 	__asm__ volatile("csrs sip, %[mask]": :[mask] "r"(mask));
 120:src/../h/Riscv.hpp **** }
 121:src/../h/Riscv.hpp **** 
 122:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 123:src/../h/Riscv.hpp **** 	__asm__ volatile("csrc sip, %[mask]": :[mask] "r"(mask));
 124:src/../h/Riscv.hpp **** }
 125:src/../h/Riscv.hpp **** 
 126:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip() {
 127:src/../h/Riscv.hpp **** 	uint64 volatile sip;
 128:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[sip], sip": [sip] "=r"(sip));
 129:src/../h/Riscv.hpp **** 	return sip;
 130:src/../h/Riscv.hpp **** }
 131:src/../h/Riscv.hpp **** 
 132:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip) {
 133:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw sip, %[sip]": :[sip] "r"(sip));
 134:src/../h/Riscv.hpp **** }
 135:src/../h/Riscv.hpp **** 
 136:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
 137:src/../h/Riscv.hpp **** 	__asm__ volatile("csrs sstatus, %[mask]": :[mask] "r"(mask));
 138:src/../h/Riscv.hpp **** }
 139:src/../h/Riscv.hpp **** 
 140:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask) {
 141:src/../h/Riscv.hpp **** 	__asm__ volatile("csrc sstatus, %[mask]": :[mask] "r"(mask));
 105              		.loc 2 141 2
 106              		.loc 2 141 62 is_stmt 0
 107 00a8 93070010 		li	a5,256
 108              	#APP
 109              	# 141 "src/../h/Riscv.hpp" 1
 142              	}
 110              		csrc sstatus, a5
 111              	# 0 "" 2
 112              		.loc 2 142 1
 113              	#NO_APP
 114 00b0 6F00C001 		j	.L7
GAS LISTING /tmp/cc6dlNas.s 			page 7


 115              	.LVL6:
 116              	.L10:
 117              	.LBE22:
 118              	.LBE21:
  32:src/TCB.cpp   ****     }
 119              		.loc 1 32 9 is_stmt 1
  32:src/TCB.cpp   ****     }
 120              		.loc 1 32 23 is_stmt 0
 121 00b4 13850400 		mv	a0,s1
 122 00b8 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 122      E7800000 
 123              	.LVL7:
 124 00c0 6FF0DFFA 		j	.L4
 125              	.L5:
  41:src/TCB.cpp   ****     } else {
 126              		.loc 1 41 9 is_stmt 1
 127              	.LVL8:
 128              	.LBB23:
 129              	.LBB24:
 137:src/../h/Riscv.hpp **** }
 130              		.loc 2 137 2
 137:src/../h/Riscv.hpp **** }
 131              		.loc 2 137 62 is_stmt 0
 132 00c4 93070010 		li	a5,256
 133              	#APP
 134              	# 137 "src/../h/Riscv.hpp" 1
 135              		csrs sstatus, a5
 136              	# 0 "" 2
 137              	.LVL9:
 138              	#NO_APP
 139              	.L7:
 140              	.LBE24:
 141              	.LBE23:
  46:src/TCB.cpp   **** }
 142              		.loc 1 46 5 is_stmt 1
 143 00cc 6388B400 		beq	s1,a1,.L3
  46:src/TCB.cpp   **** }
 144              		.loc 1 46 30 discriminator 1
  46:src/TCB.cpp   **** }
 145              		.loc 1 46 48 is_stmt 0 discriminator 1
 146 00d0 13850400 		mv	a0,s1
 147 00d4 97000000 		call	_ZN3TCB13contextSwitchEPNS_7ContextES1_@plt
 147      E7800000 
 148              	.LVL10:
 149              	.L3:
  47:src/TCB.cpp   **** 
 150              		.loc 1 47 1
 151 00dc 83308101 		ld	ra,24(sp)
 152              		.cfi_restore 1
 153 00e0 03340101 		ld	s0,16(sp)
 154              		.cfi_restore 8
 155              		.cfi_def_cfa 2, 32
 156 00e4 83348100 		ld	s1,8(sp)
 157              		.cfi_restore 9
 158              	.LVL11:
 159 00e8 13010102 		addi	sp,sp,32
 160              		.cfi_def_cfa_offset 0
GAS LISTING /tmp/cc6dlNas.s 			page 8


 161 00ec 67800000 		jr	ra
 162              		.cfi_endproc
 163              	.LFE44:
 165              		.align	2
 166              		.globl	_ZN3TCB5yieldEv
 168              	_ZN3TCB5yieldEv:
 169              	.LFB45:
  49:src/TCB.cpp   ****     //Riscv::pushRegisters();
 170              		.loc 1 49 19 is_stmt 1
 171              		.cfi_startproc
 172 00f0 130101FF 		addi	sp,sp,-16
 173              		.cfi_def_cfa_offset 16
 174 00f4 23341100 		sd	ra,8(sp)
 175 00f8 23308100 		sd	s0,0(sp)
 176              		.cfi_offset 1, -8
 177              		.cfi_offset 8, -16
 178 00fc 13040101 		addi	s0,sp,16
 179              		.cfi_def_cfa 8, 0
  51:src/TCB.cpp   ****     //Riscv::popRegisters();
 180              		.loc 1 51 5
  51:src/TCB.cpp   ****     //Riscv::popRegisters();
 181              		.loc 1 51 18 is_stmt 0
 182 0100 97000000 		call	_ZN3TCB8dispatchEv
 182      E7800000 
 183              	.LVL12:
  53:src/TCB.cpp   **** 
 184              		.loc 1 53 1
 185 0108 83308100 		ld	ra,8(sp)
 186              		.cfi_restore 1
 187 010c 03340100 		ld	s0,0(sp)
 188              		.cfi_restore 8
 189              		.cfi_def_cfa 2, 16
 190 0110 13010101 		addi	sp,sp,16
 191              		.cfi_def_cfa_offset 0
 192 0114 67800000 		jr	ra
 193              		.cfi_endproc
 194              	.LFE45:
 196              		.align	2
 197              		.globl	_ZN3TCBnwEm
 199              	_ZN3TCBnwEm:
 200              	.LFB47:
  65:src/TCB.cpp   **** 
  66:src/TCB.cpp   **** void* TCB::operator new(size_t size) {
 201              		.loc 1 66 38 is_stmt 1
 202              		.cfi_startproc
 203              	.LVL13:
 204 0118 130101FF 		addi	sp,sp,-16
 205              		.cfi_def_cfa_offset 16
 206 011c 23341100 		sd	ra,8(sp)
 207 0120 23308100 		sd	s0,0(sp)
 208              		.cfi_offset 1, -8
 209              		.cfi_offset 8, -16
 210 0124 13040101 		addi	s0,sp,16
 211              		.cfi_def_cfa 8, 0
  67:src/TCB.cpp   ****     return mem_alloc(size);
 212              		.loc 1 67 5
 213              		.loc 1 67 21 is_stmt 0
GAS LISTING /tmp/cc6dlNas.s 			page 9


 214 0128 97000000 		call	_Z9mem_allocm@plt
 214      E7800000 
 215              	.LVL14:
  68:src/TCB.cpp   ****     //return MemoryAllocator::kmalloc(size + sizeof(MemoryAllocator::UsedMemSegment), MemoryAllocat
  69:src/TCB.cpp   **** }
 216              		.loc 1 69 1
 217 0130 83308100 		ld	ra,8(sp)
 218              		.cfi_restore 1
 219 0134 03340100 		ld	s0,0(sp)
 220              		.cfi_restore 8
 221              		.cfi_def_cfa 2, 16
 222 0138 13010101 		addi	sp,sp,16
 223              		.cfi_def_cfa_offset 0
 224 013c 67800000 		jr	ra
 225              		.cfi_endproc
 226              	.LFE47:
 228              		.align	2
 229              		.globl	_ZN3TCB12createThreadEPFvPvES0_Pm
 231              	_ZN3TCB12createThreadEPFvPvES0_Pm:
 232              	.LFB43:
  14:src/TCB.cpp   ****     //pravljenje niti
 233              		.loc 1 14 71 is_stmt 1
 234              		.cfi_startproc
 235              	.LVL15:
 236 0140 130101FD 		addi	sp,sp,-48
 237              		.cfi_def_cfa_offset 48
 238 0144 23341102 		sd	ra,40(sp)
 239 0148 23308102 		sd	s0,32(sp)
 240 014c 233C9100 		sd	s1,24(sp)
 241 0150 23382101 		sd	s2,16(sp)
 242 0154 23343101 		sd	s3,8(sp)
 243              		.cfi_offset 1, -8
 244              		.cfi_offset 8, -16
 245              		.cfi_offset 9, -24
 246              		.cfi_offset 18, -32
 247              		.cfi_offset 19, -40
 248 0158 13040103 		addi	s0,sp,48
 249              		.cfi_def_cfa 8, 0
 250 015c 13090500 		mv	s2,a0
 251 0160 93890500 		mv	s3,a1
 252 0164 93040600 		mv	s1,a2
  16:src/TCB.cpp   **** 
 253              		.loc 1 16 5
  16:src/TCB.cpp   **** 
 254              		.loc 1 16 51 is_stmt 0
 255 0168 13050006 		li	a0,96
 256              	.LVL16:
 257 016c 97000000 		call	_ZN3TCBnwEm
 257      E7800000 
 258              	.LVL17:
 259              	.LBB25:
 260              	.LBB26:
 261              		.file 3 "src/../h/TCB.hpp"
   1:src/../h/TCB.hpp **** //
   2:src/../h/TCB.hpp **** // Created by os on 5/23/23.
   3:src/../h/TCB.hpp **** //
   4:src/../h/TCB.hpp **** 
GAS LISTING /tmp/cc6dlNas.s 			page 10


   5:src/../h/TCB.hpp **** #ifndef PROJEKAT2023_TCB_HPP
   6:src/../h/TCB.hpp **** #define PROJEKAT2023_TCB_HPP
   7:src/../h/TCB.hpp **** 
   8:src/../h/TCB.hpp **** #include "../lib/hw.h"
   9:src/../h/TCB.hpp **** #include "../h/ThreadQueue.hpp"
  10:src/../h/TCB.hpp **** 
  11:src/../h/TCB.hpp **** class TCB {
  12:src/../h/TCB.hpp **** public:
  13:src/../h/TCB.hpp ****     friend class Scheduler;
  14:src/../h/TCB.hpp **** 
  15:src/../h/TCB.hpp ****     using Body = void (*)(void*);
  16:src/../h/TCB.hpp **** 
  17:src/../h/TCB.hpp ****     enum ThreadStatus {
  18:src/../h/TCB.hpp ****         CREATED, ACTIVE, BLOCKED, JOINING, SLEEPING, FINISHED
  19:src/../h/TCB.hpp ****     };
  20:src/../h/TCB.hpp **** 
  21:src/../h/TCB.hpp ****     void setStatus(ThreadStatus stat) { this->status = stat; }
  22:src/../h/TCB.hpp **** 
  23:src/../h/TCB.hpp ****     ThreadStatus getStatus() { return this->status; }
  24:src/../h/TCB.hpp **** 
  25:src/../h/TCB.hpp ****     static TCB* createThread(Body function, void* args, uint64* stack);
  26:src/../h/TCB.hpp **** 
  27:src/../h/TCB.hpp ****     static void start(TCB* newTcb);
  28:src/../h/TCB.hpp **** 
  29:src/../h/TCB.hpp **** //    bool isFinished() { return finished; }
  30:src/../h/TCB.hpp **** //
  31:src/../h/TCB.hpp **** //    void setFinished(bool finish) { this->finished = finish; }
  32:src/../h/TCB.hpp **** //
  33:src/../h/TCB.hpp **** //    bool isBlocked() { return blocked; }
  34:src/../h/TCB.hpp **** //
  35:src/../h/TCB.hpp **** //    void setBlocked(bool block) { this->blocked = block; }
  36:src/../h/TCB.hpp **** 
  37:src/../h/TCB.hpp ****     uint64 getTimeSlice() { return timeSlice; }
  38:src/../h/TCB.hpp **** 
  39:src/../h/TCB.hpp ****     void setTimeSlice(uint64 value) { timeSlice = value; }
  40:src/../h/TCB.hpp **** 
  41:src/../h/TCB.hpp ****     //static void threadSleep(time_t sleepTime);
  42:src/../h/TCB.hpp **** 
  43:src/../h/TCB.hpp ****     static void threadJoin(TCB* handle);
  44:src/../h/TCB.hpp **** 
  45:src/../h/TCB.hpp ****     static void releaseJoined();
  46:src/../h/TCB.hpp **** 
  47:src/../h/TCB.hpp ****     static void yield();
  48:src/../h/TCB.hpp **** 
  49:src/../h/TCB.hpp ****     static void dispatch();
  50:src/../h/TCB.hpp **** 
  51:src/../h/TCB.hpp ****     static void wrapper();
  52:src/../h/TCB.hpp **** 
  53:src/../h/TCB.hpp ****     static TCB* running;
  54:src/../h/TCB.hpp ****     static uint64 runningTimeSlice;
  55:src/../h/TCB.hpp **** 
  56:src/../h/TCB.hpp ****     static void* operator new(size_t size);
  57:src/../h/TCB.hpp **** 
  58:src/../h/TCB.hpp ****     static void operator delete(void* ptr);
  59:src/../h/TCB.hpp **** 
  60:src/../h/TCB.hpp **** private:
  61:src/../h/TCB.hpp ****     //kontekst procesora za datu nit
GAS LISTING /tmp/cc6dlNas.s 			page 11


  62:src/../h/TCB.hpp ****     struct Context {
  63:src/../h/TCB.hpp ****         uint64 ra;
  64:src/../h/TCB.hpp ****         uint64 sp;
  65:src/../h/TCB.hpp ****     } context;
  66:src/../h/TCB.hpp ****     Body threadFunction;    //funkcija koja se izvrsava
  67:src/../h/TCB.hpp ****     uint64* stack;            //najniza adresa steka; stek raste ka nizim adresama, pokazuje na pos
  68:src/../h/TCB.hpp ****     void* args;                //argumenti poziva funkcije
  69:src/../h/TCB.hpp ****     uint64 timeSlice;        //vremenski odsecak dodeljen datoj niti
  70:src/../h/TCB.hpp ****     // bool finished;            //da li je nit zavrsila izvrsavanje funkcije
  71:src/../h/TCB.hpp ****     //bool blocked;            //da li je nit blokirana
  72:src/../h/TCB.hpp ****     // bool needToJoin;        //da li je nit pozvala join i ceka da se neka druga zavrsi
  73:src/../h/TCB.hpp ****     TCB* nextInScheduler;    // pokazivac na sledecu nit u Scheduler-u
  74:src/../h/TCB.hpp ****     time_t timeToSleep;        //vreme na koje je uspavana nit
  75:src/../h/TCB.hpp ****     TCB* nextSleeping;        //sledeca nit u listi za spavanje u Scheduler-u
  76:src/../h/TCB.hpp ****     ThreadQueue waitingToJoin;    //red niti koje su pozvale join nad ovom niti
  77:src/../h/TCB.hpp ****     ThreadStatus status;    //status niti
  78:src/../h/TCB.hpp **** 
  79:src/../h/TCB.hpp **** 
  80:src/../h/TCB.hpp ****     TCB(Body function, void* args, uint64* stack) : threadFunction(function), stack(stack), args(ar
  81:src/../h/TCB.hpp ****                                                     timeSlice(DEFAULT_TIME_SLICE), nextInScheduler(
  82:src/../h/TCB.hpp ****                                                     timeToSleep(0),
  83:src/../h/TCB.hpp ****                                                     nextSleeping(nullptr), status(CREATED) {
 262              		.loc 3 83 90
 263 0174 23382501 		sd	s2,16(a0)
 264 0178 233C9500 		sd	s1,24(a0)
 265 017c 23303503 		sd	s3,32(a0)
 266 0180 93072000 		li	a5,2
 267 0184 2334F502 		sd	a5,40(a0)
 268 0188 23380502 		sd	zero,48(a0)
 269 018c 233C0502 		sd	zero,56(a0)
 270 0190 23300504 		sd	zero,64(a0)
 271              	.LVL18:
 272              	.LBB27:
 273              	.LBB28:
 274              		.file 4 "src/../h/../h/ThreadQueue.hpp"
   1:src/../h/../h/ThreadQueue.hpp **** //
   2:src/../h/../h/ThreadQueue.hpp **** // Created by os on 6/4/23.
   3:src/../h/../h/ThreadQueue.hpp **** //
   4:src/../h/../h/ThreadQueue.hpp **** 
   5:src/../h/../h/ThreadQueue.hpp **** #ifndef PROJEKAT2023_THREADQUEUE_HPP
   6:src/../h/../h/ThreadQueue.hpp **** #define PROJEKAT2023_THREADQUEUE_HPP
   7:src/../h/../h/ThreadQueue.hpp **** 
   8:src/../h/../h/ThreadQueue.hpp **** #include "../h/MemoryAllocator.hpp"
   9:src/../h/../h/ThreadQueue.hpp **** #include "../h/syscall_c.hpp"
  10:src/../h/../h/ThreadQueue.hpp **** 
  11:src/../h/../h/ThreadQueue.hpp **** class TCB;
  12:src/../h/../h/ThreadQueue.hpp **** 
  13:src/../h/../h/ThreadQueue.hpp **** class ThreadQueue {
  14:src/../h/../h/ThreadQueue.hpp **** private:
  15:src/../h/../h/ThreadQueue.hpp ****     struct Node {
  16:src/../h/../h/ThreadQueue.hpp ****         TCB *data;
  17:src/../h/../h/ThreadQueue.hpp ****         Node *next;
  18:src/../h/../h/ThreadQueue.hpp **** 
  19:src/../h/../h/ThreadQueue.hpp ****         Node(TCB *d) : data(d), next(nullptr) {}
  20:src/../h/../h/ThreadQueue.hpp **** 
  21:src/../h/../h/ThreadQueue.hpp ****         static void *operator new(size_t size) {
  22:src/../h/../h/ThreadQueue.hpp ****             return mem_alloc(size);
GAS LISTING /tmp/cc6dlNas.s 			page 12


  23:src/../h/../h/ThreadQueue.hpp ****         }
  24:src/../h/../h/ThreadQueue.hpp **** 
  25:src/../h/../h/ThreadQueue.hpp ****         static void operator delete(void *ptr) {
  26:src/../h/../h/ThreadQueue.hpp ****             mem_free(ptr);
  27:src/../h/../h/ThreadQueue.hpp ****         }
  28:src/../h/../h/ThreadQueue.hpp ****     };
  29:src/../h/../h/ThreadQueue.hpp **** 
  30:src/../h/../h/ThreadQueue.hpp ****     Node *front;
  31:src/../h/../h/ThreadQueue.hpp ****     Node *back;
  32:src/../h/../h/ThreadQueue.hpp **** 
  33:src/../h/../h/ThreadQueue.hpp **** public:
  34:src/../h/../h/ThreadQueue.hpp ****     ThreadQueue() : front(nullptr), back(nullptr) {}
 275              		.loc 4 34 49
 276 0194 23340504 		sd	zero,72(a0)
 277 0198 23380504 		sd	zero,80(a0)
 278              	.LVL19:
 279              	.LBE28:
 280              	.LBE27:
 281              		.loc 3 83 90
 282 019c 232C0504 		sw	zero,88(a0)
 283              	.LBB29:
  84:src/../h/TCB.hpp ****         //formiranje pocetnog konteksta; specijalni uslovi za main funkciju kojoj se pocetni kontek
  85:src/../h/TCB.hpp ****         uint64 startRa = threadFunction != nullptr ? (uint64)&wrapper : 0;
 284              		.loc 3 85 9 is_stmt 1
 285              		.loc 3 85 52 is_stmt 0
 286 01a0 630E0902 		beqz	s2,.L18
 287 01a4 97070000 		lla	a5,_ZN3TCB7wrapperEv
 287      93870700 
 288              	.L16:
 289              	.LVL20:
  86:src/../h/TCB.hpp ****         uint64 startSp = stack != nullptr ? (uint64)((char*)stack + DEFAULT_STACK_SIZE) : 0;
 290              		.loc 3 86 9 is_stmt 1
 291              		.loc 3 86 43 is_stmt 0
 292 01ac 638C0402 		beqz	s1,.L19
 293              		.loc 3 86 67
 294 01b0 37160000 		li	a2,4096
 295 01b4 B384C400 		add	s1,s1,a2
 296              	.LVL21:
 297              	.L17:
  87:src/../h/TCB.hpp ****         this->context.ra = startRa;
 298              		.loc 3 87 9 is_stmt 1
 299              		.loc 3 87 26 is_stmt 0
 300 01b8 2330F500 		sd	a5,0(a0)
  88:src/../h/TCB.hpp ****         this->context.sp = startSp;
 301              		.loc 3 88 9 is_stmt 1
 302              		.loc 3 88 26 is_stmt 0
 303 01bc 23349500 		sd	s1,8(a0)
 304              	.LVL22:
 305              	.LBE29:
 306              	.LBE26:
 307              	.LBE25:
  20:src/TCB.cpp   **** }
 308              		.loc 1 20 5 is_stmt 1
  21:src/TCB.cpp   **** 
 309              		.loc 1 21 1 is_stmt 0
 310 01c0 83308102 		ld	ra,40(sp)
 311              		.cfi_remember_state
GAS LISTING /tmp/cc6dlNas.s 			page 13


 312              		.cfi_restore 1
 313 01c4 03340102 		ld	s0,32(sp)
 314              		.cfi_restore 8
 315              		.cfi_def_cfa 2, 48
 316 01c8 83348101 		ld	s1,24(sp)
 317              		.cfi_restore 9
 318              	.LVL23:
 319 01cc 03390101 		ld	s2,16(sp)
 320              		.cfi_restore 18
 321              	.LVL24:
 322 01d0 83398100 		ld	s3,8(sp)
 323              		.cfi_restore 19
 324              	.LVL25:
 325 01d4 13010103 		addi	sp,sp,48
 326              		.cfi_def_cfa_offset 0
 327 01d8 67800000 		jr	ra
 328              	.LVL26:
 329              	.L18:
 330              		.cfi_restore_state
 331              	.LBB32:
 332              	.LBB31:
 333              	.LBB30:
  85:src/../h/TCB.hpp ****         uint64 startSp = stack != nullptr ? (uint64)((char*)stack + DEFAULT_STACK_SIZE) : 0;
 334              		.loc 3 85 52
 335 01dc 93070000 		li	a5,0
 336 01e0 6FF0DFFC 		j	.L16
 337              	.LVL27:
 338              	.L19:
  86:src/../h/TCB.hpp ****         this->context.ra = startRa;
 339              		.loc 3 86 43
 340 01e4 93040000 		li	s1,0
 341              	.LVL28:
 342 01e8 6FF01FFD 		j	.L17
 343              	.LBE30:
 344              	.LBE31:
 345              	.LBE32:
 346              		.cfi_endproc
 347              	.LFE43:
 349              		.align	2
 350              		.globl	_ZN3TCBdlEPv
 352              	_ZN3TCBdlEPv:
 353              	.LFB48:
  70:src/TCB.cpp   **** 
  71:src/TCB.cpp   **** void TCB::operator delete(void* ptr) {
 354              		.loc 1 71 38 is_stmt 1
 355              		.cfi_startproc
 356              	.LVL29:
 357 01ec 130101FF 		addi	sp,sp,-16
 358              		.cfi_def_cfa_offset 16
 359 01f0 23341100 		sd	ra,8(sp)
 360 01f4 23308100 		sd	s0,0(sp)
 361              		.cfi_offset 1, -8
 362              		.cfi_offset 8, -16
 363 01f8 13040101 		addi	s0,sp,16
 364              		.cfi_def_cfa 8, 0
  72:src/TCB.cpp   ****     mem_free(ptr);
 365              		.loc 1 72 5
GAS LISTING /tmp/cc6dlNas.s 			page 14


 366              		.loc 1 72 13 is_stmt 0
 367 01fc 97000000 		call	_Z8mem_freePv@plt
 367      E7800000 
 368              	.LVL30:
  73:src/TCB.cpp   ****     //MemoryAllocator::kfree(ptr);
  74:src/TCB.cpp   **** }
 369              		.loc 1 74 1
 370 0204 83308100 		ld	ra,8(sp)
 371              		.cfi_restore 1
 372 0208 03340100 		ld	s0,0(sp)
 373              		.cfi_restore 8
 374              		.cfi_def_cfa 2, 16
 375 020c 13010101 		addi	sp,sp,16
 376              		.cfi_def_cfa_offset 0
 377 0210 67800000 		jr	ra
 378              		.cfi_endproc
 379              	.LFE48:
 381              		.align	2
 382              		.globl	_ZN3TCB10threadJoinEPS_
 384              	_ZN3TCB10threadJoinEPS_:
 385              	.LFB49:
  75:src/TCB.cpp   **** 
  76:src/TCB.cpp   **** void TCB::threadJoin(TCB* handle) {
 386              		.loc 1 76 35 is_stmt 1
 387              		.cfi_startproc
 388              	.LVL31:
  77:src/TCB.cpp   ****     if (handle->status == FINISHED) return;
 389              		.loc 1 77 5
 390              		.loc 1 77 17 is_stmt 0
 391 0214 03278505 		lw	a4,88(a0)
 392              		.loc 1 77 5
 393 0218 93075000 		li	a5,5
 394 021c 6300F704 		beq	a4,a5,.L26
  76:src/TCB.cpp   ****     if (handle->status == FINISHED) return;
 395              		.loc 1 76 35
 396 0220 130101FF 		addi	sp,sp,-16
 397              		.cfi_def_cfa_offset 16
 398 0224 23341100 		sd	ra,8(sp)
 399 0228 23308100 		sd	s0,0(sp)
 400              		.cfi_offset 1, -8
 401              		.cfi_offset 8, -16
 402 022c 13040101 		addi	s0,sp,16
 403              		.cfi_def_cfa 8, 0
  78:src/TCB.cpp   ****     TCB::running->status = JOINING;
 404              		.loc 1 78 5 is_stmt 1
 405              		.loc 1 78 19 is_stmt 0
 406 0230 97050000 		ld	a1,.LANCHOR0
 406      83B50500 
 407              		.loc 1 78 26
 408 0238 93073000 		li	a5,3
 409 023c 23ACF504 		sw	a5,88(a1)
  79:src/TCB.cpp   ****     handle->waitingToJoin.putLast(TCB::running);
 410              		.loc 1 79 5 is_stmt 1
 411              		.loc 1 79 34 is_stmt 0
 412 0240 13058504 		addi	a0,a0,72
 413              	.LVL32:
 414 0244 97000000 		call	_ZN11ThreadQueue7putLastEP3TCB@plt
GAS LISTING /tmp/cc6dlNas.s 			page 15


 414      E7800000 
 415              	.LVL33:
  80:src/TCB.cpp   **** }
 416              		.loc 1 80 1
 417 024c 83308100 		ld	ra,8(sp)
 418              		.cfi_restore 1
 419 0250 03340100 		ld	s0,0(sp)
 420              		.cfi_restore 8
 421              		.cfi_def_cfa 2, 16
 422 0254 13010101 		addi	sp,sp,16
 423              		.cfi_def_cfa_offset 0
 424 0258 67800000 		jr	ra
 425              	.LVL34:
 426              	.L26:
 427 025c 67800000 		ret
 428              		.cfi_endproc
 429              	.LFE49:
 431              		.align	2
 432              		.globl	_ZN3TCB13releaseJoinedEv
 434              	_ZN3TCB13releaseJoinedEv:
 435              	.LFB50:
  81:src/TCB.cpp   **** 
  82:src/TCB.cpp   **** void TCB::releaseJoined() {
 436              		.loc 1 82 27 is_stmt 1
 437              		.cfi_startproc
  83:src/TCB.cpp   ****     while (!TCB::running->waitingToJoin.isEmpty()) {
 438              		.loc 1 83 5
 439              		.loc 1 83 12
 440              		.loc 1 83 27 is_stmt 0
 441 0260 17050000 		ld	a0,.LANCHOR0
 441      03350500 
 442              	.LVL35:
 443              	.LBB33:
 444              	.LBB34:
  35:src/../h/../h/ThreadQueue.hpp **** 
  36:src/../h/../h/ThreadQueue.hpp ****     ThreadQueue(const ThreadQueue &) = delete;
  37:src/../h/../h/ThreadQueue.hpp **** 
  38:src/../h/../h/ThreadQueue.hpp ****     ThreadQueue &operator=(const ThreadQueue &) = delete;
  39:src/../h/../h/ThreadQueue.hpp **** 
  40:src/../h/../h/ThreadQueue.hpp ****     ~ThreadQueue() {
  41:src/../h/../h/ThreadQueue.hpp ****         while (!isEmpty()) {
  42:src/../h/../h/ThreadQueue.hpp ****             Node *node = front;
  43:src/../h/../h/ThreadQueue.hpp ****             front = front->next;
  44:src/../h/../h/ThreadQueue.hpp ****             delete node;
  45:src/../h/../h/ThreadQueue.hpp ****         }
  46:src/../h/../h/ThreadQueue.hpp ****     }
  47:src/../h/../h/ThreadQueue.hpp **** 
  48:src/../h/../h/ThreadQueue.hpp ****     bool isEmpty() const {
  49:src/../h/../h/ThreadQueue.hpp ****         bool ret = front == nullptr;
 445              		.loc 4 49 9 is_stmt 1
 446              		.loc 4 49 20 is_stmt 0
 447 0268 83378504 		ld	a5,72(a0)
 448              	.LVL36:
  50:src/../h/../h/ThreadQueue.hpp ****         return ret;
 449              		.loc 4 50 9 is_stmt 1
 450              	.LBE34:
 451              	.LBE33:
GAS LISTING /tmp/cc6dlNas.s 			page 16


 452              		.loc 1 83 12 is_stmt 0
 453 026c 63880704 		beqz	a5,.L37
  82:src/TCB.cpp   ****     while (!TCB::running->waitingToJoin.isEmpty()) {
 454              		.loc 1 82 27
 455 0270 130101FF 		addi	sp,sp,-16
 456              		.cfi_def_cfa_offset 16
 457 0274 23341100 		sd	ra,8(sp)
 458 0278 23308100 		sd	s0,0(sp)
 459              		.cfi_offset 1, -8
 460              		.cfi_offset 8, -16
 461 027c 13040101 		addi	s0,sp,16
 462              		.cfi_def_cfa 8, 0
 463              	.L33:
 464              	.LBB36:
  84:src/TCB.cpp   ****         TCB* tcb = TCB::running->waitingToJoin.getFirst();
 465              		.loc 1 84 9 is_stmt 1
 466              		.loc 1 84 56 is_stmt 0
 467 0280 13058504 		addi	a0,a0,72
 468 0284 97000000 		call	_ZN11ThreadQueue8getFirstEv@plt
 468      E7800000 
 469              	.LVL37:
  85:src/TCB.cpp   ****         tcb->status = ACTIVE;
 470              		.loc 1 85 9 is_stmt 1
 471              		.loc 1 85 21 is_stmt 0
 472 028c 93071000 		li	a5,1
 473 0290 232CF504 		sw	a5,88(a0)
  86:src/TCB.cpp   ****         Scheduler::put(tcb);
 474              		.loc 1 86 9 is_stmt 1
 475              		.loc 1 86 23 is_stmt 0
 476 0294 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 476      E7800000 
 477              	.LVL38:
 478              	.LBE36:
  83:src/TCB.cpp   ****         TCB* tcb = TCB::running->waitingToJoin.getFirst();
 479              		.loc 1 83 5 is_stmt 1
  83:src/TCB.cpp   ****         TCB* tcb = TCB::running->waitingToJoin.getFirst();
 480              		.loc 1 83 12
  83:src/TCB.cpp   ****         TCB* tcb = TCB::running->waitingToJoin.getFirst();
 481              		.loc 1 83 27 is_stmt 0
 482 029c 17050000 		ld	a0,.LANCHOR0
 482      03350500 
 483              	.LVL39:
 484              	.LBB37:
 485              	.LBB35:
  49:src/../h/../h/ThreadQueue.hpp ****         return ret;
 486              		.loc 4 49 9 is_stmt 1
  49:src/../h/../h/ThreadQueue.hpp ****         return ret;
 487              		.loc 4 49 20 is_stmt 0
 488 02a4 83378504 		ld	a5,72(a0)
 489              	.LVL40:
 490              		.loc 4 50 9 is_stmt 1
 491              	.LBE35:
 492              	.LBE37:
  83:src/TCB.cpp   ****         TCB* tcb = TCB::running->waitingToJoin.getFirst();
 493              		.loc 1 83 12 is_stmt 0
 494 02a8 E39C07FC 		bnez	a5,.L33
  87:src/TCB.cpp   ****     }
GAS LISTING /tmp/cc6dlNas.s 			page 17


  88:src/TCB.cpp   **** }
 495              		.loc 1 88 1
 496 02ac 83308100 		ld	ra,8(sp)
 497              		.cfi_restore 1
 498 02b0 03340100 		ld	s0,0(sp)
 499              		.cfi_restore 8
 500              		.cfi_def_cfa 2, 16
 501 02b4 13010101 		addi	sp,sp,16
 502              		.cfi_def_cfa_offset 0
 503 02b8 67800000 		jr	ra
 504              	.L37:
 505 02bc 67800000 		ret
 506              		.cfi_endproc
 507              	.LFE50:
 509              		.align	2
 510              		.globl	_ZN3TCB5startEPS_
 512              	_ZN3TCB5startEPS_:
 513              	.LFB51:
  89:src/TCB.cpp   **** 
  90:src/TCB.cpp   **** void TCB::start(TCB* newTcb) {
 514              		.loc 1 90 30 is_stmt 1
 515              		.cfi_startproc
 516              	.LVL41:
  91:src/TCB.cpp   ****     //startovanje niti(stavljanje u Scheduler); main nit je vec aktivna, ne stavlja se u Scheduler
  92:src/TCB.cpp   ****     if (newTcb->threadFunction != nullptr) {
 517              		.loc 1 92 5
 518              		.loc 1 92 17 is_stmt 0
 519 02c0 83370501 		ld	a5,16(a0)
 520              		.loc 1 92 5
 521 02c4 63800704 		beqz	a5,.L41
  90:src/TCB.cpp   ****     //startovanje niti(stavljanje u Scheduler); main nit je vec aktivna, ne stavlja se u Scheduler
 522              		.loc 1 90 30
 523 02c8 130101FE 		addi	sp,sp,-32
 524              		.cfi_def_cfa_offset 32
 525 02cc 233C1100 		sd	ra,24(sp)
 526 02d0 23388100 		sd	s0,16(sp)
 527 02d4 23349100 		sd	s1,8(sp)
 528              		.cfi_offset 1, -8
 529              		.cfi_offset 8, -16
 530              		.cfi_offset 9, -24
 531 02d8 13040102 		addi	s0,sp,32
 532              		.cfi_def_cfa 8, 0
 533 02dc 93040500 		mv	s1,a0
  93:src/TCB.cpp   ****         Scheduler::put(newTcb);
 534              		.loc 1 93 9 is_stmt 1
 535              		.loc 1 93 23 is_stmt 0
 536 02e0 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 536      E7800000 
 537              	.LVL42:
  94:src/TCB.cpp   ****         newTcb->status = ACTIVE;
 538              		.loc 1 94 9 is_stmt 1
 539              		.loc 1 94 24 is_stmt 0
 540 02e8 93071000 		li	a5,1
 541 02ec 23ACF404 		sw	a5,88(s1)
  95:src/TCB.cpp   ****     }
  96:src/TCB.cpp   **** }
 542              		.loc 1 96 1
GAS LISTING /tmp/cc6dlNas.s 			page 18


 543 02f0 83308101 		ld	ra,24(sp)
 544              		.cfi_restore 1
 545 02f4 03340101 		ld	s0,16(sp)
 546              		.cfi_restore 8
 547              		.cfi_def_cfa 2, 32
 548 02f8 83348100 		ld	s1,8(sp)
 549              		.cfi_restore 9
 550              	.LVL43:
 551 02fc 13010102 		addi	sp,sp,32
 552              		.cfi_def_cfa_offset 0
 553 0300 67800000 		jr	ra
 554              	.LVL44:
 555              	.L41:
 556 0304 67800000 		ret
 557              		.cfi_endproc
 558              	.LFE51:
 560              		.globl	_ZN3TCB16runningTimeSliceE
 561              		.globl	_ZN3TCB7runningE
 562              		.bss
 563              		.align	3
 564              		.set	.LANCHOR0,. + 0
 567              	_ZN3TCB7runningE:
 568 0000 00000000 		.zero	8
 568      00000000 
 571              	_ZN3TCB16runningTimeSliceE:
 572 0008 00000000 		.zero	8
 572      00000000 
 573              		.text
 574              	.Letext0:
 575              		.file 5 "src/../h/../lib/hw.h"
 576              		.file 6 "src/../h/Scheduler.hpp"
 577              		.file 7 "src/../h/../h/../h/syscall_c.hpp"
GAS LISTING /tmp/cc6dlNas.s 			page 19


DEFINED SYMBOLS
                            *ABS*:0000000000000000 TCB.cpp
     /tmp/cc6dlNas.s:9      .text:0000000000000000 _ZN3TCB7wrapperEv
     /tmp/cc6dlNas.s:13     .text:0000000000000000 .L0 
     /tmp/cc6dlNas.s:14     .text:0000000000000000 .L0 
     /tmp/cc6dlNas.s:15     .text:0000000000000004 .L0 
     /tmp/cc6dlNas.s:18     .text:000000000000000c .L0 
     /tmp/cc6dlNas.s:19     .text:000000000000000c .L0 
     /tmp/cc6dlNas.s:21     .text:0000000000000010 .L0 
     /tmp/cc6dlNas.s:23     .text:0000000000000010 .L0 
     /tmp/cc6dlNas.s:24     .text:0000000000000010 .L0 
     /tmp/cc6dlNas.s:27     .text:0000000000000018 .L0 
     /tmp/cc6dlNas.s:28     .text:0000000000000018 .L0 
     /tmp/cc6dlNas.s:31     .text:0000000000000024 .L0 
     /tmp/cc6dlNas.s:35     .text:000000000000002c .L0 
     /tmp/cc6dlNas.s:36     .text:000000000000002c .L0 
     /tmp/cc6dlNas.s:39     .text:0000000000000034 .L0 
     /tmp/cc6dlNas.s:40     .text:0000000000000038 .L0 
     /tmp/cc6dlNas.s:42     .text:000000000000003c .L0 
     /tmp/cc6dlNas.s:43     .text:000000000000003c .L0 
     /tmp/cc6dlNas.s:45     .text:0000000000000040 .L0 
     /tmp/cc6dlNas.s:47     .text:0000000000000044 .L0 
     /tmp/cc6dlNas.s:53     .text:0000000000000044 _ZN3TCB8dispatchEv
     /tmp/cc6dlNas.s:56     .text:0000000000000044 .L0 
     /tmp/cc6dlNas.s:57     .text:0000000000000044 .L0 
     /tmp/cc6dlNas.s:58     .text:0000000000000048 .L0 
     /tmp/cc6dlNas.s:62     .text:0000000000000054 .L0 
     /tmp/cc6dlNas.s:63     .text:0000000000000054 .L0 
     /tmp/cc6dlNas.s:64     .text:0000000000000054 .L0 
     /tmp/cc6dlNas.s:66     .text:0000000000000058 .L0 
     /tmp/cc6dlNas.s:68     .text:0000000000000058 .L0 
     /tmp/cc6dlNas.s:69     .text:0000000000000058 .L0 
     /tmp/cc6dlNas.s:72     .text:0000000000000060 .L0 
     /tmp/cc6dlNas.s:73     .text:0000000000000060 .L0 
     /tmp/cc6dlNas.s:75     .text:0000000000000064 .L0 
     /tmp/cc6dlNas.s:79     .text:000000000000006c .L0 
     /tmp/cc6dlNas.s:80     .text:000000000000006c .L0 
     /tmp/cc6dlNas.s:84     .text:0000000000000078 .L0 
     /tmp/cc6dlNas.s:87     .text:0000000000000084 .L0 
     /tmp/cc6dlNas.s:88     .text:0000000000000084 .L0 
     /tmp/cc6dlNas.s:90     .text:0000000000000088 .L0 
     /tmp/cc6dlNas.s:91     .text:0000000000000088 .L0 
     /tmp/cc6dlNas.s:93     .text:000000000000008c .L0 
     /tmp/cc6dlNas.s:95     .text:0000000000000090 .L0 
     /tmp/cc6dlNas.s:98     .text:000000000000009c .L0 
     /tmp/cc6dlNas.s:105    .text:00000000000000a8 .L0 
     /tmp/cc6dlNas.s:106    .text:00000000000000a8 .L0 
     /tmp/cc6dlNas.s:107    .text:00000000000000a8 .L0 
     /tmp/cc6dlNas.s:114    .text:00000000000000b0 .L0 
     /tmp/cc6dlNas.s:120    .text:00000000000000b4 .L0 
     /tmp/cc6dlNas.s:121    .text:00000000000000b4 .L0 
     /tmp/cc6dlNas.s:130    .text:00000000000000c4 .L0 
     /tmp/cc6dlNas.s:131    .text:00000000000000c4 .L0 
     /tmp/cc6dlNas.s:132    .text:00000000000000c4 .L0 
     /tmp/cc6dlNas.s:143    .text:00000000000000cc .L0 
     /tmp/cc6dlNas.s:145    .text:00000000000000d0 .L0 
     /tmp/cc6dlNas.s:146    .text:00000000000000d0 .L0 
GAS LISTING /tmp/cc6dlNas.s 			page 20


     /tmp/cc6dlNas.s:151    .text:00000000000000dc .L0 
     /tmp/cc6dlNas.s:152    .text:00000000000000e0 .L0 
     /tmp/cc6dlNas.s:154    .text:00000000000000e4 .L0 
     /tmp/cc6dlNas.s:155    .text:00000000000000e4 .L0 
     /tmp/cc6dlNas.s:157    .text:00000000000000e8 .L0 
     /tmp/cc6dlNas.s:160    .text:00000000000000ec .L0 
     /tmp/cc6dlNas.s:162    .text:00000000000000f0 .L0 
     /tmp/cc6dlNas.s:168    .text:00000000000000f0 _ZN3TCB5yieldEv
     /tmp/cc6dlNas.s:171    .text:00000000000000f0 .L0 
     /tmp/cc6dlNas.s:172    .text:00000000000000f0 .L0 
     /tmp/cc6dlNas.s:173    .text:00000000000000f4 .L0 
     /tmp/cc6dlNas.s:176    .text:00000000000000fc .L0 
     /tmp/cc6dlNas.s:177    .text:00000000000000fc .L0 
     /tmp/cc6dlNas.s:179    .text:0000000000000100 .L0 
     /tmp/cc6dlNas.s:181    .text:0000000000000100 .L0 
     /tmp/cc6dlNas.s:182    .text:0000000000000100 .L0 
     /tmp/cc6dlNas.s:185    .text:0000000000000108 .L0 
     /tmp/cc6dlNas.s:186    .text:000000000000010c .L0 
     /tmp/cc6dlNas.s:188    .text:0000000000000110 .L0 
     /tmp/cc6dlNas.s:189    .text:0000000000000110 .L0 
     /tmp/cc6dlNas.s:191    .text:0000000000000114 .L0 
     /tmp/cc6dlNas.s:193    .text:0000000000000118 .L0 
     /tmp/cc6dlNas.s:199    .text:0000000000000118 _ZN3TCBnwEm
     /tmp/cc6dlNas.s:202    .text:0000000000000118 .L0 
     /tmp/cc6dlNas.s:204    .text:0000000000000118 .L0 
     /tmp/cc6dlNas.s:205    .text:000000000000011c .L0 
     /tmp/cc6dlNas.s:208    .text:0000000000000124 .L0 
     /tmp/cc6dlNas.s:209    .text:0000000000000124 .L0 
     /tmp/cc6dlNas.s:211    .text:0000000000000128 .L0 
     /tmp/cc6dlNas.s:213    .text:0000000000000128 .L0 
     /tmp/cc6dlNas.s:214    .text:0000000000000128 .L0 
     /tmp/cc6dlNas.s:217    .text:0000000000000130 .L0 
     /tmp/cc6dlNas.s:218    .text:0000000000000134 .L0 
     /tmp/cc6dlNas.s:220    .text:0000000000000138 .L0 
     /tmp/cc6dlNas.s:221    .text:0000000000000138 .L0 
     /tmp/cc6dlNas.s:223    .text:000000000000013c .L0 
     /tmp/cc6dlNas.s:225    .text:0000000000000140 .L0 
     /tmp/cc6dlNas.s:231    .text:0000000000000140 _ZN3TCB12createThreadEPFvPvES0_Pm
     /tmp/cc6dlNas.s:234    .text:0000000000000140 .L0 
     /tmp/cc6dlNas.s:236    .text:0000000000000140 .L0 
     /tmp/cc6dlNas.s:237    .text:0000000000000144 .L0 
     /tmp/cc6dlNas.s:243    .text:0000000000000158 .L0 
     /tmp/cc6dlNas.s:244    .text:0000000000000158 .L0 
     /tmp/cc6dlNas.s:245    .text:0000000000000158 .L0 
     /tmp/cc6dlNas.s:246    .text:0000000000000158 .L0 
     /tmp/cc6dlNas.s:247    .text:0000000000000158 .L0 
     /tmp/cc6dlNas.s:249    .text:000000000000015c .L0 
     /tmp/cc6dlNas.s:254    .text:0000000000000168 .L0 
     /tmp/cc6dlNas.s:255    .text:0000000000000168 .L0 
     /tmp/cc6dlNas.s:263    .text:0000000000000174 .L0 
     /tmp/cc6dlNas.s:276    .text:0000000000000194 .L0 
     /tmp/cc6dlNas.s:282    .text:000000000000019c .L0 
     /tmp/cc6dlNas.s:285    .text:00000000000001a0 .L0 
     /tmp/cc6dlNas.s:286    .text:00000000000001a0 .L0 
     /tmp/cc6dlNas.s:291    .text:00000000000001ac .L0 
     /tmp/cc6dlNas.s:292    .text:00000000000001ac .L0 
     /tmp/cc6dlNas.s:294    .text:00000000000001b0 .L0 
GAS LISTING /tmp/cc6dlNas.s 			page 21


     /tmp/cc6dlNas.s:299    .text:00000000000001b8 .L0 
     /tmp/cc6dlNas.s:300    .text:00000000000001b8 .L0 
     /tmp/cc6dlNas.s:302    .text:00000000000001bc .L0 
     /tmp/cc6dlNas.s:303    .text:00000000000001bc .L0 
     /tmp/cc6dlNas.s:309    .text:00000000000001c0 .L0 
     /tmp/cc6dlNas.s:310    .text:00000000000001c0 .L0 
     /tmp/cc6dlNas.s:311    .text:00000000000001c4 .L0 
     /tmp/cc6dlNas.s:312    .text:00000000000001c4 .L0 
     /tmp/cc6dlNas.s:314    .text:00000000000001c8 .L0 
     /tmp/cc6dlNas.s:315    .text:00000000000001c8 .L0 
     /tmp/cc6dlNas.s:317    .text:00000000000001cc .L0 
     /tmp/cc6dlNas.s:320    .text:00000000000001d0 .L0 
     /tmp/cc6dlNas.s:323    .text:00000000000001d4 .L0 
     /tmp/cc6dlNas.s:326    .text:00000000000001d8 .L0 
     /tmp/cc6dlNas.s:330    .text:00000000000001dc .L0 
     /tmp/cc6dlNas.s:335    .text:00000000000001dc .L0 
     /tmp/cc6dlNas.s:340    .text:00000000000001e4 .L0 
     /tmp/cc6dlNas.s:346    .text:00000000000001ec .L0 
     /tmp/cc6dlNas.s:352    .text:00000000000001ec _ZN3TCBdlEPv
     /tmp/cc6dlNas.s:355    .text:00000000000001ec .L0 
     /tmp/cc6dlNas.s:357    .text:00000000000001ec .L0 
     /tmp/cc6dlNas.s:358    .text:00000000000001f0 .L0 
     /tmp/cc6dlNas.s:361    .text:00000000000001f8 .L0 
     /tmp/cc6dlNas.s:362    .text:00000000000001f8 .L0 
     /tmp/cc6dlNas.s:364    .text:00000000000001fc .L0 
     /tmp/cc6dlNas.s:366    .text:00000000000001fc .L0 
     /tmp/cc6dlNas.s:367    .text:00000000000001fc .L0 
     /tmp/cc6dlNas.s:370    .text:0000000000000204 .L0 
     /tmp/cc6dlNas.s:371    .text:0000000000000208 .L0 
     /tmp/cc6dlNas.s:373    .text:000000000000020c .L0 
     /tmp/cc6dlNas.s:374    .text:000000000000020c .L0 
     /tmp/cc6dlNas.s:376    .text:0000000000000210 .L0 
     /tmp/cc6dlNas.s:378    .text:0000000000000214 .L0 
     /tmp/cc6dlNas.s:384    .text:0000000000000214 _ZN3TCB10threadJoinEPS_
     /tmp/cc6dlNas.s:387    .text:0000000000000214 .L0 
     /tmp/cc6dlNas.s:389    .text:0000000000000214 .L0 
     /tmp/cc6dlNas.s:390    .text:0000000000000214 .L0 
     /tmp/cc6dlNas.s:391    .text:0000000000000214 .L0 
     /tmp/cc6dlNas.s:393    .text:0000000000000218 .L0 
     /tmp/cc6dlNas.s:396    .text:0000000000000220 .L0 
     /tmp/cc6dlNas.s:397    .text:0000000000000224 .L0 
     /tmp/cc6dlNas.s:400    .text:000000000000022c .L0 
     /tmp/cc6dlNas.s:401    .text:000000000000022c .L0 
     /tmp/cc6dlNas.s:403    .text:0000000000000230 .L0 
     /tmp/cc6dlNas.s:405    .text:0000000000000230 .L0 
     /tmp/cc6dlNas.s:406    .text:0000000000000230 .L0 
     /tmp/cc6dlNas.s:408    .text:0000000000000238 .L0 
     /tmp/cc6dlNas.s:411    .text:0000000000000240 .L0 
     /tmp/cc6dlNas.s:412    .text:0000000000000240 .L0 
     /tmp/cc6dlNas.s:417    .text:000000000000024c .L0 
     /tmp/cc6dlNas.s:418    .text:0000000000000250 .L0 
     /tmp/cc6dlNas.s:420    .text:0000000000000254 .L0 
     /tmp/cc6dlNas.s:421    .text:0000000000000254 .L0 
     /tmp/cc6dlNas.s:423    .text:0000000000000258 .L0 
     /tmp/cc6dlNas.s:428    .text:0000000000000260 .L0 
     /tmp/cc6dlNas.s:434    .text:0000000000000260 _ZN3TCB13releaseJoinedEv
     /tmp/cc6dlNas.s:437    .text:0000000000000260 .L0 
GAS LISTING /tmp/cc6dlNas.s 			page 22


     /tmp/cc6dlNas.s:438    .text:0000000000000260 .L0 
     /tmp/cc6dlNas.s:439    .text:0000000000000260 .L0 
     /tmp/cc6dlNas.s:440    .text:0000000000000260 .L0 
     /tmp/cc6dlNas.s:441    .text:0000000000000260 .L0 
     /tmp/cc6dlNas.s:446    .text:0000000000000268 .L0 
     /tmp/cc6dlNas.s:447    .text:0000000000000268 .L0 
     /tmp/cc6dlNas.s:452    .text:000000000000026c .L0 
     /tmp/cc6dlNas.s:453    .text:000000000000026c .L0 
     /tmp/cc6dlNas.s:455    .text:0000000000000270 .L0 
     /tmp/cc6dlNas.s:456    .text:0000000000000274 .L0 
     /tmp/cc6dlNas.s:459    .text:000000000000027c .L0 
     /tmp/cc6dlNas.s:460    .text:000000000000027c .L0 
     /tmp/cc6dlNas.s:462    .text:0000000000000280 .L0 
     /tmp/cc6dlNas.s:466    .text:0000000000000280 .L0 
     /tmp/cc6dlNas.s:467    .text:0000000000000280 .L0 
     /tmp/cc6dlNas.s:471    .text:000000000000028c .L0 
     /tmp/cc6dlNas.s:472    .text:000000000000028c .L0 
     /tmp/cc6dlNas.s:475    .text:0000000000000294 .L0 
     /tmp/cc6dlNas.s:476    .text:0000000000000294 .L0 
     /tmp/cc6dlNas.s:480    .text:000000000000029c .L0 
     /tmp/cc6dlNas.s:481    .text:000000000000029c .L0 
     /tmp/cc6dlNas.s:482    .text:000000000000029c .L0 
     /tmp/cc6dlNas.s:487    .text:00000000000002a4 .L0 
     /tmp/cc6dlNas.s:488    .text:00000000000002a4 .L0 
     /tmp/cc6dlNas.s:493    .text:00000000000002a8 .L0 
     /tmp/cc6dlNas.s:494    .text:00000000000002a8 .L0 
     /tmp/cc6dlNas.s:496    .text:00000000000002ac .L0 
     /tmp/cc6dlNas.s:497    .text:00000000000002b0 .L0 
     /tmp/cc6dlNas.s:499    .text:00000000000002b4 .L0 
     /tmp/cc6dlNas.s:500    .text:00000000000002b4 .L0 
     /tmp/cc6dlNas.s:502    .text:00000000000002b8 .L0 
     /tmp/cc6dlNas.s:506    .text:00000000000002c0 .L0 
     /tmp/cc6dlNas.s:512    .text:00000000000002c0 _ZN3TCB5startEPS_
     /tmp/cc6dlNas.s:515    .text:00000000000002c0 .L0 
     /tmp/cc6dlNas.s:517    .text:00000000000002c0 .L0 
     /tmp/cc6dlNas.s:518    .text:00000000000002c0 .L0 
     /tmp/cc6dlNas.s:519    .text:00000000000002c0 .L0 
     /tmp/cc6dlNas.s:521    .text:00000000000002c4 .L0 
     /tmp/cc6dlNas.s:523    .text:00000000000002c8 .L0 
     /tmp/cc6dlNas.s:524    .text:00000000000002cc .L0 
     /tmp/cc6dlNas.s:528    .text:00000000000002d8 .L0 
     /tmp/cc6dlNas.s:529    .text:00000000000002d8 .L0 
     /tmp/cc6dlNas.s:530    .text:00000000000002d8 .L0 
     /tmp/cc6dlNas.s:532    .text:00000000000002dc .L0 
     /tmp/cc6dlNas.s:535    .text:00000000000002e0 .L0 
     /tmp/cc6dlNas.s:536    .text:00000000000002e0 .L0 
     /tmp/cc6dlNas.s:539    .text:00000000000002e8 .L0 
     /tmp/cc6dlNas.s:540    .text:00000000000002e8 .L0 
     /tmp/cc6dlNas.s:543    .text:00000000000002f0 .L0 
     /tmp/cc6dlNas.s:544    .text:00000000000002f4 .L0 
     /tmp/cc6dlNas.s:546    .text:00000000000002f8 .L0 
     /tmp/cc6dlNas.s:547    .text:00000000000002f8 .L0 
     /tmp/cc6dlNas.s:549    .text:00000000000002fc .L0 
     /tmp/cc6dlNas.s:552    .text:0000000000000300 .L0 
     /tmp/cc6dlNas.s:557    .text:0000000000000308 .L0 
     /tmp/cc6dlNas.s:571    .bss:0000000000000008 _ZN3TCB16runningTimeSliceE
     /tmp/cc6dlNas.s:567    .bss:0000000000000000 _ZN3TCB7runningE
GAS LISTING /tmp/cc6dlNas.s 			page 23


     /tmp/cc6dlNas.s:564    .bss:0000000000000000 .LANCHOR0
     /tmp/cc6dlNas.s:578    .text:0000000000000308 .L0 
     /tmp/cc6dlNas.s:28     .text:0000000000000018 .L0 
     /tmp/cc6dlNas.s:69     .text:0000000000000058 .L0 
     /tmp/cc6dlNas.s:84     .text:0000000000000078 .L0 
     /tmp/cc6dlNas.s:95     .text:0000000000000090 .L0 
     /tmp/cc6dlNas.s:98     .text:000000000000009c .L0 
     /tmp/cc6dlNas.s:287    .text:00000000000001a4 .L0 
     /tmp/cc6dlNas.s:406    .text:0000000000000230 .L0 
     /tmp/cc6dlNas.s:441    .text:0000000000000260 .L0 
     /tmp/cc6dlNas.s:482    .text:000000000000029c .L0 
     /tmp/cc6dlNas.s:116    .text:00000000000000b4 .L10
     /tmp/cc6dlNas.s:125    .text:00000000000000c4 .L5
     /tmp/cc6dlNas.s:139    .text:00000000000000cc .L7
     /tmp/cc6dlNas.s:77     .text:000000000000006c .L4
     /tmp/cc6dlNas.s:149    .text:00000000000000dc .L3
     /tmp/cc6dlNas.s:329    .text:00000000000001dc .L18
     /tmp/cc6dlNas.s:338    .text:00000000000001e4 .L19
     /tmp/cc6dlNas.s:288    .text:00000000000001ac .L16
     /tmp/cc6dlNas.s:297    .text:00000000000001b8 .L17
     /tmp/cc6dlNas.s:426    .text:000000000000025c .L26
     /tmp/cc6dlNas.s:504    .text:00000000000002bc .L37
     /tmp/cc6dlNas.s:463    .text:0000000000000280 .L33
     /tmp/cc6dlNas.s:555    .text:0000000000000304 .L41
     /tmp/cc6dlNas.s:2075   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cc6dlNas.s:3819   .debug_str:00000000000007dd .LASF161
     /tmp/cc6dlNas.s:3625   .debug_str:0000000000000226 .LASF162
     /tmp/cc6dlNas.s:3783   .debug_str:00000000000006c0 .LASF163
     /tmp/cc6dlNas.s:5      .text:0000000000000000 .Ltext0
     /tmp/cc6dlNas.s:574    .text:0000000000000308 .Letext0
     /tmp/cc6dlNas.s:3551   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cc6dlNas.s:3669   .debug_str:00000000000003b2 .LASF0
     /tmp/cc6dlNas.s:3691   .debug_str:0000000000000435 .LASF1
     /tmp/cc6dlNas.s:3763   .debug_str:0000000000000635 .LASF2
     /tmp/cc6dlNas.s:3773   .debug_str:000000000000068b .LASF4
     /tmp/cc6dlNas.s:3675   .debug_str:00000000000003cf .LASF3
     /tmp/cc6dlNas.s:3563   .debug_str:0000000000000058 .LASF5
     /tmp/cc6dlNas.s:3745   .debug_str:000000000000059d .LASF6
     /tmp/cc6dlNas.s:3741   .debug_str:0000000000000582 .LASF7
     /tmp/cc6dlNas.s:3679   .debug_str:00000000000003f3 .LASF8
     /tmp/cc6dlNas.s:3645   .debug_str:00000000000002d5 .LASF9
     /tmp/cc6dlNas.s:3651   .debug_str:0000000000000309 .LASF10
     /tmp/cc6dlNas.s:3587   .debug_str:000000000000011e .LASF11
     /tmp/cc6dlNas.s:3637   .debug_str:000000000000029f .LASF12
     /tmp/cc6dlNas.s:3601   .debug_str:0000000000000178 .LASF13
     /tmp/cc6dlNas.s:3585   .debug_str:000000000000010e .LASF14
     /tmp/cc6dlNas.s:3805   .debug_str:0000000000000779 .LASF15
     /tmp/cc6dlNas.s:3807   .debug_str:0000000000000785 .LASF16
     /tmp/cc6dlNas.s:3793   .debug_str:0000000000000725 .LASF17
     /tmp/cc6dlNas.s:3703   .debug_str:000000000000047c .LASF18
     /tmp/cc6dlNas.s:3789   .debug_str:0000000000000703 .LASF87
     /tmp/cc6dlNas.s:3747   .debug_str:00000000000005a4 .LASF19
     /tmp/cc6dlNas.s:3613   .debug_str:00000000000001e9 .LASF20
     /tmp/cc6dlNas.s:3555   .debug_str:000000000000000b .LASF21
     /tmp/cc6dlNas.s:3565   .debug_str:000000000000005f .LASF22
     /tmp/cc6dlNas.s:3595   .debug_str:0000000000000146 .LASF23
     /tmp/cc6dlNas.s:3579   .debug_str:00000000000000e5 .LASF24
GAS LISTING /tmp/cc6dlNas.s 			page 24


     /tmp/cc6dlNas.s:3811   .debug_str:00000000000007b0 .LASF64
     /tmp/cc6dlNas.s:3591   .debug_str:0000000000000132 .LASF25
     /tmp/cc6dlNas.s:3653   .debug_str:0000000000000317 .LASF27
     /tmp/cc6dlNas.s:3671   .debug_str:00000000000003bf .LASF29
     /tmp/cc6dlNas.s:3701   .debug_str:0000000000000468 .LASF31
     /tmp/cc6dlNas.s:3803   .debug_str:000000000000076c .LASF26
     /tmp/cc6dlNas.s:3861   .debug_str:0000000000000990 .LASF28
     /tmp/cc6dlNas.s:3735   .debug_str:0000000000000568 .LASF164
     /tmp/cc6dlNas.s:3875   .debug_str:0000000000000a0c .LASF35
     /tmp/cc6dlNas.s:3677   .debug_str:00000000000003e1 .LASF37
     /tmp/cc6dlNas.s:3697   .debug_str:0000000000000456 .LASF30
     /tmp/cc6dlNas.s:3753   .debug_str:00000000000005da .LASF32
     /tmp/cc6dlNas.s:3617   .debug_str:00000000000001f5 .LASF33
     /tmp/cc6dlNas.s:3769   .debug_str:0000000000000665 .LASF34
     /tmp/cc6dlNas.s:3835   .debug_str:000000000000090b .LASF36
     /tmp/cc6dlNas.s:3639   .debug_str:00000000000002ae .LASF38
     /tmp/cc6dlNas.s:3851   .debug_str:0000000000000947 .LASF39
     /tmp/cc6dlNas.s:3635   .debug_str:0000000000000286 .LASF41
     /tmp/cc6dlNas.s:3695   .debug_str:0000000000000450 .LASF40
     /tmp/cc6dlNas.s:3821   .debug_str:00000000000008a1 .LASF42
     /tmp/cc6dlNas.s:3619   .debug_str:0000000000000202 .LASF43
     /tmp/cc6dlNas.s:3597   .debug_str:000000000000014f .LASF44
     /tmp/cc6dlNas.s:3841   .debug_str:0000000000000921 .LASF45
     /tmp/cc6dlNas.s:3569   .debug_str:0000000000000083 .LASF46
     /tmp/cc6dlNas.s:3815   .debug_str:00000000000007c5 .LASF47
     /tmp/cc6dlNas.s:3581   .debug_str:00000000000000ee .LASF48
     /tmp/cc6dlNas.s:3885   .debug_str:0000000000000a51 .LASF49
     /tmp/cc6dlNas.s:3649   .debug_str:00000000000002fd .LASF50
     /tmp/cc6dlNas.s:3559   .debug_str:0000000000000020 .LASF51
     /tmp/cc6dlNas.s:3729   .debug_str:0000000000000532 .LASF52
     /tmp/cc6dlNas.s:3831   .debug_str:00000000000008ee .LASF53
     /tmp/cc6dlNas.s:3583   .debug_str:00000000000000ff .LASF54
     /tmp/cc6dlNas.s:3881   .debug_str:0000000000000a33 .LASF55
     /tmp/cc6dlNas.s:3839   .debug_str:000000000000091c .LASF56
     /tmp/cc6dlNas.s:3823   .debug_str:00000000000008b1 .LASF57
     /tmp/cc6dlNas.s:3817   .debug_str:00000000000007cd .LASF58
     /tmp/cc6dlNas.s:3739   .debug_str:0000000000000576 .LASF59
     /tmp/cc6dlNas.s:3557   .debug_str:0000000000000013 .LASF60
     /tmp/cc6dlNas.s:3771   .debug_str:000000000000067d .LASF61
     /tmp/cc6dlNas.s:3847   .debug_str:0000000000000935 .LASF62
     /tmp/cc6dlNas.s:3873   .debug_str:00000000000009f6 .LASF134
     /tmp/cc6dlNas.s:3607   .debug_str:00000000000001b5 .LASF70
     /tmp/cc6dlNas.s:3561   .debug_str:0000000000000030 .LASF71
     /tmp/cc6dlNas.s:3727   .debug_str:0000000000000526 .LASF63
     /tmp/cc6dlNas.s:3615   .debug_str:00000000000001f0 .LASF65
     /tmp/cc6dlNas.s:3685   .debug_str:0000000000000426 .LASF66
     /tmp/cc6dlNas.s:3589   .debug_str:000000000000012d .LASF67
     /tmp/cc6dlNas.s:3627   .debug_str:0000000000000232 .LASF68
     /tmp/cc6dlNas.s:3609   .debug_str:00000000000001c3 .LASF69
     /tmp/cc6dlNas.s:3749   .debug_str:00000000000005ac .LASF72
     /tmp/cc6dlNas.s:3837   .debug_str:0000000000000916 .LASF73
     /tmp/cc6dlNas.s:3687   .debug_str:000000000000042b .LASF74
     /tmp/cc6dlNas.s:3571   .debug_str:0000000000000095 .LASF75
     /tmp/cc6dlNas.s:3647   .debug_str:00000000000002e5 .LASF76
     /tmp/cc6dlNas.s:3765   .debug_str:0000000000000643 .LASF165
     /tmp/cc6dlNas.s:3829   .debug_str:00000000000008d6 .LASF166
     /tmp/cc6dlNas.s:3813   .debug_str:00000000000007b8 .LASF77
GAS LISTING /tmp/cc6dlNas.s 			page 25


     /tmp/cc6dlNas.s:3859   .debug_str:000000000000097b .LASF78
     /tmp/cc6dlNas.s:3621   .debug_str:000000000000020b .LASF79
     /tmp/cc6dlNas.s:3567   .debug_str:0000000000000067 .LASF80
     /tmp/cc6dlNas.s:3693   .debug_str:0000000000000448 .LASF81
     /tmp/cc6dlNas.s:3715   .debug_str:00000000000004df .LASF82
     /tmp/cc6dlNas.s:3577   .debug_str:00000000000000dc .LASF83
     /tmp/cc6dlNas.s:3713   .debug_str:00000000000004c3 .LASF84
     /tmp/cc6dlNas.s:3603   .debug_str:0000000000000188 .LASF85
     /tmp/cc6dlNas.s:3853   .debug_str:0000000000000955 .LASF127
     /tmp/cc6dlNas.s:3855   .debug_str:000000000000096b .LASF86
     /tmp/cc6dlNas.s:3629   .debug_str:0000000000000250 .LASF88
     /tmp/cc6dlNas.s:3631   .debug_str:000000000000025f .LASF89
     /tmp/cc6dlNas.s:3683   .debug_str:0000000000000419 .LASF90
     /tmp/cc6dlNas.s:3611   .debug_str:00000000000001dd .LASF91
     /tmp/cc6dlNas.s:3659   .debug_str:000000000000035c .LASF92
     /tmp/cc6dlNas.s:3667   .debug_str:000000000000039a .LASF93
     /tmp/cc6dlNas.s:3781   .debug_str:00000000000006b2 .LASF94
     /tmp/cc6dlNas.s:3787   .debug_str:00000000000006e8 .LASF95
     /tmp/cc6dlNas.s:3717   .debug_str:00000000000004fe .LASF96
     /tmp/cc6dlNas.s:3863   .debug_str:00000000000009b2 .LASF97
     /tmp/cc6dlNas.s:3869   .debug_str:00000000000009db .LASF100
     /tmp/cc6dlNas.s:3833   .debug_str:00000000000008f6 .LASF102
     /tmp/cc6dlNas.s:3759   .debug_str:0000000000000621 .LASF98
     /tmp/cc6dlNas.s:3733   .debug_str:0000000000000553 .LASF99
     /tmp/cc6dlNas.s:3843   .debug_str:0000000000000929 .LASF101
     /tmp/cc6dlNas.s:3751   .debug_str:00000000000005c7 .LASF103
     /tmp/cc6dlNas.s:3725   .debug_str:000000000000051f .LASF104
     /tmp/cc6dlNas.s:3681   .debug_str:0000000000000406 .LASF105
     /tmp/cc6dlNas.s:3865   .debug_str:00000000000009cc .LASF106
     /tmp/cc6dlNas.s:3801   .debug_str:0000000000000758 .LASF107
     /tmp/cc6dlNas.s:3719   .debug_str:000000000000050b .LASF108
     /tmp/cc6dlNas.s:3731   .debug_str:000000000000053f .LASF109
     /tmp/cc6dlNas.s:3799   .debug_str:0000000000000751 .LASF110
     /tmp/cc6dlNas.s:3777   .debug_str:0000000000000698 .LASF111
     /tmp/cc6dlNas.s:3779   .debug_str:00000000000006ab .LASF112
     /tmp/cc6dlNas.s:3623   .debug_str:0000000000000213 .LASF113
     /tmp/cc6dlNas.s:3775   .debug_str:0000000000000692 .LASF114
     /tmp/cc6dlNas.s:3663   .debug_str:000000000000037f .LASF115
     /tmp/cc6dlNas.s:3673   .debug_str:00000000000003c9 .LASF116
     /tmp/cc6dlNas.s:3657   .debug_str:000000000000034a .LASF117
     /tmp/cc6dlNas.s:3553   .debug_str:0000000000000000 .LASF118
     /tmp/cc6dlNas.s:3767   .debug_str:000000000000064d .LASF119
     /tmp/cc6dlNas.s:3761   .debug_str:000000000000062a .LASF120
     /tmp/cc6dlNas.s:3883   .debug_str:0000000000000a39 .LASF121
     /tmp/cc6dlNas.s:3857   .debug_str:0000000000000971 .LASF122
     /tmp/cc6dlNas.s:3599   .debug_str:0000000000000162 .LASF123
     /tmp/cc6dlNas.s:3593   .debug_str:000000000000013c .LASF124
     /tmp/cc6dlNas.s:3709   .debug_str:00000000000004a3 .LASF125
     /tmp/cc6dlNas.s:3827   .debug_str:00000000000008cb .LASF126
     /tmp/cc6dlNas.s:3605   .debug_str:000000000000019d .LASF128
     /tmp/cc6dlNas.s:3643   .debug_str:00000000000002cb .LASF129
     /tmp/cc6dlNas.s:3797   .debug_str:000000000000074c .LASF130
     /tmp/cc6dlNas.s:3721   .debug_str:0000000000000513 .LASF131
     /tmp/cc6dlNas.s:3879   .debug_str:0000000000000a26 .LASF132
     /tmp/cc6dlNas.s:3871   .debug_str:00000000000009e4 .LASF133
     /tmp/cc6dlNas.s:3661   .debug_str:0000000000000367 .LASF135
     /tmp/cc6dlNas.s:3877   .debug_str:0000000000000a12 .LASF167
GAS LISTING /tmp/cc6dlNas.s 			page 26


     /tmp/cc6dlNas.s:3825   .debug_str:00000000000008bb .LASF136
     /tmp/cc6dlNas.s:3755   .debug_str:00000000000005f2 .LASF137
     /tmp/cc6dlNas.s:3849   .debug_str:000000000000093c .LASF138
     /tmp/cc6dlNas.s:3573   .debug_str:00000000000000aa .LASF139
     /tmp/cc6dlNas.s:3699   .debug_str:0000000000000463 .LASF140
     /tmp/cc6dlNas.s:3809   .debug_str:000000000000079b .LASF141
     /tmp/cc6dlNas.s:3575   .debug_str:00000000000000cb .LASF142
     /tmp/cc6dlNas.s:3633   .debug_str:000000000000026b .LASF143
     /tmp/cc6dlNas.s:513    .text:00000000000002c0 .LFB51
     /tmp/cc6dlNas.s:558    .text:0000000000000308 .LFE51
     /tmp/cc6dlNas.s:3723   .debug_str:0000000000000518 .LASF144
     /tmp/cc6dlNas.s:3239   .debug_loc:0000000000000000 .LLST19
     /tmp/cc6dlNas.s:537    .text:00000000000002e8 .LVL42
     /tmp/cc6dlNas.s:435    .text:0000000000000260 .LFB50
     /tmp/cc6dlNas.s:507    .text:00000000000002c0 .LFE50
     /tmp/cc6dlNas.s:464    .text:0000000000000280 .LBB36
     /tmp/cc6dlNas.s:478    .text:000000000000029c .LBE36
     /tmp/cc6dlNas.s:3261   .debug_loc:000000000000005f .LLST18
     /tmp/cc6dlNas.s:469    .text:000000000000028c .LVL37
     /tmp/cc6dlNas.s:477    .text:000000000000029c .LVL38
     /tmp/cc6dlNas.s:443    .text:0000000000000268 .LBB33
     /tmp/cc6dlNas.s:3531   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/cc6dlNas.s:3268   .debug_loc:0000000000000082 .LLST17
     /tmp/cc6dlNas.s:385    .text:0000000000000214 .LFB49
     /tmp/cc6dlNas.s:429    .text:0000000000000260 .LFE49
     /tmp/cc6dlNas.s:3867   .debug_str:00000000000009d4 .LASF145
     /tmp/cc6dlNas.s:3283   .debug_loc:00000000000000be .LLST16
     /tmp/cc6dlNas.s:415    .text:000000000000024c .LVL33
     /tmp/cc6dlNas.s:353    .text:00000000000001ec .LFB48
     /tmp/cc6dlNas.s:379    .text:0000000000000214 .LFE48
     /tmp/cc6dlNas.s:3307   .debug_loc:0000000000000120 .LLST15
     /tmp/cc6dlNas.s:368    .text:0000000000000204 .LVL30
     /tmp/cc6dlNas.s:200    .text:0000000000000118 .LFB47
     /tmp/cc6dlNas.s:226    .text:0000000000000140 .LFE47
     /tmp/cc6dlNas.s:3689   .debug_str:0000000000000430 .LASF146
     /tmp/cc6dlNas.s:3321   .debug_loc:0000000000000159 .LLST3
     /tmp/cc6dlNas.s:215    .text:0000000000000130 .LVL14
     /tmp/cc6dlNas.s:10     .text:0000000000000000 .LFB46
     /tmp/cc6dlNas.s:48     .text:0000000000000044 .LFE46
     /tmp/cc6dlNas.s:25     .text:0000000000000018 .LVL0
     /tmp/cc6dlNas.s:37     .text:0000000000000034 .LVL2
     /tmp/cc6dlNas.s:169    .text:00000000000000f0 .LFB45
     /tmp/cc6dlNas.s:194    .text:0000000000000118 .LFE45
     /tmp/cc6dlNas.s:183    .text:0000000000000108 .LVL12
     /tmp/cc6dlNas.s:54     .text:0000000000000044 .LFB44
     /tmp/cc6dlNas.s:163    .text:00000000000000f0 .LFE44
     /tmp/cc6dlNas.s:3335   .debug_loc:0000000000000192 .LLST0
     /tmp/cc6dlNas.s:102    .text:00000000000000a8 .LBB21
     /tmp/cc6dlNas.s:118    .text:00000000000000b4 .LBE21
     /tmp/cc6dlNas.s:3342   .debug_loc:00000000000001b5 .LLST1
     /tmp/cc6dlNas.s:128    .text:00000000000000c4 .LBB23
     /tmp/cc6dlNas.s:141    .text:00000000000000cc .LBE23
     /tmp/cc6dlNas.s:3351   .debug_loc:00000000000001db .LLST2
     /tmp/cc6dlNas.s:81     .text:0000000000000074 .LVL4
     /tmp/cc6dlNas.s:123    .text:00000000000000c0 .LVL7
     /tmp/cc6dlNas.s:148    .text:00000000000000dc .LVL10
     /tmp/cc6dlNas.s:232    .text:0000000000000140 .LFB43
GAS LISTING /tmp/cc6dlNas.s 			page 27


     /tmp/cc6dlNas.s:347    .text:00000000000001ec .LFE43
     /tmp/cc6dlNas.s:3737   .debug_str:000000000000056d .LASF147
     /tmp/cc6dlNas.s:3360   .debug_loc:0000000000000201 .LLST4
     /tmp/cc6dlNas.s:3380   .debug_loc:000000000000025e .LLST5
     /tmp/cc6dlNas.s:3400   .debug_loc:00000000000002bb .LLST6
     /tmp/cc6dlNas.s:3785   .debug_str:00000000000006de .LASF148
     /tmp/cc6dlNas.s:3425   .debug_loc:000000000000032c .LLST7
     /tmp/cc6dlNas.s:259    .text:0000000000000174 .LBB25
     /tmp/cc6dlNas.s:3432   .debug_loc:000000000000034f .LLST8
     /tmp/cc6dlNas.s:3453   .debug_loc:00000000000003ad .LLST9
     /tmp/cc6dlNas.s:3464   .debug_loc:00000000000003e3 .LLST10
     /tmp/cc6dlNas.s:3475   .debug_loc:0000000000000419 .LLST11
     /tmp/cc6dlNas.s:272    .text:0000000000000194 .LBB27
     /tmp/cc6dlNas.s:280    .text:000000000000019c .LBE27
     /tmp/cc6dlNas.s:3486   .debug_loc:000000000000044f .LLST12
     /tmp/cc6dlNas.s:3495   .debug_loc:0000000000000475 .LLST13
     /tmp/cc6dlNas.s:3506   .debug_loc:00000000000004ab .LLST14
     /tmp/cc6dlNas.s:258    .text:0000000000000174 .LVL17
     /tmp/cc6dlNas.s:3845   .debug_str:0000000000000930 .LASF149
     /tmp/cc6dlNas.s:3641   .debug_str:00000000000002c6 .LASF152
     /tmp/cc6dlNas.s:3743   .debug_str:0000000000000595 .LASF150
     /tmp/cc6dlNas.s:3887   .debug_str:0000000000000a5e .LASF151
     /tmp/cc6dlNas.s:3707   .debug_str:000000000000048d .LASF153
     /tmp/cc6dlNas.s:3791   .debug_str:0000000000000710 .LASF154
     /tmp/cc6dlNas.s:3757   .debug_str:0000000000000613 .LASF155
     /tmp/cc6dlNas.s:3665   .debug_str:0000000000000391 .LASF157
     /tmp/cc6dlNas.s:3655   .debug_str:000000000000033c .LASF156
     /tmp/cc6dlNas.s:3711   .debug_str:00000000000004b9 .LASF158
     /tmp/cc6dlNas.s:3795   .debug_str:000000000000073b .LASF159
     /tmp/cc6dlNas.s:3705   .debug_str:0000000000000481 .LASF160
     /tmp/cc6dlNas.s:516    .text:00000000000002c0 .LVL41
     /tmp/cc6dlNas.s:550    .text:00000000000002fc .LVL43
     /tmp/cc6dlNas.s:554    .text:0000000000000304 .LVL44
     /tmp/cc6dlNas.s:442    .text:0000000000000268 .LVL35
     /tmp/cc6dlNas.s:448    .text:000000000000026c .LVL36
     /tmp/cc6dlNas.s:483    .text:00000000000002a4 .LVL39
     /tmp/cc6dlNas.s:489    .text:00000000000002a8 .LVL40
     /tmp/cc6dlNas.s:388    .text:0000000000000214 .LVL31
     /tmp/cc6dlNas.s:413    .text:0000000000000244 .LVL32
     /tmp/cc6dlNas.s:425    .text:000000000000025c .LVL34
     /tmp/cc6dlNas.s:356    .text:00000000000001ec .LVL29
     /tmp/cc6dlNas.s:203    .text:0000000000000118 .LVL13
     /tmp/cc6dlNas.s:70     .text:0000000000000060 .LVL3
     /tmp/cc6dlNas.s:158    .text:00000000000000e8 .LVL11
     /tmp/cc6dlNas.s:101    .text:00000000000000a8 .LVL5
     /tmp/cc6dlNas.s:115    .text:00000000000000b4 .LVL6
     /tmp/cc6dlNas.s:127    .text:00000000000000c4 .LVL8
     /tmp/cc6dlNas.s:137    .text:00000000000000cc .LVL9
     /tmp/cc6dlNas.s:235    .text:0000000000000140 .LVL15
     /tmp/cc6dlNas.s:256    .text:000000000000016c .LVL16
     /tmp/cc6dlNas.s:321    .text:00000000000001d0 .LVL24
     /tmp/cc6dlNas.s:328    .text:00000000000001dc .LVL26
     /tmp/cc6dlNas.s:324    .text:00000000000001d4 .LVL25
     /tmp/cc6dlNas.s:296    .text:00000000000001b8 .LVL21
     /tmp/cc6dlNas.s:341    .text:00000000000001e8 .LVL28
     /tmp/cc6dlNas.s:304    .text:00000000000001c0 .LVL22
     /tmp/cc6dlNas.s:271    .text:0000000000000194 .LVL18
GAS LISTING /tmp/cc6dlNas.s 			page 28


     /tmp/cc6dlNas.s:278    .text:000000000000019c .LVL19
     /tmp/cc6dlNas.s:289    .text:00000000000001ac .LVL20
     /tmp/cc6dlNas.s:337    .text:00000000000001e4 .LVL27
     /tmp/cc6dlNas.s:318    .text:00000000000001cc .LVL23
     /tmp/cc6dlNas.s:579    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/cc6dlNas.s:307    .text:00000000000001c0 .LBE25
     /tmp/cc6dlNas.s:331    .text:00000000000001dc .LBB32
     /tmp/cc6dlNas.s:345    .text:00000000000001ec .LBE32
     /tmp/cc6dlNas.s:283    .text:00000000000001a0 .LBB29
     /tmp/cc6dlNas.s:305    .text:00000000000001c0 .LBE29
     /tmp/cc6dlNas.s:333    .text:00000000000001dc .LBB30
     /tmp/cc6dlNas.s:343    .text:00000000000001ec .LBE30
     /tmp/cc6dlNas.s:451    .text:000000000000026c .LBE33
     /tmp/cc6dlNas.s:484    .text:00000000000002a4 .LBB37
     /tmp/cc6dlNas.s:492    .text:00000000000002a8 .LBE37

UNDEFINED SYMBOLS
_ZN5Riscv10popSppSpieEv
_Z11thread_exitv
_ZN9Scheduler3getEv
_Z22kernelConsumerFunctionPv
_Z4idlePv
_ZN9Scheduler3putEP3TCB
_ZN3TCB13contextSwitchEPNS_7ContextES1_
_Z9mem_allocm
_Z8mem_freePv
_ZN11ThreadQueue7putLastEP3TCB
_ZN11ThreadQueue8getFirstEv
