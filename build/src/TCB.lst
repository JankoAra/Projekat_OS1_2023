GAS LISTING /tmp/ccpPnx4U.s 			page 1


   1              		.file	"TCB.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN3TCB7wrapperEv
   9              	_ZN3TCB7wrapperEv:
  10              	.LFB48:
  11              		.file 1 "src/TCB.cpp"
   1:src/TCB.cpp   **** //
   2:src/TCB.cpp   **** // Created by os on 5/23/23.
   3:src/TCB.cpp   **** //
   4:src/TCB.cpp   **** 
   5:src/TCB.cpp   **** #include "../h/TCB.hpp"
   6:src/TCB.cpp   **** #include "../h/Riscv.hpp"
   7:src/TCB.cpp   **** #include "../h/Scheduler.hpp"
   8:src/TCB.cpp   **** #include "../h/MemoryAllocator.hpp"
   9:src/TCB.cpp   **** #include "../h/syscall_c.hpp"
  10:src/TCB.cpp   **** 
  11:src/TCB.cpp   **** TCB* TCB::running = nullptr;
  12:src/TCB.cpp   **** uint64 TCB::runningTimeSlice = 0;
  13:src/TCB.cpp   **** 
  14:src/TCB.cpp   **** TCB* TCB::createThread(TCB::Body function, void* args, uint64* stack) {
  15:src/TCB.cpp   **** 	//pravljenje niti
  16:src/TCB.cpp   **** 	TCB* newThread = new TCB(function, args, stack);
  17:src/TCB.cpp   **** 
  18:src/TCB.cpp   **** 	//startovanje niti(stavljanje u Scheduler); main nit je vec aktivna, ne stavlja se u Scheduler
  19:src/TCB.cpp   **** 	//if (function != nullptr) Scheduler::put(newThread);
  20:src/TCB.cpp   **** 	return newThread;
  21:src/TCB.cpp   **** }
  22:src/TCB.cpp   **** 
  23:src/TCB.cpp   **** void TCB::dispatch() {
  24:src/TCB.cpp   **** 	TCB* old = TCB::running;
  25:src/TCB.cpp   **** 	if (!old->finished && !old->blocked && old->timeToSleep == 0 && !old->needToJoin) {
  26:src/TCB.cpp   **** 		Scheduler::put(old);
  27:src/TCB.cpp   **** 	}
  28:src/TCB.cpp   **** 	TCB::running = Scheduler::get();
  29:src/TCB.cpp   **** 	TCB::runningTimeSlice = 0;
  30:src/TCB.cpp   **** 
  31:src/TCB.cpp   **** 	//sada biramo u kom rezimu ce se izvrsavati nit, upisom bita SSTATUS_SPP
  32:src/TCB.cpp   **** 	//ako treba da se izvrsava main kernel nit, povratak je u sistemski rezim, inace u korisnicki
  33:src/TCB.cpp   **** 	if (TCB::running->threadFunction == nullptr) {
  34:src/TCB.cpp   **** 		Riscv::ms_sstatus(Riscv::SSTATUS_SPP);
  35:src/TCB.cpp   **** 	} else {
  36:src/TCB.cpp   **** 		Riscv::mc_sstatus(Riscv::SSTATUS_SPP);
  37:src/TCB.cpp   **** 	}
  38:src/TCB.cpp   **** 
  39:src/TCB.cpp   **** 	if (old != TCB::running) TCB::contextSwitch(&old->context, &running->context);
  40:src/TCB.cpp   **** }
  41:src/TCB.cpp   **** 
  42:src/TCB.cpp   **** void TCB::yield() {
  43:src/TCB.cpp   **** 	Riscv::pushRegisters();
  44:src/TCB.cpp   **** 	TCB::dispatch();
  45:src/TCB.cpp   **** 	Riscv::popRegisters();
  46:src/TCB.cpp   **** }
  47:src/TCB.cpp   **** 
GAS LISTING /tmp/ccpPnx4U.s 			page 2


  48:src/TCB.cpp   **** void TCB::wrapper() {
  12              		.loc 1 48 21
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23341100 		sd	ra,8(sp)
  17 0008 23308100 		sd	s0,0(sp)
  18              		.cfi_offset 1, -8
  19              		.cfi_offset 8, -16
  20 000c 13040101 		addi	s0,sp,16
  21              		.cfi_def_cfa 8, 0
  49:src/TCB.cpp   **** 	//pocetak wrappera se izvrsava u supervisor modu,
  50:src/TCB.cpp   **** 	//jer nismo izasli iz prekidne rutine prilikom promene konteksta (dispatch/yield)
  51:src/TCB.cpp   **** 	Riscv::popSppSpie();
  22              		.loc 1 51 2
  23              		.loc 1 51 19 is_stmt 0
  24 0010 97000000 		call	_ZN5Riscv10popSppSpieEv@plt
  24      E7800000 
  25              	.LVL0:
  52:src/TCB.cpp   **** 	//na dalje se izvrsavamo u user modu
  53:src/TCB.cpp   **** 	running->threadFunction(running->args);
  26              		.loc 1 53 2 is_stmt 1
  27              		.loc 1 53 11 is_stmt 0
  28 0018 97070000 		ld	a5,.LANCHOR0
  28      83B70700 
  29 0020 03B70701 		ld	a4,16(a5)
  30              		.loc 1 53 25
  31 0024 03B50702 		ld	a0,32(a5)
  32 0028 E7000700 		jalr	a4
  33              	.LVL1:
  54:src/TCB.cpp   **** 	//running->finished = true;
  55:src/TCB.cpp   **** 	//i dalje smo u user modu, moramo promenu niti vrsiti sistemskim pozivom
  56:src/TCB.cpp   **** 	thread_exit();
  34              		.loc 1 56 2 is_stmt 1
  35              		.loc 1 56 13 is_stmt 0
  36 002c 97000000 		call	_Z11thread_exitv@plt
  36      E7800000 
  37              	.LVL2:
  57:src/TCB.cpp   **** }
  38              		.loc 1 57 1
  39 0034 83308100 		ld	ra,8(sp)
  40              		.cfi_restore 1
  41 0038 03340100 		ld	s0,0(sp)
  42              		.cfi_restore 8
  43              		.cfi_def_cfa 2, 16
  44 003c 13010101 		addi	sp,sp,16
  45              		.cfi_def_cfa_offset 0
  46 0040 67800000 		jr	ra
  47              		.cfi_endproc
  48              	.LFE48:
  50              		.align	2
  51              		.globl	_ZN3TCB8dispatchEv
  53              	_ZN3TCB8dispatchEv:
  54              	.LFB46:
  23:src/TCB.cpp   **** 	TCB* old = TCB::running;
  55              		.loc 1 23 22 is_stmt 1
  56              		.cfi_startproc
GAS LISTING /tmp/ccpPnx4U.s 			page 3


  57 0044 130101FE 		addi	sp,sp,-32
  58              		.cfi_def_cfa_offset 32
  59 0048 233C1100 		sd	ra,24(sp)
  60 004c 23388100 		sd	s0,16(sp)
  61 0050 23349100 		sd	s1,8(sp)
  62              		.cfi_offset 1, -8
  63              		.cfi_offset 8, -16
  64              		.cfi_offset 9, -24
  65 0054 13040102 		addi	s0,sp,32
  66              		.cfi_def_cfa 8, 0
  24:src/TCB.cpp   **** 	if (!old->finished && !old->blocked && old->timeToSleep == 0 && !old->needToJoin) {
  67              		.loc 1 24 2
  24:src/TCB.cpp   **** 	if (!old->finished && !old->blocked && old->timeToSleep == 0 && !old->needToJoin) {
  68              		.loc 1 24 7 is_stmt 0
  69 0058 97040000 		ld	s1,.LANCHOR0
  69      83B40400 
  70              	.LVL3:
  25:src/TCB.cpp   **** 		Scheduler::put(old);
  71              		.loc 1 25 2 is_stmt 1
  25:src/TCB.cpp   **** 		Scheduler::put(old);
  72              		.loc 1 25 12 is_stmt 0
  73 0060 83C70403 		lbu	a5,48(s1)
  25:src/TCB.cpp   **** 		Scheduler::put(old);
  74              		.loc 1 25 2
  75 0064 639E0700 		bnez	a5,.L4
  25:src/TCB.cpp   **** 		Scheduler::put(old);
  76              		.loc 1 25 30 discriminator 1
  77 0068 83C71403 		lbu	a5,49(s1)
  25:src/TCB.cpp   **** 		Scheduler::put(old);
  78              		.loc 1 25 21 discriminator 1
  79 006c 639A0700 		bnez	a5,.L4
  25:src/TCB.cpp   **** 		Scheduler::put(old);
  80              		.loc 1 25 46 discriminator 2
  81 0070 83B70404 		ld	a5,64(s1)
  25:src/TCB.cpp   **** 		Scheduler::put(old);
  82              		.loc 1 25 38 discriminator 2
  83 0074 63960700 		bnez	a5,.L4
  25:src/TCB.cpp   **** 		Scheduler::put(old);
  84              		.loc 1 25 72 discriminator 3
  85 0078 83C72403 		lbu	a5,50(s1)
  25:src/TCB.cpp   **** 		Scheduler::put(old);
  86              		.loc 1 25 63 discriminator 3
  87 007c 638A0704 		beqz	a5,.L9
  88              	.L4:
  28:src/TCB.cpp   **** 	TCB::runningTimeSlice = 0;
  89              		.loc 1 28 2 is_stmt 1
  28:src/TCB.cpp   **** 	TCB::runningTimeSlice = 0;
  90              		.loc 1 28 31 is_stmt 0
  91 0080 97000000 		call	_ZN9Scheduler3getEv@plt
  91      E7800000 
  92              	.LVL4:
  93 0088 93050500 		mv	a1,a0
  28:src/TCB.cpp   **** 	TCB::runningTimeSlice = 0;
  94              		.loc 1 28 15
  95 008c 97070000 		lla	a5,.LANCHOR0
  95      93870700 
  96 0094 23B0A700 		sd	a0,0(a5)
GAS LISTING /tmp/ccpPnx4U.s 			page 4


  29:src/TCB.cpp   **** 
  97              		.loc 1 29 2 is_stmt 1
  29:src/TCB.cpp   **** 
  98              		.loc 1 29 24 is_stmt 0
  99 0098 23B40700 		sd	zero,8(a5)
  33:src/TCB.cpp   **** 		Riscv::ms_sstatus(Riscv::SSTATUS_SPP);
 100              		.loc 1 33 2 is_stmt 1
  33:src/TCB.cpp   **** 		Riscv::ms_sstatus(Riscv::SSTATUS_SPP);
 101              		.loc 1 33 20 is_stmt 0
 102 009c 83370501 		ld	a5,16(a0)
  33:src/TCB.cpp   **** 		Riscv::ms_sstatus(Riscv::SSTATUS_SPP);
 103              		.loc 1 33 2
 104 00a0 63800704 		beqz	a5,.L10
  36:src/TCB.cpp   **** 	}
 105              		.loc 1 36 3 is_stmt 1
 106              	.LVL5:
 107              	.LBB21:
 108              	.LBB22:
 109              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 5/17/23.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJEKAT2023_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJEKAT2023_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** class Riscv {
  11:src/../h/Riscv.hpp **** public:
  12:src/../h/Riscv.hpp **** 
  13:src/../h/Riscv.hpp **** 	static void popSppSpie();
  14:src/../h/Riscv.hpp **** 
  15:src/../h/Riscv.hpp **** 	//stavljanje registara x3-x31 na stek
  16:src/../h/Riscv.hpp **** 	static void pushRegisters();    //implementacija u asm
  17:src/../h/Riscv.hpp **** 
  18:src/../h/Riscv.hpp **** 	//skidanje registara x3-x31 sa steka
  19:src/../h/Riscv.hpp **** 	static void popRegisters();     //implementacija u asm
  20:src/../h/Riscv.hpp **** 
  21:src/../h/Riscv.hpp **** 	//read scause
  22:src/../h/Riscv.hpp **** 	static uint64 r_scause();
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp **** 	//write scause
  25:src/../h/Riscv.hpp **** 	static void w_scause(uint64 scause);
  26:src/../h/Riscv.hpp **** 
  27:src/../h/Riscv.hpp **** 	//read sepc
  28:src/../h/Riscv.hpp **** 	static uint64 r_sepc();
  29:src/../h/Riscv.hpp **** 
  30:src/../h/Riscv.hpp **** 	//write sepc
  31:src/../h/Riscv.hpp **** 	static void w_sepc(uint64 sepc);
  32:src/../h/Riscv.hpp **** 
  33:src/../h/Riscv.hpp **** 	//read stvec
  34:src/../h/Riscv.hpp **** 	static uint64 r_stvec();
  35:src/../h/Riscv.hpp **** 
  36:src/../h/Riscv.hpp **** 	//write stvec
  37:src/../h/Riscv.hpp **** 	static void w_stvec(uint64 stvec);
  38:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/ccpPnx4U.s 			page 5


  39:src/../h/Riscv.hpp **** 	enum BitMaskSip {
  40:src/../h/Riscv.hpp **** 		//postoji zahtev za softverski prekid
  41:src/../h/Riscv.hpp **** 		SIP_SSIP = (1 << 1),
  42:src/../h/Riscv.hpp **** 		//postoji prekid od tajmera
  43:src/../h/Riscv.hpp **** 		SIP_STIP = (1 << 5),
  44:src/../h/Riscv.hpp **** 		//postoji zahtev za spoljasnji hardverski prekid
  45:src/../h/Riscv.hpp **** 		SIP_SEIP = (1 << 9)
  46:src/../h/Riscv.hpp **** 	};
  47:src/../h/Riscv.hpp **** 
  48:src/../h/Riscv.hpp **** 	//mask set sip
  49:src/../h/Riscv.hpp **** 	static void ms_sip(uint64 mask);
  50:src/../h/Riscv.hpp **** 
  51:src/../h/Riscv.hpp **** 	//mask clear sip
  52:src/../h/Riscv.hpp **** 	static void mc_sip(uint64 mask);
  53:src/../h/Riscv.hpp **** 
  54:src/../h/Riscv.hpp **** 	//read sip
  55:src/../h/Riscv.hpp **** 	static uint64 r_sip();
  56:src/../h/Riscv.hpp **** 
  57:src/../h/Riscv.hpp **** 	//write sip
  58:src/../h/Riscv.hpp **** 	static void w_sip(uint64 sip);
  59:src/../h/Riscv.hpp **** 
  60:src/../h/Riscv.hpp **** 	//kada se pozove sret, SIE dobija vrednost SPIE, SPIE se postavlja na 1,
  61:src/../h/Riscv.hpp **** 	//rezim se postavlja na osnovu SPP bita, SPP se postavlja na 0
  62:src/../h/Riscv.hpp **** 	enum BitMaskSstatus {
  63:src/../h/Riscv.hpp **** 		//1 - dozvoljeni prekidi; 0- nedozvoljeni prekidi; igonrise se u korisnickom rezimu
  64:src/../h/Riscv.hpp **** 		SSTATUS_SIE = (1 << 1),
  65:src/../h/Riscv.hpp **** 		//prethodna vrednost bita SIE
  66:src/../h/Riscv.hpp **** 		SSTATUS_SPIE = (1 << 5),
  67:src/../h/Riscv.hpp **** 		//iz kog rezima se desio skok; 0 - iz korisnickog; 1 - iz sistemskog
  68:src/../h/Riscv.hpp **** 		SSTATUS_SPP = (1 << 8)
  69:src/../h/Riscv.hpp **** 	};
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp **** 	//mask set sstatus
  72:src/../h/Riscv.hpp **** 	static void ms_sstatus(uint64 mask);
  73:src/../h/Riscv.hpp **** 
  74:src/../h/Riscv.hpp **** 	//mask clear sstatus
  75:src/../h/Riscv.hpp **** 	static void mc_sstatus(uint64 mask);
  76:src/../h/Riscv.hpp **** 
  77:src/../h/Riscv.hpp **** 	//read sstatus
  78:src/../h/Riscv.hpp **** 	static uint64 r_sstatus();
  79:src/../h/Riscv.hpp **** 
  80:src/../h/Riscv.hpp **** 	//write sstatus
  81:src/../h/Riscv.hpp **** 	static void w_sstatus(uint64 sstatus);
  82:src/../h/Riscv.hpp **** 
  83:src/../h/Riscv.hpp **** 	//upisuje kod sistemskog poziva u registar a0
  84:src/../h/Riscv.hpp **** 	static void loadOpCode(uint64 opCode);
  85:src/../h/Riscv.hpp **** 
  86:src/../h/Riscv.hpp **** };
  87:src/../h/Riscv.hpp **** 
  88:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause() {
  89:src/../h/Riscv.hpp **** 	uint64 volatile scause;
  90:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[scause], scause": [scause] "=r"(scause));
  91:src/../h/Riscv.hpp **** 	return scause;
  92:src/../h/Riscv.hpp **** }
  93:src/../h/Riscv.hpp **** 
  94:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
  95:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw scause, %[scause]": :[scause] "r"(scause));
GAS LISTING /tmp/ccpPnx4U.s 			page 6


  96:src/../h/Riscv.hpp **** }
  97:src/../h/Riscv.hpp **** 
  98:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc() {
  99:src/../h/Riscv.hpp **** 	uint64 volatile sepc;
 100:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[sepc], sepc": [sepc] "=r"(sepc));
 101:src/../h/Riscv.hpp **** 	return sepc;
 102:src/../h/Riscv.hpp **** }
 103:src/../h/Riscv.hpp **** 
 104:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
 105:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 106:src/../h/Riscv.hpp **** }
 107:src/../h/Riscv.hpp **** 
 108:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec() {
 109:src/../h/Riscv.hpp **** 	uint64 volatile stvec;
 110:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[stvec], stvec": [stvec] "=r"(stvec));
 111:src/../h/Riscv.hpp **** 	return stvec;
 112:src/../h/Riscv.hpp **** }
 113:src/../h/Riscv.hpp **** 
 114:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 115:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw stvec, %[stvec]": :[stvec] "r"(stvec));
 116:src/../h/Riscv.hpp **** }
 117:src/../h/Riscv.hpp **** 
 118:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 119:src/../h/Riscv.hpp **** 	__asm__ volatile("csrs sip, %[mask]": :[mask] "r"(mask));
 120:src/../h/Riscv.hpp **** }
 121:src/../h/Riscv.hpp **** 
 122:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 123:src/../h/Riscv.hpp **** 	__asm__ volatile("csrc sip, %[mask]": :[mask] "r"(mask));
 124:src/../h/Riscv.hpp **** }
 125:src/../h/Riscv.hpp **** 
 126:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip() {
 127:src/../h/Riscv.hpp **** 	uint64 volatile sip;
 128:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[sip], sip": [sip] "=r"(sip));
 129:src/../h/Riscv.hpp **** 	return sip;
 130:src/../h/Riscv.hpp **** }
 131:src/../h/Riscv.hpp **** 
 132:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip) {
 133:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw sip, %[sip]": :[sip] "r"(sip));
 134:src/../h/Riscv.hpp **** }
 135:src/../h/Riscv.hpp **** 
 136:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
 137:src/../h/Riscv.hpp **** 	__asm__ volatile("csrs sstatus, %[mask]": :[mask] "r"(mask));
 138:src/../h/Riscv.hpp **** }
 139:src/../h/Riscv.hpp **** 
 140:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask) {
 141:src/../h/Riscv.hpp **** 	__asm__ volatile("csrc sstatus, %[mask]": :[mask] "r"(mask));
 110              		.loc 2 141 2
 111              		.loc 2 141 62 is_stmt 0
 112 00a4 93070010 		li	a5,256
 113              	#APP
 114              	# 141 "src/../h/Riscv.hpp" 1
 142              	}
 115              		csrc sstatus, a5
 116              	# 0 "" 2
 117              	.LVL6:
 118              	#NO_APP
 119              	.L6:
GAS LISTING /tmp/ccpPnx4U.s 			page 7


 120              	.LBE22:
 121              	.LBE21:
  39:src/TCB.cpp   **** }
 122              		.loc 1 39 2 is_stmt 1
 123 00ac 6388B400 		beq	s1,a1,.L3
  39:src/TCB.cpp   **** }
 124              		.loc 1 39 27 discriminator 1
  39:src/TCB.cpp   **** }
 125              		.loc 1 39 45 is_stmt 0 discriminator 1
 126 00b0 13850400 		mv	a0,s1
 127 00b4 97000000 		call	_ZN3TCB13contextSwitchEPNS_7ContextES1_@plt
 127      E7800000 
 128              	.LVL7:
 129              	.L3:
  40:src/TCB.cpp   **** 
 130              		.loc 1 40 1
 131 00bc 83308101 		ld	ra,24(sp)
 132              		.cfi_remember_state
 133              		.cfi_restore 1
 134 00c0 03340101 		ld	s0,16(sp)
 135              		.cfi_restore 8
 136              		.cfi_def_cfa 2, 32
 137 00c4 83348100 		ld	s1,8(sp)
 138              		.cfi_restore 9
 139              	.LVL8:
 140 00c8 13010102 		addi	sp,sp,32
 141              		.cfi_def_cfa_offset 0
 142 00cc 67800000 		jr	ra
 143              	.LVL9:
 144              	.L9:
 145              		.cfi_restore_state
  26:src/TCB.cpp   **** 	}
 146              		.loc 1 26 3 is_stmt 1
  26:src/TCB.cpp   **** 	}
 147              		.loc 1 26 17 is_stmt 0
 148 00d0 13850400 		mv	a0,s1
 149 00d4 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 149      E7800000 
 150              	.LVL10:
 151 00dc 6FF05FFA 		j	.L4
 152              	.L10:
  34:src/TCB.cpp   **** 	} else {
 153              		.loc 1 34 3 is_stmt 1
 154              	.LVL11:
 155              	.LBB23:
 156              	.LBB24:
 137:src/../h/Riscv.hpp **** }
 157              		.loc 2 137 2
 137:src/../h/Riscv.hpp **** }
 158              		.loc 2 137 62 is_stmt 0
 159 00e0 93070010 		li	a5,256
 160              	#APP
 161              	# 137 "src/../h/Riscv.hpp" 1
 138:src/../h/Riscv.hpp **** 
 162              		csrs sstatus, a5
 163              	# 0 "" 2
 164              		.loc 2 138 1
GAS LISTING /tmp/ccpPnx4U.s 			page 8


 165              	#NO_APP
 166 00e8 6FF05FFC 		j	.L6
 167              	.LBE24:
 168              	.LBE23:
 169              		.cfi_endproc
 170              	.LFE46:
 172              		.align	2
 173              		.globl	_ZN3TCB5yieldEv
 175              	_ZN3TCB5yieldEv:
 176              	.LFB47:
  42:src/TCB.cpp   **** 	Riscv::pushRegisters();
 177              		.loc 1 42 19 is_stmt 1
 178              		.cfi_startproc
 179 00ec 130101FF 		addi	sp,sp,-16
 180              		.cfi_def_cfa_offset 16
 181 00f0 23341100 		sd	ra,8(sp)
 182 00f4 23308100 		sd	s0,0(sp)
 183              		.cfi_offset 1, -8
 184              		.cfi_offset 8, -16
 185 00f8 13040101 		addi	s0,sp,16
 186              		.cfi_def_cfa 8, 0
  43:src/TCB.cpp   **** 	TCB::dispatch();
 187              		.loc 1 43 2
  43:src/TCB.cpp   **** 	TCB::dispatch();
 188              		.loc 1 43 22 is_stmt 0
 189 00fc 97000000 		call	_ZN5Riscv13pushRegistersEv@plt
 189      E7800000 
 190              	.LVL12:
  44:src/TCB.cpp   **** 	Riscv::popRegisters();
 191              		.loc 1 44 2 is_stmt 1
  44:src/TCB.cpp   **** 	Riscv::popRegisters();
 192              		.loc 1 44 15 is_stmt 0
 193 0104 97000000 		call	_ZN3TCB8dispatchEv
 193      E7800000 
 194              	.LVL13:
  45:src/TCB.cpp   **** }
 195              		.loc 1 45 2 is_stmt 1
  45:src/TCB.cpp   **** }
 196              		.loc 1 45 21 is_stmt 0
 197 010c 97000000 		call	_ZN5Riscv12popRegistersEv@plt
 197      E7800000 
 198              	.LVL14:
  46:src/TCB.cpp   **** 
 199              		.loc 1 46 1
 200 0114 83308100 		ld	ra,8(sp)
 201              		.cfi_restore 1
 202 0118 03340100 		ld	s0,0(sp)
 203              		.cfi_restore 8
 204              		.cfi_def_cfa 2, 16
 205 011c 13010101 		addi	sp,sp,16
 206              		.cfi_def_cfa_offset 0
 207 0120 67800000 		jr	ra
 208              		.cfi_endproc
 209              	.LFE47:
 211              		.align	2
 212              		.globl	_ZN3TCBnwEm
 214              	_ZN3TCBnwEm:
GAS LISTING /tmp/ccpPnx4U.s 			page 9


 215              	.LFB49:
  58:src/TCB.cpp   **** 
  59:src/TCB.cpp   **** void* TCB::operator new(size_t size) {
 216              		.loc 1 59 38 is_stmt 1
 217              		.cfi_startproc
 218              	.LVL15:
 219 0124 130101FF 		addi	sp,sp,-16
 220              		.cfi_def_cfa_offset 16
 221 0128 23341100 		sd	ra,8(sp)
 222 012c 23308100 		sd	s0,0(sp)
 223              		.cfi_offset 1, -8
 224              		.cfi_offset 8, -16
 225 0130 13040101 		addi	s0,sp,16
 226              		.cfi_def_cfa 8, 0
  60:src/TCB.cpp   **** 	return MemoryAllocator::kmalloc(size + sizeof(MemoryAllocator::UsedMemSegment), MemoryAllocator::T
 227              		.loc 1 60 2
 228              		.loc 1 60 33 is_stmt 0
 229 0134 93052000 		li	a1,2
 230 0138 13058501 		addi	a0,a0,24
 231              	.LVL16:
 232 013c 97000000 		call	_ZN15MemoryAllocator7kmallocEmNS_7PurposeE@plt
 232      E7800000 
 233              	.LVL17:
  61:src/TCB.cpp   **** }
 234              		.loc 1 61 1
 235 0144 83308100 		ld	ra,8(sp)
 236              		.cfi_restore 1
 237 0148 03340100 		ld	s0,0(sp)
 238              		.cfi_restore 8
 239              		.cfi_def_cfa 2, 16
 240 014c 13010101 		addi	sp,sp,16
 241              		.cfi_def_cfa_offset 0
 242 0150 67800000 		jr	ra
 243              		.cfi_endproc
 244              	.LFE49:
 246              		.align	2
 247              		.globl	_ZN3TCB12createThreadEPFvPvES0_Pm
 249              	_ZN3TCB12createThreadEPFvPvES0_Pm:
 250              	.LFB45:
  14:src/TCB.cpp   **** 	//pravljenje niti
 251              		.loc 1 14 71 is_stmt 1
 252              		.cfi_startproc
 253              	.LVL18:
 254 0154 130101FD 		addi	sp,sp,-48
 255              		.cfi_def_cfa_offset 48
 256 0158 23341102 		sd	ra,40(sp)
 257 015c 23308102 		sd	s0,32(sp)
 258 0160 233C9100 		sd	s1,24(sp)
 259 0164 23382101 		sd	s2,16(sp)
 260 0168 23343101 		sd	s3,8(sp)
 261              		.cfi_offset 1, -8
 262              		.cfi_offset 8, -16
 263              		.cfi_offset 9, -24
 264              		.cfi_offset 18, -32
 265              		.cfi_offset 19, -40
 266 016c 13040103 		addi	s0,sp,48
 267              		.cfi_def_cfa 8, 0
GAS LISTING /tmp/ccpPnx4U.s 			page 10


 268 0170 13090500 		mv	s2,a0
 269 0174 93890500 		mv	s3,a1
 270 0178 93040600 		mv	s1,a2
  16:src/TCB.cpp   **** 
 271              		.loc 1 16 2
  16:src/TCB.cpp   **** 
 272              		.loc 1 16 48 is_stmt 0
 273 017c 13050006 		li	a0,96
 274              	.LVL19:
 275 0180 97000000 		call	_ZN3TCBnwEm
 275      E7800000 
 276              	.LVL20:
 277              	.LBB25:
 278              	.LBB26:
 279              		.file 3 "src/../h/TCB.hpp"
   1:src/../h/TCB.hpp **** //
   2:src/../h/TCB.hpp **** // Created by os on 5/23/23.
   3:src/../h/TCB.hpp **** //
   4:src/../h/TCB.hpp **** 
   5:src/../h/TCB.hpp **** #ifndef PROJEKAT2023_TCB_HPP
   6:src/../h/TCB.hpp **** #define PROJEKAT2023_TCB_HPP
   7:src/../h/TCB.hpp **** 
   8:src/../h/TCB.hpp **** #include "../lib/hw.h"
   9:src/../h/TCB.hpp **** #include "../h/ThreadQueue.hpp"
  10:src/../h/TCB.hpp **** 
  11:src/../h/TCB.hpp **** class TCB {
  12:src/../h/TCB.hpp **** public:
  13:src/../h/TCB.hpp **** 	friend class Scheduler;
  14:src/../h/TCB.hpp **** 
  15:src/../h/TCB.hpp **** 	using Body = void (*)(void*);
  16:src/../h/TCB.hpp **** 
  17:src/../h/TCB.hpp **** 	static TCB* createThread(Body function, void* args, uint64* stack);
  18:src/../h/TCB.hpp **** 	static void start(TCB* newTcb);
  19:src/../h/TCB.hpp **** 
  20:src/../h/TCB.hpp **** 	bool isFinished() { return finished; }
  21:src/../h/TCB.hpp **** 
  22:src/../h/TCB.hpp **** 	void setFinished(bool finish) { this->finished = finish; }
  23:src/../h/TCB.hpp **** 
  24:src/../h/TCB.hpp **** 	bool isBlocked() { return blocked; }
  25:src/../h/TCB.hpp **** 
  26:src/../h/TCB.hpp **** 	void setBlocked(bool block) { this->blocked = block; }
  27:src/../h/TCB.hpp **** 
  28:src/../h/TCB.hpp **** 	uint64 getTimeSlice() { return timeSlice; }
  29:src/../h/TCB.hpp **** 
  30:src/../h/TCB.hpp **** 	void setTimeSlice(uint64 value) { timeSlice = value; }
  31:src/../h/TCB.hpp **** 
  32:src/../h/TCB.hpp **** 	//static void threadSleep(time_t sleepTime);
  33:src/../h/TCB.hpp **** 
  34:src/../h/TCB.hpp **** 	static void threadJoin(TCB* handle);
  35:src/../h/TCB.hpp **** 
  36:src/../h/TCB.hpp **** 	static void releaseJoined();
  37:src/../h/TCB.hpp **** 
  38:src/../h/TCB.hpp **** 	static void yield();
  39:src/../h/TCB.hpp **** 
  40:src/../h/TCB.hpp **** 	static void dispatch();
  41:src/../h/TCB.hpp **** 
  42:src/../h/TCB.hpp **** 	static void wrapper();
GAS LISTING /tmp/ccpPnx4U.s 			page 11


  43:src/../h/TCB.hpp **** 
  44:src/../h/TCB.hpp **** 	static TCB* running;
  45:src/../h/TCB.hpp **** 	static uint64 runningTimeSlice;
  46:src/../h/TCB.hpp **** 
  47:src/../h/TCB.hpp **** //	TCB* getNextInScheduler(){
  48:src/../h/TCB.hpp **** //		return nextInScheduler;
  49:src/../h/TCB.hpp **** //	}
  50:src/../h/TCB.hpp **** //	void setNextInScheduler(TCB* tcb){
  51:src/../h/TCB.hpp **** //		nextInScheduler = tcb;
  52:src/../h/TCB.hpp **** //	}
  53:src/../h/TCB.hpp **** 
  54:src/../h/TCB.hpp **** private:
  55:src/../h/TCB.hpp **** 	//kontekst procesora za datu nit
  56:src/../h/TCB.hpp **** 	struct Context {
  57:src/../h/TCB.hpp **** 		uint64 ra;
  58:src/../h/TCB.hpp **** 		uint64 sp;
  59:src/../h/TCB.hpp **** 	} context;
  60:src/../h/TCB.hpp **** 	Body threadFunction;    //funkcija koja se izvrsava
  61:src/../h/TCB.hpp **** 	uint64* stack;            //najniza adresa steka; stek raste ka nizim adresama, pokazuje na posled
  62:src/../h/TCB.hpp **** 	void* args;                //argumenti poziva funkcije
  63:src/../h/TCB.hpp **** 	uint64 timeSlice;        //vremenski odsecak dodeljen datoj niti
  64:src/../h/TCB.hpp **** 	bool finished;            //da li je nit zavrsila izvrsavanje funkcije
  65:src/../h/TCB.hpp **** 	bool blocked;            //da li je nit blokirana
  66:src/../h/TCB.hpp **** 	bool needToJoin;        //da li je nit pozvala join i ceka da se neka druga zavrsi
  67:src/../h/TCB.hpp **** 	TCB* nextInScheduler;    // pokazivac na sledecu nit u Scheduler-u
  68:src/../h/TCB.hpp **** 	time_t timeToSleep;        //vreme na koje je uspavana nit
  69:src/../h/TCB.hpp **** 	TCB* nextSleeping;        //sledeca nit u listi za spavanje u Scheduler-u
  70:src/../h/TCB.hpp **** 	ThreadQueue waitingToJoin;    //red niti koje su pozvale join nad ovom niti
  71:src/../h/TCB.hpp **** 
  72:src/../h/TCB.hpp **** 
  73:src/../h/TCB.hpp **** 	TCB(Body function, void* args, uint64* stack) : threadFunction(function), stack(stack), args(args)
  74:src/../h/TCB.hpp **** 													timeSlice(DEFAULT_TIME_SLICE), finished(false), blocked(false),
  75:src/../h/TCB.hpp **** 													needToJoin(false),
  76:src/../h/TCB.hpp **** 													nextInScheduler(nullptr), timeToSleep(0), nextSleeping(nullptr) {
 280              		.loc 3 76 76
 281 0188 23382501 		sd	s2,16(a0)
 282 018c 233C9500 		sd	s1,24(a0)
 283 0190 23303503 		sd	s3,32(a0)
 284 0194 93072000 		li	a5,2
 285 0198 2334F502 		sd	a5,40(a0)
 286 019c 23080502 		sb	zero,48(a0)
 287 01a0 A3080502 		sb	zero,49(a0)
 288 01a4 23090502 		sb	zero,50(a0)
 289 01a8 233C0502 		sd	zero,56(a0)
 290 01ac 23300504 		sd	zero,64(a0)
 291 01b0 23340504 		sd	zero,72(a0)
 292              	.LVL21:
 293              	.LBB27:
 294              	.LBB28:
 295              		.file 4 "src/../h/../h/ThreadQueue.hpp"
   1:src/../h/../h/ThreadQueue.hpp **** //
   2:src/../h/../h/ThreadQueue.hpp **** // Created by os on 6/4/23.
   3:src/../h/../h/ThreadQueue.hpp **** //
   4:src/../h/../h/ThreadQueue.hpp **** 
   5:src/../h/../h/ThreadQueue.hpp **** #ifndef PROJEKAT2023_THREADQUEUE_HPP
   6:src/../h/../h/ThreadQueue.hpp **** #define PROJEKAT2023_THREADQUEUE_HPP
   7:src/../h/../h/ThreadQueue.hpp **** 
GAS LISTING /tmp/ccpPnx4U.s 			page 12


   8:src/../h/../h/ThreadQueue.hpp **** #include "../h/MemoryAllocator.hpp"
   9:src/../h/../h/ThreadQueue.hpp **** #include "../h/syscall_c.hpp"
  10:src/../h/../h/ThreadQueue.hpp **** 
  11:src/../h/../h/ThreadQueue.hpp **** class TCB;
  12:src/../h/../h/ThreadQueue.hpp **** 
  13:src/../h/../h/ThreadQueue.hpp **** class ThreadQueue {
  14:src/../h/../h/ThreadQueue.hpp **** private:
  15:src/../h/../h/ThreadQueue.hpp **** 	struct Node {
  16:src/../h/../h/ThreadQueue.hpp **** 		TCB* data;
  17:src/../h/../h/ThreadQueue.hpp **** 		Node* next;
  18:src/../h/../h/ThreadQueue.hpp **** 
  19:src/../h/../h/ThreadQueue.hpp **** 		Node(TCB* d) : data(d), next(nullptr) {}
  20:src/../h/../h/ThreadQueue.hpp **** 
  21:src/../h/../h/ThreadQueue.hpp **** 		static void* operator new(size_t size) {
  22:src/../h/../h/ThreadQueue.hpp **** 			return mem_alloc(size);
  23:src/../h/../h/ThreadQueue.hpp **** 		}
  24:src/../h/../h/ThreadQueue.hpp **** 
  25:src/../h/../h/ThreadQueue.hpp **** 		static void operator delete(void* ptr) {
  26:src/../h/../h/ThreadQueue.hpp **** 			mem_free(ptr);
  27:src/../h/../h/ThreadQueue.hpp **** 		}
  28:src/../h/../h/ThreadQueue.hpp **** 	};
  29:src/../h/../h/ThreadQueue.hpp **** 
  30:src/../h/../h/ThreadQueue.hpp **** 	Node* front;
  31:src/../h/../h/ThreadQueue.hpp **** 	Node* back;
  32:src/../h/../h/ThreadQueue.hpp **** 
  33:src/../h/../h/ThreadQueue.hpp **** public:
  34:src/../h/../h/ThreadQueue.hpp **** 	ThreadQueue() : front(nullptr), back(nullptr) {}
 296              		.loc 4 34 46
 297 01b4 23380504 		sd	zero,80(a0)
 298 01b8 233C0504 		sd	zero,88(a0)
 299              	.LVL22:
 300              	.LBE28:
 301              	.LBE27:
 302              	.LBB29:
  77:src/../h/TCB.hpp **** 		//formiranje pocetnog konteksta; specijalni uslovi za main funkciju kojoj se pocetni kontekst aut
  78:src/../h/TCB.hpp **** 		uint64 startRa = threadFunction != nullptr ? (uint64)&wrapper : 0;
 303              		.loc 3 78 3 is_stmt 1
 304              		.loc 3 78 46 is_stmt 0
 305 01bc 630E0902 		beqz	s2,.L18
 306 01c0 97070000 		lla	a5,_ZN3TCB7wrapperEv
 306      93870700 
 307              	.L16:
 308              	.LVL23:
  79:src/../h/TCB.hpp **** 		uint64 startSp = stack != nullptr ? (uint64)&stack[DEFAULT_STACK_SIZE] : 0;
 309              		.loc 3 79 3 is_stmt 1
 310              		.loc 3 79 37 is_stmt 0
 311 01c8 638C0402 		beqz	s1,.L19
 312              		.loc 3 79 47
 313 01cc 37860000 		li	a2,32768
 314 01d0 B384C400 		add	s1,s1,a2
 315              	.LVL24:
 316              	.L17:
  80:src/../h/TCB.hpp **** 		this->context.ra = startRa;
 317              		.loc 3 80 3 is_stmt 1
 318              		.loc 3 80 20 is_stmt 0
 319 01d4 2330F500 		sd	a5,0(a0)
  81:src/../h/TCB.hpp **** 		this->context.sp = startSp;
GAS LISTING /tmp/ccpPnx4U.s 			page 13


 320              		.loc 3 81 3 is_stmt 1
 321              		.loc 3 81 20 is_stmt 0
 322 01d8 23349500 		sd	s1,8(a0)
 323              	.LVL25:
 324              	.LBE29:
 325              	.LBE26:
 326              	.LBE25:
  20:src/TCB.cpp   **** }
 327              		.loc 1 20 2 is_stmt 1
  21:src/TCB.cpp   **** 
 328              		.loc 1 21 1 is_stmt 0
 329 01dc 83308102 		ld	ra,40(sp)
 330              		.cfi_remember_state
 331              		.cfi_restore 1
 332 01e0 03340102 		ld	s0,32(sp)
 333              		.cfi_restore 8
 334              		.cfi_def_cfa 2, 48
 335 01e4 83348101 		ld	s1,24(sp)
 336              		.cfi_restore 9
 337              	.LVL26:
 338 01e8 03390101 		ld	s2,16(sp)
 339              		.cfi_restore 18
 340              	.LVL27:
 341 01ec 83398100 		ld	s3,8(sp)
 342              		.cfi_restore 19
 343              	.LVL28:
 344 01f0 13010103 		addi	sp,sp,48
 345              		.cfi_def_cfa_offset 0
 346 01f4 67800000 		jr	ra
 347              	.LVL29:
 348              	.L18:
 349              		.cfi_restore_state
 350              	.LBB32:
 351              	.LBB31:
 352              	.LBB30:
  78:src/../h/TCB.hpp **** 		uint64 startSp = stack != nullptr ? (uint64)&stack[DEFAULT_STACK_SIZE] : 0;
 353              		.loc 3 78 46
 354 01f8 93070000 		li	a5,0
 355 01fc 6FF0DFFC 		j	.L16
 356              	.LVL30:
 357              	.L19:
  79:src/../h/TCB.hpp **** 		this->context.ra = startRa;
 358              		.loc 3 79 37
 359 0200 93040000 		li	s1,0
 360              	.LVL31:
 361 0204 6FF01FFD 		j	.L17
 362              	.LBE30:
 363              	.LBE31:
 364              	.LBE32:
 365              		.cfi_endproc
 366              	.LFE45:
 368              		.align	2
 369              		.globl	_ZN3TCBdlEPv
 371              	_ZN3TCBdlEPv:
 372              	.LFB50:
  62:src/TCB.cpp   **** 
  63:src/TCB.cpp   **** void TCB::operator delete(void* ptr) {
GAS LISTING /tmp/ccpPnx4U.s 			page 14


 373              		.loc 1 63 38 is_stmt 1
 374              		.cfi_startproc
 375              	.LVL32:
 376 0208 130101FF 		addi	sp,sp,-16
 377              		.cfi_def_cfa_offset 16
 378 020c 23341100 		sd	ra,8(sp)
 379 0210 23308100 		sd	s0,0(sp)
 380              		.cfi_offset 1, -8
 381              		.cfi_offset 8, -16
 382 0214 13040101 		addi	s0,sp,16
 383              		.cfi_def_cfa 8, 0
  64:src/TCB.cpp   **** 	MemoryAllocator::kfree(ptr);
 384              		.loc 1 64 2
 385              		.loc 1 64 24 is_stmt 0
 386 0218 97000000 		call	_ZN15MemoryAllocator5kfreeEPv@plt
 386      E7800000 
 387              	.LVL33:
  65:src/TCB.cpp   **** }
 388              		.loc 1 65 1
 389 0220 83308100 		ld	ra,8(sp)
 390              		.cfi_restore 1
 391 0224 03340100 		ld	s0,0(sp)
 392              		.cfi_restore 8
 393              		.cfi_def_cfa 2, 16
 394 0228 13010101 		addi	sp,sp,16
 395              		.cfi_def_cfa_offset 0
 396 022c 67800000 		jr	ra
 397              		.cfi_endproc
 398              	.LFE50:
 400              		.align	2
 401              		.globl	_ZN3TCB10threadJoinEPS_
 403              	_ZN3TCB10threadJoinEPS_:
 404              	.LFB51:
  66:src/TCB.cpp   **** 
  67:src/TCB.cpp   **** void TCB::threadJoin(TCB* handle) {
 405              		.loc 1 67 35 is_stmt 1
 406              		.cfi_startproc
 407              	.LVL34:
  68:src/TCB.cpp   **** 	if(handle->finished) return;
 408              		.loc 1 68 2
 409              		.loc 1 68 13 is_stmt 0
 410 0230 83470503 		lbu	a5,48(a0)
 411              		.loc 1 68 2
 412 0234 63840700 		beqz	a5,.L29
 413 0238 67800000 		ret
 414              	.L29:
  67:src/TCB.cpp   **** 	if(handle->finished) return;
 415              		.loc 1 67 35
 416 023c 130101FF 		addi	sp,sp,-16
 417              		.cfi_def_cfa_offset 16
 418 0240 23341100 		sd	ra,8(sp)
 419 0244 23308100 		sd	s0,0(sp)
 420              		.cfi_offset 1, -8
 421              		.cfi_offset 8, -16
 422 0248 13040101 		addi	s0,sp,16
 423              		.cfi_def_cfa 8, 0
  69:src/TCB.cpp   **** 	TCB::running->needToJoin = true;
GAS LISTING /tmp/ccpPnx4U.s 			page 15


 424              		.loc 1 69 2 is_stmt 1
 425              		.loc 1 69 16 is_stmt 0
 426 024c 97050000 		ld	a1,.LANCHOR0
 426      83B50500 
 427              		.loc 1 69 27
 428 0254 93071000 		li	a5,1
 429 0258 2389F502 		sb	a5,50(a1)
  70:src/TCB.cpp   **** 	handle->waitingToJoin.putLast(TCB::running);
 430              		.loc 1 70 2 is_stmt 1
 431              		.loc 1 70 31 is_stmt 0
 432 025c 13050505 		addi	a0,a0,80
 433              	.LVL35:
 434 0260 97000000 		call	_ZN11ThreadQueue7putLastEP3TCB@plt
 434      E7800000 
 435              	.LVL36:
  71:src/TCB.cpp   **** }
 436              		.loc 1 71 1
 437 0268 83308100 		ld	ra,8(sp)
 438              		.cfi_restore 1
 439 026c 03340100 		ld	s0,0(sp)
 440              		.cfi_restore 8
 441              		.cfi_def_cfa 2, 16
 442 0270 13010101 		addi	sp,sp,16
 443              		.cfi_def_cfa_offset 0
 444 0274 67800000 		jr	ra
 445              		.cfi_endproc
 446              	.LFE51:
 448              		.align	2
 449              		.globl	_ZN3TCB13releaseJoinedEv
 451              	_ZN3TCB13releaseJoinedEv:
 452              	.LFB52:
  72:src/TCB.cpp   **** 
  73:src/TCB.cpp   **** void TCB::releaseJoined() {
 453              		.loc 1 73 27 is_stmt 1
 454              		.cfi_startproc
  74:src/TCB.cpp   **** 	while(!TCB::running->waitingToJoin.isEmpty()){
 455              		.loc 1 74 2
 456              		.loc 1 74 8
 457              		.loc 1 74 23 is_stmt 0
 458 0278 17050000 		ld	a0,.LANCHOR0
 458      03350500 
 459              	.LVL37:
 460              	.LBB33:
 461              	.LBB34:
  35:src/../h/../h/ThreadQueue.hpp **** 
  36:src/../h/../h/ThreadQueue.hpp **** 	ThreadQueue(const ThreadQueue&) = delete;
  37:src/../h/../h/ThreadQueue.hpp **** 
  38:src/../h/../h/ThreadQueue.hpp **** 	ThreadQueue& operator=(const ThreadQueue&) = delete;
  39:src/../h/../h/ThreadQueue.hpp **** 
  40:src/../h/../h/ThreadQueue.hpp **** 	~ThreadQueue() {
  41:src/../h/../h/ThreadQueue.hpp **** 		while (!isEmpty()) {
  42:src/../h/../h/ThreadQueue.hpp **** 			Node* node = front;
  43:src/../h/../h/ThreadQueue.hpp **** 			front = front->next;
  44:src/../h/../h/ThreadQueue.hpp **** 			delete node;
  45:src/../h/../h/ThreadQueue.hpp **** 		}
  46:src/../h/../h/ThreadQueue.hpp **** 	}
  47:src/../h/../h/ThreadQueue.hpp **** 
GAS LISTING /tmp/ccpPnx4U.s 			page 16


  48:src/../h/../h/ThreadQueue.hpp **** 	bool isEmpty() const {
  49:src/../h/../h/ThreadQueue.hpp **** 		return front == nullptr;
 462              		.loc 4 49 3 is_stmt 1
 463              		.loc 4 49 10 is_stmt 0
 464 0280 83370505 		ld	a5,80(a0)
 465              	.LVL38:
 466              	.LBE34:
 467              	.LBE33:
 468              		.loc 1 74 8
 469 0284 63860704 		beqz	a5,.L38
  73:src/TCB.cpp   **** 	while(!TCB::running->waitingToJoin.isEmpty()){
 470              		.loc 1 73 27
 471 0288 130101FF 		addi	sp,sp,-16
 472              		.cfi_def_cfa_offset 16
 473 028c 23341100 		sd	ra,8(sp)
 474 0290 23308100 		sd	s0,0(sp)
 475              		.cfi_offset 1, -8
 476              		.cfi_offset 8, -16
 477 0294 13040101 		addi	s0,sp,16
 478              		.cfi_def_cfa 8, 0
 479              	.L34:
 480              	.LBB36:
  75:src/TCB.cpp   **** 		TCB* tcb = TCB::running->waitingToJoin.getFirst();
 481              		.loc 1 75 3 is_stmt 1
 482              		.loc 1 75 50 is_stmt 0
 483 0298 13050505 		addi	a0,a0,80
 484 029c 97000000 		call	_ZN11ThreadQueue8getFirstEv@plt
 484      E7800000 
 485              	.LVL39:
  76:src/TCB.cpp   **** 		tcb->needToJoin = false;
 486              		.loc 1 76 3 is_stmt 1
 487              		.loc 1 76 19 is_stmt 0
 488 02a4 23090502 		sb	zero,50(a0)
  77:src/TCB.cpp   **** 		Scheduler::put(tcb);
 489              		.loc 1 77 3 is_stmt 1
 490              		.loc 1 77 17 is_stmt 0
 491 02a8 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 491      E7800000 
 492              	.LVL40:
 493              	.LBE36:
  74:src/TCB.cpp   **** 		TCB* tcb = TCB::running->waitingToJoin.getFirst();
 494              		.loc 1 74 2 is_stmt 1
  74:src/TCB.cpp   **** 		TCB* tcb = TCB::running->waitingToJoin.getFirst();
 495              		.loc 1 74 8
  74:src/TCB.cpp   **** 		TCB* tcb = TCB::running->waitingToJoin.getFirst();
 496              		.loc 1 74 23 is_stmt 0
 497 02b0 17050000 		ld	a0,.LANCHOR0
 497      03350500 
 498              	.LVL41:
 499              	.LBB37:
 500              	.LBB35:
 501              		.loc 4 49 3 is_stmt 1
 502              		.loc 4 49 10 is_stmt 0
 503 02b8 83370505 		ld	a5,80(a0)
 504              	.LVL42:
 505              	.LBE35:
 506              	.LBE37:
GAS LISTING /tmp/ccpPnx4U.s 			page 17


  74:src/TCB.cpp   **** 		TCB* tcb = TCB::running->waitingToJoin.getFirst();
 507              		.loc 1 74 8
 508 02bc E39E07FC 		bnez	a5,.L34
  78:src/TCB.cpp   **** 	}
  79:src/TCB.cpp   **** }
 509              		.loc 1 79 1
 510 02c0 83308100 		ld	ra,8(sp)
 511              		.cfi_restore 1
 512 02c4 03340100 		ld	s0,0(sp)
 513              		.cfi_restore 8
 514              		.cfi_def_cfa 2, 16
 515 02c8 13010101 		addi	sp,sp,16
 516              		.cfi_def_cfa_offset 0
 517 02cc 67800000 		jr	ra
 518              	.L38:
 519 02d0 67800000 		ret
 520              		.cfi_endproc
 521              	.LFE52:
 523              		.align	2
 524              		.globl	_ZN3TCB5startEPS_
 526              	_ZN3TCB5startEPS_:
 527              	.LFB53:
  80:src/TCB.cpp   **** 
  81:src/TCB.cpp   **** void TCB::start(TCB* newTcb) {
 528              		.loc 1 81 30 is_stmt 1
 529              		.cfi_startproc
 530              	.LVL43:
  82:src/TCB.cpp   **** 	//startovanje niti(stavljanje u Scheduler); main nit je vec aktivna, ne stavlja se u Scheduler
  83:src/TCB.cpp   **** 	if (newTcb->threadFunction != nullptr) Scheduler::put(newTcb);
 531              		.loc 1 83 2
 532              		.loc 1 83 14 is_stmt 0
 533 02d4 83370501 		ld	a5,16(a0)
 534              		.loc 1 83 2
 535 02d8 63860702 		beqz	a5,.L42
  81:src/TCB.cpp   **** 	//startovanje niti(stavljanje u Scheduler); main nit je vec aktivna, ne stavlja se u Scheduler
 536              		.loc 1 81 30 discriminator 1
 537 02dc 130101FF 		addi	sp,sp,-16
 538              		.cfi_def_cfa_offset 16
 539 02e0 23341100 		sd	ra,8(sp)
 540 02e4 23308100 		sd	s0,0(sp)
 541              		.cfi_offset 1, -8
 542              		.cfi_offset 8, -16
 543 02e8 13040101 		addi	s0,sp,16
 544              		.cfi_def_cfa 8, 0
 545              		.loc 1 83 41 is_stmt 1 discriminator 1
 546              		.loc 1 83 55 is_stmt 0 discriminator 1
 547 02ec 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 547      E7800000 
 548              	.LVL44:
  84:src/TCB.cpp   **** }
 549              		.loc 1 84 1 discriminator 1
 550 02f4 83308100 		ld	ra,8(sp)
 551              		.cfi_restore 1
 552 02f8 03340100 		ld	s0,0(sp)
 553              		.cfi_restore 8
 554              		.cfi_def_cfa 2, 16
 555 02fc 13010101 		addi	sp,sp,16
GAS LISTING /tmp/ccpPnx4U.s 			page 18


 556              		.cfi_def_cfa_offset 0
 557 0300 67800000 		jr	ra
 558              	.LVL45:
 559              	.L42:
 560 0304 67800000 		ret
 561              		.cfi_endproc
 562              	.LFE53:
 564              		.globl	_ZN3TCB16runningTimeSliceE
 565              		.globl	_ZN3TCB7runningE
 566              		.bss
 567              		.align	3
 568              		.set	.LANCHOR0,. + 0
 571              	_ZN3TCB7runningE:
 572 0000 00000000 		.zero	8
 572      00000000 
 575              	_ZN3TCB16runningTimeSliceE:
 576 0008 00000000 		.zero	8
 576      00000000 
 577              		.text
 578              	.Letext0:
 579              		.file 5 "src/../h/../lib/hw.h"
 580              		.file 6 "src/../h/../h/../h/MemoryAllocator.hpp"
 581              		.file 7 "src/../h/Scheduler.hpp"
 582              		.file 8 "src/../h/../h/../h/syscall_c.hpp"
GAS LISTING /tmp/ccpPnx4U.s 			page 19


DEFINED SYMBOLS
                            *ABS*:0000000000000000 TCB.cpp
     /tmp/ccpPnx4U.s:9      .text:0000000000000000 _ZN3TCB7wrapperEv
     /tmp/ccpPnx4U.s:13     .text:0000000000000000 .L0 
     /tmp/ccpPnx4U.s:14     .text:0000000000000000 .L0 
     /tmp/ccpPnx4U.s:15     .text:0000000000000004 .L0 
     /tmp/ccpPnx4U.s:18     .text:000000000000000c .L0 
     /tmp/ccpPnx4U.s:19     .text:000000000000000c .L0 
     /tmp/ccpPnx4U.s:21     .text:0000000000000010 .L0 
     /tmp/ccpPnx4U.s:23     .text:0000000000000010 .L0 
     /tmp/ccpPnx4U.s:24     .text:0000000000000010 .L0 
     /tmp/ccpPnx4U.s:27     .text:0000000000000018 .L0 
     /tmp/ccpPnx4U.s:28     .text:0000000000000018 .L0 
     /tmp/ccpPnx4U.s:31     .text:0000000000000024 .L0 
     /tmp/ccpPnx4U.s:35     .text:000000000000002c .L0 
     /tmp/ccpPnx4U.s:36     .text:000000000000002c .L0 
     /tmp/ccpPnx4U.s:39     .text:0000000000000034 .L0 
     /tmp/ccpPnx4U.s:40     .text:0000000000000038 .L0 
     /tmp/ccpPnx4U.s:42     .text:000000000000003c .L0 
     /tmp/ccpPnx4U.s:43     .text:000000000000003c .L0 
     /tmp/ccpPnx4U.s:45     .text:0000000000000040 .L0 
     /tmp/ccpPnx4U.s:47     .text:0000000000000044 .L0 
     /tmp/ccpPnx4U.s:53     .text:0000000000000044 _ZN3TCB8dispatchEv
     /tmp/ccpPnx4U.s:56     .text:0000000000000044 .L0 
     /tmp/ccpPnx4U.s:57     .text:0000000000000044 .L0 
     /tmp/ccpPnx4U.s:58     .text:0000000000000048 .L0 
     /tmp/ccpPnx4U.s:62     .text:0000000000000054 .L0 
     /tmp/ccpPnx4U.s:63     .text:0000000000000054 .L0 
     /tmp/ccpPnx4U.s:64     .text:0000000000000054 .L0 
     /tmp/ccpPnx4U.s:66     .text:0000000000000058 .L0 
     /tmp/ccpPnx4U.s:68     .text:0000000000000058 .L0 
     /tmp/ccpPnx4U.s:69     .text:0000000000000058 .L0 
     /tmp/ccpPnx4U.s:72     .text:0000000000000060 .L0 
     /tmp/ccpPnx4U.s:73     .text:0000000000000060 .L0 
     /tmp/ccpPnx4U.s:75     .text:0000000000000064 .L0 
     /tmp/ccpPnx4U.s:77     .text:0000000000000068 .L0 
     /tmp/ccpPnx4U.s:79     .text:000000000000006c .L0 
     /tmp/ccpPnx4U.s:81     .text:0000000000000070 .L0 
     /tmp/ccpPnx4U.s:83     .text:0000000000000074 .L0 
     /tmp/ccpPnx4U.s:85     .text:0000000000000078 .L0 
     /tmp/ccpPnx4U.s:87     .text:000000000000007c .L0 
     /tmp/ccpPnx4U.s:90     .text:0000000000000080 .L0 
     /tmp/ccpPnx4U.s:91     .text:0000000000000080 .L0 
     /tmp/ccpPnx4U.s:95     .text:000000000000008c .L0 
     /tmp/ccpPnx4U.s:98     .text:0000000000000098 .L0 
     /tmp/ccpPnx4U.s:99     .text:0000000000000098 .L0 
     /tmp/ccpPnx4U.s:101    .text:000000000000009c .L0 
     /tmp/ccpPnx4U.s:102    .text:000000000000009c .L0 
     /tmp/ccpPnx4U.s:104    .text:00000000000000a0 .L0 
     /tmp/ccpPnx4U.s:110    .text:00000000000000a4 .L0 
     /tmp/ccpPnx4U.s:111    .text:00000000000000a4 .L0 
     /tmp/ccpPnx4U.s:112    .text:00000000000000a4 .L0 
     /tmp/ccpPnx4U.s:123    .text:00000000000000ac .L0 
     /tmp/ccpPnx4U.s:125    .text:00000000000000b0 .L0 
     /tmp/ccpPnx4U.s:126    .text:00000000000000b0 .L0 
     /tmp/ccpPnx4U.s:131    .text:00000000000000bc .L0 
     /tmp/ccpPnx4U.s:132    .text:00000000000000c0 .L0 
GAS LISTING /tmp/ccpPnx4U.s 			page 20


     /tmp/ccpPnx4U.s:133    .text:00000000000000c0 .L0 
     /tmp/ccpPnx4U.s:135    .text:00000000000000c4 .L0 
     /tmp/ccpPnx4U.s:136    .text:00000000000000c4 .L0 
     /tmp/ccpPnx4U.s:138    .text:00000000000000c8 .L0 
     /tmp/ccpPnx4U.s:141    .text:00000000000000cc .L0 
     /tmp/ccpPnx4U.s:145    .text:00000000000000d0 .L0 
     /tmp/ccpPnx4U.s:147    .text:00000000000000d0 .L0 
     /tmp/ccpPnx4U.s:148    .text:00000000000000d0 .L0 
     /tmp/ccpPnx4U.s:157    .text:00000000000000e0 .L0 
     /tmp/ccpPnx4U.s:158    .text:00000000000000e0 .L0 
     /tmp/ccpPnx4U.s:159    .text:00000000000000e0 .L0 
     /tmp/ccpPnx4U.s:166    .text:00000000000000e8 .L0 
     /tmp/ccpPnx4U.s:169    .text:00000000000000ec .L0 
     /tmp/ccpPnx4U.s:175    .text:00000000000000ec _ZN3TCB5yieldEv
     /tmp/ccpPnx4U.s:178    .text:00000000000000ec .L0 
     /tmp/ccpPnx4U.s:179    .text:00000000000000ec .L0 
     /tmp/ccpPnx4U.s:180    .text:00000000000000f0 .L0 
     /tmp/ccpPnx4U.s:183    .text:00000000000000f8 .L0 
     /tmp/ccpPnx4U.s:184    .text:00000000000000f8 .L0 
     /tmp/ccpPnx4U.s:186    .text:00000000000000fc .L0 
     /tmp/ccpPnx4U.s:188    .text:00000000000000fc .L0 
     /tmp/ccpPnx4U.s:189    .text:00000000000000fc .L0 
     /tmp/ccpPnx4U.s:192    .text:0000000000000104 .L0 
     /tmp/ccpPnx4U.s:193    .text:0000000000000104 .L0 
     /tmp/ccpPnx4U.s:196    .text:000000000000010c .L0 
     /tmp/ccpPnx4U.s:197    .text:000000000000010c .L0 
     /tmp/ccpPnx4U.s:200    .text:0000000000000114 .L0 
     /tmp/ccpPnx4U.s:201    .text:0000000000000118 .L0 
     /tmp/ccpPnx4U.s:203    .text:000000000000011c .L0 
     /tmp/ccpPnx4U.s:204    .text:000000000000011c .L0 
     /tmp/ccpPnx4U.s:206    .text:0000000000000120 .L0 
     /tmp/ccpPnx4U.s:208    .text:0000000000000124 .L0 
     /tmp/ccpPnx4U.s:214    .text:0000000000000124 _ZN3TCBnwEm
     /tmp/ccpPnx4U.s:217    .text:0000000000000124 .L0 
     /tmp/ccpPnx4U.s:219    .text:0000000000000124 .L0 
     /tmp/ccpPnx4U.s:220    .text:0000000000000128 .L0 
     /tmp/ccpPnx4U.s:223    .text:0000000000000130 .L0 
     /tmp/ccpPnx4U.s:224    .text:0000000000000130 .L0 
     /tmp/ccpPnx4U.s:226    .text:0000000000000134 .L0 
     /tmp/ccpPnx4U.s:228    .text:0000000000000134 .L0 
     /tmp/ccpPnx4U.s:229    .text:0000000000000134 .L0 
     /tmp/ccpPnx4U.s:235    .text:0000000000000144 .L0 
     /tmp/ccpPnx4U.s:236    .text:0000000000000148 .L0 
     /tmp/ccpPnx4U.s:238    .text:000000000000014c .L0 
     /tmp/ccpPnx4U.s:239    .text:000000000000014c .L0 
     /tmp/ccpPnx4U.s:241    .text:0000000000000150 .L0 
     /tmp/ccpPnx4U.s:243    .text:0000000000000154 .L0 
     /tmp/ccpPnx4U.s:249    .text:0000000000000154 _ZN3TCB12createThreadEPFvPvES0_Pm
     /tmp/ccpPnx4U.s:252    .text:0000000000000154 .L0 
     /tmp/ccpPnx4U.s:254    .text:0000000000000154 .L0 
     /tmp/ccpPnx4U.s:255    .text:0000000000000158 .L0 
     /tmp/ccpPnx4U.s:261    .text:000000000000016c .L0 
     /tmp/ccpPnx4U.s:262    .text:000000000000016c .L0 
     /tmp/ccpPnx4U.s:263    .text:000000000000016c .L0 
     /tmp/ccpPnx4U.s:264    .text:000000000000016c .L0 
     /tmp/ccpPnx4U.s:265    .text:000000000000016c .L0 
     /tmp/ccpPnx4U.s:267    .text:0000000000000170 .L0 
GAS LISTING /tmp/ccpPnx4U.s 			page 21


     /tmp/ccpPnx4U.s:272    .text:000000000000017c .L0 
     /tmp/ccpPnx4U.s:273    .text:000000000000017c .L0 
     /tmp/ccpPnx4U.s:281    .text:0000000000000188 .L0 
     /tmp/ccpPnx4U.s:297    .text:00000000000001b4 .L0 
     /tmp/ccpPnx4U.s:304    .text:00000000000001bc .L0 
     /tmp/ccpPnx4U.s:305    .text:00000000000001bc .L0 
     /tmp/ccpPnx4U.s:310    .text:00000000000001c8 .L0 
     /tmp/ccpPnx4U.s:311    .text:00000000000001c8 .L0 
     /tmp/ccpPnx4U.s:313    .text:00000000000001cc .L0 
     /tmp/ccpPnx4U.s:318    .text:00000000000001d4 .L0 
     /tmp/ccpPnx4U.s:319    .text:00000000000001d4 .L0 
     /tmp/ccpPnx4U.s:321    .text:00000000000001d8 .L0 
     /tmp/ccpPnx4U.s:322    .text:00000000000001d8 .L0 
     /tmp/ccpPnx4U.s:328    .text:00000000000001dc .L0 
     /tmp/ccpPnx4U.s:329    .text:00000000000001dc .L0 
     /tmp/ccpPnx4U.s:330    .text:00000000000001e0 .L0 
     /tmp/ccpPnx4U.s:331    .text:00000000000001e0 .L0 
     /tmp/ccpPnx4U.s:333    .text:00000000000001e4 .L0 
     /tmp/ccpPnx4U.s:334    .text:00000000000001e4 .L0 
     /tmp/ccpPnx4U.s:336    .text:00000000000001e8 .L0 
     /tmp/ccpPnx4U.s:339    .text:00000000000001ec .L0 
     /tmp/ccpPnx4U.s:342    .text:00000000000001f0 .L0 
     /tmp/ccpPnx4U.s:345    .text:00000000000001f4 .L0 
     /tmp/ccpPnx4U.s:349    .text:00000000000001f8 .L0 
     /tmp/ccpPnx4U.s:354    .text:00000000000001f8 .L0 
     /tmp/ccpPnx4U.s:359    .text:0000000000000200 .L0 
     /tmp/ccpPnx4U.s:365    .text:0000000000000208 .L0 
     /tmp/ccpPnx4U.s:371    .text:0000000000000208 _ZN3TCBdlEPv
     /tmp/ccpPnx4U.s:374    .text:0000000000000208 .L0 
     /tmp/ccpPnx4U.s:376    .text:0000000000000208 .L0 
     /tmp/ccpPnx4U.s:377    .text:000000000000020c .L0 
     /tmp/ccpPnx4U.s:380    .text:0000000000000214 .L0 
     /tmp/ccpPnx4U.s:381    .text:0000000000000214 .L0 
     /tmp/ccpPnx4U.s:383    .text:0000000000000218 .L0 
     /tmp/ccpPnx4U.s:385    .text:0000000000000218 .L0 
     /tmp/ccpPnx4U.s:386    .text:0000000000000218 .L0 
     /tmp/ccpPnx4U.s:389    .text:0000000000000220 .L0 
     /tmp/ccpPnx4U.s:390    .text:0000000000000224 .L0 
     /tmp/ccpPnx4U.s:392    .text:0000000000000228 .L0 
     /tmp/ccpPnx4U.s:393    .text:0000000000000228 .L0 
     /tmp/ccpPnx4U.s:395    .text:000000000000022c .L0 
     /tmp/ccpPnx4U.s:397    .text:0000000000000230 .L0 
     /tmp/ccpPnx4U.s:403    .text:0000000000000230 _ZN3TCB10threadJoinEPS_
     /tmp/ccpPnx4U.s:406    .text:0000000000000230 .L0 
     /tmp/ccpPnx4U.s:408    .text:0000000000000230 .L0 
     /tmp/ccpPnx4U.s:409    .text:0000000000000230 .L0 
     /tmp/ccpPnx4U.s:410    .text:0000000000000230 .L0 
     /tmp/ccpPnx4U.s:412    .text:0000000000000234 .L0 
     /tmp/ccpPnx4U.s:416    .text:000000000000023c .L0 
     /tmp/ccpPnx4U.s:417    .text:0000000000000240 .L0 
     /tmp/ccpPnx4U.s:420    .text:0000000000000248 .L0 
     /tmp/ccpPnx4U.s:421    .text:0000000000000248 .L0 
     /tmp/ccpPnx4U.s:423    .text:000000000000024c .L0 
     /tmp/ccpPnx4U.s:425    .text:000000000000024c .L0 
     /tmp/ccpPnx4U.s:426    .text:000000000000024c .L0 
     /tmp/ccpPnx4U.s:428    .text:0000000000000254 .L0 
     /tmp/ccpPnx4U.s:431    .text:000000000000025c .L0 
GAS LISTING /tmp/ccpPnx4U.s 			page 22


     /tmp/ccpPnx4U.s:432    .text:000000000000025c .L0 
     /tmp/ccpPnx4U.s:437    .text:0000000000000268 .L0 
     /tmp/ccpPnx4U.s:438    .text:000000000000026c .L0 
     /tmp/ccpPnx4U.s:440    .text:0000000000000270 .L0 
     /tmp/ccpPnx4U.s:441    .text:0000000000000270 .L0 
     /tmp/ccpPnx4U.s:443    .text:0000000000000274 .L0 
     /tmp/ccpPnx4U.s:445    .text:0000000000000278 .L0 
     /tmp/ccpPnx4U.s:451    .text:0000000000000278 _ZN3TCB13releaseJoinedEv
     /tmp/ccpPnx4U.s:454    .text:0000000000000278 .L0 
     /tmp/ccpPnx4U.s:455    .text:0000000000000278 .L0 
     /tmp/ccpPnx4U.s:456    .text:0000000000000278 .L0 
     /tmp/ccpPnx4U.s:457    .text:0000000000000278 .L0 
     /tmp/ccpPnx4U.s:458    .text:0000000000000278 .L0 
     /tmp/ccpPnx4U.s:463    .text:0000000000000280 .L0 
     /tmp/ccpPnx4U.s:464    .text:0000000000000280 .L0 
     /tmp/ccpPnx4U.s:469    .text:0000000000000284 .L0 
     /tmp/ccpPnx4U.s:471    .text:0000000000000288 .L0 
     /tmp/ccpPnx4U.s:472    .text:000000000000028c .L0 
     /tmp/ccpPnx4U.s:475    .text:0000000000000294 .L0 
     /tmp/ccpPnx4U.s:476    .text:0000000000000294 .L0 
     /tmp/ccpPnx4U.s:478    .text:0000000000000298 .L0 
     /tmp/ccpPnx4U.s:482    .text:0000000000000298 .L0 
     /tmp/ccpPnx4U.s:483    .text:0000000000000298 .L0 
     /tmp/ccpPnx4U.s:487    .text:00000000000002a4 .L0 
     /tmp/ccpPnx4U.s:488    .text:00000000000002a4 .L0 
     /tmp/ccpPnx4U.s:490    .text:00000000000002a8 .L0 
     /tmp/ccpPnx4U.s:491    .text:00000000000002a8 .L0 
     /tmp/ccpPnx4U.s:495    .text:00000000000002b0 .L0 
     /tmp/ccpPnx4U.s:496    .text:00000000000002b0 .L0 
     /tmp/ccpPnx4U.s:497    .text:00000000000002b0 .L0 
     /tmp/ccpPnx4U.s:502    .text:00000000000002b8 .L0 
     /tmp/ccpPnx4U.s:503    .text:00000000000002b8 .L0 
     /tmp/ccpPnx4U.s:508    .text:00000000000002bc .L0 
     /tmp/ccpPnx4U.s:510    .text:00000000000002c0 .L0 
     /tmp/ccpPnx4U.s:511    .text:00000000000002c4 .L0 
     /tmp/ccpPnx4U.s:513    .text:00000000000002c8 .L0 
     /tmp/ccpPnx4U.s:514    .text:00000000000002c8 .L0 
     /tmp/ccpPnx4U.s:516    .text:00000000000002cc .L0 
     /tmp/ccpPnx4U.s:520    .text:00000000000002d4 .L0 
     /tmp/ccpPnx4U.s:526    .text:00000000000002d4 _ZN3TCB5startEPS_
     /tmp/ccpPnx4U.s:529    .text:00000000000002d4 .L0 
     /tmp/ccpPnx4U.s:531    .text:00000000000002d4 .L0 
     /tmp/ccpPnx4U.s:532    .text:00000000000002d4 .L0 
     /tmp/ccpPnx4U.s:533    .text:00000000000002d4 .L0 
     /tmp/ccpPnx4U.s:535    .text:00000000000002d8 .L0 
     /tmp/ccpPnx4U.s:537    .text:00000000000002dc .L0 
     /tmp/ccpPnx4U.s:538    .text:00000000000002e0 .L0 
     /tmp/ccpPnx4U.s:541    .text:00000000000002e8 .L0 
     /tmp/ccpPnx4U.s:542    .text:00000000000002e8 .L0 
     /tmp/ccpPnx4U.s:544    .text:00000000000002ec .L0 
     /tmp/ccpPnx4U.s:546    .text:00000000000002ec .L0 
     /tmp/ccpPnx4U.s:547    .text:00000000000002ec .L0 
     /tmp/ccpPnx4U.s:550    .text:00000000000002f4 .L0 
     /tmp/ccpPnx4U.s:551    .text:00000000000002f8 .L0 
     /tmp/ccpPnx4U.s:553    .text:00000000000002fc .L0 
     /tmp/ccpPnx4U.s:554    .text:00000000000002fc .L0 
     /tmp/ccpPnx4U.s:556    .text:0000000000000300 .L0 
GAS LISTING /tmp/ccpPnx4U.s 			page 23


     /tmp/ccpPnx4U.s:561    .text:0000000000000308 .L0 
     /tmp/ccpPnx4U.s:575    .bss:0000000000000008 _ZN3TCB16runningTimeSliceE
     /tmp/ccpPnx4U.s:571    .bss:0000000000000000 _ZN3TCB7runningE
     /tmp/ccpPnx4U.s:568    .bss:0000000000000000 .LANCHOR0
     /tmp/ccpPnx4U.s:583    .text:0000000000000308 .L0 
     /tmp/ccpPnx4U.s:28     .text:0000000000000018 .L0 
     /tmp/ccpPnx4U.s:69     .text:0000000000000058 .L0 
     /tmp/ccpPnx4U.s:95     .text:000000000000008c .L0 
     /tmp/ccpPnx4U.s:306    .text:00000000000001c0 .L0 
     /tmp/ccpPnx4U.s:426    .text:000000000000024c .L0 
     /tmp/ccpPnx4U.s:458    .text:0000000000000278 .L0 
     /tmp/ccpPnx4U.s:497    .text:00000000000002b0 .L0 
     /tmp/ccpPnx4U.s:88     .text:0000000000000080 .L4
     /tmp/ccpPnx4U.s:144    .text:00000000000000d0 .L9
     /tmp/ccpPnx4U.s:152    .text:00000000000000e0 .L10
     /tmp/ccpPnx4U.s:129    .text:00000000000000bc .L3
     /tmp/ccpPnx4U.s:119    .text:00000000000000ac .L6
     /tmp/ccpPnx4U.s:348    .text:00000000000001f8 .L18
     /tmp/ccpPnx4U.s:357    .text:0000000000000200 .L19
     /tmp/ccpPnx4U.s:307    .text:00000000000001c8 .L16
     /tmp/ccpPnx4U.s:316    .text:00000000000001d4 .L17
     /tmp/ccpPnx4U.s:414    .text:000000000000023c .L29
     /tmp/ccpPnx4U.s:518    .text:00000000000002d0 .L38
     /tmp/ccpPnx4U.s:479    .text:0000000000000298 .L34
     /tmp/ccpPnx4U.s:559    .text:0000000000000304 .L42
     /tmp/ccpPnx4U.s:2263   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccpPnx4U.s:4076   .debug_str:00000000000008ba .LASF177
     /tmp/ccpPnx4U.s:3854   .debug_str:000000000000023c .LASF178
     /tmp/ccpPnx4U.s:4034   .debug_str:000000000000074f .LASF179
     /tmp/ccpPnx4U.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccpPnx4U.s:578    .text:0000000000000308 .Letext0
     /tmp/ccpPnx4U.s:3780   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccpPnx4U.s:3902   .debug_str:00000000000003c7 .LASF0
     /tmp/ccpPnx4U.s:3930   .debug_str:0000000000000471 .LASF1
     /tmp/ccpPnx4U.s:4016   .debug_str:00000000000006d2 .LASF2
     /tmp/ccpPnx4U.s:4024   .debug_str:000000000000071a .LASF4
     /tmp/ccpPnx4U.s:3912   .debug_str:0000000000000401 .LASF3
     /tmp/ccpPnx4U.s:3788   .debug_str:0000000000000043 .LASF5
     /tmp/ccpPnx4U.s:3992   .debug_str:00000000000005f4 .LASF6
     /tmp/ccpPnx4U.s:3986   .debug_str:00000000000005d3 .LASF7
     /tmp/ccpPnx4U.s:3918   .debug_str:000000000000042f .LASF8
     /tmp/ccpPnx4U.s:3880   .debug_str:0000000000000317 .LASF9
     /tmp/ccpPnx4U.s:3886   .debug_str:000000000000034b .LASF10
     /tmp/ccpPnx4U.s:3818   .debug_str:0000000000000135 .LASF11
     /tmp/ccpPnx4U.s:3868   .debug_str:00000000000002cb .LASF12
     /tmp/ccpPnx4U.s:3830   .debug_str:000000000000018f .LASF13
     /tmp/ccpPnx4U.s:3816   .debug_str:0000000000000125 .LASF14
     /tmp/ccpPnx4U.s:4056   .debug_str:000000000000082c .LASF15
     /tmp/ccpPnx4U.s:4060   .debug_str:000000000000084c .LASF16
     /tmp/ccpPnx4U.s:4044   .debug_str:00000000000007b0 .LASF17
     /tmp/ccpPnx4U.s:3984   .debug_str:00000000000005c3 .LASF39
     /tmp/ccpPnx4U.s:3978   .debug_str:00000000000005a6 .LASF111
     /tmp/ccpPnx4U.s:3990   .debug_str:00000000000005ee .LASF18
     /tmp/ccpPnx4U.s:4134   .debug_str:0000000000000b24 .LASF19
     /tmp/ccpPnx4U.s:4008   .debug_str:00000000000006ab .LASF20
     /tmp/ccpPnx4U.s:4098   .debug_str:0000000000000a32 .LASF21
     /tmp/ccpPnx4U.s:3942   .debug_str:00000000000004ac .LASF22
GAS LISTING /tmp/ccpPnx4U.s 			page 24


     /tmp/ccpPnx4U.s:3994   .debug_str:00000000000005fb .LASF26
     /tmp/ccpPnx4U.s:3820   .debug_str:0000000000000144 .LASF23
     /tmp/ccpPnx4U.s:3800   .debug_str:00000000000000b1 .LASF24
     /tmp/ccpPnx4U.s:3928   .debug_str:000000000000046c .LASF25
     /tmp/ccpPnx4U.s:3850   .debug_str:0000000000000225 .LASF27
     /tmp/ccpPnx4U.s:4004   .debug_str:0000000000000682 .LASF28
     /tmp/ccpPnx4U.s:4126   .debug_str:0000000000000afa .LASF29
     /tmp/ccpPnx4U.s:4084   .debug_str:00000000000009a5 .LASF31
     /tmp/ccpPnx4U.s:3876   .debug_str:000000000000030b .LASF30
     /tmp/ccpPnx4U.s:3974   .debug_str:0000000000000583 .LASF32
     /tmp/ccpPnx4U.s:3802   .debug_str:00000000000000b6 .LASF33
     /tmp/ccpPnx4U.s:4000   .debug_str:0000000000000638 .LASF34
     /tmp/ccpPnx4U.s:3798   .debug_str:0000000000000098 .LASF43
     /tmp/ccpPnx4U.s:4010   .debug_str:00000000000006b2 .LASF35
     /tmp/ccpPnx4U.s:4104   .debug_str:0000000000000a52 .LASF36
     /tmp/ccpPnx4U.s:3900   .debug_str:00000000000003bb .LASF37
     /tmp/ccpPnx4U.s:3910   .debug_str:00000000000003f7 .LASF81
     /tmp/ccpPnx4U.s:4054   .debug_str:00000000000007f7 .LASF83
     /tmp/ccpPnx4U.s:3944   .debug_str:00000000000004b6 .LASF38
     /tmp/ccpPnx4U.s:4064   .debug_str:0000000000000877 .LASF88
     /tmp/ccpPnx4U.s:4078   .debug_str:000000000000097e .LASF40
     /tmp/ccpPnx4U.s:4122   .debug_str:0000000000000abe .LASF41
     /tmp/ccpPnx4U.s:3976   .debug_str:00000000000005a1 .LASF180
     /tmp/ccpPnx4U.s:4138   .debug_str:0000000000000b44 .LASF42
     /tmp/ccpPnx4U.s:3914   .debug_str:0000000000000413 .LASF44
     /tmp/ccpPnx4U.s:4066   .debug_str:000000000000087f .LASF47
     /tmp/ccpPnx4U.s:4100   .debug_str:0000000000000a37 .LASF49
     /tmp/ccpPnx4U.s:3806   .debug_str:00000000000000d4 .LASF45
     /tmp/ccpPnx4U.s:4094   .debug_str:0000000000000a10 .LASF46
     /tmp/ccpPnx4U.s:4018   .debug_str:00000000000006e0 .LASF48
     /tmp/ccpPnx4U.s:4058   .debug_str:0000000000000838 .LASF50
     /tmp/ccpPnx4U.s:4070   .debug_str:0000000000000897 .LASF51
     /tmp/ccpPnx4U.s:3864   .debug_str:000000000000029c .LASF52
     /tmp/ccpPnx4U.s:3936   .debug_str:0000000000000492 .LASF53
     /tmp/ccpPnx4U.s:4002   .debug_str:000000000000066a .LASF54
     /tmp/ccpPnx4U.s:3846   .debug_str:000000000000020f .LASF55
     /tmp/ccpPnx4U.s:4022   .debug_str:0000000000000702 .LASF56
     /tmp/ccpPnx4U.s:4096   .debug_str:0000000000000a27 .LASF57
     /tmp/ccpPnx4U.s:3870   .debug_str:00000000000002da .LASF58
     /tmp/ccpPnx4U.s:4112   .debug_str:0000000000000a75 .LASF59
     /tmp/ccpPnx4U.s:3866   .debug_str:00000000000002b2 .LASF61
     /tmp/ccpPnx4U.s:3934   .debug_str:000000000000048c .LASF60
     /tmp/ccpPnx4U.s:4080   .debug_str:000000000000098b .LASF62
     /tmp/ccpPnx4U.s:3848   .debug_str:000000000000021c .LASF63
     /tmp/ccpPnx4U.s:3826   .debug_str:0000000000000166 .LASF64
     /tmp/ccpPnx4U.s:3938   .debug_str:000000000000049f .LASF65
     /tmp/ccpPnx4U.s:3794   .debug_str:0000000000000071 .LASF66
     /tmp/ccpPnx4U.s:4072   .debug_str:00000000000008a2 .LASF67
     /tmp/ccpPnx4U.s:3812   .debug_str:0000000000000105 .LASF68
     /tmp/ccpPnx4U.s:4090   .debug_str:00000000000009f3 .LASF69
     /tmp/ccpPnx4U.s:3814   .debug_str:0000000000000116 .LASF70
     /tmp/ccpPnx4U.s:4144   .debug_str:0000000000000b6b .LASF71
     /tmp/ccpPnx4U.s:4102   .debug_str:0000000000000a4d .LASF72
     /tmp/ccpPnx4U.s:4082   .debug_str:000000000000099b .LASF73
     /tmp/ccpPnx4U.s:4042   .debug_str:00000000000007a7 .LASF74
     /tmp/ccpPnx4U.s:3970   .debug_str:0000000000000566 .LASF75
     /tmp/ccpPnx4U.s:3894   .debug_str:0000000000000386 .LASF76
GAS LISTING /tmp/ccpPnx4U.s 			page 25


     /tmp/ccpPnx4U.s:4074   .debug_str:00000000000008aa .LASF77
     /tmp/ccpPnx4U.s:3982   .debug_str:00000000000005b7 .LASF78
     /tmp/ccpPnx4U.s:3782   .debug_str:0000000000000000 .LASF79
     /tmp/ccpPnx4U.s:3784   .debug_str:000000000000000d .LASF80
     /tmp/ccpPnx4U.s:4136   .debug_str:0000000000000b2e .LASF157
     /tmp/ccpPnx4U.s:3836   .debug_str:00000000000001cc .LASF82
     /tmp/ccpPnx4U.s:3786   .debug_str:000000000000001b .LASF84
     /tmp/ccpPnx4U.s:4150   .debug_str:0000000000000baa .LASF85
     /tmp/ccpPnx4U.s:3884   .debug_str:000000000000033f .LASF86
     /tmp/ccpPnx4U.s:3904   .debug_str:00000000000003d4 .LASF93
     /tmp/ccpPnx4U.s:3968   .debug_str:0000000000000559 .LASF94
     /tmp/ccpPnx4U.s:3966   .debug_str:000000000000054d .LASF87
     /tmp/ccpPnx4U.s:3844   .debug_str:000000000000020a .LASF89
     /tmp/ccpPnx4U.s:3924   .debug_str:0000000000000462 .LASF90
     /tmp/ccpPnx4U.s:3856   .debug_str:0000000000000248 .LASF91
     /tmp/ccpPnx4U.s:3838   .debug_str:00000000000001da .LASF92
     /tmp/ccpPnx4U.s:3996   .debug_str:000000000000060a .LASF95
     /tmp/ccpPnx4U.s:3878   .debug_str:0000000000000311 .LASF96
     /tmp/ccpPnx4U.s:3926   .debug_str:0000000000000467 .LASF97
     /tmp/ccpPnx4U.s:3796   .debug_str:0000000000000083 .LASF98
     /tmp/ccpPnx4U.s:3882   .debug_str:0000000000000327 .LASF99
     /tmp/ccpPnx4U.s:3840   .debug_str:00000000000001f4 .LASF181
     /tmp/ccpPnx4U.s:4088   .debug_str:00000000000009db .LASF182
     /tmp/ccpPnx4U.s:4068   .debug_str:000000000000088a .LASF100
     /tmp/ccpPnx4U.s:4120   .debug_str:0000000000000aa9 .LASF101
     /tmp/ccpPnx4U.s:3852   .debug_str:0000000000000234 .LASF102
     /tmp/ccpPnx4U.s:3792   .debug_str:0000000000000055 .LASF103
     /tmp/ccpPnx4U.s:3932   .debug_str:0000000000000484 .LASF104
     /tmp/ccpPnx4U.s:3952   .debug_str:00000000000004f3 .LASF105
     /tmp/ccpPnx4U.s:3808   .debug_str:00000000000000e0 .LASF106
     /tmp/ccpPnx4U.s:3810   .debug_str:00000000000000e9 .LASF107
     /tmp/ccpPnx4U.s:3832   .debug_str:000000000000019f .LASF108
     /tmp/ccpPnx4U.s:4114   .debug_str:0000000000000a83 .LASF109
     /tmp/ccpPnx4U.s:4116   .debug_str:0000000000000a99 .LASF110
     /tmp/ccpPnx4U.s:3858   .debug_str:0000000000000266 .LASF112
     /tmp/ccpPnx4U.s:3860   .debug_str:0000000000000275 .LASF113
     /tmp/ccpPnx4U.s:3922   .debug_str:0000000000000455 .LASF114
     /tmp/ccpPnx4U.s:3842   .debug_str:00000000000001fe .LASF115
     /tmp/ccpPnx4U.s:3892   .debug_str:000000000000037b .LASF116
     /tmp/ccpPnx4U.s:3964   .debug_str:0000000000000535 .LASF117
     /tmp/ccpPnx4U.s:4032   .debug_str:0000000000000741 .LASF118
     /tmp/ccpPnx4U.s:4038   .debug_str:0000000000000777 .LASF119
     /tmp/ccpPnx4U.s:3906   .debug_str:00000000000003e4 .LASF120
     /tmp/ccpPnx4U.s:4124   .debug_str:0000000000000ae0 .LASF121
     /tmp/ccpPnx4U.s:4130   .debug_str:0000000000000b09 .LASF124
     /tmp/ccpPnx4U.s:4092   .debug_str:00000000000009fb .LASF126
     /tmp/ccpPnx4U.s:4012   .debug_str:00000000000006be .LASF122
     /tmp/ccpPnx4U.s:3972   .debug_str:000000000000056e .LASF123
     /tmp/ccpPnx4U.s:4106   .debug_str:0000000000000a5e .LASF125
     /tmp/ccpPnx4U.s:3998   .debug_str:0000000000000625 .LASF127
     /tmp/ccpPnx4U.s:3962   .debug_str:000000000000052e .LASF128
     /tmp/ccpPnx4U.s:3920   .debug_str:0000000000000442 .LASF129
     /tmp/ccpPnx4U.s:3954   .debug_str:0000000000000512 .LASF130
     /tmp/ccpPnx4U.s:4052   .debug_str:00000000000007e3 .LASF131
     /tmp/ccpPnx4U.s:3956   .debug_str:000000000000051a .LASF132
     /tmp/ccpPnx4U.s:3872   .debug_str:00000000000002f2 .LASF133
     /tmp/ccpPnx4U.s:4050   .debug_str:00000000000007dc .LASF134
GAS LISTING /tmp/ccpPnx4U.s 			page 26


     /tmp/ccpPnx4U.s:4028   .debug_str:0000000000000727 .LASF135
     /tmp/ccpPnx4U.s:4030   .debug_str:000000000000073a .LASF136
     /tmp/ccpPnx4U.s:3824   .debug_str:0000000000000153 .LASF137
     /tmp/ccpPnx4U.s:4026   .debug_str:0000000000000721 .LASF138
     /tmp/ccpPnx4U.s:3898   .debug_str:00000000000003a9 .LASF139
     /tmp/ccpPnx4U.s:3908   .debug_str:00000000000003f1 .LASF140
     /tmp/ccpPnx4U.s:3890   .debug_str:0000000000000369 .LASF141
     /tmp/ccpPnx4U.s:3790   .debug_str:000000000000004a .LASF142
     /tmp/ccpPnx4U.s:4020   .debug_str:00000000000006ea .LASF143
     /tmp/ccpPnx4U.s:4014   .debug_str:00000000000006c7 .LASF144
     /tmp/ccpPnx4U.s:4148   .debug_str:0000000000000b92 .LASF145
     /tmp/ccpPnx4U.s:4118   .debug_str:0000000000000a9f .LASF146
     /tmp/ccpPnx4U.s:3828   .debug_str:0000000000000179 .LASF147
     /tmp/ccpPnx4U.s:3822   .debug_str:0000000000000149 .LASF148
     /tmp/ccpPnx4U.s:3950   .debug_str:00000000000004dd .LASF149
     /tmp/ccpPnx4U.s:4086   .debug_str:00000000000009d0 .LASF150
     /tmp/ccpPnx4U.s:3834   .debug_str:00000000000001b4 .LASF151
     /tmp/ccpPnx4U.s:3916   .debug_str:0000000000000425 .LASF152
     /tmp/ccpPnx4U.s:4048   .debug_str:00000000000007d7 .LASF153
     /tmp/ccpPnx4U.s:3958   .debug_str:0000000000000522 .LASF154
     /tmp/ccpPnx4U.s:4142   .debug_str:0000000000000b5e .LASF155
     /tmp/ccpPnx4U.s:4132   .debug_str:0000000000000b12 .LASF156
     /tmp/ccpPnx4U.s:3896   .debug_str:0000000000000391 .LASF158
     /tmp/ccpPnx4U.s:4140   .debug_str:0000000000000b4a .LASF183
     /tmp/ccpPnx4U.s:3888   .debug_str:0000000000000359 .LASF159
     /tmp/ccpPnx4U.s:4006   .debug_str:000000000000068a .LASF160
     /tmp/ccpPnx4U.s:4110   .debug_str:0000000000000a6a .LASF161
     /tmp/ccpPnx4U.s:4146   .debug_str:0000000000000b71 .LASF162
     /tmp/ccpPnx4U.s:3940   .debug_str:00000000000004a7 .LASF163
     /tmp/ccpPnx4U.s:4062   .debug_str:0000000000000862 .LASF164
     /tmp/ccpPnx4U.s:3804   .debug_str:00000000000000c3 .LASF165
     /tmp/ccpPnx4U.s:3862   .debug_str:0000000000000281 .LASF166
     /tmp/ccpPnx4U.s:527    .text:00000000000002d4 .LFB53
     /tmp/ccpPnx4U.s:562    .text:0000000000000308 .LFE53
     /tmp/ccpPnx4U.s:3960   .debug_str:0000000000000527 .LASF167
     /tmp/ccpPnx4U.s:3475   .debug_loc:0000000000000000 .LLST18
     /tmp/ccpPnx4U.s:548    .text:00000000000002f4 .LVL44
     /tmp/ccpPnx4U.s:452    .text:0000000000000278 .LFB52
     /tmp/ccpPnx4U.s:521    .text:00000000000002d4 .LFE52
     /tmp/ccpPnx4U.s:480    .text:0000000000000298 .LBB36
     /tmp/ccpPnx4U.s:493    .text:00000000000002b0 .LBE36
     /tmp/ccpPnx4U.s:3493   .debug_loc:000000000000004c .LLST17
     /tmp/ccpPnx4U.s:485    .text:00000000000002a4 .LVL39
     /tmp/ccpPnx4U.s:492    .text:00000000000002b0 .LVL40
     /tmp/ccpPnx4U.s:460    .text:0000000000000280 .LBB33
     /tmp/ccpPnx4U.s:3760   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccpPnx4U.s:3500   .debug_loc:000000000000006f .LLST16
     /tmp/ccpPnx4U.s:404    .text:0000000000000230 .LFB51
     /tmp/ccpPnx4U.s:446    .text:0000000000000278 .LFE51
     /tmp/ccpPnx4U.s:4128   .debug_str:0000000000000b02 .LASF168
     /tmp/ccpPnx4U.s:3515   .debug_loc:00000000000000ab .LLST15
     /tmp/ccpPnx4U.s:435    .text:0000000000000268 .LVL36
     /tmp/ccpPnx4U.s:372    .text:0000000000000208 .LFB50
     /tmp/ccpPnx4U.s:398    .text:0000000000000230 .LFE50
     /tmp/ccpPnx4U.s:3535   .debug_loc:00000000000000fa .LLST14
     /tmp/ccpPnx4U.s:387    .text:0000000000000220 .LVL33
     /tmp/ccpPnx4U.s:215    .text:0000000000000124 .LFB49
GAS LISTING /tmp/ccpPnx4U.s 			page 27


     /tmp/ccpPnx4U.s:244    .text:0000000000000154 .LFE49
     /tmp/ccpPnx4U.s:3549   .debug_loc:0000000000000133 .LLST2
     /tmp/ccpPnx4U.s:233    .text:0000000000000144 .LVL17
     /tmp/ccpPnx4U.s:10     .text:0000000000000000 .LFB48
     /tmp/ccpPnx4U.s:48     .text:0000000000000044 .LFE48
     /tmp/ccpPnx4U.s:25     .text:0000000000000018 .LVL0
     /tmp/ccpPnx4U.s:37     .text:0000000000000034 .LVL2
     /tmp/ccpPnx4U.s:176    .text:00000000000000ec .LFB47
     /tmp/ccpPnx4U.s:209    .text:0000000000000124 .LFE47
     /tmp/ccpPnx4U.s:190    .text:0000000000000104 .LVL12
     /tmp/ccpPnx4U.s:194    .text:000000000000010c .LVL13
     /tmp/ccpPnx4U.s:198    .text:0000000000000114 .LVL14
     /tmp/ccpPnx4U.s:54     .text:0000000000000044 .LFB46
     /tmp/ccpPnx4U.s:170    .text:00000000000000ec .LFE46
     /tmp/ccpPnx4U.s:3569   .debug_loc:0000000000000181 .LLST0
     /tmp/ccpPnx4U.s:107    .text:00000000000000a4 .LBB21
     /tmp/ccpPnx4U.s:121    .text:00000000000000ac .LBE21
     /tmp/ccpPnx4U.s:3580   .debug_loc:00000000000001b7 .LLST1
     /tmp/ccpPnx4U.s:155    .text:00000000000000e0 .LBB23
     /tmp/ccpPnx4U.s:168    .text:00000000000000ec .LBE23
     /tmp/ccpPnx4U.s:92     .text:0000000000000088 .LVL4
     /tmp/ccpPnx4U.s:128    .text:00000000000000bc .LVL7
     /tmp/ccpPnx4U.s:150    .text:00000000000000dc .LVL10
     /tmp/ccpPnx4U.s:250    .text:0000000000000154 .LFB45
     /tmp/ccpPnx4U.s:366    .text:0000000000000208 .LFE45
     /tmp/ccpPnx4U.s:3980   .debug_str:00000000000005ae .LASF169
     /tmp/ccpPnx4U.s:3589   .debug_loc:00000000000001dd .LLST3
     /tmp/ccpPnx4U.s:3609   .debug_loc:000000000000023a .LLST4
     /tmp/ccpPnx4U.s:3629   .debug_loc:0000000000000297 .LLST5
     /tmp/ccpPnx4U.s:4036   .debug_str:000000000000076d .LASF170
     /tmp/ccpPnx4U.s:3654   .debug_loc:0000000000000308 .LLST6
     /tmp/ccpPnx4U.s:277    .text:0000000000000188 .LBB25
     /tmp/ccpPnx4U.s:3661   .debug_loc:000000000000032b .LLST7
     /tmp/ccpPnx4U.s:3682   .debug_loc:0000000000000389 .LLST8
     /tmp/ccpPnx4U.s:3693   .debug_loc:00000000000003bf .LLST9
     /tmp/ccpPnx4U.s:3704   .debug_loc:00000000000003f5 .LLST10
     /tmp/ccpPnx4U.s:293    .text:00000000000001b4 .LBB27
     /tmp/ccpPnx4U.s:301    .text:00000000000001bc .LBE27
     /tmp/ccpPnx4U.s:3715   .debug_loc:000000000000042b .LLST11
     /tmp/ccpPnx4U.s:3724   .debug_loc:0000000000000451 .LLST12
     /tmp/ccpPnx4U.s:3735   .debug_loc:0000000000000487 .LLST13
     /tmp/ccpPnx4U.s:276    .text:0000000000000188 .LVL20
     /tmp/ccpPnx4U.s:4108   .debug_str:0000000000000a65 .LASF171
     /tmp/ccpPnx4U.s:3874   .debug_str:0000000000000306 .LASF174
     /tmp/ccpPnx4U.s:3988   .debug_str:00000000000005e6 .LASF172
     /tmp/ccpPnx4U.s:4152   .debug_str:0000000000000bb7 .LASF173
     /tmp/ccpPnx4U.s:3948   .debug_str:00000000000004c7 .LASF175
     /tmp/ccpPnx4U.s:4040   .debug_str:0000000000000792 .LASF176
     /tmp/ccpPnx4U.s:4046   .debug_str:00000000000007c6 .LASF184
     /tmp/ccpPnx4U.s:3946   .debug_str:00000000000004bb .LASF185
     /tmp/ccpPnx4U.s:530    .text:00000000000002d4 .LVL43
     /tmp/ccpPnx4U.s:558    .text:0000000000000304 .LVL45
     /tmp/ccpPnx4U.s:459    .text:0000000000000280 .LVL37
     /tmp/ccpPnx4U.s:465    .text:0000000000000284 .LVL38
     /tmp/ccpPnx4U.s:498    .text:00000000000002b8 .LVL41
     /tmp/ccpPnx4U.s:504    .text:00000000000002bc .LVL42
     /tmp/ccpPnx4U.s:407    .text:0000000000000230 .LVL34
GAS LISTING /tmp/ccpPnx4U.s 			page 28


     /tmp/ccpPnx4U.s:433    .text:0000000000000260 .LVL35
     /tmp/ccpPnx4U.s:375    .text:0000000000000208 .LVL32
     /tmp/ccpPnx4U.s:218    .text:0000000000000124 .LVL15
     /tmp/ccpPnx4U.s:231    .text:000000000000013c .LVL16
     /tmp/ccpPnx4U.s:70     .text:0000000000000060 .LVL3
     /tmp/ccpPnx4U.s:139    .text:00000000000000c8 .LVL8
     /tmp/ccpPnx4U.s:143    .text:00000000000000d0 .LVL9
     /tmp/ccpPnx4U.s:106    .text:00000000000000a4 .LVL5
     /tmp/ccpPnx4U.s:117    .text:00000000000000ac .LVL6
     /tmp/ccpPnx4U.s:253    .text:0000000000000154 .LVL18
     /tmp/ccpPnx4U.s:274    .text:0000000000000180 .LVL19
     /tmp/ccpPnx4U.s:340    .text:00000000000001ec .LVL27
     /tmp/ccpPnx4U.s:347    .text:00000000000001f8 .LVL29
     /tmp/ccpPnx4U.s:343    .text:00000000000001f0 .LVL28
     /tmp/ccpPnx4U.s:315    .text:00000000000001d4 .LVL24
     /tmp/ccpPnx4U.s:360    .text:0000000000000204 .LVL31
     /tmp/ccpPnx4U.s:323    .text:00000000000001dc .LVL25
     /tmp/ccpPnx4U.s:292    .text:00000000000001b4 .LVL21
     /tmp/ccpPnx4U.s:299    .text:00000000000001bc .LVL22
     /tmp/ccpPnx4U.s:308    .text:00000000000001c8 .LVL23
     /tmp/ccpPnx4U.s:356    .text:0000000000000200 .LVL30
     /tmp/ccpPnx4U.s:337    .text:00000000000001e8 .LVL26
     /tmp/ccpPnx4U.s:584    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccpPnx4U.s:326    .text:00000000000001dc .LBE25
     /tmp/ccpPnx4U.s:350    .text:00000000000001f8 .LBB32
     /tmp/ccpPnx4U.s:364    .text:0000000000000208 .LBE32
     /tmp/ccpPnx4U.s:302    .text:00000000000001bc .LBB29
     /tmp/ccpPnx4U.s:324    .text:00000000000001dc .LBE29
     /tmp/ccpPnx4U.s:352    .text:00000000000001f8 .LBB30
     /tmp/ccpPnx4U.s:362    .text:0000000000000208 .LBE30
     /tmp/ccpPnx4U.s:467    .text:0000000000000284 .LBE33
     /tmp/ccpPnx4U.s:499    .text:00000000000002b8 .LBB37
     /tmp/ccpPnx4U.s:506    .text:00000000000002bc .LBE37

UNDEFINED SYMBOLS
_ZN5Riscv10popSppSpieEv
_Z11thread_exitv
_ZN9Scheduler3getEv
_ZN3TCB13contextSwitchEPNS_7ContextES1_
_ZN9Scheduler3putEP3TCB
_ZN5Riscv13pushRegistersEv
_ZN5Riscv12popRegistersEv
_ZN15MemoryAllocator7kmallocEmNS_7PurposeE
_ZN15MemoryAllocator5kfreeEPv
_ZN11ThreadQueue7putLastEP3TCB
_ZN11ThreadQueue8getFirstEv
