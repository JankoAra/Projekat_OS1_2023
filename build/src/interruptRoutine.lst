GAS LISTING /tmp/cckpw0IK.s 			page 1


   1              		.file	"interruptRoutine.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.section	.text._ZN4KSemD2Ev,"axG",@progbits,_ZN4KSemD5Ev,comdat
   7              		.align	2
   8              		.weak	_ZN4KSemD2Ev
  10              	_ZN4KSemD2Ev:
  11              	.LFB66:
  12              		.file 1 "src/../h/KSem.hpp"
   1:src/../h/KSem.hpp **** //
   2:src/../h/KSem.hpp **** // Created by os on 6/4/23.
   3:src/../h/KSem.hpp **** //
   4:src/../h/KSem.hpp **** 
   5:src/../h/KSem.hpp **** #ifndef PROJEKAT2023_KSEM_HPP
   6:src/../h/KSem.hpp **** #define PROJEKAT2023_KSEM_HPP
   7:src/../h/KSem.hpp **** 
   8:src/../h/KSem.hpp **** #include "../h/ThreadQueue.hpp"
   9:src/../h/KSem.hpp **** 
  10:src/../h/KSem.hpp **** //klasa napravljena po uzoru na semafor u skolskom jezgru
  11:src/../h/KSem.hpp **** class KSem {
  13              		.loc 1 11 7
  14              		.cfi_startproc
  15              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
  16              		.cfi_lsda 0x1b,.LLSDA66
  17              	.LVL0:
  18 0000 130101FE 		addi	sp,sp,-32
  19              		.cfi_def_cfa_offset 32
  20 0004 233C1100 		sd	ra,24(sp)
  21 0008 23388100 		sd	s0,16(sp)
  22 000c 23349100 		sd	s1,8(sp)
  23              		.cfi_offset 1, -8
  24              		.cfi_offset 8, -16
  25              		.cfi_offset 9, -24
  26 0010 13040102 		addi	s0,sp,32
  27              		.cfi_def_cfa 8, 0
  28 0014 93040500 		mv	s1,a0
  29              	.LVL1:
  30              	.L3:
  31              	.LBB19:
  32              	.LBB20:
  33              		.file 2 "src/../h/../h/ThreadQueue.hpp"
   1:src/../h/../h/ThreadQueue.hpp **** //
   2:src/../h/../h/ThreadQueue.hpp **** // Created by os on 6/4/23.
   3:src/../h/../h/ThreadQueue.hpp **** //
   4:src/../h/../h/ThreadQueue.hpp **** 
   5:src/../h/../h/ThreadQueue.hpp **** #ifndef PROJEKAT2023_THREADQUEUE_HPP
   6:src/../h/../h/ThreadQueue.hpp **** #define PROJEKAT2023_THREADQUEUE_HPP
   7:src/../h/../h/ThreadQueue.hpp **** 
   8:src/../h/../h/ThreadQueue.hpp **** #include "../h/syscall_c.hpp"
   9:src/../h/../h/ThreadQueue.hpp **** 
  10:src/../h/../h/ThreadQueue.hpp **** class TCB;
  11:src/../h/../h/ThreadQueue.hpp **** 
  12:src/../h/../h/ThreadQueue.hpp **** class ThreadQueue {
  13:src/../h/../h/ThreadQueue.hpp **** private:
  14:src/../h/../h/ThreadQueue.hpp ****     struct Node {
GAS LISTING /tmp/cckpw0IK.s 			page 2


  15:src/../h/../h/ThreadQueue.hpp ****         TCB* data;
  16:src/../h/../h/ThreadQueue.hpp ****         Node* next;
  17:src/../h/../h/ThreadQueue.hpp **** 
  18:src/../h/../h/ThreadQueue.hpp ****         Node(TCB* d) : data(d), next(nullptr) {}
  19:src/../h/../h/ThreadQueue.hpp **** 
  20:src/../h/../h/ThreadQueue.hpp ****         static void* operator new(size_t size) {
  21:src/../h/../h/ThreadQueue.hpp ****             return mem_alloc(size);
  22:src/../h/../h/ThreadQueue.hpp ****         }
  23:src/../h/../h/ThreadQueue.hpp **** 
  24:src/../h/../h/ThreadQueue.hpp ****         static void operator delete(void* ptr) {
  25:src/../h/../h/ThreadQueue.hpp ****             mem_free(ptr);
  26:src/../h/../h/ThreadQueue.hpp ****         }
  27:src/../h/../h/ThreadQueue.hpp ****     };
  28:src/../h/../h/ThreadQueue.hpp **** 
  29:src/../h/../h/ThreadQueue.hpp ****     Node* front;
  30:src/../h/../h/ThreadQueue.hpp ****     Node* back;
  31:src/../h/../h/ThreadQueue.hpp **** 
  32:src/../h/../h/ThreadQueue.hpp **** public:
  33:src/../h/../h/ThreadQueue.hpp ****     ThreadQueue() : front(nullptr), back(nullptr) {}
  34:src/../h/../h/ThreadQueue.hpp **** 
  35:src/../h/../h/ThreadQueue.hpp ****     ThreadQueue(const ThreadQueue &) = delete;
  36:src/../h/../h/ThreadQueue.hpp **** 
  37:src/../h/../h/ThreadQueue.hpp ****     ThreadQueue &operator=(const ThreadQueue &) = delete;
  38:src/../h/../h/ThreadQueue.hpp **** 
  39:src/../h/../h/ThreadQueue.hpp ****     ~ThreadQueue() {
  40:src/../h/../h/ThreadQueue.hpp ****         while (!isEmpty()) {
  34              		.loc 2 40 9
  35              		.loc 2 40 16
  36              	.LBB21:
  37              	.LBB22:
  41:src/../h/../h/ThreadQueue.hpp ****             Node* node = front;
  42:src/../h/../h/ThreadQueue.hpp ****             front = front->next;
  43:src/../h/../h/ThreadQueue.hpp ****             delete node;
  44:src/../h/../h/ThreadQueue.hpp ****         }
  45:src/../h/../h/ThreadQueue.hpp ****     }
  46:src/../h/../h/ThreadQueue.hpp **** 
  47:src/../h/../h/ThreadQueue.hpp ****     bool isEmpty() const {
  48:src/../h/../h/ThreadQueue.hpp ****         return front == nullptr;
  38              		.loc 2 48 9
  39              		.loc 2 48 16 is_stmt 0
  40 0018 03B58400 		ld	a0,8(s1)
  41              	.LVL2:
  42              	.LBE22:
  43              	.LBE21:
  40:src/../h/../h/ThreadQueue.hpp ****             Node* node = front;
  44              		.loc 2 40 16
  45 001c 630E0500 		beqz	a0,.L1
  46              	.LBB23:
  41:src/../h/../h/ThreadQueue.hpp ****             Node* node = front;
  47              		.loc 2 41 13 is_stmt 1
  48              	.LVL3:
  42:src/../h/../h/ThreadQueue.hpp ****             delete node;
  49              		.loc 2 42 13
  42:src/../h/../h/ThreadQueue.hpp ****             delete node;
  50              		.loc 2 42 28 is_stmt 0
  51 0020 83378500 		ld	a5,8(a0)
  42:src/../h/../h/ThreadQueue.hpp ****             delete node;
GAS LISTING /tmp/cckpw0IK.s 			page 3


  52              		.loc 2 42 19
  53 0024 23B4F400 		sd	a5,8(s1)
  43:src/../h/../h/ThreadQueue.hpp ****         }
  54              		.loc 2 43 13 is_stmt 1
  43:src/../h/../h/ThreadQueue.hpp ****         }
  55              		.loc 2 43 24 is_stmt 0
  56 0028 E30805FE 		beqz	a0,.L3
  57              	.LVL4:
  58              	.LBB24:
  59              	.LBB25:
  25:src/../h/../h/ThreadQueue.hpp ****         }
  60              		.loc 2 25 13 is_stmt 1
  25:src/../h/../h/ThreadQueue.hpp ****         }
  61              		.loc 2 25 21 is_stmt 0
  62 002c 97000000 		call	_Z8mem_freePv@plt
  62      E7800000 
  63              	.LVL5:
  26:src/../h/../h/ThreadQueue.hpp ****     };
  64              		.loc 2 26 9
  65 0034 6FF05FFE 		j	.L3
  66              	.L1:
  67              	.LBE25:
  68              	.LBE24:
  69              	.LBE23:
  70              	.LBE20:
  71              	.LBE19:
  72              		.loc 1 11 7
  73 0038 83308101 		ld	ra,24(sp)
  74              		.cfi_restore 1
  75 003c 03340101 		ld	s0,16(sp)
  76              		.cfi_restore 8
  77              		.cfi_def_cfa 2, 32
  78 0040 83348100 		ld	s1,8(sp)
  79              		.cfi_restore 9
  80              	.LVL6:
  81 0044 13010102 		addi	sp,sp,32
  82              		.cfi_def_cfa_offset 0
  83 0048 67800000 		jr	ra
  84              		.cfi_endproc
  85              	.LFE66:
  86              		.globl	__gxx_personality_v0
  87              		.section	.gcc_except_table._ZN4KSemD2Ev,"aG",@progbits,_ZN4KSemD5Ev,comdat
  88              	.LLSDA66:
  89 0000 FF       		.byte	0xff
  90 0001 FF       		.byte	0xff
  91 0002 03       		.byte	0x3
  92 0003 00       		.byte	0
  93              		.section	.text._ZN4KSemD2Ev,"axG",@progbits,_ZN4KSemD5Ev,comdat
  95              		.weak	_ZN4KSemD1Ev
  96              		.set	_ZN4KSemD1Ev,_ZN4KSemD2Ev
  97              		.section	.rodata
  98              		.align	3
  99              	.LC0:
 100 0000 0A4E6570 		.string	"\nNepostojeci op code: "
 100      6F73746F 
 100      6A656369 
 100      206F7020 
GAS LISTING /tmp/cckpw0IK.s 			page 4


 100      636F6465 
 101 0017 00       		.align	3
 102              	.LC1:
 103 0018 0A736361 		.string	"\nscause: "
 103      7573653A 
 103      2000
 104 0022 00000000 		.align	3
 104      0000
 105              	.LC2:
 106 0028 0A736570 		.string	"\nsepc: "
 106      633A2000 
 107              		.align	3
 108              	.LC3:
 109 0030 0A477265 		.string	"\nGreska u prekidnoj rutini\n"
 109      736B6120 
 109      75207072 
 109      656B6964 
 109      6E6F6A20 
 110 004c 00000000 		.align	3
 111              	.LC4:
 112 0050 73636175 		.string	"scause: "
 112      73653A20 
 112      00
 113              		.text
 114              		.align	2
 115              		.globl	interruptRoutine
 117              	interruptRoutine:
 118              	.LFB64:
 119              		.file 3 "src/interruptRoutine.cpp"
   1:src/interruptRoutine.cpp **** //
   2:src/interruptRoutine.cpp **** // Created by os on 5/22/23.
   3:src/interruptRoutine.cpp **** //
   4:src/interruptRoutine.cpp **** 
   5:src/interruptRoutine.cpp **** #include "../lib/hw.h"
   6:src/interruptRoutine.cpp **** #include "../h/Riscv.hpp"
   7:src/interruptRoutine.cpp **** #include "../h/KMemory.hpp"
   8:src/interruptRoutine.cpp **** #include "../h/KSem.hpp"
   9:src/interruptRoutine.cpp **** #include "../h/KConsole.hpp"
  10:src/interruptRoutine.cpp **** #include "../h/TCB.hpp"
  11:src/interruptRoutine.cpp **** #include "../h/Scheduler.hpp"
  12:src/interruptRoutine.cpp **** 
  13:src/interruptRoutine.cpp **** #include "../test/printing.hpp"
  14:src/interruptRoutine.cpp **** 
  15:src/interruptRoutine.cpp **** int main();
  16:src/interruptRoutine.cpp **** 
  17:src/interruptRoutine.cpp **** #pragma GCC optimize("O0")
  18:src/interruptRoutine.cpp **** extern "C" void interruptRoutine() {
 120              		.loc 3 18 36 is_stmt 1
 121              		.cfi_startproc
 122 0000 130101F9 		addi	sp,sp,-112
 123              		.cfi_def_cfa_offset 112
 124 0004 23341106 		sd	ra,104(sp)
 125 0008 23308106 		sd	s0,96(sp)
 126 000c 233C9104 		sd	s1,88(sp)
 127              		.cfi_offset 1, -8
 128              		.cfi_offset 8, -16
 129              		.cfi_offset 9, -24
GAS LISTING /tmp/cckpw0IK.s 			page 5


 130 0010 13040107 		addi	s0,sp,112
 131              		.cfi_def_cfa 8, 0
  19:src/interruptRoutine.cpp ****     //bitni sistemski registri
  20:src/interruptRoutine.cpp ****     uint64 scause, sepc, sstatus;
 132              		.loc 3 20 5
  21:src/interruptRoutine.cpp ****     __asm__ volatile("csrr %[scause], scause":[scause] "=r"(scause): : "a5", "a0", "a1", "a2", "a3"
 133              		.loc 3 21 5
 134              		.loc 3 21 119 is_stmt 0
 135              	#APP
 136              	# 21 "src/interruptRoutine.cpp" 1
  22              	    __asm__ volatile("csrr %[sepc], sepc":[sepc] "=r"(sepc): : "a5", "a0", "a1", "a2", "a3", "a4", 
 137              		csrr t1, scause
 138              	# 0 "" 2
 139              	#NO_APP
 140 0018 233C64FC 		sd	t1,-40(s0)
 141              	.LVL7:
 142              		.loc 3 22 5 is_stmt 1
 143              		.loc 3 22 111 is_stmt 0
 144              	#APP
 145              	# 22 "src/interruptRoutine.cpp" 1
  23              	    __asm__ volatile("csrr %[stat], sstatus":[stat] "=r"(sstatus): : "a5", "a0", "a1", "a2", "a3", 
 146              		csrr t1, sepc
 147              	# 0 "" 2
 148              	.LVL8:
 149              	#NO_APP
 150 0020 233864FC 		sd	t1,-48(s0)
 151              	.LVL9:
 152              		.loc 3 23 5 is_stmt 1
 153              		.loc 3 23 117 is_stmt 0
 154              	#APP
 155              	# 23 "src/interruptRoutine.cpp" 1
  24              	
 156              		csrr t1, sstatus
 157              	# 0 "" 2
 158              	.LVL10:
 159              	#NO_APP
 160 0028 233464FC 		sd	t1,-56(s0)
 161              	.LVL11:
  25:src/interruptRoutine.cpp ****     //argumenti preneti sistemskom pozivu
  26:src/interruptRoutine.cpp ****     uint64 a0, a1, a2, a3, a4;
 162              		.loc 3 26 5 is_stmt 1
  27:src/interruptRoutine.cpp ****     //uint64 a5, a6, a7;
  28:src/interruptRoutine.cpp ****     __asm__ volatile("mv %[ax], a0":[ax] "=r"(a0): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7"
 163              		.loc 3 28 5
 164              		.loc 3 28 101 is_stmt 0
 165              	#APP
 166              	# 28 "src/interruptRoutine.cpp" 1
  29              	    __asm__ volatile("mv %[ax], a1":[ax] "=r"(a1): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7"
 167              		mv t1, a0
 168              	# 0 "" 2
 169              	.LVL12:
 170              	#NO_APP
 171 0030 233064FC 		sd	t1,-64(s0)
 172              	.LVL13:
 173              		.loc 3 29 5 is_stmt 1
 174              		.loc 3 29 101 is_stmt 0
 175              	#APP
GAS LISTING /tmp/cckpw0IK.s 			page 6


 176              	# 29 "src/interruptRoutine.cpp" 1
  30              	    __asm__ volatile("mv %[ax], a2":[ax] "=r"(a2): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7"
 177              		mv t1, a1
 178              	# 0 "" 2
 179              	.LVL14:
 180              	#NO_APP
 181 0038 233C64FA 		sd	t1,-72(s0)
 182              	.LVL15:
 183              		.loc 3 30 5 is_stmt 1
 184              		.loc 3 30 101 is_stmt 0
 185              	#APP
 186              	# 30 "src/interruptRoutine.cpp" 1
  31              	    __asm__ volatile("mv %[ax], a3":[ax] "=r"(a3): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7"
 187              		mv t1, a2
 188              	# 0 "" 2
 189              	.LVL16:
 190              	#NO_APP
 191 0040 233864FA 		sd	t1,-80(s0)
 192              	.LVL17:
 193              		.loc 3 31 5 is_stmt 1
 194              		.loc 3 31 101 is_stmt 0
 195              	#APP
 196              	# 31 "src/interruptRoutine.cpp" 1
  32              	    __asm__ volatile("mv %[ax], a4":[ax] "=r"(a4): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7"
 197              		mv t1, a3
 198              	# 0 "" 2
 199              	.LVL18:
 200              	#NO_APP
 201 0048 233464FA 		sd	t1,-88(s0)
 202              	.LVL19:
 203              		.loc 3 32 5 is_stmt 1
 204              		.loc 3 32 101 is_stmt 0
 205              	#APP
 206              	# 32 "src/interruptRoutine.cpp" 1
  33              	//    __asm__ volatile("mv %[ax], a5":[ax] "=r"(a5): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a
 207              		mv t1, a4
 208              	# 0 "" 2
 209              	.LVL20:
 210              	#NO_APP
 211 0050 233064FA 		sd	t1,-96(s0)
 212              	.LVL21:
  34:src/interruptRoutine.cpp **** //    __asm__ volatile("mv %[ax], a6":[ax] "=r"(a6): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a
  35:src/interruptRoutine.cpp **** //    __asm__ volatile("mv %[ax], a7":[ax] "=r"(a7): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a
  36:src/interruptRoutine.cpp **** 
  37:src/interruptRoutine.cpp ****     if (scause == 0x9 || scause == 0x8) {
 213              		.loc 3 37 5 is_stmt 1
 214              	.LBB26:
 215 0054 033784FD 		ld	a4,-40(s0)
 216 0058 93079000 		li	a5,9
 217 005c 6308F700 		beq	a4,a5,.L7
 218              		.loc 3 37 23 is_stmt 0 discriminator 1
 219 0060 033784FD 		ld	a4,-40(s0)
 220 0064 93078000 		li	a5,8
 221 0068 6312F74C 		bne	a4,a5,.L8
 222              	.L7:
 223              	.LBB27:
  38:src/interruptRoutine.cpp ****         //prekid zbog poziva ecall
GAS LISTING /tmp/cckpw0IK.s 			page 7


  39:src/interruptRoutine.cpp ****         switch (a0) {
 224              		.loc 3 39 9 is_stmt 1
 225 006c 033704FC 		ld	a4,-64(s0)
 226 0070 93071008 		li	a5,129
 227 0074 63E8E73E 		bgtu	a4,a5,.L9
 228 0078 833704FC 		ld	a5,-64(s0)
 229 007c 13972700 		slli	a4,a5,2
 230 0080 97070000 		lla	a5,.L11
 230      93870700 
 231 0088 B307F700 		add	a5,a4,a5
 232 008c 83A70700 		lw	a5,0(a5)
 233 0090 1B870700 		sext.w	a4,a5
 234 0094 97070000 		lla	a5,.L11
 234      93870700 
 235 009c B307F700 		add	a5,a4,a5
 236 00a0 67800700 		jr	a5
 237              		.section	.rodata
 238 0059 000000   		.align	2
 239              		.align	2
 240              	.L11:
 241 005c 00000000 		.word	.L9-.L11
 242 0060 00000000 		.word	.L27-.L11
 243 0064 00000000 		.word	.L26-.L11
 244 0068 00000000 		.word	.L9-.L11
 245 006c 00000000 		.word	.L9-.L11
 246 0070 00000000 		.word	.L9-.L11
 247 0074 00000000 		.word	.L9-.L11
 248 0078 00000000 		.word	.L9-.L11
 249 007c 00000000 		.word	.L9-.L11
 250 0080 00000000 		.word	.L9-.L11
 251 0084 00000000 		.word	.L9-.L11
 252 0088 00000000 		.word	.L9-.L11
 253 008c 00000000 		.word	.L9-.L11
 254 0090 00000000 		.word	.L9-.L11
 255 0094 00000000 		.word	.L9-.L11
 256 0098 00000000 		.word	.L9-.L11
 257 009c 00000000 		.word	.L9-.L11
 258 00a0 00000000 		.word	.L25-.L11
 259 00a4 00000000 		.word	.L24-.L11
 260 00a8 00000000 		.word	.L23-.L11
 261 00ac 00000000 		.word	.L22-.L11
 262 00b0 00000000 		.word	.L21-.L11
 263 00b4 00000000 		.word	.L9-.L11
 264 00b8 00000000 		.word	.L9-.L11
 265 00bc 00000000 		.word	.L9-.L11
 266 00c0 00000000 		.word	.L9-.L11
 267 00c4 00000000 		.word	.L9-.L11
 268 00c8 00000000 		.word	.L9-.L11
 269 00cc 00000000 		.word	.L9-.L11
 270 00d0 00000000 		.word	.L9-.L11
 271 00d4 00000000 		.word	.L9-.L11
 272 00d8 00000000 		.word	.L9-.L11
 273 00dc 00000000 		.word	.L9-.L11
 274 00e0 00000000 		.word	.L20-.L11
 275 00e4 00000000 		.word	.L19-.L11
 276 00e8 00000000 		.word	.L18-.L11
 277 00ec 00000000 		.word	.L17-.L11
GAS LISTING /tmp/cckpw0IK.s 			page 8


 278 00f0 00000000 		.word	.L9-.L11
 279 00f4 00000000 		.word	.L9-.L11
 280 00f8 00000000 		.word	.L9-.L11
 281 00fc 00000000 		.word	.L9-.L11
 282 0100 00000000 		.word	.L9-.L11
 283 0104 00000000 		.word	.L9-.L11
 284 0108 00000000 		.word	.L9-.L11
 285 010c 00000000 		.word	.L9-.L11
 286 0110 00000000 		.word	.L9-.L11
 287 0114 00000000 		.word	.L9-.L11
 288 0118 00000000 		.word	.L9-.L11
 289 011c 00000000 		.word	.L9-.L11
 290 0120 00000000 		.word	.L16-.L11
 291 0124 00000000 		.word	.L9-.L11
 292 0128 00000000 		.word	.L9-.L11
 293 012c 00000000 		.word	.L9-.L11
 294 0130 00000000 		.word	.L9-.L11
 295 0134 00000000 		.word	.L9-.L11
 296 0138 00000000 		.word	.L9-.L11
 297 013c 00000000 		.word	.L9-.L11
 298 0140 00000000 		.word	.L9-.L11
 299 0144 00000000 		.word	.L9-.L11
 300 0148 00000000 		.word	.L9-.L11
 301 014c 00000000 		.word	.L9-.L11
 302 0150 00000000 		.word	.L9-.L11
 303 0154 00000000 		.word	.L9-.L11
 304 0158 00000000 		.word	.L9-.L11
 305 015c 00000000 		.word	.L9-.L11
 306 0160 00000000 		.word	.L15-.L11
 307 0164 00000000 		.word	.L14-.L11
 308 0168 00000000 		.word	.L43-.L11
 309 016c 00000000 		.word	.L9-.L11
 310 0170 00000000 		.word	.L9-.L11
 311 0174 00000000 		.word	.L9-.L11
 312 0178 00000000 		.word	.L9-.L11
 313 017c 00000000 		.word	.L9-.L11
 314 0180 00000000 		.word	.L9-.L11
 315 0184 00000000 		.word	.L9-.L11
 316 0188 00000000 		.word	.L9-.L11
 317 018c 00000000 		.word	.L9-.L11
 318 0190 00000000 		.word	.L9-.L11
 319 0194 00000000 		.word	.L9-.L11
 320 0198 00000000 		.word	.L9-.L11
 321 019c 00000000 		.word	.L9-.L11
 322 01a0 00000000 		.word	.L9-.L11
 323 01a4 00000000 		.word	.L9-.L11
 324 01a8 00000000 		.word	.L9-.L11
 325 01ac 00000000 		.word	.L9-.L11
 326 01b0 00000000 		.word	.L9-.L11
 327 01b4 00000000 		.word	.L9-.L11
 328 01b8 00000000 		.word	.L9-.L11
 329 01bc 00000000 		.word	.L9-.L11
 330 01c0 00000000 		.word	.L9-.L11
 331 01c4 00000000 		.word	.L9-.L11
 332 01c8 00000000 		.word	.L9-.L11
 333 01cc 00000000 		.word	.L9-.L11
 334 01d0 00000000 		.word	.L9-.L11
GAS LISTING /tmp/cckpw0IK.s 			page 9


 335 01d4 00000000 		.word	.L9-.L11
 336 01d8 00000000 		.word	.L9-.L11
 337 01dc 00000000 		.word	.L9-.L11
 338 01e0 00000000 		.word	.L9-.L11
 339 01e4 00000000 		.word	.L9-.L11
 340 01e8 00000000 		.word	.L9-.L11
 341 01ec 00000000 		.word	.L9-.L11
 342 01f0 00000000 		.word	.L9-.L11
 343 01f4 00000000 		.word	.L9-.L11
 344 01f8 00000000 		.word	.L9-.L11
 345 01fc 00000000 		.word	.L9-.L11
 346 0200 00000000 		.word	.L9-.L11
 347 0204 00000000 		.word	.L9-.L11
 348 0208 00000000 		.word	.L9-.L11
 349 020c 00000000 		.word	.L9-.L11
 350 0210 00000000 		.word	.L9-.L11
 351 0214 00000000 		.word	.L9-.L11
 352 0218 00000000 		.word	.L9-.L11
 353 021c 00000000 		.word	.L9-.L11
 354 0220 00000000 		.word	.L9-.L11
 355 0224 00000000 		.word	.L9-.L11
 356 0228 00000000 		.word	.L9-.L11
 357 022c 00000000 		.word	.L9-.L11
 358 0230 00000000 		.word	.L9-.L11
 359 0234 00000000 		.word	.L9-.L11
 360 0238 00000000 		.word	.L9-.L11
 361 023c 00000000 		.word	.L9-.L11
 362 0240 00000000 		.word	.L9-.L11
 363 0244 00000000 		.word	.L9-.L11
 364 0248 00000000 		.word	.L9-.L11
 365 024c 00000000 		.word	.L9-.L11
 366 0250 00000000 		.word	.L9-.L11
 367 0254 00000000 		.word	.L9-.L11
 368 0258 00000000 		.word	.L9-.L11
 369 025c 00000000 		.word	.L12-.L11
 370 0260 00000000 		.word	.L10-.L11
 371              		.text
 372              	.L27:
 373              	.LBB28:
 374              	.LBB29:
  40:src/interruptRoutine.cpp ****             case 0x01:
 375              		.loc 3 40 13
  41:src/interruptRoutine.cpp ****                 //mem_alloc
  42:src/interruptRoutine.cpp ****                 //a1 = broj blokova koje treba alocirati
  43:src/interruptRoutine.cpp ****                 KMemory::kmalloc((size_t)a1);
 376              		.loc 3 43 17
 377              		.loc 3 43 33 is_stmt 0
 378 00a4 033584FB 		ld	a0,-72(s0)
 379 00a8 97000000 		call	_ZN7KMemory7kmallocEm@plt
 379      E7800000 
 380              	.LVL22:
  44:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 381              		.loc 3 44 17 is_stmt 1
 382              		.loc 3 44 50 is_stmt 0
 383              	#APP
 384              	# 44 "src/interruptRoutine.cpp" 1
  45              	                break;
GAS LISTING /tmp/cckpw0IK.s 			page 10


 385              		sd a0, 80(s0)
 386              	# 0 "" 2
 387              		.loc 3 45 17 is_stmt 1
 388              	#NO_APP
 389 00b4 6F004045 		j	.L28
 390              	.LVL23:
 391              	.L26:
  46:src/interruptRoutine.cpp ****             case 0x02:
 392              		.loc 3 46 13
  47:src/interruptRoutine.cpp ****                 //mem_free
  48:src/interruptRoutine.cpp ****                 //a1 = pokazivac na memoriju koju dealociramo, dobijen sa mem_alloc
  49:src/interruptRoutine.cpp ****                 KMemory::kfree((void*)a1);
 393              		.loc 3 49 17
 394              		.loc 3 49 31 is_stmt 0
 395 00b8 833784FB 		ld	a5,-72(s0)
 396 00bc 13850700 		mv	a0,a5
 397 00c0 97000000 		call	_ZN7KMemory5kfreeEPv@plt
 397      E7800000 
 398              	.LVL24:
  50:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 399              		.loc 3 50 17 is_stmt 1
 400              		.loc 3 50 50 is_stmt 0
 401              	#APP
 402              	# 50 "src/interruptRoutine.cpp" 1
  51              	                break;
 403              		sd a0, 80(s0)
 404              	# 0 "" 2
 405              		.loc 3 51 17 is_stmt 1
 406              	#NO_APP
 407 00cc 6F00C043 		j	.L28
 408              	.LVL25:
 409              	.L25:
  52:src/interruptRoutine.cpp ****             case 0x11:
 410              		.loc 3 52 13
  53:src/interruptRoutine.cpp ****                 //thread_create
  54:src/interruptRoutine.cpp ****                 //a1 = pokazivac na rucku u koju upisujemo identifikator niti(adresa u memoriji)
  55:src/interruptRoutine.cpp ****                 //a2 = pokazivac na funkciju koju nit treba da izvrsava
  56:src/interruptRoutine.cpp ****                 //a3 = argumenti funkcije koju nit treba da izvrsava
  57:src/interruptRoutine.cpp ****                 //a4 = poslednja lokacija alociranog steka(najniza adresa)
  58:src/interruptRoutine.cpp ****                 *((thread_t*)a1) = TCB::createThread((TCB::Body)a2, (void*)a3, (uint64*)a4);
 411              		.loc 3 58 17
 412              		.loc 3 58 53 is_stmt 0
 413 00d0 833704FB 		ld	a5,-80(s0)
 414 00d4 033784FA 		ld	a4,-88(s0)
 415 00d8 833604FA 		ld	a3,-96(s0)
 416              		.loc 3 58 17
 417 00dc 833484FB 		ld	s1,-72(s0)
 418              		.loc 3 58 53
 419 00e0 13860600 		mv	a2,a3
 420 00e4 93050700 		mv	a1,a4
 421 00e8 13850700 		mv	a0,a5
 422 00ec 97000000 		call	_ZN3TCB12createThreadEPFvPvES0_Pm@plt
 422      E7800000 
 423              	.LVL26:
 424 00f4 93070500 		mv	a5,a0
 425              		.loc 3 58 34
 426 00f8 23B0F400 		sd	a5,0(s1)
GAS LISTING /tmp/cckpw0IK.s 			page 11


  59:src/interruptRoutine.cpp ****                 if (*((thread_t*)a1) != nullptr) {
 427              		.loc 3 59 17 is_stmt 1
 428              		.loc 3 59 21 is_stmt 0
 429 00fc 833784FB 		ld	a5,-72(s0)
 430 0100 83B70700 		ld	a5,0(a5)
 431              		.loc 3 59 17
 432 0104 63880702 		beqz	a5,.L29
  60:src/interruptRoutine.cpp ****                     if ((TCB::Body)a2 != (TCB::Body)main) {
 433              		.loc 3 60 21 is_stmt 1
 434              		.loc 3 60 39 is_stmt 0
 435 0108 033704FB 		ld	a4,-80(s0)
 436              		.loc 3 60 21
 437 010c 97070000 		la	a5,main
 437      83B70700 
 438 0114 630CF700 		beq	a4,a5,.L30
  61:src/interruptRoutine.cpp ****                         Scheduler::put(*((thread_t*)a1));
 439              		.loc 3 61 25 is_stmt 1
 440              		.loc 3 61 39 is_stmt 0
 441 0118 833784FB 		ld	a5,-72(s0)
 442 011c 83B70700 		ld	a5,0(a5)
 443 0120 13850700 		mv	a0,a5
 444 0124 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 444      E7800000 
 445              	.LVL27:
 446              	.L30:
  62:src/interruptRoutine.cpp ****                     }
  63:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, 0");
 447              		.loc 3 63 21 is_stmt 1
 448              		.loc 3 63 49 is_stmt 0
 449              	#APP
 450              	# 63 "src/interruptRoutine.cpp" 1
  64              	                } else {
 451              		li a0, 0
 452              	# 0 "" 2
 453              	#NO_APP
 454 0130 6F008000 		j	.L31
 455              	.L29:
  65:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, -1");
 456              		.loc 3 65 21 is_stmt 1
 457              		.loc 3 65 50 is_stmt 0
 458              	#APP
 459              	# 65 "src/interruptRoutine.cpp" 1
  66              	                }
 460              		li a0, -1
 461              	# 0 "" 2
 462              	#NO_APP
 463              	.L31:
  67:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 464              		.loc 3 67 17 is_stmt 1
 465              		.loc 3 67 50 is_stmt 0
 466              	#APP
 467              	# 67 "src/interruptRoutine.cpp" 1
  68              	                break;
 468              		sd a0, 80(s0)
 469              	# 0 "" 2
 470              		.loc 3 68 17 is_stmt 1
 471              	#NO_APP
GAS LISTING /tmp/cckpw0IK.s 			page 12


 472 013c 6F00C03C 		j	.L28
 473              	.LVL28:
 474              	.L24:
  69:src/interruptRoutine.cpp ****             case 0x12:
 475              		.loc 3 69 13
  70:src/interruptRoutine.cpp ****                 //thread_exit
  71:src/interruptRoutine.cpp ****                 TCB::getRunning()->setStatus(TCB::FINISHED);
 476              		.loc 3 71 17
 477              		.loc 3 71 45 is_stmt 0
 478 0140 97000000 		call	_ZN3TCB10getRunningEv
 478      E7800000 
 479              	.LVL29:
 480 0148 93070500 		mv	a5,a0
 481 014c 93055000 		li	a1,5
 482 0150 13850700 		mv	a0,a5
 483 0154 97000000 		call	_ZN3TCB9setStatusENS_12ThreadStatusE
 483      E7800000 
 484              	.LVL30:
  72:src/interruptRoutine.cpp ****                 TCB::releaseJoined(TCB::getRunning());
 485              		.loc 3 72 17 is_stmt 1
 486              		.loc 3 72 35 is_stmt 0
 487 015c 97000000 		call	_ZN3TCB10getRunningEv
 487      E7800000 
 488              	.LVL31:
 489 0164 93070500 		mv	a5,a0
 490 0168 13850700 		mv	a0,a5
 491 016c 97000000 		call	_ZN3TCB13releaseJoinedEPS_@plt
 491      E7800000 
 492              	.LVL32:
  73:src/interruptRoutine.cpp ****                 __asm__ volatile("li a0, 0");
 493              		.loc 3 73 17 is_stmt 1
 494              		.loc 3 73 45 is_stmt 0
 495              	#APP
 496              	# 73 "src/interruptRoutine.cpp" 1
  74              	                __asm__ volatile("sd a0, 80(s0)");
 497              		li a0, 0
 498              	# 0 "" 2
 499              		.loc 3 74 17 is_stmt 1
 500              		.loc 3 74 50 is_stmt 0
 501              	# 74 "src/interruptRoutine.cpp" 1
  75              	                TCB::dispatch();
 502              		sd a0, 80(s0)
 503              	# 0 "" 2
 504              		.loc 3 75 17 is_stmt 1
 505              		.loc 3 75 30 is_stmt 0
 506              	#NO_APP
 507 017c 97000000 		call	_ZN3TCB8dispatchEv@plt
 507      E7800000 
 508              	.LVL33:
  76:src/interruptRoutine.cpp ****                 break;
 509              		.loc 3 76 17 is_stmt 1
 510 0184 6F004038 		j	.L28
 511              	.LVL34:
 512              	.L23:
  77:src/interruptRoutine.cpp ****             case 0x13:
 513              		.loc 3 77 13
  78:src/interruptRoutine.cpp ****                 //thread_dispatch
GAS LISTING /tmp/cckpw0IK.s 			page 13


  79:src/interruptRoutine.cpp ****                 TCB::dispatch();
 514              		.loc 3 79 17
 515              		.loc 3 79 30 is_stmt 0
 516 0188 97000000 		call	_ZN3TCB8dispatchEv@plt
 516      E7800000 
 517              	.LVL35:
  80:src/interruptRoutine.cpp ****                 break;
 518              		.loc 3 80 17 is_stmt 1
 519 0190 6F008037 		j	.L28
 520              	.LVL36:
 521              	.L22:
  81:src/interruptRoutine.cpp ****             case 0x14:
 522              		.loc 3 81 13
  82:src/interruptRoutine.cpp ****                 //thread_join
  83:src/interruptRoutine.cpp ****                 //a1 = rucka niti na koju tekuca nit treba da ceka
  84:src/interruptRoutine.cpp ****                 TCB::threadJoin((thread_t)a1);
 523              		.loc 3 84 17
 524              		.loc 3 84 32 is_stmt 0
 525 0194 833784FB 		ld	a5,-72(s0)
 526 0198 13850700 		mv	a0,a5
 527 019c 97000000 		call	_ZN3TCB10threadJoinEPS_@plt
 527      E7800000 
 528              	.LVL37:
  85:src/interruptRoutine.cpp ****                 TCB::dispatch();
 529              		.loc 3 85 17 is_stmt 1
 530              		.loc 3 85 30 is_stmt 0
 531 01a4 97000000 		call	_ZN3TCB8dispatchEv@plt
 531      E7800000 
 532              	.LVL38:
  86:src/interruptRoutine.cpp ****                 break;
 533              		.loc 3 86 17 is_stmt 1
 534 01ac 6F00C035 		j	.L28
 535              	.LVL39:
 536              	.L21:
  87:src/interruptRoutine.cpp ****             case 0x15:
 537              		.loc 3 87 13
  88:src/interruptRoutine.cpp ****                 //destruktor klase Thread, brise nit ciji je handle prosledjen
  89:src/interruptRoutine.cpp ****                 //a1 = rucka niti koja se brise
  90:src/interruptRoutine.cpp ****                 if(TCB::getRunning()==(thread_t)a1){
 538              		.loc 3 90 17
 539              		.loc 3 90 35 is_stmt 0
 540 01b0 97000000 		call	_ZN3TCB10getRunningEv
 540      E7800000 
 541              	.LVL40:
 542 01b8 13070500 		mv	a4,a0
 543              		.loc 3 90 37
 544 01bc 833784FB 		ld	a5,-72(s0)
 545 01c0 B307F740 		sub	a5,a4,a5
 546 01c4 93B71700 		seqz	a5,a5
 547 01c8 93F7F70F 		andi	a5,a5,0xff
 548              		.loc 3 90 17
 549 01cc 63820704 		beqz	a5,.L32
  91:src/interruptRoutine.cpp ****                     TCB::getRunning()->setStatus(TCB::FINISHED);
 550              		.loc 3 91 21 is_stmt 1
 551              		.loc 3 91 49 is_stmt 0
 552 01d0 97000000 		call	_ZN3TCB10getRunningEv
 552      E7800000 
GAS LISTING /tmp/cckpw0IK.s 			page 14


 553              	.LVL41:
 554 01d8 93070500 		mv	a5,a0
 555 01dc 93055000 		li	a1,5
 556 01e0 13850700 		mv	a0,a5
 557 01e4 97000000 		call	_ZN3TCB9setStatusENS_12ThreadStatusE
 557      E7800000 
 558              	.LVL42:
  92:src/interruptRoutine.cpp ****                     TCB::releaseJoined(TCB::getRunning());
 559              		.loc 3 92 21 is_stmt 1
 560              		.loc 3 92 39 is_stmt 0
 561 01ec 97000000 		call	_ZN3TCB10getRunningEv
 561      E7800000 
 562              	.LVL43:
 563 01f4 93070500 		mv	a5,a0
 564 01f8 13850700 		mv	a0,a5
 565 01fc 97000000 		call	_ZN3TCB13releaseJoinedEPS_@plt
 565      E7800000 
 566              	.LVL44:
  93:src/interruptRoutine.cpp ****                     TCB::dispatch();
 567              		.loc 3 93 21 is_stmt 1
 568              		.loc 3 93 34 is_stmt 0
 569 0204 97000000 		call	_ZN3TCB8dispatchEv@plt
 569      E7800000 
 570              	.LVL45:
  94:src/interruptRoutine.cpp ****                 }
  95:src/interruptRoutine.cpp ****                 else{
  96:src/interruptRoutine.cpp ****                     TCB::quitThread((thread_t)a1);
  97:src/interruptRoutine.cpp ****                     TCB::releaseJoined((thread_t)a1);
  98:src/interruptRoutine.cpp ****                 }
  99:src/interruptRoutine.cpp ****                 break;
 571              		.loc 3 99 17
 572 020c 6F00C02F 		j	.L28
 573              	.L32:
  96:src/interruptRoutine.cpp ****                     TCB::releaseJoined((thread_t)a1);
 574              		.loc 3 96 21 is_stmt 1
  96:src/interruptRoutine.cpp ****                     TCB::releaseJoined((thread_t)a1);
 575              		.loc 3 96 36 is_stmt 0
 576 0210 833784FB 		ld	a5,-72(s0)
 577 0214 13850700 		mv	a0,a5
 578 0218 97000000 		call	_ZN3TCB10quitThreadEPS_@plt
 578      E7800000 
 579              	.LVL46:
  97:src/interruptRoutine.cpp ****                 }
 580              		.loc 3 97 21 is_stmt 1
  97:src/interruptRoutine.cpp ****                 }
 581              		.loc 3 97 39 is_stmt 0
 582 0220 833784FB 		ld	a5,-72(s0)
 583 0224 13850700 		mv	a0,a5
 584 0228 97000000 		call	_ZN3TCB13releaseJoinedEPS_@plt
 584      E7800000 
 585              	.LVL47:
 586              		.loc 3 99 17 is_stmt 1
 587 0230 6F00802D 		j	.L28
 588              	.LVL48:
 589              	.L20:
 100:src/interruptRoutine.cpp ****             case 0x21:
 590              		.loc 3 100 13
GAS LISTING /tmp/cckpw0IK.s 			page 15


 101:src/interruptRoutine.cpp ****                 //sem_open
 102:src/interruptRoutine.cpp ****                 //a1 = pokazivac na rucku semafora, u koju se upisuje adresa semafora u memoriji
 103:src/interruptRoutine.cpp ****                 *((sem_t*)a1) = KSem::initSem((uint)a2);
 591              		.loc 3 103 17
 592              		.loc 3 103 46 is_stmt 0
 593 0234 833704FB 		ld	a5,-80(s0)
 594 0238 9B870700 		sext.w	a5,a5
 595              		.loc 3 103 17
 596 023c 833484FB 		ld	s1,-72(s0)
 597              		.loc 3 103 46
 598 0240 13850700 		mv	a0,a5
 599 0244 97000000 		call	_ZN4KSem7initSemEj@plt
 599      E7800000 
 600              	.LVL49:
 601 024c 93070500 		mv	a5,a0
 602              		.loc 3 103 31
 603 0250 23B0F400 		sd	a5,0(s1)
 104:src/interruptRoutine.cpp ****                 if (*((sem_t*)a1) != nullptr) {
 604              		.loc 3 104 17 is_stmt 1
 605              		.loc 3 104 21 is_stmt 0
 606 0254 833784FB 		ld	a5,-72(s0)
 607 0258 83B70700 		ld	a5,0(a5)
 608              		.loc 3 104 17
 609 025c 63860700 		beqz	a5,.L34
 105:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, 0");
 610              		.loc 3 105 21 is_stmt 1
 611              		.loc 3 105 49 is_stmt 0
 612              	#APP
 613              	# 105 "src/interruptRoutine.cpp" 1
 106              	                } else {
 614              		li a0, 0
 615              	# 0 "" 2
 616              	#NO_APP
 617 0264 6F008000 		j	.L35
 618              	.L34:
 107:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, -1");
 619              		.loc 3 107 21 is_stmt 1
 620              		.loc 3 107 50 is_stmt 0
 621              	#APP
 622              	# 107 "src/interruptRoutine.cpp" 1
 108              	                }
 623              		li a0, -1
 624              	# 0 "" 2
 625              	#NO_APP
 626              	.L35:
 109:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 627              		.loc 3 109 17 is_stmt 1
 628              		.loc 3 109 50 is_stmt 0
 629              	#APP
 630              	# 109 "src/interruptRoutine.cpp" 1
 110              	                break;
 631              		sd a0, 80(s0)
 632              	# 0 "" 2
 633              		.loc 3 110 17 is_stmt 1
 634              	#NO_APP
 635 0270 6F008029 		j	.L28
 636              	.LVL50:
GAS LISTING /tmp/cckpw0IK.s 			page 16


 637              	.L19:
 111:src/interruptRoutine.cpp ****             case 0x22:
 638              		.loc 3 111 13
 112:src/interruptRoutine.cpp ****                 //sem_close
 113:src/interruptRoutine.cpp ****                 //a1 = rucka semafora
 114:src/interruptRoutine.cpp ****                 KSem::closeSem((sem_t)a1);
 639              		.loc 3 114 17
 640              		.loc 3 114 31 is_stmt 0
 641 0274 833784FB 		ld	a5,-72(s0)
 642 0278 13850700 		mv	a0,a5
 643 027c 97000000 		call	_ZN4KSem8closeSemEPS_@plt
 643      E7800000 
 644              	.LVL51:
 115:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 645              		.loc 3 115 17 is_stmt 1
 646              		.loc 3 115 50 is_stmt 0
 647              	#APP
 648              	# 115 "src/interruptRoutine.cpp" 1
 116              	                delete (sem_t)a1;
 649              		sd a0, 80(s0)
 650              	# 0 "" 2
 651              		.loc 3 116 17 is_stmt 1
 652              		.loc 3 116 24 is_stmt 0
 653              	#NO_APP
 654 0288 833484FB 		ld	s1,-72(s0)
 655              		.loc 3 116 33
 656 028c 63800426 		beqz	s1,.L52
 657              		.loc 3 116 31 discriminator 1
 658 0290 13850400 		mv	a0,s1
 659 0294 97000000 		call	_ZN4KSemD1Ev
 659      E7800000 
 660              	.LVL52:
 661 029c 13850400 		mv	a0,s1
 662 02a0 97000000 		call	_ZN4KSemdlEPv@plt
 662      E7800000 
 663              	.LVL53:
 117:src/interruptRoutine.cpp ****                 break;
 664              		.loc 3 117 17 is_stmt 1 discriminator 1
 665 02a8 6F004024 		j	.L52
 666              	.LVL54:
 667              	.L18:
 118:src/interruptRoutine.cpp ****             case 0x23:
 668              		.loc 3 118 13
 119:src/interruptRoutine.cpp ****                 //sem_wait
 120:src/interruptRoutine.cpp ****                 //a1 = rucka semafora
 121:src/interruptRoutine.cpp ****                 ((sem_t)a1)->wait();
 669              		.loc 3 121 17
 670              		.loc 3 121 34 is_stmt 0
 671 02ac 833784FB 		ld	a5,-72(s0)
 672 02b0 13850700 		mv	a0,a5
 673 02b4 97000000 		call	_ZN4KSem4waitEv@plt
 673      E7800000 
 674              	.LVL55:
 122:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 675              		.loc 3 122 17 is_stmt 1
 676              		.loc 3 122 50 is_stmt 0
 677              	#APP
GAS LISTING /tmp/cckpw0IK.s 			page 17


 678              	# 122 "src/interruptRoutine.cpp" 1
 123              	                break;
 679              		sd a0, 80(s0)
 680              	# 0 "" 2
 681              		.loc 3 123 17 is_stmt 1
 682              	#NO_APP
 683 02c0 6F008024 		j	.L28
 684              	.LVL56:
 685              	.L17:
 124:src/interruptRoutine.cpp ****             case 0x24:
 686              		.loc 3 124 13
 125:src/interruptRoutine.cpp ****                 //sem_signal
 126:src/interruptRoutine.cpp ****                 //a1 = rucka semafora
 127:src/interruptRoutine.cpp ****                 ((sem_t)a1)->signal();
 687              		.loc 3 127 17
 688              		.loc 3 127 36 is_stmt 0
 689 02c4 833784FB 		ld	a5,-72(s0)
 690 02c8 13850700 		mv	a0,a5
 691 02cc 97000000 		call	_ZN4KSem6signalEv@plt
 691      E7800000 
 692              	.LVL57:
 128:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 693              		.loc 3 128 17 is_stmt 1
 694              		.loc 3 128 50 is_stmt 0
 695              	#APP
 696              	# 128 "src/interruptRoutine.cpp" 1
 129              	                break;
 697              		sd a0, 80(s0)
 698              	# 0 "" 2
 699              		.loc 3 129 17 is_stmt 1
 700              	#NO_APP
 701 02d8 6F000023 		j	.L28
 702              	.LVL58:
 703              	.L16:
 130:src/interruptRoutine.cpp ****             case 0x31:
 704              		.loc 3 130 13
 131:src/interruptRoutine.cpp ****                 //time_sleep
 132:src/interruptRoutine.cpp ****                 //a1 = broj perioda tajmera na koji se uspavljuje tekuca nit
 133:src/interruptRoutine.cpp ****                 if ((time_t)a1 > 0) {
 705              		.loc 3 133 17
 706 02dc 833784FB 		ld	a5,-72(s0)
 707 02e0 63860700 		beqz	a5,.L37
 134:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, 0");
 708              		.loc 3 134 21
 709              		.loc 3 134 49 is_stmt 0
 710              	#APP
 711              	# 134 "src/interruptRoutine.cpp" 1
 135              	                } else {
 712              		li a0, 0
 713              	# 0 "" 2
 714              	#NO_APP
 715 02e8 6F008000 		j	.L38
 716              	.L37:
 136:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, -1");
 717              		.loc 3 136 21 is_stmt 1
 718              		.loc 3 136 50 is_stmt 0
 719              	#APP
GAS LISTING /tmp/cckpw0IK.s 			page 18


 720              	# 136 "src/interruptRoutine.cpp" 1
 137              	                }
 721              		li a0, -1
 722              	# 0 "" 2
 723              	#NO_APP
 724              	.L38:
 138:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 725              		.loc 3 138 17 is_stmt 1
 726              		.loc 3 138 50 is_stmt 0
 727              	#APP
 728              	# 138 "src/interruptRoutine.cpp" 1
 139              	                if ((time_t)a1 > 0) {
 729              		sd a0, 80(s0)
 730              	# 0 "" 2
 731              		.loc 3 139 17 is_stmt 1
 732              	#NO_APP
 733 02f4 833784FB 		ld	a5,-72(s0)
 734 02f8 638E071E 		beqz	a5,.L53
 140:src/interruptRoutine.cpp ****                     Scheduler::putToSleep(TCB::getRunning(), (time_t)a1);
 735              		.loc 3 140 21
 736              		.loc 3 140 42 is_stmt 0
 737 02fc 97000000 		call	_ZN3TCB10getRunningEv
 737      E7800000 
 738              	.LVL59:
 739 0304 93070500 		mv	a5,a0
 740 0308 833584FB 		ld	a1,-72(s0)
 741 030c 13850700 		mv	a0,a5
 742 0310 97000000 		call	_ZN9Scheduler10putToSleepEP3TCBm@plt
 742      E7800000 
 743              	.LVL60:
 141:src/interruptRoutine.cpp ****                     TCB::dispatch();
 744              		.loc 3 141 21 is_stmt 1
 745              		.loc 3 141 34 is_stmt 0
 746 0318 97000000 		call	_ZN3TCB8dispatchEv@plt
 746      E7800000 
 747              	.LVL61:
 142:src/interruptRoutine.cpp ****                 }
 143:src/interruptRoutine.cpp ****                 break;
 748              		.loc 3 143 17 is_stmt 1
 749 0320 6F00401D 		j	.L53
 750              	.LVL62:
 751              	.L15:
 144:src/interruptRoutine.cpp ****             case 0x41:
 752              		.loc 3 144 13
 145:src/interruptRoutine.cpp ****                 //getc
 146:src/interruptRoutine.cpp ****                 KConsole::kgetc();
 753              		.loc 3 146 17
 754              		.loc 3 146 32 is_stmt 0
 755 0324 97000000 		call	_ZN8KConsole5kgetcEv@plt
 755      E7800000 
 756              	.LVL63:
 147:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 757              		.loc 3 147 17 is_stmt 1
 758              		.loc 3 147 50 is_stmt 0
 759              	#APP
 760              	# 147 "src/interruptRoutine.cpp" 1
 148              	                break;
GAS LISTING /tmp/cckpw0IK.s 			page 19


 761              		sd a0, 80(s0)
 762              	# 0 "" 2
 763              		.loc 3 148 17 is_stmt 1
 764              	#NO_APP
 765 0330 6F00801D 		j	.L28
 766              	.LVL64:
 767              	.L14:
 149:src/interruptRoutine.cpp ****             case 0x42:
 768              		.loc 3 149 13
 150:src/interruptRoutine.cpp ****                 //putc
 151:src/interruptRoutine.cpp ****                 //a1 = karakter koji se upisuje u bafer za ispis na konzolu
 152:src/interruptRoutine.cpp ****                 KConsole::kputc((char)a1);
 769              		.loc 3 152 17
 770              		.loc 3 152 32 is_stmt 0
 771 0334 833784FB 		ld	a5,-72(s0)
 772 0338 93F7F70F 		andi	a5,a5,0xff
 773 033c 13850700 		mv	a0,a5
 774 0340 97000000 		call	_ZN8KConsole5kputcEc@plt
 774      E7800000 
 775              	.LVL65:
 153:src/interruptRoutine.cpp ****                 break;
 776              		.loc 3 153 17 is_stmt 1
 777 0348 6F00001C 		j	.L28
 778              	.L43:
 154:src/interruptRoutine.cpp ****             case 0x43:
 779              		.loc 3 154 13
 155:src/interruptRoutine.cpp ****                 //flush izlaznog bafera konzole
 156:src/interruptRoutine.cpp ****                 while (KConsole::getOutputHead() != KConsole::getOutputTail()) {
 780              		.loc 3 156 17
 781              		.loc 3 156 50
 782              		.loc 3 156 47 is_stmt 0
 783 034c 97000000 		call	_ZN8KConsole13getOutputHeadEv
 783      E7800000 
 784              	.LVL66:
 785 0354 93070500 		mv	a5,a0
 786 0358 93840700 		mv	s1,a5
 787              		.loc 3 156 76
 788 035c 97000000 		call	_ZN8KConsole13getOutputTailEv
 788      E7800000 
 789              	.LVL67:
 790 0364 93070500 		mv	a5,a0
 791              		.loc 3 156 50
 792 0368 13870400 		mv	a4,s1
 793 036c B307F740 		sub	a5,a4,a5
 794 0370 B337F000 		snez	a5,a5
 795 0374 93F7F70F 		andi	a5,a5,0xff
 796 0378 63820718 		beqz	a5,.L54
 797              	.LBB30:
 157:src/interruptRoutine.cpp ****                     char c = KConsole::getFromOutput();
 798              		.loc 3 157 21 is_stmt 1
 799              		.loc 3 157 53 is_stmt 0
 800 037c 97000000 		call	_ZN8KConsole13getFromOutputEv@plt
 800      E7800000 
 801              	.LVL68:
 802 0384 93070500 		mv	a5,a0
 803 0388 A30BF4F8 		sb	a5,-105(s0)
 804              	.LVL69:
GAS LISTING /tmp/cckpw0IK.s 			page 20


 805              	.L42:
 158:src/interruptRoutine.cpp ****                     while (!(KConsole::getSRvalue() & CONSOLE_TX_STATUS_BIT)) {}
 806              		.loc 3 158 21 is_stmt 1
 807              		.loc 3 158 28
 808              		.loc 3 158 50 is_stmt 0
 809 038c 97000000 		call	_ZN8KConsole10getSRvalueEv
 809      E7800000 
 810              	.LVL70:
 811 0394 93070500 		mv	a5,a0
 812              		.loc 3 158 53
 813 0398 93F70702 		andi	a5,a5,32
 814              		.loc 3 158 28
 815 039c 93B71700 		seqz	a5,a5
 816 03a0 93F7F70F 		andi	a5,a5,0xff
 817 03a4 63840700 		beqz	a5,.L41
 818              		.loc 3 158 21
 819 03a8 6FF05FFE 		j	.L42
 820              	.L41:
 159:src/interruptRoutine.cpp ****                     KConsole::setDRvalue(c);
 821              		.loc 3 159 21 is_stmt 1
 822              		.loc 3 159 41 is_stmt 0
 823 03ac 834774F9 		lbu	a5,-105(s0)
 824 03b0 13850700 		mv	a0,a5
 825 03b4 97000000 		call	_ZN8KConsole10setDRvalueEc
 825      E7800000 
 826              	.LVL71:
 160:src/interruptRoutine.cpp ****                     sem_signal(KConsole::getOutputBufferHasSpace());
 827              		.loc 3 160 21 is_stmt 1
 828              		.loc 3 160 31 is_stmt 0
 829 03bc 97000000 		call	_ZN8KConsole23getOutputBufferHasSpaceEv
 829      E7800000 
 830              	.LVL72:
 831 03c4 93070500 		mv	a5,a0
 832 03c8 13850700 		mv	a0,a5
 833 03cc 97000000 		call	_Z10sem_signalP4KSem@plt
 833      E7800000 
 834              	.LVL73:
 835              	.LBE30:
 156:src/interruptRoutine.cpp ****                     char c = KConsole::getFromOutput();
 836              		.loc 3 156 17
 837 03d4 6FF09FF7 		j	.L43
 838              	.LVL74:
 839              	.L12:
 161:src/interruptRoutine.cpp ****                 }
 162:src/interruptRoutine.cpp ****                 break;
 163:src/interruptRoutine.cpp ****             case 0x80:
 840              		.loc 3 163 13 is_stmt 1
 164:src/interruptRoutine.cpp ****                 //alloc thread
 165:src/interruptRoutine.cpp ****                 //a1 = pokazivac na rucku u koju upisujemo identifikator niti(adresa u memoriji)
 166:src/interruptRoutine.cpp ****                 //a2 = pokazivac na funkciju koju nit treba da izvrsava
 167:src/interruptRoutine.cpp ****                 //a3 = argumenti funkcije koju nit treba da izvrsava
 168:src/interruptRoutine.cpp ****                 //a4 = poslednja lokacija alociranog steka(najniza adresa)
 169:src/interruptRoutine.cpp ****                 *((thread_t*)a1) = TCB::createThread((TCB::Body)a2, (void*)a3, (uint64*)a4);
 841              		.loc 3 169 17
 842              		.loc 3 169 53 is_stmt 0
 843 03d8 833704FB 		ld	a5,-80(s0)
 844 03dc 033784FA 		ld	a4,-88(s0)
GAS LISTING /tmp/cckpw0IK.s 			page 21


 845 03e0 833604FA 		ld	a3,-96(s0)
 846              		.loc 3 169 17
 847 03e4 833484FB 		ld	s1,-72(s0)
 848              		.loc 3 169 53
 849 03e8 13860600 		mv	a2,a3
 850 03ec 93050700 		mv	a1,a4
 851 03f0 13850700 		mv	a0,a5
 852 03f4 97000000 		call	_ZN3TCB12createThreadEPFvPvES0_Pm@plt
 852      E7800000 
 853              	.LVL75:
 854 03fc 93070500 		mv	a5,a0
 855              		.loc 3 169 34
 856 0400 23B0F400 		sd	a5,0(s1)
 170:src/interruptRoutine.cpp ****                 if (*((thread_t*)a1) != nullptr) {
 857              		.loc 3 170 17 is_stmt 1
 858              		.loc 3 170 21 is_stmt 0
 859 0404 833784FB 		ld	a5,-72(s0)
 860 0408 83B70700 		ld	a5,0(a5)
 861              		.loc 3 170 17
 862 040c 63860700 		beqz	a5,.L44
 171:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, 0");
 863              		.loc 3 171 21 is_stmt 1
 864              		.loc 3 171 49 is_stmt 0
 865              	#APP
 866              	# 171 "src/interruptRoutine.cpp" 1
 172              	                } else {
 867              		li a0, 0
 868              	# 0 "" 2
 869              	#NO_APP
 870 0414 6F008000 		j	.L45
 871              	.L44:
 173:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, -1");
 872              		.loc 3 173 21 is_stmt 1
 873              		.loc 3 173 50 is_stmt 0
 874              	#APP
 875              	# 173 "src/interruptRoutine.cpp" 1
 174              	                }
 876              		li a0, -1
 877              	# 0 "" 2
 878              	#NO_APP
 879              	.L45:
 175:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 880              		.loc 3 175 17 is_stmt 1
 881              		.loc 3 175 50 is_stmt 0
 882              	#APP
 883              	# 175 "src/interruptRoutine.cpp" 1
 176              	                break;
 884              		sd a0, 80(s0)
 885              	# 0 "" 2
 886              		.loc 3 176 17 is_stmt 1
 887              	#NO_APP
 888 0420 6F00800E 		j	.L28
 889              	.LVL76:
 890              	.L10:
 177:src/interruptRoutine.cpp ****             case 0x81:
 891              		.loc 3 177 13
 178:src/interruptRoutine.cpp ****                 //start thread
GAS LISTING /tmp/cckpw0IK.s 			page 22


 179:src/interruptRoutine.cpp ****                 //a1 = rucka niti koja se stavlja u scheduler
 180:src/interruptRoutine.cpp ****                 if (((thread_t)a1)->getBody() != (TCB::Body)main) {
 892              		.loc 3 180 17
 893              		.loc 3 180 44 is_stmt 0
 894 0424 833784FB 		ld	a5,-72(s0)
 895 0428 13850700 		mv	a0,a5
 896 042c 97000000 		call	_ZN3TCB7getBodyEv
 896      E7800000 
 897              	.LVL77:
 898 0434 13070500 		mv	a4,a0
 899              		.loc 3 180 47
 900 0438 97070000 		la	a5,main
 900      83B70700 
 901 0440 B307F740 		sub	a5,a4,a5
 902 0444 B337F000 		snez	a5,a5
 903 0448 93F7F70F 		andi	a5,a5,0xff
 904              		.loc 3 180 17
 905 044c 638C070A 		beqz	a5,.L55
 181:src/interruptRoutine.cpp ****                     Scheduler::put((thread_t)a1);
 906              		.loc 3 181 21 is_stmt 1
 907              		.loc 3 181 35 is_stmt 0
 908 0450 833784FB 		ld	a5,-72(s0)
 909 0454 13850700 		mv	a0,a5
 910 0458 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 910      E7800000 
 911              	.LVL78:
 182:src/interruptRoutine.cpp ****                 }
 183:src/interruptRoutine.cpp ****                 break;
 912              		.loc 3 183 17 is_stmt 1
 913 0460 6F00400A 		j	.L55
 914              	.LVL79:
 915              	.L9:
 184:src/interruptRoutine.cpp ****             default:
 916              		.loc 3 184 13
 185:src/interruptRoutine.cpp ****                 printString("\nNepostojeci op code: ");
 917              		.loc 3 185 17
 918              		.loc 3 185 28 is_stmt 0
 919 0464 17050000 		lla	a0,.LC0
 919      13050500 
 920 046c 97000000 		call	_Z11printStringPKc@plt
 920      E7800000 
 921              	.LVL80:
 186:src/interruptRoutine.cpp ****                 printInt(a0);
 922              		.loc 3 186 17 is_stmt 1
 923              		.loc 3 186 25 is_stmt 0
 924 0474 833704FC 		ld	a5,-64(s0)
 925 0478 9B870700 		sext.w	a5,a5
 926 047c 13060000 		li	a2,0
 927 0480 9305A000 		li	a1,10
 928 0484 13850700 		mv	a0,a5
 929 0488 97000000 		call	_Z8printIntiii@plt
 929      E7800000 
 930              	.LVL81:
 187:src/interruptRoutine.cpp ****                 printString("\nscause: ");
 931              		.loc 3 187 17 is_stmt 1
 932              		.loc 3 187 28 is_stmt 0
 933 0490 17050000 		lla	a0,.LC1
GAS LISTING /tmp/cckpw0IK.s 			page 23


 933      13050500 
 934 0498 97000000 		call	_Z11printStringPKc@plt
 934      E7800000 
 935              	.LVL82:
 188:src/interruptRoutine.cpp ****                 printInt(scause);
 936              		.loc 3 188 17 is_stmt 1
 937              		.loc 3 188 25 is_stmt 0
 938 04a0 833784FD 		ld	a5,-40(s0)
 939 04a4 9B870700 		sext.w	a5,a5
 940 04a8 13060000 		li	a2,0
 941 04ac 9305A000 		li	a1,10
 942 04b0 13850700 		mv	a0,a5
 943 04b4 97000000 		call	_Z8printIntiii@plt
 943      E7800000 
 944              	.LVL83:
 189:src/interruptRoutine.cpp ****                 printString("\nsepc: ");
 945              		.loc 3 189 17 is_stmt 1
 946              		.loc 3 189 28 is_stmt 0
 947 04bc 17050000 		lla	a0,.LC2
 947      13050500 
 948 04c4 97000000 		call	_Z11printStringPKc@plt
 948      E7800000 
 949              	.LVL84:
 190:src/interruptRoutine.cpp ****                 printInt(sepc);
 950              		.loc 3 190 17 is_stmt 1
 951              		.loc 3 190 25 is_stmt 0
 952 04cc 833704FD 		ld	a5,-48(s0)
 953 04d0 9B870700 		sext.w	a5,a5
 954 04d4 13060000 		li	a2,0
 955 04d8 9305A000 		li	a1,10
 956 04dc 13850700 		mv	a0,a5
 957 04e0 97000000 		call	_Z8printIntiii@plt
 957      E7800000 
 958              	.LVL85:
 191:src/interruptRoutine.cpp ****                 break;
 959              		.loc 3 191 17 is_stmt 1
 960 04e8 6F000002 		j	.L28
 961              	.L52:
 117:src/interruptRoutine.cpp ****             case 0x23:
 962              		.loc 3 117 17 is_stmt 0
 963 04ec 13000000 		nop
 964 04f0 6F008001 		j	.L28
 965              	.L53:
 143:src/interruptRoutine.cpp ****             case 0x41:
 966              		.loc 3 143 17
 967 04f4 13000000 		nop
 968 04f8 6F000001 		j	.L28
 969              	.L54:
 162:src/interruptRoutine.cpp ****             case 0x80:
 970              		.loc 3 162 17
 971 04fc 13000000 		nop
 972 0500 6F008000 		j	.L28
 973              	.L55:
 183:src/interruptRoutine.cpp ****             default:
 974              		.loc 3 183 17
 975 0504 13000000 		nop
 976              	.L28:
GAS LISTING /tmp/cckpw0IK.s 			page 24


 977              	.LBE29:
 978              	.LBE28:
 192:src/interruptRoutine.cpp ****         }
 193:src/interruptRoutine.cpp ****         //sepc pokazuje na ecall instrukciju, treba preci na sledecu instrukciju
 194:src/interruptRoutine.cpp ****         sepc += 4;
 979              		.loc 3 194 9 is_stmt 1
 980              		.loc 3 194 14 is_stmt 0
 981 0508 833704FD 		ld	a5,-48(s0)
 982 050c 93874700 		addi	a5,a5,4
 983 0510 2338F4FC 		sd	a5,-48(s0)
 984              	.LVL86:
 195:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 985              		.loc 3 195 9 is_stmt 1
 986              		.loc 3 195 66 is_stmt 0
 987 0514 833704FD 		ld	a5,-48(s0)
 988              	#APP
 989              	# 195 "src/interruptRoutine.cpp" 1
 196              	        __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 990              		csrw sepc, a5
 991              	# 0 "" 2
 992              		.loc 3 196 9 is_stmt 1
 993              		.loc 3 196 71 is_stmt 0
 994              	#NO_APP
 995 051c 833784FC 		ld	a5,-56(s0)
 996              	.LVL87:
 997              	#APP
 998              	# 196 "src/interruptRoutine.cpp" 1
 197              	    } else if (scause == 0x8000000000000009) {
 999              		csrw sstatus, a5
 1000              	# 0 "" 2
 1001              	#NO_APP
 1002              	.LBE27:
 1003 0524 13000000 		nop
 1004              	.LBE26:
 198:src/interruptRoutine.cpp ****         //spoljasnji hardverski prekid (od konzole)
 199:src/interruptRoutine.cpp ****         uint64 irq = plic_claim();
 200:src/interruptRoutine.cpp ****         if (irq == CONSOLE_IRQ) {
 201:src/interruptRoutine.cpp ****             if (KConsole::getSRvalue() & CONSOLE_RX_STATUS_BIT) {
 202:src/interruptRoutine.cpp ****                 //upisuje karakter sa ulaza(otkucani) u ulazni bafer KConsole
 203:src/interruptRoutine.cpp ****                 KConsole::placeInInput(KConsole::getDRvalue());
 204:src/interruptRoutine.cpp ****             }
 205:src/interruptRoutine.cpp ****         }
 206:src/interruptRoutine.cpp ****         plic_complete(irq);
 207:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 208:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 209:src/interruptRoutine.cpp ****         Riscv::mc_sip(Riscv::SIP_SEIP);
 210:src/interruptRoutine.cpp ****     } else if (scause == 0x8000000000000001) {
 211:src/interruptRoutine.cpp ****         //prekid od tajmera
 212:src/interruptRoutine.cpp ****         Scheduler::wake();
 213:src/interruptRoutine.cpp ****         TCB::getRunningTimeSlice()++;
 214:src/interruptRoutine.cpp ****         if (TCB::getRunningTimeSlice() >= TCB::getRunning()->getTimeSlice()) {
 215:src/interruptRoutine.cpp ****             TCB::dispatch();
 216:src/interruptRoutine.cpp ****         }
 217:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 218:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 219:src/interruptRoutine.cpp ****         Riscv::mc_sip(Riscv::SIP_SSIP);
 220:src/interruptRoutine.cpp ****     } else {
GAS LISTING /tmp/cckpw0IK.s 			page 25


 221:src/interruptRoutine.cpp ****         printString("\nGreska u prekidnoj rutini\n");
 222:src/interruptRoutine.cpp ****         printString("scause: ");
 223:src/interruptRoutine.cpp ****         printInt(scause);
 224:src/interruptRoutine.cpp ****         printString("\nsepc: ");
 225:src/interruptRoutine.cpp ****         printInt(sepc);
 226:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 227:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 228:src/interruptRoutine.cpp ****     }
 229:src/interruptRoutine.cpp **** }...
 1005              		.loc 3 229 1
 1006 0528 6F00C01A 		j	.L56
 1007              	.LVL88:
 1008              	.L8:
 1009              	.LBB38:
 1010              	.LBB31:
 197:src/interruptRoutine.cpp ****     } else if (scause == 0x8000000000000009) {
 1011              		.loc 3 197 12 is_stmt 1
 1012              	.LBB32:
 1013 052c 033784FD 		ld	a4,-40(s0)
 1014              	.LVL89:
 1015 0530 9307F0FF 		li	a5,-1
 1016 0534 9397F703 		slli	a5,a5,63
 1017 0538 93879700 		addi	a5,a5,9
 1018 053c 6314F708 		bne	a4,a5,.L48
 1019              	.LBB33:
 199:src/interruptRoutine.cpp ****         uint64 irq = plic_claim();
 1020              		.loc 3 199 9
 199:src/interruptRoutine.cpp ****         uint64 irq = plic_claim();
 1021              		.loc 3 199 32 is_stmt 0
 1022 0540 97000000 		call	plic_claim@plt
 1022      E7800000 
 1023              	.LVL90:
 1024 0548 93070500 		mv	a5,a0
 199:src/interruptRoutine.cpp ****         uint64 irq = plic_claim();
 1025              		.loc 3 199 33
 1026 054c 233CF4F8 		sd	a5,-104(s0)
 1027              	.LVL91:
 200:src/interruptRoutine.cpp ****         if (irq == CONSOLE_IRQ) {
 1028              		.loc 3 200 9 is_stmt 1
 1029 0550 033784F9 		ld	a4,-104(s0)
 1030 0554 9307A000 		li	a5,10
 1031 0558 631CF702 		bne	a4,a5,.L49
 201:src/interruptRoutine.cpp ****             if (KConsole::getSRvalue() & CONSOLE_RX_STATUS_BIT) {
 1032              		.loc 3 201 13
 201:src/interruptRoutine.cpp ****             if (KConsole::getSRvalue() & CONSOLE_RX_STATUS_BIT) {
 1033              		.loc 3 201 37 is_stmt 0
 1034 055c 97000000 		call	_ZN8KConsole10getSRvalueEv
 1034      E7800000 
 1035              	.LVL92:
 1036 0564 93070500 		mv	a5,a0
 201:src/interruptRoutine.cpp ****             if (KConsole::getSRvalue() & CONSOLE_RX_STATUS_BIT) {
 1037              		.loc 3 201 40
 1038 0568 93F71700 		andi	a5,a5,1
 201:src/interruptRoutine.cpp ****             if (KConsole::getSRvalue() & CONSOLE_RX_STATUS_BIT) {
 1039              		.loc 3 201 63
 1040 056c B337F000 		snez	a5,a5
 1041 0570 93F7F70F 		andi	a5,a5,0xff
GAS LISTING /tmp/cckpw0IK.s 			page 26


 201:src/interruptRoutine.cpp ****             if (KConsole::getSRvalue() & CONSOLE_RX_STATUS_BIT) {
 1042              		.loc 3 201 13
 1043 0574 638E0700 		beqz	a5,.L49
 203:src/interruptRoutine.cpp ****                 KConsole::placeInInput(KConsole::getDRvalue());
 1044              		.loc 3 203 17 is_stmt 1
 203:src/interruptRoutine.cpp ****                 KConsole::placeInInput(KConsole::getDRvalue());
 1045              		.loc 3 203 60 is_stmt 0
 1046 0578 97000000 		call	_ZN8KConsole10getDRvalueEv
 1046      E7800000 
 1047              	.LVL93:
 1048 0580 93070500 		mv	a5,a0
 203:src/interruptRoutine.cpp ****                 KConsole::placeInInput(KConsole::getDRvalue());
 1049              		.loc 3 203 39
 1050 0584 13850700 		mv	a0,a5
 1051 0588 97000000 		call	_ZN8KConsole12placeInInputEc@plt
 1051      E7800000 
 1052              	.LVL94:
 1053              	.L49:
 206:src/interruptRoutine.cpp ****         plic_complete(irq);
 1054              		.loc 3 206 9 is_stmt 1
 206:src/interruptRoutine.cpp ****         plic_complete(irq);
 1055              		.loc 3 206 22 is_stmt 0
 1056 0590 833784F9 		ld	a5,-104(s0)
 1057 0594 9B870700 		sext.w	a5,a5
 1058 0598 13850700 		mv	a0,a5
 1059 059c 97000000 		call	plic_complete@plt
 1059      E7800000 
 1060              	.LVL95:
 207:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 1061              		.loc 3 207 9 is_stmt 1
 207:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 1062              		.loc 3 207 66 is_stmt 0
 1063 05a4 833704FD 		ld	a5,-48(s0)
 1064              	#APP
 1065              	# 207 "src/interruptRoutine.cpp" 1
 208:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 1066              		csrw sepc, a5
 1067              	# 0 "" 2
 1068              		.loc 3 208 9 is_stmt 1
 208:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 1069              		.loc 3 208 71 is_stmt 0
 1070              	#NO_APP
 1071 05ac 833784FC 		ld	a5,-56(s0)
 1072              	#APP
 1073              	# 208 "src/interruptRoutine.cpp" 1
 209:src/interruptRoutine.cpp ****         Riscv::mc_sip(Riscv::SIP_SEIP);
 1074              		csrw sstatus, a5
 1075              	# 0 "" 2
 1076              		.loc 3 209 9 is_stmt 1
 209:src/interruptRoutine.cpp ****         Riscv::mc_sip(Riscv::SIP_SEIP);
 1077              		.loc 3 209 22 is_stmt 0
 1078              	#NO_APP
 1079 05b4 13050020 		li	a0,512
 1080 05b8 97000000 		call	_ZN5Riscv6mc_sipEm
 1080      E7800000 
 1081              	.LVL96:
 1082              	.LBE33:
GAS LISTING /tmp/cckpw0IK.s 			page 27


 1083              	.LBE32:
 1084              	.LBE31:
 1085              	.LBE38:
 1086              		.loc 3 229 1
 1087 05c0 6F004011 		j	.L56
 1088              	.LVL97:
 1089              	.L48:
 1090              	.LBB39:
 1091              	.LBB36:
 1092              	.LBB34:
 210:src/interruptRoutine.cpp ****     } else if (scause == 0x8000000000000001) {
 1093              		.loc 3 210 12 is_stmt 1
 1094 05c4 033784FD 		ld	a4,-40(s0)
 1095 05c8 9307F0FF 		li	a5,-1
 1096 05cc 9397F703 		slli	a5,a5,63
 1097 05d0 93871700 		addi	a5,a5,1
 1098 05d4 6314F708 		bne	a4,a5,.L50
 212:src/interruptRoutine.cpp ****         Scheduler::wake();
 1099              		.loc 3 212 9
 212:src/interruptRoutine.cpp ****         Scheduler::wake();
 1100              		.loc 3 212 24 is_stmt 0
 1101 05d8 97000000 		call	_ZN9Scheduler4wakeEv@plt
 1101      E7800000 
 1102              	.LVL98:
 213:src/interruptRoutine.cpp ****         TCB::getRunningTimeSlice()++;
 1103              		.loc 3 213 9 is_stmt 1
 213:src/interruptRoutine.cpp ****         TCB::getRunningTimeSlice()++;
 1104              		.loc 3 213 34 is_stmt 0
 1105 05e0 97000000 		call	_ZN3TCB19getRunningTimeSliceEv
 1105      E7800000 
 1106              	.LVL99:
 1107 05e8 93070500 		mv	a5,a0
 213:src/interruptRoutine.cpp ****         TCB::getRunningTimeSlice()++;
 1108              		.loc 3 213 33
 1109 05ec 03B70700 		ld	a4,0(a5)
 213:src/interruptRoutine.cpp ****         TCB::getRunningTimeSlice()++;
 1110              		.loc 3 213 35
 1111 05f0 13071700 		addi	a4,a4,1
 1112 05f4 23B0E700 		sd	a4,0(a5)
 214:src/interruptRoutine.cpp ****         if (TCB::getRunningTimeSlice() >= TCB::getRunning()->getTimeSlice()) {
 1113              		.loc 3 214 9 is_stmt 1
 214:src/interruptRoutine.cpp ****         if (TCB::getRunningTimeSlice() >= TCB::getRunning()->getTimeSlice()) {
 1114              		.loc 3 214 38 is_stmt 0
 1115 05f8 97000000 		call	_ZN3TCB19getRunningTimeSliceEv
 1115      E7800000 
 1116              	.LVL100:
 1117 0600 93070500 		mv	a5,a0
 214:src/interruptRoutine.cpp ****         if (TCB::getRunningTimeSlice() >= TCB::getRunning()->getTimeSlice()) {
 1118              		.loc 3 214 37
 1119 0604 83B40700 		ld	s1,0(a5)
 214:src/interruptRoutine.cpp ****         if (TCB::getRunningTimeSlice() >= TCB::getRunning()->getTimeSlice()) {
 1120              		.loc 3 214 74
 1121 0608 97000000 		call	_ZN3TCB10getRunningEv
 1121      E7800000 
 1122              	.LVL101:
 1123 0610 93070500 		mv	a5,a0
 1124 0614 13850700 		mv	a0,a5
GAS LISTING /tmp/cckpw0IK.s 			page 28


 1125 0618 97000000 		call	_ZN3TCB12getTimeSliceEv
 1125      E7800000 
 1126              	.LVL102:
 1127 0620 93070500 		mv	a5,a0
 214:src/interruptRoutine.cpp ****         if (TCB::getRunningTimeSlice() >= TCB::getRunning()->getTimeSlice()) {
 1128              		.loc 3 214 40
 1129 0624 B3B7F400 		sltu	a5,s1,a5
 1130 0628 93C71700 		xori	a5,a5,1
 1131 062c 93F7F70F 		andi	a5,a5,0xff
 214:src/interruptRoutine.cpp ****         if (TCB::getRunningTimeSlice() >= TCB::getRunning()->getTimeSlice()) {
 1132              		.loc 3 214 9
 1133 0630 63860700 		beqz	a5,.L51
 215:src/interruptRoutine.cpp ****             TCB::dispatch();
 1134              		.loc 3 215 13 is_stmt 1
 215:src/interruptRoutine.cpp ****             TCB::dispatch();
 1135              		.loc 3 215 26 is_stmt 0
 1136 0634 97000000 		call	_ZN3TCB8dispatchEv@plt
 1136      E7800000 
 1137              	.LVL103:
 1138              	.L51:
 217:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 1139              		.loc 3 217 9 is_stmt 1
 217:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 1140              		.loc 3 217 66 is_stmt 0
 1141 063c 833704FD 		ld	a5,-48(s0)
 1142              	#APP
 1143              	# 217 "src/interruptRoutine.cpp" 1
 218:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 1144              		csrw sepc, a5
 1145              	# 0 "" 2
 1146              		.loc 3 218 9 is_stmt 1
 218:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 1147              		.loc 3 218 71 is_stmt 0
 1148              	#NO_APP
 1149 0644 833784FC 		ld	a5,-56(s0)
 1150              	#APP
 1151              	# 218 "src/interruptRoutine.cpp" 1
 219:src/interruptRoutine.cpp ****         Riscv::mc_sip(Riscv::SIP_SSIP);
 1152              		csrw sstatus, a5
 1153              	# 0 "" 2
 1154              		.loc 3 219 9 is_stmt 1
 219:src/interruptRoutine.cpp ****         Riscv::mc_sip(Riscv::SIP_SSIP);
 1155              		.loc 3 219 22 is_stmt 0
 1156              	#NO_APP
 1157 064c 13052000 		li	a0,2
 1158 0650 97000000 		call	_ZN5Riscv6mc_sipEm
 1158      E7800000 
 1159              	.LVL104:
 1160              	.LBE34:
 1161              	.LBE36:
 1162              	.LBE39:
 1163              		.loc 3 229 1
 1164 0658 6F00C007 		j	.L56
 1165              	.LVL105:
 1166              	.L50:
 1167              	.LBB40:
 1168              	.LBB37:
GAS LISTING /tmp/cckpw0IK.s 			page 29


 1169              	.LBB35:
 221:src/interruptRoutine.cpp ****         printString("\nGreska u prekidnoj rutini\n");
 1170              		.loc 3 221 9 is_stmt 1
 221:src/interruptRoutine.cpp ****         printString("\nGreska u prekidnoj rutini\n");
 1171              		.loc 3 221 20 is_stmt 0
 1172 065c 17050000 		lla	a0,.LC3
 1172      13050500 
 1173 0664 97000000 		call	_Z11printStringPKc@plt
 1173      E7800000 
 1174              	.LVL106:
 222:src/interruptRoutine.cpp ****         printString("scause: ");
 1175              		.loc 3 222 9 is_stmt 1
 222:src/interruptRoutine.cpp ****         printString("scause: ");
 1176              		.loc 3 222 20 is_stmt 0
 1177 066c 17050000 		lla	a0,.LC4
 1177      13050500 
 1178 0674 97000000 		call	_Z11printStringPKc@plt
 1178      E7800000 
 1179              	.LVL107:
 223:src/interruptRoutine.cpp ****         printInt(scause);
 1180              		.loc 3 223 9 is_stmt 1
 223:src/interruptRoutine.cpp ****         printInt(scause);
 1181              		.loc 3 223 17 is_stmt 0
 1182 067c 833784FD 		ld	a5,-40(s0)
 1183 0680 9B870700 		sext.w	a5,a5
 1184 0684 13060000 		li	a2,0
 1185 0688 9305A000 		li	a1,10
 1186 068c 13850700 		mv	a0,a5
 1187 0690 97000000 		call	_Z8printIntiii@plt
 1187      E7800000 
 1188              	.LVL108:
 224:src/interruptRoutine.cpp ****         printString("\nsepc: ");
 1189              		.loc 3 224 9 is_stmt 1
 224:src/interruptRoutine.cpp ****         printString("\nsepc: ");
 1190              		.loc 3 224 20 is_stmt 0
 1191 0698 17050000 		lla	a0,.LC2
 1191      13050500 
 1192 06a0 97000000 		call	_Z11printStringPKc@plt
 1192      E7800000 
 1193              	.LVL109:
 225:src/interruptRoutine.cpp ****         printInt(sepc);
 1194              		.loc 3 225 9 is_stmt 1
 225:src/interruptRoutine.cpp ****         printInt(sepc);
 1195              		.loc 3 225 17 is_stmt 0
 1196 06a8 833704FD 		ld	a5,-48(s0)
 1197 06ac 9B870700 		sext.w	a5,a5
 1198 06b0 13060000 		li	a2,0
 1199 06b4 9305A000 		li	a1,10
 1200 06b8 13850700 		mv	a0,a5
 1201 06bc 97000000 		call	_Z8printIntiii@plt
 1201      E7800000 
 1202              	.LVL110:
 226:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 1203              		.loc 3 226 9 is_stmt 1
 226:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 1204              		.loc 3 226 66 is_stmt 0
 1205 06c4 833704FD 		ld	a5,-48(s0)
GAS LISTING /tmp/cckpw0IK.s 			page 30


 1206              	#APP
 1207              	# 226 "src/interruptRoutine.cpp" 1
 227:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 1208              		csrw sepc, a5
 1209              	# 0 "" 2
 1210              		.loc 3 227 9 is_stmt 1
 227:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 1211              		.loc 3 227 71 is_stmt 0
 1212              	#NO_APP
 1213 06cc 833784FC 		ld	a5,-56(s0)
 1214              	#APP
 1215              	# 227 "src/interruptRoutine.cpp" 1
 1216              		csrw sstatus, a5
 1217              	# 0 "" 2
 1218              	#NO_APP
 1219              	.L56:
 1220              	.LBE35:
 1221              	.LBE37:
 1222              	.LBE40:
 1223              		.loc 3 229 1
 1224 06d4 13000000 		nop
 1225 06d8 83308106 		ld	ra,104(sp)
 1226              		.cfi_restore 1
 1227 06dc 03340106 		ld	s0,96(sp)
 1228              		.cfi_restore 8
 1229              		.cfi_def_cfa 2, 112
 1230              	.LVL111:
 1231 06e0 83348105 		ld	s1,88(sp)
 1232              		.cfi_restore 9
 1233 06e4 13010107 		addi	sp,sp,112
 1234              		.cfi_def_cfa_offset 0
 1235              	.LVL112:
 1236 06e8 67800000 		jr	ra
 1237              		.cfi_endproc
 1238              	.LFE64:
 1240              		.section	.text._ZN5Riscv6mc_sipEm,"axG",@progbits,_ZN5Riscv6mc_sipEm,comdat
 1241              		.align	2
 1242              		.weak	_ZN5Riscv6mc_sipEm
 1244              	_ZN5Riscv6mc_sipEm:
 1245              	.LFB7:
 1246              		.file 4 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 5/17/23.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJEKAT2023_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJEKAT2023_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** class Riscv {
  11:src/../h/Riscv.hpp **** public:
  12:src/../h/Riscv.hpp **** 
  13:src/../h/Riscv.hpp **** 	static void returnFromInterrupt();
  14:src/../h/Riscv.hpp **** 
  15:src/../h/Riscv.hpp **** 	//read scause
  16:src/../h/Riscv.hpp **** 	static uint64 r_scause();
GAS LISTING /tmp/cckpw0IK.s 			page 31


  17:src/../h/Riscv.hpp **** 
  18:src/../h/Riscv.hpp **** 	//write scause
  19:src/../h/Riscv.hpp **** 	static void w_scause(uint64 scause);
  20:src/../h/Riscv.hpp **** 
  21:src/../h/Riscv.hpp **** 	//read sepc
  22:src/../h/Riscv.hpp **** 	static uint64 r_sepc();
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp **** 	//write sepc
  25:src/../h/Riscv.hpp **** 	static void w_sepc(uint64 sepc);
  26:src/../h/Riscv.hpp **** 
  27:src/../h/Riscv.hpp **** 	//read stvec
  28:src/../h/Riscv.hpp **** 	static uint64 r_stvec();
  29:src/../h/Riscv.hpp **** 
  30:src/../h/Riscv.hpp **** 	//write stvec
  31:src/../h/Riscv.hpp **** 	static void w_stvec(uint64 stvec);
  32:src/../h/Riscv.hpp **** 
  33:src/../h/Riscv.hpp **** 	enum BitMaskSip {
  34:src/../h/Riscv.hpp **** 		//postoji zahtev za softverski prekid
  35:src/../h/Riscv.hpp **** 		SIP_SSIP = (1 << 1),
  36:src/../h/Riscv.hpp **** 		//postoji prekid od tajmera
  37:src/../h/Riscv.hpp **** 		SIP_STIP = (1 << 5),
  38:src/../h/Riscv.hpp **** 		//postoji zahtev za spoljasnji hardverski prekid
  39:src/../h/Riscv.hpp **** 		SIP_SEIP = (1 << 9)
  40:src/../h/Riscv.hpp **** 	};
  41:src/../h/Riscv.hpp **** 
  42:src/../h/Riscv.hpp **** 	//mask set sip
  43:src/../h/Riscv.hpp **** 	static void ms_sip(uint64 mask);
  44:src/../h/Riscv.hpp **** 
  45:src/../h/Riscv.hpp **** 	//mask clear sip
  46:src/../h/Riscv.hpp **** 	static void mc_sip(uint64 mask);
  47:src/../h/Riscv.hpp **** 
  48:src/../h/Riscv.hpp **** 	//read sip
  49:src/../h/Riscv.hpp **** 	static uint64 r_sip();
  50:src/../h/Riscv.hpp **** 
  51:src/../h/Riscv.hpp **** 	//write sip
  52:src/../h/Riscv.hpp **** 	static void w_sip(uint64 sip);
  53:src/../h/Riscv.hpp **** 
  54:src/../h/Riscv.hpp **** 	//kada se pozove sret, SIE dobija vrednost SPIE, SPIE se postavlja na 1,
  55:src/../h/Riscv.hpp **** 	//rezim se postavlja na osnovu SPP bita, SPP se postavlja na 0
  56:src/../h/Riscv.hpp **** 	enum BitMaskSstatus {
  57:src/../h/Riscv.hpp **** 		//1 - dozvoljeni prekidi; 0- nedozvoljeni prekidi; igonrise se u korisnickom rezimu
  58:src/../h/Riscv.hpp **** 		SSTATUS_SIE = (1 << 1),
  59:src/../h/Riscv.hpp **** 		//prethodna vrednost bita SIE
  60:src/../h/Riscv.hpp **** 		SSTATUS_SPIE = (1 << 5),
  61:src/../h/Riscv.hpp **** 		//iz kog rezima se desio skok; 0 - iz korisnickog; 1 - iz sistemskog
  62:src/../h/Riscv.hpp **** 		SSTATUS_SPP = (1 << 8)
  63:src/../h/Riscv.hpp **** 	};
  64:src/../h/Riscv.hpp **** 
  65:src/../h/Riscv.hpp **** 	//mask set sstatus
  66:src/../h/Riscv.hpp **** 	static void ms_sstatus(uint64 mask);
  67:src/../h/Riscv.hpp **** 
  68:src/../h/Riscv.hpp **** 	//mask clear sstatus
  69:src/../h/Riscv.hpp **** 	static void mc_sstatus(uint64 mask);
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp **** 	//read sstatus
  72:src/../h/Riscv.hpp **** 	static uint64 r_sstatus();
  73:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/cckpw0IK.s 			page 32


  74:src/../h/Riscv.hpp **** 	//write sstatus
  75:src/../h/Riscv.hpp **** 	static void w_sstatus(uint64 sstatus);
  76:src/../h/Riscv.hpp **** 
  77:src/../h/Riscv.hpp **** };
  78:src/../h/Riscv.hpp **** 
  79:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause() {
  80:src/../h/Riscv.hpp **** 	uint64 volatile scause;
  81:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[scause], scause": [scause] "=r"(scause));
  82:src/../h/Riscv.hpp **** 	return scause;
  83:src/../h/Riscv.hpp **** }
  84:src/../h/Riscv.hpp **** 
  85:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
  86:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw scause, %[scause]": :[scause] "r"(scause));
  87:src/../h/Riscv.hpp **** }
  88:src/../h/Riscv.hpp **** 
  89:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc() {
  90:src/../h/Riscv.hpp **** 	uint64 volatile sepc;
  91:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[sepc], sepc": [sepc] "=r"(sepc));
  92:src/../h/Riscv.hpp **** 	return sepc;
  93:src/../h/Riscv.hpp **** }
  94:src/../h/Riscv.hpp **** 
  95:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
  96:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
  97:src/../h/Riscv.hpp **** }
  98:src/../h/Riscv.hpp **** 
  99:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec() {
 100:src/../h/Riscv.hpp **** 	uint64 volatile stvec;
 101:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[stvec], stvec": [stvec] "=r"(stvec));
 102:src/../h/Riscv.hpp **** 	return stvec;
 103:src/../h/Riscv.hpp **** }
 104:src/../h/Riscv.hpp **** 
 105:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 106:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw stvec, %[stvec]": :[stvec] "r"(stvec));
 107:src/../h/Riscv.hpp **** }
 108:src/../h/Riscv.hpp **** 
 109:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 110:src/../h/Riscv.hpp **** 	__asm__ volatile("csrs sip, %[mask]": :[mask] "r"(mask));
 111:src/../h/Riscv.hpp **** }
 112:src/../h/Riscv.hpp **** 
 113:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 1247              		.loc 4 113 40 is_stmt 1
 1248              		.cfi_startproc
 1249              	.LVL113:
 1250 0000 130101FF 		addi	sp,sp,-16
 1251              		.cfi_def_cfa_offset 16
 1252 0004 23348100 		sd	s0,8(sp)
 1253              		.cfi_offset 8, -8
 1254 0008 13040101 		addi	s0,sp,16
 1255              		.cfi_def_cfa 8, 0
 114:src/../h/Riscv.hpp **** 	__asm__ volatile("csrc sip, %[mask]": :[mask] "r"(mask));
 1256              		.loc 4 114 2
 1257              		.loc 4 114 58 is_stmt 0
 1258              	#APP
 1259              	# 114 "src/../h/Riscv.hpp" 1
 115              	}
 1260              		csrc sip, a0
 1261              	# 0 "" 2
GAS LISTING /tmp/cckpw0IK.s 			page 33


 1262              		.loc 4 115 1
 1263              	#NO_APP
 1264 0010 03348100 		ld	s0,8(sp)
 1265              		.cfi_restore 8
 1266              		.cfi_def_cfa 2, 16
 1267 0014 13010101 		addi	sp,sp,16
 1268              		.cfi_def_cfa_offset 0
 1269 0018 67800000 		jr	ra
 1270              		.cfi_endproc
 1271              	.LFE7:
 1273              		.section	.text._ZN8KConsole10getSRvalueEv,"axG",@progbits,_ZN8KConsole10getSRvalueEv,comdat
 1274              		.align	2
 1275              		.weak	_ZN8KConsole10getSRvalueEv
 1277              	_ZN8KConsole10getSRvalueEv:
 1278              	.LFB35:
 1279              		.file 5 "src/../h/KConsole.hpp"
   1:src/../h/KConsole.hpp **** //
   2:src/../h/KConsole.hpp **** // Created by os on 6/7/23.
   3:src/../h/KConsole.hpp **** //
   4:src/../h/KConsole.hpp **** 
   5:src/../h/KConsole.hpp **** #ifndef PROJEKAT2023_KCONSOLE_HPP
   6:src/../h/KConsole.hpp **** #define PROJEKAT2023_KCONSOLE_HPP
   7:src/../h/KConsole.hpp **** 
   8:src/../h/KConsole.hpp **** #include "../lib/hw.h"
   9:src/../h/KConsole.hpp **** 
  10:src/../h/KConsole.hpp **** class KSem;
  11:src/../h/KConsole.hpp **** 
  12:src/../h/KConsole.hpp **** typedef KSem* sem_t;
  13:src/../h/KConsole.hpp **** 
  14:src/../h/KConsole.hpp **** class KConsole {
  15:src/../h/KConsole.hpp **** public:
  16:src/../h/KConsole.hpp ****     static void initKConsole();
  17:src/../h/KConsole.hpp **** 
  18:src/../h/KConsole.hpp ****     //stavlja karakter u izlazni bafer konzole
  19:src/../h/KConsole.hpp ****     static void kputc(char c);
  20:src/../h/KConsole.hpp **** 
  21:src/../h/KConsole.hpp ****     //uzima karakter iz ulaznog bafera konzole
  22:src/../h/KConsole.hpp ****     static char kgetc();
  23:src/../h/KConsole.hpp **** 
  24:src/../h/KConsole.hpp ****     //vraca karakter iz izlaznog bafera; ako je bafer prazan, blokira se dok se ne napuni
  25:src/../h/KConsole.hpp ****     static char getFromOutput();
  26:src/../h/KConsole.hpp **** 
  27:src/../h/KConsole.hpp ****     //stavlja karakter u ulazni bafer; ako je bafer pun, ignorise se
  28:src/../h/KConsole.hpp ****     static void placeInInput(char c);
  29:src/../h/KConsole.hpp **** 
  30:src/../h/KConsole.hpp ****     //ispis svih preostalih karaktera u izlaznom baferu
  31:src/../h/KConsole.hpp ****     static void flush() {
  32:src/../h/KConsole.hpp ****         __asm__ volatile("li a0, 0x43");
  33:src/../h/KConsole.hpp ****         __asm__ volatile("ecall");
  34:src/../h/KConsole.hpp ****     }
  35:src/../h/KConsole.hpp **** 
  36:src/../h/KConsole.hpp ****     static uint8 getSRvalue() { return *sr; }
 1280              		.loc 5 36 18 is_stmt 1
 1281              		.cfi_startproc
 1282 0000 130101FF 		addi	sp,sp,-16
 1283              		.cfi_def_cfa_offset 16
 1284 0004 23348100 		sd	s0,8(sp)
GAS LISTING /tmp/cckpw0IK.s 			page 34


 1285              		.cfi_offset 8, -8
 1286 0008 13040101 		addi	s0,sp,16
 1287              		.cfi_def_cfa 8, 0
 1288              		.loc 5 36 33
 1289              		.loc 5 36 40 is_stmt 0
 1290 000c 97070000 		la	a5,_ZN8KConsole2srE
 1290      83B70700 
 1291 0014 83B70700 		ld	a5,0(a5)
 1292              		.loc 5 36 45
 1293 0018 03C50700 		lbu	a0,0(a5)
 1294 001c 03348100 		ld	s0,8(sp)
 1295              		.cfi_restore 8
 1296              		.cfi_def_cfa 2, 16
 1297 0020 13010101 		addi	sp,sp,16
 1298              		.cfi_def_cfa_offset 0
 1299 0024 67800000 		jr	ra
 1300              		.cfi_endproc
 1301              	.LFE35:
 1303              		.section	.text._ZN8KConsole10getDRvalueEv,"axG",@progbits,_ZN8KConsole10getDRvalueEv,comdat
 1304              		.align	2
 1305              		.weak	_ZN8KConsole10getDRvalueEv
 1307              	_ZN8KConsole10getDRvalueEv:
 1308              	.LFB36:
  37:src/../h/KConsole.hpp **** 
  38:src/../h/KConsole.hpp ****     static uint8 getDRvalue() { return *dr; }
 1309              		.loc 5 38 18 is_stmt 1
 1310              		.cfi_startproc
 1311 0000 130101FF 		addi	sp,sp,-16
 1312              		.cfi_def_cfa_offset 16
 1313 0004 23348100 		sd	s0,8(sp)
 1314              		.cfi_offset 8, -8
 1315 0008 13040101 		addi	s0,sp,16
 1316              		.cfi_def_cfa 8, 0
 1317              		.loc 5 38 33
 1318              		.loc 5 38 40 is_stmt 0
 1319 000c 97070000 		la	a5,_ZN8KConsole2drE
 1319      83B70700 
 1320 0014 83B70700 		ld	a5,0(a5)
 1321              		.loc 5 38 45
 1322 0018 03C50700 		lbu	a0,0(a5)
 1323 001c 03348100 		ld	s0,8(sp)
 1324              		.cfi_restore 8
 1325              		.cfi_def_cfa 2, 16
 1326 0020 13010101 		addi	sp,sp,16
 1327              		.cfi_def_cfa_offset 0
 1328 0024 67800000 		jr	ra
 1329              		.cfi_endproc
 1330              	.LFE36:
 1332              		.section	.text._ZN8KConsole10setDRvalueEc,"axG",@progbits,_ZN8KConsole10setDRvalueEc,comdat
 1333              		.align	2
 1334              		.weak	_ZN8KConsole10setDRvalueEc
 1336              	_ZN8KConsole10setDRvalueEc:
 1337              	.LFB37:
  39:src/../h/KConsole.hpp **** 
  40:src/../h/KConsole.hpp ****     static void setDRvalue(char c) { *dr = c; }
 1338              		.loc 5 40 17 is_stmt 1
 1339              		.cfi_startproc
GAS LISTING /tmp/cckpw0IK.s 			page 35


 1340              	.LVL114:
 1341 0000 130101FF 		addi	sp,sp,-16
 1342              		.cfi_def_cfa_offset 16
 1343 0004 23348100 		sd	s0,8(sp)
 1344              		.cfi_offset 8, -8
 1345 0008 13040101 		addi	s0,sp,16
 1346              		.cfi_def_cfa 8, 0
 1347              		.loc 5 40 38
 1348 000c 97070000 		la	a5,_ZN8KConsole2drE
 1348      83B70700 
 1349 0014 83B70700 		ld	a5,0(a5)
 1350              		.loc 5 40 42 is_stmt 0
 1351 0018 2380A700 		sb	a0,0(a5)
 1352              		.loc 5 40 47
 1353 001c 03348100 		ld	s0,8(sp)
 1354              		.cfi_restore 8
 1355              		.cfi_def_cfa 2, 16
 1356 0020 13010101 		addi	sp,sp,16
 1357              		.cfi_def_cfa_offset 0
 1358 0024 67800000 		jr	ra
 1359              		.cfi_endproc
 1360              	.LFE37:
 1362              		.section	.text._ZN8KConsole23getOutputBufferHasSpaceEv,"axG",@progbits,_ZN8KConsole23getOutputBuff
 1363              		.align	2
 1364              		.weak	_ZN8KConsole23getOutputBufferHasSpaceEv
 1366              	_ZN8KConsole23getOutputBufferHasSpaceEv:
 1367              	.LFB38:
  41:src/../h/KConsole.hpp **** 
  42:src/../h/KConsole.hpp ****     static sem_t getOutputBufferHasSpace() { return outputBufferHasSpace; }
 1368              		.loc 5 42 18 is_stmt 1
 1369              		.cfi_startproc
 1370 0000 130101FF 		addi	sp,sp,-16
 1371              		.cfi_def_cfa_offset 16
 1372 0004 23348100 		sd	s0,8(sp)
 1373              		.cfi_offset 8, -8
 1374 0008 13040101 		addi	s0,sp,16
 1375              		.cfi_def_cfa 8, 0
 1376              		.loc 5 42 46
 1377              		.loc 5 42 75 is_stmt 0
 1378 000c 97070000 		la	a5,_ZN8KConsole20outputBufferHasSpaceE
 1378      83B70700 
 1379 0014 03B50700 		ld	a0,0(a5)
 1380 0018 03348100 		ld	s0,8(sp)
 1381              		.cfi_restore 8
 1382              		.cfi_def_cfa 2, 16
 1383 001c 13010101 		addi	sp,sp,16
 1384              		.cfi_def_cfa_offset 0
 1385 0020 67800000 		jr	ra
 1386              		.cfi_endproc
 1387              	.LFE38:
 1389              		.section	.text._ZN8KConsole13getOutputHeadEv,"axG",@progbits,_ZN8KConsole13getOutputHeadEv,comdat
 1390              		.align	2
 1391              		.weak	_ZN8KConsole13getOutputHeadEv
 1393              	_ZN8KConsole13getOutputHeadEv:
 1394              	.LFB39:
  43:src/../h/KConsole.hpp **** 
  44:src/../h/KConsole.hpp ****     static int getOutputHead() { return outputHead; }
GAS LISTING /tmp/cckpw0IK.s 			page 36


 1395              		.loc 5 44 16 is_stmt 1
 1396              		.cfi_startproc
 1397 0000 130101FF 		addi	sp,sp,-16
 1398              		.cfi_def_cfa_offset 16
 1399 0004 23348100 		sd	s0,8(sp)
 1400              		.cfi_offset 8, -8
 1401 0008 13040101 		addi	s0,sp,16
 1402              		.cfi_def_cfa 8, 0
 1403              		.loc 5 44 34
 1404              		.loc 5 44 53 is_stmt 0
 1405 000c 97070000 		la	a5,_ZN8KConsole10outputHeadE
 1405      83B70700 
 1406 0014 03A50700 		lw	a0,0(a5)
 1407 0018 03348100 		ld	s0,8(sp)
 1408              		.cfi_restore 8
 1409              		.cfi_def_cfa 2, 16
 1410 001c 13010101 		addi	sp,sp,16
 1411              		.cfi_def_cfa_offset 0
 1412 0020 67800000 		jr	ra
 1413              		.cfi_endproc
 1414              	.LFE39:
 1416              		.section	.text._ZN8KConsole13getOutputTailEv,"axG",@progbits,_ZN8KConsole13getOutputTailEv,comdat
 1417              		.align	2
 1418              		.weak	_ZN8KConsole13getOutputTailEv
 1420              	_ZN8KConsole13getOutputTailEv:
 1421              	.LFB40:
  45:src/../h/KConsole.hpp **** 
  46:src/../h/KConsole.hpp ****     static int getOutputTail() { return outputTail; }
 1422              		.loc 5 46 16 is_stmt 1
 1423              		.cfi_startproc
 1424 0000 130101FF 		addi	sp,sp,-16
 1425              		.cfi_def_cfa_offset 16
 1426 0004 23348100 		sd	s0,8(sp)
 1427              		.cfi_offset 8, -8
 1428 0008 13040101 		addi	s0,sp,16
 1429              		.cfi_def_cfa 8, 0
 1430              		.loc 5 46 34
 1431              		.loc 5 46 53 is_stmt 0
 1432 000c 97070000 		la	a5,_ZN8KConsole10outputTailE
 1432      83B70700 
 1433 0014 03A50700 		lw	a0,0(a5)
 1434 0018 03348100 		ld	s0,8(sp)
 1435              		.cfi_restore 8
 1436              		.cfi_def_cfa 2, 16
 1437 001c 13010101 		addi	sp,sp,16
 1438              		.cfi_def_cfa_offset 0
 1439 0020 67800000 		jr	ra
 1440              		.cfi_endproc
 1441              	.LFE40:
 1443              		.section	.text._ZN3TCB9setStatusENS_12ThreadStatusE,"axG",@progbits,_ZN3TCB9setStatusENS_12ThreadS
 1444              		.align	2
 1445              		.weak	_ZN3TCB9setStatusENS_12ThreadStatusE
 1447              	_ZN3TCB9setStatusENS_12ThreadStatusE:
 1448              	.LFB44:
 1449              		.file 6 "src/../h/TCB.hpp"
   1:src/../h/TCB.hpp **** //
   2:src/../h/TCB.hpp **** // Created by os on 5/23/23.
GAS LISTING /tmp/cckpw0IK.s 			page 37


   3:src/../h/TCB.hpp **** //
   4:src/../h/TCB.hpp **** 
   5:src/../h/TCB.hpp **** #ifndef PROJEKAT2023_TCB_HPP
   6:src/../h/TCB.hpp **** #define PROJEKAT2023_TCB_HPP
   7:src/../h/TCB.hpp **** 
   8:src/../h/TCB.hpp **** #include "../lib/hw.h"
   9:src/../h/TCB.hpp **** #include "../h/ThreadQueue.hpp"
  10:src/../h/TCB.hpp **** 
  11:src/../h/TCB.hpp **** int main();
  12:src/../h/TCB.hpp **** 
  13:src/../h/TCB.hpp **** class TCB {
  14:src/../h/TCB.hpp **** public:
  15:src/../h/TCB.hpp ****     friend class Scheduler;
  16:src/../h/TCB.hpp **** 
  17:src/../h/TCB.hpp ****     using Body = void (*)(void*);
  18:src/../h/TCB.hpp **** 
  19:src/../h/TCB.hpp ****     enum ThreadStatus {
  20:src/../h/TCB.hpp ****         CREATED, ACTIVE, BLOCKED, JOINING, SLEEPING, FINISHED
  21:src/../h/TCB.hpp ****     };
  22:src/../h/TCB.hpp **** 
  23:src/../h/TCB.hpp ****     static TCB* createThread(Body function, void* args, uint64* stack);
  24:src/../h/TCB.hpp **** 
  25:src/../h/TCB.hpp ****     void setStatus(ThreadStatus stat) { this->status = stat; }
 1450              		.loc 6 25 10 is_stmt 1
 1451              		.cfi_startproc
 1452              	.LVL115:
 1453 0000 130101FF 		addi	sp,sp,-16
 1454              		.cfi_def_cfa_offset 16
 1455 0004 23348100 		sd	s0,8(sp)
 1456              		.cfi_offset 8, -8
 1457 0008 13040101 		addi	s0,sp,16
 1458              		.cfi_def_cfa 8, 0
 1459              		.loc 6 25 41
 1460              		.loc 6 25 54 is_stmt 0
 1461 000c 232CB504 		sw	a1,88(a0)
 1462              		.loc 6 25 62
 1463 0010 03348100 		ld	s0,8(sp)
 1464              		.cfi_restore 8
 1465              		.cfi_def_cfa 2, 16
 1466 0014 13010101 		addi	sp,sp,16
 1467              		.cfi_def_cfa_offset 0
 1468 0018 67800000 		jr	ra
 1469              		.cfi_endproc
 1470              	.LFE44:
 1472              		.section	.text._ZN3TCB12getTimeSliceEv,"axG",@progbits,_ZN3TCB12getTimeSliceEv,comdat
 1473              		.align	2
 1474              		.weak	_ZN3TCB12getTimeSliceEv
 1476              	_ZN3TCB12getTimeSliceEv:
 1477              	.LFB46:
  26:src/../h/TCB.hpp **** 
  27:src/../h/TCB.hpp ****     ThreadStatus getStatus() { return this->status; }
  28:src/../h/TCB.hpp **** 
  29:src/../h/TCB.hpp ****     uint64 getTimeSlice() { return timeSlice; }
 1478              		.loc 6 29 12 is_stmt 1
 1479              		.cfi_startproc
 1480              	.LVL116:
 1481 0000 130101FF 		addi	sp,sp,-16
GAS LISTING /tmp/cckpw0IK.s 			page 38


 1482              		.cfi_def_cfa_offset 16
 1483 0004 23348100 		sd	s0,8(sp)
 1484              		.cfi_offset 8, -8
 1485 0008 13040101 		addi	s0,sp,16
 1486              		.cfi_def_cfa 8, 0
 1487              		.loc 6 29 29
 1488              		.loc 6 29 47 is_stmt 0
 1489 000c 03358502 		ld	a0,40(a0)
 1490              	.LVL117:
 1491 0010 03348100 		ld	s0,8(sp)
 1492              		.cfi_restore 8
 1493              		.cfi_def_cfa 2, 16
 1494 0014 13010101 		addi	sp,sp,16
 1495              		.cfi_def_cfa_offset 0
 1496 0018 67800000 		jr	ra
 1497              		.cfi_endproc
 1498              	.LFE46:
 1500              		.section	.text._ZN3TCB7getBodyEv,"axG",@progbits,_ZN3TCB7getBodyEv,comdat
 1501              		.align	2
 1502              		.weak	_ZN3TCB7getBodyEv
 1504              	_ZN3TCB7getBodyEv:
 1505              	.LFB47:
  30:src/../h/TCB.hpp **** 
  31:src/../h/TCB.hpp ****     Body getBody() { return threadFunction; }
 1506              		.loc 6 31 10 is_stmt 1
 1507              		.cfi_startproc
 1508              	.LVL118:
 1509 0000 130101FF 		addi	sp,sp,-16
 1510              		.cfi_def_cfa_offset 16
 1511 0004 23348100 		sd	s0,8(sp)
 1512              		.cfi_offset 8, -8
 1513 0008 13040101 		addi	s0,sp,16
 1514              		.cfi_def_cfa 8, 0
 1515              		.loc 6 31 22
 1516              		.loc 6 31 45 is_stmt 0
 1517 000c 03350501 		ld	a0,16(a0)
 1518              	.LVL119:
 1519 0010 03348100 		ld	s0,8(sp)
 1520              		.cfi_restore 8
 1521              		.cfi_def_cfa 2, 16
 1522 0014 13010101 		addi	sp,sp,16
 1523              		.cfi_def_cfa_offset 0
 1524 0018 67800000 		jr	ra
 1525              		.cfi_endproc
 1526              	.LFE47:
 1528              		.section	.text._ZN3TCB10getRunningEv,"axG",@progbits,_ZN3TCB10getRunningEv,comdat
 1529              		.align	2
 1530              		.weak	_ZN3TCB10getRunningEv
 1532              	_ZN3TCB10getRunningEv:
 1533              	.LFB49:
  32:src/../h/TCB.hpp **** 
  33:src/../h/TCB.hpp ****     ThreadQueue* getListOfJoiningThreads(){return &waitingToJoin;}
  34:src/../h/TCB.hpp **** 
  35:src/../h/TCB.hpp ****     static TCB* getRunning() { return running; }
 1534              		.loc 6 35 17 is_stmt 1
 1535              		.cfi_startproc
 1536 0000 130101FF 		addi	sp,sp,-16
GAS LISTING /tmp/cckpw0IK.s 			page 39


 1537              		.cfi_def_cfa_offset 16
 1538 0004 23348100 		sd	s0,8(sp)
 1539              		.cfi_offset 8, -8
 1540 0008 13040101 		addi	s0,sp,16
 1541              		.cfi_def_cfa 8, 0
 1542              		.loc 6 35 32
 1543              		.loc 6 35 48 is_stmt 0
 1544 000c 97070000 		la	a5,_ZN3TCB7runningE
 1544      83B70700 
 1545 0014 03B50700 		ld	a0,0(a5)
 1546 0018 03348100 		ld	s0,8(sp)
 1547              		.cfi_restore 8
 1548              		.cfi_def_cfa 2, 16
 1549 001c 13010101 		addi	sp,sp,16
 1550              		.cfi_def_cfa_offset 0
 1551 0020 67800000 		jr	ra
 1552              		.cfi_endproc
 1553              	.LFE49:
 1555              		.section	.text._ZN3TCB19getRunningTimeSliceEv,"axG",@progbits,_ZN3TCB19getRunningTimeSliceEv,comda
 1556              		.align	2
 1557              		.weak	_ZN3TCB19getRunningTimeSliceEv
 1559              	_ZN3TCB19getRunningTimeSliceEv:
 1560              	.LFB51:
  36:src/../h/TCB.hpp **** 
  37:src/../h/TCB.hpp ****     static void setRunning(TCB* newRunning) { running = newRunning; }
  38:src/../h/TCB.hpp **** 
  39:src/../h/TCB.hpp ****     static uint64 &getRunningTimeSlice() { return runningTimeSlice; }
 1561              		.loc 6 39 20 is_stmt 1
 1562              		.cfi_startproc
 1563 0000 130101FF 		addi	sp,sp,-16
 1564              		.cfi_def_cfa_offset 16
 1565 0004 23348100 		sd	s0,8(sp)
 1566              		.cfi_offset 8, -8
 1567 0008 13040101 		addi	s0,sp,16
 1568              		.cfi_def_cfa 8, 0
 1569              		.loc 6 39 44
 1570              		.loc 6 39 69 is_stmt 0
 1571 000c 17050000 		la	a0,_ZN3TCB16runningTimeSliceE
 1571      03350500 
 1572 0014 03348100 		ld	s0,8(sp)
 1573              		.cfi_restore 8
 1574              		.cfi_def_cfa 2, 16
 1575 0018 13010101 		addi	sp,sp,16
 1576              		.cfi_def_cfa_offset 0
 1577 001c 67800000 		jr	ra
 1578              		.cfi_endproc
 1579              	.LFE51:
 1581              		.text
 1582              	.Letext0:
 1583              		.file 7 "src/../lib/hw.h"
 1584              		.file 8 "src/../h/KMemory.hpp"
 1585              		.file 9 "src/../h/../h/../h/syscall_c.hpp"
 1586              		.file 10 "src/../h/Scheduler.hpp"
 1587              		.file 11 "src/../test/printing.hpp"
 6574              		.align	3
 6577              	DW.ref.__gxx_personality_v0:
 6578 0000 00000000 		.dword	__gxx_personality_v0
GAS LISTING /tmp/cckpw0IK.s 			page 40


 6578      00000000 
 6579              		.ident	"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04) 9.4.0"
 6580              		.section	.note.GNU-stack,"",@progbits
GAS LISTING /tmp/cckpw0IK.s 			page 41


DEFINED SYMBOLS
                            *ABS*:0000000000000000 interruptRoutine.cpp
     /tmp/cckpw0IK.s:10     .text._ZN4KSemD2Ev:0000000000000000 _ZN4KSemD2Ev
     /tmp/cckpw0IK.s:14     .text._ZN4KSemD2Ev:0000000000000000 .L0 
     /tmp/cckpw0IK.s:6577   .data.rel.local.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/cckpw0IK.s:18     .text._ZN4KSemD2Ev:0000000000000000 .L0 
     /tmp/cckpw0IK.s:19     .text._ZN4KSemD2Ev:0000000000000004 .L0 
     /tmp/cckpw0IK.s:23     .text._ZN4KSemD2Ev:0000000000000010 .L0 
     /tmp/cckpw0IK.s:24     .text._ZN4KSemD2Ev:0000000000000010 .L0 
     /tmp/cckpw0IK.s:25     .text._ZN4KSemD2Ev:0000000000000010 .L0 
     /tmp/cckpw0IK.s:27     .text._ZN4KSemD2Ev:0000000000000014 .L0 
     /tmp/cckpw0IK.s:35     .text._ZN4KSemD2Ev:0000000000000018 .L0 
     /tmp/cckpw0IK.s:38     .text._ZN4KSemD2Ev:0000000000000018 .L0 
     /tmp/cckpw0IK.s:39     .text._ZN4KSemD2Ev:0000000000000018 .L0 
     /tmp/cckpw0IK.s:40     .text._ZN4KSemD2Ev:0000000000000018 .L0 
     /tmp/cckpw0IK.s:45     .text._ZN4KSemD2Ev:000000000000001c .L0 
     /tmp/cckpw0IK.s:49     .text._ZN4KSemD2Ev:0000000000000020 .L0 
     /tmp/cckpw0IK.s:50     .text._ZN4KSemD2Ev:0000000000000020 .L0 
     /tmp/cckpw0IK.s:51     .text._ZN4KSemD2Ev:0000000000000020 .L0 
     /tmp/cckpw0IK.s:53     .text._ZN4KSemD2Ev:0000000000000024 .L0 
     /tmp/cckpw0IK.s:55     .text._ZN4KSemD2Ev:0000000000000028 .L0 
     /tmp/cckpw0IK.s:56     .text._ZN4KSemD2Ev:0000000000000028 .L0 
     /tmp/cckpw0IK.s:61     .text._ZN4KSemD2Ev:000000000000002c .L0 
     /tmp/cckpw0IK.s:62     .text._ZN4KSemD2Ev:000000000000002c .L0 
     /tmp/cckpw0IK.s:65     .text._ZN4KSemD2Ev:0000000000000034 .L0 
     /tmp/cckpw0IK.s:73     .text._ZN4KSemD2Ev:0000000000000038 .L0 
     /tmp/cckpw0IK.s:74     .text._ZN4KSemD2Ev:000000000000003c .L0 
     /tmp/cckpw0IK.s:76     .text._ZN4KSemD2Ev:0000000000000040 .L0 
     /tmp/cckpw0IK.s:77     .text._ZN4KSemD2Ev:0000000000000040 .L0 
     /tmp/cckpw0IK.s:79     .text._ZN4KSemD2Ev:0000000000000044 .L0 
     /tmp/cckpw0IK.s:82     .text._ZN4KSemD2Ev:0000000000000048 .L0 
     /tmp/cckpw0IK.s:84     .text._ZN4KSemD2Ev:000000000000004c .L0 
     /tmp/cckpw0IK.s:10     .text._ZN4KSemD2Ev:0000000000000000 _ZN4KSemD1Ev
     /tmp/cckpw0IK.s:117    .text:0000000000000000 interruptRoutine
     /tmp/cckpw0IK.s:121    .text:0000000000000000 .L0 
     /tmp/cckpw0IK.s:122    .text:0000000000000000 .L0 
     /tmp/cckpw0IK.s:123    .text:0000000000000004 .L0 
     /tmp/cckpw0IK.s:127    .text:0000000000000010 .L0 
     /tmp/cckpw0IK.s:128    .text:0000000000000010 .L0 
     /tmp/cckpw0IK.s:129    .text:0000000000000010 .L0 
     /tmp/cckpw0IK.s:131    .text:0000000000000014 .L0 
     /tmp/cckpw0IK.s:133    .text:0000000000000014 .L0 
     /tmp/cckpw0IK.s:134    .text:0000000000000014 .L0 
src/interruptRoutine.cpp:21     .text:0000000000000014 .L0 
     /tmp/cckpw0IK.s:143    .text:000000000000001c .L0 
src/interruptRoutine.cpp:22     .text:000000000000001c .L0 
     /tmp/cckpw0IK.s:153    .text:0000000000000024 .L0 
src/interruptRoutine.cpp:23     .text:0000000000000024 .L0 
     /tmp/cckpw0IK.s:163    .text:000000000000002c .L0 
     /tmp/cckpw0IK.s:164    .text:000000000000002c .L0 
src/interruptRoutine.cpp:28     .text:000000000000002c .L0 
     /tmp/cckpw0IK.s:174    .text:0000000000000034 .L0 
src/interruptRoutine.cpp:29     .text:0000000000000034 .L0 
     /tmp/cckpw0IK.s:184    .text:000000000000003c .L0 
src/interruptRoutine.cpp:30     .text:000000000000003c .L0 
     /tmp/cckpw0IK.s:194    .text:0000000000000044 .L0 
src/interruptRoutine.cpp:31     .text:0000000000000044 .L0 
GAS LISTING /tmp/cckpw0IK.s 			page 42


     /tmp/cckpw0IK.s:204    .text:000000000000004c .L0 
src/interruptRoutine.cpp:32     .text:000000000000004c .L0 
     /tmp/cckpw0IK.s:215    .text:0000000000000054 .L0 
     /tmp/cckpw0IK.s:219    .text:0000000000000060 .L0 
     /tmp/cckpw0IK.s:225    .text:000000000000006c .L0 
     /tmp/cckpw0IK.s:376    .text:00000000000000a4 .L0 
     /tmp/cckpw0IK.s:377    .text:00000000000000a4 .L0 
     /tmp/cckpw0IK.s:378    .text:00000000000000a4 .L0 
     /tmp/cckpw0IK.s:382    .text:00000000000000b0 .L0 
src/interruptRoutine.cpp:44     .text:00000000000000b0 .L0 
     /tmp/cckpw0IK.s:389    .text:00000000000000b4 .L0 
     /tmp/cckpw0IK.s:393    .text:00000000000000b8 .L0 
     /tmp/cckpw0IK.s:394    .text:00000000000000b8 .L0 
     /tmp/cckpw0IK.s:395    .text:00000000000000b8 .L0 
     /tmp/cckpw0IK.s:400    .text:00000000000000c8 .L0 
src/interruptRoutine.cpp:50     .text:00000000000000c8 .L0 
     /tmp/cckpw0IK.s:407    .text:00000000000000cc .L0 
     /tmp/cckpw0IK.s:411    .text:00000000000000d0 .L0 
     /tmp/cckpw0IK.s:412    .text:00000000000000d0 .L0 
     /tmp/cckpw0IK.s:413    .text:00000000000000d0 .L0 
     /tmp/cckpw0IK.s:417    .text:00000000000000dc .L0 
     /tmp/cckpw0IK.s:419    .text:00000000000000e0 .L0 
     /tmp/cckpw0IK.s:426    .text:00000000000000f8 .L0 
     /tmp/cckpw0IK.s:428    .text:00000000000000fc .L0 
     /tmp/cckpw0IK.s:429    .text:00000000000000fc .L0 
     /tmp/cckpw0IK.s:432    .text:0000000000000104 .L0 
     /tmp/cckpw0IK.s:434    .text:0000000000000108 .L0 
     /tmp/cckpw0IK.s:435    .text:0000000000000108 .L0 
     /tmp/cckpw0IK.s:437    .text:000000000000010c .L0 
     /tmp/cckpw0IK.s:440    .text:0000000000000118 .L0 
     /tmp/cckpw0IK.s:441    .text:0000000000000118 .L0 
     /tmp/cckpw0IK.s:448    .text:000000000000012c .L0 
src/interruptRoutine.cpp:63     .text:000000000000012c .L0 
     /tmp/cckpw0IK.s:457    .text:0000000000000134 .L0 
src/interruptRoutine.cpp:65     .text:0000000000000134 .L0 
     /tmp/cckpw0IK.s:465    .text:0000000000000138 .L0 
src/interruptRoutine.cpp:67     .text:0000000000000138 .L0 
     /tmp/cckpw0IK.s:472    .text:000000000000013c .L0 
     /tmp/cckpw0IK.s:476    .text:0000000000000140 .L0 
     /tmp/cckpw0IK.s:477    .text:0000000000000140 .L0 
     /tmp/cckpw0IK.s:1532   .text._ZN3TCB10getRunningEv:0000000000000000 _ZN3TCB10getRunningEv
     /tmp/cckpw0IK.s:478    .text:0000000000000140 .L0 
     /tmp/cckpw0IK.s:1447   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000000 _ZN3TCB9setStatusENS_12ThreadStatusE
     /tmp/cckpw0IK.s:486    .text:000000000000015c .L0 
     /tmp/cckpw0IK.s:487    .text:000000000000015c .L0 
     /tmp/cckpw0IK.s:494    .text:0000000000000174 .L0 
src/interruptRoutine.cpp:73     .text:0000000000000174 .L0 
     /tmp/cckpw0IK.s:500    .text:0000000000000178 .L0 
src/interruptRoutine.cpp:74     .text:0000000000000178 .L0 
     /tmp/cckpw0IK.s:505    .text:000000000000017c .L0 
     /tmp/cckpw0IK.s:507    .text:000000000000017c .L0 
     /tmp/cckpw0IK.s:510    .text:0000000000000184 .L0 
     /tmp/cckpw0IK.s:514    .text:0000000000000188 .L0 
     /tmp/cckpw0IK.s:515    .text:0000000000000188 .L0 
     /tmp/cckpw0IK.s:516    .text:0000000000000188 .L0 
     /tmp/cckpw0IK.s:519    .text:0000000000000190 .L0 
     /tmp/cckpw0IK.s:523    .text:0000000000000194 .L0 
GAS LISTING /tmp/cckpw0IK.s 			page 43


     /tmp/cckpw0IK.s:524    .text:0000000000000194 .L0 
     /tmp/cckpw0IK.s:525    .text:0000000000000194 .L0 
     /tmp/cckpw0IK.s:530    .text:00000000000001a4 .L0 
     /tmp/cckpw0IK.s:531    .text:00000000000001a4 .L0 
     /tmp/cckpw0IK.s:534    .text:00000000000001ac .L0 
     /tmp/cckpw0IK.s:538    .text:00000000000001b0 .L0 
     /tmp/cckpw0IK.s:539    .text:00000000000001b0 .L0 
     /tmp/cckpw0IK.s:540    .text:00000000000001b0 .L0 
     /tmp/cckpw0IK.s:544    .text:00000000000001bc .L0 
     /tmp/cckpw0IK.s:549    .text:00000000000001cc .L0 
     /tmp/cckpw0IK.s:551    .text:00000000000001d0 .L0 
     /tmp/cckpw0IK.s:552    .text:00000000000001d0 .L0 
     /tmp/cckpw0IK.s:560    .text:00000000000001ec .L0 
     /tmp/cckpw0IK.s:561    .text:00000000000001ec .L0 
     /tmp/cckpw0IK.s:568    .text:0000000000000204 .L0 
     /tmp/cckpw0IK.s:569    .text:0000000000000204 .L0 
     /tmp/cckpw0IK.s:572    .text:000000000000020c .L0 
     /tmp/cckpw0IK.s:575    .text:0000000000000210 .L0 
     /tmp/cckpw0IK.s:576    .text:0000000000000210 .L0 
     /tmp/cckpw0IK.s:581    .text:0000000000000220 .L0 
     /tmp/cckpw0IK.s:582    .text:0000000000000220 .L0 
     /tmp/cckpw0IK.s:587    .text:0000000000000230 .L0 
     /tmp/cckpw0IK.s:591    .text:0000000000000234 .L0 
     /tmp/cckpw0IK.s:592    .text:0000000000000234 .L0 
     /tmp/cckpw0IK.s:593    .text:0000000000000234 .L0 
     /tmp/cckpw0IK.s:596    .text:000000000000023c .L0 
     /tmp/cckpw0IK.s:598    .text:0000000000000240 .L0 
     /tmp/cckpw0IK.s:603    .text:0000000000000250 .L0 
     /tmp/cckpw0IK.s:605    .text:0000000000000254 .L0 
     /tmp/cckpw0IK.s:606    .text:0000000000000254 .L0 
     /tmp/cckpw0IK.s:609    .text:000000000000025c .L0 
     /tmp/cckpw0IK.s:611    .text:0000000000000260 .L0 
src/interruptRoutine.cpp:105    .text:0000000000000260 .L0 
     /tmp/cckpw0IK.s:620    .text:0000000000000268 .L0 
src/interruptRoutine.cpp:107    .text:0000000000000268 .L0 
     /tmp/cckpw0IK.s:628    .text:000000000000026c .L0 
src/interruptRoutine.cpp:109    .text:000000000000026c .L0 
     /tmp/cckpw0IK.s:635    .text:0000000000000270 .L0 
     /tmp/cckpw0IK.s:639    .text:0000000000000274 .L0 
     /tmp/cckpw0IK.s:640    .text:0000000000000274 .L0 
     /tmp/cckpw0IK.s:641    .text:0000000000000274 .L0 
     /tmp/cckpw0IK.s:646    .text:0000000000000284 .L0 
src/interruptRoutine.cpp:115    .text:0000000000000284 .L0 
     /tmp/cckpw0IK.s:652    .text:0000000000000288 .L0 
     /tmp/cckpw0IK.s:654    .text:0000000000000288 .L0 
     /tmp/cckpw0IK.s:656    .text:000000000000028c .L0 
     /tmp/cckpw0IK.s:658    .text:0000000000000290 .L0 
     /tmp/cckpw0IK.s:665    .text:00000000000002a8 .L0 
     /tmp/cckpw0IK.s:669    .text:00000000000002ac .L0 
     /tmp/cckpw0IK.s:670    .text:00000000000002ac .L0 
     /tmp/cckpw0IK.s:671    .text:00000000000002ac .L0 
     /tmp/cckpw0IK.s:676    .text:00000000000002bc .L0 
src/interruptRoutine.cpp:122    .text:00000000000002bc .L0 
     /tmp/cckpw0IK.s:683    .text:00000000000002c0 .L0 
     /tmp/cckpw0IK.s:687    .text:00000000000002c4 .L0 
     /tmp/cckpw0IK.s:688    .text:00000000000002c4 .L0 
     /tmp/cckpw0IK.s:689    .text:00000000000002c4 .L0 
GAS LISTING /tmp/cckpw0IK.s 			page 44


     /tmp/cckpw0IK.s:694    .text:00000000000002d4 .L0 
src/interruptRoutine.cpp:128    .text:00000000000002d4 .L0 
     /tmp/cckpw0IK.s:701    .text:00000000000002d8 .L0 
     /tmp/cckpw0IK.s:705    .text:00000000000002dc .L0 
     /tmp/cckpw0IK.s:706    .text:00000000000002dc .L0 
     /tmp/cckpw0IK.s:709    .text:00000000000002e4 .L0 
src/interruptRoutine.cpp:134    .text:00000000000002e4 .L0 
     /tmp/cckpw0IK.s:718    .text:00000000000002ec .L0 
src/interruptRoutine.cpp:136    .text:00000000000002ec .L0 
     /tmp/cckpw0IK.s:726    .text:00000000000002f0 .L0 
src/interruptRoutine.cpp:138    .text:00000000000002f0 .L0 
     /tmp/cckpw0IK.s:733    .text:00000000000002f4 .L0 
     /tmp/cckpw0IK.s:736    .text:00000000000002fc .L0 
     /tmp/cckpw0IK.s:737    .text:00000000000002fc .L0 
     /tmp/cckpw0IK.s:745    .text:0000000000000318 .L0 
     /tmp/cckpw0IK.s:746    .text:0000000000000318 .L0 
     /tmp/cckpw0IK.s:749    .text:0000000000000320 .L0 
     /tmp/cckpw0IK.s:753    .text:0000000000000324 .L0 
     /tmp/cckpw0IK.s:754    .text:0000000000000324 .L0 
     /tmp/cckpw0IK.s:755    .text:0000000000000324 .L0 
     /tmp/cckpw0IK.s:758    .text:000000000000032c .L0 
src/interruptRoutine.cpp:147    .text:000000000000032c .L0 
     /tmp/cckpw0IK.s:765    .text:0000000000000330 .L0 
     /tmp/cckpw0IK.s:769    .text:0000000000000334 .L0 
     /tmp/cckpw0IK.s:770    .text:0000000000000334 .L0 
     /tmp/cckpw0IK.s:771    .text:0000000000000334 .L0 
     /tmp/cckpw0IK.s:777    .text:0000000000000348 .L0 
     /tmp/cckpw0IK.s:780    .text:000000000000034c .L0 
     /tmp/cckpw0IK.s:781    .text:000000000000034c .L0 
     /tmp/cckpw0IK.s:782    .text:000000000000034c .L0 
     /tmp/cckpw0IK.s:1393   .text._ZN8KConsole13getOutputHeadEv:0000000000000000 _ZN8KConsole13getOutputHeadEv
     /tmp/cckpw0IK.s:783    .text:000000000000034c .L0 
     /tmp/cckpw0IK.s:1420   .text._ZN8KConsole13getOutputTailEv:0000000000000000 _ZN8KConsole13getOutputTailEv
     /tmp/cckpw0IK.s:788    .text:000000000000035c .L0 
     /tmp/cckpw0IK.s:792    .text:0000000000000368 .L0 
     /tmp/cckpw0IK.s:799    .text:000000000000037c .L0 
     /tmp/cckpw0IK.s:800    .text:000000000000037c .L0 
     /tmp/cckpw0IK.s:807    .text:000000000000038c .L0 
     /tmp/cckpw0IK.s:808    .text:000000000000038c .L0 
     /tmp/cckpw0IK.s:1277   .text._ZN8KConsole10getSRvalueEv:0000000000000000 _ZN8KConsole10getSRvalueEv
     /tmp/cckpw0IK.s:809    .text:000000000000038c .L0 
     /tmp/cckpw0IK.s:813    .text:0000000000000398 .L0 
     /tmp/cckpw0IK.s:815    .text:000000000000039c .L0 
     /tmp/cckpw0IK.s:819    .text:00000000000003a8 .L0 
     /tmp/cckpw0IK.s:822    .text:00000000000003ac .L0 
     /tmp/cckpw0IK.s:823    .text:00000000000003ac .L0 
     /tmp/cckpw0IK.s:1336   .text._ZN8KConsole10setDRvalueEc:0000000000000000 _ZN8KConsole10setDRvalueEc
     /tmp/cckpw0IK.s:828    .text:00000000000003bc .L0 
     /tmp/cckpw0IK.s:1366   .text._ZN8KConsole23getOutputBufferHasSpaceEv:0000000000000000 _ZN8KConsole23getOutputBufferHasSpaceEv
     /tmp/cckpw0IK.s:829    .text:00000000000003bc .L0 
     /tmp/cckpw0IK.s:837    .text:00000000000003d4 .L0 
     /tmp/cckpw0IK.s:841    .text:00000000000003d8 .L0 
     /tmp/cckpw0IK.s:842    .text:00000000000003d8 .L0 
     /tmp/cckpw0IK.s:843    .text:00000000000003d8 .L0 
     /tmp/cckpw0IK.s:847    .text:00000000000003e4 .L0 
     /tmp/cckpw0IK.s:849    .text:00000000000003e8 .L0 
     /tmp/cckpw0IK.s:856    .text:0000000000000400 .L0 
GAS LISTING /tmp/cckpw0IK.s 			page 45


     /tmp/cckpw0IK.s:858    .text:0000000000000404 .L0 
     /tmp/cckpw0IK.s:859    .text:0000000000000404 .L0 
     /tmp/cckpw0IK.s:862    .text:000000000000040c .L0 
     /tmp/cckpw0IK.s:864    .text:0000000000000410 .L0 
src/interruptRoutine.cpp:171    .text:0000000000000410 .L0 
     /tmp/cckpw0IK.s:873    .text:0000000000000418 .L0 
src/interruptRoutine.cpp:173    .text:0000000000000418 .L0 
     /tmp/cckpw0IK.s:881    .text:000000000000041c .L0 
src/interruptRoutine.cpp:175    .text:000000000000041c .L0 
     /tmp/cckpw0IK.s:888    .text:0000000000000420 .L0 
     /tmp/cckpw0IK.s:892    .text:0000000000000424 .L0 
     /tmp/cckpw0IK.s:893    .text:0000000000000424 .L0 
     /tmp/cckpw0IK.s:894    .text:0000000000000424 .L0 
     /tmp/cckpw0IK.s:1504   .text._ZN3TCB7getBodyEv:0000000000000000 _ZN3TCB7getBodyEv
     /tmp/cckpw0IK.s:900    .text:0000000000000438 .L0 
     /tmp/cckpw0IK.s:905    .text:000000000000044c .L0 
     /tmp/cckpw0IK.s:907    .text:0000000000000450 .L0 
     /tmp/cckpw0IK.s:908    .text:0000000000000450 .L0 
     /tmp/cckpw0IK.s:913    .text:0000000000000460 .L0 
     /tmp/cckpw0IK.s:917    .text:0000000000000464 .L0 
     /tmp/cckpw0IK.s:918    .text:0000000000000464 .L0 
     /tmp/cckpw0IK.s:919    .text:0000000000000464 .L0 
     /tmp/cckpw0IK.s:923    .text:0000000000000474 .L0 
     /tmp/cckpw0IK.s:924    .text:0000000000000474 .L0 
     /tmp/cckpw0IK.s:932    .text:0000000000000490 .L0 
     /tmp/cckpw0IK.s:933    .text:0000000000000490 .L0 
     /tmp/cckpw0IK.s:937    .text:00000000000004a0 .L0 
     /tmp/cckpw0IK.s:938    .text:00000000000004a0 .L0 
     /tmp/cckpw0IK.s:946    .text:00000000000004bc .L0 
     /tmp/cckpw0IK.s:947    .text:00000000000004bc .L0 
     /tmp/cckpw0IK.s:951    .text:00000000000004cc .L0 
     /tmp/cckpw0IK.s:952    .text:00000000000004cc .L0 
     /tmp/cckpw0IK.s:960    .text:00000000000004e8 .L0 
     /tmp/cckpw0IK.s:963    .text:00000000000004ec .L0 
     /tmp/cckpw0IK.s:967    .text:00000000000004f4 .L0 
     /tmp/cckpw0IK.s:971    .text:00000000000004fc .L0 
     /tmp/cckpw0IK.s:975    .text:0000000000000504 .L0 
     /tmp/cckpw0IK.s:980    .text:0000000000000508 .L0 
     /tmp/cckpw0IK.s:981    .text:0000000000000508 .L0 
     /tmp/cckpw0IK.s:986    .text:0000000000000514 .L0 
     /tmp/cckpw0IK.s:987    .text:0000000000000514 .L0 
     /tmp/cckpw0IK.s:993    .text:000000000000051c .L0 
     /tmp/cckpw0IK.s:995    .text:000000000000051c .L0 
     /tmp/cckpw0IK.s:1006   .text:0000000000000528 .L0 
     /tmp/cckpw0IK.s:1013   .text:000000000000052c .L0 
     /tmp/cckpw0IK.s:1021   .text:0000000000000540 .L0 
     /tmp/cckpw0IK.s:1022   .text:0000000000000540 .L0 
     /tmp/cckpw0IK.s:1026   .text:000000000000054c .L0 
     /tmp/cckpw0IK.s:1029   .text:0000000000000550 .L0 
     /tmp/cckpw0IK.s:1033   .text:000000000000055c .L0 
     /tmp/cckpw0IK.s:1034   .text:000000000000055c .L0 
     /tmp/cckpw0IK.s:1038   .text:0000000000000568 .L0 
     /tmp/cckpw0IK.s:1040   .text:000000000000056c .L0 
     /tmp/cckpw0IK.s:1043   .text:0000000000000574 .L0 
     /tmp/cckpw0IK.s:1045   .text:0000000000000578 .L0 
     /tmp/cckpw0IK.s:1307   .text._ZN8KConsole10getDRvalueEv:0000000000000000 _ZN8KConsole10getDRvalueEv
     /tmp/cckpw0IK.s:1046   .text:0000000000000578 .L0 
GAS LISTING /tmp/cckpw0IK.s 			page 46


     /tmp/cckpw0IK.s:1050   .text:0000000000000584 .L0 
     /tmp/cckpw0IK.s:1055   .text:0000000000000590 .L0 
     /tmp/cckpw0IK.s:1056   .text:0000000000000590 .L0 
     /tmp/cckpw0IK.s:1062   .text:00000000000005a4 .L0 
     /tmp/cckpw0IK.s:1063   .text:00000000000005a4 .L0 
     /tmp/cckpw0IK.s:1069   .text:00000000000005ac .L0 
     /tmp/cckpw0IK.s:1071   .text:00000000000005ac .L0 
     /tmp/cckpw0IK.s:1077   .text:00000000000005b4 .L0 
     /tmp/cckpw0IK.s:1079   .text:00000000000005b4 .L0 
     /tmp/cckpw0IK.s:1244   .text._ZN5Riscv6mc_sipEm:0000000000000000 _ZN5Riscv6mc_sipEm
     /tmp/cckpw0IK.s:1087   .text:00000000000005c0 .L0 
     /tmp/cckpw0IK.s:1094   .text:00000000000005c4 .L0 
     /tmp/cckpw0IK.s:1100   .text:00000000000005d8 .L0 
     /tmp/cckpw0IK.s:1101   .text:00000000000005d8 .L0 
     /tmp/cckpw0IK.s:1104   .text:00000000000005e0 .L0 
     /tmp/cckpw0IK.s:1559   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000000 _ZN3TCB19getRunningTimeSliceEv
     /tmp/cckpw0IK.s:1105   .text:00000000000005e0 .L0 
     /tmp/cckpw0IK.s:1109   .text:00000000000005ec .L0 
     /tmp/cckpw0IK.s:1111   .text:00000000000005f0 .L0 
     /tmp/cckpw0IK.s:1114   .text:00000000000005f8 .L0 
     /tmp/cckpw0IK.s:1115   .text:00000000000005f8 .L0 
     /tmp/cckpw0IK.s:1119   .text:0000000000000604 .L0 
     /tmp/cckpw0IK.s:1121   .text:0000000000000608 .L0 
     /tmp/cckpw0IK.s:1476   .text._ZN3TCB12getTimeSliceEv:0000000000000000 _ZN3TCB12getTimeSliceEv
     /tmp/cckpw0IK.s:1129   .text:0000000000000624 .L0 
     /tmp/cckpw0IK.s:1133   .text:0000000000000630 .L0 
     /tmp/cckpw0IK.s:1135   .text:0000000000000634 .L0 
     /tmp/cckpw0IK.s:1136   .text:0000000000000634 .L0 
     /tmp/cckpw0IK.s:1140   .text:000000000000063c .L0 
     /tmp/cckpw0IK.s:1141   .text:000000000000063c .L0 
     /tmp/cckpw0IK.s:1147   .text:0000000000000644 .L0 
     /tmp/cckpw0IK.s:1149   .text:0000000000000644 .L0 
     /tmp/cckpw0IK.s:1155   .text:000000000000064c .L0 
     /tmp/cckpw0IK.s:1157   .text:000000000000064c .L0 
     /tmp/cckpw0IK.s:1164   .text:0000000000000658 .L0 
     /tmp/cckpw0IK.s:1171   .text:000000000000065c .L0 
     /tmp/cckpw0IK.s:1172   .text:000000000000065c .L0 
     /tmp/cckpw0IK.s:1176   .text:000000000000066c .L0 
     /tmp/cckpw0IK.s:1177   .text:000000000000066c .L0 
     /tmp/cckpw0IK.s:1181   .text:000000000000067c .L0 
     /tmp/cckpw0IK.s:1182   .text:000000000000067c .L0 
     /tmp/cckpw0IK.s:1190   .text:0000000000000698 .L0 
     /tmp/cckpw0IK.s:1191   .text:0000000000000698 .L0 
     /tmp/cckpw0IK.s:1195   .text:00000000000006a8 .L0 
     /tmp/cckpw0IK.s:1196   .text:00000000000006a8 .L0 
     /tmp/cckpw0IK.s:1204   .text:00000000000006c4 .L0 
     /tmp/cckpw0IK.s:1205   .text:00000000000006c4 .L0 
     /tmp/cckpw0IK.s:1211   .text:00000000000006cc .L0 
     /tmp/cckpw0IK.s:1213   .text:00000000000006cc .L0 
     /tmp/cckpw0IK.s:1224   .text:00000000000006d4 .L0 
     /tmp/cckpw0IK.s:1226   .text:00000000000006dc .L0 
     /tmp/cckpw0IK.s:1228   .text:00000000000006e0 .L0 
     /tmp/cckpw0IK.s:1229   .text:00000000000006e0 .L0 
     /tmp/cckpw0IK.s:1232   .text:00000000000006e4 .L0 
     /tmp/cckpw0IK.s:1234   .text:00000000000006e8 .L0 
     /tmp/cckpw0IK.s:1237   .text:00000000000006ec .L0 
     /tmp/cckpw0IK.s:1248   .text._ZN5Riscv6mc_sipEm:0000000000000000 .L0 
GAS LISTING /tmp/cckpw0IK.s 			page 47


     /tmp/cckpw0IK.s:1250   .text._ZN5Riscv6mc_sipEm:0000000000000000 .L0 
     /tmp/cckpw0IK.s:1251   .text._ZN5Riscv6mc_sipEm:0000000000000004 .L0 
     /tmp/cckpw0IK.s:1253   .text._ZN5Riscv6mc_sipEm:0000000000000008 .L0 
     /tmp/cckpw0IK.s:1255   .text._ZN5Riscv6mc_sipEm:000000000000000c .L0 
     /tmp/cckpw0IK.s:1257   .text._ZN5Riscv6mc_sipEm:000000000000000c .L0 
  src/../h/Riscv.hpp:114    .text._ZN5Riscv6mc_sipEm:000000000000000c .L0 
     /tmp/cckpw0IK.s:1264   .text._ZN5Riscv6mc_sipEm:0000000000000010 .L0 
     /tmp/cckpw0IK.s:1265   .text._ZN5Riscv6mc_sipEm:0000000000000014 .L0 
     /tmp/cckpw0IK.s:1266   .text._ZN5Riscv6mc_sipEm:0000000000000014 .L0 
     /tmp/cckpw0IK.s:1268   .text._ZN5Riscv6mc_sipEm:0000000000000018 .L0 
     /tmp/cckpw0IK.s:1270   .text._ZN5Riscv6mc_sipEm:000000000000001c .L0 
     /tmp/cckpw0IK.s:1281   .text._ZN8KConsole10getSRvalueEv:0000000000000000 .L0 
     /tmp/cckpw0IK.s:1282   .text._ZN8KConsole10getSRvalueEv:0000000000000000 .L0 
     /tmp/cckpw0IK.s:1283   .text._ZN8KConsole10getSRvalueEv:0000000000000004 .L0 
     /tmp/cckpw0IK.s:1285   .text._ZN8KConsole10getSRvalueEv:0000000000000008 .L0 
     /tmp/cckpw0IK.s:1287   .text._ZN8KConsole10getSRvalueEv:000000000000000c .L0 
     /tmp/cckpw0IK.s:1289   .text._ZN8KConsole10getSRvalueEv:000000000000000c .L0 
     /tmp/cckpw0IK.s:1290   .text._ZN8KConsole10getSRvalueEv:000000000000000c .L0 
     /tmp/cckpw0IK.s:1293   .text._ZN8KConsole10getSRvalueEv:0000000000000018 .L0 
     /tmp/cckpw0IK.s:1295   .text._ZN8KConsole10getSRvalueEv:0000000000000020 .L0 
     /tmp/cckpw0IK.s:1296   .text._ZN8KConsole10getSRvalueEv:0000000000000020 .L0 
     /tmp/cckpw0IK.s:1298   .text._ZN8KConsole10getSRvalueEv:0000000000000024 .L0 
     /tmp/cckpw0IK.s:1300   .text._ZN8KConsole10getSRvalueEv:0000000000000028 .L0 
     /tmp/cckpw0IK.s:1310   .text._ZN8KConsole10getDRvalueEv:0000000000000000 .L0 
     /tmp/cckpw0IK.s:1311   .text._ZN8KConsole10getDRvalueEv:0000000000000000 .L0 
     /tmp/cckpw0IK.s:1312   .text._ZN8KConsole10getDRvalueEv:0000000000000004 .L0 
     /tmp/cckpw0IK.s:1314   .text._ZN8KConsole10getDRvalueEv:0000000000000008 .L0 
     /tmp/cckpw0IK.s:1316   .text._ZN8KConsole10getDRvalueEv:000000000000000c .L0 
     /tmp/cckpw0IK.s:1318   .text._ZN8KConsole10getDRvalueEv:000000000000000c .L0 
     /tmp/cckpw0IK.s:1319   .text._ZN8KConsole10getDRvalueEv:000000000000000c .L0 
     /tmp/cckpw0IK.s:1322   .text._ZN8KConsole10getDRvalueEv:0000000000000018 .L0 
     /tmp/cckpw0IK.s:1324   .text._ZN8KConsole10getDRvalueEv:0000000000000020 .L0 
     /tmp/cckpw0IK.s:1325   .text._ZN8KConsole10getDRvalueEv:0000000000000020 .L0 
     /tmp/cckpw0IK.s:1327   .text._ZN8KConsole10getDRvalueEv:0000000000000024 .L0 
     /tmp/cckpw0IK.s:1329   .text._ZN8KConsole10getDRvalueEv:0000000000000028 .L0 
     /tmp/cckpw0IK.s:1339   .text._ZN8KConsole10setDRvalueEc:0000000000000000 .L0 
     /tmp/cckpw0IK.s:1341   .text._ZN8KConsole10setDRvalueEc:0000000000000000 .L0 
     /tmp/cckpw0IK.s:1342   .text._ZN8KConsole10setDRvalueEc:0000000000000004 .L0 
     /tmp/cckpw0IK.s:1344   .text._ZN8KConsole10setDRvalueEc:0000000000000008 .L0 
     /tmp/cckpw0IK.s:1346   .text._ZN8KConsole10setDRvalueEc:000000000000000c .L0 
     /tmp/cckpw0IK.s:1348   .text._ZN8KConsole10setDRvalueEc:000000000000000c .L0 
     /tmp/cckpw0IK.s:1351   .text._ZN8KConsole10setDRvalueEc:0000000000000018 .L0 
     /tmp/cckpw0IK.s:1353   .text._ZN8KConsole10setDRvalueEc:000000000000001c .L0 
     /tmp/cckpw0IK.s:1354   .text._ZN8KConsole10setDRvalueEc:0000000000000020 .L0 
     /tmp/cckpw0IK.s:1355   .text._ZN8KConsole10setDRvalueEc:0000000000000020 .L0 
     /tmp/cckpw0IK.s:1357   .text._ZN8KConsole10setDRvalueEc:0000000000000024 .L0 
     /tmp/cckpw0IK.s:1359   .text._ZN8KConsole10setDRvalueEc:0000000000000028 .L0 
     /tmp/cckpw0IK.s:1369   .text._ZN8KConsole23getOutputBufferHasSpaceEv:0000000000000000 .L0 
     /tmp/cckpw0IK.s:1370   .text._ZN8KConsole23getOutputBufferHasSpaceEv:0000000000000000 .L0 
     /tmp/cckpw0IK.s:1371   .text._ZN8KConsole23getOutputBufferHasSpaceEv:0000000000000004 .L0 
     /tmp/cckpw0IK.s:1373   .text._ZN8KConsole23getOutputBufferHasSpaceEv:0000000000000008 .L0 
     /tmp/cckpw0IK.s:1375   .text._ZN8KConsole23getOutputBufferHasSpaceEv:000000000000000c .L0 
     /tmp/cckpw0IK.s:1377   .text._ZN8KConsole23getOutputBufferHasSpaceEv:000000000000000c .L0 
     /tmp/cckpw0IK.s:1378   .text._ZN8KConsole23getOutputBufferHasSpaceEv:000000000000000c .L0 
     /tmp/cckpw0IK.s:1381   .text._ZN8KConsole23getOutputBufferHasSpaceEv:000000000000001c .L0 
     /tmp/cckpw0IK.s:1382   .text._ZN8KConsole23getOutputBufferHasSpaceEv:000000000000001c .L0 
     /tmp/cckpw0IK.s:1384   .text._ZN8KConsole23getOutputBufferHasSpaceEv:0000000000000020 .L0 
GAS LISTING /tmp/cckpw0IK.s 			page 48


     /tmp/cckpw0IK.s:1386   .text._ZN8KConsole23getOutputBufferHasSpaceEv:0000000000000024 .L0 
     /tmp/cckpw0IK.s:1396   .text._ZN8KConsole13getOutputHeadEv:0000000000000000 .L0 
     /tmp/cckpw0IK.s:1397   .text._ZN8KConsole13getOutputHeadEv:0000000000000000 .L0 
     /tmp/cckpw0IK.s:1398   .text._ZN8KConsole13getOutputHeadEv:0000000000000004 .L0 
     /tmp/cckpw0IK.s:1400   .text._ZN8KConsole13getOutputHeadEv:0000000000000008 .L0 
     /tmp/cckpw0IK.s:1402   .text._ZN8KConsole13getOutputHeadEv:000000000000000c .L0 
     /tmp/cckpw0IK.s:1404   .text._ZN8KConsole13getOutputHeadEv:000000000000000c .L0 
     /tmp/cckpw0IK.s:1405   .text._ZN8KConsole13getOutputHeadEv:000000000000000c .L0 
     /tmp/cckpw0IK.s:1408   .text._ZN8KConsole13getOutputHeadEv:000000000000001c .L0 
     /tmp/cckpw0IK.s:1409   .text._ZN8KConsole13getOutputHeadEv:000000000000001c .L0 
     /tmp/cckpw0IK.s:1411   .text._ZN8KConsole13getOutputHeadEv:0000000000000020 .L0 
     /tmp/cckpw0IK.s:1413   .text._ZN8KConsole13getOutputHeadEv:0000000000000024 .L0 
     /tmp/cckpw0IK.s:1423   .text._ZN8KConsole13getOutputTailEv:0000000000000000 .L0 
     /tmp/cckpw0IK.s:1424   .text._ZN8KConsole13getOutputTailEv:0000000000000000 .L0 
     /tmp/cckpw0IK.s:1425   .text._ZN8KConsole13getOutputTailEv:0000000000000004 .L0 
     /tmp/cckpw0IK.s:1427   .text._ZN8KConsole13getOutputTailEv:0000000000000008 .L0 
     /tmp/cckpw0IK.s:1429   .text._ZN8KConsole13getOutputTailEv:000000000000000c .L0 
     /tmp/cckpw0IK.s:1431   .text._ZN8KConsole13getOutputTailEv:000000000000000c .L0 
     /tmp/cckpw0IK.s:1432   .text._ZN8KConsole13getOutputTailEv:000000000000000c .L0 
     /tmp/cckpw0IK.s:1435   .text._ZN8KConsole13getOutputTailEv:000000000000001c .L0 
     /tmp/cckpw0IK.s:1436   .text._ZN8KConsole13getOutputTailEv:000000000000001c .L0 
     /tmp/cckpw0IK.s:1438   .text._ZN8KConsole13getOutputTailEv:0000000000000020 .L0 
     /tmp/cckpw0IK.s:1440   .text._ZN8KConsole13getOutputTailEv:0000000000000024 .L0 
     /tmp/cckpw0IK.s:1451   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000000 .L0 
     /tmp/cckpw0IK.s:1453   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000000 .L0 
     /tmp/cckpw0IK.s:1454   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000004 .L0 
     /tmp/cckpw0IK.s:1456   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000008 .L0 
     /tmp/cckpw0IK.s:1458   .text._ZN3TCB9setStatusENS_12ThreadStatusE:000000000000000c .L0 
     /tmp/cckpw0IK.s:1460   .text._ZN3TCB9setStatusENS_12ThreadStatusE:000000000000000c .L0 
     /tmp/cckpw0IK.s:1461   .text._ZN3TCB9setStatusENS_12ThreadStatusE:000000000000000c .L0 
     /tmp/cckpw0IK.s:1463   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000010 .L0 
     /tmp/cckpw0IK.s:1464   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000014 .L0 
     /tmp/cckpw0IK.s:1465   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000014 .L0 
     /tmp/cckpw0IK.s:1467   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000018 .L0 
     /tmp/cckpw0IK.s:1469   .text._ZN3TCB9setStatusENS_12ThreadStatusE:000000000000001c .L0 
     /tmp/cckpw0IK.s:1479   .text._ZN3TCB12getTimeSliceEv:0000000000000000 .L0 
     /tmp/cckpw0IK.s:1481   .text._ZN3TCB12getTimeSliceEv:0000000000000000 .L0 
     /tmp/cckpw0IK.s:1482   .text._ZN3TCB12getTimeSliceEv:0000000000000004 .L0 
     /tmp/cckpw0IK.s:1484   .text._ZN3TCB12getTimeSliceEv:0000000000000008 .L0 
     /tmp/cckpw0IK.s:1486   .text._ZN3TCB12getTimeSliceEv:000000000000000c .L0 
     /tmp/cckpw0IK.s:1488   .text._ZN3TCB12getTimeSliceEv:000000000000000c .L0 
     /tmp/cckpw0IK.s:1489   .text._ZN3TCB12getTimeSliceEv:000000000000000c .L0 
     /tmp/cckpw0IK.s:1492   .text._ZN3TCB12getTimeSliceEv:0000000000000014 .L0 
     /tmp/cckpw0IK.s:1493   .text._ZN3TCB12getTimeSliceEv:0000000000000014 .L0 
     /tmp/cckpw0IK.s:1495   .text._ZN3TCB12getTimeSliceEv:0000000000000018 .L0 
     /tmp/cckpw0IK.s:1497   .text._ZN3TCB12getTimeSliceEv:000000000000001c .L0 
     /tmp/cckpw0IK.s:1507   .text._ZN3TCB7getBodyEv:0000000000000000 .L0 
     /tmp/cckpw0IK.s:1509   .text._ZN3TCB7getBodyEv:0000000000000000 .L0 
     /tmp/cckpw0IK.s:1510   .text._ZN3TCB7getBodyEv:0000000000000004 .L0 
     /tmp/cckpw0IK.s:1512   .text._ZN3TCB7getBodyEv:0000000000000008 .L0 
     /tmp/cckpw0IK.s:1514   .text._ZN3TCB7getBodyEv:000000000000000c .L0 
     /tmp/cckpw0IK.s:1516   .text._ZN3TCB7getBodyEv:000000000000000c .L0 
     /tmp/cckpw0IK.s:1517   .text._ZN3TCB7getBodyEv:000000000000000c .L0 
     /tmp/cckpw0IK.s:1520   .text._ZN3TCB7getBodyEv:0000000000000014 .L0 
     /tmp/cckpw0IK.s:1521   .text._ZN3TCB7getBodyEv:0000000000000014 .L0 
     /tmp/cckpw0IK.s:1523   .text._ZN3TCB7getBodyEv:0000000000000018 .L0 
     /tmp/cckpw0IK.s:1525   .text._ZN3TCB7getBodyEv:000000000000001c .L0 
GAS LISTING /tmp/cckpw0IK.s 			page 49


     /tmp/cckpw0IK.s:1535   .text._ZN3TCB10getRunningEv:0000000000000000 .L0 
     /tmp/cckpw0IK.s:1536   .text._ZN3TCB10getRunningEv:0000000000000000 .L0 
     /tmp/cckpw0IK.s:1537   .text._ZN3TCB10getRunningEv:0000000000000004 .L0 
     /tmp/cckpw0IK.s:1539   .text._ZN3TCB10getRunningEv:0000000000000008 .L0 
     /tmp/cckpw0IK.s:1541   .text._ZN3TCB10getRunningEv:000000000000000c .L0 
     /tmp/cckpw0IK.s:1543   .text._ZN3TCB10getRunningEv:000000000000000c .L0 
     /tmp/cckpw0IK.s:1544   .text._ZN3TCB10getRunningEv:000000000000000c .L0 
     /tmp/cckpw0IK.s:1547   .text._ZN3TCB10getRunningEv:000000000000001c .L0 
     /tmp/cckpw0IK.s:1548   .text._ZN3TCB10getRunningEv:000000000000001c .L0 
     /tmp/cckpw0IK.s:1550   .text._ZN3TCB10getRunningEv:0000000000000020 .L0 
     /tmp/cckpw0IK.s:1552   .text._ZN3TCB10getRunningEv:0000000000000024 .L0 
     /tmp/cckpw0IK.s:1562   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000000 .L0 
     /tmp/cckpw0IK.s:1563   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000000 .L0 
     /tmp/cckpw0IK.s:1564   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000004 .L0 
     /tmp/cckpw0IK.s:1566   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000008 .L0 
     /tmp/cckpw0IK.s:1568   .text._ZN3TCB19getRunningTimeSliceEv:000000000000000c .L0 
     /tmp/cckpw0IK.s:1570   .text._ZN3TCB19getRunningTimeSliceEv:000000000000000c .L0 
     /tmp/cckpw0IK.s:1571   .text._ZN3TCB19getRunningTimeSliceEv:000000000000000c .L0 
     /tmp/cckpw0IK.s:1573   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000018 .L0 
     /tmp/cckpw0IK.s:1574   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000018 .L0 
     /tmp/cckpw0IK.s:1576   .text._ZN3TCB19getRunningTimeSliceEv:000000000000001c .L0 
     /tmp/cckpw0IK.s:1578   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000020 .L0 
     /tmp/cckpw0IK.s:97     .text._ZN4KSemD2Ev:000000000000004c .L0 
     /tmp/cckpw0IK.s:1588   .text:00000000000006ec .L0 
     /tmp/cckpw0IK.s:1273   .text._ZN5Riscv6mc_sipEm:000000000000001c .L0 
     /tmp/cckpw0IK.s:1303   .text._ZN8KConsole10getSRvalueEv:0000000000000028 .L0 
     /tmp/cckpw0IK.s:1332   .text._ZN8KConsole10getDRvalueEv:0000000000000028 .L0 
     /tmp/cckpw0IK.s:1362   .text._ZN8KConsole10setDRvalueEc:0000000000000028 .L0 
     /tmp/cckpw0IK.s:1389   .text._ZN8KConsole23getOutputBufferHasSpaceEv:0000000000000024 .L0 
     /tmp/cckpw0IK.s:1416   .text._ZN8KConsole13getOutputHeadEv:0000000000000024 .L0 
     /tmp/cckpw0IK.s:1443   .text._ZN8KConsole13getOutputTailEv:0000000000000024 .L0 
     /tmp/cckpw0IK.s:1472   .text._ZN3TCB9setStatusENS_12ThreadStatusE:000000000000001c .L0 
     /tmp/cckpw0IK.s:1500   .text._ZN3TCB12getTimeSliceEv:000000000000001c .L0 
     /tmp/cckpw0IK.s:1528   .text._ZN3TCB7getBodyEv:000000000000001c .L0 
     /tmp/cckpw0IK.s:1555   .text._ZN3TCB10getRunningEv:0000000000000024 .L0 
     /tmp/cckpw0IK.s:1581   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000020 .L0 
     /tmp/cckpw0IK.s:240    .rodata:000000000000005c .L11
     /tmp/cckpw0IK.s:230    .text:0000000000000080 .L0 
     /tmp/cckpw0IK.s:234    .text:0000000000000094 .L0 
     /tmp/cckpw0IK.s:437    .text:000000000000010c .L0 
     /tmp/cckpw0IK.s:900    .text:0000000000000438 .L0 
     /tmp/cckpw0IK.s:99     .rodata:0000000000000000 .LC0
     /tmp/cckpw0IK.s:919    .text:0000000000000464 .L0 
     /tmp/cckpw0IK.s:102    .rodata:0000000000000018 .LC1
     /tmp/cckpw0IK.s:933    .text:0000000000000490 .L0 
     /tmp/cckpw0IK.s:105    .rodata:0000000000000028 .LC2
     /tmp/cckpw0IK.s:947    .text:00000000000004bc .L0 
     /tmp/cckpw0IK.s:108    .rodata:0000000000000030 .LC3
     /tmp/cckpw0IK.s:1172   .text:000000000000065c .L0 
     /tmp/cckpw0IK.s:111    .rodata:0000000000000050 .LC4
     /tmp/cckpw0IK.s:1177   .text:000000000000066c .L0 
     /tmp/cckpw0IK.s:1191   .text:0000000000000698 .L0 
     /tmp/cckpw0IK.s:222    .text:000000000000006c .L7
     /tmp/cckpw0IK.s:1008   .text:000000000000052c .L8
     /tmp/cckpw0IK.s:915    .text:0000000000000464 .L9
     /tmp/cckpw0IK.s:976    .text:0000000000000508 .L28
     /tmp/cckpw0IK.s:455    .text:0000000000000134 .L29
GAS LISTING /tmp/cckpw0IK.s 			page 50


     /tmp/cckpw0IK.s:446    .text:000000000000012c .L30
     /tmp/cckpw0IK.s:463    .text:0000000000000138 .L31
     /tmp/cckpw0IK.s:573    .text:0000000000000210 .L32
     /tmp/cckpw0IK.s:618    .text:0000000000000268 .L34
     /tmp/cckpw0IK.s:626    .text:000000000000026c .L35
     /tmp/cckpw0IK.s:961    .text:00000000000004ec .L52
     /tmp/cckpw0IK.s:716    .text:00000000000002ec .L37
     /tmp/cckpw0IK.s:724    .text:00000000000002f0 .L38
     /tmp/cckpw0IK.s:965    .text:00000000000004f4 .L53
     /tmp/cckpw0IK.s:969    .text:00000000000004fc .L54
     /tmp/cckpw0IK.s:820    .text:00000000000003ac .L41
     /tmp/cckpw0IK.s:805    .text:000000000000038c .L42
     /tmp/cckpw0IK.s:778    .text:000000000000034c .L43
     /tmp/cckpw0IK.s:871    .text:0000000000000418 .L44
     /tmp/cckpw0IK.s:879    .text:000000000000041c .L45
     /tmp/cckpw0IK.s:973    .text:0000000000000504 .L55
     /tmp/cckpw0IK.s:1219   .text:00000000000006d4 .L56
     /tmp/cckpw0IK.s:1089   .text:00000000000005c4 .L48
     /tmp/cckpw0IK.s:1053   .text:0000000000000590 .L49
     /tmp/cckpw0IK.s:1166   .text:000000000000065c .L50
     /tmp/cckpw0IK.s:1138   .text:000000000000063c .L51
     /tmp/cckpw0IK.s:66     .text._ZN4KSemD2Ev:0000000000000038 .L1
     /tmp/cckpw0IK.s:30     .text._ZN4KSemD2Ev:0000000000000018 .L3
     /tmp/cckpw0IK.s:372    .text:00000000000000a4 .L27
     /tmp/cckpw0IK.s:391    .text:00000000000000b8 .L26
     /tmp/cckpw0IK.s:409    .text:00000000000000d0 .L25
     /tmp/cckpw0IK.s:474    .text:0000000000000140 .L24
     /tmp/cckpw0IK.s:512    .text:0000000000000188 .L23
     /tmp/cckpw0IK.s:521    .text:0000000000000194 .L22
     /tmp/cckpw0IK.s:536    .text:00000000000001b0 .L21
     /tmp/cckpw0IK.s:589    .text:0000000000000234 .L20
     /tmp/cckpw0IK.s:637    .text:0000000000000274 .L19
     /tmp/cckpw0IK.s:667    .text:00000000000002ac .L18
     /tmp/cckpw0IK.s:685    .text:00000000000002c4 .L17
     /tmp/cckpw0IK.s:703    .text:00000000000002dc .L16
     /tmp/cckpw0IK.s:751    .text:0000000000000324 .L15
     /tmp/cckpw0IK.s:767    .text:0000000000000334 .L14
     /tmp/cckpw0IK.s:839    .text:00000000000003d8 .L12
     /tmp/cckpw0IK.s:890    .text:0000000000000424 .L10
     /tmp/cckpw0IK.s:1290   .text._ZN8KConsole10getSRvalueEv:000000000000000c .L0 
     /tmp/cckpw0IK.s:1319   .text._ZN8KConsole10getDRvalueEv:000000000000000c .L0 
     /tmp/cckpw0IK.s:1348   .text._ZN8KConsole10setDRvalueEc:000000000000000c .L0 
     /tmp/cckpw0IK.s:1378   .text._ZN8KConsole23getOutputBufferHasSpaceEv:000000000000000c .L0 
     /tmp/cckpw0IK.s:1405   .text._ZN8KConsole13getOutputHeadEv:000000000000000c .L0 
     /tmp/cckpw0IK.s:1432   .text._ZN8KConsole13getOutputTailEv:000000000000000c .L0 
     /tmp/cckpw0IK.s:1544   .text._ZN3TCB10getRunningEv:000000000000000c .L0 
     /tmp/cckpw0IK.s:1571   .text._ZN3TCB19getRunningTimeSliceEv:000000000000000c .L0 
     /tmp/cckpw0IK.s:4158   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cckpw0IK.s:6463   .debug_str:0000000000000c67 .LASF255
     /tmp/cckpw0IK.s:6337   .debug_str:00000000000008cc .LASF256
     /tmp/cckpw0IK.s:6409   .debug_str:0000000000000afd .LASF257
     /tmp/cckpw0IK.s:6005   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/cckpw0IK.s:6037   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cckpw0IK.s:6373   .debug_str:00000000000009d4 .LASF3
     /tmp/cckpw0IK.s:6223   .debug_str:000000000000054f .LASF0
     /tmp/cckpw0IK.s:6253   .debug_str:000000000000060f .LASF1
     /tmp/cckpw0IK.s:6387   .debug_str:0000000000000a58 .LASF2
GAS LISTING /tmp/cckpw0IK.s 			page 51


     /tmp/cckpw0IK.s:6161   .debug_str:0000000000000387 .LASF4
     /tmp/cckpw0IK.s:6401   .debug_str:0000000000000ac1 .LASF5
     /tmp/cckpw0IK.s:6235   .debug_str:0000000000000597 .LASF6
     /tmp/cckpw0IK.s:6065   .debug_str:00000000000000c8 .LASF7
     /tmp/cckpw0IK.s:6347   .debug_str:0000000000000929 .LASF8
     /tmp/cckpw0IK.s:6335   .debug_str:00000000000008b9 .LASF9
     /tmp/cckpw0IK.s:6241   .debug_str:00000000000005c0 .LASF10
     /tmp/cckpw0IK.s:6189   .debug_str:0000000000000457 .LASF11
     /tmp/cckpw0IK.s:6203   .debug_str:00000000000004b7 .LASF12
     /tmp/cckpw0IK.s:6103   .debug_str:00000000000001d4 .LASF13
     /tmp/cckpw0IK.s:6173   .debug_str:00000000000003ef .LASF14
     /tmp/cckpw0IK.s:6123   .debug_str:0000000000000259 .LASF15
     /tmp/cckpw0IK.s:6101   .debug_str:00000000000001c4 .LASF16
     /tmp/cckpw0IK.s:6437   .debug_str:0000000000000bc0 .LASF17
     /tmp/cckpw0IK.s:6157   .debug_str:0000000000000353 .LASF18
     /tmp/cckpw0IK.s:6423   .debug_str:0000000000000b71 .LASF19
     /tmp/cckpw0IK.s:6523   .debug_str:0000000000000eda .LASF49
     /tmp/cckpw0IK.s:6369   .debug_str:00000000000009bf .LASF70
     /tmp/cckpw0IK.s:6261   .debug_str:000000000000063d .LASF20
     /tmp/cckpw0IK.s:6071   .debug_str:00000000000000ed .LASF21
     /tmp/cckpw0IK.s:6539   .debug_str:0000000000000f5c .LASF22
     /tmp/cckpw0IK.s:6285   .debug_str:00000000000006ef .LASF51
     /tmp/cckpw0IK.s:6501   .debug_str:0000000000000e4a .LASF53
     /tmp/cckpw0IK.s:6499   .debug_str:0000000000000e41 .LASF23
     /tmp/cckpw0IK.s:6489   .debug_str:0000000000000de0 .LASF25
     /tmp/cckpw0IK.s:6383   .debug_str:0000000000000a44 .LASF27
     /tmp/cckpw0IK.s:6321   .debug_str:0000000000000843 .LASF29
     /tmp/cckpw0IK.s:6355   .debug_str:000000000000094a .LASF24
     /tmp/cckpw0IK.s:6363   .debug_str:0000000000000983 .LASF26
     /tmp/cckpw0IK.s:6309   .debug_str:00000000000007e7 .LASF28
     /tmp/cckpw0IK.s:6245   .debug_str:00000000000005db .LASF30
     /tmp/cckpw0IK.s:6537   .debug_str:0000000000000f54 .LASF31
     /tmp/cckpw0IK.s:6469   .debug_str:0000000000000d3d .LASF32
     /tmp/cckpw0IK.s:6301   .debug_str:00000000000007ac .LASF33
     /tmp/cckpw0IK.s:6319   .debug_str:000000000000082f .LASF34
     /tmp/cckpw0IK.s:6433   .debug_str:0000000000000bac .LASF35
     /tmp/cckpw0IK.s:6403   .debug_str:0000000000000ac8 .LASF36
     /tmp/cckpw0IK.s:6405   .debug_str:0000000000000adb .LASF37
     /tmp/cckpw0IK.s:6111   .debug_str:0000000000000200 .LASF38
     /tmp/cckpw0IK.s:6153   .debug_str:0000000000000340 .LASF39
     /tmp/cckpw0IK.s:6215   .debug_str:0000000000000522 .LASF40
     /tmp/cckpw0IK.s:6229   .debug_str:000000000000057b .LASF41
     /tmp/cckpw0IK.s:6139   .debug_str:00000000000002f9 .LASF42
     /tmp/cckpw0IK.s:6067   .debug_str:00000000000000cf .LASF43
     /tmp/cckpw0IK.s:6391   .debug_str:0000000000000a70 .LASF44
     /tmp/cckpw0IK.s:6385   .debug_str:0000000000000a4d .LASF45
     /tmp/cckpw0IK.s:6561   .debug_str:0000000000001023 .LASF46
     /tmp/cckpw0IK.s:6525   .debug_str:0000000000000ee0 .LASF47
     /tmp/cckpw0IK.s:6541   .debug_str:0000000000000f65 .LASF48
     /tmp/cckpw0IK.s:6519   .debug_str:0000000000000eba .LASF64
     /tmp/cckpw0IK.s:6283   .debug_str:00000000000006d9 .LASF66
     /tmp/cckpw0IK.s:6165   .debug_str:00000000000003a9 .LASF50
     /tmp/cckpw0IK.s:6095   .debug_str:0000000000000194 .LASF52
     /tmp/cckpw0IK.s:6357   .debug_str:0000000000000951 .LASF54
     /tmp/cckpw0IK.s:6177   .debug_str:0000000000000416 .LASF55
     /tmp/cckpw0IK.s:6193   .debug_str:000000000000046d .LASF57
     /tmp/cckpw0IK.s:6181   .debug_str:0000000000000423 .LASF56
GAS LISTING /tmp/cckpw0IK.s 			page 52


     /tmp/cckpw0IK.s:6227   .debug_str:0000000000000566 .LASF58
     /tmp/cckpw0IK.s:6219   .debug_str:000000000000053d .LASF59
     /tmp/cckpw0IK.s:6279   .debug_str:00000000000006c0 .LASF60
     /tmp/cckpw0IK.s:6393   .debug_str:0000000000000a88 .LASF61
     /tmp/cckpw0IK.s:6361   .debug_str:0000000000000979 .LASF62
     /tmp/cckpw0IK.s:6341   .debug_str:00000000000008eb .LASF63
     /tmp/cckpw0IK.s:6329   .debug_str:0000000000000887 .LASF65
     /tmp/cckpw0IK.s:6503   .debug_str:0000000000000e6b .LASF67
     /tmp/cckpw0IK.s:6275   .debug_str:00000000000006a9 .LASF68
     /tmp/cckpw0IK.s:6517   .debug_str:0000000000000eb1 .LASF69
     /tmp/cckpw0IK.s:6417   .debug_str:0000000000000b40 .LASF71
     /tmp/cckpw0IK.s:6353   .debug_str:0000000000000942 .LASF72
     /tmp/cckpw0IK.s:6137   .debug_str:00000000000002f2 .LASF73
     /tmp/cckpw0IK.s:6043   .debug_str:0000000000000026 .LASF74
     /tmp/cckpw0IK.s:6195   .debug_str:0000000000000483 .LASF75
     /tmp/cckpw0IK.s:6249   .debug_str:00000000000005fe .LASF76
     /tmp/cckpw0IK.s:6091   .debug_str:0000000000000176 .LASF77
     /tmp/cckpw0IK.s:6447   .debug_str:0000000000000bfb .LASF152
     /tmp/cckpw0IK.s:6435   .debug_str:0000000000000bb3 .LASF78
     /tmp/cckpw0IK.s:6535   .debug_str:0000000000000f32 .LASF79
     /tmp/cckpw0IK.s:6325   .debug_str:0000000000000877 .LASF258
     /tmp/cckpw0IK.s:6107   .debug_str:00000000000001e8 .LASF80
     /tmp/cckpw0IK.s:6205   .debug_str:00000000000004c5 .LASF81
     /tmp/cckpw0IK.s:6371   .debug_str:00000000000009ca .LASF82
     /tmp/cckpw0IK.s:6271   .debug_str:000000000000068a .LASF84
     /tmp/cckpw0IK.s:6281   .debug_str:00000000000006cc .LASF83
     /tmp/cckpw0IK.s:6367   .debug_str:00000000000009a7 .LASF85
     /tmp/cckpw0IK.s:6359   .debug_str:0000000000000971 .LASF86
     /tmp/cckpw0IK.s:6277   .debug_str:00000000000006ae .LASF87
     /tmp/cckpw0IK.s:6533   .debug_str:0000000000000f1a .LASF88
     /tmp/cckpw0IK.s:6287   .debug_str:0000000000000703 .LASF89
     /tmp/cckpw0IK.s:6149   .debug_str:000000000000032f .LASF90
     /tmp/cckpw0IK.s:6421   .debug_str:0000000000000b5b .LASF91
     /tmp/cckpw0IK.s:6047   .debug_str:0000000000000037 .LASF92
     /tmp/cckpw0IK.s:6453   .debug_str:0000000000000c15 .LASF93
     /tmp/cckpw0IK.s:6497   .debug_str:0000000000000e2d .LASF94
     /tmp/cckpw0IK.s:6323   .debug_str:0000000000000858 .LASF95
     /tmp/cckpw0IK.s:6495   .debug_str:0000000000000e22 .LASF96
     /tmp/cckpw0IK.s:6175   .debug_str:00000000000003fe .LASF97
     /tmp/cckpw0IK.s:6565   .debug_str:0000000000001048 .LASF98
     /tmp/cckpw0IK.s:6407   .debug_str:0000000000000ae2 .LASF99
     /tmp/cckpw0IK.s:6145   .debug_str:0000000000000321 .LASF100
     /tmp/cckpw0IK.s:6115   .debug_str:0000000000000219 .LASF101
     /tmp/cckpw0IK.s:6509   .debug_str:0000000000000e98 .LASF102
     /tmp/cckpw0IK.s:6073   .debug_str:00000000000000f6 .LASF103
     /tmp/cckpw0IK.s:6197   .debug_str:000000000000048b .LASF104
     /tmp/cckpw0IK.s:6377   .debug_str:00000000000009fa .LASF105
     /tmp/cckpw0IK.s:6563   .debug_str:000000000000103b .LASF106
     /tmp/cckpw0IK.s:6199   .debug_str:0000000000000496 .LASF107
     /tmp/cckpw0IK.s:6051   .debug_str:0000000000000049 .LASF108
     /tmp/cckpw0IK.s:6317   .debug_str:0000000000000822 .LASF109
     /tmp/cckpw0IK.s:6547   .debug_str:0000000000000f99 .LASF219
     /tmp/cckpw0IK.s:6487   .debug_str:0000000000000dd8 .LASF110
     /tmp/cckpw0IK.s:6099   .debug_str:00000000000001b5 .LASF111
     /tmp/cckpw0IK.s:6557   .debug_str:0000000000000ffc .LASF112
     /tmp/cckpw0IK.s:6443   .debug_str:0000000000000beb .LASF113
     /tmp/cckpw0IK.s:6471   .debug_str:0000000000000d51 .LASF114
GAS LISTING /tmp/cckpw0IK.s 			page 53


     /tmp/cckpw0IK.s:6461   .debug_str:0000000000000c57 .LASF115
     /tmp/cckpw0IK.s:6331   .debug_str:000000000000088f .LASF116
     /tmp/cckpw0IK.s:6167   .debug_str:00000000000003b1 .LASF117
     /tmp/cckpw0IK.s:6399   .debug_str:0000000000000ab3 .LASF118
     /tmp/cckpw0IK.s:6513   .debug_str:0000000000000ea5 .LASF119
     /tmp/cckpw0IK.s:6297   .debug_str:000000000000078b .LASF120
     /tmp/cckpw0IK.s:6569   .debug_str:000000000000106e .LASF121
     /tmp/cckpw0IK.s:6459   .debug_str:0000000000000c4f .LASF122
     /tmp/cckpw0IK.s:6365   .debug_str:0000000000000996 .LASF123
     /tmp/cckpw0IK.s:6131   .debug_str:00000000000002ae .LASF149
     /tmp/cckpw0IK.s:6057   .debug_str:000000000000007d .LASF158
     /tmp/cckpw0IK.s:6191   .debug_str:0000000000000467 .LASF124
     /tmp/cckpw0IK.s:6425   .debug_str:0000000000000b87 .LASF125
     /tmp/cckpw0IK.s:6251   .debug_str:0000000000000607 .LASF126
     /tmp/cckpw0IK.s:6315   .debug_str:000000000000080f .LASF127
     /tmp/cckpw0IK.s:6147   .debug_str:000000000000032a .LASF128
     /tmp/cckpw0IK.s:6097   .debug_str:00000000000001a5 .LASF129
     /tmp/cckpw0IK.s:6441   .debug_str:0000000000000be4 .LASF130
     /tmp/cckpw0IK.s:6085   .debug_str:0000000000000146 .LASF131
     /tmp/cckpw0IK.s:6141   .debug_str:000000000000030b .LASF132
     /tmp/cckpw0IK.s:6305   .debug_str:00000000000007b9 .LASF133
     /tmp/cckpw0IK.s:6155   .debug_str:0000000000000346 .LASF134
     /tmp/cckpw0IK.s:6059   .debug_str:00000000000000a5 .LASF135
     /tmp/cckpw0IK.s:6327   .debug_str:000000000000087c .LASF136
     /tmp/cckpw0IK.s:6481   .debug_str:0000000000000d9c .LASF137
     /tmp/cckpw0IK.s:6475   .debug_str:0000000000000d6b .LASF138
     /tmp/cckpw0IK.s:6077   .debug_str:0000000000000115 .LASF139
     /tmp/cckpw0IK.s:6221   .debug_str:0000000000000549 .LASF140
     /tmp/cckpw0IK.s:6455   .debug_str:0000000000000c2d .LASF141
     /tmp/cckpw0IK.s:6053   .debug_str:0000000000000059 .LASF142
     /tmp/cckpw0IK.s:6069   .debug_str:00000000000000da .LASF143
     /tmp/cckpw0IK.s:6529   .debug_str:0000000000000f05 .LASF144
     /tmp/cckpw0IK.s:6493   .debug_str:0000000000000e12 .LASF145
     /tmp/cckpw0IK.s:6389   .debug_str:0000000000000a66 .LASF146
     /tmp/cckpw0IK.s:6247   .debug_str:00000000000005ee .LASF147
     /tmp/cckpw0IK.s:6349   .debug_str:0000000000000930 .LASF148
     /tmp/cckpw0IK.s:6151   .debug_str:000000000000033a .LASF150
     /tmp/cckpw0IK.s:6483   .debug_str:0000000000000db3 .LASF259
     /tmp/cckpw0IK.s:6311   .debug_str:00000000000007ee .LASF151
     /tmp/cckpw0IK.s:6515   .debug_str:0000000000000eac .LASF153
     /tmp/cckpw0IK.s:6183   .debug_str:0000000000000429 .LASF154
     /tmp/cckpw0IK.s:6105   .debug_str:00000000000001e3 .LASF155
     /tmp/cckpw0IK.s:6159   .debug_str:0000000000000369 .LASF156
     /tmp/cckpw0IK.s:6133   .debug_str:00000000000002bc .LASF157
     /tmp/cckpw0IK.s:6125   .debug_str:0000000000000269 .LASF159
     /tmp/cckpw0IK.s:6081   .debug_str:0000000000000135 .LASF160
     /tmp/cckpw0IK.s:6293   .debug_str:0000000000000767 .LASF161
     /tmp/cckpw0IK.s:6087   .debug_str:0000000000000158 .LASF162
     /tmp/cckpw0IK.s:6439   .debug_str:0000000000000bcc .LASF163
     /tmp/cckpw0IK.s:6485   .debug_str:0000000000000dc0 .LASF260
     /tmp/cckpw0IK.s:6237   .debug_str:00000000000005a9 .LASF164
     /tmp/cckpw0IK.s:6129   .debug_str:0000000000000299 .LASF165
     /tmp/cckpw0IK.s:6231   .debug_str:0000000000000581 .LASF166
     /tmp/cckpw0IK.s:6163   .debug_str:000000000000038d .LASF167
     /tmp/cckpw0IK.s:6257   .debug_str:000000000000062d .LASF168
     /tmp/cckpw0IK.s:6295   .debug_str:000000000000076c .LASF169
     /tmp/cckpw0IK.s:6089   .debug_str:000000000000016d .LASF170
GAS LISTING /tmp/cckpw0IK.s 			page 54


     /tmp/cckpw0IK.s:6289   .debug_str:0000000000000726 .LASF171
     /tmp/cckpw0IK.s:6049   .debug_str:0000000000000042 .LASF172
     /tmp/cckpw0IK.s:6263   .debug_str:0000000000000646 .LASF173
     /tmp/cckpw0IK.s:6127   .debug_str:0000000000000284 .LASF174
     /tmp/cckpw0IK.s:6521   .debug_str:0000000000000ec4 .LASF175
     /tmp/cckpw0IK.s:6269   .debug_str:0000000000000681 .LASF176
     /tmp/cckpw0IK.s:6143   .debug_str:0000000000000314 .LASF177
     /tmp/cckpw0IK.s:6491   .debug_str:0000000000000df5 .LASF178
     /tmp/cckpw0IK.s:6411   .debug_str:0000000000000b1b .LASF179
     /tmp/cckpw0IK.s:6313   .debug_str:00000000000007fa .LASF180
     /tmp/cckpw0IK.s:6339   .debug_str:00000000000008e5 .LASF181
     /tmp/cckpw0IK.s:6299   .debug_str:0000000000000797 .LASF182
     /tmp/cckpw0IK.s:6233   .debug_str:0000000000000589 .LASF183
     /tmp/cckpw0IK.s:6333   .debug_str:000000000000089b .LASF184
     /tmp/cckpw0IK.s:6209   .debug_str:00000000000004f5 .LASF185
     /tmp/cckpw0IK.s:6381   .debug_str:0000000000000a27 .LASF186
     /tmp/cckpw0IK.s:6113   .debug_str:0000000000000213 .LASF187
     /tmp/cckpw0IK.s:6093   .debug_str:000000000000017f .LASF188
     /tmp/cckpw0IK.s:6061   .debug_str:00000000000000b3 .LASF189
     /tmp/cckpw0IK.s:6527   .debug_str:0000000000000eea .LASF190
     /tmp/cckpw0IK.s:6041   .debug_str:000000000000001b .LASF191
     /tmp/cckpw0IK.s:6187   .debug_str:000000000000043c .LASF192
     /tmp/cckpw0IK.s:6445   .debug_str:0000000000000bf0 .LASF193
     /tmp/cckpw0IK.s:6039   .debug_str:0000000000000000 .LASF194
     /tmp/cckpw0IK.s:6267   .debug_str:0000000000000669 .LASF195
     /tmp/cckpw0IK.s:6171   .debug_str:00000000000003c7 .LASF196
     /tmp/cckpw0IK.s:6397   .debug_str:0000000000000aa5 .LASF197
     /tmp/cckpw0IK.s:6345   .debug_str:000000000000090b .LASF198
     /tmp/cckpw0IK.s:6109   .debug_str:00000000000001f2 .LASF199
     /tmp/cckpw0IK.s:6551   .debug_str:0000000000000fbd .LASF200
     /tmp/cckpw0IK.s:6457   .debug_str:0000000000000c3e .LASF201
     /tmp/cckpw0IK.s:6429   .debug_str:0000000000000b93 .LASF202
     /tmp/cckpw0IK.s:6201   .debug_str:00000000000004a2 .LASF203
     /tmp/cckpw0IK.s:6449   .debug_str:0000000000000c03 .LASF204
     /tmp/cckpw0IK.s:6185   .debug_str:000000000000042e .LASF205
     /tmp/cckpw0IK.s:6045   .debug_str:000000000000002e .LASF261
     /tmp/cckpw0IK.s:6505   .debug_str:0000000000000e81 .LASF206
     /tmp/cckpw0IK.s:6467   .debug_str:0000000000000d30 .LASF207
     /tmp/cckpw0IK.s:6225   .debug_str:000000000000055c .LASF208
     /tmp/cckpw0IK.s:6351   .debug_str:0000000000000938 .LASF209
     /tmp/cckpw0IK.s:6255   .debug_str:0000000000000622 .LASF210
     /tmp/cckpw0IK.s:6507   .debug_str:0000000000000e8d .LASF211
     /tmp/cckpw0IK.s:6413   .debug_str:0000000000000b21 .LASF212
     /tmp/cckpw0IK.s:6451   .debug_str:0000000000000c10 .LASF213
     /tmp/cckpw0IK.s:6239   .debug_str:00000000000005b6 .LASF214
     /tmp/cckpw0IK.s:6431   .debug_str:0000000000000ba7 .LASF215
     /tmp/cckpw0IK.s:6303   .debug_str:00000000000007b4 .LASF216
     /tmp/cckpw0IK.s:6555   .debug_str:0000000000000fef .LASF217
     /tmp/cckpw0IK.s:6545   .debug_str:0000000000000f87 .LASF218
     /tmp/cckpw0IK.s:6213   .debug_str:000000000000050a .LASF220
     /tmp/cckpw0IK.s:6553   .debug_str:0000000000000fdb .LASF262
     /tmp/cckpw0IK.s:6083   .debug_str:000000000000013b .LASF221
     /tmp/cckpw0IK.s:6559   .debug_str:0000000000001002 .LASF222
     /tmp/cckpw0IK.s:6265   .debug_str:0000000000000664 .LASF223
     /tmp/cckpw0IK.s:6119   .debug_str:0000000000000231 .LASF224
     /tmp/cckpw0IK.s:6211   .debug_str:0000000000000502 .LASF225
     /tmp/cckpw0IK.s:6307   .debug_str:00000000000007cf .LASF226
GAS LISTING /tmp/cckpw0IK.s 			page 55


     /tmp/cckpw0IK.s:6259   .debug_str:0000000000000635 .LASF227
     /tmp/cckpw0IK.s:6055   .debug_str:0000000000000061 .LASF228
     /tmp/cckpw0IK.s:6079   .debug_str:000000000000012d .LASF229
     /tmp/cckpw0IK.s:6567   .debug_str:0000000000001056 .LASF230
     /tmp/cckpw0IK.s:6243   .debug_str:00000000000005d3 .LASF231
     /tmp/cckpw0IK.s:6135   .debug_str:00000000000002d6 .LASF232
     /tmp/cckpw0IK.s:6473   .debug_str:0000000000000d5b .LASF233
     /tmp/cckpw0IK.s:6375   .debug_str:00000000000009d9 .LASF234
     /tmp/cckpw0IK.s:6479   .debug_str:0000000000000d8c .LASF235
     /tmp/cckpw0IK.s:6291   .debug_str:0000000000000742 .LASF236
     /tmp/cckpw0IK.s:6343   .debug_str:00000000000008fa .LASF237
     /tmp/cckpw0IK.s:118    .text:0000000000000000 .LFB64
     /tmp/cckpw0IK.s:1238   .text:00000000000006ec .LFE64
     /tmp/cckpw0IK.s:6427   .debug_str:0000000000000b8c .LASF238
     /tmp/cckpw0IK.s:5494   .debug_loc:0000000000000000 .LLST5
     /tmp/cckpw0IK.s:6465   .debug_str:0000000000000d2b .LASF239
     /tmp/cckpw0IK.s:5525   .debug_loc:0000000000000087 .LLST6
     /tmp/cckpw0IK.s:6531   .debug_str:0000000000000f12 .LASF240
     /tmp/cckpw0IK.s:5556   .debug_loc:000000000000010e .LLST7
     /tmp/cckpw0IK.s:5578   .debug_loc:000000000000016d .LLST8
     /tmp/cckpw0IK.s:5600   .debug_loc:00000000000001cc .LLST9
     /tmp/cckpw0IK.s:5622   .debug_loc:000000000000022d .LLST10
     /tmp/cckpw0IK.s:5644   .debug_loc:000000000000028e .LLST11
     /tmp/cckpw0IK.s:5666   .debug_loc:00000000000002ef .LLST12
     /tmp/cckpw0IK.s:797    .text:000000000000037c .LBB30
     /tmp/cckpw0IK.s:835    .text:00000000000003d4 .LBE30
     /tmp/cckpw0IK.s:5859   .debug_loc:0000000000000648 .LLST13
     /tmp/cckpw0IK.s:801    .text:0000000000000384 .LVL68
     /tmp/cckpw0IK.s:810    .text:0000000000000394 .LVL70
     /tmp/cckpw0IK.s:826    .text:00000000000003bc .LVL71
     /tmp/cckpw0IK.s:830    .text:00000000000003c4 .LVL72
     /tmp/cckpw0IK.s:834    .text:00000000000003d4 .LVL73
     /tmp/cckpw0IK.s:1019   .text:0000000000000540 .LBB33
     /tmp/cckpw0IK.s:1082   .text:00000000000005c0 .LBE33
     /tmp/cckpw0IK.s:5867   .debug_loc:000000000000066d .LLST14
     /tmp/cckpw0IK.s:1023   .text:0000000000000548 .LVL90
     /tmp/cckpw0IK.s:1035   .text:0000000000000564 .LVL92
     /tmp/cckpw0IK.s:1047   .text:0000000000000580 .LVL93
     /tmp/cckpw0IK.s:1052   .text:0000000000000590 .LVL94
     /tmp/cckpw0IK.s:1060   .text:00000000000005a4 .LVL95
     /tmp/cckpw0IK.s:1081   .text:00000000000005c0 .LVL96
     /tmp/cckpw0IK.s:380    .text:00000000000000b0 .LVL22
     /tmp/cckpw0IK.s:398    .text:00000000000000c8 .LVL24
     /tmp/cckpw0IK.s:423    .text:00000000000000f4 .LVL26
     /tmp/cckpw0IK.s:445    .text:000000000000012c .LVL27
     /tmp/cckpw0IK.s:479    .text:0000000000000148 .LVL29
     /tmp/cckpw0IK.s:484    .text:000000000000015c .LVL30
     /tmp/cckpw0IK.s:488    .text:0000000000000164 .LVL31
     /tmp/cckpw0IK.s:492    .text:0000000000000174 .LVL32
     /tmp/cckpw0IK.s:508    .text:0000000000000184 .LVL33
     /tmp/cckpw0IK.s:517    .text:0000000000000190 .LVL35
     /tmp/cckpw0IK.s:528    .text:00000000000001a4 .LVL37
     /tmp/cckpw0IK.s:532    .text:00000000000001ac .LVL38
     /tmp/cckpw0IK.s:541    .text:00000000000001b8 .LVL40
     /tmp/cckpw0IK.s:553    .text:00000000000001d8 .LVL41
     /tmp/cckpw0IK.s:558    .text:00000000000001ec .LVL42
     /tmp/cckpw0IK.s:562    .text:00000000000001f4 .LVL43
GAS LISTING /tmp/cckpw0IK.s 			page 56


     /tmp/cckpw0IK.s:566    .text:0000000000000204 .LVL44
     /tmp/cckpw0IK.s:570    .text:000000000000020c .LVL45
     /tmp/cckpw0IK.s:579    .text:0000000000000220 .LVL46
     /tmp/cckpw0IK.s:585    .text:0000000000000230 .LVL47
     /tmp/cckpw0IK.s:600    .text:000000000000024c .LVL49
     /tmp/cckpw0IK.s:644    .text:0000000000000284 .LVL51
     /tmp/cckpw0IK.s:660    .text:000000000000029c .LVL52
     /tmp/cckpw0IK.s:663    .text:00000000000002a8 .LVL53
     /tmp/cckpw0IK.s:674    .text:00000000000002bc .LVL55
     /tmp/cckpw0IK.s:692    .text:00000000000002d4 .LVL57
     /tmp/cckpw0IK.s:738    .text:0000000000000304 .LVL59
     /tmp/cckpw0IK.s:743    .text:0000000000000318 .LVL60
     /tmp/cckpw0IK.s:747    .text:0000000000000320 .LVL61
     /tmp/cckpw0IK.s:756    .text:000000000000032c .LVL63
     /tmp/cckpw0IK.s:775    .text:0000000000000348 .LVL65
     /tmp/cckpw0IK.s:784    .text:0000000000000354 .LVL66
     /tmp/cckpw0IK.s:789    .text:0000000000000364 .LVL67
     /tmp/cckpw0IK.s:853    .text:00000000000003fc .LVL75
     /tmp/cckpw0IK.s:897    .text:0000000000000434 .LVL77
     /tmp/cckpw0IK.s:911    .text:0000000000000460 .LVL78
     /tmp/cckpw0IK.s:921    .text:0000000000000474 .LVL80
     /tmp/cckpw0IK.s:930    .text:0000000000000490 .LVL81
     /tmp/cckpw0IK.s:935    .text:00000000000004a0 .LVL82
     /tmp/cckpw0IK.s:944    .text:00000000000004bc .LVL83
     /tmp/cckpw0IK.s:949    .text:00000000000004cc .LVL84
     /tmp/cckpw0IK.s:958    .text:00000000000004e8 .LVL85
     /tmp/cckpw0IK.s:1102   .text:00000000000005e0 .LVL98
     /tmp/cckpw0IK.s:1106   .text:00000000000005e8 .LVL99
     /tmp/cckpw0IK.s:1116   .text:0000000000000600 .LVL100
     /tmp/cckpw0IK.s:1122   .text:0000000000000610 .LVL101
     /tmp/cckpw0IK.s:1126   .text:0000000000000620 .LVL102
     /tmp/cckpw0IK.s:1137   .text:000000000000063c .LVL103
     /tmp/cckpw0IK.s:1159   .text:0000000000000658 .LVL104
     /tmp/cckpw0IK.s:1174   .text:000000000000066c .LVL106
     /tmp/cckpw0IK.s:1179   .text:000000000000067c .LVL107
     /tmp/cckpw0IK.s:1188   .text:0000000000000698 .LVL108
     /tmp/cckpw0IK.s:1193   .text:00000000000006a8 .LVL109
     /tmp/cckpw0IK.s:1202   .text:00000000000006c4 .LVL110
     /tmp/cckpw0IK.s:6179   .debug_str:000000000000041e .LASF241
     /tmp/cckpw0IK.s:6063   .debug_str:00000000000000be .LASF242
     /tmp/cckpw0IK.s:6075   .debug_str:0000000000000108 .LASF263
     /tmp/cckpw0IK.s:11     .text._ZN4KSemD2Ev:0000000000000000 .LFB66
     /tmp/cckpw0IK.s:85     .text._ZN4KSemD2Ev:000000000000004c .LFE66
     /tmp/cckpw0IK.s:5879   .debug_loc:00000000000006a5 .LLST0
     /tmp/cckpw0IK.s:31     .text._ZN4KSemD2Ev:0000000000000018 .LBB19
     /tmp/cckpw0IK.s:71     .text._ZN4KSemD2Ev:0000000000000038 .LBE19
     /tmp/cckpw0IK.s:5897   .debug_loc:00000000000006f1 .LLST1
     /tmp/cckpw0IK.s:36     .text._ZN4KSemD2Ev:0000000000000018 .LBB21
     /tmp/cckpw0IK.s:43     .text._ZN4KSemD2Ev:000000000000001c .LBE21
     /tmp/cckpw0IK.s:5915   .debug_loc:000000000000072e .LLST2
     /tmp/cckpw0IK.s:46     .text._ZN4KSemD2Ev:0000000000000020 .LBB23
     /tmp/cckpw0IK.s:69     .text._ZN4KSemD2Ev:0000000000000038 .LBE23
     /tmp/cckpw0IK.s:5924   .debug_loc:0000000000000753 .LLST3
     /tmp/cckpw0IK.s:58     .text._ZN4KSemD2Ev:000000000000002c .LBB24
     /tmp/cckpw0IK.s:68     .text._ZN4KSemD2Ev:0000000000000038 .LBE24
     /tmp/cckpw0IK.s:5931   .debug_loc:0000000000000776 .LLST4
     /tmp/cckpw0IK.s:63     .text._ZN4KSemD2Ev:0000000000000034 .LVL5
GAS LISTING /tmp/cckpw0IK.s 			page 57


     /tmp/cckpw0IK.s:1560   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000000 .LFB51
     /tmp/cckpw0IK.s:1579   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000020 .LFE51
     /tmp/cckpw0IK.s:1533   .text._ZN3TCB10getRunningEv:0000000000000000 .LFB49
     /tmp/cckpw0IK.s:1553   .text._ZN3TCB10getRunningEv:0000000000000024 .LFE49
     /tmp/cckpw0IK.s:1505   .text._ZN3TCB7getBodyEv:0000000000000000 .LFB47
     /tmp/cckpw0IK.s:1526   .text._ZN3TCB7getBodyEv:000000000000001c .LFE47
     /tmp/cckpw0IK.s:5938   .debug_loc:0000000000000799 .LLST16
     /tmp/cckpw0IK.s:1477   .text._ZN3TCB12getTimeSliceEv:0000000000000000 .LFB46
     /tmp/cckpw0IK.s:1498   .text._ZN3TCB12getTimeSliceEv:000000000000001c .LFE46
     /tmp/cckpw0IK.s:5952   .debug_loc:00000000000007d2 .LLST15
     /tmp/cckpw0IK.s:1448   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000000 .LFB44
     /tmp/cckpw0IK.s:1470   .text._ZN3TCB9setStatusENS_12ThreadStatusE:000000000000001c .LFE44
     /tmp/cckpw0IK.s:6117   .debug_str:000000000000022c .LASF243
     /tmp/cckpw0IK.s:1421   .text._ZN8KConsole13getOutputTailEv:0000000000000000 .LFB40
     /tmp/cckpw0IK.s:1441   .text._ZN8KConsole13getOutputTailEv:0000000000000024 .LFE40
     /tmp/cckpw0IK.s:1394   .text._ZN8KConsole13getOutputHeadEv:0000000000000000 .LFB39
     /tmp/cckpw0IK.s:1414   .text._ZN8KConsole13getOutputHeadEv:0000000000000024 .LFE39
     /tmp/cckpw0IK.s:1367   .text._ZN8KConsole23getOutputBufferHasSpaceEv:0000000000000000 .LFB38
     /tmp/cckpw0IK.s:1387   .text._ZN8KConsole23getOutputBufferHasSpaceEv:0000000000000024 .LFE38
     /tmp/cckpw0IK.s:1337   .text._ZN8KConsole10setDRvalueEc:0000000000000000 .LFB37
     /tmp/cckpw0IK.s:1360   .text._ZN8KConsole10setDRvalueEc:0000000000000028 .LFE37
     /tmp/cckpw0IK.s:1308   .text._ZN8KConsole10getDRvalueEv:0000000000000000 .LFB36
     /tmp/cckpw0IK.s:1330   .text._ZN8KConsole10getDRvalueEv:0000000000000028 .LFE36
     /tmp/cckpw0IK.s:1278   .text._ZN8KConsole10getSRvalueEv:0000000000000000 .LFB35
     /tmp/cckpw0IK.s:1301   .text._ZN8KConsole10getSRvalueEv:0000000000000028 .LFE35
     /tmp/cckpw0IK.s:6395   .debug_str:0000000000000aa0 .LASF264
     /tmp/cckpw0IK.s:6477   .debug_str:0000000000000d77 .LASF265
     /tmp/cckpw0IK.s:1245   .text._ZN5Riscv6mc_sipEm:0000000000000000 .LFB7
     /tmp/cckpw0IK.s:1271   .text._ZN5Riscv6mc_sipEm:000000000000001c .LFE7
     /tmp/cckpw0IK.s:6511   .debug_str:0000000000000ea0 .LASF244
     /tmp/cckpw0IK.s:6379   .debug_str:0000000000000a12 .LASF245
     /tmp/cckpw0IK.s:6207   .debug_str:00000000000004ea .LASF247
     /tmp/cckpw0IK.s:6273   .debug_str:000000000000069e .LASF246
     /tmp/cckpw0IK.s:6419   .debug_str:0000000000000b4d .LASF248
     /tmp/cckpw0IK.s:6121   .debug_str:0000000000000246 .LASF249
     /tmp/cckpw0IK.s:6543   .debug_str:0000000000000f7b .LASF250
     /tmp/cckpw0IK.s:6415   .debug_str:0000000000000b31 .LASF251
     /tmp/cckpw0IK.s:6169   .debug_str:00000000000003be .LASF252
     /tmp/cckpw0IK.s:6549   .debug_str:0000000000000faf .LASF253
     /tmp/cckpw0IK.s:6217   .debug_str:0000000000000534 .LASF254
     /tmp/cckpw0IK.s:141    .text:000000000000001c .LVL7
     /tmp/cckpw0IK.s:148    .text:0000000000000020 .LVL8
     /tmp/cckpw0IK.s:1007   .text:000000000000052c .LVL88
     /tmp/cckpw0IK.s:1014   .text:0000000000000530 .LVL89
     /tmp/cckpw0IK.s:1230   .text:00000000000006e0 .LVL111
     /tmp/cckpw0IK.s:1235   .text:00000000000006e8 .LVL112
     /tmp/cckpw0IK.s:151    .text:0000000000000024 .LVL9
     /tmp/cckpw0IK.s:158    .text:0000000000000028 .LVL10
     /tmp/cckpw0IK.s:984    .text:0000000000000514 .LVL86
     /tmp/cckpw0IK.s:996    .text:0000000000000520 .LVL87
     /tmp/cckpw0IK.s:161    .text:000000000000002c .LVL11
     /tmp/cckpw0IK.s:169    .text:0000000000000030 .LVL12
     /tmp/cckpw0IK.s:172    .text:0000000000000034 .LVL13
     /tmp/cckpw0IK.s:179    .text:0000000000000038 .LVL14
     /tmp/cckpw0IK.s:182    .text:000000000000003c .LVL15
     /tmp/cckpw0IK.s:189    .text:0000000000000040 .LVL16
     /tmp/cckpw0IK.s:192    .text:0000000000000044 .LVL17
GAS LISTING /tmp/cckpw0IK.s 			page 58


     /tmp/cckpw0IK.s:199    .text:0000000000000048 .LVL18
     /tmp/cckpw0IK.s:202    .text:000000000000004c .LVL19
     /tmp/cckpw0IK.s:209    .text:0000000000000050 .LVL20
     /tmp/cckpw0IK.s:212    .text:0000000000000054 .LVL21
     /tmp/cckpw0IK.s:390    .text:00000000000000b8 .LVL23
     /tmp/cckpw0IK.s:408    .text:00000000000000d0 .LVL25
     /tmp/cckpw0IK.s:473    .text:0000000000000140 .LVL28
     /tmp/cckpw0IK.s:511    .text:0000000000000188 .LVL34
     /tmp/cckpw0IK.s:520    .text:0000000000000194 .LVL36
     /tmp/cckpw0IK.s:535    .text:00000000000001b0 .LVL39
     /tmp/cckpw0IK.s:588    .text:0000000000000234 .LVL48
     /tmp/cckpw0IK.s:636    .text:0000000000000274 .LVL50
     /tmp/cckpw0IK.s:666    .text:00000000000002ac .LVL54
     /tmp/cckpw0IK.s:684    .text:00000000000002c4 .LVL56
     /tmp/cckpw0IK.s:702    .text:00000000000002dc .LVL58
     /tmp/cckpw0IK.s:750    .text:0000000000000324 .LVL62
     /tmp/cckpw0IK.s:766    .text:0000000000000334 .LVL64
     /tmp/cckpw0IK.s:838    .text:00000000000003d8 .LVL74
     /tmp/cckpw0IK.s:889    .text:0000000000000424 .LVL76
     /tmp/cckpw0IK.s:914    .text:0000000000000464 .LVL79
     /tmp/cckpw0IK.s:1088   .text:00000000000005c4 .LVL97
     /tmp/cckpw0IK.s:1165   .text:000000000000065c .LVL105
     /tmp/cckpw0IK.s:804    .text:000000000000038c .LVL69
     /tmp/cckpw0IK.s:1027   .text:0000000000000550 .LVL91
     /tmp/cckpw0IK.s:17     .text._ZN4KSemD2Ev:0000000000000000 .LVL0
     /tmp/cckpw0IK.s:29     .text._ZN4KSemD2Ev:0000000000000018 .LVL1
     /tmp/cckpw0IK.s:80     .text._ZN4KSemD2Ev:0000000000000044 .LVL6
     /tmp/cckpw0IK.s:41     .text._ZN4KSemD2Ev:000000000000001c .LVL2
     /tmp/cckpw0IK.s:48     .text._ZN4KSemD2Ev:0000000000000020 .LVL3
     /tmp/cckpw0IK.s:57     .text._ZN4KSemD2Ev:000000000000002c .LVL4
     /tmp/cckpw0IK.s:1508   .text._ZN3TCB7getBodyEv:0000000000000000 .LVL118
     /tmp/cckpw0IK.s:1518   .text._ZN3TCB7getBodyEv:0000000000000010 .LVL119
     /tmp/cckpw0IK.s:1480   .text._ZN3TCB12getTimeSliceEv:0000000000000000 .LVL116
     /tmp/cckpw0IK.s:1490   .text._ZN3TCB12getTimeSliceEv:0000000000000010 .LVL117
     /tmp/cckpw0IK.s:1589   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/cckpw0IK.s:5      .text:0000000000000000 .Ltext0
     /tmp/cckpw0IK.s:1582   .text:00000000000006ec .Letext0
     /tmp/cckpw0IK.s:88     .gcc_except_table._ZN4KSemD2Ev:0000000000000000 .LLSDA66
                           .group:0000000000000000 _ZN4KSemD5Ev

UNDEFINED SYMBOLS
_Z8mem_freePv
__gxx_personality_v0
_ZN7KMemory7kmallocEm
_ZN7KMemory5kfreeEPv
_ZN3TCB12createThreadEPFvPvES0_Pm
main
_ZN9Scheduler3putEP3TCB
_ZN3TCB13releaseJoinedEPS_
_ZN3TCB8dispatchEv
_ZN3TCB10threadJoinEPS_
_ZN3TCB10quitThreadEPS_
_ZN4KSem7initSemEj
_ZN4KSem8closeSemEPS_
_ZN4KSemdlEPv
_ZN4KSem4waitEv
_ZN4KSem6signalEv
GAS LISTING /tmp/cckpw0IK.s 			page 59


_ZN9Scheduler10putToSleepEP3TCBm
_ZN8KConsole5kgetcEv
_ZN8KConsole5kputcEc
_ZN8KConsole13getFromOutputEv
_Z10sem_signalP4KSem
_Z11printStringPKc
_Z8printIntiii
plic_claim
_ZN8KConsole12placeInInputEc
plic_complete
_ZN9Scheduler4wakeEv
_ZN8KConsole2srE
_ZN8KConsole2drE
_ZN8KConsole20outputBufferHasSpaceE
_ZN8KConsole10outputHeadE
_ZN8KConsole10outputTailE
_ZN3TCB7runningE
_ZN3TCB16runningTimeSliceE
