GAS LISTING /tmp/ccxXkH1N.s 			page 1


   1              		.file	"interruptRoutine.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.section	.text._ZN4KSemD2Ev,"axG",@progbits,_ZN4KSemD5Ev,comdat
   7              		.align	2
   8              		.weak	_ZN4KSemD2Ev
  10              	_ZN4KSemD2Ev:
  11              	.LFB58:
  12              		.file 1 "src/../h/KSem.hpp"
   1:src/../h/KSem.hpp **** //
   2:src/../h/KSem.hpp **** // Created by os on 6/4/23.
   3:src/../h/KSem.hpp **** //
   4:src/../h/KSem.hpp **** 
   5:src/../h/KSem.hpp **** #ifndef PROJEKAT2023_KSEM_HPP
   6:src/../h/KSem.hpp **** #define PROJEKAT2023_KSEM_HPP
   7:src/../h/KSem.hpp **** 
   8:src/../h/KSem.hpp **** #include "../h/ThreadQueue.hpp"
   9:src/../h/KSem.hpp **** 
  10:src/../h/KSem.hpp **** //klasa napravljena po uzoru na semafor u skolskom jezgru
  11:src/../h/KSem.hpp **** class KSem {
  13              		.loc 1 11 7
  14              		.cfi_startproc
  15              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
  16              		.cfi_lsda 0x1b,.LLSDA58
  17              	.LVL0:
  18 0000 130101FE 		addi	sp,sp,-32
  19              		.cfi_def_cfa_offset 32
  20 0004 233C1100 		sd	ra,24(sp)
  21 0008 23388100 		sd	s0,16(sp)
  22 000c 23349100 		sd	s1,8(sp)
  23              		.cfi_offset 1, -8
  24              		.cfi_offset 8, -16
  25              		.cfi_offset 9, -24
  26 0010 13040102 		addi	s0,sp,32
  27              		.cfi_def_cfa 8, 0
  28 0014 93040500 		mv	s1,a0
  29              	.LVL1:
  30              	.L3:
  31              	.LBB19:
  32              	.LBB20:
  33              		.file 2 "src/../h/../h/ThreadQueue.hpp"
   1:src/../h/../h/ThreadQueue.hpp **** //
   2:src/../h/../h/ThreadQueue.hpp **** // Created by os on 6/4/23.
   3:src/../h/../h/ThreadQueue.hpp **** //
   4:src/../h/../h/ThreadQueue.hpp **** 
   5:src/../h/../h/ThreadQueue.hpp **** #ifndef PROJEKAT2023_THREADQUEUE_HPP
   6:src/../h/../h/ThreadQueue.hpp **** #define PROJEKAT2023_THREADQUEUE_HPP
   7:src/../h/../h/ThreadQueue.hpp **** 
   8:src/../h/../h/ThreadQueue.hpp **** #include "../h/syscall_c.hpp"
   9:src/../h/../h/ThreadQueue.hpp **** 
  10:src/../h/../h/ThreadQueue.hpp **** class TCB;
  11:src/../h/../h/ThreadQueue.hpp **** 
  12:src/../h/../h/ThreadQueue.hpp **** class ThreadQueue {
  13:src/../h/../h/ThreadQueue.hpp **** private:
  14:src/../h/../h/ThreadQueue.hpp ****     struct Node {
GAS LISTING /tmp/ccxXkH1N.s 			page 2


  15:src/../h/../h/ThreadQueue.hpp ****         TCB* data;
  16:src/../h/../h/ThreadQueue.hpp ****         Node* next;
  17:src/../h/../h/ThreadQueue.hpp **** 
  18:src/../h/../h/ThreadQueue.hpp ****         Node(TCB* d) : data(d), next(nullptr) {}
  19:src/../h/../h/ThreadQueue.hpp **** 
  20:src/../h/../h/ThreadQueue.hpp ****         static void* operator new(size_t size) {
  21:src/../h/../h/ThreadQueue.hpp ****             return mem_alloc(size);
  22:src/../h/../h/ThreadQueue.hpp ****         }
  23:src/../h/../h/ThreadQueue.hpp **** 
  24:src/../h/../h/ThreadQueue.hpp ****         static void operator delete(void* ptr) {
  25:src/../h/../h/ThreadQueue.hpp ****             mem_free(ptr);
  26:src/../h/../h/ThreadQueue.hpp ****         }
  27:src/../h/../h/ThreadQueue.hpp ****     };
  28:src/../h/../h/ThreadQueue.hpp **** 
  29:src/../h/../h/ThreadQueue.hpp ****     Node* front;
  30:src/../h/../h/ThreadQueue.hpp ****     Node* back;
  31:src/../h/../h/ThreadQueue.hpp **** 
  32:src/../h/../h/ThreadQueue.hpp **** public:
  33:src/../h/../h/ThreadQueue.hpp ****     ThreadQueue() : front(nullptr), back(nullptr) {}
  34:src/../h/../h/ThreadQueue.hpp **** 
  35:src/../h/../h/ThreadQueue.hpp ****     ThreadQueue(const ThreadQueue &) = delete;
  36:src/../h/../h/ThreadQueue.hpp **** 
  37:src/../h/../h/ThreadQueue.hpp ****     ThreadQueue &operator=(const ThreadQueue &) = delete;
  38:src/../h/../h/ThreadQueue.hpp **** 
  39:src/../h/../h/ThreadQueue.hpp ****     ~ThreadQueue() {
  40:src/../h/../h/ThreadQueue.hpp ****         while (!isEmpty()) {
  34              		.loc 2 40 9
  35              		.loc 2 40 16
  36              	.LBB21:
  37              	.LBB22:
  41:src/../h/../h/ThreadQueue.hpp ****             Node* node = front;
  42:src/../h/../h/ThreadQueue.hpp ****             front = front->next;
  43:src/../h/../h/ThreadQueue.hpp ****             delete node;
  44:src/../h/../h/ThreadQueue.hpp ****         }
  45:src/../h/../h/ThreadQueue.hpp ****     }
  46:src/../h/../h/ThreadQueue.hpp **** 
  47:src/../h/../h/ThreadQueue.hpp ****     bool isEmpty() const {
  48:src/../h/../h/ThreadQueue.hpp ****         return front == nullptr;
  38              		.loc 2 48 9
  39              		.loc 2 48 16 is_stmt 0
  40 0018 03B58400 		ld	a0,8(s1)
  41              	.LVL2:
  42              	.LBE22:
  43              	.LBE21:
  40:src/../h/../h/ThreadQueue.hpp ****             Node* node = front;
  44              		.loc 2 40 16
  45 001c 630E0500 		beqz	a0,.L1
  46              	.LBB23:
  41:src/../h/../h/ThreadQueue.hpp ****             Node* node = front;
  47              		.loc 2 41 13 is_stmt 1
  48              	.LVL3:
  42:src/../h/../h/ThreadQueue.hpp ****             delete node;
  49              		.loc 2 42 13
  42:src/../h/../h/ThreadQueue.hpp ****             delete node;
  50              		.loc 2 42 28 is_stmt 0
  51 0020 83378500 		ld	a5,8(a0)
  42:src/../h/../h/ThreadQueue.hpp ****             delete node;
GAS LISTING /tmp/ccxXkH1N.s 			page 3


  52              		.loc 2 42 19
  53 0024 23B4F400 		sd	a5,8(s1)
  43:src/../h/../h/ThreadQueue.hpp ****         }
  54              		.loc 2 43 13 is_stmt 1
  43:src/../h/../h/ThreadQueue.hpp ****         }
  55              		.loc 2 43 24 is_stmt 0
  56 0028 E30805FE 		beqz	a0,.L3
  57              	.LVL4:
  58              	.LBB24:
  59              	.LBB25:
  25:src/../h/../h/ThreadQueue.hpp ****         }
  60              		.loc 2 25 13 is_stmt 1
  25:src/../h/../h/ThreadQueue.hpp ****         }
  61              		.loc 2 25 21 is_stmt 0
  62 002c 97000000 		call	_Z8mem_freePv@plt
  62      E7800000 
  63              	.LVL5:
  26:src/../h/../h/ThreadQueue.hpp ****     };
  64              		.loc 2 26 9
  65 0034 6FF05FFE 		j	.L3
  66              	.L1:
  67              	.LBE25:
  68              	.LBE24:
  69              	.LBE23:
  70              	.LBE20:
  71              	.LBE19:
  72              		.loc 1 11 7
  73 0038 83308101 		ld	ra,24(sp)
  74              		.cfi_restore 1
  75 003c 03340101 		ld	s0,16(sp)
  76              		.cfi_restore 8
  77              		.cfi_def_cfa 2, 32
  78 0040 83348100 		ld	s1,8(sp)
  79              		.cfi_restore 9
  80              	.LVL6:
  81 0044 13010102 		addi	sp,sp,32
  82              		.cfi_def_cfa_offset 0
  83 0048 67800000 		jr	ra
  84              		.cfi_endproc
  85              	.LFE58:
  86              		.globl	__gxx_personality_v0
  87              		.section	.gcc_except_table._ZN4KSemD2Ev,"aG",@progbits,_ZN4KSemD5Ev,comdat
  88              	.LLSDA58:
  89 0000 FF       		.byte	0xff
  90 0001 FF       		.byte	0xff
  91 0002 03       		.byte	0x3
  92 0003 00       		.byte	0
  93              		.section	.text._ZN4KSemD2Ev,"axG",@progbits,_ZN4KSemD5Ev,comdat
  95              		.weak	_ZN4KSemD1Ev
  96              		.set	_ZN4KSemD1Ev,_ZN4KSemD2Ev
  97              		.section	.rodata
  98              		.align	3
  99              	.LC0:
 100 0000 0A4E6570 		.string	"\nNepostojeci op code: "
 100      6F73746F 
 100      6A656369 
 100      206F7020 
GAS LISTING /tmp/ccxXkH1N.s 			page 4


 100      636F6465 
 101 0017 00       		.align	3
 102              	.LC1:
 103 0018 0A736361 		.string	"\nscause: "
 103      7573653A 
 103      2000
 104 0022 00000000 		.align	3
 104      0000
 105              	.LC2:
 106 0028 0A736570 		.string	"\nsepc: "
 106      633A2000 
 107              		.align	3
 108              	.LC3:
 109 0030 0A477265 		.string	"\nGreska u prekidnoj rutini\n"
 109      736B6120 
 109      75207072 
 109      656B6964 
 109      6E6F6A20 
 110 004c 00000000 		.align	3
 111              	.LC4:
 112 0050 73636175 		.string	"scause: "
 112      73653A20 
 112      00
 113              		.text
 114              		.align	2
 115              		.globl	interruptRoutine
 117              	interruptRoutine:
 118              	.LFB56:
 119              		.file 3 "src/interruptRoutine.cpp"
   1:src/interruptRoutine.cpp **** //
   2:src/interruptRoutine.cpp **** // Created by os on 5/22/23.
   3:src/interruptRoutine.cpp **** //
   4:src/interruptRoutine.cpp **** 
   5:src/interruptRoutine.cpp **** #include "../lib/hw.h"
   6:src/interruptRoutine.cpp **** #include "../h/Riscv.hpp"
   7:src/interruptRoutine.cpp **** #include "../h/KMemory.hpp"
   8:src/interruptRoutine.cpp **** #include "../h/KSem.hpp"
   9:src/interruptRoutine.cpp **** #include "../h/KConsole.hpp"
  10:src/interruptRoutine.cpp **** #include "../h/TCB.hpp"
  11:src/interruptRoutine.cpp **** #include "../h/Scheduler.hpp"
  12:src/interruptRoutine.cpp **** 
  13:src/interruptRoutine.cpp **** #include "../test/printing.hpp"
  14:src/interruptRoutine.cpp **** 
  15:src/interruptRoutine.cpp **** int main();
  16:src/interruptRoutine.cpp **** 
  17:src/interruptRoutine.cpp **** #pragma GCC optimize("O0")
  18:src/interruptRoutine.cpp **** extern "C" void interruptRoutine() {
 120              		.loc 3 18 36 is_stmt 1
 121              		.cfi_startproc
 122 0000 130101F9 		addi	sp,sp,-112
 123              		.cfi_def_cfa_offset 112
 124 0004 23341106 		sd	ra,104(sp)
 125 0008 23308106 		sd	s0,96(sp)
 126 000c 233C9104 		sd	s1,88(sp)
 127              		.cfi_offset 1, -8
 128              		.cfi_offset 8, -16
 129              		.cfi_offset 9, -24
GAS LISTING /tmp/ccxXkH1N.s 			page 5


 130 0010 13040107 		addi	s0,sp,112
 131              		.cfi_def_cfa 8, 0
  19:src/interruptRoutine.cpp ****     //bitni sistemski registri
  20:src/interruptRoutine.cpp ****     uint64 scause, sepc, sstatus;
 132              		.loc 3 20 5
  21:src/interruptRoutine.cpp ****     __asm__ volatile("csrr %[scause], scause":[scause] "=r"(scause): : "a5", "a0", "a1", "a2", "a3"
 133              		.loc 3 21 5
 134              		.loc 3 21 119 is_stmt 0
 135              	#APP
 136              	# 21 "src/interruptRoutine.cpp" 1
  22              	    __asm__ volatile("csrr %[sepc], sepc":[sepc] "=r"(sepc): : "a5", "a0", "a1", "a2", "a3", "a4", 
 137              		csrr t1, scause
 138              	# 0 "" 2
 139              	#NO_APP
 140 0018 233C64FC 		sd	t1,-40(s0)
 141              	.LVL7:
 142              		.loc 3 22 5 is_stmt 1
 143              		.loc 3 22 111 is_stmt 0
 144              	#APP
 145              	# 22 "src/interruptRoutine.cpp" 1
  23              	    __asm__ volatile("csrr %[stat], sstatus":[stat] "=r"(sstatus): : "a5", "a0", "a1", "a2", "a3", 
 146              		csrr t1, sepc
 147              	# 0 "" 2
 148              	.LVL8:
 149              	#NO_APP
 150 0020 233864FC 		sd	t1,-48(s0)
 151              	.LVL9:
 152              		.loc 3 23 5 is_stmt 1
 153              		.loc 3 23 117 is_stmt 0
 154              	#APP
 155              	# 23 "src/interruptRoutine.cpp" 1
  24              	
 156              		csrr t1, sstatus
 157              	# 0 "" 2
 158              	.LVL10:
 159              	#NO_APP
 160 0028 233464FC 		sd	t1,-56(s0)
 161              	.LVL11:
  25:src/interruptRoutine.cpp ****     //argumenti preneti sistemskom pozivu
  26:src/interruptRoutine.cpp ****     uint64 a0, a1, a2, a3, a4;
 162              		.loc 3 26 5 is_stmt 1
  27:src/interruptRoutine.cpp ****     //uint64 a5, a6, a7;
  28:src/interruptRoutine.cpp ****     __asm__ volatile("mv %[ax], a0":[ax] "=r"(a0): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7"
 163              		.loc 3 28 5
 164              		.loc 3 28 101 is_stmt 0
 165              	#APP
 166              	# 28 "src/interruptRoutine.cpp" 1
  29              	    __asm__ volatile("mv %[ax], a1":[ax] "=r"(a1): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7"
 167              		mv t1, a0
 168              	# 0 "" 2
 169              	.LVL12:
 170              	#NO_APP
 171 0030 233064FC 		sd	t1,-64(s0)
 172              	.LVL13:
 173              		.loc 3 29 5 is_stmt 1
 174              		.loc 3 29 101 is_stmt 0
 175              	#APP
GAS LISTING /tmp/ccxXkH1N.s 			page 6


 176              	# 29 "src/interruptRoutine.cpp" 1
  30              	    __asm__ volatile("mv %[ax], a2":[ax] "=r"(a2): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7"
 177              		mv t1, a1
 178              	# 0 "" 2
 179              	.LVL14:
 180              	#NO_APP
 181 0038 233C64FA 		sd	t1,-72(s0)
 182              	.LVL15:
 183              		.loc 3 30 5 is_stmt 1
 184              		.loc 3 30 101 is_stmt 0
 185              	#APP
 186              	# 30 "src/interruptRoutine.cpp" 1
  31              	    __asm__ volatile("mv %[ax], a3":[ax] "=r"(a3): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7"
 187              		mv t1, a2
 188              	# 0 "" 2
 189              	.LVL16:
 190              	#NO_APP
 191 0040 233864FA 		sd	t1,-80(s0)
 192              	.LVL17:
 193              		.loc 3 31 5 is_stmt 1
 194              		.loc 3 31 101 is_stmt 0
 195              	#APP
 196              	# 31 "src/interruptRoutine.cpp" 1
  32              	    __asm__ volatile("mv %[ax], a4":[ax] "=r"(a4): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7"
 197              		mv t1, a3
 198              	# 0 "" 2
 199              	.LVL18:
 200              	#NO_APP
 201 0048 233464FA 		sd	t1,-88(s0)
 202              	.LVL19:
 203              		.loc 3 32 5 is_stmt 1
 204              		.loc 3 32 101 is_stmt 0
 205              	#APP
 206              	# 32 "src/interruptRoutine.cpp" 1
  33              	//    __asm__ volatile("mv %[ax], a5":[ax] "=r"(a5): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a
 207              		mv t1, a4
 208              	# 0 "" 2
 209              	.LVL20:
 210              	#NO_APP
 211 0050 233064FA 		sd	t1,-96(s0)
 212              	.LVL21:
  34:src/interruptRoutine.cpp **** //    __asm__ volatile("mv %[ax], a6":[ax] "=r"(a6): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a
  35:src/interruptRoutine.cpp **** //    __asm__ volatile("mv %[ax], a7":[ax] "=r"(a7): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a
  36:src/interruptRoutine.cpp **** 
  37:src/interruptRoutine.cpp ****     if (scause == 0x9 || scause == 0x8) {
 213              		.loc 3 37 5 is_stmt 1
 214              	.LBB26:
 215 0054 033784FD 		ld	a4,-40(s0)
 216 0058 93079000 		li	a5,9
 217 005c 6308F700 		beq	a4,a5,.L7
 218              		.loc 3 37 23 is_stmt 0 discriminator 1
 219 0060 033784FD 		ld	a4,-40(s0)
 220 0064 93078000 		li	a5,8
 221 0068 6316F746 		bne	a4,a5,.L8
 222              	.L7:
 223              	.LBB27:
  38:src/interruptRoutine.cpp ****         //prekid zbog poziva ecall
GAS LISTING /tmp/ccxXkH1N.s 			page 7


  39:src/interruptRoutine.cpp ****         switch (a0) {
 224              		.loc 3 39 9 is_stmt 1
 225              	.LBB28:
 226 006c 033704FC 		ld	a4,-64(s0)
 227 0070 93071008 		li	a5,129
 228 0074 630CF734 		beq	a4,a5,.L9
 229 0078 033704FC 		ld	a4,-64(s0)
 230 007c 93071008 		li	a5,129
 231 0080 63E6E738 		bgtu	a4,a5,.L10
 232 0084 033704FC 		ld	a4,-64(s0)
 233 0088 93073004 		li	a5,67
 234 008c 63E2E704 		bgtu	a4,a5,.L11
 235 0090 833704FC 		ld	a5,-64(s0)
 236 0094 638C0736 		beqz	a5,.L10
 237 0098 033704FC 		ld	a4,-64(s0)
 238 009c 93073004 		li	a5,67
 239 00a0 63E6E736 		bgtu	a4,a5,.L10
 240 00a4 833704FC 		ld	a5,-64(s0)
 241 00a8 13972700 		slli	a4,a5,2
 242 00ac 97070000 		lla	a5,.L13
 242      93870700 
 243 00b4 B307F700 		add	a5,a4,a5
 244 00b8 83A70700 		lw	a5,0(a5)
 245 00bc 1B870700 		sext.w	a4,a5
 246 00c0 97070000 		lla	a5,.L13
 246      93870700 
 247 00c8 B307F700 		add	a5,a4,a5
 248 00cc 67800700 		jr	a5
 249              		.section	.rodata
 250 0059 000000   		.align	2
 251              		.align	2
 252              	.L13:
 253 005c 00000000 		.word	.L10-.L13
 254 0060 00000000 		.word	.L26-.L13
 255 0064 00000000 		.word	.L25-.L13
 256 0068 00000000 		.word	.L10-.L13
 257 006c 00000000 		.word	.L10-.L13
 258 0070 00000000 		.word	.L10-.L13
 259 0074 00000000 		.word	.L10-.L13
 260 0078 00000000 		.word	.L10-.L13
 261 007c 00000000 		.word	.L10-.L13
 262 0080 00000000 		.word	.L10-.L13
 263 0084 00000000 		.word	.L10-.L13
 264 0088 00000000 		.word	.L10-.L13
 265 008c 00000000 		.word	.L10-.L13
 266 0090 00000000 		.word	.L10-.L13
 267 0094 00000000 		.word	.L10-.L13
 268 0098 00000000 		.word	.L10-.L13
 269 009c 00000000 		.word	.L10-.L13
 270 00a0 00000000 		.word	.L24-.L13
 271 00a4 00000000 		.word	.L23-.L13
 272 00a8 00000000 		.word	.L22-.L13
 273 00ac 00000000 		.word	.L21-.L13
 274 00b0 00000000 		.word	.L10-.L13
 275 00b4 00000000 		.word	.L10-.L13
 276 00b8 00000000 		.word	.L10-.L13
 277 00bc 00000000 		.word	.L10-.L13
GAS LISTING /tmp/ccxXkH1N.s 			page 8


 278 00c0 00000000 		.word	.L10-.L13
 279 00c4 00000000 		.word	.L10-.L13
 280 00c8 00000000 		.word	.L10-.L13
 281 00cc 00000000 		.word	.L10-.L13
 282 00d0 00000000 		.word	.L10-.L13
 283 00d4 00000000 		.word	.L10-.L13
 284 00d8 00000000 		.word	.L10-.L13
 285 00dc 00000000 		.word	.L10-.L13
 286 00e0 00000000 		.word	.L20-.L13
 287 00e4 00000000 		.word	.L19-.L13
 288 00e8 00000000 		.word	.L18-.L13
 289 00ec 00000000 		.word	.L17-.L13
 290 00f0 00000000 		.word	.L10-.L13
 291 00f4 00000000 		.word	.L10-.L13
 292 00f8 00000000 		.word	.L10-.L13
 293 00fc 00000000 		.word	.L10-.L13
 294 0100 00000000 		.word	.L10-.L13
 295 0104 00000000 		.word	.L10-.L13
 296 0108 00000000 		.word	.L10-.L13
 297 010c 00000000 		.word	.L10-.L13
 298 0110 00000000 		.word	.L10-.L13
 299 0114 00000000 		.word	.L10-.L13
 300 0118 00000000 		.word	.L10-.L13
 301 011c 00000000 		.word	.L10-.L13
 302 0120 00000000 		.word	.L16-.L13
 303 0124 00000000 		.word	.L10-.L13
 304 0128 00000000 		.word	.L10-.L13
 305 012c 00000000 		.word	.L10-.L13
 306 0130 00000000 		.word	.L10-.L13
 307 0134 00000000 		.word	.L10-.L13
 308 0138 00000000 		.word	.L10-.L13
 309 013c 00000000 		.word	.L10-.L13
 310 0140 00000000 		.word	.L10-.L13
 311 0144 00000000 		.word	.L10-.L13
 312 0148 00000000 		.word	.L10-.L13
 313 014c 00000000 		.word	.L10-.L13
 314 0150 00000000 		.word	.L10-.L13
 315 0154 00000000 		.word	.L10-.L13
 316 0158 00000000 		.word	.L10-.L13
 317 015c 00000000 		.word	.L10-.L13
 318 0160 00000000 		.word	.L15-.L13
 319 0164 00000000 		.word	.L14-.L13
 320 0168 00000000 		.word	.L12-.L13
 321              		.text
 322              	.L11:
 323 00d0 033704FC 		ld	a4,-64(s0)
 324 00d4 93070008 		li	a5,128
 325 00d8 6304F72A 		beq	a4,a5,.L27
 326 00dc 6F000033 		j	.L10
 327              	.L26:
 328              	.LBB29:
  40:src/interruptRoutine.cpp ****             case 0x01:
 329              		.loc 3 40 13
  41:src/interruptRoutine.cpp ****                 //mem_alloc
  42:src/interruptRoutine.cpp ****                 //a1 = broj blokova koje treba alocirati
  43:src/interruptRoutine.cpp ****                 KMemory::kmalloc((size_t)a1);
 330              		.loc 3 43 17
GAS LISTING /tmp/ccxXkH1N.s 			page 9


 331              		.loc 3 43 33 is_stmt 0
 332 00e0 033584FB 		ld	a0,-72(s0)
 333 00e4 97000000 		call	_ZN7KMemory7kmallocEm@plt
 333      E7800000 
 334              	.LVL22:
  44:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 335              		.loc 3 44 17 is_stmt 1
 336              		.loc 3 44 50 is_stmt 0
 337              	#APP
 338              	# 44 "src/interruptRoutine.cpp" 1
  45              	                break;
 339              		sd a0, 80(s0)
 340              	# 0 "" 2
 341              		.loc 3 45 17 is_stmt 1
 342              	#NO_APP
 343 00f0 6F00003C 		j	.L28
 344              	.LVL23:
 345              	.L25:
  46:src/interruptRoutine.cpp ****             case 0x02:
 346              		.loc 3 46 13
  47:src/interruptRoutine.cpp ****                 //mem_free
  48:src/interruptRoutine.cpp ****                 //a1 = pokazivac na memoriju koju dealociramo, dobijen sa mem_alloc
  49:src/interruptRoutine.cpp ****                 KMemory::kfree((void*)a1);
 347              		.loc 3 49 17
 348              		.loc 3 49 31 is_stmt 0
 349 00f4 833784FB 		ld	a5,-72(s0)
 350 00f8 13850700 		mv	a0,a5
 351 00fc 97000000 		call	_ZN7KMemory5kfreeEPv@plt
 351      E7800000 
 352              	.LVL24:
  50:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 353              		.loc 3 50 17 is_stmt 1
 354              		.loc 3 50 50 is_stmt 0
 355              	#APP
 356              	# 50 "src/interruptRoutine.cpp" 1
  51              	                break;
 357              		sd a0, 80(s0)
 358              	# 0 "" 2
 359              		.loc 3 51 17 is_stmt 1
 360              	#NO_APP
 361 0108 6F00803A 		j	.L28
 362              	.LVL25:
 363              	.L24:
  52:src/interruptRoutine.cpp ****             case 0x11:
 364              		.loc 3 52 13
  53:src/interruptRoutine.cpp ****                 //thread_create
  54:src/interruptRoutine.cpp ****                 //a1 = pokazivac na rucku u koju upisujemo identifikator niti(adresa u memoriji)
  55:src/interruptRoutine.cpp ****                 //a2 = pokazivac na funkciju koju nit treba da izvrsava
  56:src/interruptRoutine.cpp ****                 //a3 = argumenti funkcije koju nit treba da izvrsava
  57:src/interruptRoutine.cpp ****                 //a4 = poslednja lokacija alociranog steka(najniza adresa)
  58:src/interruptRoutine.cpp ****                 *((thread_t*)a1) = TCB::createThread((TCB::Body)a2, (void*)a3, (uint64*)a4);
 365              		.loc 3 58 17
 366              		.loc 3 58 53 is_stmt 0
 367 010c 833704FB 		ld	a5,-80(s0)
 368 0110 033784FA 		ld	a4,-88(s0)
 369 0114 833604FA 		ld	a3,-96(s0)
 370              		.loc 3 58 17
GAS LISTING /tmp/ccxXkH1N.s 			page 10


 371 0118 833484FB 		ld	s1,-72(s0)
 372              		.loc 3 58 53
 373 011c 13860600 		mv	a2,a3
 374 0120 93050700 		mv	a1,a4
 375 0124 13850700 		mv	a0,a5
 376 0128 97000000 		call	_ZN3TCB12createThreadEPFvPvES0_Pm@plt
 376      E7800000 
 377              	.LVL26:
 378 0130 93070500 		mv	a5,a0
 379              		.loc 3 58 34
 380 0134 23B0F400 		sd	a5,0(s1)
  59:src/interruptRoutine.cpp ****                 if (*((thread_t*)a1) != nullptr) {
 381              		.loc 3 59 17 is_stmt 1
 382              		.loc 3 59 21 is_stmt 0
 383 0138 833784FB 		ld	a5,-72(s0)
 384 013c 83B70700 		ld	a5,0(a5)
 385              		.loc 3 59 17
 386 0140 63880702 		beqz	a5,.L29
  60:src/interruptRoutine.cpp ****                     if ((TCB::Body)a2 != (TCB::Body)main) {
 387              		.loc 3 60 21 is_stmt 1
 388              		.loc 3 60 39 is_stmt 0
 389 0144 033704FB 		ld	a4,-80(s0)
 390              		.loc 3 60 21
 391 0148 97070000 		la	a5,main
 391      83B70700 
 392 0150 630CF700 		beq	a4,a5,.L30
  61:src/interruptRoutine.cpp ****                         Scheduler::put(*((thread_t*)a1));
 393              		.loc 3 61 25 is_stmt 1
 394              		.loc 3 61 39 is_stmt 0
 395 0154 833784FB 		ld	a5,-72(s0)
 396 0158 83B70700 		ld	a5,0(a5)
 397 015c 13850700 		mv	a0,a5
 398 0160 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 398      E7800000 
 399              	.LVL27:
 400              	.L30:
  62:src/interruptRoutine.cpp ****                     }
  63:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, 0");
 401              		.loc 3 63 21 is_stmt 1
 402              		.loc 3 63 49 is_stmt 0
 403              	#APP
 404              	# 63 "src/interruptRoutine.cpp" 1
  64              	                } else {
 405              		li a0, 0
 406              	# 0 "" 2
 407              	#NO_APP
 408 016c 6F008000 		j	.L31
 409              	.L29:
  65:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, -1");
 410              		.loc 3 65 21 is_stmt 1
 411              		.loc 3 65 50 is_stmt 0
 412              	#APP
 413              	# 65 "src/interruptRoutine.cpp" 1
  66              	                }
 414              		li a0, -1
 415              	# 0 "" 2
 416              	#NO_APP
GAS LISTING /tmp/ccxXkH1N.s 			page 11


 417              	.L31:
  67:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 418              		.loc 3 67 17 is_stmt 1
 419              		.loc 3 67 50 is_stmt 0
 420              	#APP
 421              	# 67 "src/interruptRoutine.cpp" 1
  68              	                break;
 422              		sd a0, 80(s0)
 423              	# 0 "" 2
 424              		.loc 3 68 17 is_stmt 1
 425              	#NO_APP
 426 0178 6F008033 		j	.L28
 427              	.LVL28:
 428              	.L23:
  69:src/interruptRoutine.cpp ****             case 0x12:
 429              		.loc 3 69 13
  70:src/interruptRoutine.cpp ****                 //thread_exit
  71:src/interruptRoutine.cpp ****                 TCB::getRunning()->setStatus(TCB::FINISHED);
 430              		.loc 3 71 17
 431              		.loc 3 71 45 is_stmt 0
 432 017c 97000000 		call	_ZN3TCB10getRunningEv
 432      E7800000 
 433              	.LVL29:
 434 0184 93070500 		mv	a5,a0
 435 0188 93055000 		li	a1,5
 436 018c 13850700 		mv	a0,a5
 437 0190 97000000 		call	_ZN3TCB9setStatusENS_12ThreadStatusE
 437      E7800000 
 438              	.LVL30:
  72:src/interruptRoutine.cpp ****                 TCB::releaseJoined();
 439              		.loc 3 72 17 is_stmt 1
 440              		.loc 3 72 35 is_stmt 0
 441 0198 97000000 		call	_ZN3TCB13releaseJoinedEv@plt
 441      E7800000 
 442              	.LVL31:
  73:src/interruptRoutine.cpp ****                 __asm__ volatile("li a0, 0");
 443              		.loc 3 73 17 is_stmt 1
 444              		.loc 3 73 45 is_stmt 0
 445              	#APP
 446              	# 73 "src/interruptRoutine.cpp" 1
  74              	                __asm__ volatile("sd a0, 80(s0)");
 447              		li a0, 0
 448              	# 0 "" 2
 449              		.loc 3 74 17 is_stmt 1
 450              		.loc 3 74 50 is_stmt 0
 451              	# 74 "src/interruptRoutine.cpp" 1
  75              	                TCB::dispatch();
 452              		sd a0, 80(s0)
 453              	# 0 "" 2
 454              		.loc 3 75 17 is_stmt 1
 455              		.loc 3 75 30 is_stmt 0
 456              	#NO_APP
 457 01a8 97000000 		call	_ZN3TCB8dispatchEv@plt
 457      E7800000 
 458              	.LVL32:
  76:src/interruptRoutine.cpp ****                 break;
 459              		.loc 3 76 17 is_stmt 1
GAS LISTING /tmp/ccxXkH1N.s 			page 12


 460 01b0 6F000030 		j	.L28
 461              	.LVL33:
 462              	.L22:
  77:src/interruptRoutine.cpp ****             case 0x13:
 463              		.loc 3 77 13
  78:src/interruptRoutine.cpp ****                 //thread_dispatch
  79:src/interruptRoutine.cpp ****                 TCB::dispatch();
 464              		.loc 3 79 17
 465              		.loc 3 79 30 is_stmt 0
 466 01b4 97000000 		call	_ZN3TCB8dispatchEv@plt
 466      E7800000 
 467              	.LVL34:
  80:src/interruptRoutine.cpp ****                 break;
 468              		.loc 3 80 17 is_stmt 1
 469 01bc 6F00402F 		j	.L28
 470              	.LVL35:
 471              	.L21:
  81:src/interruptRoutine.cpp ****             case 0x14:
 472              		.loc 3 81 13
  82:src/interruptRoutine.cpp ****                 //thread_join
  83:src/interruptRoutine.cpp ****                 //a1 = rucka niti na koju tekuca nit treba da ceka
  84:src/interruptRoutine.cpp ****                 TCB::threadJoin((thread_t)a1);
 473              		.loc 3 84 17
 474              		.loc 3 84 32 is_stmt 0
 475 01c0 833784FB 		ld	a5,-72(s0)
 476 01c4 13850700 		mv	a0,a5
 477 01c8 97000000 		call	_ZN3TCB10threadJoinEPS_@plt
 477      E7800000 
 478              	.LVL36:
  85:src/interruptRoutine.cpp ****                 TCB::dispatch();
 479              		.loc 3 85 17 is_stmt 1
 480              		.loc 3 85 30 is_stmt 0
 481 01d0 97000000 		call	_ZN3TCB8dispatchEv@plt
 481      E7800000 
 482              	.LVL37:
  86:src/interruptRoutine.cpp ****                 break;
 483              		.loc 3 86 17 is_stmt 1
 484 01d8 6F00802D 		j	.L28
 485              	.LVL38:
 486              	.L20:
  87:src/interruptRoutine.cpp ****             case 0x21:
 487              		.loc 3 87 13
  88:src/interruptRoutine.cpp ****                 //sem_open
  89:src/interruptRoutine.cpp ****                 //a1 = pokazivac na rucku semafora, u koju se upisuje adresa semafora u memoriji
  90:src/interruptRoutine.cpp ****                 *((sem_t*)a1) = KSem::initSem((uint)a2);
 488              		.loc 3 90 17
 489              		.loc 3 90 46 is_stmt 0
 490 01dc 833704FB 		ld	a5,-80(s0)
 491 01e0 9B870700 		sext.w	a5,a5
 492              		.loc 3 90 17
 493 01e4 833484FB 		ld	s1,-72(s0)
 494              		.loc 3 90 46
 495 01e8 13850700 		mv	a0,a5
 496 01ec 97000000 		call	_ZN4KSem7initSemEj@plt
 496      E7800000 
 497              	.LVL39:
 498 01f4 93070500 		mv	a5,a0
GAS LISTING /tmp/ccxXkH1N.s 			page 13


 499              		.loc 3 90 31
 500 01f8 23B0F400 		sd	a5,0(s1)
  91:src/interruptRoutine.cpp ****                 if (*((sem_t*)a1) != nullptr) {
 501              		.loc 3 91 17 is_stmt 1
 502              		.loc 3 91 21 is_stmt 0
 503 01fc 833784FB 		ld	a5,-72(s0)
 504 0200 83B70700 		ld	a5,0(a5)
 505              		.loc 3 91 17
 506 0204 63860700 		beqz	a5,.L32
  92:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, 0");
 507              		.loc 3 92 21 is_stmt 1
 508              		.loc 3 92 49 is_stmt 0
 509              	#APP
 510              	# 92 "src/interruptRoutine.cpp" 1
  93              	                } else {
 511              		li a0, 0
 512              	# 0 "" 2
 513              	#NO_APP
 514 020c 6F008000 		j	.L33
 515              	.L32:
  94:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, -1");
 516              		.loc 3 94 21 is_stmt 1
 517              		.loc 3 94 50 is_stmt 0
 518              	#APP
 519              	# 94 "src/interruptRoutine.cpp" 1
  95              	                }
 520              		li a0, -1
 521              	# 0 "" 2
 522              	#NO_APP
 523              	.L33:
  96:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 524              		.loc 3 96 17 is_stmt 1
 525              		.loc 3 96 50 is_stmt 0
 526              	#APP
 527              	# 96 "src/interruptRoutine.cpp" 1
  97              	                break;
 528              		sd a0, 80(s0)
 529              	# 0 "" 2
 530              		.loc 3 97 17 is_stmt 1
 531              	#NO_APP
 532 0218 6F008029 		j	.L28
 533              	.LVL40:
 534              	.L19:
  98:src/interruptRoutine.cpp ****             case 0x22:
 535              		.loc 3 98 13
  99:src/interruptRoutine.cpp ****                 //sem_close
 100:src/interruptRoutine.cpp ****                 //a1 = rucka semafora
 101:src/interruptRoutine.cpp ****                 KSem::closeSem((sem_t)a1);
 536              		.loc 3 101 17
 537              		.loc 3 101 31 is_stmt 0
 538 021c 833784FB 		ld	a5,-72(s0)
 539 0220 13850700 		mv	a0,a5
 540 0224 97000000 		call	_ZN4KSem8closeSemEPS_@plt
 540      E7800000 
 541              	.LVL41:
 102:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 542              		.loc 3 102 17 is_stmt 1
GAS LISTING /tmp/ccxXkH1N.s 			page 14


 543              		.loc 3 102 50 is_stmt 0
 544              	#APP
 545              	# 102 "src/interruptRoutine.cpp" 1
 103              	                delete (sem_t)a1;
 546              		sd a0, 80(s0)
 547              	# 0 "" 2
 548              		.loc 3 103 17 is_stmt 1
 549              		.loc 3 103 24 is_stmt 0
 550              	#NO_APP
 551 0230 833484FB 		ld	s1,-72(s0)
 552              		.loc 3 103 33
 553 0234 63800426 		beqz	s1,.L49
 554              		.loc 3 103 31 discriminator 1
 555 0238 13850400 		mv	a0,s1
 556 023c 97000000 		call	_ZN4KSemD1Ev
 556      E7800000 
 557              	.LVL42:
 558 0244 13850400 		mv	a0,s1
 559 0248 97000000 		call	_ZN4KSemdlEPv@plt
 559      E7800000 
 560              	.LVL43:
 104:src/interruptRoutine.cpp ****                 break;
 561              		.loc 3 104 17 is_stmt 1 discriminator 1
 562 0250 6F004024 		j	.L49
 563              	.LVL44:
 564              	.L18:
 105:src/interruptRoutine.cpp ****             case 0x23:
 565              		.loc 3 105 13
 106:src/interruptRoutine.cpp ****                 //sem_wait
 107:src/interruptRoutine.cpp ****                 //a1 = rucka semafora
 108:src/interruptRoutine.cpp ****                 ((sem_t)a1)->wait();
 566              		.loc 3 108 17
 567              		.loc 3 108 34 is_stmt 0
 568 0254 833784FB 		ld	a5,-72(s0)
 569 0258 13850700 		mv	a0,a5
 570 025c 97000000 		call	_ZN4KSem4waitEv@plt
 570      E7800000 
 571              	.LVL45:
 109:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 572              		.loc 3 109 17 is_stmt 1
 573              		.loc 3 109 50 is_stmt 0
 574              	#APP
 575              	# 109 "src/interruptRoutine.cpp" 1
 110              	                break;
 576              		sd a0, 80(s0)
 577              	# 0 "" 2
 578              		.loc 3 110 17 is_stmt 1
 579              	#NO_APP
 580 0268 6F008024 		j	.L28
 581              	.LVL46:
 582              	.L17:
 111:src/interruptRoutine.cpp ****             case 0x24:
 583              		.loc 3 111 13
 112:src/interruptRoutine.cpp ****                 //sem_signal
 113:src/interruptRoutine.cpp ****                 //a1 = rucka semafora
 114:src/interruptRoutine.cpp ****                 ((sem_t)a1)->signal();
 584              		.loc 3 114 17
GAS LISTING /tmp/ccxXkH1N.s 			page 15


 585              		.loc 3 114 36 is_stmt 0
 586 026c 833784FB 		ld	a5,-72(s0)
 587 0270 13850700 		mv	a0,a5
 588 0274 97000000 		call	_ZN4KSem6signalEv@plt
 588      E7800000 
 589              	.LVL47:
 115:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 590              		.loc 3 115 17 is_stmt 1
 591              		.loc 3 115 50 is_stmt 0
 592              	#APP
 593              	# 115 "src/interruptRoutine.cpp" 1
 116              	                break;
 594              		sd a0, 80(s0)
 595              	# 0 "" 2
 596              		.loc 3 116 17 is_stmt 1
 597              	#NO_APP
 598 0280 6F000023 		j	.L28
 599              	.LVL48:
 600              	.L16:
 117:src/interruptRoutine.cpp ****             case 0x31:
 601              		.loc 3 117 13
 118:src/interruptRoutine.cpp ****                 //time_sleep
 119:src/interruptRoutine.cpp ****                 //a1 = broj perioda tajmera na koji se uspavljuje tekuca nit
 120:src/interruptRoutine.cpp ****                 if ((time_t)a1 > 0) {
 602              		.loc 3 120 17
 603 0284 833784FB 		ld	a5,-72(s0)
 604 0288 63860700 		beqz	a5,.L35
 121:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, 0");
 605              		.loc 3 121 21
 606              		.loc 3 121 49 is_stmt 0
 607              	#APP
 608              	# 121 "src/interruptRoutine.cpp" 1
 122              	                } else {
 609              		li a0, 0
 610              	# 0 "" 2
 611              	#NO_APP
 612 0290 6F008000 		j	.L36
 613              	.L35:
 123:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, -1");
 614              		.loc 3 123 21 is_stmt 1
 615              		.loc 3 123 50 is_stmt 0
 616              	#APP
 617              	# 123 "src/interruptRoutine.cpp" 1
 124              	                }
 618              		li a0, -1
 619              	# 0 "" 2
 620              	#NO_APP
 621              	.L36:
 125:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 622              		.loc 3 125 17 is_stmt 1
 623              		.loc 3 125 50 is_stmt 0
 624              	#APP
 625              	# 125 "src/interruptRoutine.cpp" 1
 126              	                if ((time_t)a1 > 0) {
 626              		sd a0, 80(s0)
 627              	# 0 "" 2
 628              		.loc 3 126 17 is_stmt 1
GAS LISTING /tmp/ccxXkH1N.s 			page 16


 629              	#NO_APP
 630 029c 833784FB 		ld	a5,-72(s0)
 631 02a0 638E071E 		beqz	a5,.L50
 127:src/interruptRoutine.cpp ****                     Scheduler::putToSleep(TCB::getRunning(), (time_t)a1);
 632              		.loc 3 127 21
 633              		.loc 3 127 42 is_stmt 0
 634 02a4 97000000 		call	_ZN3TCB10getRunningEv
 634      E7800000 
 635              	.LVL49:
 636 02ac 93070500 		mv	a5,a0
 637 02b0 833584FB 		ld	a1,-72(s0)
 638 02b4 13850700 		mv	a0,a5
 639 02b8 97000000 		call	_ZN9Scheduler10putToSleepEP3TCBm@plt
 639      E7800000 
 640              	.LVL50:
 128:src/interruptRoutine.cpp ****                     TCB::dispatch();
 641              		.loc 3 128 21 is_stmt 1
 642              		.loc 3 128 34 is_stmt 0
 643 02c0 97000000 		call	_ZN3TCB8dispatchEv@plt
 643      E7800000 
 644              	.LVL51:
 129:src/interruptRoutine.cpp ****                 }
 130:src/interruptRoutine.cpp ****                 break;
 645              		.loc 3 130 17 is_stmt 1
 646 02c8 6F00401D 		j	.L50
 647              	.LVL52:
 648              	.L15:
 131:src/interruptRoutine.cpp ****             case 0x41:
 649              		.loc 3 131 13
 132:src/interruptRoutine.cpp ****                 //getc
 133:src/interruptRoutine.cpp ****                 KConsole::kgetc();
 650              		.loc 3 133 17
 651              		.loc 3 133 32 is_stmt 0
 652 02cc 97000000 		call	_ZN8KConsole5kgetcEv@plt
 652      E7800000 
 653              	.LVL53:
 134:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 654              		.loc 3 134 17 is_stmt 1
 655              		.loc 3 134 50 is_stmt 0
 656              	#APP
 657              	# 134 "src/interruptRoutine.cpp" 1
 135              	                break;
 658              		sd a0, 80(s0)
 659              	# 0 "" 2
 660              		.loc 3 135 17 is_stmt 1
 661              	#NO_APP
 662 02d8 6F00801D 		j	.L28
 663              	.LVL54:
 664              	.L14:
 136:src/interruptRoutine.cpp ****             case 0x42:
 665              		.loc 3 136 13
 137:src/interruptRoutine.cpp ****                 //putc
 138:src/interruptRoutine.cpp ****                 //a1 = karakter koji se upisuje u bafer za ispis na konzolu
 139:src/interruptRoutine.cpp ****                 KConsole::kputc((char)a1);
 666              		.loc 3 139 17
 667              		.loc 3 139 32 is_stmt 0
 668 02dc 833784FB 		ld	a5,-72(s0)
GAS LISTING /tmp/ccxXkH1N.s 			page 17


 669 02e0 93F7F70F 		andi	a5,a5,0xff
 670 02e4 13850700 		mv	a0,a5
 671 02e8 97000000 		call	_ZN8KConsole5kputcEc@plt
 671      E7800000 
 672              	.LVL55:
 140:src/interruptRoutine.cpp ****                 break;
 673              		.loc 3 140 17 is_stmt 1
 674 02f0 6F00001C 		j	.L28
 675              	.L12:
 141:src/interruptRoutine.cpp ****             case 0x43:
 676              		.loc 3 141 13
 142:src/interruptRoutine.cpp ****                 //flush izlaznog bafera konzole
 143:src/interruptRoutine.cpp ****                 while (KConsole::getOutputHead() != KConsole::getOutputTail()) {
 677              		.loc 3 143 17
 678              		.loc 3 143 50
 679              		.loc 3 143 47 is_stmt 0
 680 02f4 97000000 		call	_ZN8KConsole13getOutputHeadEv
 680      E7800000 
 681              	.LVL56:
 682 02fc 93070500 		mv	a5,a0
 683 0300 93840700 		mv	s1,a5
 684              		.loc 3 143 76
 685 0304 97000000 		call	_ZN8KConsole13getOutputTailEv
 685      E7800000 
 686              	.LVL57:
 687 030c 93070500 		mv	a5,a0
 688              		.loc 3 143 50
 689 0310 13870400 		mv	a4,s1
 690 0314 B307F740 		sub	a5,a4,a5
 691 0318 B337F000 		snez	a5,a5
 692 031c 93F7F70F 		andi	a5,a5,0xff
 693 0320 63820718 		beqz	a5,.L51
 694              	.LBB30:
 144:src/interruptRoutine.cpp ****                     char c = KConsole::getFromOutput();
 695              		.loc 3 144 21 is_stmt 1
 696              		.loc 3 144 53 is_stmt 0
 697 0324 97000000 		call	_ZN8KConsole13getFromOutputEv@plt
 697      E7800000 
 698              	.LVL58:
 699 032c 93070500 		mv	a5,a0
 700 0330 A30BF4F8 		sb	a5,-105(s0)
 701              	.LVL59:
 702              	.L40:
 145:src/interruptRoutine.cpp ****                     while (!(KConsole::getSRvalue() & CONSOLE_TX_STATUS_BIT)) {}
 703              		.loc 3 145 21 is_stmt 1
 704              		.loc 3 145 28
 705              		.loc 3 145 50 is_stmt 0
 706 0334 97000000 		call	_ZN8KConsole10getSRvalueEv
 706      E7800000 
 707              	.LVL60:
 708 033c 93070500 		mv	a5,a0
 709              		.loc 3 145 53
 710 0340 93F70702 		andi	a5,a5,32
 711              		.loc 3 145 28
 712 0344 93B71700 		seqz	a5,a5
 713 0348 93F7F70F 		andi	a5,a5,0xff
 714 034c 63840700 		beqz	a5,.L39
GAS LISTING /tmp/ccxXkH1N.s 			page 18


 715              		.loc 3 145 21
 716 0350 6FF05FFE 		j	.L40
 717              	.L39:
 146:src/interruptRoutine.cpp ****                     KConsole::setDRvalue(c);
 718              		.loc 3 146 21 is_stmt 1
 719              		.loc 3 146 41 is_stmt 0
 720 0354 834774F9 		lbu	a5,-105(s0)
 721 0358 13850700 		mv	a0,a5
 722 035c 97000000 		call	_ZN8KConsole10setDRvalueEc
 722      E7800000 
 723              	.LVL61:
 147:src/interruptRoutine.cpp ****                     sem_signal(KConsole::getOutputBufferHasSpace());
 724              		.loc 3 147 21 is_stmt 1
 725              		.loc 3 147 31 is_stmt 0
 726 0364 97000000 		call	_ZN8KConsole23getOutputBufferHasSpaceEv
 726      E7800000 
 727              	.LVL62:
 728 036c 93070500 		mv	a5,a0
 729 0370 13850700 		mv	a0,a5
 730 0374 97000000 		call	_Z10sem_signalP4KSem@plt
 730      E7800000 
 731              	.LVL63:
 732              	.LBE30:
 143:src/interruptRoutine.cpp ****                     char c = KConsole::getFromOutput();
 733              		.loc 3 143 17
 734 037c 6FF09FF7 		j	.L12
 735              	.LVL64:
 736              	.L27:
 148:src/interruptRoutine.cpp ****                 }
 149:src/interruptRoutine.cpp ****                 break;
 150:src/interruptRoutine.cpp ****             case 0x80:
 737              		.loc 3 150 13 is_stmt 1
 151:src/interruptRoutine.cpp ****                 //alloc thread
 152:src/interruptRoutine.cpp ****                 //a1 = pokazivac na rucku u koju upisujemo identifikator niti(adresa u memoriji)
 153:src/interruptRoutine.cpp ****                 //a2 = pokazivac na funkciju koju nit treba da izvrsava
 154:src/interruptRoutine.cpp ****                 //a3 = argumenti funkcije koju nit treba da izvrsava
 155:src/interruptRoutine.cpp ****                 //a4 = poslednja lokacija alociranog steka(najniza adresa)
 156:src/interruptRoutine.cpp ****                 *((thread_t*)a1) = TCB::createThread((TCB::Body)a2, (void*)a3, (uint64*)a4);
 738              		.loc 3 156 17
 739              		.loc 3 156 53 is_stmt 0
 740 0380 833704FB 		ld	a5,-80(s0)
 741 0384 033784FA 		ld	a4,-88(s0)
 742 0388 833604FA 		ld	a3,-96(s0)
 743              		.loc 3 156 17
 744 038c 833484FB 		ld	s1,-72(s0)
 745              		.loc 3 156 53
 746 0390 13860600 		mv	a2,a3
 747 0394 93050700 		mv	a1,a4
 748 0398 13850700 		mv	a0,a5
 749 039c 97000000 		call	_ZN3TCB12createThreadEPFvPvES0_Pm@plt
 749      E7800000 
 750              	.LVL65:
 751 03a4 93070500 		mv	a5,a0
 752              		.loc 3 156 34
 753 03a8 23B0F400 		sd	a5,0(s1)
 157:src/interruptRoutine.cpp ****                 if (*((thread_t*)a1) != nullptr) {
 754              		.loc 3 157 17 is_stmt 1
GAS LISTING /tmp/ccxXkH1N.s 			page 19


 755              		.loc 3 157 21 is_stmt 0
 756 03ac 833784FB 		ld	a5,-72(s0)
 757 03b0 83B70700 		ld	a5,0(a5)
 758              		.loc 3 157 17
 759 03b4 63860700 		beqz	a5,.L41
 158:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, 0");
 760              		.loc 3 158 21 is_stmt 1
 761              		.loc 3 158 49 is_stmt 0
 762              	#APP
 763              	# 158 "src/interruptRoutine.cpp" 1
 159              	                } else {
 764              		li a0, 0
 765              	# 0 "" 2
 766              	#NO_APP
 767 03bc 6F008000 		j	.L42
 768              	.L41:
 160:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, -1");
 769              		.loc 3 160 21 is_stmt 1
 770              		.loc 3 160 50 is_stmt 0
 771              	#APP
 772              	# 160 "src/interruptRoutine.cpp" 1
 161              	                }
 773              		li a0, -1
 774              	# 0 "" 2
 775              	#NO_APP
 776              	.L42:
 162:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 777              		.loc 3 162 17 is_stmt 1
 778              		.loc 3 162 50 is_stmt 0
 779              	#APP
 780              	# 162 "src/interruptRoutine.cpp" 1
 163              	                break;
 781              		sd a0, 80(s0)
 782              	# 0 "" 2
 783              		.loc 3 163 17 is_stmt 1
 784              	#NO_APP
 785 03c8 6F00800E 		j	.L28
 786              	.LVL66:
 787              	.L9:
 164:src/interruptRoutine.cpp ****             case 0x81:
 788              		.loc 3 164 13
 165:src/interruptRoutine.cpp ****                 //start thread
 166:src/interruptRoutine.cpp ****                 //a1 = rucka niti koja se stavlja u scheduler
 167:src/interruptRoutine.cpp ****                 if (((thread_t)a1)->getBody() != (TCB::Body)main) {
 789              		.loc 3 167 17
 790              		.loc 3 167 44 is_stmt 0
 791 03cc 833784FB 		ld	a5,-72(s0)
 792 03d0 13850700 		mv	a0,a5
 793 03d4 97000000 		call	_ZN3TCB7getBodyEv
 793      E7800000 
 794              	.LVL67:
 795 03dc 13070500 		mv	a4,a0
 796              		.loc 3 167 47
 797 03e0 97070000 		la	a5,main
 797      83B70700 
 798 03e8 B307F740 		sub	a5,a4,a5
 799 03ec B337F000 		snez	a5,a5
GAS LISTING /tmp/ccxXkH1N.s 			page 20


 800 03f0 93F7F70F 		andi	a5,a5,0xff
 801              		.loc 3 167 17
 802 03f4 638C070A 		beqz	a5,.L52
 168:src/interruptRoutine.cpp ****                     Scheduler::put((thread_t)a1);
 803              		.loc 3 168 21 is_stmt 1
 804              		.loc 3 168 35 is_stmt 0
 805 03f8 833784FB 		ld	a5,-72(s0)
 806 03fc 13850700 		mv	a0,a5
 807 0400 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 807      E7800000 
 808              	.LVL68:
 169:src/interruptRoutine.cpp ****                 }
 170:src/interruptRoutine.cpp ****                 break;
 809              		.loc 3 170 17 is_stmt 1
 810 0408 6F00400A 		j	.L52
 811              	.LVL69:
 812              	.L10:
 171:src/interruptRoutine.cpp ****             default:
 813              		.loc 3 171 13
 172:src/interruptRoutine.cpp ****                 printString("\nNepostojeci op code: ");
 814              		.loc 3 172 17
 815              		.loc 3 172 28 is_stmt 0
 816 040c 17050000 		lla	a0,.LC0
 816      13050500 
 817 0414 97000000 		call	_Z11printStringPKc@plt
 817      E7800000 
 818              	.LVL70:
 173:src/interruptRoutine.cpp ****                 printInt(a0);
 819              		.loc 3 173 17 is_stmt 1
 820              		.loc 3 173 25 is_stmt 0
 821 041c 833704FC 		ld	a5,-64(s0)
 822 0420 9B870700 		sext.w	a5,a5
 823 0424 13060000 		li	a2,0
 824 0428 9305A000 		li	a1,10
 825 042c 13850700 		mv	a0,a5
 826 0430 97000000 		call	_Z8printIntiii@plt
 826      E7800000 
 827              	.LVL71:
 174:src/interruptRoutine.cpp ****                 printString("\nscause: ");
 828              		.loc 3 174 17 is_stmt 1
 829              		.loc 3 174 28 is_stmt 0
 830 0438 17050000 		lla	a0,.LC1
 830      13050500 
 831 0440 97000000 		call	_Z11printStringPKc@plt
 831      E7800000 
 832              	.LVL72:
 175:src/interruptRoutine.cpp ****                 printInt(scause);
 833              		.loc 3 175 17 is_stmt 1
 834              		.loc 3 175 25 is_stmt 0
 835 0448 833784FD 		ld	a5,-40(s0)
 836 044c 9B870700 		sext.w	a5,a5
 837 0450 13060000 		li	a2,0
 838 0454 9305A000 		li	a1,10
 839 0458 13850700 		mv	a0,a5
 840 045c 97000000 		call	_Z8printIntiii@plt
 840      E7800000 
 841              	.LVL73:
GAS LISTING /tmp/ccxXkH1N.s 			page 21


 176:src/interruptRoutine.cpp ****                 printString("\nsepc: ");
 842              		.loc 3 176 17 is_stmt 1
 843              		.loc 3 176 28 is_stmt 0
 844 0464 17050000 		lla	a0,.LC2
 844      13050500 
 845 046c 97000000 		call	_Z11printStringPKc@plt
 845      E7800000 
 846              	.LVL74:
 177:src/interruptRoutine.cpp ****                 printInt(sepc);
 847              		.loc 3 177 17 is_stmt 1
 848              		.loc 3 177 25 is_stmt 0
 849 0474 833704FD 		ld	a5,-48(s0)
 850 0478 9B870700 		sext.w	a5,a5
 851 047c 13060000 		li	a2,0
 852 0480 9305A000 		li	a1,10
 853 0484 13850700 		mv	a0,a5
 854 0488 97000000 		call	_Z8printIntiii@plt
 854      E7800000 
 855              	.LVL75:
 178:src/interruptRoutine.cpp ****                 break;
 856              		.loc 3 178 17 is_stmt 1
 857 0490 6F000002 		j	.L28
 858              	.L49:
 104:src/interruptRoutine.cpp ****             case 0x23:
 859              		.loc 3 104 17 is_stmt 0
 860 0494 13000000 		nop
 861 0498 6F008001 		j	.L28
 862              	.L50:
 130:src/interruptRoutine.cpp ****             case 0x41:
 863              		.loc 3 130 17
 864 049c 13000000 		nop
 865 04a0 6F000001 		j	.L28
 866              	.L51:
 149:src/interruptRoutine.cpp ****             case 0x80:
 867              		.loc 3 149 17
 868 04a4 13000000 		nop
 869 04a8 6F008000 		j	.L28
 870              	.L52:
 170:src/interruptRoutine.cpp ****             default:
 871              		.loc 3 170 17
 872 04ac 13000000 		nop
 873              	.L28:
 874              	.LBE29:
 875              	.LBE28:
 179:src/interruptRoutine.cpp ****         }
 180:src/interruptRoutine.cpp ****         //sepc pokazuje na ecall instrukciju, treba preci na sledecu instrukciju
 181:src/interruptRoutine.cpp ****         sepc += 4;
 876              		.loc 3 181 9 is_stmt 1
 877              		.loc 3 181 14 is_stmt 0
 878 04b0 833704FD 		ld	a5,-48(s0)
 879 04b4 93874700 		addi	a5,a5,4
 880 04b8 2338F4FC 		sd	a5,-48(s0)
 881              	.LVL76:
 182:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 882              		.loc 3 182 9 is_stmt 1
 883              		.loc 3 182 66 is_stmt 0
 884 04bc 833704FD 		ld	a5,-48(s0)
GAS LISTING /tmp/ccxXkH1N.s 			page 22


 885              	#APP
 886              	# 182 "src/interruptRoutine.cpp" 1
 183              	        __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 887              		csrw sepc, a5
 888              	# 0 "" 2
 889              		.loc 3 183 9 is_stmt 1
 890              		.loc 3 183 71 is_stmt 0
 891              	#NO_APP
 892 04c4 833784FC 		ld	a5,-56(s0)
 893              	.LVL77:
 894              	#APP
 895              	# 183 "src/interruptRoutine.cpp" 1
 184              	    } else if (scause == 0x8000000000000009) {
 896              		csrw sstatus, a5
 897              	# 0 "" 2
 898              	#NO_APP
 899              	.LBE27:
 900 04cc 13000000 		nop
 901              	.LBE26:
 185:src/interruptRoutine.cpp ****         //spoljasnji hardverski prekid (od konzole)
 186:src/interruptRoutine.cpp ****         uint64 irq = plic_claim();
 187:src/interruptRoutine.cpp ****         if (irq == CONSOLE_IRQ) {
 188:src/interruptRoutine.cpp ****             if (KConsole::getSRvalue() & CONSOLE_RX_STATUS_BIT) {
 189:src/interruptRoutine.cpp ****                 //upisuje karakter sa ulaza(otkucani) u ulazni bafer KConsole
 190:src/interruptRoutine.cpp ****                 KConsole::placeInInput(KConsole::getDRvalue());
 191:src/interruptRoutine.cpp ****             }
 192:src/interruptRoutine.cpp ****         }
 193:src/interruptRoutine.cpp ****         plic_complete(irq);
 194:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 195:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 196:src/interruptRoutine.cpp ****         Riscv::mc_sip(Riscv::SIP_SEIP);
 197:src/interruptRoutine.cpp ****     } else if (scause == 0x8000000000000001) {
 198:src/interruptRoutine.cpp ****         //prekid od tajmera
 199:src/interruptRoutine.cpp ****         Scheduler::wake();
 200:src/interruptRoutine.cpp ****         TCB::getRunningTimeSlice()++;
 201:src/interruptRoutine.cpp ****         if (TCB::getRunningTimeSlice() >= TCB::getRunning()->getTimeSlice()) {
 202:src/interruptRoutine.cpp ****             TCB::dispatch();
 203:src/interruptRoutine.cpp ****         }
 204:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 205:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 206:src/interruptRoutine.cpp ****         Riscv::mc_sip(Riscv::SIP_SSIP);
 207:src/interruptRoutine.cpp ****     } else {
 208:src/interruptRoutine.cpp ****         printString("\nGreska u prekidnoj rutini\n");
 209:src/interruptRoutine.cpp ****         printString("scause: ");
 210:src/interruptRoutine.cpp ****         printInt(scause);
 211:src/interruptRoutine.cpp ****         printString("\nsepc: ");
 212:src/interruptRoutine.cpp ****         printInt(sepc);
 213:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 214:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 215:src/interruptRoutine.cpp ****     }
 216:src/interruptRoutine.cpp **** }...
 902              		.loc 3 216 1
 903 04d0 6F00C01A 		j	.L53
 904              	.LVL78:
 905              	.L8:
 906              	.LBB38:
 907              	.LBB31:
GAS LISTING /tmp/ccxXkH1N.s 			page 23


 184:src/interruptRoutine.cpp ****     } else if (scause == 0x8000000000000009) {
 908              		.loc 3 184 12 is_stmt 1
 909              	.LBB32:
 910 04d4 033784FD 		ld	a4,-40(s0)
 911              	.LVL79:
 912 04d8 9307F0FF 		li	a5,-1
 913 04dc 9397F703 		slli	a5,a5,63
 914 04e0 93879700 		addi	a5,a5,9
 915 04e4 6314F708 		bne	a4,a5,.L45
 916              	.LBB33:
 186:src/interruptRoutine.cpp ****         uint64 irq = plic_claim();
 917              		.loc 3 186 9
 186:src/interruptRoutine.cpp ****         uint64 irq = plic_claim();
 918              		.loc 3 186 32 is_stmt 0
 919 04e8 97000000 		call	plic_claim@plt
 919      E7800000 
 920              	.LVL80:
 921 04f0 93070500 		mv	a5,a0
 186:src/interruptRoutine.cpp ****         uint64 irq = plic_claim();
 922              		.loc 3 186 33
 923 04f4 233CF4F8 		sd	a5,-104(s0)
 924              	.LVL81:
 187:src/interruptRoutine.cpp ****         if (irq == CONSOLE_IRQ) {
 925              		.loc 3 187 9 is_stmt 1
 926 04f8 033784F9 		ld	a4,-104(s0)
 927 04fc 9307A000 		li	a5,10
 928 0500 631CF702 		bne	a4,a5,.L46
 188:src/interruptRoutine.cpp ****             if (KConsole::getSRvalue() & CONSOLE_RX_STATUS_BIT) {
 929              		.loc 3 188 13
 188:src/interruptRoutine.cpp ****             if (KConsole::getSRvalue() & CONSOLE_RX_STATUS_BIT) {
 930              		.loc 3 188 37 is_stmt 0
 931 0504 97000000 		call	_ZN8KConsole10getSRvalueEv
 931      E7800000 
 932              	.LVL82:
 933 050c 93070500 		mv	a5,a0
 188:src/interruptRoutine.cpp ****             if (KConsole::getSRvalue() & CONSOLE_RX_STATUS_BIT) {
 934              		.loc 3 188 40
 935 0510 93F71700 		andi	a5,a5,1
 188:src/interruptRoutine.cpp ****             if (KConsole::getSRvalue() & CONSOLE_RX_STATUS_BIT) {
 936              		.loc 3 188 63
 937 0514 B337F000 		snez	a5,a5
 938 0518 93F7F70F 		andi	a5,a5,0xff
 188:src/interruptRoutine.cpp ****             if (KConsole::getSRvalue() & CONSOLE_RX_STATUS_BIT) {
 939              		.loc 3 188 13
 940 051c 638E0700 		beqz	a5,.L46
 190:src/interruptRoutine.cpp ****                 KConsole::placeInInput(KConsole::getDRvalue());
 941              		.loc 3 190 17 is_stmt 1
 190:src/interruptRoutine.cpp ****                 KConsole::placeInInput(KConsole::getDRvalue());
 942              		.loc 3 190 60 is_stmt 0
 943 0520 97000000 		call	_ZN8KConsole10getDRvalueEv
 943      E7800000 
 944              	.LVL83:
 945 0528 93070500 		mv	a5,a0
 190:src/interruptRoutine.cpp ****                 KConsole::placeInInput(KConsole::getDRvalue());
 946              		.loc 3 190 39
 947 052c 13850700 		mv	a0,a5
 948 0530 97000000 		call	_ZN8KConsole12placeInInputEc@plt
GAS LISTING /tmp/ccxXkH1N.s 			page 24


 948      E7800000 
 949              	.LVL84:
 950              	.L46:
 193:src/interruptRoutine.cpp ****         plic_complete(irq);
 951              		.loc 3 193 9 is_stmt 1
 193:src/interruptRoutine.cpp ****         plic_complete(irq);
 952              		.loc 3 193 22 is_stmt 0
 953 0538 833784F9 		ld	a5,-104(s0)
 954 053c 9B870700 		sext.w	a5,a5
 955 0540 13850700 		mv	a0,a5
 956 0544 97000000 		call	plic_complete@plt
 956      E7800000 
 957              	.LVL85:
 194:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 958              		.loc 3 194 9 is_stmt 1
 194:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 959              		.loc 3 194 66 is_stmt 0
 960 054c 833704FD 		ld	a5,-48(s0)
 961              	#APP
 962              	# 194 "src/interruptRoutine.cpp" 1
 195:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 963              		csrw sepc, a5
 964              	# 0 "" 2
 965              		.loc 3 195 9 is_stmt 1
 195:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 966              		.loc 3 195 71 is_stmt 0
 967              	#NO_APP
 968 0554 833784FC 		ld	a5,-56(s0)
 969              	#APP
 970              	# 195 "src/interruptRoutine.cpp" 1
 196:src/interruptRoutine.cpp ****         Riscv::mc_sip(Riscv::SIP_SEIP);
 971              		csrw sstatus, a5
 972              	# 0 "" 2
 973              		.loc 3 196 9 is_stmt 1
 196:src/interruptRoutine.cpp ****         Riscv::mc_sip(Riscv::SIP_SEIP);
 974              		.loc 3 196 22 is_stmt 0
 975              	#NO_APP
 976 055c 13050020 		li	a0,512
 977 0560 97000000 		call	_ZN5Riscv6mc_sipEm
 977      E7800000 
 978              	.LVL86:
 979              	.LBE33:
 980              	.LBE32:
 981              	.LBE31:
 982              	.LBE38:
 983              		.loc 3 216 1
 984 0568 6F004011 		j	.L53
 985              	.LVL87:
 986              	.L45:
 987              	.LBB39:
 988              	.LBB36:
 989              	.LBB34:
 197:src/interruptRoutine.cpp ****     } else if (scause == 0x8000000000000001) {
 990              		.loc 3 197 12 is_stmt 1
 991 056c 033784FD 		ld	a4,-40(s0)
 992 0570 9307F0FF 		li	a5,-1
 993 0574 9397F703 		slli	a5,a5,63
GAS LISTING /tmp/ccxXkH1N.s 			page 25


 994 0578 93871700 		addi	a5,a5,1
 995 057c 6314F708 		bne	a4,a5,.L47
 199:src/interruptRoutine.cpp ****         Scheduler::wake();
 996              		.loc 3 199 9
 199:src/interruptRoutine.cpp ****         Scheduler::wake();
 997              		.loc 3 199 24 is_stmt 0
 998 0580 97000000 		call	_ZN9Scheduler4wakeEv@plt
 998      E7800000 
 999              	.LVL88:
 200:src/interruptRoutine.cpp ****         TCB::getRunningTimeSlice()++;
 1000              		.loc 3 200 9 is_stmt 1
 200:src/interruptRoutine.cpp ****         TCB::getRunningTimeSlice()++;
 1001              		.loc 3 200 34 is_stmt 0
 1002 0588 97000000 		call	_ZN3TCB19getRunningTimeSliceEv
 1002      E7800000 
 1003              	.LVL89:
 1004 0590 93070500 		mv	a5,a0
 200:src/interruptRoutine.cpp ****         TCB::getRunningTimeSlice()++;
 1005              		.loc 3 200 33
 1006 0594 03B70700 		ld	a4,0(a5)
 200:src/interruptRoutine.cpp ****         TCB::getRunningTimeSlice()++;
 1007              		.loc 3 200 35
 1008 0598 13071700 		addi	a4,a4,1
 1009 059c 23B0E700 		sd	a4,0(a5)
 201:src/interruptRoutine.cpp ****         if (TCB::getRunningTimeSlice() >= TCB::getRunning()->getTimeSlice()) {
 1010              		.loc 3 201 9 is_stmt 1
 201:src/interruptRoutine.cpp ****         if (TCB::getRunningTimeSlice() >= TCB::getRunning()->getTimeSlice()) {
 1011              		.loc 3 201 38 is_stmt 0
 1012 05a0 97000000 		call	_ZN3TCB19getRunningTimeSliceEv
 1012      E7800000 
 1013              	.LVL90:
 1014 05a8 93070500 		mv	a5,a0
 201:src/interruptRoutine.cpp ****         if (TCB::getRunningTimeSlice() >= TCB::getRunning()->getTimeSlice()) {
 1015              		.loc 3 201 37
 1016 05ac 83B40700 		ld	s1,0(a5)
 201:src/interruptRoutine.cpp ****         if (TCB::getRunningTimeSlice() >= TCB::getRunning()->getTimeSlice()) {
 1017              		.loc 3 201 74
 1018 05b0 97000000 		call	_ZN3TCB10getRunningEv
 1018      E7800000 
 1019              	.LVL91:
 1020 05b8 93070500 		mv	a5,a0
 1021 05bc 13850700 		mv	a0,a5
 1022 05c0 97000000 		call	_ZN3TCB12getTimeSliceEv
 1022      E7800000 
 1023              	.LVL92:
 1024 05c8 93070500 		mv	a5,a0
 201:src/interruptRoutine.cpp ****         if (TCB::getRunningTimeSlice() >= TCB::getRunning()->getTimeSlice()) {
 1025              		.loc 3 201 40
 1026 05cc B3B7F400 		sltu	a5,s1,a5
 1027 05d0 93C71700 		xori	a5,a5,1
 1028 05d4 93F7F70F 		andi	a5,a5,0xff
 201:src/interruptRoutine.cpp ****         if (TCB::getRunningTimeSlice() >= TCB::getRunning()->getTimeSlice()) {
 1029              		.loc 3 201 9
 1030 05d8 63860700 		beqz	a5,.L48
 202:src/interruptRoutine.cpp ****             TCB::dispatch();
 1031              		.loc 3 202 13 is_stmt 1
 202:src/interruptRoutine.cpp ****             TCB::dispatch();
GAS LISTING /tmp/ccxXkH1N.s 			page 26


 1032              		.loc 3 202 26 is_stmt 0
 1033 05dc 97000000 		call	_ZN3TCB8dispatchEv@plt
 1033      E7800000 
 1034              	.LVL93:
 1035              	.L48:
 204:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 1036              		.loc 3 204 9 is_stmt 1
 204:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 1037              		.loc 3 204 66 is_stmt 0
 1038 05e4 833704FD 		ld	a5,-48(s0)
 1039              	#APP
 1040              	# 204 "src/interruptRoutine.cpp" 1
 205:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 1041              		csrw sepc, a5
 1042              	# 0 "" 2
 1043              		.loc 3 205 9 is_stmt 1
 205:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 1044              		.loc 3 205 71 is_stmt 0
 1045              	#NO_APP
 1046 05ec 833784FC 		ld	a5,-56(s0)
 1047              	#APP
 1048              	# 205 "src/interruptRoutine.cpp" 1
 206:src/interruptRoutine.cpp ****         Riscv::mc_sip(Riscv::SIP_SSIP);
 1049              		csrw sstatus, a5
 1050              	# 0 "" 2
 1051              		.loc 3 206 9 is_stmt 1
 206:src/interruptRoutine.cpp ****         Riscv::mc_sip(Riscv::SIP_SSIP);
 1052              		.loc 3 206 22 is_stmt 0
 1053              	#NO_APP
 1054 05f4 13052000 		li	a0,2
 1055 05f8 97000000 		call	_ZN5Riscv6mc_sipEm
 1055      E7800000 
 1056              	.LVL94:
 1057              	.LBE34:
 1058              	.LBE36:
 1059              	.LBE39:
 1060              		.loc 3 216 1
 1061 0600 6F00C007 		j	.L53
 1062              	.LVL95:
 1063              	.L47:
 1064              	.LBB40:
 1065              	.LBB37:
 1066              	.LBB35:
 208:src/interruptRoutine.cpp ****         printString("\nGreska u prekidnoj rutini\n");
 1067              		.loc 3 208 9 is_stmt 1
 208:src/interruptRoutine.cpp ****         printString("\nGreska u prekidnoj rutini\n");
 1068              		.loc 3 208 20 is_stmt 0
 1069 0604 17050000 		lla	a0,.LC3
 1069      13050500 
 1070 060c 97000000 		call	_Z11printStringPKc@plt
 1070      E7800000 
 1071              	.LVL96:
 209:src/interruptRoutine.cpp ****         printString("scause: ");
 1072              		.loc 3 209 9 is_stmt 1
 209:src/interruptRoutine.cpp ****         printString("scause: ");
 1073              		.loc 3 209 20 is_stmt 0
 1074 0614 17050000 		lla	a0,.LC4
GAS LISTING /tmp/ccxXkH1N.s 			page 27


 1074      13050500 
 1075 061c 97000000 		call	_Z11printStringPKc@plt
 1075      E7800000 
 1076              	.LVL97:
 210:src/interruptRoutine.cpp ****         printInt(scause);
 1077              		.loc 3 210 9 is_stmt 1
 210:src/interruptRoutine.cpp ****         printInt(scause);
 1078              		.loc 3 210 17 is_stmt 0
 1079 0624 833784FD 		ld	a5,-40(s0)
 1080 0628 9B870700 		sext.w	a5,a5
 1081 062c 13060000 		li	a2,0
 1082 0630 9305A000 		li	a1,10
 1083 0634 13850700 		mv	a0,a5
 1084 0638 97000000 		call	_Z8printIntiii@plt
 1084      E7800000 
 1085              	.LVL98:
 211:src/interruptRoutine.cpp ****         printString("\nsepc: ");
 1086              		.loc 3 211 9 is_stmt 1
 211:src/interruptRoutine.cpp ****         printString("\nsepc: ");
 1087              		.loc 3 211 20 is_stmt 0
 1088 0640 17050000 		lla	a0,.LC2
 1088      13050500 
 1089 0648 97000000 		call	_Z11printStringPKc@plt
 1089      E7800000 
 1090              	.LVL99:
 212:src/interruptRoutine.cpp ****         printInt(sepc);
 1091              		.loc 3 212 9 is_stmt 1
 212:src/interruptRoutine.cpp ****         printInt(sepc);
 1092              		.loc 3 212 17 is_stmt 0
 1093 0650 833704FD 		ld	a5,-48(s0)
 1094 0654 9B870700 		sext.w	a5,a5
 1095 0658 13060000 		li	a2,0
 1096 065c 9305A000 		li	a1,10
 1097 0660 13850700 		mv	a0,a5
 1098 0664 97000000 		call	_Z8printIntiii@plt
 1098      E7800000 
 1099              	.LVL100:
 213:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 1100              		.loc 3 213 9 is_stmt 1
 213:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 1101              		.loc 3 213 66 is_stmt 0
 1102 066c 833704FD 		ld	a5,-48(s0)
 1103              	#APP
 1104              	# 213 "src/interruptRoutine.cpp" 1
 214:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 1105              		csrw sepc, a5
 1106              	# 0 "" 2
 1107              		.loc 3 214 9 is_stmt 1
 214:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 1108              		.loc 3 214 71 is_stmt 0
 1109              	#NO_APP
 1110 0674 833784FC 		ld	a5,-56(s0)
 1111              	#APP
 1112              	# 214 "src/interruptRoutine.cpp" 1
 1113              		csrw sstatus, a5
 1114              	# 0 "" 2
 1115              	#NO_APP
GAS LISTING /tmp/ccxXkH1N.s 			page 28


 1116              	.L53:
 1117              	.LBE35:
 1118              	.LBE37:
 1119              	.LBE40:
 1120              		.loc 3 216 1
 1121 067c 13000000 		nop
 1122 0680 83308106 		ld	ra,104(sp)
 1123              		.cfi_restore 1
 1124 0684 03340106 		ld	s0,96(sp)
 1125              		.cfi_restore 8
 1126              		.cfi_def_cfa 2, 112
 1127              	.LVL101:
 1128 0688 83348105 		ld	s1,88(sp)
 1129              		.cfi_restore 9
 1130 068c 13010107 		addi	sp,sp,112
 1131              		.cfi_def_cfa_offset 0
 1132              	.LVL102:
 1133 0690 67800000 		jr	ra
 1134              		.cfi_endproc
 1135              	.LFE56:
 1137              		.section	.text._ZN5Riscv6mc_sipEm,"axG",@progbits,_ZN5Riscv6mc_sipEm,comdat
 1138              		.align	2
 1139              		.weak	_ZN5Riscv6mc_sipEm
 1141              	_ZN5Riscv6mc_sipEm:
 1142              	.LFB7:
 1143              		.file 4 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 5/17/23.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJEKAT2023_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJEKAT2023_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** class Riscv {
  11:src/../h/Riscv.hpp **** public:
  12:src/../h/Riscv.hpp **** 
  13:src/../h/Riscv.hpp **** 	static void returnFromInterrupt();
  14:src/../h/Riscv.hpp **** 
  15:src/../h/Riscv.hpp **** 	//read scause
  16:src/../h/Riscv.hpp **** 	static uint64 r_scause();
  17:src/../h/Riscv.hpp **** 
  18:src/../h/Riscv.hpp **** 	//write scause
  19:src/../h/Riscv.hpp **** 	static void w_scause(uint64 scause);
  20:src/../h/Riscv.hpp **** 
  21:src/../h/Riscv.hpp **** 	//read sepc
  22:src/../h/Riscv.hpp **** 	static uint64 r_sepc();
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp **** 	//write sepc
  25:src/../h/Riscv.hpp **** 	static void w_sepc(uint64 sepc);
  26:src/../h/Riscv.hpp **** 
  27:src/../h/Riscv.hpp **** 	//read stvec
  28:src/../h/Riscv.hpp **** 	static uint64 r_stvec();
  29:src/../h/Riscv.hpp **** 
  30:src/../h/Riscv.hpp **** 	//write stvec
  31:src/../h/Riscv.hpp **** 	static void w_stvec(uint64 stvec);
GAS LISTING /tmp/ccxXkH1N.s 			page 29


  32:src/../h/Riscv.hpp **** 
  33:src/../h/Riscv.hpp **** 	enum BitMaskSip {
  34:src/../h/Riscv.hpp **** 		//postoji zahtev za softverski prekid
  35:src/../h/Riscv.hpp **** 		SIP_SSIP = (1 << 1),
  36:src/../h/Riscv.hpp **** 		//postoji prekid od tajmera
  37:src/../h/Riscv.hpp **** 		SIP_STIP = (1 << 5),
  38:src/../h/Riscv.hpp **** 		//postoji zahtev za spoljasnji hardverski prekid
  39:src/../h/Riscv.hpp **** 		SIP_SEIP = (1 << 9)
  40:src/../h/Riscv.hpp **** 	};
  41:src/../h/Riscv.hpp **** 
  42:src/../h/Riscv.hpp **** 	//mask set sip
  43:src/../h/Riscv.hpp **** 	static void ms_sip(uint64 mask);
  44:src/../h/Riscv.hpp **** 
  45:src/../h/Riscv.hpp **** 	//mask clear sip
  46:src/../h/Riscv.hpp **** 	static void mc_sip(uint64 mask);
  47:src/../h/Riscv.hpp **** 
  48:src/../h/Riscv.hpp **** 	//read sip
  49:src/../h/Riscv.hpp **** 	static uint64 r_sip();
  50:src/../h/Riscv.hpp **** 
  51:src/../h/Riscv.hpp **** 	//write sip
  52:src/../h/Riscv.hpp **** 	static void w_sip(uint64 sip);
  53:src/../h/Riscv.hpp **** 
  54:src/../h/Riscv.hpp **** 	//kada se pozove sret, SIE dobija vrednost SPIE, SPIE se postavlja na 1,
  55:src/../h/Riscv.hpp **** 	//rezim se postavlja na osnovu SPP bita, SPP se postavlja na 0
  56:src/../h/Riscv.hpp **** 	enum BitMaskSstatus {
  57:src/../h/Riscv.hpp **** 		//1 - dozvoljeni prekidi; 0- nedozvoljeni prekidi; igonrise se u korisnickom rezimu
  58:src/../h/Riscv.hpp **** 		SSTATUS_SIE = (1 << 1),
  59:src/../h/Riscv.hpp **** 		//prethodna vrednost bita SIE
  60:src/../h/Riscv.hpp **** 		SSTATUS_SPIE = (1 << 5),
  61:src/../h/Riscv.hpp **** 		//iz kog rezima se desio skok; 0 - iz korisnickog; 1 - iz sistemskog
  62:src/../h/Riscv.hpp **** 		SSTATUS_SPP = (1 << 8)
  63:src/../h/Riscv.hpp **** 	};
  64:src/../h/Riscv.hpp **** 
  65:src/../h/Riscv.hpp **** 	//mask set sstatus
  66:src/../h/Riscv.hpp **** 	static void ms_sstatus(uint64 mask);
  67:src/../h/Riscv.hpp **** 
  68:src/../h/Riscv.hpp **** 	//mask clear sstatus
  69:src/../h/Riscv.hpp **** 	static void mc_sstatus(uint64 mask);
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp **** 	//read sstatus
  72:src/../h/Riscv.hpp **** 	static uint64 r_sstatus();
  73:src/../h/Riscv.hpp **** 
  74:src/../h/Riscv.hpp **** 	//write sstatus
  75:src/../h/Riscv.hpp **** 	static void w_sstatus(uint64 sstatus);
  76:src/../h/Riscv.hpp **** 
  77:src/../h/Riscv.hpp **** };
  78:src/../h/Riscv.hpp **** 
  79:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause() {
  80:src/../h/Riscv.hpp **** 	uint64 volatile scause;
  81:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[scause], scause": [scause] "=r"(scause));
  82:src/../h/Riscv.hpp **** 	return scause;
  83:src/../h/Riscv.hpp **** }
  84:src/../h/Riscv.hpp **** 
  85:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
  86:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw scause, %[scause]": :[scause] "r"(scause));
  87:src/../h/Riscv.hpp **** }
  88:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/ccxXkH1N.s 			page 30


  89:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc() {
  90:src/../h/Riscv.hpp **** 	uint64 volatile sepc;
  91:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[sepc], sepc": [sepc] "=r"(sepc));
  92:src/../h/Riscv.hpp **** 	return sepc;
  93:src/../h/Riscv.hpp **** }
  94:src/../h/Riscv.hpp **** 
  95:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
  96:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
  97:src/../h/Riscv.hpp **** }
  98:src/../h/Riscv.hpp **** 
  99:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec() {
 100:src/../h/Riscv.hpp **** 	uint64 volatile stvec;
 101:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[stvec], stvec": [stvec] "=r"(stvec));
 102:src/../h/Riscv.hpp **** 	return stvec;
 103:src/../h/Riscv.hpp **** }
 104:src/../h/Riscv.hpp **** 
 105:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 106:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw stvec, %[stvec]": :[stvec] "r"(stvec));
 107:src/../h/Riscv.hpp **** }
 108:src/../h/Riscv.hpp **** 
 109:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 110:src/../h/Riscv.hpp **** 	__asm__ volatile("csrs sip, %[mask]": :[mask] "r"(mask));
 111:src/../h/Riscv.hpp **** }
 112:src/../h/Riscv.hpp **** 
 113:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 1144              		.loc 4 113 40 is_stmt 1
 1145              		.cfi_startproc
 1146              	.LVL103:
 1147 0000 130101FF 		addi	sp,sp,-16
 1148              		.cfi_def_cfa_offset 16
 1149 0004 23348100 		sd	s0,8(sp)
 1150              		.cfi_offset 8, -8
 1151 0008 13040101 		addi	s0,sp,16
 1152              		.cfi_def_cfa 8, 0
 114:src/../h/Riscv.hpp **** 	__asm__ volatile("csrc sip, %[mask]": :[mask] "r"(mask));
 1153              		.loc 4 114 2
 1154              		.loc 4 114 58 is_stmt 0
 1155              	#APP
 1156              	# 114 "src/../h/Riscv.hpp" 1
 115              	}
 1157              		csrc sip, a0
 1158              	# 0 "" 2
 1159              		.loc 4 115 1
 1160              	#NO_APP
 1161 0010 03348100 		ld	s0,8(sp)
 1162              		.cfi_restore 8
 1163              		.cfi_def_cfa 2, 16
 1164 0014 13010101 		addi	sp,sp,16
 1165              		.cfi_def_cfa_offset 0
 1166 0018 67800000 		jr	ra
 1167              		.cfi_endproc
 1168              	.LFE7:
 1170              		.section	.text._ZN8KConsole10getSRvalueEv,"axG",@progbits,_ZN8KConsole10getSRvalueEv,comdat
 1171              		.align	2
 1172              		.weak	_ZN8KConsole10getSRvalueEv
 1174              	_ZN8KConsole10getSRvalueEv:
 1175              	.LFB33:
GAS LISTING /tmp/ccxXkH1N.s 			page 31


 1176              		.file 5 "src/../h/KConsole.hpp"
   1:src/../h/KConsole.hpp **** //
   2:src/../h/KConsole.hpp **** // Created by os on 6/7/23.
   3:src/../h/KConsole.hpp **** //
   4:src/../h/KConsole.hpp **** 
   5:src/../h/KConsole.hpp **** #ifndef PROJEKAT2023_KCONSOLE_HPP
   6:src/../h/KConsole.hpp **** #define PROJEKAT2023_KCONSOLE_HPP
   7:src/../h/KConsole.hpp **** 
   8:src/../h/KConsole.hpp **** #include "../lib/hw.h"
   9:src/../h/KConsole.hpp **** 
  10:src/../h/KConsole.hpp **** class KSem;
  11:src/../h/KConsole.hpp **** 
  12:src/../h/KConsole.hpp **** typedef KSem* sem_t;
  13:src/../h/KConsole.hpp **** 
  14:src/../h/KConsole.hpp **** class KConsole {
  15:src/../h/KConsole.hpp **** public:
  16:src/../h/KConsole.hpp ****     static void initKConsole();
  17:src/../h/KConsole.hpp **** 
  18:src/../h/KConsole.hpp ****     //stavlja karakter u izlazni bafer konzole
  19:src/../h/KConsole.hpp ****     static void kputc(char c);
  20:src/../h/KConsole.hpp **** 
  21:src/../h/KConsole.hpp ****     //uzima karakter iz ulaznog bafera konzole
  22:src/../h/KConsole.hpp ****     static char kgetc();
  23:src/../h/KConsole.hpp **** 
  24:src/../h/KConsole.hpp ****     //vraca karakter iz izlaznog bafera; ako je bafer prazan, blokira se dok se ne napuni
  25:src/../h/KConsole.hpp ****     static char getFromOutput();
  26:src/../h/KConsole.hpp **** 
  27:src/../h/KConsole.hpp ****     //stavlja karakter u ulazni bafer; ako je bafer pun, ignorise se
  28:src/../h/KConsole.hpp ****     static void placeInInput(char c);
  29:src/../h/KConsole.hpp **** 
  30:src/../h/KConsole.hpp ****     //ispis svih preostalih karaktera u izlaznom baferu
  31:src/../h/KConsole.hpp ****     static void flush() {
  32:src/../h/KConsole.hpp ****         __asm__ volatile("li a0, 0x43");
  33:src/../h/KConsole.hpp ****         __asm__ volatile("ecall");
  34:src/../h/KConsole.hpp ****     }
  35:src/../h/KConsole.hpp **** 
  36:src/../h/KConsole.hpp ****     static uint8 getSRvalue() { return *sr; }
 1177              		.loc 5 36 18 is_stmt 1
 1178              		.cfi_startproc
 1179 0000 130101FF 		addi	sp,sp,-16
 1180              		.cfi_def_cfa_offset 16
 1181 0004 23348100 		sd	s0,8(sp)
 1182              		.cfi_offset 8, -8
 1183 0008 13040101 		addi	s0,sp,16
 1184              		.cfi_def_cfa 8, 0
 1185              		.loc 5 36 33
 1186              		.loc 5 36 40 is_stmt 0
 1187 000c 97070000 		la	a5,_ZN8KConsole2srE
 1187      83B70700 
 1188 0014 83B70700 		ld	a5,0(a5)
 1189              		.loc 5 36 45
 1190 0018 03C50700 		lbu	a0,0(a5)
 1191 001c 03348100 		ld	s0,8(sp)
 1192              		.cfi_restore 8
 1193              		.cfi_def_cfa 2, 16
 1194 0020 13010101 		addi	sp,sp,16
 1195              		.cfi_def_cfa_offset 0
GAS LISTING /tmp/ccxXkH1N.s 			page 32


 1196 0024 67800000 		jr	ra
 1197              		.cfi_endproc
 1198              	.LFE33:
 1200              		.section	.text._ZN8KConsole10getDRvalueEv,"axG",@progbits,_ZN8KConsole10getDRvalueEv,comdat
 1201              		.align	2
 1202              		.weak	_ZN8KConsole10getDRvalueEv
 1204              	_ZN8KConsole10getDRvalueEv:
 1205              	.LFB34:
  37:src/../h/KConsole.hpp **** 
  38:src/../h/KConsole.hpp ****     static uint8 getDRvalue() { return *dr; }
 1206              		.loc 5 38 18 is_stmt 1
 1207              		.cfi_startproc
 1208 0000 130101FF 		addi	sp,sp,-16
 1209              		.cfi_def_cfa_offset 16
 1210 0004 23348100 		sd	s0,8(sp)
 1211              		.cfi_offset 8, -8
 1212 0008 13040101 		addi	s0,sp,16
 1213              		.cfi_def_cfa 8, 0
 1214              		.loc 5 38 33
 1215              		.loc 5 38 40 is_stmt 0
 1216 000c 97070000 		la	a5,_ZN8KConsole2drE
 1216      83B70700 
 1217 0014 83B70700 		ld	a5,0(a5)
 1218              		.loc 5 38 45
 1219 0018 03C50700 		lbu	a0,0(a5)
 1220 001c 03348100 		ld	s0,8(sp)
 1221              		.cfi_restore 8
 1222              		.cfi_def_cfa 2, 16
 1223 0020 13010101 		addi	sp,sp,16
 1224              		.cfi_def_cfa_offset 0
 1225 0024 67800000 		jr	ra
 1226              		.cfi_endproc
 1227              	.LFE34:
 1229              		.section	.text._ZN8KConsole10setDRvalueEc,"axG",@progbits,_ZN8KConsole10setDRvalueEc,comdat
 1230              		.align	2
 1231              		.weak	_ZN8KConsole10setDRvalueEc
 1233              	_ZN8KConsole10setDRvalueEc:
 1234              	.LFB35:
  39:src/../h/KConsole.hpp **** 
  40:src/../h/KConsole.hpp ****     static void setDRvalue(char c) { *dr = c; }
 1235              		.loc 5 40 17 is_stmt 1
 1236              		.cfi_startproc
 1237              	.LVL104:
 1238 0000 130101FF 		addi	sp,sp,-16
 1239              		.cfi_def_cfa_offset 16
 1240 0004 23348100 		sd	s0,8(sp)
 1241              		.cfi_offset 8, -8
 1242 0008 13040101 		addi	s0,sp,16
 1243              		.cfi_def_cfa 8, 0
 1244              		.loc 5 40 38
 1245 000c 97070000 		la	a5,_ZN8KConsole2drE
 1245      83B70700 
 1246 0014 83B70700 		ld	a5,0(a5)
 1247              		.loc 5 40 42 is_stmt 0
 1248 0018 2380A700 		sb	a0,0(a5)
 1249              		.loc 5 40 47
 1250 001c 03348100 		ld	s0,8(sp)
GAS LISTING /tmp/ccxXkH1N.s 			page 33


 1251              		.cfi_restore 8
 1252              		.cfi_def_cfa 2, 16
 1253 0020 13010101 		addi	sp,sp,16
 1254              		.cfi_def_cfa_offset 0
 1255 0024 67800000 		jr	ra
 1256              		.cfi_endproc
 1257              	.LFE35:
 1259              		.section	.text._ZN8KConsole23getOutputBufferHasSpaceEv,"axG",@progbits,_ZN8KConsole23getOutputBuff
 1260              		.align	2
 1261              		.weak	_ZN8KConsole23getOutputBufferHasSpaceEv
 1263              	_ZN8KConsole23getOutputBufferHasSpaceEv:
 1264              	.LFB36:
  41:src/../h/KConsole.hpp **** 
  42:src/../h/KConsole.hpp ****     static sem_t getOutputBufferHasSpace() { return outputBufferHasSpace; }
 1265              		.loc 5 42 18 is_stmt 1
 1266              		.cfi_startproc
 1267 0000 130101FF 		addi	sp,sp,-16
 1268              		.cfi_def_cfa_offset 16
 1269 0004 23348100 		sd	s0,8(sp)
 1270              		.cfi_offset 8, -8
 1271 0008 13040101 		addi	s0,sp,16
 1272              		.cfi_def_cfa 8, 0
 1273              		.loc 5 42 46
 1274              		.loc 5 42 75 is_stmt 0
 1275 000c 97070000 		la	a5,_ZN8KConsole20outputBufferHasSpaceE
 1275      83B70700 
 1276 0014 03B50700 		ld	a0,0(a5)
 1277 0018 03348100 		ld	s0,8(sp)
 1278              		.cfi_restore 8
 1279              		.cfi_def_cfa 2, 16
 1280 001c 13010101 		addi	sp,sp,16
 1281              		.cfi_def_cfa_offset 0
 1282 0020 67800000 		jr	ra
 1283              		.cfi_endproc
 1284              	.LFE36:
 1286              		.section	.text._ZN8KConsole13getOutputHeadEv,"axG",@progbits,_ZN8KConsole13getOutputHeadEv,comdat
 1287              		.align	2
 1288              		.weak	_ZN8KConsole13getOutputHeadEv
 1290              	_ZN8KConsole13getOutputHeadEv:
 1291              	.LFB37:
  43:src/../h/KConsole.hpp **** 
  44:src/../h/KConsole.hpp ****     static int getOutputHead() { return outputHead; }
 1292              		.loc 5 44 16 is_stmt 1
 1293              		.cfi_startproc
 1294 0000 130101FF 		addi	sp,sp,-16
 1295              		.cfi_def_cfa_offset 16
 1296 0004 23348100 		sd	s0,8(sp)
 1297              		.cfi_offset 8, -8
 1298 0008 13040101 		addi	s0,sp,16
 1299              		.cfi_def_cfa 8, 0
 1300              		.loc 5 44 34
 1301              		.loc 5 44 53 is_stmt 0
 1302 000c 97070000 		la	a5,_ZN8KConsole10outputHeadE
 1302      83B70700 
 1303 0014 03A50700 		lw	a0,0(a5)
 1304 0018 03348100 		ld	s0,8(sp)
 1305              		.cfi_restore 8
GAS LISTING /tmp/ccxXkH1N.s 			page 34


 1306              		.cfi_def_cfa 2, 16
 1307 001c 13010101 		addi	sp,sp,16
 1308              		.cfi_def_cfa_offset 0
 1309 0020 67800000 		jr	ra
 1310              		.cfi_endproc
 1311              	.LFE37:
 1313              		.section	.text._ZN8KConsole13getOutputTailEv,"axG",@progbits,_ZN8KConsole13getOutputTailEv,comdat
 1314              		.align	2
 1315              		.weak	_ZN8KConsole13getOutputTailEv
 1317              	_ZN8KConsole13getOutputTailEv:
 1318              	.LFB38:
  45:src/../h/KConsole.hpp **** 
  46:src/../h/KConsole.hpp ****     static int getOutputTail() { return outputTail; }
 1319              		.loc 5 46 16 is_stmt 1
 1320              		.cfi_startproc
 1321 0000 130101FF 		addi	sp,sp,-16
 1322              		.cfi_def_cfa_offset 16
 1323 0004 23348100 		sd	s0,8(sp)
 1324              		.cfi_offset 8, -8
 1325 0008 13040101 		addi	s0,sp,16
 1326              		.cfi_def_cfa 8, 0
 1327              		.loc 5 46 34
 1328              		.loc 5 46 53 is_stmt 0
 1329 000c 97070000 		la	a5,_ZN8KConsole10outputTailE
 1329      83B70700 
 1330 0014 03A50700 		lw	a0,0(a5)
 1331 0018 03348100 		ld	s0,8(sp)
 1332              		.cfi_restore 8
 1333              		.cfi_def_cfa 2, 16
 1334 001c 13010101 		addi	sp,sp,16
 1335              		.cfi_def_cfa_offset 0
 1336 0020 67800000 		jr	ra
 1337              		.cfi_endproc
 1338              	.LFE38:
 1340              		.section	.text._ZN3TCB9setStatusENS_12ThreadStatusE,"axG",@progbits,_ZN3TCB9setStatusENS_12ThreadS
 1341              		.align	2
 1342              		.weak	_ZN3TCB9setStatusENS_12ThreadStatusE
 1344              	_ZN3TCB9setStatusENS_12ThreadStatusE:
 1345              	.LFB42:
 1346              		.file 6 "src/../h/TCB.hpp"
   1:src/../h/TCB.hpp **** //
   2:src/../h/TCB.hpp **** // Created by os on 5/23/23.
   3:src/../h/TCB.hpp **** //
   4:src/../h/TCB.hpp **** 
   5:src/../h/TCB.hpp **** #ifndef PROJEKAT2023_TCB_HPP
   6:src/../h/TCB.hpp **** #define PROJEKAT2023_TCB_HPP
   7:src/../h/TCB.hpp **** 
   8:src/../h/TCB.hpp **** #include "../lib/hw.h"
   9:src/../h/TCB.hpp **** #include "../h/ThreadQueue.hpp"
  10:src/../h/TCB.hpp **** 
  11:src/../h/TCB.hpp **** int main();
  12:src/../h/TCB.hpp **** 
  13:src/../h/TCB.hpp **** class TCB {
  14:src/../h/TCB.hpp **** public:
  15:src/../h/TCB.hpp ****     friend class Scheduler;
  16:src/../h/TCB.hpp **** 
  17:src/../h/TCB.hpp ****     using Body = void (*)(void*);
GAS LISTING /tmp/ccxXkH1N.s 			page 35


  18:src/../h/TCB.hpp **** 
  19:src/../h/TCB.hpp ****     enum ThreadStatus {
  20:src/../h/TCB.hpp ****         CREATED, ACTIVE, BLOCKED, JOINING, SLEEPING, FINISHED
  21:src/../h/TCB.hpp ****     };
  22:src/../h/TCB.hpp **** 
  23:src/../h/TCB.hpp ****     void setStatus(ThreadStatus stat) { this->status = stat; }
 1347              		.loc 6 23 10 is_stmt 1
 1348              		.cfi_startproc
 1349              	.LVL105:
 1350 0000 130101FF 		addi	sp,sp,-16
 1351              		.cfi_def_cfa_offset 16
 1352 0004 23348100 		sd	s0,8(sp)
 1353              		.cfi_offset 8, -8
 1354 0008 13040101 		addi	s0,sp,16
 1355              		.cfi_def_cfa 8, 0
 1356              		.loc 6 23 41
 1357              		.loc 6 23 54 is_stmt 0
 1358 000c 232CB504 		sw	a1,88(a0)
 1359              		.loc 6 23 62
 1360 0010 03348100 		ld	s0,8(sp)
 1361              		.cfi_restore 8
 1362              		.cfi_def_cfa 2, 16
 1363 0014 13010101 		addi	sp,sp,16
 1364              		.cfi_def_cfa_offset 0
 1365 0018 67800000 		jr	ra
 1366              		.cfi_endproc
 1367              	.LFE42:
 1369              		.section	.text._ZN3TCB12getTimeSliceEv,"axG",@progbits,_ZN3TCB12getTimeSliceEv,comdat
 1370              		.align	2
 1371              		.weak	_ZN3TCB12getTimeSliceEv
 1373              	_ZN3TCB12getTimeSliceEv:
 1374              	.LFB44:
  24:src/../h/TCB.hpp **** 
  25:src/../h/TCB.hpp ****     ThreadStatus getStatus() { return this->status; }
  26:src/../h/TCB.hpp **** 
  27:src/../h/TCB.hpp ****     static TCB* createThread(Body function, void* args, uint64* stack);
  28:src/../h/TCB.hpp **** 
  29:src/../h/TCB.hpp ****     uint64 getTimeSlice() { return timeSlice; }
 1375              		.loc 6 29 12 is_stmt 1
 1376              		.cfi_startproc
 1377              	.LVL106:
 1378 0000 130101FF 		addi	sp,sp,-16
 1379              		.cfi_def_cfa_offset 16
 1380 0004 23348100 		sd	s0,8(sp)
 1381              		.cfi_offset 8, -8
 1382 0008 13040101 		addi	s0,sp,16
 1383              		.cfi_def_cfa 8, 0
 1384              		.loc 6 29 29
 1385              		.loc 6 29 47 is_stmt 0
 1386 000c 03358502 		ld	a0,40(a0)
 1387              	.LVL107:
 1388 0010 03348100 		ld	s0,8(sp)
 1389              		.cfi_restore 8
 1390              		.cfi_def_cfa 2, 16
 1391 0014 13010101 		addi	sp,sp,16
 1392              		.cfi_def_cfa_offset 0
 1393 0018 67800000 		jr	ra
GAS LISTING /tmp/ccxXkH1N.s 			page 36


 1394              		.cfi_endproc
 1395              	.LFE44:
 1397              		.section	.text._ZN3TCB7getBodyEv,"axG",@progbits,_ZN3TCB7getBodyEv,comdat
 1398              		.align	2
 1399              		.weak	_ZN3TCB7getBodyEv
 1401              	_ZN3TCB7getBodyEv:
 1402              	.LFB46:
  30:src/../h/TCB.hpp **** 
  31:src/../h/TCB.hpp ****     void setTimeSlice(uint64 value) { timeSlice = value; }
  32:src/../h/TCB.hpp **** 
  33:src/../h/TCB.hpp ****     Body getBody() { return threadFunction; }
 1403              		.loc 6 33 10 is_stmt 1
 1404              		.cfi_startproc
 1405              	.LVL108:
 1406 0000 130101FF 		addi	sp,sp,-16
 1407              		.cfi_def_cfa_offset 16
 1408 0004 23348100 		sd	s0,8(sp)
 1409              		.cfi_offset 8, -8
 1410 0008 13040101 		addi	s0,sp,16
 1411              		.cfi_def_cfa 8, 0
 1412              		.loc 6 33 22
 1413              		.loc 6 33 45 is_stmt 0
 1414 000c 03350501 		ld	a0,16(a0)
 1415              	.LVL109:
 1416 0010 03348100 		ld	s0,8(sp)
 1417              		.cfi_restore 8
 1418              		.cfi_def_cfa 2, 16
 1419 0014 13010101 		addi	sp,sp,16
 1420              		.cfi_def_cfa_offset 0
 1421 0018 67800000 		jr	ra
 1422              		.cfi_endproc
 1423              	.LFE46:
 1425              		.section	.text._ZN3TCB10getRunningEv,"axG",@progbits,_ZN3TCB10getRunningEv,comdat
 1426              		.align	2
 1427              		.weak	_ZN3TCB10getRunningEv
 1429              	_ZN3TCB10getRunningEv:
 1430              	.LFB47:
  34:src/../h/TCB.hpp **** 
  35:src/../h/TCB.hpp ****     static TCB* getRunning() { return running; }
 1431              		.loc 6 35 17 is_stmt 1
 1432              		.cfi_startproc
 1433 0000 130101FF 		addi	sp,sp,-16
 1434              		.cfi_def_cfa_offset 16
 1435 0004 23348100 		sd	s0,8(sp)
 1436              		.cfi_offset 8, -8
 1437 0008 13040101 		addi	s0,sp,16
 1438              		.cfi_def_cfa 8, 0
 1439              		.loc 6 35 32
 1440              		.loc 6 35 48 is_stmt 0
 1441 000c 97070000 		la	a5,_ZN3TCB7runningE
 1441      83B70700 
 1442 0014 03B50700 		ld	a0,0(a5)
 1443 0018 03348100 		ld	s0,8(sp)
 1444              		.cfi_restore 8
 1445              		.cfi_def_cfa 2, 16
 1446 001c 13010101 		addi	sp,sp,16
 1447              		.cfi_def_cfa_offset 0
GAS LISTING /tmp/ccxXkH1N.s 			page 37


 1448 0020 67800000 		jr	ra
 1449              		.cfi_endproc
 1450              	.LFE47:
 1452              		.section	.text._ZN3TCB19getRunningTimeSliceEv,"axG",@progbits,_ZN3TCB19getRunningTimeSliceEv,comda
 1453              		.align	2
 1454              		.weak	_ZN3TCB19getRunningTimeSliceEv
 1456              	_ZN3TCB19getRunningTimeSliceEv:
 1457              	.LFB49:
  36:src/../h/TCB.hpp **** 
  37:src/../h/TCB.hpp ****     static void setRunning(TCB* newRunning) { running = newRunning; }
  38:src/../h/TCB.hpp **** 
  39:src/../h/TCB.hpp ****     static uint64 &getRunningTimeSlice() { return runningTimeSlice; }
 1458              		.loc 6 39 20 is_stmt 1
 1459              		.cfi_startproc
 1460 0000 130101FF 		addi	sp,sp,-16
 1461              		.cfi_def_cfa_offset 16
 1462 0004 23348100 		sd	s0,8(sp)
 1463              		.cfi_offset 8, -8
 1464 0008 13040101 		addi	s0,sp,16
 1465              		.cfi_def_cfa 8, 0
 1466              		.loc 6 39 44
 1467              		.loc 6 39 69 is_stmt 0
 1468 000c 17050000 		la	a0,_ZN3TCB16runningTimeSliceE
 1468      03350500 
 1469 0014 03348100 		ld	s0,8(sp)
 1470              		.cfi_restore 8
 1471              		.cfi_def_cfa 2, 16
 1472 0018 13010101 		addi	sp,sp,16
 1473              		.cfi_def_cfa_offset 0
 1474 001c 67800000 		jr	ra
 1475              		.cfi_endproc
 1476              	.LFE49:
 1478              		.text
 1479              	.Letext0:
 1480              		.file 7 "src/../lib/hw.h"
 1481              		.file 8 "src/../h/KMemory.hpp"
 1482              		.file 9 "src/../h/../h/../h/syscall_c.hpp"
 1483              		.file 10 "src/../h/Scheduler.hpp"
 1484              		.file 11 "src/../test/printing.hpp"
 6240              		.align	3
 6243              	DW.ref.__gxx_personality_v0:
 6244 0000 00000000 		.dword	__gxx_personality_v0
 6244      00000000 
 6245              		.ident	"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04) 9.4.0"
 6246              		.section	.note.GNU-stack,"",@progbits
GAS LISTING /tmp/ccxXkH1N.s 			page 38


DEFINED SYMBOLS
                            *ABS*:0000000000000000 interruptRoutine.cpp
     /tmp/ccxXkH1N.s:10     .text._ZN4KSemD2Ev:0000000000000000 _ZN4KSemD2Ev
     /tmp/ccxXkH1N.s:14     .text._ZN4KSemD2Ev:0000000000000000 .L0 
     /tmp/ccxXkH1N.s:6243   .data.rel.local.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/ccxXkH1N.s:18     .text._ZN4KSemD2Ev:0000000000000000 .L0 
     /tmp/ccxXkH1N.s:19     .text._ZN4KSemD2Ev:0000000000000004 .L0 
     /tmp/ccxXkH1N.s:23     .text._ZN4KSemD2Ev:0000000000000010 .L0 
     /tmp/ccxXkH1N.s:24     .text._ZN4KSemD2Ev:0000000000000010 .L0 
     /tmp/ccxXkH1N.s:25     .text._ZN4KSemD2Ev:0000000000000010 .L0 
     /tmp/ccxXkH1N.s:27     .text._ZN4KSemD2Ev:0000000000000014 .L0 
     /tmp/ccxXkH1N.s:35     .text._ZN4KSemD2Ev:0000000000000018 .L0 
     /tmp/ccxXkH1N.s:38     .text._ZN4KSemD2Ev:0000000000000018 .L0 
     /tmp/ccxXkH1N.s:39     .text._ZN4KSemD2Ev:0000000000000018 .L0 
     /tmp/ccxXkH1N.s:40     .text._ZN4KSemD2Ev:0000000000000018 .L0 
     /tmp/ccxXkH1N.s:45     .text._ZN4KSemD2Ev:000000000000001c .L0 
     /tmp/ccxXkH1N.s:49     .text._ZN4KSemD2Ev:0000000000000020 .L0 
     /tmp/ccxXkH1N.s:50     .text._ZN4KSemD2Ev:0000000000000020 .L0 
     /tmp/ccxXkH1N.s:51     .text._ZN4KSemD2Ev:0000000000000020 .L0 
     /tmp/ccxXkH1N.s:53     .text._ZN4KSemD2Ev:0000000000000024 .L0 
     /tmp/ccxXkH1N.s:55     .text._ZN4KSemD2Ev:0000000000000028 .L0 
     /tmp/ccxXkH1N.s:56     .text._ZN4KSemD2Ev:0000000000000028 .L0 
     /tmp/ccxXkH1N.s:61     .text._ZN4KSemD2Ev:000000000000002c .L0 
     /tmp/ccxXkH1N.s:62     .text._ZN4KSemD2Ev:000000000000002c .L0 
     /tmp/ccxXkH1N.s:65     .text._ZN4KSemD2Ev:0000000000000034 .L0 
     /tmp/ccxXkH1N.s:73     .text._ZN4KSemD2Ev:0000000000000038 .L0 
     /tmp/ccxXkH1N.s:74     .text._ZN4KSemD2Ev:000000000000003c .L0 
     /tmp/ccxXkH1N.s:76     .text._ZN4KSemD2Ev:0000000000000040 .L0 
     /tmp/ccxXkH1N.s:77     .text._ZN4KSemD2Ev:0000000000000040 .L0 
     /tmp/ccxXkH1N.s:79     .text._ZN4KSemD2Ev:0000000000000044 .L0 
     /tmp/ccxXkH1N.s:82     .text._ZN4KSemD2Ev:0000000000000048 .L0 
     /tmp/ccxXkH1N.s:84     .text._ZN4KSemD2Ev:000000000000004c .L0 
     /tmp/ccxXkH1N.s:10     .text._ZN4KSemD2Ev:0000000000000000 _ZN4KSemD1Ev
     /tmp/ccxXkH1N.s:117    .text:0000000000000000 interruptRoutine
     /tmp/ccxXkH1N.s:121    .text:0000000000000000 .L0 
     /tmp/ccxXkH1N.s:122    .text:0000000000000000 .L0 
     /tmp/ccxXkH1N.s:123    .text:0000000000000004 .L0 
     /tmp/ccxXkH1N.s:127    .text:0000000000000010 .L0 
     /tmp/ccxXkH1N.s:128    .text:0000000000000010 .L0 
     /tmp/ccxXkH1N.s:129    .text:0000000000000010 .L0 
     /tmp/ccxXkH1N.s:131    .text:0000000000000014 .L0 
     /tmp/ccxXkH1N.s:133    .text:0000000000000014 .L0 
     /tmp/ccxXkH1N.s:134    .text:0000000000000014 .L0 
src/interruptRoutine.cpp:21     .text:0000000000000014 .L0 
     /tmp/ccxXkH1N.s:143    .text:000000000000001c .L0 
src/interruptRoutine.cpp:22     .text:000000000000001c .L0 
     /tmp/ccxXkH1N.s:153    .text:0000000000000024 .L0 
src/interruptRoutine.cpp:23     .text:0000000000000024 .L0 
     /tmp/ccxXkH1N.s:163    .text:000000000000002c .L0 
     /tmp/ccxXkH1N.s:164    .text:000000000000002c .L0 
src/interruptRoutine.cpp:28     .text:000000000000002c .L0 
     /tmp/ccxXkH1N.s:174    .text:0000000000000034 .L0 
src/interruptRoutine.cpp:29     .text:0000000000000034 .L0 
     /tmp/ccxXkH1N.s:184    .text:000000000000003c .L0 
src/interruptRoutine.cpp:30     .text:000000000000003c .L0 
     /tmp/ccxXkH1N.s:194    .text:0000000000000044 .L0 
src/interruptRoutine.cpp:31     .text:0000000000000044 .L0 
GAS LISTING /tmp/ccxXkH1N.s 			page 39


     /tmp/ccxXkH1N.s:204    .text:000000000000004c .L0 
src/interruptRoutine.cpp:32     .text:000000000000004c .L0 
     /tmp/ccxXkH1N.s:215    .text:0000000000000054 .L0 
     /tmp/ccxXkH1N.s:219    .text:0000000000000060 .L0 
     /tmp/ccxXkH1N.s:226    .text:000000000000006c .L0 
     /tmp/ccxXkH1N.s:330    .text:00000000000000e0 .L0 
     /tmp/ccxXkH1N.s:331    .text:00000000000000e0 .L0 
     /tmp/ccxXkH1N.s:332    .text:00000000000000e0 .L0 
     /tmp/ccxXkH1N.s:336    .text:00000000000000ec .L0 
src/interruptRoutine.cpp:44     .text:00000000000000ec .L0 
     /tmp/ccxXkH1N.s:343    .text:00000000000000f0 .L0 
     /tmp/ccxXkH1N.s:347    .text:00000000000000f4 .L0 
     /tmp/ccxXkH1N.s:348    .text:00000000000000f4 .L0 
     /tmp/ccxXkH1N.s:349    .text:00000000000000f4 .L0 
     /tmp/ccxXkH1N.s:354    .text:0000000000000104 .L0 
src/interruptRoutine.cpp:50     .text:0000000000000104 .L0 
     /tmp/ccxXkH1N.s:361    .text:0000000000000108 .L0 
     /tmp/ccxXkH1N.s:365    .text:000000000000010c .L0 
     /tmp/ccxXkH1N.s:366    .text:000000000000010c .L0 
     /tmp/ccxXkH1N.s:367    .text:000000000000010c .L0 
     /tmp/ccxXkH1N.s:371    .text:0000000000000118 .L0 
     /tmp/ccxXkH1N.s:373    .text:000000000000011c .L0 
     /tmp/ccxXkH1N.s:380    .text:0000000000000134 .L0 
     /tmp/ccxXkH1N.s:382    .text:0000000000000138 .L0 
     /tmp/ccxXkH1N.s:383    .text:0000000000000138 .L0 
     /tmp/ccxXkH1N.s:386    .text:0000000000000140 .L0 
     /tmp/ccxXkH1N.s:388    .text:0000000000000144 .L0 
     /tmp/ccxXkH1N.s:389    .text:0000000000000144 .L0 
     /tmp/ccxXkH1N.s:391    .text:0000000000000148 .L0 
     /tmp/ccxXkH1N.s:394    .text:0000000000000154 .L0 
     /tmp/ccxXkH1N.s:395    .text:0000000000000154 .L0 
     /tmp/ccxXkH1N.s:402    .text:0000000000000168 .L0 
src/interruptRoutine.cpp:63     .text:0000000000000168 .L0 
     /tmp/ccxXkH1N.s:411    .text:0000000000000170 .L0 
src/interruptRoutine.cpp:65     .text:0000000000000170 .L0 
     /tmp/ccxXkH1N.s:419    .text:0000000000000174 .L0 
src/interruptRoutine.cpp:67     .text:0000000000000174 .L0 
     /tmp/ccxXkH1N.s:426    .text:0000000000000178 .L0 
     /tmp/ccxXkH1N.s:430    .text:000000000000017c .L0 
     /tmp/ccxXkH1N.s:431    .text:000000000000017c .L0 
     /tmp/ccxXkH1N.s:1429   .text._ZN3TCB10getRunningEv:0000000000000000 _ZN3TCB10getRunningEv
     /tmp/ccxXkH1N.s:432    .text:000000000000017c .L0 
     /tmp/ccxXkH1N.s:1344   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000000 _ZN3TCB9setStatusENS_12ThreadStatusE
     /tmp/ccxXkH1N.s:440    .text:0000000000000198 .L0 
     /tmp/ccxXkH1N.s:441    .text:0000000000000198 .L0 
     /tmp/ccxXkH1N.s:444    .text:00000000000001a0 .L0 
src/interruptRoutine.cpp:73     .text:00000000000001a0 .L0 
     /tmp/ccxXkH1N.s:450    .text:00000000000001a4 .L0 
src/interruptRoutine.cpp:74     .text:00000000000001a4 .L0 
     /tmp/ccxXkH1N.s:455    .text:00000000000001a8 .L0 
     /tmp/ccxXkH1N.s:457    .text:00000000000001a8 .L0 
     /tmp/ccxXkH1N.s:460    .text:00000000000001b0 .L0 
     /tmp/ccxXkH1N.s:464    .text:00000000000001b4 .L0 
     /tmp/ccxXkH1N.s:465    .text:00000000000001b4 .L0 
     /tmp/ccxXkH1N.s:466    .text:00000000000001b4 .L0 
     /tmp/ccxXkH1N.s:469    .text:00000000000001bc .L0 
     /tmp/ccxXkH1N.s:473    .text:00000000000001c0 .L0 
GAS LISTING /tmp/ccxXkH1N.s 			page 40


     /tmp/ccxXkH1N.s:474    .text:00000000000001c0 .L0 
     /tmp/ccxXkH1N.s:475    .text:00000000000001c0 .L0 
     /tmp/ccxXkH1N.s:480    .text:00000000000001d0 .L0 
     /tmp/ccxXkH1N.s:481    .text:00000000000001d0 .L0 
     /tmp/ccxXkH1N.s:484    .text:00000000000001d8 .L0 
     /tmp/ccxXkH1N.s:488    .text:00000000000001dc .L0 
     /tmp/ccxXkH1N.s:489    .text:00000000000001dc .L0 
     /tmp/ccxXkH1N.s:490    .text:00000000000001dc .L0 
     /tmp/ccxXkH1N.s:493    .text:00000000000001e4 .L0 
     /tmp/ccxXkH1N.s:495    .text:00000000000001e8 .L0 
     /tmp/ccxXkH1N.s:500    .text:00000000000001f8 .L0 
     /tmp/ccxXkH1N.s:502    .text:00000000000001fc .L0 
     /tmp/ccxXkH1N.s:503    .text:00000000000001fc .L0 
     /tmp/ccxXkH1N.s:506    .text:0000000000000204 .L0 
     /tmp/ccxXkH1N.s:508    .text:0000000000000208 .L0 
src/interruptRoutine.cpp:92     .text:0000000000000208 .L0 
     /tmp/ccxXkH1N.s:517    .text:0000000000000210 .L0 
src/interruptRoutine.cpp:94     .text:0000000000000210 .L0 
     /tmp/ccxXkH1N.s:525    .text:0000000000000214 .L0 
src/interruptRoutine.cpp:96     .text:0000000000000214 .L0 
     /tmp/ccxXkH1N.s:532    .text:0000000000000218 .L0 
     /tmp/ccxXkH1N.s:536    .text:000000000000021c .L0 
     /tmp/ccxXkH1N.s:537    .text:000000000000021c .L0 
     /tmp/ccxXkH1N.s:538    .text:000000000000021c .L0 
     /tmp/ccxXkH1N.s:543    .text:000000000000022c .L0 
src/interruptRoutine.cpp:102    .text:000000000000022c .L0 
     /tmp/ccxXkH1N.s:549    .text:0000000000000230 .L0 
     /tmp/ccxXkH1N.s:551    .text:0000000000000230 .L0 
     /tmp/ccxXkH1N.s:553    .text:0000000000000234 .L0 
     /tmp/ccxXkH1N.s:555    .text:0000000000000238 .L0 
     /tmp/ccxXkH1N.s:562    .text:0000000000000250 .L0 
     /tmp/ccxXkH1N.s:566    .text:0000000000000254 .L0 
     /tmp/ccxXkH1N.s:567    .text:0000000000000254 .L0 
     /tmp/ccxXkH1N.s:568    .text:0000000000000254 .L0 
     /tmp/ccxXkH1N.s:573    .text:0000000000000264 .L0 
src/interruptRoutine.cpp:109    .text:0000000000000264 .L0 
     /tmp/ccxXkH1N.s:580    .text:0000000000000268 .L0 
     /tmp/ccxXkH1N.s:584    .text:000000000000026c .L0 
     /tmp/ccxXkH1N.s:585    .text:000000000000026c .L0 
     /tmp/ccxXkH1N.s:586    .text:000000000000026c .L0 
     /tmp/ccxXkH1N.s:591    .text:000000000000027c .L0 
src/interruptRoutine.cpp:115    .text:000000000000027c .L0 
     /tmp/ccxXkH1N.s:598    .text:0000000000000280 .L0 
     /tmp/ccxXkH1N.s:602    .text:0000000000000284 .L0 
     /tmp/ccxXkH1N.s:603    .text:0000000000000284 .L0 
     /tmp/ccxXkH1N.s:606    .text:000000000000028c .L0 
src/interruptRoutine.cpp:121    .text:000000000000028c .L0 
     /tmp/ccxXkH1N.s:615    .text:0000000000000294 .L0 
src/interruptRoutine.cpp:123    .text:0000000000000294 .L0 
     /tmp/ccxXkH1N.s:623    .text:0000000000000298 .L0 
src/interruptRoutine.cpp:125    .text:0000000000000298 .L0 
     /tmp/ccxXkH1N.s:630    .text:000000000000029c .L0 
     /tmp/ccxXkH1N.s:633    .text:00000000000002a4 .L0 
     /tmp/ccxXkH1N.s:634    .text:00000000000002a4 .L0 
     /tmp/ccxXkH1N.s:642    .text:00000000000002c0 .L0 
     /tmp/ccxXkH1N.s:643    .text:00000000000002c0 .L0 
     /tmp/ccxXkH1N.s:646    .text:00000000000002c8 .L0 
GAS LISTING /tmp/ccxXkH1N.s 			page 41


     /tmp/ccxXkH1N.s:650    .text:00000000000002cc .L0 
     /tmp/ccxXkH1N.s:651    .text:00000000000002cc .L0 
     /tmp/ccxXkH1N.s:652    .text:00000000000002cc .L0 
     /tmp/ccxXkH1N.s:655    .text:00000000000002d4 .L0 
src/interruptRoutine.cpp:134    .text:00000000000002d4 .L0 
     /tmp/ccxXkH1N.s:662    .text:00000000000002d8 .L0 
     /tmp/ccxXkH1N.s:666    .text:00000000000002dc .L0 
     /tmp/ccxXkH1N.s:667    .text:00000000000002dc .L0 
     /tmp/ccxXkH1N.s:668    .text:00000000000002dc .L0 
     /tmp/ccxXkH1N.s:674    .text:00000000000002f0 .L0 
     /tmp/ccxXkH1N.s:677    .text:00000000000002f4 .L0 
     /tmp/ccxXkH1N.s:678    .text:00000000000002f4 .L0 
     /tmp/ccxXkH1N.s:679    .text:00000000000002f4 .L0 
     /tmp/ccxXkH1N.s:1290   .text._ZN8KConsole13getOutputHeadEv:0000000000000000 _ZN8KConsole13getOutputHeadEv
     /tmp/ccxXkH1N.s:680    .text:00000000000002f4 .L0 
     /tmp/ccxXkH1N.s:1317   .text._ZN8KConsole13getOutputTailEv:0000000000000000 _ZN8KConsole13getOutputTailEv
     /tmp/ccxXkH1N.s:685    .text:0000000000000304 .L0 
     /tmp/ccxXkH1N.s:689    .text:0000000000000310 .L0 
     /tmp/ccxXkH1N.s:696    .text:0000000000000324 .L0 
     /tmp/ccxXkH1N.s:697    .text:0000000000000324 .L0 
     /tmp/ccxXkH1N.s:704    .text:0000000000000334 .L0 
     /tmp/ccxXkH1N.s:705    .text:0000000000000334 .L0 
     /tmp/ccxXkH1N.s:1174   .text._ZN8KConsole10getSRvalueEv:0000000000000000 _ZN8KConsole10getSRvalueEv
     /tmp/ccxXkH1N.s:706    .text:0000000000000334 .L0 
     /tmp/ccxXkH1N.s:710    .text:0000000000000340 .L0 
     /tmp/ccxXkH1N.s:712    .text:0000000000000344 .L0 
     /tmp/ccxXkH1N.s:716    .text:0000000000000350 .L0 
     /tmp/ccxXkH1N.s:719    .text:0000000000000354 .L0 
     /tmp/ccxXkH1N.s:720    .text:0000000000000354 .L0 
     /tmp/ccxXkH1N.s:1233   .text._ZN8KConsole10setDRvalueEc:0000000000000000 _ZN8KConsole10setDRvalueEc
     /tmp/ccxXkH1N.s:725    .text:0000000000000364 .L0 
     /tmp/ccxXkH1N.s:1263   .text._ZN8KConsole23getOutputBufferHasSpaceEv:0000000000000000 _ZN8KConsole23getOutputBufferHasSpaceEv
     /tmp/ccxXkH1N.s:726    .text:0000000000000364 .L0 
     /tmp/ccxXkH1N.s:734    .text:000000000000037c .L0 
     /tmp/ccxXkH1N.s:738    .text:0000000000000380 .L0 
     /tmp/ccxXkH1N.s:739    .text:0000000000000380 .L0 
     /tmp/ccxXkH1N.s:740    .text:0000000000000380 .L0 
     /tmp/ccxXkH1N.s:744    .text:000000000000038c .L0 
     /tmp/ccxXkH1N.s:746    .text:0000000000000390 .L0 
     /tmp/ccxXkH1N.s:753    .text:00000000000003a8 .L0 
     /tmp/ccxXkH1N.s:755    .text:00000000000003ac .L0 
     /tmp/ccxXkH1N.s:756    .text:00000000000003ac .L0 
     /tmp/ccxXkH1N.s:759    .text:00000000000003b4 .L0 
     /tmp/ccxXkH1N.s:761    .text:00000000000003b8 .L0 
src/interruptRoutine.cpp:158    .text:00000000000003b8 .L0 
     /tmp/ccxXkH1N.s:770    .text:00000000000003c0 .L0 
src/interruptRoutine.cpp:160    .text:00000000000003c0 .L0 
     /tmp/ccxXkH1N.s:778    .text:00000000000003c4 .L0 
src/interruptRoutine.cpp:162    .text:00000000000003c4 .L0 
     /tmp/ccxXkH1N.s:785    .text:00000000000003c8 .L0 
     /tmp/ccxXkH1N.s:789    .text:00000000000003cc .L0 
     /tmp/ccxXkH1N.s:790    .text:00000000000003cc .L0 
     /tmp/ccxXkH1N.s:791    .text:00000000000003cc .L0 
     /tmp/ccxXkH1N.s:1401   .text._ZN3TCB7getBodyEv:0000000000000000 _ZN3TCB7getBodyEv
     /tmp/ccxXkH1N.s:797    .text:00000000000003e0 .L0 
     /tmp/ccxXkH1N.s:802    .text:00000000000003f4 .L0 
     /tmp/ccxXkH1N.s:804    .text:00000000000003f8 .L0 
GAS LISTING /tmp/ccxXkH1N.s 			page 42


     /tmp/ccxXkH1N.s:805    .text:00000000000003f8 .L0 
     /tmp/ccxXkH1N.s:810    .text:0000000000000408 .L0 
     /tmp/ccxXkH1N.s:814    .text:000000000000040c .L0 
     /tmp/ccxXkH1N.s:815    .text:000000000000040c .L0 
     /tmp/ccxXkH1N.s:816    .text:000000000000040c .L0 
     /tmp/ccxXkH1N.s:820    .text:000000000000041c .L0 
     /tmp/ccxXkH1N.s:821    .text:000000000000041c .L0 
     /tmp/ccxXkH1N.s:829    .text:0000000000000438 .L0 
     /tmp/ccxXkH1N.s:830    .text:0000000000000438 .L0 
     /tmp/ccxXkH1N.s:834    .text:0000000000000448 .L0 
     /tmp/ccxXkH1N.s:835    .text:0000000000000448 .L0 
     /tmp/ccxXkH1N.s:843    .text:0000000000000464 .L0 
     /tmp/ccxXkH1N.s:844    .text:0000000000000464 .L0 
     /tmp/ccxXkH1N.s:848    .text:0000000000000474 .L0 
     /tmp/ccxXkH1N.s:849    .text:0000000000000474 .L0 
     /tmp/ccxXkH1N.s:857    .text:0000000000000490 .L0 
     /tmp/ccxXkH1N.s:860    .text:0000000000000494 .L0 
     /tmp/ccxXkH1N.s:864    .text:000000000000049c .L0 
     /tmp/ccxXkH1N.s:868    .text:00000000000004a4 .L0 
     /tmp/ccxXkH1N.s:872    .text:00000000000004ac .L0 
     /tmp/ccxXkH1N.s:877    .text:00000000000004b0 .L0 
     /tmp/ccxXkH1N.s:878    .text:00000000000004b0 .L0 
     /tmp/ccxXkH1N.s:883    .text:00000000000004bc .L0 
     /tmp/ccxXkH1N.s:884    .text:00000000000004bc .L0 
     /tmp/ccxXkH1N.s:890    .text:00000000000004c4 .L0 
     /tmp/ccxXkH1N.s:892    .text:00000000000004c4 .L0 
     /tmp/ccxXkH1N.s:903    .text:00000000000004d0 .L0 
     /tmp/ccxXkH1N.s:910    .text:00000000000004d4 .L0 
     /tmp/ccxXkH1N.s:918    .text:00000000000004e8 .L0 
     /tmp/ccxXkH1N.s:919    .text:00000000000004e8 .L0 
     /tmp/ccxXkH1N.s:923    .text:00000000000004f4 .L0 
     /tmp/ccxXkH1N.s:926    .text:00000000000004f8 .L0 
     /tmp/ccxXkH1N.s:930    .text:0000000000000504 .L0 
     /tmp/ccxXkH1N.s:931    .text:0000000000000504 .L0 
     /tmp/ccxXkH1N.s:935    .text:0000000000000510 .L0 
     /tmp/ccxXkH1N.s:937    .text:0000000000000514 .L0 
     /tmp/ccxXkH1N.s:940    .text:000000000000051c .L0 
     /tmp/ccxXkH1N.s:942    .text:0000000000000520 .L0 
     /tmp/ccxXkH1N.s:1204   .text._ZN8KConsole10getDRvalueEv:0000000000000000 _ZN8KConsole10getDRvalueEv
     /tmp/ccxXkH1N.s:943    .text:0000000000000520 .L0 
     /tmp/ccxXkH1N.s:947    .text:000000000000052c .L0 
     /tmp/ccxXkH1N.s:952    .text:0000000000000538 .L0 
     /tmp/ccxXkH1N.s:953    .text:0000000000000538 .L0 
     /tmp/ccxXkH1N.s:959    .text:000000000000054c .L0 
     /tmp/ccxXkH1N.s:960    .text:000000000000054c .L0 
     /tmp/ccxXkH1N.s:966    .text:0000000000000554 .L0 
     /tmp/ccxXkH1N.s:968    .text:0000000000000554 .L0 
     /tmp/ccxXkH1N.s:974    .text:000000000000055c .L0 
     /tmp/ccxXkH1N.s:976    .text:000000000000055c .L0 
     /tmp/ccxXkH1N.s:1141   .text._ZN5Riscv6mc_sipEm:0000000000000000 _ZN5Riscv6mc_sipEm
     /tmp/ccxXkH1N.s:984    .text:0000000000000568 .L0 
     /tmp/ccxXkH1N.s:991    .text:000000000000056c .L0 
     /tmp/ccxXkH1N.s:997    .text:0000000000000580 .L0 
     /tmp/ccxXkH1N.s:998    .text:0000000000000580 .L0 
     /tmp/ccxXkH1N.s:1001   .text:0000000000000588 .L0 
     /tmp/ccxXkH1N.s:1456   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000000 _ZN3TCB19getRunningTimeSliceEv
     /tmp/ccxXkH1N.s:1002   .text:0000000000000588 .L0 
GAS LISTING /tmp/ccxXkH1N.s 			page 43


     /tmp/ccxXkH1N.s:1006   .text:0000000000000594 .L0 
     /tmp/ccxXkH1N.s:1008   .text:0000000000000598 .L0 
     /tmp/ccxXkH1N.s:1011   .text:00000000000005a0 .L0 
     /tmp/ccxXkH1N.s:1012   .text:00000000000005a0 .L0 
     /tmp/ccxXkH1N.s:1016   .text:00000000000005ac .L0 
     /tmp/ccxXkH1N.s:1018   .text:00000000000005b0 .L0 
     /tmp/ccxXkH1N.s:1373   .text._ZN3TCB12getTimeSliceEv:0000000000000000 _ZN3TCB12getTimeSliceEv
     /tmp/ccxXkH1N.s:1026   .text:00000000000005cc .L0 
     /tmp/ccxXkH1N.s:1030   .text:00000000000005d8 .L0 
     /tmp/ccxXkH1N.s:1032   .text:00000000000005dc .L0 
     /tmp/ccxXkH1N.s:1033   .text:00000000000005dc .L0 
     /tmp/ccxXkH1N.s:1037   .text:00000000000005e4 .L0 
     /tmp/ccxXkH1N.s:1038   .text:00000000000005e4 .L0 
     /tmp/ccxXkH1N.s:1044   .text:00000000000005ec .L0 
     /tmp/ccxXkH1N.s:1046   .text:00000000000005ec .L0 
     /tmp/ccxXkH1N.s:1052   .text:00000000000005f4 .L0 
     /tmp/ccxXkH1N.s:1054   .text:00000000000005f4 .L0 
     /tmp/ccxXkH1N.s:1061   .text:0000000000000600 .L0 
     /tmp/ccxXkH1N.s:1068   .text:0000000000000604 .L0 
     /tmp/ccxXkH1N.s:1069   .text:0000000000000604 .L0 
     /tmp/ccxXkH1N.s:1073   .text:0000000000000614 .L0 
     /tmp/ccxXkH1N.s:1074   .text:0000000000000614 .L0 
     /tmp/ccxXkH1N.s:1078   .text:0000000000000624 .L0 
     /tmp/ccxXkH1N.s:1079   .text:0000000000000624 .L0 
     /tmp/ccxXkH1N.s:1087   .text:0000000000000640 .L0 
     /tmp/ccxXkH1N.s:1088   .text:0000000000000640 .L0 
     /tmp/ccxXkH1N.s:1092   .text:0000000000000650 .L0 
     /tmp/ccxXkH1N.s:1093   .text:0000000000000650 .L0 
     /tmp/ccxXkH1N.s:1101   .text:000000000000066c .L0 
     /tmp/ccxXkH1N.s:1102   .text:000000000000066c .L0 
     /tmp/ccxXkH1N.s:1108   .text:0000000000000674 .L0 
     /tmp/ccxXkH1N.s:1110   .text:0000000000000674 .L0 
     /tmp/ccxXkH1N.s:1121   .text:000000000000067c .L0 
     /tmp/ccxXkH1N.s:1123   .text:0000000000000684 .L0 
     /tmp/ccxXkH1N.s:1125   .text:0000000000000688 .L0 
     /tmp/ccxXkH1N.s:1126   .text:0000000000000688 .L0 
     /tmp/ccxXkH1N.s:1129   .text:000000000000068c .L0 
     /tmp/ccxXkH1N.s:1131   .text:0000000000000690 .L0 
     /tmp/ccxXkH1N.s:1134   .text:0000000000000694 .L0 
     /tmp/ccxXkH1N.s:1145   .text._ZN5Riscv6mc_sipEm:0000000000000000 .L0 
     /tmp/ccxXkH1N.s:1147   .text._ZN5Riscv6mc_sipEm:0000000000000000 .L0 
     /tmp/ccxXkH1N.s:1148   .text._ZN5Riscv6mc_sipEm:0000000000000004 .L0 
     /tmp/ccxXkH1N.s:1150   .text._ZN5Riscv6mc_sipEm:0000000000000008 .L0 
     /tmp/ccxXkH1N.s:1152   .text._ZN5Riscv6mc_sipEm:000000000000000c .L0 
     /tmp/ccxXkH1N.s:1154   .text._ZN5Riscv6mc_sipEm:000000000000000c .L0 
  src/../h/Riscv.hpp:114    .text._ZN5Riscv6mc_sipEm:000000000000000c .L0 
     /tmp/ccxXkH1N.s:1161   .text._ZN5Riscv6mc_sipEm:0000000000000010 .L0 
     /tmp/ccxXkH1N.s:1162   .text._ZN5Riscv6mc_sipEm:0000000000000014 .L0 
     /tmp/ccxXkH1N.s:1163   .text._ZN5Riscv6mc_sipEm:0000000000000014 .L0 
     /tmp/ccxXkH1N.s:1165   .text._ZN5Riscv6mc_sipEm:0000000000000018 .L0 
     /tmp/ccxXkH1N.s:1167   .text._ZN5Riscv6mc_sipEm:000000000000001c .L0 
     /tmp/ccxXkH1N.s:1178   .text._ZN8KConsole10getSRvalueEv:0000000000000000 .L0 
     /tmp/ccxXkH1N.s:1179   .text._ZN8KConsole10getSRvalueEv:0000000000000000 .L0 
     /tmp/ccxXkH1N.s:1180   .text._ZN8KConsole10getSRvalueEv:0000000000000004 .L0 
     /tmp/ccxXkH1N.s:1182   .text._ZN8KConsole10getSRvalueEv:0000000000000008 .L0 
     /tmp/ccxXkH1N.s:1184   .text._ZN8KConsole10getSRvalueEv:000000000000000c .L0 
     /tmp/ccxXkH1N.s:1186   .text._ZN8KConsole10getSRvalueEv:000000000000000c .L0 
GAS LISTING /tmp/ccxXkH1N.s 			page 44


     /tmp/ccxXkH1N.s:1187   .text._ZN8KConsole10getSRvalueEv:000000000000000c .L0 
     /tmp/ccxXkH1N.s:1190   .text._ZN8KConsole10getSRvalueEv:0000000000000018 .L0 
     /tmp/ccxXkH1N.s:1192   .text._ZN8KConsole10getSRvalueEv:0000000000000020 .L0 
     /tmp/ccxXkH1N.s:1193   .text._ZN8KConsole10getSRvalueEv:0000000000000020 .L0 
     /tmp/ccxXkH1N.s:1195   .text._ZN8KConsole10getSRvalueEv:0000000000000024 .L0 
     /tmp/ccxXkH1N.s:1197   .text._ZN8KConsole10getSRvalueEv:0000000000000028 .L0 
     /tmp/ccxXkH1N.s:1207   .text._ZN8KConsole10getDRvalueEv:0000000000000000 .L0 
     /tmp/ccxXkH1N.s:1208   .text._ZN8KConsole10getDRvalueEv:0000000000000000 .L0 
     /tmp/ccxXkH1N.s:1209   .text._ZN8KConsole10getDRvalueEv:0000000000000004 .L0 
     /tmp/ccxXkH1N.s:1211   .text._ZN8KConsole10getDRvalueEv:0000000000000008 .L0 
     /tmp/ccxXkH1N.s:1213   .text._ZN8KConsole10getDRvalueEv:000000000000000c .L0 
     /tmp/ccxXkH1N.s:1215   .text._ZN8KConsole10getDRvalueEv:000000000000000c .L0 
     /tmp/ccxXkH1N.s:1216   .text._ZN8KConsole10getDRvalueEv:000000000000000c .L0 
     /tmp/ccxXkH1N.s:1219   .text._ZN8KConsole10getDRvalueEv:0000000000000018 .L0 
     /tmp/ccxXkH1N.s:1221   .text._ZN8KConsole10getDRvalueEv:0000000000000020 .L0 
     /tmp/ccxXkH1N.s:1222   .text._ZN8KConsole10getDRvalueEv:0000000000000020 .L0 
     /tmp/ccxXkH1N.s:1224   .text._ZN8KConsole10getDRvalueEv:0000000000000024 .L0 
     /tmp/ccxXkH1N.s:1226   .text._ZN8KConsole10getDRvalueEv:0000000000000028 .L0 
     /tmp/ccxXkH1N.s:1236   .text._ZN8KConsole10setDRvalueEc:0000000000000000 .L0 
     /tmp/ccxXkH1N.s:1238   .text._ZN8KConsole10setDRvalueEc:0000000000000000 .L0 
     /tmp/ccxXkH1N.s:1239   .text._ZN8KConsole10setDRvalueEc:0000000000000004 .L0 
     /tmp/ccxXkH1N.s:1241   .text._ZN8KConsole10setDRvalueEc:0000000000000008 .L0 
     /tmp/ccxXkH1N.s:1243   .text._ZN8KConsole10setDRvalueEc:000000000000000c .L0 
     /tmp/ccxXkH1N.s:1245   .text._ZN8KConsole10setDRvalueEc:000000000000000c .L0 
     /tmp/ccxXkH1N.s:1248   .text._ZN8KConsole10setDRvalueEc:0000000000000018 .L0 
     /tmp/ccxXkH1N.s:1250   .text._ZN8KConsole10setDRvalueEc:000000000000001c .L0 
     /tmp/ccxXkH1N.s:1251   .text._ZN8KConsole10setDRvalueEc:0000000000000020 .L0 
     /tmp/ccxXkH1N.s:1252   .text._ZN8KConsole10setDRvalueEc:0000000000000020 .L0 
     /tmp/ccxXkH1N.s:1254   .text._ZN8KConsole10setDRvalueEc:0000000000000024 .L0 
     /tmp/ccxXkH1N.s:1256   .text._ZN8KConsole10setDRvalueEc:0000000000000028 .L0 
     /tmp/ccxXkH1N.s:1266   .text._ZN8KConsole23getOutputBufferHasSpaceEv:0000000000000000 .L0 
     /tmp/ccxXkH1N.s:1267   .text._ZN8KConsole23getOutputBufferHasSpaceEv:0000000000000000 .L0 
     /tmp/ccxXkH1N.s:1268   .text._ZN8KConsole23getOutputBufferHasSpaceEv:0000000000000004 .L0 
     /tmp/ccxXkH1N.s:1270   .text._ZN8KConsole23getOutputBufferHasSpaceEv:0000000000000008 .L0 
     /tmp/ccxXkH1N.s:1272   .text._ZN8KConsole23getOutputBufferHasSpaceEv:000000000000000c .L0 
     /tmp/ccxXkH1N.s:1274   .text._ZN8KConsole23getOutputBufferHasSpaceEv:000000000000000c .L0 
     /tmp/ccxXkH1N.s:1275   .text._ZN8KConsole23getOutputBufferHasSpaceEv:000000000000000c .L0 
     /tmp/ccxXkH1N.s:1278   .text._ZN8KConsole23getOutputBufferHasSpaceEv:000000000000001c .L0 
     /tmp/ccxXkH1N.s:1279   .text._ZN8KConsole23getOutputBufferHasSpaceEv:000000000000001c .L0 
     /tmp/ccxXkH1N.s:1281   .text._ZN8KConsole23getOutputBufferHasSpaceEv:0000000000000020 .L0 
     /tmp/ccxXkH1N.s:1283   .text._ZN8KConsole23getOutputBufferHasSpaceEv:0000000000000024 .L0 
     /tmp/ccxXkH1N.s:1293   .text._ZN8KConsole13getOutputHeadEv:0000000000000000 .L0 
     /tmp/ccxXkH1N.s:1294   .text._ZN8KConsole13getOutputHeadEv:0000000000000000 .L0 
     /tmp/ccxXkH1N.s:1295   .text._ZN8KConsole13getOutputHeadEv:0000000000000004 .L0 
     /tmp/ccxXkH1N.s:1297   .text._ZN8KConsole13getOutputHeadEv:0000000000000008 .L0 
     /tmp/ccxXkH1N.s:1299   .text._ZN8KConsole13getOutputHeadEv:000000000000000c .L0 
     /tmp/ccxXkH1N.s:1301   .text._ZN8KConsole13getOutputHeadEv:000000000000000c .L0 
     /tmp/ccxXkH1N.s:1302   .text._ZN8KConsole13getOutputHeadEv:000000000000000c .L0 
     /tmp/ccxXkH1N.s:1305   .text._ZN8KConsole13getOutputHeadEv:000000000000001c .L0 
     /tmp/ccxXkH1N.s:1306   .text._ZN8KConsole13getOutputHeadEv:000000000000001c .L0 
     /tmp/ccxXkH1N.s:1308   .text._ZN8KConsole13getOutputHeadEv:0000000000000020 .L0 
     /tmp/ccxXkH1N.s:1310   .text._ZN8KConsole13getOutputHeadEv:0000000000000024 .L0 
     /tmp/ccxXkH1N.s:1320   .text._ZN8KConsole13getOutputTailEv:0000000000000000 .L0 
     /tmp/ccxXkH1N.s:1321   .text._ZN8KConsole13getOutputTailEv:0000000000000000 .L0 
     /tmp/ccxXkH1N.s:1322   .text._ZN8KConsole13getOutputTailEv:0000000000000004 .L0 
     /tmp/ccxXkH1N.s:1324   .text._ZN8KConsole13getOutputTailEv:0000000000000008 .L0 
     /tmp/ccxXkH1N.s:1326   .text._ZN8KConsole13getOutputTailEv:000000000000000c .L0 
GAS LISTING /tmp/ccxXkH1N.s 			page 45


     /tmp/ccxXkH1N.s:1328   .text._ZN8KConsole13getOutputTailEv:000000000000000c .L0 
     /tmp/ccxXkH1N.s:1329   .text._ZN8KConsole13getOutputTailEv:000000000000000c .L0 
     /tmp/ccxXkH1N.s:1332   .text._ZN8KConsole13getOutputTailEv:000000000000001c .L0 
     /tmp/ccxXkH1N.s:1333   .text._ZN8KConsole13getOutputTailEv:000000000000001c .L0 
     /tmp/ccxXkH1N.s:1335   .text._ZN8KConsole13getOutputTailEv:0000000000000020 .L0 
     /tmp/ccxXkH1N.s:1337   .text._ZN8KConsole13getOutputTailEv:0000000000000024 .L0 
     /tmp/ccxXkH1N.s:1348   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000000 .L0 
     /tmp/ccxXkH1N.s:1350   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000000 .L0 
     /tmp/ccxXkH1N.s:1351   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000004 .L0 
     /tmp/ccxXkH1N.s:1353   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000008 .L0 
     /tmp/ccxXkH1N.s:1355   .text._ZN3TCB9setStatusENS_12ThreadStatusE:000000000000000c .L0 
     /tmp/ccxXkH1N.s:1357   .text._ZN3TCB9setStatusENS_12ThreadStatusE:000000000000000c .L0 
     /tmp/ccxXkH1N.s:1358   .text._ZN3TCB9setStatusENS_12ThreadStatusE:000000000000000c .L0 
     /tmp/ccxXkH1N.s:1360   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000010 .L0 
     /tmp/ccxXkH1N.s:1361   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000014 .L0 
     /tmp/ccxXkH1N.s:1362   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000014 .L0 
     /tmp/ccxXkH1N.s:1364   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000018 .L0 
     /tmp/ccxXkH1N.s:1366   .text._ZN3TCB9setStatusENS_12ThreadStatusE:000000000000001c .L0 
     /tmp/ccxXkH1N.s:1376   .text._ZN3TCB12getTimeSliceEv:0000000000000000 .L0 
     /tmp/ccxXkH1N.s:1378   .text._ZN3TCB12getTimeSliceEv:0000000000000000 .L0 
     /tmp/ccxXkH1N.s:1379   .text._ZN3TCB12getTimeSliceEv:0000000000000004 .L0 
     /tmp/ccxXkH1N.s:1381   .text._ZN3TCB12getTimeSliceEv:0000000000000008 .L0 
     /tmp/ccxXkH1N.s:1383   .text._ZN3TCB12getTimeSliceEv:000000000000000c .L0 
     /tmp/ccxXkH1N.s:1385   .text._ZN3TCB12getTimeSliceEv:000000000000000c .L0 
     /tmp/ccxXkH1N.s:1386   .text._ZN3TCB12getTimeSliceEv:000000000000000c .L0 
     /tmp/ccxXkH1N.s:1389   .text._ZN3TCB12getTimeSliceEv:0000000000000014 .L0 
     /tmp/ccxXkH1N.s:1390   .text._ZN3TCB12getTimeSliceEv:0000000000000014 .L0 
     /tmp/ccxXkH1N.s:1392   .text._ZN3TCB12getTimeSliceEv:0000000000000018 .L0 
     /tmp/ccxXkH1N.s:1394   .text._ZN3TCB12getTimeSliceEv:000000000000001c .L0 
     /tmp/ccxXkH1N.s:1404   .text._ZN3TCB7getBodyEv:0000000000000000 .L0 
     /tmp/ccxXkH1N.s:1406   .text._ZN3TCB7getBodyEv:0000000000000000 .L0 
     /tmp/ccxXkH1N.s:1407   .text._ZN3TCB7getBodyEv:0000000000000004 .L0 
     /tmp/ccxXkH1N.s:1409   .text._ZN3TCB7getBodyEv:0000000000000008 .L0 
     /tmp/ccxXkH1N.s:1411   .text._ZN3TCB7getBodyEv:000000000000000c .L0 
     /tmp/ccxXkH1N.s:1413   .text._ZN3TCB7getBodyEv:000000000000000c .L0 
     /tmp/ccxXkH1N.s:1414   .text._ZN3TCB7getBodyEv:000000000000000c .L0 
     /tmp/ccxXkH1N.s:1417   .text._ZN3TCB7getBodyEv:0000000000000014 .L0 
     /tmp/ccxXkH1N.s:1418   .text._ZN3TCB7getBodyEv:0000000000000014 .L0 
     /tmp/ccxXkH1N.s:1420   .text._ZN3TCB7getBodyEv:0000000000000018 .L0 
     /tmp/ccxXkH1N.s:1422   .text._ZN3TCB7getBodyEv:000000000000001c .L0 
     /tmp/ccxXkH1N.s:1432   .text._ZN3TCB10getRunningEv:0000000000000000 .L0 
     /tmp/ccxXkH1N.s:1433   .text._ZN3TCB10getRunningEv:0000000000000000 .L0 
     /tmp/ccxXkH1N.s:1434   .text._ZN3TCB10getRunningEv:0000000000000004 .L0 
     /tmp/ccxXkH1N.s:1436   .text._ZN3TCB10getRunningEv:0000000000000008 .L0 
     /tmp/ccxXkH1N.s:1438   .text._ZN3TCB10getRunningEv:000000000000000c .L0 
     /tmp/ccxXkH1N.s:1440   .text._ZN3TCB10getRunningEv:000000000000000c .L0 
     /tmp/ccxXkH1N.s:1441   .text._ZN3TCB10getRunningEv:000000000000000c .L0 
     /tmp/ccxXkH1N.s:1444   .text._ZN3TCB10getRunningEv:000000000000001c .L0 
     /tmp/ccxXkH1N.s:1445   .text._ZN3TCB10getRunningEv:000000000000001c .L0 
     /tmp/ccxXkH1N.s:1447   .text._ZN3TCB10getRunningEv:0000000000000020 .L0 
     /tmp/ccxXkH1N.s:1449   .text._ZN3TCB10getRunningEv:0000000000000024 .L0 
     /tmp/ccxXkH1N.s:1459   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000000 .L0 
     /tmp/ccxXkH1N.s:1460   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000000 .L0 
     /tmp/ccxXkH1N.s:1461   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000004 .L0 
     /tmp/ccxXkH1N.s:1463   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000008 .L0 
     /tmp/ccxXkH1N.s:1465   .text._ZN3TCB19getRunningTimeSliceEv:000000000000000c .L0 
     /tmp/ccxXkH1N.s:1467   .text._ZN3TCB19getRunningTimeSliceEv:000000000000000c .L0 
GAS LISTING /tmp/ccxXkH1N.s 			page 46


     /tmp/ccxXkH1N.s:1468   .text._ZN3TCB19getRunningTimeSliceEv:000000000000000c .L0 
     /tmp/ccxXkH1N.s:1470   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000018 .L0 
     /tmp/ccxXkH1N.s:1471   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000018 .L0 
     /tmp/ccxXkH1N.s:1473   .text._ZN3TCB19getRunningTimeSliceEv:000000000000001c .L0 
     /tmp/ccxXkH1N.s:1475   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000020 .L0 
     /tmp/ccxXkH1N.s:97     .text._ZN4KSemD2Ev:000000000000004c .L0 
     /tmp/ccxXkH1N.s:1485   .text:0000000000000694 .L0 
     /tmp/ccxXkH1N.s:1170   .text._ZN5Riscv6mc_sipEm:000000000000001c .L0 
     /tmp/ccxXkH1N.s:1200   .text._ZN8KConsole10getSRvalueEv:0000000000000028 .L0 
     /tmp/ccxXkH1N.s:1229   .text._ZN8KConsole10getDRvalueEv:0000000000000028 .L0 
     /tmp/ccxXkH1N.s:1259   .text._ZN8KConsole10setDRvalueEc:0000000000000028 .L0 
     /tmp/ccxXkH1N.s:1286   .text._ZN8KConsole23getOutputBufferHasSpaceEv:0000000000000024 .L0 
     /tmp/ccxXkH1N.s:1313   .text._ZN8KConsole13getOutputHeadEv:0000000000000024 .L0 
     /tmp/ccxXkH1N.s:1340   .text._ZN8KConsole13getOutputTailEv:0000000000000024 .L0 
     /tmp/ccxXkH1N.s:1369   .text._ZN3TCB9setStatusENS_12ThreadStatusE:000000000000001c .L0 
     /tmp/ccxXkH1N.s:1397   .text._ZN3TCB12getTimeSliceEv:000000000000001c .L0 
     /tmp/ccxXkH1N.s:1425   .text._ZN3TCB7getBodyEv:000000000000001c .L0 
     /tmp/ccxXkH1N.s:1452   .text._ZN3TCB10getRunningEv:0000000000000024 .L0 
     /tmp/ccxXkH1N.s:1478   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000020 .L0 
     /tmp/ccxXkH1N.s:252    .rodata:000000000000005c .L13
     /tmp/ccxXkH1N.s:242    .text:00000000000000ac .L0 
     /tmp/ccxXkH1N.s:246    .text:00000000000000c0 .L0 
     /tmp/ccxXkH1N.s:391    .text:0000000000000148 .L0 
     /tmp/ccxXkH1N.s:797    .text:00000000000003e0 .L0 
     /tmp/ccxXkH1N.s:99     .rodata:0000000000000000 .LC0
     /tmp/ccxXkH1N.s:816    .text:000000000000040c .L0 
     /tmp/ccxXkH1N.s:102    .rodata:0000000000000018 .LC1
     /tmp/ccxXkH1N.s:830    .text:0000000000000438 .L0 
     /tmp/ccxXkH1N.s:105    .rodata:0000000000000028 .LC2
     /tmp/ccxXkH1N.s:844    .text:0000000000000464 .L0 
     /tmp/ccxXkH1N.s:108    .rodata:0000000000000030 .LC3
     /tmp/ccxXkH1N.s:1069   .text:0000000000000604 .L0 
     /tmp/ccxXkH1N.s:111    .rodata:0000000000000050 .LC4
     /tmp/ccxXkH1N.s:1074   .text:0000000000000614 .L0 
     /tmp/ccxXkH1N.s:1088   .text:0000000000000640 .L0 
     /tmp/ccxXkH1N.s:222    .text:000000000000006c .L7
     /tmp/ccxXkH1N.s:905    .text:00000000000004d4 .L8
     /tmp/ccxXkH1N.s:787    .text:00000000000003cc .L9
     /tmp/ccxXkH1N.s:812    .text:000000000000040c .L10
     /tmp/ccxXkH1N.s:322    .text:00000000000000d0 .L11
     /tmp/ccxXkH1N.s:736    .text:0000000000000380 .L27
     /tmp/ccxXkH1N.s:873    .text:00000000000004b0 .L28
     /tmp/ccxXkH1N.s:409    .text:0000000000000170 .L29
     /tmp/ccxXkH1N.s:400    .text:0000000000000168 .L30
     /tmp/ccxXkH1N.s:417    .text:0000000000000174 .L31
     /tmp/ccxXkH1N.s:515    .text:0000000000000210 .L32
     /tmp/ccxXkH1N.s:523    .text:0000000000000214 .L33
     /tmp/ccxXkH1N.s:858    .text:0000000000000494 .L49
     /tmp/ccxXkH1N.s:613    .text:0000000000000294 .L35
     /tmp/ccxXkH1N.s:621    .text:0000000000000298 .L36
     /tmp/ccxXkH1N.s:862    .text:000000000000049c .L50
     /tmp/ccxXkH1N.s:866    .text:00000000000004a4 .L51
     /tmp/ccxXkH1N.s:717    .text:0000000000000354 .L39
     /tmp/ccxXkH1N.s:702    .text:0000000000000334 .L40
     /tmp/ccxXkH1N.s:675    .text:00000000000002f4 .L12
     /tmp/ccxXkH1N.s:768    .text:00000000000003c0 .L41
     /tmp/ccxXkH1N.s:776    .text:00000000000003c4 .L42
GAS LISTING /tmp/ccxXkH1N.s 			page 47


     /tmp/ccxXkH1N.s:870    .text:00000000000004ac .L52
     /tmp/ccxXkH1N.s:1116   .text:000000000000067c .L53
     /tmp/ccxXkH1N.s:986    .text:000000000000056c .L45
     /tmp/ccxXkH1N.s:950    .text:0000000000000538 .L46
     /tmp/ccxXkH1N.s:1063   .text:0000000000000604 .L47
     /tmp/ccxXkH1N.s:1035   .text:00000000000005e4 .L48
     /tmp/ccxXkH1N.s:66     .text._ZN4KSemD2Ev:0000000000000038 .L1
     /tmp/ccxXkH1N.s:30     .text._ZN4KSemD2Ev:0000000000000018 .L3
     /tmp/ccxXkH1N.s:327    .text:00000000000000e0 .L26
     /tmp/ccxXkH1N.s:345    .text:00000000000000f4 .L25
     /tmp/ccxXkH1N.s:363    .text:000000000000010c .L24
     /tmp/ccxXkH1N.s:428    .text:000000000000017c .L23
     /tmp/ccxXkH1N.s:462    .text:00000000000001b4 .L22
     /tmp/ccxXkH1N.s:471    .text:00000000000001c0 .L21
     /tmp/ccxXkH1N.s:486    .text:00000000000001dc .L20
     /tmp/ccxXkH1N.s:534    .text:000000000000021c .L19
     /tmp/ccxXkH1N.s:564    .text:0000000000000254 .L18
     /tmp/ccxXkH1N.s:582    .text:000000000000026c .L17
     /tmp/ccxXkH1N.s:600    .text:0000000000000284 .L16
     /tmp/ccxXkH1N.s:648    .text:00000000000002cc .L15
     /tmp/ccxXkH1N.s:664    .text:00000000000002dc .L14
     /tmp/ccxXkH1N.s:1187   .text._ZN8KConsole10getSRvalueEv:000000000000000c .L0 
     /tmp/ccxXkH1N.s:1216   .text._ZN8KConsole10getDRvalueEv:000000000000000c .L0 
     /tmp/ccxXkH1N.s:1245   .text._ZN8KConsole10setDRvalueEc:000000000000000c .L0 
     /tmp/ccxXkH1N.s:1275   .text._ZN8KConsole23getOutputBufferHasSpaceEv:000000000000000c .L0 
     /tmp/ccxXkH1N.s:1302   .text._ZN8KConsole13getOutputHeadEv:000000000000000c .L0 
     /tmp/ccxXkH1N.s:1329   .text._ZN8KConsole13getOutputTailEv:000000000000000c .L0 
     /tmp/ccxXkH1N.s:1441   .text._ZN3TCB10getRunningEv:000000000000000c .L0 
     /tmp/ccxXkH1N.s:1468   .text._ZN3TCB19getRunningTimeSliceEv:000000000000000c .L0 
     /tmp/ccxXkH1N.s:3877   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccxXkH1N.s:6141   .debug_str:0000000000000b39 .LASF233
     /tmp/ccxXkH1N.s:6019   .debug_str:00000000000007e5 .LASF234
     /tmp/ccxXkH1N.s:6087   .debug_str:00000000000009da .LASF235
     /tmp/ccxXkH1N.s:5715   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccxXkH1N.s:5747   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccxXkH1N.s:6055   .debug_str:00000000000008ed .LASF3
     /tmp/ccxXkH1N.s:5919   .debug_str:0000000000000500 .LASF0
     /tmp/ccxXkH1N.s:5947   .debug_str:00000000000005b8 .LASF1
     /tmp/ccxXkH1N.s:6065   .debug_str:0000000000000938 .LASF2
     /tmp/ccxXkH1N.s:5861   .debug_str:0000000000000328 .LASF4
     /tmp/ccxXkH1N.s:6081   .debug_str:00000000000009b9 .LASF5
     /tmp/ccxXkH1N.s:5931   .debug_str:0000000000000548 .LASF6
     /tmp/ccxXkH1N.s:5771   .debug_str:00000000000000a5 .LASF7
     /tmp/ccxXkH1N.s:6029   .debug_str:0000000000000842 .LASF8
     /tmp/ccxXkH1N.s:6017   .debug_str:00000000000007d2 .LASF9
     /tmp/ccxXkH1N.s:5937   .debug_str:0000000000000571 .LASF10
     /tmp/ccxXkH1N.s:5887   .debug_str:0000000000000403 .LASF11
     /tmp/ccxXkH1N.s:5901   .debug_str:0000000000000470 .LASF12
     /tmp/ccxXkH1N.s:5805   .debug_str:0000000000000191 .LASF13
     /tmp/ccxXkH1N.s:5873   .debug_str:00000000000003a0 .LASF14
     /tmp/ccxXkH1N.s:5825   .debug_str:0000000000000216 .LASF15
     /tmp/ccxXkH1N.s:5803   .debug_str:0000000000000181 .LASF16
     /tmp/ccxXkH1N.s:6115   .debug_str:0000000000000a9d .LASF17
     /tmp/ccxXkH1N.s:5857   .debug_str:00000000000002f4 .LASF18
     /tmp/ccxXkH1N.s:6101   .debug_str:0000000000000a4e .LASF19
     /tmp/ccxXkH1N.s:6193   .debug_str:0000000000000d61 .LASF49
     /tmp/ccxXkH1N.s:6051   .debug_str:00000000000008d8 .LASF70
GAS LISTING /tmp/ccxXkH1N.s 			page 48


     /tmp/ccxXkH1N.s:5953   .debug_str:00000000000005de .LASF20
     /tmp/ccxXkH1N.s:5777   .debug_str:00000000000000ca .LASF21
     /tmp/ccxXkH1N.s:6209   .debug_str:0000000000000dd4 .LASF22
     /tmp/ccxXkH1N.s:5975   .debug_str:0000000000000672 .LASF51
     /tmp/ccxXkH1N.s:6171   .debug_str:0000000000000cd1 .LASF53
     /tmp/ccxXkH1N.s:6169   .debug_str:0000000000000cc8 .LASF23
     /tmp/ccxXkH1N.s:6159   .debug_str:0000000000000c67 .LASF25
     /tmp/ccxXkH1N.s:6061   .debug_str:0000000000000924 .LASF27
     /tmp/ccxXkH1N.s:6005   .debug_str:0000000000000767 .LASF29
     /tmp/ccxXkH1N.s:6037   .debug_str:0000000000000863 .LASF24
     /tmp/ccxXkH1N.s:6045   .debug_str:000000000000089c .LASF26
     /tmp/ccxXkH1N.s:5993   .debug_str:000000000000070b .LASF28
     /tmp/ccxXkH1N.s:5939   .debug_str:0000000000000584 .LASF30
     /tmp/ccxXkH1N.s:6207   .debug_str:0000000000000dcc .LASF31
     /tmp/ccxXkH1N.s:6145   .debug_str:0000000000000c02 .LASF32
     /tmp/ccxXkH1N.s:5987   .debug_str:00000000000006e8 .LASF33
     /tmp/ccxXkH1N.s:6003   .debug_str:0000000000000753 .LASF34
     /tmp/ccxXkH1N.s:6111   .debug_str:0000000000000a89 .LASF35
     /tmp/ccxXkH1N.s:6083   .debug_str:00000000000009c0 .LASF36
     /tmp/ccxXkH1N.s:6085   .debug_str:00000000000009d3 .LASF37
     /tmp/ccxXkH1N.s:5813   .debug_str:00000000000001bd .LASF38
     /tmp/ccxXkH1N.s:5853   .debug_str:00000000000002e1 .LASF39
     /tmp/ccxXkH1N.s:5911   .debug_str:00000000000004d3 .LASF40
     /tmp/ccxXkH1N.s:5925   .debug_str:000000000000052c .LASF41
     /tmp/ccxXkH1N.s:5839   .debug_str:000000000000029a .LASF42
     /tmp/ccxXkH1N.s:5773   .debug_str:00000000000000ac .LASF43
     /tmp/ccxXkH1N.s:6069   .debug_str:0000000000000950 .LASF44
     /tmp/ccxXkH1N.s:6063   .debug_str:000000000000092d .LASF45
     /tmp/ccxXkH1N.s:6231   .debug_str:0000000000000e9b .LASF46
     /tmp/ccxXkH1N.s:6195   .debug_str:0000000000000d67 .LASF47
     /tmp/ccxXkH1N.s:6211   .debug_str:0000000000000ddd .LASF48
     /tmp/ccxXkH1N.s:6189   .debug_str:0000000000000d41 .LASF64
     /tmp/ccxXkH1N.s:5973   .debug_str:000000000000065c .LASF66
     /tmp/ccxXkH1N.s:5865   .debug_str:000000000000034a .LASF50
     /tmp/ccxXkH1N.s:5797   .debug_str:0000000000000151 .LASF52
     /tmp/ccxXkH1N.s:6039   .debug_str:000000000000086a .LASF54
     /tmp/ccxXkH1N.s:5877   .debug_str:00000000000003c7 .LASF55
     /tmp/ccxXkH1N.s:5891   .debug_str:0000000000000419 .LASF57
     /tmp/ccxXkH1N.s:5881   .debug_str:00000000000003d4 .LASF56
     /tmp/ccxXkH1N.s:5923   .debug_str:0000000000000517 .LASF58
     /tmp/ccxXkH1N.s:5915   .debug_str:00000000000004ee .LASF59
     /tmp/ccxXkH1N.s:5969   .debug_str:0000000000000643 .LASF60
     /tmp/ccxXkH1N.s:6071   .debug_str:0000000000000968 .LASF61
     /tmp/ccxXkH1N.s:6043   .debug_str:0000000000000892 .LASF62
     /tmp/ccxXkH1N.s:6023   .debug_str:0000000000000804 .LASF63
     /tmp/ccxXkH1N.s:6011   .debug_str:00000000000007a0 .LASF65
     /tmp/ccxXkH1N.s:6173   .debug_str:0000000000000cf2 .LASF67
     /tmp/ccxXkH1N.s:5965   .debug_str:000000000000062c .LASF68
     /tmp/ccxXkH1N.s:6187   .debug_str:0000000000000d38 .LASF69
     /tmp/ccxXkH1N.s:6095   .debug_str:0000000000000a1d .LASF71
     /tmp/ccxXkH1N.s:6035   .debug_str:000000000000085b .LASF72
     /tmp/ccxXkH1N.s:5837   .debug_str:0000000000000293 .LASF73
     /tmp/ccxXkH1N.s:5753   .debug_str:0000000000000026 .LASF74
     /tmp/ccxXkH1N.s:5893   .debug_str:000000000000042f .LASF75
     /tmp/ccxXkH1N.s:5943   .debug_str:00000000000005a7 .LASF76
     /tmp/ccxXkH1N.s:5793   .debug_str:0000000000000133 .LASF77
     /tmp/ccxXkH1N.s:6125   .debug_str:0000000000000acd .LASF144
GAS LISTING /tmp/ccxXkH1N.s 			page 49


     /tmp/ccxXkH1N.s:5809   .debug_str:00000000000001a5 .LASF78
     /tmp/ccxXkH1N.s:5903   .debug_str:000000000000047e .LASF79
     /tmp/ccxXkH1N.s:6053   .debug_str:00000000000008e3 .LASF82
     /tmp/ccxXkH1N.s:5961   .debug_str:000000000000060d .LASF84
     /tmp/ccxXkH1N.s:6113   .debug_str:0000000000000a90 .LASF80
     /tmp/ccxXkH1N.s:6205   .debug_str:0000000000000daa .LASF81
     /tmp/ccxXkH1N.s:6009   .debug_str:000000000000079b .LASF236
     /tmp/ccxXkH1N.s:5971   .debug_str:000000000000064f .LASF83
     /tmp/ccxXkH1N.s:6049   .debug_str:00000000000008c0 .LASF85
     /tmp/ccxXkH1N.s:5843   .debug_str:00000000000002b5 .LASF86
     /tmp/ccxXkH1N.s:6077   .debug_str:0000000000000993 .LASF87
     /tmp/ccxXkH1N.s:6041   .debug_str:000000000000088a .LASF88
     /tmp/ccxXkH1N.s:5967   .debug_str:0000000000000631 .LASF89
     /tmp/ccxXkH1N.s:5849   .debug_str:00000000000002d0 .LASF90
     /tmp/ccxXkH1N.s:6099   .debug_str:0000000000000a38 .LASF91
     /tmp/ccxXkH1N.s:5757   .debug_str:0000000000000037 .LASF92
     /tmp/ccxXkH1N.s:6131   .debug_str:0000000000000ae7 .LASF93
     /tmp/ccxXkH1N.s:6167   .debug_str:0000000000000cb4 .LASF94
     /tmp/ccxXkH1N.s:6007   .debug_str:000000000000077c .LASF95
     /tmp/ccxXkH1N.s:6165   .debug_str:0000000000000ca9 .LASF96
     /tmp/ccxXkH1N.s:5875   .debug_str:00000000000003af .LASF97
     /tmp/ccxXkH1N.s:6235   .debug_str:0000000000000ec0 .LASF98
     /tmp/ccxXkH1N.s:5869   .debug_str:000000000000035f .LASF99
     /tmp/ccxXkH1N.s:5845   .debug_str:00000000000002c2 .LASF100
     /tmp/ccxXkH1N.s:5817   .debug_str:00000000000001d6 .LASF101
     /tmp/ccxXkH1N.s:6179   .debug_str:0000000000000d1f .LASF102
     /tmp/ccxXkH1N.s:5779   .debug_str:00000000000000d3 .LASF103
     /tmp/ccxXkH1N.s:6233   .debug_str:0000000000000eb3 .LASF104
     /tmp/ccxXkH1N.s:5897   .debug_str:000000000000044f .LASF105
     /tmp/ccxXkH1N.s:5759   .debug_str:0000000000000042 .LASF106
     /tmp/ccxXkH1N.s:6001   .debug_str:0000000000000746 .LASF107
     /tmp/ccxXkH1N.s:6217   .debug_str:0000000000000e11 .LASF209
     /tmp/ccxXkH1N.s:6157   .debug_str:0000000000000c5f .LASF108
     /tmp/ccxXkH1N.s:5801   .debug_str:0000000000000172 .LASF109
     /tmp/ccxXkH1N.s:6227   .debug_str:0000000000000e74 .LASF110
     /tmp/ccxXkH1N.s:6121   .debug_str:0000000000000abd .LASF111
     /tmp/ccxXkH1N.s:6147   .debug_str:0000000000000c16 .LASF112
     /tmp/ccxXkH1N.s:6139   .debug_str:0000000000000b29 .LASF113
     /tmp/ccxXkH1N.s:6013   .debug_str:00000000000007a8 .LASF114
     /tmp/ccxXkH1N.s:5867   .debug_str:0000000000000352 .LASF115
     /tmp/ccxXkH1N.s:6079   .debug_str:00000000000009ab .LASF116
     /tmp/ccxXkH1N.s:6183   .debug_str:0000000000000d2c .LASF117
     /tmp/ccxXkH1N.s:6137   .debug_str:0000000000000b21 .LASF118
     /tmp/ccxXkH1N.s:6047   .debug_str:00000000000008af .LASF119
     /tmp/ccxXkH1N.s:5833   .debug_str:000000000000026b .LASF141
     /tmp/ccxXkH1N.s:5763   .debug_str:000000000000005a .LASF150
     /tmp/ccxXkH1N.s:5889   .debug_str:0000000000000413 .LASF120
     /tmp/ccxXkH1N.s:6103   .debug_str:0000000000000a64 .LASF121
     /tmp/ccxXkH1N.s:5945   .debug_str:00000000000005b0 .LASF122
     /tmp/ccxXkH1N.s:5999   .debug_str:0000000000000733 .LASF123
     /tmp/ccxXkH1N.s:5847   .debug_str:00000000000002cb .LASF124
     /tmp/ccxXkH1N.s:5799   .debug_str:0000000000000162 .LASF125
     /tmp/ccxXkH1N.s:6119   .debug_str:0000000000000ab6 .LASF126
     /tmp/ccxXkH1N.s:5789   .debug_str:0000000000000118 .LASF127
     /tmp/ccxXkH1N.s:5841   .debug_str:00000000000002ac .LASF128
     /tmp/ccxXkH1N.s:5991   .debug_str:00000000000006f5 .LASF129
     /tmp/ccxXkH1N.s:5855   .debug_str:00000000000002e7 .LASF130
GAS LISTING /tmp/ccxXkH1N.s 			page 50


     /tmp/ccxXkH1N.s:5765   .debug_str:0000000000000082 .LASF131
     /tmp/ccxXkH1N.s:5917   .debug_str:00000000000004fa .LASF132
     /tmp/ccxXkH1N.s:6133   .debug_str:0000000000000aff .LASF133
     /tmp/ccxXkH1N.s:5761   .debug_str:0000000000000052 .LASF134
     /tmp/ccxXkH1N.s:5775   .debug_str:00000000000000b7 .LASF135
     /tmp/ccxXkH1N.s:6199   .debug_str:0000000000000d8c .LASF136
     /tmp/ccxXkH1N.s:6163   .debug_str:0000000000000c99 .LASF137
     /tmp/ccxXkH1N.s:6067   .debug_str:0000000000000946 .LASF138
     /tmp/ccxXkH1N.s:5941   .debug_str:0000000000000597 .LASF139
     /tmp/ccxXkH1N.s:6031   .debug_str:0000000000000849 .LASF140
     /tmp/ccxXkH1N.s:5851   .debug_str:00000000000002db .LASF142
     /tmp/ccxXkH1N.s:6153   .debug_str:0000000000000c3a .LASF237
     /tmp/ccxXkH1N.s:5995   .debug_str:0000000000000712 .LASF143
     /tmp/ccxXkH1N.s:6185   .debug_str:0000000000000d33 .LASF145
     /tmp/ccxXkH1N.s:6151   .debug_str:0000000000000c35 .LASF146
     /tmp/ccxXkH1N.s:5807   .debug_str:00000000000001a0 .LASF147
     /tmp/ccxXkH1N.s:5859   .debug_str:000000000000030a .LASF148
     /tmp/ccxXkH1N.s:5835   .debug_str:0000000000000279 .LASF149
     /tmp/ccxXkH1N.s:5827   .debug_str:0000000000000226 .LASF151
     /tmp/ccxXkH1N.s:5785   .debug_str:0000000000000107 .LASF152
     /tmp/ccxXkH1N.s:5979   .debug_str:00000000000006a2 .LASF153
     /tmp/ccxXkH1N.s:5783   .debug_str:00000000000000f2 .LASF154
     /tmp/ccxXkH1N.s:5895   .debug_str:0000000000000437 .LASF155
     /tmp/ccxXkH1N.s:6155   .debug_str:0000000000000c47 .LASF238
     /tmp/ccxXkH1N.s:5933   .debug_str:000000000000055a .LASF156
     /tmp/ccxXkH1N.s:5831   .debug_str:0000000000000256 .LASF157
     /tmp/ccxXkH1N.s:5927   .debug_str:0000000000000532 .LASF158
     /tmp/ccxXkH1N.s:5863   .debug_str:000000000000032e .LASF159
     /tmp/ccxXkH1N.s:5951   .debug_str:00000000000005d6 .LASF160
     /tmp/ccxXkH1N.s:5981   .debug_str:00000000000006a7 .LASF161
     /tmp/ccxXkH1N.s:5791   .debug_str:000000000000012a .LASF162
     /tmp/ccxXkH1N.s:5977   .debug_str:0000000000000686 .LASF163
     /tmp/ccxXkH1N.s:5829   .debug_str:0000000000000241 .LASF164
     /tmp/ccxXkH1N.s:6191   .debug_str:0000000000000d4b .LASF165
     /tmp/ccxXkH1N.s:5959   .debug_str:0000000000000604 .LASF166
     /tmp/ccxXkH1N.s:6117   .debug_str:0000000000000aa9 .LASF167
     /tmp/ccxXkH1N.s:6161   .debug_str:0000000000000c7c .LASF168
     /tmp/ccxXkH1N.s:6089   .debug_str:00000000000009f8 .LASF169
     /tmp/ccxXkH1N.s:5997   .debug_str:000000000000071e .LASF170
     /tmp/ccxXkH1N.s:6021   .debug_str:00000000000007fe .LASF171
     /tmp/ccxXkH1N.s:5985   .debug_str:00000000000006d3 .LASF172
     /tmp/ccxXkH1N.s:5929   .debug_str:000000000000053a .LASF173
     /tmp/ccxXkH1N.s:6015   .debug_str:00000000000007b4 .LASF174
     /tmp/ccxXkH1N.s:5907   .debug_str:00000000000004ae .LASF175
     /tmp/ccxXkH1N.s:6059   .debug_str:0000000000000907 .LASF176
     /tmp/ccxXkH1N.s:5815   .debug_str:00000000000001d0 .LASF177
     /tmp/ccxXkH1N.s:5795   .debug_str:000000000000013c .LASF178
     /tmp/ccxXkH1N.s:5767   .debug_str:0000000000000090 .LASF179
     /tmp/ccxXkH1N.s:6197   .debug_str:0000000000000d71 .LASF180
     /tmp/ccxXkH1N.s:5751   .debug_str:000000000000001b .LASF181
     /tmp/ccxXkH1N.s:5885   .debug_str:00000000000003e8 .LASF182
     /tmp/ccxXkH1N.s:6123   .debug_str:0000000000000ac2 .LASF183
     /tmp/ccxXkH1N.s:5749   .debug_str:0000000000000000 .LASF184
     /tmp/ccxXkH1N.s:5957   .debug_str:00000000000005ec .LASF185
     /tmp/ccxXkH1N.s:5871   .debug_str:0000000000000378 .LASF186
     /tmp/ccxXkH1N.s:6075   .debug_str:0000000000000985 .LASF187
     /tmp/ccxXkH1N.s:6027   .debug_str:0000000000000824 .LASF188
GAS LISTING /tmp/ccxXkH1N.s 			page 51


     /tmp/ccxXkH1N.s:5811   .debug_str:00000000000001af .LASF189
     /tmp/ccxXkH1N.s:6221   .debug_str:0000000000000e35 .LASF190
     /tmp/ccxXkH1N.s:6135   .debug_str:0000000000000b10 .LASF191
     /tmp/ccxXkH1N.s:6107   .debug_str:0000000000000a70 .LASF192
     /tmp/ccxXkH1N.s:5899   .debug_str:000000000000045b .LASF193
     /tmp/ccxXkH1N.s:6127   .debug_str:0000000000000ad5 .LASF194
     /tmp/ccxXkH1N.s:5883   .debug_str:00000000000003da .LASF195
     /tmp/ccxXkH1N.s:5755   .debug_str:000000000000002e .LASF239
     /tmp/ccxXkH1N.s:6175   .debug_str:0000000000000d08 .LASF196
     /tmp/ccxXkH1N.s:5983   .debug_str:00000000000006c6 .LASF197
     /tmp/ccxXkH1N.s:5921   .debug_str:000000000000050d .LASF198
     /tmp/ccxXkH1N.s:6033   .debug_str:0000000000000851 .LASF199
     /tmp/ccxXkH1N.s:5949   .debug_str:00000000000005cb .LASF200
     /tmp/ccxXkH1N.s:6177   .debug_str:0000000000000d14 .LASF201
     /tmp/ccxXkH1N.s:6091   .debug_str:00000000000009fe .LASF202
     /tmp/ccxXkH1N.s:6129   .debug_str:0000000000000ae2 .LASF203
     /tmp/ccxXkH1N.s:5935   .debug_str:0000000000000567 .LASF204
     /tmp/ccxXkH1N.s:6109   .debug_str:0000000000000a84 .LASF205
     /tmp/ccxXkH1N.s:5989   .debug_str:00000000000006f0 .LASF206
     /tmp/ccxXkH1N.s:6225   .debug_str:0000000000000e67 .LASF207
     /tmp/ccxXkH1N.s:6215   .debug_str:0000000000000dff .LASF208
     /tmp/ccxXkH1N.s:5909   .debug_str:00000000000004bb .LASF210
     /tmp/ccxXkH1N.s:6223   .debug_str:0000000000000e53 .LASF240
     /tmp/ccxXkH1N.s:5787   .debug_str:000000000000010d .LASF211
     /tmp/ccxXkH1N.s:6229   .debug_str:0000000000000e7a .LASF212
     /tmp/ccxXkH1N.s:5955   .debug_str:00000000000005e7 .LASF213
     /tmp/ccxXkH1N.s:5821   .debug_str:00000000000001ee .LASF214
     /tmp/ccxXkH1N.s:6025   .debug_str:0000000000000813 .LASF215
     /tmp/ccxXkH1N.s:118    .text:0000000000000000 .LFB56
     /tmp/ccxXkH1N.s:1135   .text:0000000000000694 .LFE56
     /tmp/ccxXkH1N.s:6105   .debug_str:0000000000000a69 .LASF216
     /tmp/ccxXkH1N.s:5213   .debug_loc:0000000000000000 .LLST5
     /tmp/ccxXkH1N.s:6143   .debug_str:0000000000000bfd .LASF217
     /tmp/ccxXkH1N.s:5244   .debug_loc:0000000000000087 .LLST6
     /tmp/ccxXkH1N.s:6201   .debug_str:0000000000000d99 .LASF218
     /tmp/ccxXkH1N.s:5275   .debug_loc:000000000000010e .LLST7
     /tmp/ccxXkH1N.s:5297   .debug_loc:000000000000016d .LLST8
     /tmp/ccxXkH1N.s:5319   .debug_loc:00000000000001cc .LLST9
     /tmp/ccxXkH1N.s:5341   .debug_loc:000000000000022d .LLST10
     /tmp/ccxXkH1N.s:5363   .debug_loc:000000000000028e .LLST11
     /tmp/ccxXkH1N.s:5385   .debug_loc:00000000000002ef .LLST12
     /tmp/ccxXkH1N.s:694    .text:0000000000000324 .LBB30
     /tmp/ccxXkH1N.s:732    .text:000000000000037c .LBE30
     /tmp/ccxXkH1N.s:5569   .debug_loc:0000000000000620 .LLST13
     /tmp/ccxXkH1N.s:698    .text:000000000000032c .LVL58
     /tmp/ccxXkH1N.s:707    .text:000000000000033c .LVL60
     /tmp/ccxXkH1N.s:723    .text:0000000000000364 .LVL61
     /tmp/ccxXkH1N.s:727    .text:000000000000036c .LVL62
     /tmp/ccxXkH1N.s:731    .text:000000000000037c .LVL63
     /tmp/ccxXkH1N.s:916    .text:00000000000004e8 .LBB33
     /tmp/ccxXkH1N.s:979    .text:0000000000000568 .LBE33
     /tmp/ccxXkH1N.s:5577   .debug_loc:0000000000000645 .LLST14
     /tmp/ccxXkH1N.s:920    .text:00000000000004f0 .LVL80
     /tmp/ccxXkH1N.s:932    .text:000000000000050c .LVL82
     /tmp/ccxXkH1N.s:944    .text:0000000000000528 .LVL83
     /tmp/ccxXkH1N.s:949    .text:0000000000000538 .LVL84
     /tmp/ccxXkH1N.s:957    .text:000000000000054c .LVL85
GAS LISTING /tmp/ccxXkH1N.s 			page 52


     /tmp/ccxXkH1N.s:978    .text:0000000000000568 .LVL86
     /tmp/ccxXkH1N.s:334    .text:00000000000000ec .LVL22
     /tmp/ccxXkH1N.s:352    .text:0000000000000104 .LVL24
     /tmp/ccxXkH1N.s:377    .text:0000000000000130 .LVL26
     /tmp/ccxXkH1N.s:399    .text:0000000000000168 .LVL27
     /tmp/ccxXkH1N.s:433    .text:0000000000000184 .LVL29
     /tmp/ccxXkH1N.s:438    .text:0000000000000198 .LVL30
     /tmp/ccxXkH1N.s:442    .text:00000000000001a0 .LVL31
     /tmp/ccxXkH1N.s:458    .text:00000000000001b0 .LVL32
     /tmp/ccxXkH1N.s:467    .text:00000000000001bc .LVL34
     /tmp/ccxXkH1N.s:478    .text:00000000000001d0 .LVL36
     /tmp/ccxXkH1N.s:482    .text:00000000000001d8 .LVL37
     /tmp/ccxXkH1N.s:497    .text:00000000000001f4 .LVL39
     /tmp/ccxXkH1N.s:541    .text:000000000000022c .LVL41
     /tmp/ccxXkH1N.s:557    .text:0000000000000244 .LVL42
     /tmp/ccxXkH1N.s:560    .text:0000000000000250 .LVL43
     /tmp/ccxXkH1N.s:571    .text:0000000000000264 .LVL45
     /tmp/ccxXkH1N.s:589    .text:000000000000027c .LVL47
     /tmp/ccxXkH1N.s:635    .text:00000000000002ac .LVL49
     /tmp/ccxXkH1N.s:640    .text:00000000000002c0 .LVL50
     /tmp/ccxXkH1N.s:644    .text:00000000000002c8 .LVL51
     /tmp/ccxXkH1N.s:653    .text:00000000000002d4 .LVL53
     /tmp/ccxXkH1N.s:672    .text:00000000000002f0 .LVL55
     /tmp/ccxXkH1N.s:681    .text:00000000000002fc .LVL56
     /tmp/ccxXkH1N.s:686    .text:000000000000030c .LVL57
     /tmp/ccxXkH1N.s:750    .text:00000000000003a4 .LVL65
     /tmp/ccxXkH1N.s:794    .text:00000000000003dc .LVL67
     /tmp/ccxXkH1N.s:808    .text:0000000000000408 .LVL68
     /tmp/ccxXkH1N.s:818    .text:000000000000041c .LVL70
     /tmp/ccxXkH1N.s:827    .text:0000000000000438 .LVL71
     /tmp/ccxXkH1N.s:832    .text:0000000000000448 .LVL72
     /tmp/ccxXkH1N.s:841    .text:0000000000000464 .LVL73
     /tmp/ccxXkH1N.s:846    .text:0000000000000474 .LVL74
     /tmp/ccxXkH1N.s:855    .text:0000000000000490 .LVL75
     /tmp/ccxXkH1N.s:999    .text:0000000000000588 .LVL88
     /tmp/ccxXkH1N.s:1003   .text:0000000000000590 .LVL89
     /tmp/ccxXkH1N.s:1013   .text:00000000000005a8 .LVL90
     /tmp/ccxXkH1N.s:1019   .text:00000000000005b8 .LVL91
     /tmp/ccxXkH1N.s:1023   .text:00000000000005c8 .LVL92
     /tmp/ccxXkH1N.s:1034   .text:00000000000005e4 .LVL93
     /tmp/ccxXkH1N.s:1056   .text:0000000000000600 .LVL94
     /tmp/ccxXkH1N.s:1071   .text:0000000000000614 .LVL96
     /tmp/ccxXkH1N.s:1076   .text:0000000000000624 .LVL97
     /tmp/ccxXkH1N.s:1085   .text:0000000000000640 .LVL98
     /tmp/ccxXkH1N.s:1090   .text:0000000000000650 .LVL99
     /tmp/ccxXkH1N.s:1099   .text:000000000000066c .LVL100
     /tmp/ccxXkH1N.s:5879   .debug_str:00000000000003cf .LASF219
     /tmp/ccxXkH1N.s:5769   .debug_str:000000000000009b .LASF220
     /tmp/ccxXkH1N.s:5781   .debug_str:00000000000000e5 .LASF241
     /tmp/ccxXkH1N.s:11     .text._ZN4KSemD2Ev:0000000000000000 .LFB58
     /tmp/ccxXkH1N.s:85     .text._ZN4KSemD2Ev:000000000000004c .LFE58
     /tmp/ccxXkH1N.s:5589   .debug_loc:000000000000067d .LLST0
     /tmp/ccxXkH1N.s:31     .text._ZN4KSemD2Ev:0000000000000018 .LBB19
     /tmp/ccxXkH1N.s:71     .text._ZN4KSemD2Ev:0000000000000038 .LBE19
     /tmp/ccxXkH1N.s:5607   .debug_loc:00000000000006c9 .LLST1
     /tmp/ccxXkH1N.s:36     .text._ZN4KSemD2Ev:0000000000000018 .LBB21
     /tmp/ccxXkH1N.s:43     .text._ZN4KSemD2Ev:000000000000001c .LBE21
GAS LISTING /tmp/ccxXkH1N.s 			page 53


     /tmp/ccxXkH1N.s:5625   .debug_loc:0000000000000706 .LLST2
     /tmp/ccxXkH1N.s:46     .text._ZN4KSemD2Ev:0000000000000020 .LBB23
     /tmp/ccxXkH1N.s:69     .text._ZN4KSemD2Ev:0000000000000038 .LBE23
     /tmp/ccxXkH1N.s:5634   .debug_loc:000000000000072b .LLST3
     /tmp/ccxXkH1N.s:58     .text._ZN4KSemD2Ev:000000000000002c .LBB24
     /tmp/ccxXkH1N.s:68     .text._ZN4KSemD2Ev:0000000000000038 .LBE24
     /tmp/ccxXkH1N.s:5641   .debug_loc:000000000000074e .LLST4
     /tmp/ccxXkH1N.s:63     .text._ZN4KSemD2Ev:0000000000000034 .LVL5
     /tmp/ccxXkH1N.s:1457   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000000 .LFB49
     /tmp/ccxXkH1N.s:1476   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000020 .LFE49
     /tmp/ccxXkH1N.s:1430   .text._ZN3TCB10getRunningEv:0000000000000000 .LFB47
     /tmp/ccxXkH1N.s:1450   .text._ZN3TCB10getRunningEv:0000000000000024 .LFE47
     /tmp/ccxXkH1N.s:1402   .text._ZN3TCB7getBodyEv:0000000000000000 .LFB46
     /tmp/ccxXkH1N.s:1423   .text._ZN3TCB7getBodyEv:000000000000001c .LFE46
     /tmp/ccxXkH1N.s:5648   .debug_loc:0000000000000771 .LLST16
     /tmp/ccxXkH1N.s:1374   .text._ZN3TCB12getTimeSliceEv:0000000000000000 .LFB44
     /tmp/ccxXkH1N.s:1395   .text._ZN3TCB12getTimeSliceEv:000000000000001c .LFE44
     /tmp/ccxXkH1N.s:5662   .debug_loc:00000000000007aa .LLST15
     /tmp/ccxXkH1N.s:1345   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000000 .LFB42
     /tmp/ccxXkH1N.s:1367   .text._ZN3TCB9setStatusENS_12ThreadStatusE:000000000000001c .LFE42
     /tmp/ccxXkH1N.s:5819   .debug_str:00000000000001e9 .LASF221
     /tmp/ccxXkH1N.s:1318   .text._ZN8KConsole13getOutputTailEv:0000000000000000 .LFB38
     /tmp/ccxXkH1N.s:1338   .text._ZN8KConsole13getOutputTailEv:0000000000000024 .LFE38
     /tmp/ccxXkH1N.s:1291   .text._ZN8KConsole13getOutputHeadEv:0000000000000000 .LFB37
     /tmp/ccxXkH1N.s:1311   .text._ZN8KConsole13getOutputHeadEv:0000000000000024 .LFE37
     /tmp/ccxXkH1N.s:1264   .text._ZN8KConsole23getOutputBufferHasSpaceEv:0000000000000000 .LFB36
     /tmp/ccxXkH1N.s:1284   .text._ZN8KConsole23getOutputBufferHasSpaceEv:0000000000000024 .LFE36
     /tmp/ccxXkH1N.s:1234   .text._ZN8KConsole10setDRvalueEc:0000000000000000 .LFB35
     /tmp/ccxXkH1N.s:1257   .text._ZN8KConsole10setDRvalueEc:0000000000000028 .LFE35
     /tmp/ccxXkH1N.s:1205   .text._ZN8KConsole10getDRvalueEv:0000000000000000 .LFB34
     /tmp/ccxXkH1N.s:1227   .text._ZN8KConsole10getDRvalueEv:0000000000000028 .LFE34
     /tmp/ccxXkH1N.s:1175   .text._ZN8KConsole10getSRvalueEv:0000000000000000 .LFB33
     /tmp/ccxXkH1N.s:1198   .text._ZN8KConsole10getSRvalueEv:0000000000000028 .LFE33
     /tmp/ccxXkH1N.s:6073   .debug_str:0000000000000980 .LASF242
     /tmp/ccxXkH1N.s:6149   .debug_str:0000000000000c20 .LASF243
     /tmp/ccxXkH1N.s:1142   .text._ZN5Riscv6mc_sipEm:0000000000000000 .LFB7
     /tmp/ccxXkH1N.s:1168   .text._ZN5Riscv6mc_sipEm:000000000000001c .LFE7
     /tmp/ccxXkH1N.s:6181   .debug_str:0000000000000d27 .LASF222
     /tmp/ccxXkH1N.s:6057   .debug_str:00000000000008f2 .LASF223
     /tmp/ccxXkH1N.s:5905   .debug_str:00000000000004a3 .LASF225
     /tmp/ccxXkH1N.s:5963   .debug_str:0000000000000621 .LASF224
     /tmp/ccxXkH1N.s:6097   .debug_str:0000000000000a2a .LASF226
     /tmp/ccxXkH1N.s:5823   .debug_str:0000000000000203 .LASF227
     /tmp/ccxXkH1N.s:6213   .debug_str:0000000000000df3 .LASF228
     /tmp/ccxXkH1N.s:6093   .debug_str:0000000000000a0e .LASF229
     /tmp/ccxXkH1N.s:6203   .debug_str:0000000000000da1 .LASF230
     /tmp/ccxXkH1N.s:6219   .debug_str:0000000000000e27 .LASF231
     /tmp/ccxXkH1N.s:5913   .debug_str:00000000000004e5 .LASF232
     /tmp/ccxXkH1N.s:141    .text:000000000000001c .LVL7
     /tmp/ccxXkH1N.s:148    .text:0000000000000020 .LVL8
     /tmp/ccxXkH1N.s:904    .text:00000000000004d4 .LVL78
     /tmp/ccxXkH1N.s:911    .text:00000000000004d8 .LVL79
     /tmp/ccxXkH1N.s:1127   .text:0000000000000688 .LVL101
     /tmp/ccxXkH1N.s:1132   .text:0000000000000690 .LVL102
     /tmp/ccxXkH1N.s:151    .text:0000000000000024 .LVL9
     /tmp/ccxXkH1N.s:158    .text:0000000000000028 .LVL10
     /tmp/ccxXkH1N.s:881    .text:00000000000004bc .LVL76
GAS LISTING /tmp/ccxXkH1N.s 			page 54


     /tmp/ccxXkH1N.s:893    .text:00000000000004c8 .LVL77
     /tmp/ccxXkH1N.s:161    .text:000000000000002c .LVL11
     /tmp/ccxXkH1N.s:169    .text:0000000000000030 .LVL12
     /tmp/ccxXkH1N.s:172    .text:0000000000000034 .LVL13
     /tmp/ccxXkH1N.s:179    .text:0000000000000038 .LVL14
     /tmp/ccxXkH1N.s:182    .text:000000000000003c .LVL15
     /tmp/ccxXkH1N.s:189    .text:0000000000000040 .LVL16
     /tmp/ccxXkH1N.s:192    .text:0000000000000044 .LVL17
     /tmp/ccxXkH1N.s:199    .text:0000000000000048 .LVL18
     /tmp/ccxXkH1N.s:202    .text:000000000000004c .LVL19
     /tmp/ccxXkH1N.s:209    .text:0000000000000050 .LVL20
     /tmp/ccxXkH1N.s:212    .text:0000000000000054 .LVL21
     /tmp/ccxXkH1N.s:344    .text:00000000000000f4 .LVL23
     /tmp/ccxXkH1N.s:362    .text:000000000000010c .LVL25
     /tmp/ccxXkH1N.s:427    .text:000000000000017c .LVL28
     /tmp/ccxXkH1N.s:461    .text:00000000000001b4 .LVL33
     /tmp/ccxXkH1N.s:470    .text:00000000000001c0 .LVL35
     /tmp/ccxXkH1N.s:485    .text:00000000000001dc .LVL38
     /tmp/ccxXkH1N.s:533    .text:000000000000021c .LVL40
     /tmp/ccxXkH1N.s:563    .text:0000000000000254 .LVL44
     /tmp/ccxXkH1N.s:581    .text:000000000000026c .LVL46
     /tmp/ccxXkH1N.s:599    .text:0000000000000284 .LVL48
     /tmp/ccxXkH1N.s:647    .text:00000000000002cc .LVL52
     /tmp/ccxXkH1N.s:663    .text:00000000000002dc .LVL54
     /tmp/ccxXkH1N.s:735    .text:0000000000000380 .LVL64
     /tmp/ccxXkH1N.s:786    .text:00000000000003cc .LVL66
     /tmp/ccxXkH1N.s:811    .text:000000000000040c .LVL69
     /tmp/ccxXkH1N.s:985    .text:000000000000056c .LVL87
     /tmp/ccxXkH1N.s:1062   .text:0000000000000604 .LVL95
     /tmp/ccxXkH1N.s:701    .text:0000000000000334 .LVL59
     /tmp/ccxXkH1N.s:924    .text:00000000000004f8 .LVL81
     /tmp/ccxXkH1N.s:17     .text._ZN4KSemD2Ev:0000000000000000 .LVL0
     /tmp/ccxXkH1N.s:29     .text._ZN4KSemD2Ev:0000000000000018 .LVL1
     /tmp/ccxXkH1N.s:80     .text._ZN4KSemD2Ev:0000000000000044 .LVL6
     /tmp/ccxXkH1N.s:41     .text._ZN4KSemD2Ev:000000000000001c .LVL2
     /tmp/ccxXkH1N.s:48     .text._ZN4KSemD2Ev:0000000000000020 .LVL3
     /tmp/ccxXkH1N.s:57     .text._ZN4KSemD2Ev:000000000000002c .LVL4
     /tmp/ccxXkH1N.s:1405   .text._ZN3TCB7getBodyEv:0000000000000000 .LVL108
     /tmp/ccxXkH1N.s:1415   .text._ZN3TCB7getBodyEv:0000000000000010 .LVL109
     /tmp/ccxXkH1N.s:1377   .text._ZN3TCB12getTimeSliceEv:0000000000000000 .LVL106
     /tmp/ccxXkH1N.s:1387   .text._ZN3TCB12getTimeSliceEv:0000000000000010 .LVL107
     /tmp/ccxXkH1N.s:1486   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccxXkH1N.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccxXkH1N.s:1479   .text:0000000000000694 .Letext0
     /tmp/ccxXkH1N.s:88     .gcc_except_table._ZN4KSemD2Ev:0000000000000000 .LLSDA58
                           .group:0000000000000000 _ZN4KSemD5Ev

UNDEFINED SYMBOLS
_Z8mem_freePv
__gxx_personality_v0
_ZN7KMemory7kmallocEm
_ZN7KMemory5kfreeEPv
_ZN3TCB12createThreadEPFvPvES0_Pm
main
_ZN9Scheduler3putEP3TCB
_ZN3TCB13releaseJoinedEv
_ZN3TCB8dispatchEv
GAS LISTING /tmp/ccxXkH1N.s 			page 55


_ZN3TCB10threadJoinEPS_
_ZN4KSem7initSemEj
_ZN4KSem8closeSemEPS_
_ZN4KSemdlEPv
_ZN4KSem4waitEv
_ZN4KSem6signalEv
_ZN9Scheduler10putToSleepEP3TCBm
_ZN8KConsole5kgetcEv
_ZN8KConsole5kputcEc
_ZN8KConsole13getFromOutputEv
_Z10sem_signalP4KSem
_Z11printStringPKc
_Z8printIntiii
plic_claim
_ZN8KConsole12placeInInputEc
plic_complete
_ZN9Scheduler4wakeEv
_ZN8KConsole2srE
_ZN8KConsole2drE
_ZN8KConsole20outputBufferHasSpaceE
_ZN8KConsole10outputHeadE
_ZN8KConsole10outputTailE
_ZN3TCB7runningE
_ZN3TCB16runningTimeSliceE
