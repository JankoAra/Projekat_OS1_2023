GAS LISTING /tmp/ccRqyiOg.s 			page 1


   1              		.file	"interruptRoutine.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.section	.text._ZN4KSemD2Ev,"axG",@progbits,_ZN4KSemD5Ev,comdat
   7              		.align	2
   8              		.weak	_ZN4KSemD2Ev
  10              	_ZN4KSemD2Ev:
  11              	.LFB59:
  12              		.file 1 "src/../h/KSem.hpp"
   1:src/../h/KSem.hpp **** //
   2:src/../h/KSem.hpp **** // Created by os on 6/4/23.
   3:src/../h/KSem.hpp **** //
   4:src/../h/KSem.hpp **** 
   5:src/../h/KSem.hpp **** #ifndef PROJEKAT2023_KSEM_HPP
   6:src/../h/KSem.hpp **** #define PROJEKAT2023_KSEM_HPP
   7:src/../h/KSem.hpp **** 
   8:src/../h/KSem.hpp **** #include "../h/ThreadQueue.hpp"
   9:src/../h/KSem.hpp **** 
  10:src/../h/KSem.hpp **** //klasa napravljena po uzoru na semafor u skolskom jezgru
  11:src/../h/KSem.hpp **** class KSem {
  13              		.loc 1 11 7
  14              		.cfi_startproc
  15              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
  16              		.cfi_lsda 0x1b,.LLSDA59
  17              	.LVL0:
  18 0000 130101FE 		addi	sp,sp,-32
  19              		.cfi_def_cfa_offset 32
  20 0004 233C1100 		sd	ra,24(sp)
  21 0008 23388100 		sd	s0,16(sp)
  22 000c 23349100 		sd	s1,8(sp)
  23              		.cfi_offset 1, -8
  24              		.cfi_offset 8, -16
  25              		.cfi_offset 9, -24
  26 0010 13040102 		addi	s0,sp,32
  27              		.cfi_def_cfa 8, 0
  28 0014 93040500 		mv	s1,a0
  29              	.LVL1:
  30              	.L3:
  31              	.LBB19:
  32              	.LBB20:
  33              		.file 2 "src/../h/../h/ThreadQueue.hpp"
   1:src/../h/../h/ThreadQueue.hpp **** //
   2:src/../h/../h/ThreadQueue.hpp **** // Created by os on 6/4/23.
   3:src/../h/../h/ThreadQueue.hpp **** //
   4:src/../h/../h/ThreadQueue.hpp **** 
   5:src/../h/../h/ThreadQueue.hpp **** #ifndef PROJEKAT2023_THREADQUEUE_HPP
   6:src/../h/../h/ThreadQueue.hpp **** #define PROJEKAT2023_THREADQUEUE_HPP
   7:src/../h/../h/ThreadQueue.hpp **** 
   8:src/../h/../h/ThreadQueue.hpp **** #include "../h/syscall_c.hpp"
   9:src/../h/../h/ThreadQueue.hpp **** 
  10:src/../h/../h/ThreadQueue.hpp **** class TCB;
  11:src/../h/../h/ThreadQueue.hpp **** 
  12:src/../h/../h/ThreadQueue.hpp **** class ThreadQueue {
  13:src/../h/../h/ThreadQueue.hpp **** private:
  14:src/../h/../h/ThreadQueue.hpp ****     struct Node {
GAS LISTING /tmp/ccRqyiOg.s 			page 2


  15:src/../h/../h/ThreadQueue.hpp ****         TCB* data;
  16:src/../h/../h/ThreadQueue.hpp ****         Node* next;
  17:src/../h/../h/ThreadQueue.hpp **** 
  18:src/../h/../h/ThreadQueue.hpp ****         Node(TCB* d) : data(d), next(nullptr) {}
  19:src/../h/../h/ThreadQueue.hpp **** 
  20:src/../h/../h/ThreadQueue.hpp ****         static void* operator new(size_t size) {
  21:src/../h/../h/ThreadQueue.hpp ****             return mem_alloc(size);
  22:src/../h/../h/ThreadQueue.hpp ****         }
  23:src/../h/../h/ThreadQueue.hpp **** 
  24:src/../h/../h/ThreadQueue.hpp ****         static void operator delete(void* ptr) {
  25:src/../h/../h/ThreadQueue.hpp ****             mem_free(ptr);
  26:src/../h/../h/ThreadQueue.hpp ****         }
  27:src/../h/../h/ThreadQueue.hpp ****     };
  28:src/../h/../h/ThreadQueue.hpp **** 
  29:src/../h/../h/ThreadQueue.hpp ****     Node* front;
  30:src/../h/../h/ThreadQueue.hpp ****     Node* back;
  31:src/../h/../h/ThreadQueue.hpp **** 
  32:src/../h/../h/ThreadQueue.hpp **** public:
  33:src/../h/../h/ThreadQueue.hpp ****     ThreadQueue() : front(nullptr), back(nullptr) {}
  34:src/../h/../h/ThreadQueue.hpp **** 
  35:src/../h/../h/ThreadQueue.hpp ****     ThreadQueue(const ThreadQueue &) = delete;
  36:src/../h/../h/ThreadQueue.hpp **** 
  37:src/../h/../h/ThreadQueue.hpp ****     ThreadQueue &operator=(const ThreadQueue &) = delete;
  38:src/../h/../h/ThreadQueue.hpp **** 
  39:src/../h/../h/ThreadQueue.hpp ****     ~ThreadQueue() {
  40:src/../h/../h/ThreadQueue.hpp ****         while (!isEmpty()) {
  34              		.loc 2 40 9
  35              		.loc 2 40 16
  36              	.LBB21:
  37              	.LBB22:
  41:src/../h/../h/ThreadQueue.hpp ****             Node* node = front;
  42:src/../h/../h/ThreadQueue.hpp ****             front = front->next;
  43:src/../h/../h/ThreadQueue.hpp ****             delete node;
  44:src/../h/../h/ThreadQueue.hpp ****         }
  45:src/../h/../h/ThreadQueue.hpp ****     }
  46:src/../h/../h/ThreadQueue.hpp **** 
  47:src/../h/../h/ThreadQueue.hpp ****     bool isEmpty() const {
  48:src/../h/../h/ThreadQueue.hpp ****         return front == nullptr;
  38              		.loc 2 48 9
  39              		.loc 2 48 16 is_stmt 0
  40 0018 03B58400 		ld	a0,8(s1)
  41              	.LVL2:
  42              	.LBE22:
  43              	.LBE21:
  40:src/../h/../h/ThreadQueue.hpp ****             Node* node = front;
  44              		.loc 2 40 16
  45 001c 630E0500 		beqz	a0,.L1
  46              	.LBB23:
  41:src/../h/../h/ThreadQueue.hpp ****             Node* node = front;
  47              		.loc 2 41 13 is_stmt 1
  48              	.LVL3:
  42:src/../h/../h/ThreadQueue.hpp ****             delete node;
  49              		.loc 2 42 13
  42:src/../h/../h/ThreadQueue.hpp ****             delete node;
  50              		.loc 2 42 28 is_stmt 0
  51 0020 83378500 		ld	a5,8(a0)
  42:src/../h/../h/ThreadQueue.hpp ****             delete node;
GAS LISTING /tmp/ccRqyiOg.s 			page 3


  52              		.loc 2 42 19
  53 0024 23B4F400 		sd	a5,8(s1)
  43:src/../h/../h/ThreadQueue.hpp ****         }
  54              		.loc 2 43 13 is_stmt 1
  43:src/../h/../h/ThreadQueue.hpp ****         }
  55              		.loc 2 43 24 is_stmt 0
  56 0028 E30805FE 		beqz	a0,.L3
  57              	.LVL4:
  58              	.LBB24:
  59              	.LBB25:
  25:src/../h/../h/ThreadQueue.hpp ****         }
  60              		.loc 2 25 13 is_stmt 1
  25:src/../h/../h/ThreadQueue.hpp ****         }
  61              		.loc 2 25 21 is_stmt 0
  62 002c 97000000 		call	_Z8mem_freePv@plt
  62      E7800000 
  63              	.LVL5:
  26:src/../h/../h/ThreadQueue.hpp ****     };
  64              		.loc 2 26 9
  65 0034 6FF05FFE 		j	.L3
  66              	.L1:
  67              	.LBE25:
  68              	.LBE24:
  69              	.LBE23:
  70              	.LBE20:
  71              	.LBE19:
  72              		.loc 1 11 7
  73 0038 83308101 		ld	ra,24(sp)
  74              		.cfi_restore 1
  75 003c 03340101 		ld	s0,16(sp)
  76              		.cfi_restore 8
  77              		.cfi_def_cfa 2, 32
  78 0040 83348100 		ld	s1,8(sp)
  79              		.cfi_restore 9
  80              	.LVL6:
  81 0044 13010102 		addi	sp,sp,32
  82              		.cfi_def_cfa_offset 0
  83 0048 67800000 		jr	ra
  84              		.cfi_endproc
  85              	.LFE59:
  86              		.globl	__gxx_personality_v0
  87              		.section	.gcc_except_table._ZN4KSemD2Ev,"aG",@progbits,_ZN4KSemD5Ev,comdat
  88              	.LLSDA59:
  89 0000 FF       		.byte	0xff
  90 0001 FF       		.byte	0xff
  91 0002 03       		.byte	0x3
  92 0003 00       		.byte	0
  93              		.section	.text._ZN4KSemD2Ev,"axG",@progbits,_ZN4KSemD5Ev,comdat
  95              		.weak	_ZN4KSemD1Ev
  96              		.set	_ZN4KSemD1Ev,_ZN4KSemD2Ev
  97              		.section	.rodata
  98              		.align	3
  99              	.LC0:
 100 0000 0A4E6570 		.string	"\nNepostojeci op code: "
 100      6F73746F 
 100      6A656369 
 100      206F7020 
GAS LISTING /tmp/ccRqyiOg.s 			page 4


 100      636F6465 
 101 0017 00       		.align	3
 102              	.LC1:
 103 0018 0A736361 		.string	"\nscause: "
 103      7573653A 
 103      2000
 104 0022 00000000 		.align	3
 104      0000
 105              	.LC2:
 106 0028 0A736570 		.string	"\nsepc: "
 106      633A2000 
 107              		.align	3
 108              	.LC3:
 109 0030 4E656B69 		.string	"Neki drugi prekid\n"
 109      20647275 
 109      67692070 
 109      72656B69 
 109      640A00
 110 0043 00000000 		.align	3
 110      00
 111              	.LC4:
 112 0048 0A477265 		.string	"\nGreska u prekidnoj rutini\n"
 112      736B6120 
 112      75207072 
 112      656B6964 
 112      6E6F6A20 
 113 0064 00000000 		.align	3
 114              	.LC5:
 115 0068 73636175 		.string	"scause: "
 115      73653A20 
 115      00
 116              		.text
 117              		.align	2
 118              		.globl	interruptRoutine
 120              	interruptRoutine:
 121              	.LFB57:
 122              		.file 3 "src/interruptRoutine.cpp"
   1:src/interruptRoutine.cpp **** //
   2:src/interruptRoutine.cpp **** // Created by os on 5/22/23.
   3:src/interruptRoutine.cpp **** //
   4:src/interruptRoutine.cpp **** 
   5:src/interruptRoutine.cpp **** #include "../lib/hw.h"
   6:src/interruptRoutine.cpp **** #include "../h/Riscv.hpp"
   7:src/interruptRoutine.cpp **** #include "../h/KMemory.hpp"
   8:src/interruptRoutine.cpp **** #include "../h/KSem.hpp"
   9:src/interruptRoutine.cpp **** #include "../h/KConsole.hpp"
  10:src/interruptRoutine.cpp **** #include "../h/TCB.hpp"
  11:src/interruptRoutine.cpp **** #include "../h/Scheduler.hpp"
  12:src/interruptRoutine.cpp **** 
  13:src/interruptRoutine.cpp **** int main();
  14:src/interruptRoutine.cpp **** 
  15:src/interruptRoutine.cpp **** #pragma GCC optimize("O0")
  16:src/interruptRoutine.cpp **** extern "C" void interruptRoutine() {
 123              		.loc 3 16 36 is_stmt 1
 124              		.cfi_startproc
 125 0000 130101F9 		addi	sp,sp,-112
 126              		.cfi_def_cfa_offset 112
GAS LISTING /tmp/ccRqyiOg.s 			page 5


 127 0004 23341106 		sd	ra,104(sp)
 128 0008 23308106 		sd	s0,96(sp)
 129 000c 233C9104 		sd	s1,88(sp)
 130              		.cfi_offset 1, -8
 131              		.cfi_offset 8, -16
 132              		.cfi_offset 9, -24
 133 0010 13040107 		addi	s0,sp,112
 134              		.cfi_def_cfa 8, 0
  17:src/interruptRoutine.cpp ****     //bitni sistemski registri
  18:src/interruptRoutine.cpp ****     uint64 scause, sepc, sstatus;
 135              		.loc 3 18 5
  19:src/interruptRoutine.cpp ****     __asm__ volatile("csrr %[scause], scause":[scause] "=r"(scause): : "a5", "a0", "a1", "a2", "a3"
 136              		.loc 3 19 5
 137              		.loc 3 19 119 is_stmt 0
 138              	#APP
 139              	# 19 "src/interruptRoutine.cpp" 1
  20              	    __asm__ volatile("csrr %[sepc], sepc":[sepc] "=r"(sepc): : "a5", "a0", "a1", "a2", "a3", "a4", 
 140              		csrr t1, scause
 141              	# 0 "" 2
 142              	#NO_APP
 143 0018 233C64FC 		sd	t1,-40(s0)
 144              	.LVL7:
 145              		.loc 3 20 5 is_stmt 1
 146              		.loc 3 20 111 is_stmt 0
 147              	#APP
 148              	# 20 "src/interruptRoutine.cpp" 1
  21              	    __asm__ volatile("csrr %[stat], sstatus":[stat] "=r"(sstatus): : "a5", "a0", "a1", "a2", "a3", 
 149              		csrr t1, sepc
 150              	# 0 "" 2
 151              	.LVL8:
 152              	#NO_APP
 153 0020 233864FC 		sd	t1,-48(s0)
 154              	.LVL9:
 155              		.loc 3 21 5 is_stmt 1
 156              		.loc 3 21 117 is_stmt 0
 157              	#APP
 158              	# 21 "src/interruptRoutine.cpp" 1
  22              	
 159              		csrr t1, sstatus
 160              	# 0 "" 2
 161              	.LVL10:
 162              	#NO_APP
 163 0028 233464FC 		sd	t1,-56(s0)
 164              	.LVL11:
  23:src/interruptRoutine.cpp ****     //argumenti preneti sistemskom pozivu
  24:src/interruptRoutine.cpp ****     uint64 a0, a1, a2, a3, a4;
 165              		.loc 3 24 5 is_stmt 1
  25:src/interruptRoutine.cpp ****     //uint64 a5, a6, a7;
  26:src/interruptRoutine.cpp ****     __asm__ volatile("mv %[ax], a0":[ax] "=r"(a0): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7"
 166              		.loc 3 26 5
 167              		.loc 3 26 101 is_stmt 0
 168              	#APP
 169              	# 26 "src/interruptRoutine.cpp" 1
  27              	    __asm__ volatile("mv %[ax], a1":[ax] "=r"(a1): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7"
 170              		mv t1, a0
 171              	# 0 "" 2
 172              	.LVL12:
GAS LISTING /tmp/ccRqyiOg.s 			page 6


 173              	#NO_APP
 174 0030 233064FC 		sd	t1,-64(s0)
 175              	.LVL13:
 176              		.loc 3 27 5 is_stmt 1
 177              		.loc 3 27 101 is_stmt 0
 178              	#APP
 179              	# 27 "src/interruptRoutine.cpp" 1
  28              	    __asm__ volatile("mv %[ax], a2":[ax] "=r"(a2): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7"
 180              		mv t1, a1
 181              	# 0 "" 2
 182              	.LVL14:
 183              	#NO_APP
 184 0038 233C64FA 		sd	t1,-72(s0)
 185              	.LVL15:
 186              		.loc 3 28 5 is_stmt 1
 187              		.loc 3 28 101 is_stmt 0
 188              	#APP
 189              	# 28 "src/interruptRoutine.cpp" 1
  29              	    __asm__ volatile("mv %[ax], a3":[ax] "=r"(a3): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7"
 190              		mv t1, a2
 191              	# 0 "" 2
 192              	.LVL16:
 193              	#NO_APP
 194 0040 233864FA 		sd	t1,-80(s0)
 195              	.LVL17:
 196              		.loc 3 29 5 is_stmt 1
 197              		.loc 3 29 101 is_stmt 0
 198              	#APP
 199              	# 29 "src/interruptRoutine.cpp" 1
  30              	    __asm__ volatile("mv %[ax], a4":[ax] "=r"(a4): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7"
 200              		mv t1, a3
 201              	# 0 "" 2
 202              	.LVL18:
 203              	#NO_APP
 204 0048 233464FA 		sd	t1,-88(s0)
 205              	.LVL19:
 206              		.loc 3 30 5 is_stmt 1
 207              		.loc 3 30 101 is_stmt 0
 208              	#APP
 209              	# 30 "src/interruptRoutine.cpp" 1
  31              	//    __asm__ volatile("mv %[ax], a5":[ax] "=r"(a5): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a
 210              		mv t1, a4
 211              	# 0 "" 2
 212              	.LVL20:
 213              	#NO_APP
 214 0050 233064FA 		sd	t1,-96(s0)
 215              	.LVL21:
  32:src/interruptRoutine.cpp **** //    __asm__ volatile("mv %[ax], a6":[ax] "=r"(a6): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a
  33:src/interruptRoutine.cpp **** //    __asm__ volatile("mv %[ax], a7":[ax] "=r"(a7): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a
  34:src/interruptRoutine.cpp **** 
  35:src/interruptRoutine.cpp ****     if (scause == 0x9 || scause == 0x8) {
 216              		.loc 3 35 5 is_stmt 1
 217              	.LBB26:
 218 0054 033784FD 		ld	a4,-40(s0)
 219 0058 93079000 		li	a5,9
 220 005c 6308F700 		beq	a4,a5,.L7
 221              		.loc 3 35 23 is_stmt 0 discriminator 1
GAS LISTING /tmp/ccRqyiOg.s 			page 7


 222 0060 033784FD 		ld	a4,-40(s0)
 223 0064 93078000 		li	a5,8
 224 0068 631AF73C 		bne	a4,a5,.L8
 225              	.L7:
  36:src/interruptRoutine.cpp ****         //prekid zbog poziva ecall
  37:src/interruptRoutine.cpp ****         switch (a0) {
 226              		.loc 3 37 9 is_stmt 1
 227 006c 033704FC 		ld	a4,-64(s0)
 228 0070 93071008 		li	a5,129
 229 0074 6306F72C 		beq	a4,a5,.L9
 230 0078 033704FC 		ld	a4,-64(s0)
 231 007c 93071008 		li	a5,129
 232 0080 63E0E730 		bgtu	a4,a5,.L10
 233 0084 033704FC 		ld	a4,-64(s0)
 234 0088 93072004 		li	a5,66
 235 008c 63E2E704 		bgtu	a4,a5,.L11
 236 0090 833704FC 		ld	a5,-64(s0)
 237 0094 6386072E 		beqz	a5,.L10
 238 0098 033704FC 		ld	a4,-64(s0)
 239 009c 93072004 		li	a5,66
 240 00a0 63E0E72E 		bgtu	a4,a5,.L10
 241 00a4 833704FC 		ld	a5,-64(s0)
 242 00a8 13972700 		slli	a4,a5,2
 243 00ac 97070000 		lla	a5,.L13
 243      93870700 
 244 00b4 B307F700 		add	a5,a4,a5
 245 00b8 83A70700 		lw	a5,0(a5)
 246 00bc 1B870700 		sext.w	a4,a5
 247 00c0 97070000 		lla	a5,.L13
 247      93870700 
 248 00c8 B307F700 		add	a5,a4,a5
 249 00cc 67800700 		jr	a5
 250              		.section	.rodata
 251 0071 000000   		.align	2
 252              		.align	2
 253              	.L13:
 254 0074 00000000 		.word	.L10-.L13
 255 0078 00000000 		.word	.L25-.L13
 256 007c 00000000 		.word	.L24-.L13
 257 0080 00000000 		.word	.L10-.L13
 258 0084 00000000 		.word	.L10-.L13
 259 0088 00000000 		.word	.L10-.L13
 260 008c 00000000 		.word	.L10-.L13
 261 0090 00000000 		.word	.L10-.L13
 262 0094 00000000 		.word	.L10-.L13
 263 0098 00000000 		.word	.L10-.L13
 264 009c 00000000 		.word	.L10-.L13
 265 00a0 00000000 		.word	.L10-.L13
 266 00a4 00000000 		.word	.L10-.L13
 267 00a8 00000000 		.word	.L10-.L13
 268 00ac 00000000 		.word	.L10-.L13
 269 00b0 00000000 		.word	.L10-.L13
 270 00b4 00000000 		.word	.L10-.L13
 271 00b8 00000000 		.word	.L23-.L13
 272 00bc 00000000 		.word	.L22-.L13
 273 00c0 00000000 		.word	.L21-.L13
 274 00c4 00000000 		.word	.L20-.L13
GAS LISTING /tmp/ccRqyiOg.s 			page 8


 275 00c8 00000000 		.word	.L10-.L13
 276 00cc 00000000 		.word	.L10-.L13
 277 00d0 00000000 		.word	.L10-.L13
 278 00d4 00000000 		.word	.L10-.L13
 279 00d8 00000000 		.word	.L10-.L13
 280 00dc 00000000 		.word	.L10-.L13
 281 00e0 00000000 		.word	.L10-.L13
 282 00e4 00000000 		.word	.L10-.L13
 283 00e8 00000000 		.word	.L10-.L13
 284 00ec 00000000 		.word	.L10-.L13
 285 00f0 00000000 		.word	.L10-.L13
 286 00f4 00000000 		.word	.L10-.L13
 287 00f8 00000000 		.word	.L19-.L13
 288 00fc 00000000 		.word	.L18-.L13
 289 0100 00000000 		.word	.L17-.L13
 290 0104 00000000 		.word	.L16-.L13
 291 0108 00000000 		.word	.L10-.L13
 292 010c 00000000 		.word	.L10-.L13
 293 0110 00000000 		.word	.L10-.L13
 294 0114 00000000 		.word	.L10-.L13
 295 0118 00000000 		.word	.L10-.L13
 296 011c 00000000 		.word	.L10-.L13
 297 0120 00000000 		.word	.L10-.L13
 298 0124 00000000 		.word	.L10-.L13
 299 0128 00000000 		.word	.L10-.L13
 300 012c 00000000 		.word	.L10-.L13
 301 0130 00000000 		.word	.L10-.L13
 302 0134 00000000 		.word	.L10-.L13
 303 0138 00000000 		.word	.L15-.L13
 304 013c 00000000 		.word	.L10-.L13
 305 0140 00000000 		.word	.L10-.L13
 306 0144 00000000 		.word	.L10-.L13
 307 0148 00000000 		.word	.L10-.L13
 308 014c 00000000 		.word	.L10-.L13
 309 0150 00000000 		.word	.L10-.L13
 310 0154 00000000 		.word	.L10-.L13
 311 0158 00000000 		.word	.L10-.L13
 312 015c 00000000 		.word	.L10-.L13
 313 0160 00000000 		.word	.L10-.L13
 314 0164 00000000 		.word	.L10-.L13
 315 0168 00000000 		.word	.L10-.L13
 316 016c 00000000 		.word	.L10-.L13
 317 0170 00000000 		.word	.L10-.L13
 318 0174 00000000 		.word	.L10-.L13
 319 0178 00000000 		.word	.L14-.L13
 320 017c 00000000 		.word	.L12-.L13
 321              		.text
 322              	.L11:
 323 00d0 033704FC 		ld	a4,-64(s0)
 324 00d4 93070008 		li	a5,128
 325 00d8 630EF720 		beq	a4,a5,.L26
 326 00dc 6F00402A 		j	.L10
 327              	.L25:
  38:src/interruptRoutine.cpp ****             case 0x01:
 328              		.loc 3 38 13
  39:src/interruptRoutine.cpp ****                 //mem_alloc
  40:src/interruptRoutine.cpp ****                 //a1 = broj blokova koje treba alocirati
GAS LISTING /tmp/ccRqyiOg.s 			page 9


  41:src/interruptRoutine.cpp ****                 KMemory::kmalloc((size_t)a1);
 329              		.loc 3 41 17
 330              		.loc 3 41 33 is_stmt 0
 331 00e0 033584FB 		ld	a0,-72(s0)
 332 00e4 97000000 		call	_ZN7KMemory7kmallocEm@plt
 332      E7800000 
 333              	.LVL22:
  42:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 334              		.loc 3 42 17 is_stmt 1
 335              		.loc 3 42 50 is_stmt 0
 336              	#APP
 337              	# 42 "src/interruptRoutine.cpp" 1
  43              	                break;
 338              		sd a0, 80(s0)
 339              	# 0 "" 2
 340              		.loc 3 43 17 is_stmt 1
 341              	#NO_APP
 342 00f0 6F00C032 		j	.L27
 343              	.LVL23:
 344              	.L24:
  44:src/interruptRoutine.cpp ****             case 0x02:
 345              		.loc 3 44 13
  45:src/interruptRoutine.cpp ****                 //mem_free
  46:src/interruptRoutine.cpp ****                 //a1 = pokazivac na memoriju koju dealociramo, dobijen sa mem_alloc
  47:src/interruptRoutine.cpp ****                 KMemory::kfree((void*)a1);
 346              		.loc 3 47 17
 347              		.loc 3 47 31 is_stmt 0
 348 00f4 833784FB 		ld	a5,-72(s0)
 349 00f8 13850700 		mv	a0,a5
 350 00fc 97000000 		call	_ZN7KMemory5kfreeEPv@plt
 350      E7800000 
 351              	.LVL24:
  48:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 352              		.loc 3 48 17 is_stmt 1
 353              		.loc 3 48 50 is_stmt 0
 354              	#APP
 355              	# 48 "src/interruptRoutine.cpp" 1
  49              	                break;
 356              		sd a0, 80(s0)
 357              	# 0 "" 2
 358              		.loc 3 49 17 is_stmt 1
 359              	#NO_APP
 360 0108 6F004031 		j	.L27
 361              	.LVL25:
 362              	.L23:
  50:src/interruptRoutine.cpp ****             case 0x11:
 363              		.loc 3 50 13
  51:src/interruptRoutine.cpp ****                 //thread_create
  52:src/interruptRoutine.cpp ****                 //a1 = pokazivac na rucku u koju upisujemo identifikator niti(adresa u memoriji)
  53:src/interruptRoutine.cpp ****                 //a2 = pokazivac na funkciju koju nit treba da izvrsava
  54:src/interruptRoutine.cpp ****                 //a3 = argumenti funkcije koju nit treba da izvrsava
  55:src/interruptRoutine.cpp ****                 //a4 = poslednja lokacija alociranog steka(najniza adresa)
  56:src/interruptRoutine.cpp ****                 *((thread_t*)a1) = TCB::createThread((TCB::Body)a2, (void*)a3, (uint64*)a4);
 364              		.loc 3 56 17
 365              		.loc 3 56 53 is_stmt 0
 366 010c 833704FB 		ld	a5,-80(s0)
 367 0110 033784FA 		ld	a4,-88(s0)
GAS LISTING /tmp/ccRqyiOg.s 			page 10


 368 0114 833604FA 		ld	a3,-96(s0)
 369              		.loc 3 56 17
 370 0118 833484FB 		ld	s1,-72(s0)
 371              		.loc 3 56 53
 372 011c 13860600 		mv	a2,a3
 373 0120 93050700 		mv	a1,a4
 374 0124 13850700 		mv	a0,a5
 375 0128 97000000 		call	_ZN3TCB12createThreadEPFvPvES0_Pm@plt
 375      E7800000 
 376              	.LVL26:
 377 0130 93070500 		mv	a5,a0
 378              		.loc 3 56 34
 379 0134 23B0F400 		sd	a5,0(s1)
  57:src/interruptRoutine.cpp ****                 if (*((thread_t*)a1) != nullptr) {
 380              		.loc 3 57 17 is_stmt 1
 381              		.loc 3 57 21 is_stmt 0
 382 0138 833784FB 		ld	a5,-72(s0)
 383 013c 83B70700 		ld	a5,0(a5)
 384              		.loc 3 57 17
 385 0140 63880702 		beqz	a5,.L28
  58:src/interruptRoutine.cpp ****                     if ((TCB::Body)a2 != (TCB::Body)main) {
 386              		.loc 3 58 21 is_stmt 1
 387              		.loc 3 58 39 is_stmt 0
 388 0144 033704FB 		ld	a4,-80(s0)
 389              		.loc 3 58 21
 390 0148 97070000 		la	a5,main
 390      83B70700 
 391 0150 630CF700 		beq	a4,a5,.L29
  59:src/interruptRoutine.cpp ****                         Scheduler::put(*((thread_t*)a1));
 392              		.loc 3 59 25 is_stmt 1
 393              		.loc 3 59 39 is_stmt 0
 394 0154 833784FB 		ld	a5,-72(s0)
 395 0158 83B70700 		ld	a5,0(a5)
 396 015c 13850700 		mv	a0,a5
 397 0160 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 397      E7800000 
 398              	.LVL27:
 399              	.L29:
  60:src/interruptRoutine.cpp ****                     }
  61:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, 0");
 400              		.loc 3 61 21 is_stmt 1
 401              		.loc 3 61 49 is_stmt 0
 402              	#APP
 403              	# 61 "src/interruptRoutine.cpp" 1
  62              	                } else {
 404              		li a0, 0
 405              	# 0 "" 2
 406              	#NO_APP
 407 016c 6F008000 		j	.L30
 408              	.L28:
  63:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, -1");
 409              		.loc 3 63 21 is_stmt 1
 410              		.loc 3 63 50 is_stmt 0
 411              	#APP
 412              	# 63 "src/interruptRoutine.cpp" 1
  64              	                }
 413              		li a0, -1
GAS LISTING /tmp/ccRqyiOg.s 			page 11


 414              	# 0 "" 2
 415              	#NO_APP
 416              	.L30:
  65:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 417              		.loc 3 65 17 is_stmt 1
 418              		.loc 3 65 50 is_stmt 0
 419              	#APP
 420              	# 65 "src/interruptRoutine.cpp" 1
  66              	                break;
 421              		sd a0, 80(s0)
 422              	# 0 "" 2
 423              		.loc 3 66 17 is_stmt 1
 424              	#NO_APP
 425 0178 6F00402A 		j	.L27
 426              	.LVL28:
 427              	.L22:
  67:src/interruptRoutine.cpp ****             case 0x12:
 428              		.loc 3 67 13
  68:src/interruptRoutine.cpp ****                 //thread_exit
  69:src/interruptRoutine.cpp ****                 TCB::getRunning()->setStatus(TCB::FINISHED);
 429              		.loc 3 69 17
 430              		.loc 3 69 45 is_stmt 0
 431 017c 97000000 		call	_ZN3TCB10getRunningEv
 431      E7800000 
 432              	.LVL29:
 433 0184 93070500 		mv	a5,a0
 434 0188 93055000 		li	a1,5
 435 018c 13850700 		mv	a0,a5
 436 0190 97000000 		call	_ZN3TCB9setStatusENS_12ThreadStatusE
 436      E7800000 
 437              	.LVL30:
  70:src/interruptRoutine.cpp ****                 TCB::releaseJoined();
 438              		.loc 3 70 17 is_stmt 1
 439              		.loc 3 70 35 is_stmt 0
 440 0198 97000000 		call	_ZN3TCB13releaseJoinedEv@plt
 440      E7800000 
 441              	.LVL31:
  71:src/interruptRoutine.cpp ****                 __asm__ volatile("li a0, 0");
 442              		.loc 3 71 17 is_stmt 1
 443              		.loc 3 71 45 is_stmt 0
 444              	#APP
 445              	# 71 "src/interruptRoutine.cpp" 1
  72              	                __asm__ volatile("sd a0, 80(s0)");
 446              		li a0, 0
 447              	# 0 "" 2
 448              		.loc 3 72 17 is_stmt 1
 449              		.loc 3 72 50 is_stmt 0
 450              	# 72 "src/interruptRoutine.cpp" 1
  73              	                TCB::dispatch();
 451              		sd a0, 80(s0)
 452              	# 0 "" 2
 453              		.loc 3 73 17 is_stmt 1
 454              		.loc 3 73 30 is_stmt 0
 455              	#NO_APP
 456 01a8 97000000 		call	_ZN3TCB8dispatchEv@plt
 456      E7800000 
 457              	.LVL32:
GAS LISTING /tmp/ccRqyiOg.s 			page 12


  74:src/interruptRoutine.cpp ****                 break;
 458              		.loc 3 74 17 is_stmt 1
 459 01b0 6F00C026 		j	.L27
 460              	.LVL33:
 461              	.L21:
  75:src/interruptRoutine.cpp ****             case 0x13:
 462              		.loc 3 75 13
  76:src/interruptRoutine.cpp ****                 //thread_dispatch
  77:src/interruptRoutine.cpp ****                 TCB::dispatch();
 463              		.loc 3 77 17
 464              		.loc 3 77 30 is_stmt 0
 465 01b4 97000000 		call	_ZN3TCB8dispatchEv@plt
 465      E7800000 
 466              	.LVL34:
  78:src/interruptRoutine.cpp ****                 break;
 467              		.loc 3 78 17 is_stmt 1
 468 01bc 6F000026 		j	.L27
 469              	.LVL35:
 470              	.L20:
  79:src/interruptRoutine.cpp ****             case 0x14:
 471              		.loc 3 79 13
  80:src/interruptRoutine.cpp ****                 //thread_join
  81:src/interruptRoutine.cpp ****                 //a1 = rucka niti na koju tekuca nit treba da ceka
  82:src/interruptRoutine.cpp ****                 TCB::threadJoin((thread_t)a1);
 472              		.loc 3 82 17
 473              		.loc 3 82 32 is_stmt 0
 474 01c0 833784FB 		ld	a5,-72(s0)
 475 01c4 13850700 		mv	a0,a5
 476 01c8 97000000 		call	_ZN3TCB10threadJoinEPS_@plt
 476      E7800000 
 477              	.LVL36:
  83:src/interruptRoutine.cpp ****                 TCB::dispatch();
 478              		.loc 3 83 17 is_stmt 1
 479              		.loc 3 83 30 is_stmt 0
 480 01d0 97000000 		call	_ZN3TCB8dispatchEv@plt
 480      E7800000 
 481              	.LVL37:
  84:src/interruptRoutine.cpp ****                 break;
 482              		.loc 3 84 17 is_stmt 1
 483 01d8 6F004024 		j	.L27
 484              	.LVL38:
 485              	.L19:
  85:src/interruptRoutine.cpp ****             case 0x21:
 486              		.loc 3 85 13
  86:src/interruptRoutine.cpp ****                 //sem_open
  87:src/interruptRoutine.cpp ****                 //a1 = pokazivac na rucku semafora, u koju se upisuje adresa semafora u memoriji
  88:src/interruptRoutine.cpp ****                 *((sem_t*)a1) = KSem::initSem((uint)a2);
 487              		.loc 3 88 17
 488              		.loc 3 88 46 is_stmt 0
 489 01dc 833704FB 		ld	a5,-80(s0)
 490 01e0 9B870700 		sext.w	a5,a5
 491              		.loc 3 88 17
 492 01e4 833484FB 		ld	s1,-72(s0)
 493              		.loc 3 88 46
 494 01e8 13850700 		mv	a0,a5
 495 01ec 97000000 		call	_ZN4KSem7initSemEj@plt
 495      E7800000 
GAS LISTING /tmp/ccRqyiOg.s 			page 13


 496              	.LVL39:
 497 01f4 93070500 		mv	a5,a0
 498              		.loc 3 88 31
 499 01f8 23B0F400 		sd	a5,0(s1)
  89:src/interruptRoutine.cpp ****                 if (*((sem_t*)a1) != nullptr) {
 500              		.loc 3 89 17 is_stmt 1
 501              		.loc 3 89 21 is_stmt 0
 502 01fc 833784FB 		ld	a5,-72(s0)
 503 0200 83B70700 		ld	a5,0(a5)
 504              		.loc 3 89 17
 505 0204 63860700 		beqz	a5,.L31
  90:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, 0");
 506              		.loc 3 90 21 is_stmt 1
 507              		.loc 3 90 49 is_stmt 0
 508              	#APP
 509              	# 90 "src/interruptRoutine.cpp" 1
  91              	                } else {
 510              		li a0, 0
 511              	# 0 "" 2
 512              	#NO_APP
 513 020c 6F008000 		j	.L32
 514              	.L31:
  92:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, -1");
 515              		.loc 3 92 21 is_stmt 1
 516              		.loc 3 92 50 is_stmt 0
 517              	#APP
 518              	# 92 "src/interruptRoutine.cpp" 1
  93              	                }
 519              		li a0, -1
 520              	# 0 "" 2
 521              	#NO_APP
 522              	.L32:
  94:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 523              		.loc 3 94 17 is_stmt 1
 524              		.loc 3 94 50 is_stmt 0
 525              	#APP
 526              	# 94 "src/interruptRoutine.cpp" 1
  95              	                break;
 527              		sd a0, 80(s0)
 528              	# 0 "" 2
 529              		.loc 3 95 17 is_stmt 1
 530              	#NO_APP
 531 0218 6F004020 		j	.L27
 532              	.LVL40:
 533              	.L18:
  96:src/interruptRoutine.cpp ****             case 0x22:
 534              		.loc 3 96 13
  97:src/interruptRoutine.cpp ****                 //sem_close
  98:src/interruptRoutine.cpp ****                 //a1 = rucka semafora
  99:src/interruptRoutine.cpp ****                 KSem::closeSem((sem_t)a1);
 535              		.loc 3 99 17
 536              		.loc 3 99 31 is_stmt 0
 537 021c 833784FB 		ld	a5,-72(s0)
 538 0220 13850700 		mv	a0,a5
 539 0224 97000000 		call	_ZN4KSem8closeSemEPS_@plt
 539      E7800000 
 540              	.LVL41:
GAS LISTING /tmp/ccRqyiOg.s 			page 14


 100:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 541              		.loc 3 100 17 is_stmt 1
 542              		.loc 3 100 50 is_stmt 0
 543              	#APP
 544              	# 100 "src/interruptRoutine.cpp" 1
 101              	                delete (sem_t)a1;
 545              		sd a0, 80(s0)
 546              	# 0 "" 2
 547              		.loc 3 101 17 is_stmt 1
 548              		.loc 3 101 24 is_stmt 0
 549              	#NO_APP
 550 0230 833484FB 		ld	s1,-72(s0)
 551              		.loc 3 101 33
 552 0234 638A041C 		beqz	s1,.L46
 553              		.loc 3 101 31 discriminator 1
 554 0238 13850400 		mv	a0,s1
 555 023c 97000000 		call	_ZN4KSemD1Ev
 555      E7800000 
 556              	.LVL42:
 557 0244 13850400 		mv	a0,s1
 558 0248 97000000 		call	_ZN4KSemdlEPv@plt
 558      E7800000 
 559              	.LVL43:
 102:src/interruptRoutine.cpp ****                 break;
 560              		.loc 3 102 17 is_stmt 1 discriminator 1
 561 0250 6F00801B 		j	.L46
 562              	.LVL44:
 563              	.L17:
 103:src/interruptRoutine.cpp ****             case 0x23:
 564              		.loc 3 103 13
 104:src/interruptRoutine.cpp ****                 //sem_wait
 105:src/interruptRoutine.cpp ****                 //a1 = rucka semafora
 106:src/interruptRoutine.cpp ****                 ((sem_t)a1)->wait();
 565              		.loc 3 106 17
 566              		.loc 3 106 34 is_stmt 0
 567 0254 833784FB 		ld	a5,-72(s0)
 568 0258 13850700 		mv	a0,a5
 569 025c 97000000 		call	_ZN4KSem4waitEv@plt
 569      E7800000 
 570              	.LVL45:
 107:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 571              		.loc 3 107 17 is_stmt 1
 572              		.loc 3 107 50 is_stmt 0
 573              	#APP
 574              	# 107 "src/interruptRoutine.cpp" 1
 108              	                break;
 575              		sd a0, 80(s0)
 576              	# 0 "" 2
 577              		.loc 3 108 17 is_stmt 1
 578              	#NO_APP
 579 0268 6F00401B 		j	.L27
 580              	.LVL46:
 581              	.L16:
 109:src/interruptRoutine.cpp ****             case 0x24:
 582              		.loc 3 109 13
 110:src/interruptRoutine.cpp ****                 //sem_signal
 111:src/interruptRoutine.cpp ****                 //a1 = rucka semafora
GAS LISTING /tmp/ccRqyiOg.s 			page 15


 112:src/interruptRoutine.cpp ****                 ((sem_t)a1)->signal();
 583              		.loc 3 112 17
 584              		.loc 3 112 36 is_stmt 0
 585 026c 833784FB 		ld	a5,-72(s0)
 586 0270 13850700 		mv	a0,a5
 587 0274 97000000 		call	_ZN4KSem6signalEv@plt
 587      E7800000 
 588              	.LVL47:
 113:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 589              		.loc 3 113 17 is_stmt 1
 590              		.loc 3 113 50 is_stmt 0
 591              	#APP
 592              	# 113 "src/interruptRoutine.cpp" 1
 114              	                break;
 593              		sd a0, 80(s0)
 594              	# 0 "" 2
 595              		.loc 3 114 17 is_stmt 1
 596              	#NO_APP
 597 0280 6F00C019 		j	.L27
 598              	.LVL48:
 599              	.L15:
 115:src/interruptRoutine.cpp ****             case 0x31:
 600              		.loc 3 115 13
 116:src/interruptRoutine.cpp ****                 //time_sleep
 117:src/interruptRoutine.cpp ****                 //a1 = broj perioda tajmera na koji se uspavljuje tekuca nit
 118:src/interruptRoutine.cpp ****                 if ((time_t)a1 > 0) {
 601              		.loc 3 118 17
 602 0284 833784FB 		ld	a5,-72(s0)
 603 0288 63860700 		beqz	a5,.L34
 119:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, 0");
 604              		.loc 3 119 21
 605              		.loc 3 119 49 is_stmt 0
 606              	#APP
 607              	# 119 "src/interruptRoutine.cpp" 1
 120              	                } else {
 608              		li a0, 0
 609              	# 0 "" 2
 610              	#NO_APP
 611 0290 6F008000 		j	.L35
 612              	.L34:
 121:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, -1");
 613              		.loc 3 121 21 is_stmt 1
 614              		.loc 3 121 50 is_stmt 0
 615              	#APP
 616              	# 121 "src/interruptRoutine.cpp" 1
 122              	                }
 617              		li a0, -1
 618              	# 0 "" 2
 619              	#NO_APP
 620              	.L35:
 123:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 621              		.loc 3 123 17 is_stmt 1
 622              		.loc 3 123 50 is_stmt 0
 623              	#APP
 624              	# 123 "src/interruptRoutine.cpp" 1
 124              	                if ((time_t)a1 > 0) {
 625              		sd a0, 80(s0)
GAS LISTING /tmp/ccRqyiOg.s 			page 16


 626              	# 0 "" 2
 627              		.loc 3 124 17 is_stmt 1
 628              	#NO_APP
 629 029c 833784FB 		ld	a5,-72(s0)
 630 02a0 63880716 		beqz	a5,.L47
 125:src/interruptRoutine.cpp ****                     Scheduler::putToSleep(TCB::getRunning(), (time_t)a1);
 631              		.loc 3 125 21
 632              		.loc 3 125 42 is_stmt 0
 633 02a4 97000000 		call	_ZN3TCB10getRunningEv
 633      E7800000 
 634              	.LVL49:
 635 02ac 93070500 		mv	a5,a0
 636 02b0 833584FB 		ld	a1,-72(s0)
 637 02b4 13850700 		mv	a0,a5
 638 02b8 97000000 		call	_ZN9Scheduler10putToSleepEP3TCBm@plt
 638      E7800000 
 639              	.LVL50:
 126:src/interruptRoutine.cpp ****                     TCB::dispatch();
 640              		.loc 3 126 21 is_stmt 1
 641              		.loc 3 126 34 is_stmt 0
 642 02c0 97000000 		call	_ZN3TCB8dispatchEv@plt
 642      E7800000 
 643              	.LVL51:
 127:src/interruptRoutine.cpp ****                 }
 128:src/interruptRoutine.cpp ****                 break;
 644              		.loc 3 128 17 is_stmt 1
 645 02c8 6F008014 		j	.L47
 646              	.LVL52:
 647              	.L14:
 129:src/interruptRoutine.cpp ****             case 0x41:
 648              		.loc 3 129 13
 130:src/interruptRoutine.cpp ****                 //getc
 131:src/interruptRoutine.cpp ****                 KConsole::kgetc();
 649              		.loc 3 131 17
 650              		.loc 3 131 32 is_stmt 0
 651 02cc 97000000 		call	_ZN8KConsole5kgetcEv@plt
 651      E7800000 
 652              	.LVL53:
 132:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 653              		.loc 3 132 17 is_stmt 1
 654              		.loc 3 132 50 is_stmt 0
 655              	#APP
 656              	# 132 "src/interruptRoutine.cpp" 1
 133              	                break;
 657              		sd a0, 80(s0)
 658              	# 0 "" 2
 659              		.loc 3 133 17 is_stmt 1
 660              	#NO_APP
 661 02d8 6F004014 		j	.L27
 662              	.LVL54:
 663              	.L12:
 134:src/interruptRoutine.cpp ****             case 0x42:
 664              		.loc 3 134 13
 135:src/interruptRoutine.cpp ****                 //putc
 136:src/interruptRoutine.cpp ****                 //a1 = karakter koji se upisuje u bafer za ispis na konzolu
 137:src/interruptRoutine.cpp ****                 KConsole::kputc((char)a1);
 665              		.loc 3 137 17
GAS LISTING /tmp/ccRqyiOg.s 			page 17


 666              		.loc 3 137 32 is_stmt 0
 667 02dc 833784FB 		ld	a5,-72(s0)
 668 02e0 93F7F70F 		andi	a5,a5,0xff
 669 02e4 13850700 		mv	a0,a5
 670 02e8 97000000 		call	_ZN8KConsole5kputcEc@plt
 670      E7800000 
 671              	.LVL55:
 138:src/interruptRoutine.cpp ****                 break;
 672              		.loc 3 138 17 is_stmt 1
 673 02f0 6F00C012 		j	.L27
 674              	.LVL56:
 675              	.L26:
 139:src/interruptRoutine.cpp ****             case 0x80:
 676              		.loc 3 139 13
 140:src/interruptRoutine.cpp ****                 //alloc thread
 141:src/interruptRoutine.cpp ****                 //a1 = pokazivac na rucku u koju upisujemo identifikator niti(adresa u memoriji)
 142:src/interruptRoutine.cpp ****                 //a2 = pokazivac na funkciju koju nit treba da izvrsava
 143:src/interruptRoutine.cpp ****                 //a3 = argumenti funkcije koju nit treba da izvrsava
 144:src/interruptRoutine.cpp ****                 //a4 = poslednja lokacija alociranog steka(najniza adresa)
 145:src/interruptRoutine.cpp ****                 *((thread_t*)a1) = TCB::createThread((TCB::Body)a2, (void*)a3, (uint64*)a4);
 677              		.loc 3 145 17
 678              		.loc 3 145 53 is_stmt 0
 679 02f4 833704FB 		ld	a5,-80(s0)
 680 02f8 033784FA 		ld	a4,-88(s0)
 681 02fc 833604FA 		ld	a3,-96(s0)
 682              		.loc 3 145 17
 683 0300 833484FB 		ld	s1,-72(s0)
 684              		.loc 3 145 53
 685 0304 13860600 		mv	a2,a3
 686 0308 93050700 		mv	a1,a4
 687 030c 13850700 		mv	a0,a5
 688 0310 97000000 		call	_ZN3TCB12createThreadEPFvPvES0_Pm@plt
 688      E7800000 
 689              	.LVL57:
 690 0318 93070500 		mv	a5,a0
 691              		.loc 3 145 34
 692 031c 23B0F400 		sd	a5,0(s1)
 146:src/interruptRoutine.cpp ****                 if (*((thread_t*)a1) != nullptr) {
 693              		.loc 3 146 17 is_stmt 1
 694              		.loc 3 146 21 is_stmt 0
 695 0320 833784FB 		ld	a5,-72(s0)
 696 0324 83B70700 		ld	a5,0(a5)
 697              		.loc 3 146 17
 698 0328 63860700 		beqz	a5,.L37
 147:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, 0");
 699              		.loc 3 147 21 is_stmt 1
 700              		.loc 3 147 49 is_stmt 0
 701              	#APP
 702              	# 147 "src/interruptRoutine.cpp" 1
 148              	                } else {
 703              		li a0, 0
 704              	# 0 "" 2
 705              	#NO_APP
 706 0330 6F008000 		j	.L38
 707              	.L37:
 149:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, -1");
 708              		.loc 3 149 21 is_stmt 1
GAS LISTING /tmp/ccRqyiOg.s 			page 18


 709              		.loc 3 149 50 is_stmt 0
 710              	#APP
 711              	# 149 "src/interruptRoutine.cpp" 1
 150              	                }
 712              		li a0, -1
 713              	# 0 "" 2
 714              	#NO_APP
 715              	.L38:
 151:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 716              		.loc 3 151 17 is_stmt 1
 717              		.loc 3 151 50 is_stmt 0
 718              	#APP
 719              	# 151 "src/interruptRoutine.cpp" 1
 152              	                break;
 720              		sd a0, 80(s0)
 721              	# 0 "" 2
 722              		.loc 3 152 17 is_stmt 1
 723              	#NO_APP
 724 033c 6F00000E 		j	.L27
 725              	.LVL58:
 726              	.L9:
 153:src/interruptRoutine.cpp ****             case 0x81:
 727              		.loc 3 153 13
 154:src/interruptRoutine.cpp ****                 //start thread
 155:src/interruptRoutine.cpp ****                 //a1 = rucka niti koja se stavlja u scheduler
 156:src/interruptRoutine.cpp ****                 if (((thread_t)a1)->getBody() != (TCB::Body)main) {
 728              		.loc 3 156 17
 729              		.loc 3 156 44 is_stmt 0
 730 0340 833784FB 		ld	a5,-72(s0)
 731 0344 13850700 		mv	a0,a5
 732 0348 97000000 		call	_ZN3TCB7getBodyEv
 732      E7800000 
 733              	.LVL59:
 734 0350 13070500 		mv	a4,a0
 735              		.loc 3 156 47
 736 0354 97070000 		la	a5,main
 736      83B70700 
 737 035c B307F740 		sub	a5,a4,a5
 738 0360 B337F000 		snez	a5,a5
 739 0364 93F7F70F 		andi	a5,a5,0xff
 740              		.loc 3 156 17
 741 0368 6388070A 		beqz	a5,.L48
 157:src/interruptRoutine.cpp ****                     Scheduler::put((thread_t)a1);
 742              		.loc 3 157 21 is_stmt 1
 743              		.loc 3 157 35 is_stmt 0
 744 036c 833784FB 		ld	a5,-72(s0)
 745 0370 13850700 		mv	a0,a5
 746 0374 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 746      E7800000 
 747              	.LVL60:
 158:src/interruptRoutine.cpp ****                 }
 159:src/interruptRoutine.cpp ****                 break;
 748              		.loc 3 159 17 is_stmt 1
 749 037c 6F00C009 		j	.L48
 750              	.LVL61:
 751              	.L10:
 160:src/interruptRoutine.cpp ****             default:
GAS LISTING /tmp/ccRqyiOg.s 			page 19


 752              		.loc 3 160 13
 161:src/interruptRoutine.cpp ****                 printString("\nNepostojeci op code: ");
 753              		.loc 3 161 17
 754              		.loc 3 161 28 is_stmt 0
 755 0380 17050000 		lla	a0,.LC0
 755      13050500 
 756 0388 97000000 		call	_Z11printStringPKc@plt
 756      E7800000 
 757              	.LVL62:
 162:src/interruptRoutine.cpp ****                 printInt(a0);
 758              		.loc 3 162 17 is_stmt 1
 759              		.loc 3 162 25 is_stmt 0
 760 0390 833704FC 		ld	a5,-64(s0)
 761 0394 9B870700 		sext.w	a5,a5
 762 0398 13060000 		li	a2,0
 763 039c 9305A000 		li	a1,10
 764 03a0 13850700 		mv	a0,a5
 765 03a4 97000000 		call	_Z8printIntiii@plt
 765      E7800000 
 766              	.LVL63:
 163:src/interruptRoutine.cpp ****                 printString("\nscause: ");
 767              		.loc 3 163 17 is_stmt 1
 768              		.loc 3 163 28 is_stmt 0
 769 03ac 17050000 		lla	a0,.LC1
 769      13050500 
 770 03b4 97000000 		call	_Z11printStringPKc@plt
 770      E7800000 
 771              	.LVL64:
 164:src/interruptRoutine.cpp ****                 printInt(scause);
 772              		.loc 3 164 17 is_stmt 1
 773              		.loc 3 164 25 is_stmt 0
 774 03bc 833784FD 		ld	a5,-40(s0)
 775 03c0 9B870700 		sext.w	a5,a5
 776 03c4 13060000 		li	a2,0
 777 03c8 9305A000 		li	a1,10
 778 03cc 13850700 		mv	a0,a5
 779 03d0 97000000 		call	_Z8printIntiii@plt
 779      E7800000 
 780              	.LVL65:
 165:src/interruptRoutine.cpp ****                 printString("\nsepc: ");
 781              		.loc 3 165 17 is_stmt 1
 782              		.loc 3 165 28 is_stmt 0
 783 03d8 17050000 		lla	a0,.LC2
 783      13050500 
 784 03e0 97000000 		call	_Z11printStringPKc@plt
 784      E7800000 
 785              	.LVL66:
 166:src/interruptRoutine.cpp ****                 printInt(sepc);
 786              		.loc 3 166 17 is_stmt 1
 787              		.loc 3 166 25 is_stmt 0
 788 03e8 833704FD 		ld	a5,-48(s0)
 789 03ec 9B870700 		sext.w	a5,a5
 790 03f0 13060000 		li	a2,0
 791 03f4 9305A000 		li	a1,10
 792 03f8 13850700 		mv	a0,a5
 793 03fc 97000000 		call	_Z8printIntiii@plt
 793      E7800000 
GAS LISTING /tmp/ccRqyiOg.s 			page 20


 794              	.LVL67:
 167:src/interruptRoutine.cpp ****                 break;
 795              		.loc 3 167 17 is_stmt 1
 796 0404 6F008001 		j	.L27
 797              	.L46:
 102:src/interruptRoutine.cpp ****             case 0x23:
 798              		.loc 3 102 17 is_stmt 0
 799 0408 13000000 		nop
 800 040c 6F000001 		j	.L27
 801              	.L47:
 128:src/interruptRoutine.cpp ****             case 0x41:
 802              		.loc 3 128 17
 803 0410 13000000 		nop
 804 0414 6F008000 		j	.L27
 805              	.L48:
 159:src/interruptRoutine.cpp ****             default:
 806              		.loc 3 159 17
 807 0418 13000000 		nop
 808              	.L27:
 168:src/interruptRoutine.cpp ****         }
 169:src/interruptRoutine.cpp ****         //sepc pokazuje na ecall instrukciju, treba preci na sledecu instrukciju
 170:src/interruptRoutine.cpp ****         sepc += 4;
 809              		.loc 3 170 9 is_stmt 1
 810              		.loc 3 170 14 is_stmt 0
 811 041c 833704FD 		ld	a5,-48(s0)
 812 0420 93874700 		addi	a5,a5,4
 813 0424 2338F4FC 		sd	a5,-48(s0)
 814              	.LVL68:
 171:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 815              		.loc 3 171 9 is_stmt 1
 816              		.loc 3 171 66 is_stmt 0
 817 0428 833704FD 		ld	a5,-48(s0)
 818              	#APP
 819              	# 171 "src/interruptRoutine.cpp" 1
 172              	        __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 820              		csrw sepc, a5
 821              	# 0 "" 2
 822              		.loc 3 172 9 is_stmt 1
 823              		.loc 3 172 71 is_stmt 0
 824              	#NO_APP
 825 0430 833784FC 		ld	a5,-56(s0)
 826              	.LVL69:
 827              	#APP
 828              	# 172 "src/interruptRoutine.cpp" 1
 173              	    } else if (scause == 0x8000000000000009) {
 829              		csrw sstatus, a5
 830              	# 0 "" 2
 831              	#NO_APP
 832              	.LBE26:
 174:src/interruptRoutine.cpp ****         //spoljasnji hardverski prekid (od konzole)
 175:src/interruptRoutine.cpp ****         uint64 irq = plic_claim();
 176:src/interruptRoutine.cpp ****         if (irq == CONSOLE_IRQ) {
 177:src/interruptRoutine.cpp ****             if (KConsole::getSRvalue() & CONSOLE_RX_STATUS_BIT) {
 178:src/interruptRoutine.cpp ****                 //upisuje karakter sa ulaza(otkucani) u ulazni bafer KConsole
 179:src/interruptRoutine.cpp ****                 KConsole::placeInInput(KConsole::getDRvalue());
 180:src/interruptRoutine.cpp ****             }
 181:src/interruptRoutine.cpp ****         } else {
GAS LISTING /tmp/ccRqyiOg.s 			page 21


 182:src/interruptRoutine.cpp ****             printString("Neki drugi prekid\n");
 183:src/interruptRoutine.cpp ****         }
 184:src/interruptRoutine.cpp ****         plic_complete(irq);
 185:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 186:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 187:src/interruptRoutine.cpp ****         Riscv::mc_sip(Riscv::SIP_SEIP);
 188:src/interruptRoutine.cpp ****     } else if (scause == 0x8000000000000001) {
 189:src/interruptRoutine.cpp ****         //prekid od tajmera
 190:src/interruptRoutine.cpp ****         Scheduler::wake();
 191:src/interruptRoutine.cpp ****         TCB::getRunningTimeSlice()++;
 192:src/interruptRoutine.cpp ****         if (TCB::getRunningTimeSlice() >= TCB::getRunning()->getTimeSlice()) {
 193:src/interruptRoutine.cpp ****             TCB::dispatch();
 194:src/interruptRoutine.cpp ****         }
 195:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 196:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 197:src/interruptRoutine.cpp ****         Riscv::mc_sip(Riscv::SIP_SSIP);
 198:src/interruptRoutine.cpp ****     } else {
 199:src/interruptRoutine.cpp ****         printString("\nGreska u prekidnoj rutini\n");
 200:src/interruptRoutine.cpp ****         printString("scause: ");
 201:src/interruptRoutine.cpp ****         printInt(scause);
 202:src/interruptRoutine.cpp ****         printString("\nsepc: ");
 203:src/interruptRoutine.cpp ****         printInt(sepc);
 204:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 205:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 206:src/interruptRoutine.cpp ****     }
 207:src/interruptRoutine.cpp **** }...
 833              		.loc 3 207 1
 834 0438 6F00001C 		j	.L49
 835              	.LVL70:
 836              	.L8:
 837              	.LBB34:
 838              	.LBB27:
 173:src/interruptRoutine.cpp ****     } else if (scause == 0x8000000000000009) {
 839              		.loc 3 173 12 is_stmt 1
 840              	.LBB28:
 841 043c 033784FD 		ld	a4,-40(s0)
 842              	.LVL71:
 843 0440 9307F0FF 		li	a5,-1
 844 0444 9397F703 		slli	a5,a5,63
 845 0448 93879700 		addi	a5,a5,9
 846 044c 631EF708 		bne	a4,a5,.L41
 847              	.LBB29:
 175:src/interruptRoutine.cpp ****         uint64 irq = plic_claim();
 848              		.loc 3 175 9
 175:src/interruptRoutine.cpp ****         uint64 irq = plic_claim();
 849              		.loc 3 175 32 is_stmt 0
 850 0450 97000000 		call	plic_claim@plt
 850      E7800000 
 851              	.LVL72:
 852 0458 93070500 		mv	a5,a0
 175:src/interruptRoutine.cpp ****         uint64 irq = plic_claim();
 853              		.loc 3 175 33
 854 045c 233CF4F8 		sd	a5,-104(s0)
 855              	.LVL73:
 176:src/interruptRoutine.cpp ****         if (irq == CONSOLE_IRQ) {
 856              		.loc 3 176 9 is_stmt 1
 857 0460 033784F9 		ld	a4,-104(s0)
GAS LISTING /tmp/ccRqyiOg.s 			page 22


 858 0464 9307A000 		li	a5,10
 859 0468 631EF702 		bne	a4,a5,.L42
 177:src/interruptRoutine.cpp ****             if (KConsole::getSRvalue() & CONSOLE_RX_STATUS_BIT) {
 860              		.loc 3 177 13
 177:src/interruptRoutine.cpp ****             if (KConsole::getSRvalue() & CONSOLE_RX_STATUS_BIT) {
 861              		.loc 3 177 37 is_stmt 0
 862 046c 97000000 		call	_ZN8KConsole10getSRvalueEv
 862      E7800000 
 863              	.LVL74:
 864 0474 93070500 		mv	a5,a0
 177:src/interruptRoutine.cpp ****             if (KConsole::getSRvalue() & CONSOLE_RX_STATUS_BIT) {
 865              		.loc 3 177 40
 866 0478 93F71700 		andi	a5,a5,1
 177:src/interruptRoutine.cpp ****             if (KConsole::getSRvalue() & CONSOLE_RX_STATUS_BIT) {
 867              		.loc 3 177 63
 868 047c B337F000 		snez	a5,a5
 869 0480 93F7F70F 		andi	a5,a5,0xff
 177:src/interruptRoutine.cpp ****             if (KConsole::getSRvalue() & CONSOLE_RX_STATUS_BIT) {
 870              		.loc 3 177 13
 871 0484 63880702 		beqz	a5,.L43
 179:src/interruptRoutine.cpp ****                 KConsole::placeInInput(KConsole::getDRvalue());
 872              		.loc 3 179 17 is_stmt 1
 179:src/interruptRoutine.cpp ****                 KConsole::placeInInput(KConsole::getDRvalue());
 873              		.loc 3 179 60 is_stmt 0
 874 0488 97000000 		call	_ZN8KConsole10getDRvalueEv
 874      E7800000 
 875              	.LVL75:
 876 0490 93070500 		mv	a5,a0
 179:src/interruptRoutine.cpp ****                 KConsole::placeInInput(KConsole::getDRvalue());
 877              		.loc 3 179 39
 878 0494 13850700 		mv	a0,a5
 879 0498 97000000 		call	_ZN8KConsole12placeInInputEc@plt
 879      E7800000 
 880              	.LVL76:
 881 04a0 6F004001 		j	.L43
 882              	.LVL77:
 883              	.L42:
 182:src/interruptRoutine.cpp ****             printString("Neki drugi prekid\n");
 884              		.loc 3 182 13 is_stmt 1
 182:src/interruptRoutine.cpp ****             printString("Neki drugi prekid\n");
 885              		.loc 3 182 24 is_stmt 0
 886 04a4 17050000 		lla	a0,.LC3
 886      13050500 
 887              	.LVL78:
 888 04ac 97000000 		call	_Z11printStringPKc@plt
 888      E7800000 
 889              	.LVL79:
 890              	.L43:
 184:src/interruptRoutine.cpp ****         plic_complete(irq);
 891              		.loc 3 184 9 is_stmt 1
 184:src/interruptRoutine.cpp ****         plic_complete(irq);
 892              		.loc 3 184 22 is_stmt 0
 893 04b4 833784F9 		ld	a5,-104(s0)
 894 04b8 9B870700 		sext.w	a5,a5
 895 04bc 13850700 		mv	a0,a5
 896 04c0 97000000 		call	plic_complete@plt
 896      E7800000 
GAS LISTING /tmp/ccRqyiOg.s 			page 23


 897              	.LVL80:
 185:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 898              		.loc 3 185 9 is_stmt 1
 185:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 899              		.loc 3 185 66 is_stmt 0
 900 04c8 833704FD 		ld	a5,-48(s0)
 901              	#APP
 902              	# 185 "src/interruptRoutine.cpp" 1
 186:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 903              		csrw sepc, a5
 904              	# 0 "" 2
 905              		.loc 3 186 9 is_stmt 1
 186:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 906              		.loc 3 186 71 is_stmt 0
 907              	#NO_APP
 908 04d0 833784FC 		ld	a5,-56(s0)
 909              	#APP
 910              	# 186 "src/interruptRoutine.cpp" 1
 187:src/interruptRoutine.cpp ****         Riscv::mc_sip(Riscv::SIP_SEIP);
 911              		csrw sstatus, a5
 912              	# 0 "" 2
 913              		.loc 3 187 9 is_stmt 1
 187:src/interruptRoutine.cpp ****         Riscv::mc_sip(Riscv::SIP_SEIP);
 914              		.loc 3 187 22 is_stmt 0
 915              	#NO_APP
 916 04d8 13050020 		li	a0,512
 917 04dc 97000000 		call	_ZN5Riscv6mc_sipEm
 917      E7800000 
 918              	.LVL81:
 919              	.LBE29:
 920              	.LBE28:
 921              	.LBE27:
 922              	.LBE34:
 923              		.loc 3 207 1
 924 04e4 6F004011 		j	.L49
 925              	.LVL82:
 926              	.L41:
 927              	.LBB35:
 928              	.LBB32:
 929              	.LBB30:
 188:src/interruptRoutine.cpp ****     } else if (scause == 0x8000000000000001) {
 930              		.loc 3 188 12 is_stmt 1
 931 04e8 033784FD 		ld	a4,-40(s0)
 932 04ec 9307F0FF 		li	a5,-1
 933 04f0 9397F703 		slli	a5,a5,63
 934 04f4 93871700 		addi	a5,a5,1
 935 04f8 6314F708 		bne	a4,a5,.L44
 190:src/interruptRoutine.cpp ****         Scheduler::wake();
 936              		.loc 3 190 9
 190:src/interruptRoutine.cpp ****         Scheduler::wake();
 937              		.loc 3 190 24 is_stmt 0
 938 04fc 97000000 		call	_ZN9Scheduler4wakeEv@plt
 938      E7800000 
 939              	.LVL83:
 191:src/interruptRoutine.cpp ****         TCB::getRunningTimeSlice()++;
 940              		.loc 3 191 9 is_stmt 1
 191:src/interruptRoutine.cpp ****         TCB::getRunningTimeSlice()++;
GAS LISTING /tmp/ccRqyiOg.s 			page 24


 941              		.loc 3 191 34 is_stmt 0
 942 0504 97000000 		call	_ZN3TCB19getRunningTimeSliceEv
 942      E7800000 
 943              	.LVL84:
 944 050c 93070500 		mv	a5,a0
 191:src/interruptRoutine.cpp ****         TCB::getRunningTimeSlice()++;
 945              		.loc 3 191 33
 946 0510 03B70700 		ld	a4,0(a5)
 191:src/interruptRoutine.cpp ****         TCB::getRunningTimeSlice()++;
 947              		.loc 3 191 35
 948 0514 13071700 		addi	a4,a4,1
 949 0518 23B0E700 		sd	a4,0(a5)
 192:src/interruptRoutine.cpp ****         if (TCB::getRunningTimeSlice() >= TCB::getRunning()->getTimeSlice()) {
 950              		.loc 3 192 9 is_stmt 1
 192:src/interruptRoutine.cpp ****         if (TCB::getRunningTimeSlice() >= TCB::getRunning()->getTimeSlice()) {
 951              		.loc 3 192 38 is_stmt 0
 952 051c 97000000 		call	_ZN3TCB19getRunningTimeSliceEv
 952      E7800000 
 953              	.LVL85:
 954 0524 93070500 		mv	a5,a0
 192:src/interruptRoutine.cpp ****         if (TCB::getRunningTimeSlice() >= TCB::getRunning()->getTimeSlice()) {
 955              		.loc 3 192 37
 956 0528 83B40700 		ld	s1,0(a5)
 192:src/interruptRoutine.cpp ****         if (TCB::getRunningTimeSlice() >= TCB::getRunning()->getTimeSlice()) {
 957              		.loc 3 192 74
 958 052c 97000000 		call	_ZN3TCB10getRunningEv
 958      E7800000 
 959              	.LVL86:
 960 0534 93070500 		mv	a5,a0
 961 0538 13850700 		mv	a0,a5
 962 053c 97000000 		call	_ZN3TCB12getTimeSliceEv
 962      E7800000 
 963              	.LVL87:
 964 0544 93070500 		mv	a5,a0
 192:src/interruptRoutine.cpp ****         if (TCB::getRunningTimeSlice() >= TCB::getRunning()->getTimeSlice()) {
 965              		.loc 3 192 40
 966 0548 B3B7F400 		sltu	a5,s1,a5
 967 054c 93C71700 		xori	a5,a5,1
 968 0550 93F7F70F 		andi	a5,a5,0xff
 192:src/interruptRoutine.cpp ****         if (TCB::getRunningTimeSlice() >= TCB::getRunning()->getTimeSlice()) {
 969              		.loc 3 192 9
 970 0554 63860700 		beqz	a5,.L45
 193:src/interruptRoutine.cpp ****             TCB::dispatch();
 971              		.loc 3 193 13 is_stmt 1
 193:src/interruptRoutine.cpp ****             TCB::dispatch();
 972              		.loc 3 193 26 is_stmt 0
 973 0558 97000000 		call	_ZN3TCB8dispatchEv@plt
 973      E7800000 
 974              	.LVL88:
 975              	.L45:
 195:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 976              		.loc 3 195 9 is_stmt 1
 195:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 977              		.loc 3 195 66 is_stmt 0
 978 0560 833704FD 		ld	a5,-48(s0)
 979              	#APP
 980              	# 195 "src/interruptRoutine.cpp" 1
GAS LISTING /tmp/ccRqyiOg.s 			page 25


 196:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 981              		csrw sepc, a5
 982              	# 0 "" 2
 983              		.loc 3 196 9 is_stmt 1
 196:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 984              		.loc 3 196 71 is_stmt 0
 985              	#NO_APP
 986 0568 833784FC 		ld	a5,-56(s0)
 987              	#APP
 988              	# 196 "src/interruptRoutine.cpp" 1
 197:src/interruptRoutine.cpp ****         Riscv::mc_sip(Riscv::SIP_SSIP);
 989              		csrw sstatus, a5
 990              	# 0 "" 2
 991              		.loc 3 197 9 is_stmt 1
 197:src/interruptRoutine.cpp ****         Riscv::mc_sip(Riscv::SIP_SSIP);
 992              		.loc 3 197 22 is_stmt 0
 993              	#NO_APP
 994 0570 13052000 		li	a0,2
 995 0574 97000000 		call	_ZN5Riscv6mc_sipEm
 995      E7800000 
 996              	.LVL89:
 997              	.LBE30:
 998              	.LBE32:
 999              	.LBE35:
 1000              		.loc 3 207 1
 1001 057c 6F00C007 		j	.L49
 1002              	.LVL90:
 1003              	.L44:
 1004              	.LBB36:
 1005              	.LBB33:
 1006              	.LBB31:
 199:src/interruptRoutine.cpp ****         printString("\nGreska u prekidnoj rutini\n");
 1007              		.loc 3 199 9 is_stmt 1
 199:src/interruptRoutine.cpp ****         printString("\nGreska u prekidnoj rutini\n");
 1008              		.loc 3 199 20 is_stmt 0
 1009 0580 17050000 		lla	a0,.LC4
 1009      13050500 
 1010 0588 97000000 		call	_Z11printStringPKc@plt
 1010      E7800000 
 1011              	.LVL91:
 200:src/interruptRoutine.cpp ****         printString("scause: ");
 1012              		.loc 3 200 9 is_stmt 1
 200:src/interruptRoutine.cpp ****         printString("scause: ");
 1013              		.loc 3 200 20 is_stmt 0
 1014 0590 17050000 		lla	a0,.LC5
 1014      13050500 
 1015 0598 97000000 		call	_Z11printStringPKc@plt
 1015      E7800000 
 1016              	.LVL92:
 201:src/interruptRoutine.cpp ****         printInt(scause);
 1017              		.loc 3 201 9 is_stmt 1
 201:src/interruptRoutine.cpp ****         printInt(scause);
 1018              		.loc 3 201 17 is_stmt 0
 1019 05a0 833784FD 		ld	a5,-40(s0)
 1020 05a4 9B870700 		sext.w	a5,a5
 1021 05a8 13060000 		li	a2,0
 1022 05ac 9305A000 		li	a1,10
GAS LISTING /tmp/ccRqyiOg.s 			page 26


 1023 05b0 13850700 		mv	a0,a5
 1024 05b4 97000000 		call	_Z8printIntiii@plt
 1024      E7800000 
 1025              	.LVL93:
 202:src/interruptRoutine.cpp ****         printString("\nsepc: ");
 1026              		.loc 3 202 9 is_stmt 1
 202:src/interruptRoutine.cpp ****         printString("\nsepc: ");
 1027              		.loc 3 202 20 is_stmt 0
 1028 05bc 17050000 		lla	a0,.LC2
 1028      13050500 
 1029 05c4 97000000 		call	_Z11printStringPKc@plt
 1029      E7800000 
 1030              	.LVL94:
 203:src/interruptRoutine.cpp ****         printInt(sepc);
 1031              		.loc 3 203 9 is_stmt 1
 203:src/interruptRoutine.cpp ****         printInt(sepc);
 1032              		.loc 3 203 17 is_stmt 0
 1033 05cc 833704FD 		ld	a5,-48(s0)
 1034 05d0 9B870700 		sext.w	a5,a5
 1035 05d4 13060000 		li	a2,0
 1036 05d8 9305A000 		li	a1,10
 1037 05dc 13850700 		mv	a0,a5
 1038 05e0 97000000 		call	_Z8printIntiii@plt
 1038      E7800000 
 1039              	.LVL95:
 204:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 1040              		.loc 3 204 9 is_stmt 1
 204:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 1041              		.loc 3 204 66 is_stmt 0
 1042 05e8 833704FD 		ld	a5,-48(s0)
 1043              	#APP
 1044              	# 204 "src/interruptRoutine.cpp" 1
 205:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 1045              		csrw sepc, a5
 1046              	# 0 "" 2
 1047              		.loc 3 205 9 is_stmt 1
 205:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 1048              		.loc 3 205 71 is_stmt 0
 1049              	#NO_APP
 1050 05f0 833784FC 		ld	a5,-56(s0)
 1051              	#APP
 1052              	# 205 "src/interruptRoutine.cpp" 1
 1053              		csrw sstatus, a5
 1054              	# 0 "" 2
 1055              	#NO_APP
 1056              	.L49:
 1057              	.LBE31:
 1058              	.LBE33:
 1059              	.LBE36:
 1060              		.loc 3 207 1
 1061 05f8 13000000 		nop
 1062 05fc 83308106 		ld	ra,104(sp)
 1063              		.cfi_restore 1
 1064 0600 03340106 		ld	s0,96(sp)
 1065              		.cfi_restore 8
 1066              		.cfi_def_cfa 2, 112
 1067              	.LVL96:
GAS LISTING /tmp/ccRqyiOg.s 			page 27


 1068 0604 83348105 		ld	s1,88(sp)
 1069              		.cfi_restore 9
 1070 0608 13010107 		addi	sp,sp,112
 1071              		.cfi_def_cfa_offset 0
 1072              	.LVL97:
 1073 060c 67800000 		jr	ra
 1074              		.cfi_endproc
 1075              	.LFE57:
 1077              		.section	.text._ZN5Riscv6mc_sipEm,"axG",@progbits,_ZN5Riscv6mc_sipEm,comdat
 1078              		.align	2
 1079              		.weak	_ZN5Riscv6mc_sipEm
 1081              	_ZN5Riscv6mc_sipEm:
 1082              	.LFB7:
 1083              		.file 4 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 5/17/23.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJEKAT2023_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJEKAT2023_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** class Riscv {
  11:src/../h/Riscv.hpp **** public:
  12:src/../h/Riscv.hpp **** 
  13:src/../h/Riscv.hpp **** 	static void returnFromInterrupt();
  14:src/../h/Riscv.hpp **** 
  15:src/../h/Riscv.hpp **** 	//read scause
  16:src/../h/Riscv.hpp **** 	static uint64 r_scause();
  17:src/../h/Riscv.hpp **** 
  18:src/../h/Riscv.hpp **** 	//write scause
  19:src/../h/Riscv.hpp **** 	static void w_scause(uint64 scause);
  20:src/../h/Riscv.hpp **** 
  21:src/../h/Riscv.hpp **** 	//read sepc
  22:src/../h/Riscv.hpp **** 	static uint64 r_sepc();
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp **** 	//write sepc
  25:src/../h/Riscv.hpp **** 	static void w_sepc(uint64 sepc);
  26:src/../h/Riscv.hpp **** 
  27:src/../h/Riscv.hpp **** 	//read stvec
  28:src/../h/Riscv.hpp **** 	static uint64 r_stvec();
  29:src/../h/Riscv.hpp **** 
  30:src/../h/Riscv.hpp **** 	//write stvec
  31:src/../h/Riscv.hpp **** 	static void w_stvec(uint64 stvec);
  32:src/../h/Riscv.hpp **** 
  33:src/../h/Riscv.hpp **** 	enum BitMaskSip {
  34:src/../h/Riscv.hpp **** 		//postoji zahtev za softverski prekid
  35:src/../h/Riscv.hpp **** 		SIP_SSIP = (1 << 1),
  36:src/../h/Riscv.hpp **** 		//postoji prekid od tajmera
  37:src/../h/Riscv.hpp **** 		SIP_STIP = (1 << 5),
  38:src/../h/Riscv.hpp **** 		//postoji zahtev za spoljasnji hardverski prekid
  39:src/../h/Riscv.hpp **** 		SIP_SEIP = (1 << 9)
  40:src/../h/Riscv.hpp **** 	};
  41:src/../h/Riscv.hpp **** 
  42:src/../h/Riscv.hpp **** 	//mask set sip
  43:src/../h/Riscv.hpp **** 	static void ms_sip(uint64 mask);
GAS LISTING /tmp/ccRqyiOg.s 			page 28


  44:src/../h/Riscv.hpp **** 
  45:src/../h/Riscv.hpp **** 	//mask clear sip
  46:src/../h/Riscv.hpp **** 	static void mc_sip(uint64 mask);
  47:src/../h/Riscv.hpp **** 
  48:src/../h/Riscv.hpp **** 	//read sip
  49:src/../h/Riscv.hpp **** 	static uint64 r_sip();
  50:src/../h/Riscv.hpp **** 
  51:src/../h/Riscv.hpp **** 	//write sip
  52:src/../h/Riscv.hpp **** 	static void w_sip(uint64 sip);
  53:src/../h/Riscv.hpp **** 
  54:src/../h/Riscv.hpp **** 	//kada se pozove sret, SIE dobija vrednost SPIE, SPIE se postavlja na 1,
  55:src/../h/Riscv.hpp **** 	//rezim se postavlja na osnovu SPP bita, SPP se postavlja na 0
  56:src/../h/Riscv.hpp **** 	enum BitMaskSstatus {
  57:src/../h/Riscv.hpp **** 		//1 - dozvoljeni prekidi; 0- nedozvoljeni prekidi; igonrise se u korisnickom rezimu
  58:src/../h/Riscv.hpp **** 		SSTATUS_SIE = (1 << 1),
  59:src/../h/Riscv.hpp **** 		//prethodna vrednost bita SIE
  60:src/../h/Riscv.hpp **** 		SSTATUS_SPIE = (1 << 5),
  61:src/../h/Riscv.hpp **** 		//iz kog rezima se desio skok; 0 - iz korisnickog; 1 - iz sistemskog
  62:src/../h/Riscv.hpp **** 		SSTATUS_SPP = (1 << 8)
  63:src/../h/Riscv.hpp **** 	};
  64:src/../h/Riscv.hpp **** 
  65:src/../h/Riscv.hpp **** 	//mask set sstatus
  66:src/../h/Riscv.hpp **** 	static void ms_sstatus(uint64 mask);
  67:src/../h/Riscv.hpp **** 
  68:src/../h/Riscv.hpp **** 	//mask clear sstatus
  69:src/../h/Riscv.hpp **** 	static void mc_sstatus(uint64 mask);
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp **** 	//read sstatus
  72:src/../h/Riscv.hpp **** 	static uint64 r_sstatus();
  73:src/../h/Riscv.hpp **** 
  74:src/../h/Riscv.hpp **** 	//write sstatus
  75:src/../h/Riscv.hpp **** 	static void w_sstatus(uint64 sstatus);
  76:src/../h/Riscv.hpp **** 
  77:src/../h/Riscv.hpp **** 	//upisuje kod sistemskog poziva u registar a0
  78:src/../h/Riscv.hpp **** 	static void loadOpCode(uint64 opCode);
  79:src/../h/Riscv.hpp **** 
  80:src/../h/Riscv.hpp **** };
  81:src/../h/Riscv.hpp **** 
  82:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause() {
  83:src/../h/Riscv.hpp **** 	uint64 volatile scause;
  84:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[scause], scause": [scause] "=r"(scause));
  85:src/../h/Riscv.hpp **** 	return scause;
  86:src/../h/Riscv.hpp **** }
  87:src/../h/Riscv.hpp **** 
  88:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
  89:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw scause, %[scause]": :[scause] "r"(scause));
  90:src/../h/Riscv.hpp **** }
  91:src/../h/Riscv.hpp **** 
  92:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc() {
  93:src/../h/Riscv.hpp **** 	uint64 volatile sepc;
  94:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[sepc], sepc": [sepc] "=r"(sepc));
  95:src/../h/Riscv.hpp **** 	return sepc;
  96:src/../h/Riscv.hpp **** }
  97:src/../h/Riscv.hpp **** 
  98:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
  99:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 100:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/ccRqyiOg.s 			page 29


 101:src/../h/Riscv.hpp **** 
 102:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec() {
 103:src/../h/Riscv.hpp **** 	uint64 volatile stvec;
 104:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[stvec], stvec": [stvec] "=r"(stvec));
 105:src/../h/Riscv.hpp **** 	return stvec;
 106:src/../h/Riscv.hpp **** }
 107:src/../h/Riscv.hpp **** 
 108:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 109:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw stvec, %[stvec]": :[stvec] "r"(stvec));
 110:src/../h/Riscv.hpp **** }
 111:src/../h/Riscv.hpp **** 
 112:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 113:src/../h/Riscv.hpp **** 	__asm__ volatile("csrs sip, %[mask]": :[mask] "r"(mask));
 114:src/../h/Riscv.hpp **** }
 115:src/../h/Riscv.hpp **** 
 116:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 1084              		.loc 4 116 40 is_stmt 1
 1085              		.cfi_startproc
 1086              	.LVL98:
 1087 0000 130101FF 		addi	sp,sp,-16
 1088              		.cfi_def_cfa_offset 16
 1089 0004 23348100 		sd	s0,8(sp)
 1090              		.cfi_offset 8, -8
 1091 0008 13040101 		addi	s0,sp,16
 1092              		.cfi_def_cfa 8, 0
 117:src/../h/Riscv.hpp **** 	__asm__ volatile("csrc sip, %[mask]": :[mask] "r"(mask));
 1093              		.loc 4 117 2
 1094              		.loc 4 117 58 is_stmt 0
 1095              	#APP
 1096              	# 117 "src/../h/Riscv.hpp" 1
 118              	}
 1097              		csrc sip, a0
 1098              	# 0 "" 2
 1099              		.loc 4 118 1
 1100              	#NO_APP
 1101 0010 03348100 		ld	s0,8(sp)
 1102              		.cfi_restore 8
 1103              		.cfi_def_cfa 2, 16
 1104 0014 13010101 		addi	sp,sp,16
 1105              		.cfi_def_cfa_offset 0
 1106 0018 67800000 		jr	ra
 1107              		.cfi_endproc
 1108              	.LFE7:
 1110              		.section	.text._ZN8KConsole10getSRvalueEv,"axG",@progbits,_ZN8KConsole10getSRvalueEv,comdat
 1111              		.align	2
 1112              		.weak	_ZN8KConsole10getSRvalueEv
 1114              	_ZN8KConsole10getSRvalueEv:
 1115              	.LFB33:
 1116              		.file 5 "src/../h/KConsole.hpp"
   1:src/../h/KConsole.hpp **** //
   2:src/../h/KConsole.hpp **** // Created by os on 6/7/23.
   3:src/../h/KConsole.hpp **** //
   4:src/../h/KConsole.hpp **** 
   5:src/../h/KConsole.hpp **** #ifndef PROJEKAT2023_KCONSOLE_HPP
   6:src/../h/KConsole.hpp **** #define PROJEKAT2023_KCONSOLE_HPP
   7:src/../h/KConsole.hpp **** 
   8:src/../h/KConsole.hpp **** #include "../lib/hw.h"
GAS LISTING /tmp/ccRqyiOg.s 			page 30


   9:src/../h/KConsole.hpp **** #include "../h/syscall_c.hpp"
  10:src/../h/KConsole.hpp **** #include "../test/printing.hpp"
  11:src/../h/KConsole.hpp **** #include "../visak/helper.hpp"
  12:src/../h/KConsole.hpp **** 
  13:src/../h/KConsole.hpp **** class KConsole {
  14:src/../h/KConsole.hpp **** public:
  15:src/../h/KConsole.hpp ****     //stavlja karakter u izlazni bafer konzole
  16:src/../h/KConsole.hpp ****     static void kputc(char c);
  17:src/../h/KConsole.hpp **** 
  18:src/../h/KConsole.hpp ****     //uzima karakter iz ulaznog bafera konzole
  19:src/../h/KConsole.hpp ****     static char kgetc();
  20:src/../h/KConsole.hpp **** 
  21:src/../h/KConsole.hpp ****     static void initKConsole();
  22:src/../h/KConsole.hpp **** 
  23:src/../h/KConsole.hpp ****     //vraca karakter iz izlaznog bafera; ako je bafer prazan, blokira se dok se ne napuni
  24:src/../h/KConsole.hpp ****     static char getFromOutput();
  25:src/../h/KConsole.hpp **** 
  26:src/../h/KConsole.hpp ****     //stavlja karakter u ulazni bafer; ako je bafer pun, ignorise se
  27:src/../h/KConsole.hpp ****     static void placeInInput(char c);
  28:src/../h/KConsole.hpp **** 
  29:src/../h/KConsole.hpp ****     static uint8 getSRvalue() { return *sr; }
 1117              		.loc 5 29 18 is_stmt 1
 1118              		.cfi_startproc
 1119 0000 130101FF 		addi	sp,sp,-16
 1120              		.cfi_def_cfa_offset 16
 1121 0004 23348100 		sd	s0,8(sp)
 1122              		.cfi_offset 8, -8
 1123 0008 13040101 		addi	s0,sp,16
 1124              		.cfi_def_cfa 8, 0
 1125              		.loc 5 29 33
 1126              		.loc 5 29 40 is_stmt 0
 1127 000c 97070000 		la	a5,_ZN8KConsole2srE
 1127      83B70700 
 1128 0014 83B70700 		ld	a5,0(a5)
 1129              		.loc 5 29 45
 1130 0018 03C50700 		lbu	a0,0(a5)
 1131 001c 03348100 		ld	s0,8(sp)
 1132              		.cfi_restore 8
 1133              		.cfi_def_cfa 2, 16
 1134 0020 13010101 		addi	sp,sp,16
 1135              		.cfi_def_cfa_offset 0
 1136 0024 67800000 		jr	ra
 1137              		.cfi_endproc
 1138              	.LFE33:
 1140              		.section	.text._ZN8KConsole10getDRvalueEv,"axG",@progbits,_ZN8KConsole10getDRvalueEv,comdat
 1141              		.align	2
 1142              		.weak	_ZN8KConsole10getDRvalueEv
 1144              	_ZN8KConsole10getDRvalueEv:
 1145              	.LFB34:
  30:src/../h/KConsole.hpp **** 
  31:src/../h/KConsole.hpp ****     static uint8 getDRvalue() { return *dr; }
 1146              		.loc 5 31 18 is_stmt 1
 1147              		.cfi_startproc
 1148 0000 130101FF 		addi	sp,sp,-16
 1149              		.cfi_def_cfa_offset 16
 1150 0004 23348100 		sd	s0,8(sp)
 1151              		.cfi_offset 8, -8
GAS LISTING /tmp/ccRqyiOg.s 			page 31


 1152 0008 13040101 		addi	s0,sp,16
 1153              		.cfi_def_cfa 8, 0
 1154              		.loc 5 31 33
 1155              		.loc 5 31 40 is_stmt 0
 1156 000c 97070000 		la	a5,_ZN8KConsole2drE
 1156      83B70700 
 1157 0014 83B70700 		ld	a5,0(a5)
 1158              		.loc 5 31 45
 1159 0018 03C50700 		lbu	a0,0(a5)
 1160 001c 03348100 		ld	s0,8(sp)
 1161              		.cfi_restore 8
 1162              		.cfi_def_cfa 2, 16
 1163 0020 13010101 		addi	sp,sp,16
 1164              		.cfi_def_cfa_offset 0
 1165 0024 67800000 		jr	ra
 1166              		.cfi_endproc
 1167              	.LFE34:
 1169              		.section	.text._ZN3TCB9setStatusENS_12ThreadStatusE,"axG",@progbits,_ZN3TCB9setStatusENS_12ThreadS
 1170              		.align	2
 1171              		.weak	_ZN3TCB9setStatusENS_12ThreadStatusE
 1173              	_ZN3TCB9setStatusENS_12ThreadStatusE:
 1174              	.LFB42:
 1175              		.file 6 "src/../h/TCB.hpp"
   1:src/../h/TCB.hpp **** //
   2:src/../h/TCB.hpp **** // Created by os on 5/23/23.
   3:src/../h/TCB.hpp **** //
   4:src/../h/TCB.hpp **** 
   5:src/../h/TCB.hpp **** #ifndef PROJEKAT2023_TCB_HPP
   6:src/../h/TCB.hpp **** #define PROJEKAT2023_TCB_HPP
   7:src/../h/TCB.hpp **** 
   8:src/../h/TCB.hpp **** #include "../lib/hw.h"
   9:src/../h/TCB.hpp **** #include "../h/ThreadQueue.hpp"
  10:src/../h/TCB.hpp **** 
  11:src/../h/TCB.hpp **** int main();
  12:src/../h/TCB.hpp **** class TCB {
  13:src/../h/TCB.hpp **** public:
  14:src/../h/TCB.hpp ****     friend class Scheduler;
  15:src/../h/TCB.hpp **** 
  16:src/../h/TCB.hpp ****     using Body = void (*)(void*);
  17:src/../h/TCB.hpp **** 
  18:src/../h/TCB.hpp ****     enum ThreadStatus {
  19:src/../h/TCB.hpp ****         CREATED, ACTIVE, BLOCKED, JOINING, SLEEPING, FINISHED
  20:src/../h/TCB.hpp ****     };
  21:src/../h/TCB.hpp **** 
  22:src/../h/TCB.hpp ****     void setStatus(ThreadStatus stat) { this->status = stat; }
 1176              		.loc 6 22 10 is_stmt 1
 1177              		.cfi_startproc
 1178              	.LVL99:
 1179 0000 130101FF 		addi	sp,sp,-16
 1180              		.cfi_def_cfa_offset 16
 1181 0004 23348100 		sd	s0,8(sp)
 1182              		.cfi_offset 8, -8
 1183 0008 13040101 		addi	s0,sp,16
 1184              		.cfi_def_cfa 8, 0
 1185              		.loc 6 22 41
 1186              		.loc 6 22 54 is_stmt 0
 1187 000c 232CB504 		sw	a1,88(a0)
GAS LISTING /tmp/ccRqyiOg.s 			page 32


 1188              		.loc 6 22 62
 1189 0010 03348100 		ld	s0,8(sp)
 1190              		.cfi_restore 8
 1191              		.cfi_def_cfa 2, 16
 1192 0014 13010101 		addi	sp,sp,16
 1193              		.cfi_def_cfa_offset 0
 1194 0018 67800000 		jr	ra
 1195              		.cfi_endproc
 1196              	.LFE42:
 1198              		.section	.text._ZN3TCB12getTimeSliceEv,"axG",@progbits,_ZN3TCB12getTimeSliceEv,comdat
 1199              		.align	2
 1200              		.weak	_ZN3TCB12getTimeSliceEv
 1202              	_ZN3TCB12getTimeSliceEv:
 1203              	.LFB44:
  23:src/../h/TCB.hpp **** 
  24:src/../h/TCB.hpp ****     ThreadStatus getStatus() { return this->status; }
  25:src/../h/TCB.hpp **** 
  26:src/../h/TCB.hpp ****     static TCB* createThread(Body function, void* args, uint64* stack);
  27:src/../h/TCB.hpp **** 
  28:src/../h/TCB.hpp ****     static void start(TCB* newTcb);
  29:src/../h/TCB.hpp **** 
  30:src/../h/TCB.hpp ****     uint64 getTimeSlice() { return timeSlice; }
 1204              		.loc 6 30 12 is_stmt 1
 1205              		.cfi_startproc
 1206              	.LVL100:
 1207 0000 130101FF 		addi	sp,sp,-16
 1208              		.cfi_def_cfa_offset 16
 1209 0004 23348100 		sd	s0,8(sp)
 1210              		.cfi_offset 8, -8
 1211 0008 13040101 		addi	s0,sp,16
 1212              		.cfi_def_cfa 8, 0
 1213              		.loc 6 30 29
 1214              		.loc 6 30 47 is_stmt 0
 1215 000c 03358502 		ld	a0,40(a0)
 1216              	.LVL101:
 1217 0010 03348100 		ld	s0,8(sp)
 1218              		.cfi_restore 8
 1219              		.cfi_def_cfa 2, 16
 1220 0014 13010101 		addi	sp,sp,16
 1221              		.cfi_def_cfa_offset 0
 1222 0018 67800000 		jr	ra
 1223              		.cfi_endproc
 1224              	.LFE44:
 1226              		.section	.text._ZN3TCB7getBodyEv,"axG",@progbits,_ZN3TCB7getBodyEv,comdat
 1227              		.align	2
 1228              		.weak	_ZN3TCB7getBodyEv
 1230              	_ZN3TCB7getBodyEv:
 1231              	.LFB46:
  31:src/../h/TCB.hpp **** 
  32:src/../h/TCB.hpp ****     void setTimeSlice(uint64 value) { timeSlice = value; }
  33:src/../h/TCB.hpp **** 
  34:src/../h/TCB.hpp ****     Body getBody() { return threadFunction; }
 1232              		.loc 6 34 10 is_stmt 1
 1233              		.cfi_startproc
 1234              	.LVL102:
 1235 0000 130101FF 		addi	sp,sp,-16
 1236              		.cfi_def_cfa_offset 16
GAS LISTING /tmp/ccRqyiOg.s 			page 33


 1237 0004 23348100 		sd	s0,8(sp)
 1238              		.cfi_offset 8, -8
 1239 0008 13040101 		addi	s0,sp,16
 1240              		.cfi_def_cfa 8, 0
 1241              		.loc 6 34 22
 1242              		.loc 6 34 45 is_stmt 0
 1243 000c 03350501 		ld	a0,16(a0)
 1244              	.LVL103:
 1245 0010 03348100 		ld	s0,8(sp)
 1246              		.cfi_restore 8
 1247              		.cfi_def_cfa 2, 16
 1248 0014 13010101 		addi	sp,sp,16
 1249              		.cfi_def_cfa_offset 0
 1250 0018 67800000 		jr	ra
 1251              		.cfi_endproc
 1252              	.LFE46:
 1254              		.section	.text._ZN3TCB10getRunningEv,"axG",@progbits,_ZN3TCB10getRunningEv,comdat
 1255              		.align	2
 1256              		.weak	_ZN3TCB10getRunningEv
 1258              	_ZN3TCB10getRunningEv:
 1259              	.LFB47:
  35:src/../h/TCB.hpp **** 
  36:src/../h/TCB.hpp ****     static TCB* getRunning() { return running; }
 1260              		.loc 6 36 17 is_stmt 1
 1261              		.cfi_startproc
 1262 0000 130101FF 		addi	sp,sp,-16
 1263              		.cfi_def_cfa_offset 16
 1264 0004 23348100 		sd	s0,8(sp)
 1265              		.cfi_offset 8, -8
 1266 0008 13040101 		addi	s0,sp,16
 1267              		.cfi_def_cfa 8, 0
 1268              		.loc 6 36 32
 1269              		.loc 6 36 48 is_stmt 0
 1270 000c 97070000 		la	a5,_ZN3TCB7runningE
 1270      83B70700 
 1271 0014 03B50700 		ld	a0,0(a5)
 1272 0018 03348100 		ld	s0,8(sp)
 1273              		.cfi_restore 8
 1274              		.cfi_def_cfa 2, 16
 1275 001c 13010101 		addi	sp,sp,16
 1276              		.cfi_def_cfa_offset 0
 1277 0020 67800000 		jr	ra
 1278              		.cfi_endproc
 1279              	.LFE47:
 1281              		.section	.text._ZN3TCB19getRunningTimeSliceEv,"axG",@progbits,_ZN3TCB19getRunningTimeSliceEv,comda
 1282              		.align	2
 1283              		.weak	_ZN3TCB19getRunningTimeSliceEv
 1285              	_ZN3TCB19getRunningTimeSliceEv:
 1286              	.LFB49:
  37:src/../h/TCB.hpp **** 
  38:src/../h/TCB.hpp ****     static void setRunning(TCB* newRunning) { running = newRunning; }
  39:src/../h/TCB.hpp **** 
  40:src/../h/TCB.hpp ****     static uint64 &getRunningTimeSlice() { return runningTimeSlice; }
 1287              		.loc 6 40 20 is_stmt 1
 1288              		.cfi_startproc
 1289 0000 130101FF 		addi	sp,sp,-16
 1290              		.cfi_def_cfa_offset 16
GAS LISTING /tmp/ccRqyiOg.s 			page 34


 1291 0004 23348100 		sd	s0,8(sp)
 1292              		.cfi_offset 8, -8
 1293 0008 13040101 		addi	s0,sp,16
 1294              		.cfi_def_cfa 8, 0
 1295              		.loc 6 40 44
 1296              		.loc 6 40 69 is_stmt 0
 1297 000c 17050000 		la	a0,_ZN3TCB16runningTimeSliceE
 1297      03350500 
 1298 0014 03348100 		ld	s0,8(sp)
 1299              		.cfi_restore 8
 1300              		.cfi_def_cfa 2, 16
 1301 0018 13010101 		addi	sp,sp,16
 1302              		.cfi_def_cfa_offset 0
 1303 001c 67800000 		jr	ra
 1304              		.cfi_endproc
 1305              	.LFE49:
 1307              		.text
 1308              	.Letext0:
 1309              		.file 7 "src/../lib/hw.h"
 1310              		.file 8 "src/../h/KMemory.hpp"
 1311              		.file 9 "src/../h/../h/../h/syscall_c.hpp"
 1312              		.file 10 "src/../h/Scheduler.hpp"
 1313              		.file 11 "src/../h/../test/printing.hpp"
 5988              		.align	3
 5991              	DW.ref.__gxx_personality_v0:
 5992 0000 00000000 		.dword	__gxx_personality_v0
 5992      00000000 
 5993              		.ident	"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04) 9.4.0"
 5994              		.section	.note.GNU-stack,"",@progbits
GAS LISTING /tmp/ccRqyiOg.s 			page 35


DEFINED SYMBOLS
                            *ABS*:0000000000000000 interruptRoutine.cpp
     /tmp/ccRqyiOg.s:10     .text._ZN4KSemD2Ev:0000000000000000 _ZN4KSemD2Ev
     /tmp/ccRqyiOg.s:14     .text._ZN4KSemD2Ev:0000000000000000 .L0 
     /tmp/ccRqyiOg.s:5991   .data.rel.local.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/ccRqyiOg.s:18     .text._ZN4KSemD2Ev:0000000000000000 .L0 
     /tmp/ccRqyiOg.s:19     .text._ZN4KSemD2Ev:0000000000000004 .L0 
     /tmp/ccRqyiOg.s:23     .text._ZN4KSemD2Ev:0000000000000010 .L0 
     /tmp/ccRqyiOg.s:24     .text._ZN4KSemD2Ev:0000000000000010 .L0 
     /tmp/ccRqyiOg.s:25     .text._ZN4KSemD2Ev:0000000000000010 .L0 
     /tmp/ccRqyiOg.s:27     .text._ZN4KSemD2Ev:0000000000000014 .L0 
     /tmp/ccRqyiOg.s:35     .text._ZN4KSemD2Ev:0000000000000018 .L0 
     /tmp/ccRqyiOg.s:38     .text._ZN4KSemD2Ev:0000000000000018 .L0 
     /tmp/ccRqyiOg.s:39     .text._ZN4KSemD2Ev:0000000000000018 .L0 
     /tmp/ccRqyiOg.s:40     .text._ZN4KSemD2Ev:0000000000000018 .L0 
     /tmp/ccRqyiOg.s:45     .text._ZN4KSemD2Ev:000000000000001c .L0 
     /tmp/ccRqyiOg.s:49     .text._ZN4KSemD2Ev:0000000000000020 .L0 
     /tmp/ccRqyiOg.s:50     .text._ZN4KSemD2Ev:0000000000000020 .L0 
     /tmp/ccRqyiOg.s:51     .text._ZN4KSemD2Ev:0000000000000020 .L0 
     /tmp/ccRqyiOg.s:53     .text._ZN4KSemD2Ev:0000000000000024 .L0 
     /tmp/ccRqyiOg.s:55     .text._ZN4KSemD2Ev:0000000000000028 .L0 
     /tmp/ccRqyiOg.s:56     .text._ZN4KSemD2Ev:0000000000000028 .L0 
     /tmp/ccRqyiOg.s:61     .text._ZN4KSemD2Ev:000000000000002c .L0 
     /tmp/ccRqyiOg.s:62     .text._ZN4KSemD2Ev:000000000000002c .L0 
     /tmp/ccRqyiOg.s:65     .text._ZN4KSemD2Ev:0000000000000034 .L0 
     /tmp/ccRqyiOg.s:73     .text._ZN4KSemD2Ev:0000000000000038 .L0 
     /tmp/ccRqyiOg.s:74     .text._ZN4KSemD2Ev:000000000000003c .L0 
     /tmp/ccRqyiOg.s:76     .text._ZN4KSemD2Ev:0000000000000040 .L0 
     /tmp/ccRqyiOg.s:77     .text._ZN4KSemD2Ev:0000000000000040 .L0 
     /tmp/ccRqyiOg.s:79     .text._ZN4KSemD2Ev:0000000000000044 .L0 
     /tmp/ccRqyiOg.s:82     .text._ZN4KSemD2Ev:0000000000000048 .L0 
     /tmp/ccRqyiOg.s:84     .text._ZN4KSemD2Ev:000000000000004c .L0 
     /tmp/ccRqyiOg.s:10     .text._ZN4KSemD2Ev:0000000000000000 _ZN4KSemD1Ev
     /tmp/ccRqyiOg.s:120    .text:0000000000000000 interruptRoutine
     /tmp/ccRqyiOg.s:124    .text:0000000000000000 .L0 
     /tmp/ccRqyiOg.s:125    .text:0000000000000000 .L0 
     /tmp/ccRqyiOg.s:126    .text:0000000000000004 .L0 
     /tmp/ccRqyiOg.s:130    .text:0000000000000010 .L0 
     /tmp/ccRqyiOg.s:131    .text:0000000000000010 .L0 
     /tmp/ccRqyiOg.s:132    .text:0000000000000010 .L0 
     /tmp/ccRqyiOg.s:134    .text:0000000000000014 .L0 
     /tmp/ccRqyiOg.s:136    .text:0000000000000014 .L0 
     /tmp/ccRqyiOg.s:137    .text:0000000000000014 .L0 
src/interruptRoutine.cpp:19     .text:0000000000000014 .L0 
     /tmp/ccRqyiOg.s:146    .text:000000000000001c .L0 
src/interruptRoutine.cpp:20     .text:000000000000001c .L0 
     /tmp/ccRqyiOg.s:156    .text:0000000000000024 .L0 
src/interruptRoutine.cpp:21     .text:0000000000000024 .L0 
     /tmp/ccRqyiOg.s:166    .text:000000000000002c .L0 
     /tmp/ccRqyiOg.s:167    .text:000000000000002c .L0 
src/interruptRoutine.cpp:26     .text:000000000000002c .L0 
     /tmp/ccRqyiOg.s:177    .text:0000000000000034 .L0 
src/interruptRoutine.cpp:27     .text:0000000000000034 .L0 
     /tmp/ccRqyiOg.s:187    .text:000000000000003c .L0 
src/interruptRoutine.cpp:28     .text:000000000000003c .L0 
     /tmp/ccRqyiOg.s:197    .text:0000000000000044 .L0 
src/interruptRoutine.cpp:29     .text:0000000000000044 .L0 
GAS LISTING /tmp/ccRqyiOg.s 			page 36


     /tmp/ccRqyiOg.s:207    .text:000000000000004c .L0 
src/interruptRoutine.cpp:30     .text:000000000000004c .L0 
     /tmp/ccRqyiOg.s:218    .text:0000000000000054 .L0 
     /tmp/ccRqyiOg.s:222    .text:0000000000000060 .L0 
     /tmp/ccRqyiOg.s:227    .text:000000000000006c .L0 
     /tmp/ccRqyiOg.s:329    .text:00000000000000e0 .L0 
     /tmp/ccRqyiOg.s:330    .text:00000000000000e0 .L0 
     /tmp/ccRqyiOg.s:331    .text:00000000000000e0 .L0 
     /tmp/ccRqyiOg.s:335    .text:00000000000000ec .L0 
src/interruptRoutine.cpp:42     .text:00000000000000ec .L0 
     /tmp/ccRqyiOg.s:342    .text:00000000000000f0 .L0 
     /tmp/ccRqyiOg.s:346    .text:00000000000000f4 .L0 
     /tmp/ccRqyiOg.s:347    .text:00000000000000f4 .L0 
     /tmp/ccRqyiOg.s:348    .text:00000000000000f4 .L0 
     /tmp/ccRqyiOg.s:353    .text:0000000000000104 .L0 
src/interruptRoutine.cpp:48     .text:0000000000000104 .L0 
     /tmp/ccRqyiOg.s:360    .text:0000000000000108 .L0 
     /tmp/ccRqyiOg.s:364    .text:000000000000010c .L0 
     /tmp/ccRqyiOg.s:365    .text:000000000000010c .L0 
     /tmp/ccRqyiOg.s:366    .text:000000000000010c .L0 
     /tmp/ccRqyiOg.s:370    .text:0000000000000118 .L0 
     /tmp/ccRqyiOg.s:372    .text:000000000000011c .L0 
     /tmp/ccRqyiOg.s:379    .text:0000000000000134 .L0 
     /tmp/ccRqyiOg.s:381    .text:0000000000000138 .L0 
     /tmp/ccRqyiOg.s:382    .text:0000000000000138 .L0 
     /tmp/ccRqyiOg.s:385    .text:0000000000000140 .L0 
     /tmp/ccRqyiOg.s:387    .text:0000000000000144 .L0 
     /tmp/ccRqyiOg.s:388    .text:0000000000000144 .L0 
     /tmp/ccRqyiOg.s:390    .text:0000000000000148 .L0 
     /tmp/ccRqyiOg.s:393    .text:0000000000000154 .L0 
     /tmp/ccRqyiOg.s:394    .text:0000000000000154 .L0 
     /tmp/ccRqyiOg.s:401    .text:0000000000000168 .L0 
src/interruptRoutine.cpp:61     .text:0000000000000168 .L0 
     /tmp/ccRqyiOg.s:410    .text:0000000000000170 .L0 
src/interruptRoutine.cpp:63     .text:0000000000000170 .L0 
     /tmp/ccRqyiOg.s:418    .text:0000000000000174 .L0 
src/interruptRoutine.cpp:65     .text:0000000000000174 .L0 
     /tmp/ccRqyiOg.s:425    .text:0000000000000178 .L0 
     /tmp/ccRqyiOg.s:429    .text:000000000000017c .L0 
     /tmp/ccRqyiOg.s:430    .text:000000000000017c .L0 
     /tmp/ccRqyiOg.s:1258   .text._ZN3TCB10getRunningEv:0000000000000000 _ZN3TCB10getRunningEv
     /tmp/ccRqyiOg.s:431    .text:000000000000017c .L0 
     /tmp/ccRqyiOg.s:1173   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000000 _ZN3TCB9setStatusENS_12ThreadStatusE
     /tmp/ccRqyiOg.s:439    .text:0000000000000198 .L0 
     /tmp/ccRqyiOg.s:440    .text:0000000000000198 .L0 
     /tmp/ccRqyiOg.s:443    .text:00000000000001a0 .L0 
src/interruptRoutine.cpp:71     .text:00000000000001a0 .L0 
     /tmp/ccRqyiOg.s:449    .text:00000000000001a4 .L0 
src/interruptRoutine.cpp:72     .text:00000000000001a4 .L0 
     /tmp/ccRqyiOg.s:454    .text:00000000000001a8 .L0 
     /tmp/ccRqyiOg.s:456    .text:00000000000001a8 .L0 
     /tmp/ccRqyiOg.s:459    .text:00000000000001b0 .L0 
     /tmp/ccRqyiOg.s:463    .text:00000000000001b4 .L0 
     /tmp/ccRqyiOg.s:464    .text:00000000000001b4 .L0 
     /tmp/ccRqyiOg.s:465    .text:00000000000001b4 .L0 
     /tmp/ccRqyiOg.s:468    .text:00000000000001bc .L0 
     /tmp/ccRqyiOg.s:472    .text:00000000000001c0 .L0 
GAS LISTING /tmp/ccRqyiOg.s 			page 37


     /tmp/ccRqyiOg.s:473    .text:00000000000001c0 .L0 
     /tmp/ccRqyiOg.s:474    .text:00000000000001c0 .L0 
     /tmp/ccRqyiOg.s:479    .text:00000000000001d0 .L0 
     /tmp/ccRqyiOg.s:480    .text:00000000000001d0 .L0 
     /tmp/ccRqyiOg.s:483    .text:00000000000001d8 .L0 
     /tmp/ccRqyiOg.s:487    .text:00000000000001dc .L0 
     /tmp/ccRqyiOg.s:488    .text:00000000000001dc .L0 
     /tmp/ccRqyiOg.s:489    .text:00000000000001dc .L0 
     /tmp/ccRqyiOg.s:492    .text:00000000000001e4 .L0 
     /tmp/ccRqyiOg.s:494    .text:00000000000001e8 .L0 
     /tmp/ccRqyiOg.s:499    .text:00000000000001f8 .L0 
     /tmp/ccRqyiOg.s:501    .text:00000000000001fc .L0 
     /tmp/ccRqyiOg.s:502    .text:00000000000001fc .L0 
     /tmp/ccRqyiOg.s:505    .text:0000000000000204 .L0 
     /tmp/ccRqyiOg.s:507    .text:0000000000000208 .L0 
src/interruptRoutine.cpp:90     .text:0000000000000208 .L0 
     /tmp/ccRqyiOg.s:516    .text:0000000000000210 .L0 
src/interruptRoutine.cpp:92     .text:0000000000000210 .L0 
     /tmp/ccRqyiOg.s:524    .text:0000000000000214 .L0 
src/interruptRoutine.cpp:94     .text:0000000000000214 .L0 
     /tmp/ccRqyiOg.s:531    .text:0000000000000218 .L0 
     /tmp/ccRqyiOg.s:535    .text:000000000000021c .L0 
     /tmp/ccRqyiOg.s:536    .text:000000000000021c .L0 
     /tmp/ccRqyiOg.s:537    .text:000000000000021c .L0 
     /tmp/ccRqyiOg.s:542    .text:000000000000022c .L0 
src/interruptRoutine.cpp:100    .text:000000000000022c .L0 
     /tmp/ccRqyiOg.s:548    .text:0000000000000230 .L0 
     /tmp/ccRqyiOg.s:550    .text:0000000000000230 .L0 
     /tmp/ccRqyiOg.s:552    .text:0000000000000234 .L0 
     /tmp/ccRqyiOg.s:554    .text:0000000000000238 .L0 
     /tmp/ccRqyiOg.s:561    .text:0000000000000250 .L0 
     /tmp/ccRqyiOg.s:565    .text:0000000000000254 .L0 
     /tmp/ccRqyiOg.s:566    .text:0000000000000254 .L0 
     /tmp/ccRqyiOg.s:567    .text:0000000000000254 .L0 
     /tmp/ccRqyiOg.s:572    .text:0000000000000264 .L0 
src/interruptRoutine.cpp:107    .text:0000000000000264 .L0 
     /tmp/ccRqyiOg.s:579    .text:0000000000000268 .L0 
     /tmp/ccRqyiOg.s:583    .text:000000000000026c .L0 
     /tmp/ccRqyiOg.s:584    .text:000000000000026c .L0 
     /tmp/ccRqyiOg.s:585    .text:000000000000026c .L0 
     /tmp/ccRqyiOg.s:590    .text:000000000000027c .L0 
src/interruptRoutine.cpp:113    .text:000000000000027c .L0 
     /tmp/ccRqyiOg.s:597    .text:0000000000000280 .L0 
     /tmp/ccRqyiOg.s:601    .text:0000000000000284 .L0 
     /tmp/ccRqyiOg.s:602    .text:0000000000000284 .L0 
     /tmp/ccRqyiOg.s:605    .text:000000000000028c .L0 
src/interruptRoutine.cpp:119    .text:000000000000028c .L0 
     /tmp/ccRqyiOg.s:614    .text:0000000000000294 .L0 
src/interruptRoutine.cpp:121    .text:0000000000000294 .L0 
     /tmp/ccRqyiOg.s:622    .text:0000000000000298 .L0 
src/interruptRoutine.cpp:123    .text:0000000000000298 .L0 
     /tmp/ccRqyiOg.s:629    .text:000000000000029c .L0 
     /tmp/ccRqyiOg.s:632    .text:00000000000002a4 .L0 
     /tmp/ccRqyiOg.s:633    .text:00000000000002a4 .L0 
     /tmp/ccRqyiOg.s:641    .text:00000000000002c0 .L0 
     /tmp/ccRqyiOg.s:642    .text:00000000000002c0 .L0 
     /tmp/ccRqyiOg.s:645    .text:00000000000002c8 .L0 
GAS LISTING /tmp/ccRqyiOg.s 			page 38


     /tmp/ccRqyiOg.s:649    .text:00000000000002cc .L0 
     /tmp/ccRqyiOg.s:650    .text:00000000000002cc .L0 
     /tmp/ccRqyiOg.s:651    .text:00000000000002cc .L0 
     /tmp/ccRqyiOg.s:654    .text:00000000000002d4 .L0 
src/interruptRoutine.cpp:132    .text:00000000000002d4 .L0 
     /tmp/ccRqyiOg.s:661    .text:00000000000002d8 .L0 
     /tmp/ccRqyiOg.s:665    .text:00000000000002dc .L0 
     /tmp/ccRqyiOg.s:666    .text:00000000000002dc .L0 
     /tmp/ccRqyiOg.s:667    .text:00000000000002dc .L0 
     /tmp/ccRqyiOg.s:673    .text:00000000000002f0 .L0 
     /tmp/ccRqyiOg.s:677    .text:00000000000002f4 .L0 
     /tmp/ccRqyiOg.s:678    .text:00000000000002f4 .L0 
     /tmp/ccRqyiOg.s:679    .text:00000000000002f4 .L0 
     /tmp/ccRqyiOg.s:683    .text:0000000000000300 .L0 
     /tmp/ccRqyiOg.s:685    .text:0000000000000304 .L0 
     /tmp/ccRqyiOg.s:692    .text:000000000000031c .L0 
     /tmp/ccRqyiOg.s:694    .text:0000000000000320 .L0 
     /tmp/ccRqyiOg.s:695    .text:0000000000000320 .L0 
     /tmp/ccRqyiOg.s:698    .text:0000000000000328 .L0 
     /tmp/ccRqyiOg.s:700    .text:000000000000032c .L0 
src/interruptRoutine.cpp:147    .text:000000000000032c .L0 
     /tmp/ccRqyiOg.s:709    .text:0000000000000334 .L0 
src/interruptRoutine.cpp:149    .text:0000000000000334 .L0 
     /tmp/ccRqyiOg.s:717    .text:0000000000000338 .L0 
src/interruptRoutine.cpp:151    .text:0000000000000338 .L0 
     /tmp/ccRqyiOg.s:724    .text:000000000000033c .L0 
     /tmp/ccRqyiOg.s:728    .text:0000000000000340 .L0 
     /tmp/ccRqyiOg.s:729    .text:0000000000000340 .L0 
     /tmp/ccRqyiOg.s:730    .text:0000000000000340 .L0 
     /tmp/ccRqyiOg.s:1230   .text._ZN3TCB7getBodyEv:0000000000000000 _ZN3TCB7getBodyEv
     /tmp/ccRqyiOg.s:736    .text:0000000000000354 .L0 
     /tmp/ccRqyiOg.s:741    .text:0000000000000368 .L0 
     /tmp/ccRqyiOg.s:743    .text:000000000000036c .L0 
     /tmp/ccRqyiOg.s:744    .text:000000000000036c .L0 
     /tmp/ccRqyiOg.s:749    .text:000000000000037c .L0 
     /tmp/ccRqyiOg.s:753    .text:0000000000000380 .L0 
     /tmp/ccRqyiOg.s:754    .text:0000000000000380 .L0 
     /tmp/ccRqyiOg.s:755    .text:0000000000000380 .L0 
     /tmp/ccRqyiOg.s:759    .text:0000000000000390 .L0 
     /tmp/ccRqyiOg.s:760    .text:0000000000000390 .L0 
     /tmp/ccRqyiOg.s:768    .text:00000000000003ac .L0 
     /tmp/ccRqyiOg.s:769    .text:00000000000003ac .L0 
     /tmp/ccRqyiOg.s:773    .text:00000000000003bc .L0 
     /tmp/ccRqyiOg.s:774    .text:00000000000003bc .L0 
     /tmp/ccRqyiOg.s:782    .text:00000000000003d8 .L0 
     /tmp/ccRqyiOg.s:783    .text:00000000000003d8 .L0 
     /tmp/ccRqyiOg.s:787    .text:00000000000003e8 .L0 
     /tmp/ccRqyiOg.s:788    .text:00000000000003e8 .L0 
     /tmp/ccRqyiOg.s:796    .text:0000000000000404 .L0 
     /tmp/ccRqyiOg.s:799    .text:0000000000000408 .L0 
     /tmp/ccRqyiOg.s:803    .text:0000000000000410 .L0 
     /tmp/ccRqyiOg.s:807    .text:0000000000000418 .L0 
     /tmp/ccRqyiOg.s:810    .text:000000000000041c .L0 
     /tmp/ccRqyiOg.s:811    .text:000000000000041c .L0 
     /tmp/ccRqyiOg.s:816    .text:0000000000000428 .L0 
     /tmp/ccRqyiOg.s:817    .text:0000000000000428 .L0 
     /tmp/ccRqyiOg.s:823    .text:0000000000000430 .L0 
GAS LISTING /tmp/ccRqyiOg.s 			page 39


     /tmp/ccRqyiOg.s:825    .text:0000000000000430 .L0 
     /tmp/ccRqyiOg.s:834    .text:0000000000000438 .L0 
     /tmp/ccRqyiOg.s:841    .text:000000000000043c .L0 
     /tmp/ccRqyiOg.s:849    .text:0000000000000450 .L0 
     /tmp/ccRqyiOg.s:850    .text:0000000000000450 .L0 
     /tmp/ccRqyiOg.s:854    .text:000000000000045c .L0 
     /tmp/ccRqyiOg.s:857    .text:0000000000000460 .L0 
     /tmp/ccRqyiOg.s:861    .text:000000000000046c .L0 
     /tmp/ccRqyiOg.s:1114   .text._ZN8KConsole10getSRvalueEv:0000000000000000 _ZN8KConsole10getSRvalueEv
     /tmp/ccRqyiOg.s:862    .text:000000000000046c .L0 
     /tmp/ccRqyiOg.s:866    .text:0000000000000478 .L0 
     /tmp/ccRqyiOg.s:868    .text:000000000000047c .L0 
     /tmp/ccRqyiOg.s:871    .text:0000000000000484 .L0 
     /tmp/ccRqyiOg.s:873    .text:0000000000000488 .L0 
     /tmp/ccRqyiOg.s:1144   .text._ZN8KConsole10getDRvalueEv:0000000000000000 _ZN8KConsole10getDRvalueEv
     /tmp/ccRqyiOg.s:874    .text:0000000000000488 .L0 
     /tmp/ccRqyiOg.s:878    .text:0000000000000494 .L0 
     /tmp/ccRqyiOg.s:885    .text:00000000000004a4 .L0 
     /tmp/ccRqyiOg.s:886    .text:00000000000004a4 .L0 
     /tmp/ccRqyiOg.s:892    .text:00000000000004b4 .L0 
     /tmp/ccRqyiOg.s:893    .text:00000000000004b4 .L0 
     /tmp/ccRqyiOg.s:899    .text:00000000000004c8 .L0 
     /tmp/ccRqyiOg.s:900    .text:00000000000004c8 .L0 
     /tmp/ccRqyiOg.s:906    .text:00000000000004d0 .L0 
     /tmp/ccRqyiOg.s:908    .text:00000000000004d0 .L0 
     /tmp/ccRqyiOg.s:914    .text:00000000000004d8 .L0 
     /tmp/ccRqyiOg.s:916    .text:00000000000004d8 .L0 
     /tmp/ccRqyiOg.s:1081   .text._ZN5Riscv6mc_sipEm:0000000000000000 _ZN5Riscv6mc_sipEm
     /tmp/ccRqyiOg.s:924    .text:00000000000004e4 .L0 
     /tmp/ccRqyiOg.s:931    .text:00000000000004e8 .L0 
     /tmp/ccRqyiOg.s:937    .text:00000000000004fc .L0 
     /tmp/ccRqyiOg.s:938    .text:00000000000004fc .L0 
     /tmp/ccRqyiOg.s:941    .text:0000000000000504 .L0 
     /tmp/ccRqyiOg.s:1285   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000000 _ZN3TCB19getRunningTimeSliceEv
     /tmp/ccRqyiOg.s:942    .text:0000000000000504 .L0 
     /tmp/ccRqyiOg.s:946    .text:0000000000000510 .L0 
     /tmp/ccRqyiOg.s:948    .text:0000000000000514 .L0 
     /tmp/ccRqyiOg.s:951    .text:000000000000051c .L0 
     /tmp/ccRqyiOg.s:952    .text:000000000000051c .L0 
     /tmp/ccRqyiOg.s:956    .text:0000000000000528 .L0 
     /tmp/ccRqyiOg.s:958    .text:000000000000052c .L0 
     /tmp/ccRqyiOg.s:1202   .text._ZN3TCB12getTimeSliceEv:0000000000000000 _ZN3TCB12getTimeSliceEv
     /tmp/ccRqyiOg.s:966    .text:0000000000000548 .L0 
     /tmp/ccRqyiOg.s:970    .text:0000000000000554 .L0 
     /tmp/ccRqyiOg.s:972    .text:0000000000000558 .L0 
     /tmp/ccRqyiOg.s:973    .text:0000000000000558 .L0 
     /tmp/ccRqyiOg.s:977    .text:0000000000000560 .L0 
     /tmp/ccRqyiOg.s:978    .text:0000000000000560 .L0 
     /tmp/ccRqyiOg.s:984    .text:0000000000000568 .L0 
     /tmp/ccRqyiOg.s:986    .text:0000000000000568 .L0 
     /tmp/ccRqyiOg.s:992    .text:0000000000000570 .L0 
     /tmp/ccRqyiOg.s:994    .text:0000000000000570 .L0 
     /tmp/ccRqyiOg.s:1001   .text:000000000000057c .L0 
     /tmp/ccRqyiOg.s:1008   .text:0000000000000580 .L0 
     /tmp/ccRqyiOg.s:1009   .text:0000000000000580 .L0 
     /tmp/ccRqyiOg.s:1013   .text:0000000000000590 .L0 
     /tmp/ccRqyiOg.s:1014   .text:0000000000000590 .L0 
GAS LISTING /tmp/ccRqyiOg.s 			page 40


     /tmp/ccRqyiOg.s:1018   .text:00000000000005a0 .L0 
     /tmp/ccRqyiOg.s:1019   .text:00000000000005a0 .L0 
     /tmp/ccRqyiOg.s:1027   .text:00000000000005bc .L0 
     /tmp/ccRqyiOg.s:1028   .text:00000000000005bc .L0 
     /tmp/ccRqyiOg.s:1032   .text:00000000000005cc .L0 
     /tmp/ccRqyiOg.s:1033   .text:00000000000005cc .L0 
     /tmp/ccRqyiOg.s:1041   .text:00000000000005e8 .L0 
     /tmp/ccRqyiOg.s:1042   .text:00000000000005e8 .L0 
     /tmp/ccRqyiOg.s:1048   .text:00000000000005f0 .L0 
     /tmp/ccRqyiOg.s:1050   .text:00000000000005f0 .L0 
     /tmp/ccRqyiOg.s:1061   .text:00000000000005f8 .L0 
     /tmp/ccRqyiOg.s:1063   .text:0000000000000600 .L0 
     /tmp/ccRqyiOg.s:1065   .text:0000000000000604 .L0 
     /tmp/ccRqyiOg.s:1066   .text:0000000000000604 .L0 
     /tmp/ccRqyiOg.s:1069   .text:0000000000000608 .L0 
     /tmp/ccRqyiOg.s:1071   .text:000000000000060c .L0 
     /tmp/ccRqyiOg.s:1074   .text:0000000000000610 .L0 
     /tmp/ccRqyiOg.s:1085   .text._ZN5Riscv6mc_sipEm:0000000000000000 .L0 
     /tmp/ccRqyiOg.s:1087   .text._ZN5Riscv6mc_sipEm:0000000000000000 .L0 
     /tmp/ccRqyiOg.s:1088   .text._ZN5Riscv6mc_sipEm:0000000000000004 .L0 
     /tmp/ccRqyiOg.s:1090   .text._ZN5Riscv6mc_sipEm:0000000000000008 .L0 
     /tmp/ccRqyiOg.s:1092   .text._ZN5Riscv6mc_sipEm:000000000000000c .L0 
     /tmp/ccRqyiOg.s:1094   .text._ZN5Riscv6mc_sipEm:000000000000000c .L0 
  src/../h/Riscv.hpp:117    .text._ZN5Riscv6mc_sipEm:000000000000000c .L0 
     /tmp/ccRqyiOg.s:1101   .text._ZN5Riscv6mc_sipEm:0000000000000010 .L0 
     /tmp/ccRqyiOg.s:1102   .text._ZN5Riscv6mc_sipEm:0000000000000014 .L0 
     /tmp/ccRqyiOg.s:1103   .text._ZN5Riscv6mc_sipEm:0000000000000014 .L0 
     /tmp/ccRqyiOg.s:1105   .text._ZN5Riscv6mc_sipEm:0000000000000018 .L0 
     /tmp/ccRqyiOg.s:1107   .text._ZN5Riscv6mc_sipEm:000000000000001c .L0 
     /tmp/ccRqyiOg.s:1118   .text._ZN8KConsole10getSRvalueEv:0000000000000000 .L0 
     /tmp/ccRqyiOg.s:1119   .text._ZN8KConsole10getSRvalueEv:0000000000000000 .L0 
     /tmp/ccRqyiOg.s:1120   .text._ZN8KConsole10getSRvalueEv:0000000000000004 .L0 
     /tmp/ccRqyiOg.s:1122   .text._ZN8KConsole10getSRvalueEv:0000000000000008 .L0 
     /tmp/ccRqyiOg.s:1124   .text._ZN8KConsole10getSRvalueEv:000000000000000c .L0 
     /tmp/ccRqyiOg.s:1126   .text._ZN8KConsole10getSRvalueEv:000000000000000c .L0 
     /tmp/ccRqyiOg.s:1127   .text._ZN8KConsole10getSRvalueEv:000000000000000c .L0 
     /tmp/ccRqyiOg.s:1130   .text._ZN8KConsole10getSRvalueEv:0000000000000018 .L0 
     /tmp/ccRqyiOg.s:1132   .text._ZN8KConsole10getSRvalueEv:0000000000000020 .L0 
     /tmp/ccRqyiOg.s:1133   .text._ZN8KConsole10getSRvalueEv:0000000000000020 .L0 
     /tmp/ccRqyiOg.s:1135   .text._ZN8KConsole10getSRvalueEv:0000000000000024 .L0 
     /tmp/ccRqyiOg.s:1137   .text._ZN8KConsole10getSRvalueEv:0000000000000028 .L0 
     /tmp/ccRqyiOg.s:1147   .text._ZN8KConsole10getDRvalueEv:0000000000000000 .L0 
     /tmp/ccRqyiOg.s:1148   .text._ZN8KConsole10getDRvalueEv:0000000000000000 .L0 
     /tmp/ccRqyiOg.s:1149   .text._ZN8KConsole10getDRvalueEv:0000000000000004 .L0 
     /tmp/ccRqyiOg.s:1151   .text._ZN8KConsole10getDRvalueEv:0000000000000008 .L0 
     /tmp/ccRqyiOg.s:1153   .text._ZN8KConsole10getDRvalueEv:000000000000000c .L0 
     /tmp/ccRqyiOg.s:1155   .text._ZN8KConsole10getDRvalueEv:000000000000000c .L0 
     /tmp/ccRqyiOg.s:1156   .text._ZN8KConsole10getDRvalueEv:000000000000000c .L0 
     /tmp/ccRqyiOg.s:1159   .text._ZN8KConsole10getDRvalueEv:0000000000000018 .L0 
     /tmp/ccRqyiOg.s:1161   .text._ZN8KConsole10getDRvalueEv:0000000000000020 .L0 
     /tmp/ccRqyiOg.s:1162   .text._ZN8KConsole10getDRvalueEv:0000000000000020 .L0 
     /tmp/ccRqyiOg.s:1164   .text._ZN8KConsole10getDRvalueEv:0000000000000024 .L0 
     /tmp/ccRqyiOg.s:1166   .text._ZN8KConsole10getDRvalueEv:0000000000000028 .L0 
     /tmp/ccRqyiOg.s:1177   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000000 .L0 
     /tmp/ccRqyiOg.s:1179   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000000 .L0 
     /tmp/ccRqyiOg.s:1180   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000004 .L0 
     /tmp/ccRqyiOg.s:1182   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000008 .L0 
GAS LISTING /tmp/ccRqyiOg.s 			page 41


     /tmp/ccRqyiOg.s:1184   .text._ZN3TCB9setStatusENS_12ThreadStatusE:000000000000000c .L0 
     /tmp/ccRqyiOg.s:1186   .text._ZN3TCB9setStatusENS_12ThreadStatusE:000000000000000c .L0 
     /tmp/ccRqyiOg.s:1187   .text._ZN3TCB9setStatusENS_12ThreadStatusE:000000000000000c .L0 
     /tmp/ccRqyiOg.s:1189   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000010 .L0 
     /tmp/ccRqyiOg.s:1190   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000014 .L0 
     /tmp/ccRqyiOg.s:1191   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000014 .L0 
     /tmp/ccRqyiOg.s:1193   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000018 .L0 
     /tmp/ccRqyiOg.s:1195   .text._ZN3TCB9setStatusENS_12ThreadStatusE:000000000000001c .L0 
     /tmp/ccRqyiOg.s:1205   .text._ZN3TCB12getTimeSliceEv:0000000000000000 .L0 
     /tmp/ccRqyiOg.s:1207   .text._ZN3TCB12getTimeSliceEv:0000000000000000 .L0 
     /tmp/ccRqyiOg.s:1208   .text._ZN3TCB12getTimeSliceEv:0000000000000004 .L0 
     /tmp/ccRqyiOg.s:1210   .text._ZN3TCB12getTimeSliceEv:0000000000000008 .L0 
     /tmp/ccRqyiOg.s:1212   .text._ZN3TCB12getTimeSliceEv:000000000000000c .L0 
     /tmp/ccRqyiOg.s:1214   .text._ZN3TCB12getTimeSliceEv:000000000000000c .L0 
     /tmp/ccRqyiOg.s:1215   .text._ZN3TCB12getTimeSliceEv:000000000000000c .L0 
     /tmp/ccRqyiOg.s:1218   .text._ZN3TCB12getTimeSliceEv:0000000000000014 .L0 
     /tmp/ccRqyiOg.s:1219   .text._ZN3TCB12getTimeSliceEv:0000000000000014 .L0 
     /tmp/ccRqyiOg.s:1221   .text._ZN3TCB12getTimeSliceEv:0000000000000018 .L0 
     /tmp/ccRqyiOg.s:1223   .text._ZN3TCB12getTimeSliceEv:000000000000001c .L0 
     /tmp/ccRqyiOg.s:1233   .text._ZN3TCB7getBodyEv:0000000000000000 .L0 
     /tmp/ccRqyiOg.s:1235   .text._ZN3TCB7getBodyEv:0000000000000000 .L0 
     /tmp/ccRqyiOg.s:1236   .text._ZN3TCB7getBodyEv:0000000000000004 .L0 
     /tmp/ccRqyiOg.s:1238   .text._ZN3TCB7getBodyEv:0000000000000008 .L0 
     /tmp/ccRqyiOg.s:1240   .text._ZN3TCB7getBodyEv:000000000000000c .L0 
     /tmp/ccRqyiOg.s:1242   .text._ZN3TCB7getBodyEv:000000000000000c .L0 
     /tmp/ccRqyiOg.s:1243   .text._ZN3TCB7getBodyEv:000000000000000c .L0 
     /tmp/ccRqyiOg.s:1246   .text._ZN3TCB7getBodyEv:0000000000000014 .L0 
     /tmp/ccRqyiOg.s:1247   .text._ZN3TCB7getBodyEv:0000000000000014 .L0 
     /tmp/ccRqyiOg.s:1249   .text._ZN3TCB7getBodyEv:0000000000000018 .L0 
     /tmp/ccRqyiOg.s:1251   .text._ZN3TCB7getBodyEv:000000000000001c .L0 
     /tmp/ccRqyiOg.s:1261   .text._ZN3TCB10getRunningEv:0000000000000000 .L0 
     /tmp/ccRqyiOg.s:1262   .text._ZN3TCB10getRunningEv:0000000000000000 .L0 
     /tmp/ccRqyiOg.s:1263   .text._ZN3TCB10getRunningEv:0000000000000004 .L0 
     /tmp/ccRqyiOg.s:1265   .text._ZN3TCB10getRunningEv:0000000000000008 .L0 
     /tmp/ccRqyiOg.s:1267   .text._ZN3TCB10getRunningEv:000000000000000c .L0 
     /tmp/ccRqyiOg.s:1269   .text._ZN3TCB10getRunningEv:000000000000000c .L0 
     /tmp/ccRqyiOg.s:1270   .text._ZN3TCB10getRunningEv:000000000000000c .L0 
     /tmp/ccRqyiOg.s:1273   .text._ZN3TCB10getRunningEv:000000000000001c .L0 
     /tmp/ccRqyiOg.s:1274   .text._ZN3TCB10getRunningEv:000000000000001c .L0 
     /tmp/ccRqyiOg.s:1276   .text._ZN3TCB10getRunningEv:0000000000000020 .L0 
     /tmp/ccRqyiOg.s:1278   .text._ZN3TCB10getRunningEv:0000000000000024 .L0 
     /tmp/ccRqyiOg.s:1288   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000000 .L0 
     /tmp/ccRqyiOg.s:1289   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000000 .L0 
     /tmp/ccRqyiOg.s:1290   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000004 .L0 
     /tmp/ccRqyiOg.s:1292   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000008 .L0 
     /tmp/ccRqyiOg.s:1294   .text._ZN3TCB19getRunningTimeSliceEv:000000000000000c .L0 
     /tmp/ccRqyiOg.s:1296   .text._ZN3TCB19getRunningTimeSliceEv:000000000000000c .L0 
     /tmp/ccRqyiOg.s:1297   .text._ZN3TCB19getRunningTimeSliceEv:000000000000000c .L0 
     /tmp/ccRqyiOg.s:1299   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000018 .L0 
     /tmp/ccRqyiOg.s:1300   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000018 .L0 
     /tmp/ccRqyiOg.s:1302   .text._ZN3TCB19getRunningTimeSliceEv:000000000000001c .L0 
     /tmp/ccRqyiOg.s:1304   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000020 .L0 
     /tmp/ccRqyiOg.s:97     .text._ZN4KSemD2Ev:000000000000004c .L0 
     /tmp/ccRqyiOg.s:1314   .text:0000000000000610 .L0 
     /tmp/ccRqyiOg.s:1110   .text._ZN5Riscv6mc_sipEm:000000000000001c .L0 
     /tmp/ccRqyiOg.s:1140   .text._ZN8KConsole10getSRvalueEv:0000000000000028 .L0 
     /tmp/ccRqyiOg.s:1169   .text._ZN8KConsole10getDRvalueEv:0000000000000028 .L0 
GAS LISTING /tmp/ccRqyiOg.s 			page 42


     /tmp/ccRqyiOg.s:1198   .text._ZN3TCB9setStatusENS_12ThreadStatusE:000000000000001c .L0 
     /tmp/ccRqyiOg.s:1226   .text._ZN3TCB12getTimeSliceEv:000000000000001c .L0 
     /tmp/ccRqyiOg.s:1254   .text._ZN3TCB7getBodyEv:000000000000001c .L0 
     /tmp/ccRqyiOg.s:1281   .text._ZN3TCB10getRunningEv:0000000000000024 .L0 
     /tmp/ccRqyiOg.s:1307   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000020 .L0 
     /tmp/ccRqyiOg.s:253    .rodata:0000000000000074 .L13
     /tmp/ccRqyiOg.s:243    .text:00000000000000ac .L0 
     /tmp/ccRqyiOg.s:247    .text:00000000000000c0 .L0 
     /tmp/ccRqyiOg.s:390    .text:0000000000000148 .L0 
     /tmp/ccRqyiOg.s:736    .text:0000000000000354 .L0 
     /tmp/ccRqyiOg.s:99     .rodata:0000000000000000 .LC0
     /tmp/ccRqyiOg.s:755    .text:0000000000000380 .L0 
     /tmp/ccRqyiOg.s:102    .rodata:0000000000000018 .LC1
     /tmp/ccRqyiOg.s:769    .text:00000000000003ac .L0 
     /tmp/ccRqyiOg.s:105    .rodata:0000000000000028 .LC2
     /tmp/ccRqyiOg.s:783    .text:00000000000003d8 .L0 
     /tmp/ccRqyiOg.s:108    .rodata:0000000000000030 .LC3
     /tmp/ccRqyiOg.s:886    .text:00000000000004a4 .L0 
     /tmp/ccRqyiOg.s:111    .rodata:0000000000000048 .LC4
     /tmp/ccRqyiOg.s:1009   .text:0000000000000580 .L0 
     /tmp/ccRqyiOg.s:114    .rodata:0000000000000068 .LC5
     /tmp/ccRqyiOg.s:1014   .text:0000000000000590 .L0 
     /tmp/ccRqyiOg.s:1028   .text:00000000000005bc .L0 
     /tmp/ccRqyiOg.s:225    .text:000000000000006c .L7
     /tmp/ccRqyiOg.s:836    .text:000000000000043c .L8
     /tmp/ccRqyiOg.s:726    .text:0000000000000340 .L9
     /tmp/ccRqyiOg.s:751    .text:0000000000000380 .L10
     /tmp/ccRqyiOg.s:322    .text:00000000000000d0 .L11
     /tmp/ccRqyiOg.s:675    .text:00000000000002f4 .L26
     /tmp/ccRqyiOg.s:808    .text:000000000000041c .L27
     /tmp/ccRqyiOg.s:408    .text:0000000000000170 .L28
     /tmp/ccRqyiOg.s:399    .text:0000000000000168 .L29
     /tmp/ccRqyiOg.s:416    .text:0000000000000174 .L30
     /tmp/ccRqyiOg.s:514    .text:0000000000000210 .L31
     /tmp/ccRqyiOg.s:522    .text:0000000000000214 .L32
     /tmp/ccRqyiOg.s:797    .text:0000000000000408 .L46
     /tmp/ccRqyiOg.s:612    .text:0000000000000294 .L34
     /tmp/ccRqyiOg.s:620    .text:0000000000000298 .L35
     /tmp/ccRqyiOg.s:801    .text:0000000000000410 .L47
     /tmp/ccRqyiOg.s:707    .text:0000000000000334 .L37
     /tmp/ccRqyiOg.s:715    .text:0000000000000338 .L38
     /tmp/ccRqyiOg.s:805    .text:0000000000000418 .L48
     /tmp/ccRqyiOg.s:1056   .text:00000000000005f8 .L49
     /tmp/ccRqyiOg.s:926    .text:00000000000004e8 .L41
     /tmp/ccRqyiOg.s:883    .text:00000000000004a4 .L42
     /tmp/ccRqyiOg.s:890    .text:00000000000004b4 .L43
     /tmp/ccRqyiOg.s:1003   .text:0000000000000580 .L44
     /tmp/ccRqyiOg.s:975    .text:0000000000000560 .L45
     /tmp/ccRqyiOg.s:66     .text._ZN4KSemD2Ev:0000000000000038 .L1
     /tmp/ccRqyiOg.s:30     .text._ZN4KSemD2Ev:0000000000000018 .L3
     /tmp/ccRqyiOg.s:327    .text:00000000000000e0 .L25
     /tmp/ccRqyiOg.s:344    .text:00000000000000f4 .L24
     /tmp/ccRqyiOg.s:362    .text:000000000000010c .L23
     /tmp/ccRqyiOg.s:427    .text:000000000000017c .L22
     /tmp/ccRqyiOg.s:461    .text:00000000000001b4 .L21
     /tmp/ccRqyiOg.s:470    .text:00000000000001c0 .L20
     /tmp/ccRqyiOg.s:485    .text:00000000000001dc .L19
GAS LISTING /tmp/ccRqyiOg.s 			page 43


     /tmp/ccRqyiOg.s:533    .text:000000000000021c .L18
     /tmp/ccRqyiOg.s:563    .text:0000000000000254 .L17
     /tmp/ccRqyiOg.s:581    .text:000000000000026c .L16
     /tmp/ccRqyiOg.s:599    .text:0000000000000284 .L15
     /tmp/ccRqyiOg.s:647    .text:00000000000002cc .L14
     /tmp/ccRqyiOg.s:663    .text:00000000000002dc .L12
     /tmp/ccRqyiOg.s:1127   .text._ZN8KConsole10getSRvalueEv:000000000000000c .L0 
     /tmp/ccRqyiOg.s:1156   .text._ZN8KConsole10getDRvalueEv:000000000000000c .L0 
     /tmp/ccRqyiOg.s:1270   .text._ZN3TCB10getRunningEv:000000000000000c .L0 
     /tmp/ccRqyiOg.s:1297   .text._ZN3TCB19getRunningTimeSliceEv:000000000000000c .L0 
     /tmp/ccRqyiOg.s:3664   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccRqyiOg.s:5887   .debug_str:0000000000000b80 .LASF236
     /tmp/ccRqyiOg.s:5759   .debug_str:00000000000007e7 .LASF237
     /tmp/ccRqyiOg.s:5831   .debug_str:0000000000000a14 .LASF238
     /tmp/ccRqyiOg.s:5465   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccRqyiOg.s:5489   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccRqyiOg.s:5797   .debug_str:000000000000090d .LASF3
     /tmp/ccRqyiOg.s:5655   .debug_str:00000000000004dd .LASF0
     /tmp/ccRqyiOg.s:5683   .debug_str:000000000000059a .LASF1
     /tmp/ccRqyiOg.s:5809   .debug_str:0000000000000972 .LASF2
     /tmp/ccRqyiOg.s:5599   .debug_str:0000000000000310 .LASF4
     /tmp/ccRqyiOg.s:5825   .debug_str:00000000000009f3 .LASF5
     /tmp/ccRqyiOg.s:5667   .debug_str:0000000000000525 .LASF6
     /tmp/ccRqyiOg.s:5513   .debug_str:00000000000000a5 .LASF7
     /tmp/ccRqyiOg.s:5769   .debug_str:0000000000000844 .LASF8
     /tmp/ccRqyiOg.s:5757   .debug_str:00000000000007d4 .LASF9
     /tmp/ccRqyiOg.s:5673   .debug_str:0000000000000553 .LASF10
     /tmp/ccRqyiOg.s:5625   .debug_str:00000000000003eb .LASF11
     /tmp/ccRqyiOg.s:5639   .debug_str:0000000000000458 .LASF12
     /tmp/ccRqyiOg.s:5545   .debug_str:000000000000017c .LASF13
     /tmp/ccRqyiOg.s:5611   .debug_str:0000000000000388 .LASF14
     /tmp/ccRqyiOg.s:5563   .debug_str:00000000000001fb .LASF15
     /tmp/ccRqyiOg.s:5543   .debug_str:000000000000016c .LASF16
     /tmp/ccRqyiOg.s:5859   .debug_str:0000000000000ad7 .LASF17
     /tmp/ccRqyiOg.s:5595   .debug_str:00000000000002dc .LASF18
     /tmp/ccRqyiOg.s:5845   .debug_str:0000000000000a88 .LASF19
     /tmp/ccRqyiOg.s:5943   .debug_str:0000000000000dc0 .LASF51
     /tmp/ccRqyiOg.s:5793   .debug_str:00000000000008f8 .LASF72
     /tmp/ccRqyiOg.s:5689   .debug_str:00000000000005c0 .LASF20
     /tmp/ccRqyiOg.s:5519   .debug_str:00000000000000ca .LASF21
     /tmp/ccRqyiOg.s:5959   .debug_str:0000000000000e33 .LASF22
     /tmp/ccRqyiOg.s:5713   .debug_str:0000000000000669 .LASF53
     /tmp/ccRqyiOg.s:5921   .debug_str:0000000000000d33 .LASF55
     /tmp/ccRqyiOg.s:5919   .debug_str:0000000000000d2a .LASF23
     /tmp/ccRqyiOg.s:5909   .debug_str:0000000000000cc9 .LASF25
     /tmp/ccRqyiOg.s:5805   .debug_str:000000000000095e .LASF27
     /tmp/ccRqyiOg.s:5743   .debug_str:000000000000075e .LASF29
     /tmp/ccRqyiOg.s:5779   .debug_str:0000000000000883 .LASF24
     /tmp/ccRqyiOg.s:5787   .debug_str:00000000000008bc .LASF26
     /tmp/ccRqyiOg.s:5731   .debug_str:0000000000000702 .LASF28
     /tmp/ccRqyiOg.s:5675   .debug_str:0000000000000566 .LASF30
     /tmp/ccRqyiOg.s:5957   .debug_str:0000000000000e2b .LASF31
     /tmp/ccRqyiOg.s:5891   .debug_str:0000000000000c49 .LASF32
     /tmp/ccRqyiOg.s:5725   .debug_str:00000000000006df .LASF33
     /tmp/ccRqyiOg.s:5741   .debug_str:000000000000074a .LASF34
     /tmp/ccRqyiOg.s:5855   .debug_str:0000000000000ac3 .LASF35
     /tmp/ccRqyiOg.s:5827   .debug_str:00000000000009fa .LASF36
GAS LISTING /tmp/ccRqyiOg.s 			page 44


     /tmp/ccRqyiOg.s:5829   .debug_str:0000000000000a0d .LASF37
     /tmp/ccRqyiOg.s:5553   .debug_str:00000000000001a8 .LASF38
     /tmp/ccRqyiOg.s:5591   .debug_str:00000000000002c9 .LASF39
     /tmp/ccRqyiOg.s:5647   .debug_str:00000000000004b0 .LASF40
     /tmp/ccRqyiOg.s:5661   .debug_str:0000000000000509 .LASF41
     /tmp/ccRqyiOg.s:5577   .debug_str:0000000000000282 .LASF42
     /tmp/ccRqyiOg.s:5515   .debug_str:00000000000000ac .LASF43
     /tmp/ccRqyiOg.s:5813   .debug_str:000000000000098a .LASF44
     /tmp/ccRqyiOg.s:5807   .debug_str:0000000000000967 .LASF45
     /tmp/ccRqyiOg.s:5979   .debug_str:0000000000000ed4 .LASF46
     /tmp/ccRqyiOg.s:5945   .debug_str:0000000000000dc6 .LASF47
     /tmp/ccRqyiOg.s:5961   .debug_str:0000000000000e3c .LASF48
     /tmp/ccRqyiOg.s:5939   .debug_str:0000000000000da0 .LASF49
     /tmp/ccRqyiOg.s:5711   .debug_str:0000000000000653 .LASF50
     /tmp/ccRqyiOg.s:5899   .debug_str:0000000000000c8c .LASF66
     /tmp/ccRqyiOg.s:5569   .debug_str:000000000000023b .LASF68
     /tmp/ccRqyiOg.s:5603   .debug_str:0000000000000332 .LASF52
     /tmp/ccRqyiOg.s:5537   .debug_str:000000000000013c .LASF54
     /tmp/ccRqyiOg.s:5781   .debug_str:000000000000088a .LASF56
     /tmp/ccRqyiOg.s:5615   .debug_str:00000000000003af .LASF57
     /tmp/ccRqyiOg.s:5629   .debug_str:0000000000000401 .LASF59
     /tmp/ccRqyiOg.s:5619   .debug_str:00000000000003bc .LASF58
     /tmp/ccRqyiOg.s:5659   .debug_str:00000000000004f4 .LASF60
     /tmp/ccRqyiOg.s:5651   .debug_str:00000000000004cb .LASF61
     /tmp/ccRqyiOg.s:5707   .debug_str:000000000000063a .LASF62
     /tmp/ccRqyiOg.s:5815   .debug_str:00000000000009a2 .LASF63
     /tmp/ccRqyiOg.s:5785   .debug_str:00000000000008b2 .LASF64
     /tmp/ccRqyiOg.s:5763   .debug_str:0000000000000806 .LASF65
     /tmp/ccRqyiOg.s:5751   .debug_str:00000000000007a2 .LASF67
     /tmp/ccRqyiOg.s:5923   .debug_str:0000000000000d54 .LASF69
     /tmp/ccRqyiOg.s:5703   .debug_str:0000000000000623 .LASF70
     /tmp/ccRqyiOg.s:5937   .debug_str:0000000000000d97 .LASF71
     /tmp/ccRqyiOg.s:5839   .debug_str:0000000000000a57 .LASF73
     /tmp/ccRqyiOg.s:5777   .debug_str:000000000000087b .LASF74
     /tmp/ccRqyiOg.s:5575   .debug_str:000000000000027b .LASF75
     /tmp/ccRqyiOg.s:5495   .debug_str:0000000000000026 .LASF76
     /tmp/ccRqyiOg.s:5631   .debug_str:0000000000000417 .LASF77
     /tmp/ccRqyiOg.s:5679   .debug_str:0000000000000589 .LASF78
     /tmp/ccRqyiOg.s:5535   .debug_str:0000000000000133 .LASF79
     /tmp/ccRqyiOg.s:5869   .debug_str:0000000000000b07 .LASF149
     /tmp/ccRqyiOg.s:5549   .debug_str:0000000000000190 .LASF80
     /tmp/ccRqyiOg.s:5641   .debug_str:0000000000000466 .LASF81
     /tmp/ccRqyiOg.s:5795   .debug_str:0000000000000903 .LASF86
     /tmp/ccRqyiOg.s:5699   .debug_str:0000000000000604 .LASF88
     /tmp/ccRqyiOg.s:5857   .debug_str:0000000000000aca .LASF82
     /tmp/ccRqyiOg.s:5955   .debug_str:0000000000000e09 .LASF83
     /tmp/ccRqyiOg.s:5749   .debug_str:000000000000079d .LASF239
     /tmp/ccRqyiOg.s:5969   .debug_str:0000000000000e86 .LASF84
     /tmp/ccRqyiOg.s:5669   .debug_str:0000000000000537 .LASF85
     /tmp/ccRqyiOg.s:5709   .debug_str:0000000000000646 .LASF87
     /tmp/ccRqyiOg.s:5791   .debug_str:00000000000008e0 .LASF89
     /tmp/ccRqyiOg.s:5581   .debug_str:000000000000029d .LASF90
     /tmp/ccRqyiOg.s:5821   .debug_str:00000000000009cd .LASF91
     /tmp/ccRqyiOg.s:5783   .debug_str:00000000000008aa .LASF92
     /tmp/ccRqyiOg.s:5705   .debug_str:0000000000000628 .LASF93
     /tmp/ccRqyiOg.s:5587   .debug_str:00000000000002b8 .LASF94
     /tmp/ccRqyiOg.s:5843   .debug_str:0000000000000a72 .LASF95
GAS LISTING /tmp/ccRqyiOg.s 			page 45


     /tmp/ccRqyiOg.s:5499   .debug_str:0000000000000037 .LASF96
     /tmp/ccRqyiOg.s:5877   .debug_str:0000000000000b2e .LASF97
     /tmp/ccRqyiOg.s:5917   .debug_str:0000000000000d16 .LASF98
     /tmp/ccRqyiOg.s:5745   .debug_str:0000000000000773 .LASF99
     /tmp/ccRqyiOg.s:5915   .debug_str:0000000000000d0b .LASF100
     /tmp/ccRqyiOg.s:5613   .debug_str:0000000000000397 .LASF101
     /tmp/ccRqyiOg.s:5983   .debug_str:0000000000000ef9 .LASF102
     /tmp/ccRqyiOg.s:5607   .debug_str:0000000000000347 .LASF103
     /tmp/ccRqyiOg.s:5583   .debug_str:00000000000002aa .LASF104
     /tmp/ccRqyiOg.s:5555   .debug_str:00000000000001bb .LASF105
     /tmp/ccRqyiOg.s:5929   .debug_str:0000000000000d7e .LASF106
     /tmp/ccRqyiOg.s:5521   .debug_str:00000000000000d3 .LASF107
     /tmp/ccRqyiOg.s:5981   .debug_str:0000000000000eec .LASF108
     /tmp/ccRqyiOg.s:5635   .debug_str:0000000000000437 .LASF109
     /tmp/ccRqyiOg.s:5501   .debug_str:0000000000000042 .LASF110
     /tmp/ccRqyiOg.s:5739   .debug_str:000000000000073d .LASF111
     /tmp/ccRqyiOg.s:5967   .debug_str:0000000000000e70 .LASF212
     /tmp/ccRqyiOg.s:5907   .debug_str:0000000000000cc1 .LASF112
     /tmp/ccRqyiOg.s:5541   .debug_str:000000000000015d .LASF113
     /tmp/ccRqyiOg.s:5975   .debug_str:0000000000000ead .LASF114
     /tmp/ccRqyiOg.s:5865   .debug_str:0000000000000af7 .LASF115
     /tmp/ccRqyiOg.s:5893   .debug_str:0000000000000c5d .LASF116
     /tmp/ccRqyiOg.s:5885   .debug_str:0000000000000b70 .LASF117
     /tmp/ccRqyiOg.s:5753   .debug_str:00000000000007aa .LASF118
     /tmp/ccRqyiOg.s:5605   .debug_str:000000000000033a .LASF119
     /tmp/ccRqyiOg.s:5823   .debug_str:00000000000009e5 .LASF120
     /tmp/ccRqyiOg.s:5933   .debug_str:0000000000000d8b .LASF121
     /tmp/ccRqyiOg.s:5883   .debug_str:0000000000000b68 .LASF122
     /tmp/ccRqyiOg.s:5789   .debug_str:00000000000008cf .LASF123
     /tmp/ccRqyiOg.s:5571   .debug_str:0000000000000253 .LASF146
     /tmp/ccRqyiOg.s:5505   .debug_str:000000000000005a .LASF155
     /tmp/ccRqyiOg.s:5627   .debug_str:00000000000003fb .LASF124
     /tmp/ccRqyiOg.s:5847   .debug_str:0000000000000a9e .LASF125
     /tmp/ccRqyiOg.s:5681   .debug_str:0000000000000592 .LASF126
     /tmp/ccRqyiOg.s:5737   .debug_str:000000000000072a .LASF127
     /tmp/ccRqyiOg.s:5585   .debug_str:00000000000002b3 .LASF128
     /tmp/ccRqyiOg.s:5539   .debug_str:000000000000014d .LASF129
     /tmp/ccRqyiOg.s:5863   .debug_str:0000000000000af0 .LASF130
     /tmp/ccRqyiOg.s:5531   .debug_str:0000000000000118 .LASF131
     /tmp/ccRqyiOg.s:5579   .debug_str:0000000000000294 .LASF132
     /tmp/ccRqyiOg.s:5729   .debug_str:00000000000006ec .LASF133
     /tmp/ccRqyiOg.s:5593   .debug_str:00000000000002cf .LASF134
     /tmp/ccRqyiOg.s:5507   .debug_str:0000000000000082 .LASF135
     /tmp/ccRqyiOg.s:5653   .debug_str:00000000000004d7 .LASF136
     /tmp/ccRqyiOg.s:5879   .debug_str:0000000000000b46 .LASF137
     /tmp/ccRqyiOg.s:5503   .debug_str:0000000000000052 .LASF138
     /tmp/ccRqyiOg.s:5517   .debug_str:00000000000000b7 .LASF139
     /tmp/ccRqyiOg.s:5949   .debug_str:0000000000000deb .LASF140
     /tmp/ccRqyiOg.s:5913   .debug_str:0000000000000cfb .LASF141
     /tmp/ccRqyiOg.s:5811   .debug_str:0000000000000980 .LASF142
     /tmp/ccRqyiOg.s:5677   .debug_str:0000000000000579 .LASF143
     /tmp/ccRqyiOg.s:5771   .debug_str:000000000000084b .LASF144
     /tmp/ccRqyiOg.s:5927   .debug_str:0000000000000d76 .LASF145
     /tmp/ccRqyiOg.s:5589   .debug_str:00000000000002c3 .LASF147
     /tmp/ccRqyiOg.s:5903   .debug_str:0000000000000c9c .LASF240
     /tmp/ccRqyiOg.s:5733   .debug_str:0000000000000709 .LASF148
     /tmp/ccRqyiOg.s:5935   .debug_str:0000000000000d92 .LASF150
GAS LISTING /tmp/ccRqyiOg.s 			page 46


     /tmp/ccRqyiOg.s:5901   .debug_str:0000000000000c97 .LASF151
     /tmp/ccRqyiOg.s:5547   .debug_str:000000000000018b .LASF152
     /tmp/ccRqyiOg.s:5597   .debug_str:00000000000002f2 .LASF153
     /tmp/ccRqyiOg.s:5573   .debug_str:0000000000000261 .LASF154
     /tmp/ccRqyiOg.s:5565   .debug_str:000000000000020b .LASF156
     /tmp/ccRqyiOg.s:5527   .debug_str:0000000000000107 .LASF157
     /tmp/ccRqyiOg.s:5717   .debug_str:0000000000000699 .LASF158
     /tmp/ccRqyiOg.s:5525   .debug_str:00000000000000f2 .LASF159
     /tmp/ccRqyiOg.s:5633   .debug_str:000000000000041f .LASF160
     /tmp/ccRqyiOg.s:5905   .debug_str:0000000000000ca9 .LASF241
     /tmp/ccRqyiOg.s:5871   .debug_str:0000000000000b0f .LASF161
     /tmp/ccRqyiOg.s:5691   .debug_str:00000000000005c9 .LASF162
     /tmp/ccRqyiOg.s:5663   .debug_str:000000000000050f .LASF163
     /tmp/ccRqyiOg.s:5601   .debug_str:0000000000000316 .LASF164
     /tmp/ccRqyiOg.s:5687   .debug_str:00000000000005b8 .LASF165
     /tmp/ccRqyiOg.s:5719   .debug_str:000000000000069e .LASF166
     /tmp/ccRqyiOg.s:5533   .debug_str:000000000000012a .LASF167
     /tmp/ccRqyiOg.s:5715   .debug_str:000000000000067d .LASF168
     /tmp/ccRqyiOg.s:5567   .debug_str:0000000000000226 .LASF169
     /tmp/ccRqyiOg.s:5941   .debug_str:0000000000000daa .LASF170
     /tmp/ccRqyiOg.s:5697   .debug_str:00000000000005fb .LASF171
     /tmp/ccRqyiOg.s:5833   .debug_str:0000000000000a32 .LASF172
     /tmp/ccRqyiOg.s:5735   .debug_str:0000000000000715 .LASF173
     /tmp/ccRqyiOg.s:5761   .debug_str:0000000000000800 .LASF174
     /tmp/ccRqyiOg.s:5723   .debug_str:00000000000006ca .LASF175
     /tmp/ccRqyiOg.s:5861   .debug_str:0000000000000ae3 .LASF176
     /tmp/ccRqyiOg.s:5911   .debug_str:0000000000000cde .LASF177
     /tmp/ccRqyiOg.s:5665   .debug_str:0000000000000517 .LASF178
     /tmp/ccRqyiOg.s:5755   .debug_str:00000000000007b6 .LASF179
     /tmp/ccRqyiOg.s:5643   .debug_str:000000000000048b .LASF180
     /tmp/ccRqyiOg.s:5803   .debug_str:0000000000000941 .LASF181
     /tmp/ccRqyiOg.s:5509   .debug_str:0000000000000090 .LASF182
     /tmp/ccRqyiOg.s:5947   .debug_str:0000000000000dd0 .LASF183
     /tmp/ccRqyiOg.s:5493   .debug_str:000000000000001b .LASF184
     /tmp/ccRqyiOg.s:5623   .debug_str:00000000000003d0 .LASF185
     /tmp/ccRqyiOg.s:5867   .debug_str:0000000000000afc .LASF186
     /tmp/ccRqyiOg.s:5491   .debug_str:0000000000000000 .LASF187
     /tmp/ccRqyiOg.s:5695   .debug_str:00000000000005e3 .LASF188
     /tmp/ccRqyiOg.s:5609   .debug_str:0000000000000360 .LASF189
     /tmp/ccRqyiOg.s:5819   .debug_str:00000000000009bf .LASF190
     /tmp/ccRqyiOg.s:5767   .debug_str:0000000000000826 .LASF191
     /tmp/ccRqyiOg.s:5551   .debug_str:000000000000019a .LASF192
     /tmp/ccRqyiOg.s:5773   .debug_str:0000000000000853 .LASF193
     /tmp/ccRqyiOg.s:5881   .debug_str:0000000000000b57 .LASF194
     /tmp/ccRqyiOg.s:5851   .debug_str:0000000000000aaa .LASF195
     /tmp/ccRqyiOg.s:5637   .debug_str:0000000000000443 .LASF196
     /tmp/ccRqyiOg.s:5873   .debug_str:0000000000000b1c .LASF197
     /tmp/ccRqyiOg.s:5621   .debug_str:00000000000003c2 .LASF198
     /tmp/ccRqyiOg.s:5497   .debug_str:000000000000002e .LASF242
     /tmp/ccRqyiOg.s:5925   .debug_str:0000000000000d6a .LASF199
     /tmp/ccRqyiOg.s:5721   .debug_str:00000000000006bd .LASF200
     /tmp/ccRqyiOg.s:5657   .debug_str:00000000000004ea .LASF201
     /tmp/ccRqyiOg.s:5775   .debug_str:0000000000000871 .LASF202
     /tmp/ccRqyiOg.s:5685   .debug_str:00000000000005ad .LASF203
     /tmp/ccRqyiOg.s:5747   .debug_str:0000000000000792 .LASF204
     /tmp/ccRqyiOg.s:5835   .debug_str:0000000000000a38 .LASF205
     /tmp/ccRqyiOg.s:5875   .debug_str:0000000000000b29 .LASF206
GAS LISTING /tmp/ccRqyiOg.s 			page 47


     /tmp/ccRqyiOg.s:5671   .debug_str:0000000000000549 .LASF207
     /tmp/ccRqyiOg.s:5853   .debug_str:0000000000000abe .LASF208
     /tmp/ccRqyiOg.s:5727   .debug_str:00000000000006e7 .LASF209
     /tmp/ccRqyiOg.s:5973   .debug_str:0000000000000ea0 .LASF210
     /tmp/ccRqyiOg.s:5965   .debug_str:0000000000000e5e .LASF211
     /tmp/ccRqyiOg.s:5645   .debug_str:0000000000000498 .LASF213
     /tmp/ccRqyiOg.s:5971   .debug_str:0000000000000e8c .LASF243
     /tmp/ccRqyiOg.s:5895   .debug_str:0000000000000c67 .LASF214
     /tmp/ccRqyiOg.s:5799   .debug_str:0000000000000912 .LASF215
     /tmp/ccRqyiOg.s:5529   .debug_str:000000000000010d .LASF216
     /tmp/ccRqyiOg.s:5977   .debug_str:0000000000000eb3 .LASF217
     /tmp/ccRqyiOg.s:5693   .debug_str:00000000000005de .LASF218
     /tmp/ccRqyiOg.s:5559   .debug_str:00000000000001d3 .LASF219
     /tmp/ccRqyiOg.s:5765   .debug_str:0000000000000815 .LASF220
     /tmp/ccRqyiOg.s:121    .text:0000000000000000 .LFB57
     /tmp/ccRqyiOg.s:1075   .text:0000000000000610 .LFE57
     /tmp/ccRqyiOg.s:5849   .debug_str:0000000000000aa3 .LASF221
     /tmp/ccRqyiOg.s:4966   .debug_loc:0000000000000000 .LLST5
     /tmp/ccRqyiOg.s:5889   .debug_str:0000000000000c44 .LASF222
     /tmp/ccRqyiOg.s:4997   .debug_loc:0000000000000087 .LLST6
     /tmp/ccRqyiOg.s:5951   .debug_str:0000000000000df8 .LASF223
     /tmp/ccRqyiOg.s:5028   .debug_loc:000000000000010e .LLST7
     /tmp/ccRqyiOg.s:5050   .debug_loc:000000000000016d .LLST8
     /tmp/ccRqyiOg.s:5072   .debug_loc:00000000000001cc .LLST9
     /tmp/ccRqyiOg.s:5094   .debug_loc:000000000000022d .LLST10
     /tmp/ccRqyiOg.s:5116   .debug_loc:000000000000028e .LLST11
     /tmp/ccRqyiOg.s:5138   .debug_loc:00000000000002ef .LLST12
     /tmp/ccRqyiOg.s:847    .text:0000000000000450 .LBB29
     /tmp/ccRqyiOg.s:919    .text:00000000000004e4 .LBE29
     /tmp/ccRqyiOg.s:5322   .debug_loc:0000000000000620 .LLST13
     /tmp/ccRqyiOg.s:851    .text:0000000000000458 .LVL72
     /tmp/ccRqyiOg.s:863    .text:0000000000000474 .LVL74
     /tmp/ccRqyiOg.s:875    .text:0000000000000490 .LVL75
     /tmp/ccRqyiOg.s:880    .text:00000000000004a0 .LVL76
     /tmp/ccRqyiOg.s:889    .text:00000000000004b4 .LVL79
     /tmp/ccRqyiOg.s:897    .text:00000000000004c8 .LVL80
     /tmp/ccRqyiOg.s:918    .text:00000000000004e4 .LVL81
     /tmp/ccRqyiOg.s:333    .text:00000000000000ec .LVL22
     /tmp/ccRqyiOg.s:351    .text:0000000000000104 .LVL24
     /tmp/ccRqyiOg.s:376    .text:0000000000000130 .LVL26
     /tmp/ccRqyiOg.s:398    .text:0000000000000168 .LVL27
     /tmp/ccRqyiOg.s:432    .text:0000000000000184 .LVL29
     /tmp/ccRqyiOg.s:437    .text:0000000000000198 .LVL30
     /tmp/ccRqyiOg.s:441    .text:00000000000001a0 .LVL31
     /tmp/ccRqyiOg.s:457    .text:00000000000001b0 .LVL32
     /tmp/ccRqyiOg.s:466    .text:00000000000001bc .LVL34
     /tmp/ccRqyiOg.s:477    .text:00000000000001d0 .LVL36
     /tmp/ccRqyiOg.s:481    .text:00000000000001d8 .LVL37
     /tmp/ccRqyiOg.s:496    .text:00000000000001f4 .LVL39
     /tmp/ccRqyiOg.s:540    .text:000000000000022c .LVL41
     /tmp/ccRqyiOg.s:556    .text:0000000000000244 .LVL42
     /tmp/ccRqyiOg.s:559    .text:0000000000000250 .LVL43
     /tmp/ccRqyiOg.s:570    .text:0000000000000264 .LVL45
     /tmp/ccRqyiOg.s:588    .text:000000000000027c .LVL47
     /tmp/ccRqyiOg.s:634    .text:00000000000002ac .LVL49
     /tmp/ccRqyiOg.s:639    .text:00000000000002c0 .LVL50
     /tmp/ccRqyiOg.s:643    .text:00000000000002c8 .LVL51
GAS LISTING /tmp/ccRqyiOg.s 			page 48


     /tmp/ccRqyiOg.s:652    .text:00000000000002d4 .LVL53
     /tmp/ccRqyiOg.s:671    .text:00000000000002f0 .LVL55
     /tmp/ccRqyiOg.s:689    .text:0000000000000318 .LVL57
     /tmp/ccRqyiOg.s:733    .text:0000000000000350 .LVL59
     /tmp/ccRqyiOg.s:747    .text:000000000000037c .LVL60
     /tmp/ccRqyiOg.s:757    .text:0000000000000390 .LVL62
     /tmp/ccRqyiOg.s:766    .text:00000000000003ac .LVL63
     /tmp/ccRqyiOg.s:771    .text:00000000000003bc .LVL64
     /tmp/ccRqyiOg.s:780    .text:00000000000003d8 .LVL65
     /tmp/ccRqyiOg.s:785    .text:00000000000003e8 .LVL66
     /tmp/ccRqyiOg.s:794    .text:0000000000000404 .LVL67
     /tmp/ccRqyiOg.s:939    .text:0000000000000504 .LVL83
     /tmp/ccRqyiOg.s:943    .text:000000000000050c .LVL84
     /tmp/ccRqyiOg.s:953    .text:0000000000000524 .LVL85
     /tmp/ccRqyiOg.s:959    .text:0000000000000534 .LVL86
     /tmp/ccRqyiOg.s:963    .text:0000000000000544 .LVL87
     /tmp/ccRqyiOg.s:974    .text:0000000000000560 .LVL88
     /tmp/ccRqyiOg.s:996    .text:000000000000057c .LVL89
     /tmp/ccRqyiOg.s:1011   .text:0000000000000590 .LVL91
     /tmp/ccRqyiOg.s:1016   .text:00000000000005a0 .LVL92
     /tmp/ccRqyiOg.s:1025   .text:00000000000005bc .LVL93
     /tmp/ccRqyiOg.s:1030   .text:00000000000005cc .LVL94
     /tmp/ccRqyiOg.s:1039   .text:00000000000005e8 .LVL95
     /tmp/ccRqyiOg.s:5617   .debug_str:00000000000003b7 .LASF224
     /tmp/ccRqyiOg.s:5511   .debug_str:000000000000009b .LASF225
     /tmp/ccRqyiOg.s:5523   .debug_str:00000000000000e5 .LASF244
     /tmp/ccRqyiOg.s:11     .text._ZN4KSemD2Ev:0000000000000000 .LFB59
     /tmp/ccRqyiOg.s:85     .text._ZN4KSemD2Ev:000000000000004c .LFE59
     /tmp/ccRqyiOg.s:5347   .debug_loc:0000000000000693 .LLST0
     /tmp/ccRqyiOg.s:31     .text._ZN4KSemD2Ev:0000000000000018 .LBB19
     /tmp/ccRqyiOg.s:71     .text._ZN4KSemD2Ev:0000000000000038 .LBE19
     /tmp/ccRqyiOg.s:5365   .debug_loc:00000000000006df .LLST1
     /tmp/ccRqyiOg.s:36     .text._ZN4KSemD2Ev:0000000000000018 .LBB21
     /tmp/ccRqyiOg.s:43     .text._ZN4KSemD2Ev:000000000000001c .LBE21
     /tmp/ccRqyiOg.s:5383   .debug_loc:000000000000071c .LLST2
     /tmp/ccRqyiOg.s:46     .text._ZN4KSemD2Ev:0000000000000020 .LBB23
     /tmp/ccRqyiOg.s:69     .text._ZN4KSemD2Ev:0000000000000038 .LBE23
     /tmp/ccRqyiOg.s:5392   .debug_loc:0000000000000741 .LLST3
     /tmp/ccRqyiOg.s:58     .text._ZN4KSemD2Ev:000000000000002c .LBB24
     /tmp/ccRqyiOg.s:68     .text._ZN4KSemD2Ev:0000000000000038 .LBE24
     /tmp/ccRqyiOg.s:5399   .debug_loc:0000000000000764 .LLST4
     /tmp/ccRqyiOg.s:63     .text._ZN4KSemD2Ev:0000000000000034 .LVL5
     /tmp/ccRqyiOg.s:1286   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000000 .LFB49
     /tmp/ccRqyiOg.s:1305   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000020 .LFE49
     /tmp/ccRqyiOg.s:1259   .text._ZN3TCB10getRunningEv:0000000000000000 .LFB47
     /tmp/ccRqyiOg.s:1279   .text._ZN3TCB10getRunningEv:0000000000000024 .LFE47
     /tmp/ccRqyiOg.s:1231   .text._ZN3TCB7getBodyEv:0000000000000000 .LFB46
     /tmp/ccRqyiOg.s:1252   .text._ZN3TCB7getBodyEv:000000000000001c .LFE46
     /tmp/ccRqyiOg.s:5406   .debug_loc:0000000000000787 .LLST15
     /tmp/ccRqyiOg.s:1203   .text._ZN3TCB12getTimeSliceEv:0000000000000000 .LFB44
     /tmp/ccRqyiOg.s:1224   .text._ZN3TCB12getTimeSliceEv:000000000000001c .LFE44
     /tmp/ccRqyiOg.s:5420   .debug_loc:00000000000007c0 .LLST14
     /tmp/ccRqyiOg.s:1174   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000000 .LFB42
     /tmp/ccRqyiOg.s:1196   .text._ZN3TCB9setStatusENS_12ThreadStatusE:000000000000001c .LFE42
     /tmp/ccRqyiOg.s:5557   .debug_str:00000000000001ce .LASF226
     /tmp/ccRqyiOg.s:1145   .text._ZN8KConsole10getDRvalueEv:0000000000000000 .LFB34
     /tmp/ccRqyiOg.s:1167   .text._ZN8KConsole10getDRvalueEv:0000000000000028 .LFE34
GAS LISTING /tmp/ccRqyiOg.s 			page 49


     /tmp/ccRqyiOg.s:1115   .text._ZN8KConsole10getSRvalueEv:0000000000000000 .LFB33
     /tmp/ccRqyiOg.s:1138   .text._ZN8KConsole10getSRvalueEv:0000000000000028 .LFE33
     /tmp/ccRqyiOg.s:5817   .debug_str:00000000000009ba .LASF245
     /tmp/ccRqyiOg.s:5897   .debug_str:0000000000000c77 .LASF246
     /tmp/ccRqyiOg.s:1082   .text._ZN5Riscv6mc_sipEm:0000000000000000 .LFB7
     /tmp/ccRqyiOg.s:1108   .text._ZN5Riscv6mc_sipEm:000000000000001c .LFE7
     /tmp/ccRqyiOg.s:5931   .debug_str:0000000000000d86 .LASF227
     /tmp/ccRqyiOg.s:5701   .debug_str:0000000000000618 .LASF228
     /tmp/ccRqyiOg.s:5561   .debug_str:00000000000001e8 .LASF229
     /tmp/ccRqyiOg.s:5963   .debug_str:0000000000000e52 .LASF230
     /tmp/ccRqyiOg.s:5841   .debug_str:0000000000000a64 .LASF231
     /tmp/ccRqyiOg.s:5837   .debug_str:0000000000000a48 .LASF232
     /tmp/ccRqyiOg.s:5953   .debug_str:0000000000000e00 .LASF233
     /tmp/ccRqyiOg.s:5801   .debug_str:0000000000000933 .LASF234
     /tmp/ccRqyiOg.s:5649   .debug_str:00000000000004c2 .LASF235
     /tmp/ccRqyiOg.s:144    .text:000000000000001c .LVL7
     /tmp/ccRqyiOg.s:151    .text:0000000000000020 .LVL8
     /tmp/ccRqyiOg.s:835    .text:000000000000043c .LVL70
     /tmp/ccRqyiOg.s:842    .text:0000000000000440 .LVL71
     /tmp/ccRqyiOg.s:1067   .text:0000000000000604 .LVL96
     /tmp/ccRqyiOg.s:1072   .text:000000000000060c .LVL97
     /tmp/ccRqyiOg.s:154    .text:0000000000000024 .LVL9
     /tmp/ccRqyiOg.s:161    .text:0000000000000028 .LVL10
     /tmp/ccRqyiOg.s:814    .text:0000000000000428 .LVL68
     /tmp/ccRqyiOg.s:826    .text:0000000000000434 .LVL69
     /tmp/ccRqyiOg.s:164    .text:000000000000002c .LVL11
     /tmp/ccRqyiOg.s:172    .text:0000000000000030 .LVL12
     /tmp/ccRqyiOg.s:175    .text:0000000000000034 .LVL13
     /tmp/ccRqyiOg.s:182    .text:0000000000000038 .LVL14
     /tmp/ccRqyiOg.s:185    .text:000000000000003c .LVL15
     /tmp/ccRqyiOg.s:192    .text:0000000000000040 .LVL16
     /tmp/ccRqyiOg.s:195    .text:0000000000000044 .LVL17
     /tmp/ccRqyiOg.s:202    .text:0000000000000048 .LVL18
     /tmp/ccRqyiOg.s:205    .text:000000000000004c .LVL19
     /tmp/ccRqyiOg.s:212    .text:0000000000000050 .LVL20
     /tmp/ccRqyiOg.s:215    .text:0000000000000054 .LVL21
     /tmp/ccRqyiOg.s:343    .text:00000000000000f4 .LVL23
     /tmp/ccRqyiOg.s:361    .text:000000000000010c .LVL25
     /tmp/ccRqyiOg.s:426    .text:000000000000017c .LVL28
     /tmp/ccRqyiOg.s:460    .text:00000000000001b4 .LVL33
     /tmp/ccRqyiOg.s:469    .text:00000000000001c0 .LVL35
     /tmp/ccRqyiOg.s:484    .text:00000000000001dc .LVL38
     /tmp/ccRqyiOg.s:532    .text:000000000000021c .LVL40
     /tmp/ccRqyiOg.s:562    .text:0000000000000254 .LVL44
     /tmp/ccRqyiOg.s:580    .text:000000000000026c .LVL46
     /tmp/ccRqyiOg.s:598    .text:0000000000000284 .LVL48
     /tmp/ccRqyiOg.s:646    .text:00000000000002cc .LVL52
     /tmp/ccRqyiOg.s:662    .text:00000000000002dc .LVL54
     /tmp/ccRqyiOg.s:674    .text:00000000000002f4 .LVL56
     /tmp/ccRqyiOg.s:725    .text:0000000000000340 .LVL58
     /tmp/ccRqyiOg.s:750    .text:0000000000000380 .LVL61
     /tmp/ccRqyiOg.s:925    .text:00000000000004e8 .LVL82
     /tmp/ccRqyiOg.s:1002   .text:0000000000000580 .LVL90
     /tmp/ccRqyiOg.s:855    .text:0000000000000460 .LVL73
     /tmp/ccRqyiOg.s:882    .text:00000000000004a4 .LVL77
     /tmp/ccRqyiOg.s:887    .text:00000000000004ac .LVL78
     /tmp/ccRqyiOg.s:17     .text._ZN4KSemD2Ev:0000000000000000 .LVL0
GAS LISTING /tmp/ccRqyiOg.s 			page 50


     /tmp/ccRqyiOg.s:29     .text._ZN4KSemD2Ev:0000000000000018 .LVL1
     /tmp/ccRqyiOg.s:80     .text._ZN4KSemD2Ev:0000000000000044 .LVL6
     /tmp/ccRqyiOg.s:41     .text._ZN4KSemD2Ev:000000000000001c .LVL2
     /tmp/ccRqyiOg.s:48     .text._ZN4KSemD2Ev:0000000000000020 .LVL3
     /tmp/ccRqyiOg.s:57     .text._ZN4KSemD2Ev:000000000000002c .LVL4
     /tmp/ccRqyiOg.s:1234   .text._ZN3TCB7getBodyEv:0000000000000000 .LVL102
     /tmp/ccRqyiOg.s:1244   .text._ZN3TCB7getBodyEv:0000000000000010 .LVL103
     /tmp/ccRqyiOg.s:1206   .text._ZN3TCB12getTimeSliceEv:0000000000000000 .LVL100
     /tmp/ccRqyiOg.s:1216   .text._ZN3TCB12getTimeSliceEv:0000000000000010 .LVL101
     /tmp/ccRqyiOg.s:1315   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccRqyiOg.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccRqyiOg.s:1308   .text:0000000000000610 .Letext0
     /tmp/ccRqyiOg.s:88     .gcc_except_table._ZN4KSemD2Ev:0000000000000000 .LLSDA59
                           .group:0000000000000000 _ZN4KSemD5Ev

UNDEFINED SYMBOLS
_Z8mem_freePv
__gxx_personality_v0
_ZN7KMemory7kmallocEm
_ZN7KMemory5kfreeEPv
_ZN3TCB12createThreadEPFvPvES0_Pm
main
_ZN9Scheduler3putEP3TCB
_ZN3TCB13releaseJoinedEv
_ZN3TCB8dispatchEv
_ZN3TCB10threadJoinEPS_
_ZN4KSem7initSemEj
_ZN4KSem8closeSemEPS_
_ZN4KSemdlEPv
_ZN4KSem4waitEv
_ZN4KSem6signalEv
_ZN9Scheduler10putToSleepEP3TCBm
_ZN8KConsole5kgetcEv
_ZN8KConsole5kputcEc
_Z11printStringPKc
_Z8printIntiii
plic_claim
_ZN8KConsole12placeInInputEc
plic_complete
_ZN9Scheduler4wakeEv
_ZN8KConsole2srE
_ZN8KConsole2drE
_ZN3TCB7runningE
_ZN3TCB16runningTimeSliceE
