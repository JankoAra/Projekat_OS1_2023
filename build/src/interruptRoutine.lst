GAS LISTING /tmp/ccBwJVte.s 			page 1


   1              		.file	"interruptRoutine.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.section	.text._ZN4KSemD2Ev,"axG",@progbits,_ZN4KSemD5Ev,comdat
   7              		.align	2
   8              		.weak	_ZN4KSemD2Ev
  10              	_ZN4KSemD2Ev:
  11              	.LFB60:
  12              		.file 1 "src/../h/KSem.hpp"
   1:src/../h/KSem.hpp **** //
   2:src/../h/KSem.hpp **** // Created by os on 6/4/23.
   3:src/../h/KSem.hpp **** //
   4:src/../h/KSem.hpp **** 
   5:src/../h/KSem.hpp **** #ifndef PROJEKAT2023_KSEM_HPP
   6:src/../h/KSem.hpp **** #define PROJEKAT2023_KSEM_HPP
   7:src/../h/KSem.hpp **** 
   8:src/../h/KSem.hpp **** #include "../h/ThreadQueue.hpp"
   9:src/../h/KSem.hpp **** 
  10:src/../h/KSem.hpp **** //klasa napravljena po uzoru na semafor u skolskom jezgru
  11:src/../h/KSem.hpp **** class KSem {
  13              		.loc 1 11 7
  14              		.cfi_startproc
  15              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
  16              		.cfi_lsda 0x1b,.LLSDA60
  17              	.LVL0:
  18 0000 130101FE 		addi	sp,sp,-32
  19              		.cfi_def_cfa_offset 32
  20 0004 233C1100 		sd	ra,24(sp)
  21 0008 23388100 		sd	s0,16(sp)
  22 000c 23349100 		sd	s1,8(sp)
  23              		.cfi_offset 1, -8
  24              		.cfi_offset 8, -16
  25              		.cfi_offset 9, -24
  26 0010 13040102 		addi	s0,sp,32
  27              		.cfi_def_cfa 8, 0
  28 0014 93040500 		mv	s1,a0
  29              	.LVL1:
  30              	.L3:
  31              	.LBB19:
  32              	.LBB20:
  33              		.file 2 "src/../h/../h/ThreadQueue.hpp"
   1:src/../h/../h/ThreadQueue.hpp **** //
   2:src/../h/../h/ThreadQueue.hpp **** // Created by os on 6/4/23.
   3:src/../h/../h/ThreadQueue.hpp **** //
   4:src/../h/../h/ThreadQueue.hpp **** 
   5:src/../h/../h/ThreadQueue.hpp **** #ifndef PROJEKAT2023_THREADQUEUE_HPP
   6:src/../h/../h/ThreadQueue.hpp **** #define PROJEKAT2023_THREADQUEUE_HPP
   7:src/../h/../h/ThreadQueue.hpp **** 
   8:src/../h/../h/ThreadQueue.hpp **** #include "../h/syscall_c.hpp"
   9:src/../h/../h/ThreadQueue.hpp **** 
  10:src/../h/../h/ThreadQueue.hpp **** class TCB;
  11:src/../h/../h/ThreadQueue.hpp **** 
  12:src/../h/../h/ThreadQueue.hpp **** class ThreadQueue {
  13:src/../h/../h/ThreadQueue.hpp **** private:
  14:src/../h/../h/ThreadQueue.hpp ****     struct Node {
GAS LISTING /tmp/ccBwJVte.s 			page 2


  15:src/../h/../h/ThreadQueue.hpp ****         TCB* data;
  16:src/../h/../h/ThreadQueue.hpp ****         Node* next;
  17:src/../h/../h/ThreadQueue.hpp **** 
  18:src/../h/../h/ThreadQueue.hpp ****         Node(TCB* d) : data(d), next(nullptr) {}
  19:src/../h/../h/ThreadQueue.hpp **** 
  20:src/../h/../h/ThreadQueue.hpp ****         static void* operator new(size_t size) {
  21:src/../h/../h/ThreadQueue.hpp ****             return mem_alloc(size);
  22:src/../h/../h/ThreadQueue.hpp ****         }
  23:src/../h/../h/ThreadQueue.hpp **** 
  24:src/../h/../h/ThreadQueue.hpp ****         static void operator delete(void* ptr) {
  25:src/../h/../h/ThreadQueue.hpp ****             mem_free(ptr);
  26:src/../h/../h/ThreadQueue.hpp ****         }
  27:src/../h/../h/ThreadQueue.hpp ****     };
  28:src/../h/../h/ThreadQueue.hpp **** 
  29:src/../h/../h/ThreadQueue.hpp ****     Node* front;
  30:src/../h/../h/ThreadQueue.hpp ****     Node* back;
  31:src/../h/../h/ThreadQueue.hpp **** 
  32:src/../h/../h/ThreadQueue.hpp **** public:
  33:src/../h/../h/ThreadQueue.hpp ****     ThreadQueue() : front(nullptr), back(nullptr) {}
  34:src/../h/../h/ThreadQueue.hpp **** 
  35:src/../h/../h/ThreadQueue.hpp ****     ThreadQueue(const ThreadQueue &) = delete;
  36:src/../h/../h/ThreadQueue.hpp **** 
  37:src/../h/../h/ThreadQueue.hpp ****     ThreadQueue &operator=(const ThreadQueue &) = delete;
  38:src/../h/../h/ThreadQueue.hpp **** 
  39:src/../h/../h/ThreadQueue.hpp ****     ~ThreadQueue() {
  40:src/../h/../h/ThreadQueue.hpp ****         while (!isEmpty()) {
  34              		.loc 2 40 9
  35              		.loc 2 40 16
  36              	.LBB21:
  37              	.LBB22:
  41:src/../h/../h/ThreadQueue.hpp ****             Node* node = front;
  42:src/../h/../h/ThreadQueue.hpp ****             front = front->next;
  43:src/../h/../h/ThreadQueue.hpp ****             delete node;
  44:src/../h/../h/ThreadQueue.hpp ****         }
  45:src/../h/../h/ThreadQueue.hpp ****     }
  46:src/../h/../h/ThreadQueue.hpp **** 
  47:src/../h/../h/ThreadQueue.hpp ****     bool isEmpty() const {
  48:src/../h/../h/ThreadQueue.hpp ****         return front == nullptr;
  38              		.loc 2 48 9
  39              		.loc 2 48 16 is_stmt 0
  40 0018 03B58400 		ld	a0,8(s1)
  41              	.LVL2:
  42              	.LBE22:
  43              	.LBE21:
  40:src/../h/../h/ThreadQueue.hpp ****             Node* node = front;
  44              		.loc 2 40 16
  45 001c 630E0500 		beqz	a0,.L1
  46              	.LBB23:
  41:src/../h/../h/ThreadQueue.hpp ****             Node* node = front;
  47              		.loc 2 41 13 is_stmt 1
  48              	.LVL3:
  42:src/../h/../h/ThreadQueue.hpp ****             delete node;
  49              		.loc 2 42 13
  42:src/../h/../h/ThreadQueue.hpp ****             delete node;
  50              		.loc 2 42 28 is_stmt 0
  51 0020 83378500 		ld	a5,8(a0)
  42:src/../h/../h/ThreadQueue.hpp ****             delete node;
GAS LISTING /tmp/ccBwJVte.s 			page 3


  52              		.loc 2 42 19
  53 0024 23B4F400 		sd	a5,8(s1)
  43:src/../h/../h/ThreadQueue.hpp ****         }
  54              		.loc 2 43 13 is_stmt 1
  43:src/../h/../h/ThreadQueue.hpp ****         }
  55              		.loc 2 43 24 is_stmt 0
  56 0028 E30805FE 		beqz	a0,.L3
  57              	.LVL4:
  58              	.LBB24:
  59              	.LBB25:
  25:src/../h/../h/ThreadQueue.hpp ****         }
  60              		.loc 2 25 13 is_stmt 1
  25:src/../h/../h/ThreadQueue.hpp ****         }
  61              		.loc 2 25 21 is_stmt 0
  62 002c 97000000 		call	_Z8mem_freePv@plt
  62      E7800000 
  63              	.LVL5:
  26:src/../h/../h/ThreadQueue.hpp ****     };
  64              		.loc 2 26 9
  65 0034 6FF05FFE 		j	.L3
  66              	.L1:
  67              	.LBE25:
  68              	.LBE24:
  69              	.LBE23:
  70              	.LBE20:
  71              	.LBE19:
  72              		.loc 1 11 7
  73 0038 83308101 		ld	ra,24(sp)
  74              		.cfi_restore 1
  75 003c 03340101 		ld	s0,16(sp)
  76              		.cfi_restore 8
  77              		.cfi_def_cfa 2, 32
  78 0040 83348100 		ld	s1,8(sp)
  79              		.cfi_restore 9
  80              	.LVL6:
  81 0044 13010102 		addi	sp,sp,32
  82              		.cfi_def_cfa_offset 0
  83 0048 67800000 		jr	ra
  84              		.cfi_endproc
  85              	.LFE60:
  86              		.globl	__gxx_personality_v0
  87              		.section	.gcc_except_table._ZN4KSemD2Ev,"aG",@progbits,_ZN4KSemD5Ev,comdat
  88              	.LLSDA60:
  89 0000 FF       		.byte	0xff
  90 0001 FF       		.byte	0xff
  91 0002 03       		.byte	0x3
  92 0003 00       		.byte	0
  93              		.section	.text._ZN4KSemD2Ev,"axG",@progbits,_ZN4KSemD5Ev,comdat
  95              		.weak	_ZN4KSemD1Ev
  96              		.set	_ZN4KSemD1Ev,_ZN4KSemD2Ev
  97              		.section	.rodata
  98              		.align	3
  99              	.LC0:
 100 0000 0A4E6570 		.string	"\nNepostojeci op code: "
 100      6F73746F 
 100      6A656369 
 100      206F7020 
GAS LISTING /tmp/ccBwJVte.s 			page 4


 100      636F6465 
 101 0017 00       		.align	3
 102              	.LC1:
 103 0018 0A736361 		.string	"\nscause: "
 103      7573653A 
 103      2000
 104 0022 00000000 		.align	3
 104      0000
 105              	.LC2:
 106 0028 0A736570 		.string	"\nsepc: "
 106      633A2000 
 107              		.align	3
 108              	.LC3:
 109 0030 4E656B69 		.string	"Neki drugi prekid\n"
 109      20647275 
 109      67692070 
 109      72656B69 
 109      640A00
 110 0043 00000000 		.align	3
 110      00
 111              	.LC4:
 112 0048 0A477265 		.string	"\nGreska u prekidnoj rutini\n"
 112      736B6120 
 112      75207072 
 112      656B6964 
 112      6E6F6A20 
 113 0064 00000000 		.align	3
 114              	.LC5:
 115 0068 73636175 		.string	"scause: "
 115      73653A20 
 115      00
 116              		.text
 117              		.align	2
 118              		.globl	interruptRoutine
 120              	interruptRoutine:
 121              	.LFB58:
 122              		.file 3 "src/interruptRoutine.cpp"
   1:src/interruptRoutine.cpp **** //
   2:src/interruptRoutine.cpp **** // Created by os on 5/22/23.
   3:src/interruptRoutine.cpp **** //
   4:src/interruptRoutine.cpp **** 
   5:src/interruptRoutine.cpp **** #include "../lib/hw.h"
   6:src/interruptRoutine.cpp **** #include "../h/Riscv.hpp"
   7:src/interruptRoutine.cpp **** #include "../h/KMemory.hpp"
   8:src/interruptRoutine.cpp **** #include "../h/KSem.hpp"
   9:src/interruptRoutine.cpp **** #include "../h/KConsole.hpp"
  10:src/interruptRoutine.cpp **** #include "../h/TCB.hpp"
  11:src/interruptRoutine.cpp **** #include "../h/Scheduler.hpp"
  12:src/interruptRoutine.cpp **** 
  13:src/interruptRoutine.cpp **** int main();
  14:src/interruptRoutine.cpp **** 
  15:src/interruptRoutine.cpp **** #pragma GCC optimize("O0")
  16:src/interruptRoutine.cpp **** extern "C" void interruptRoutine() {
 123              		.loc 3 16 36 is_stmt 1
 124              		.cfi_startproc
 125 0000 130101F9 		addi	sp,sp,-112
 126              		.cfi_def_cfa_offset 112
GAS LISTING /tmp/ccBwJVte.s 			page 5


 127 0004 23341106 		sd	ra,104(sp)
 128 0008 23308106 		sd	s0,96(sp)
 129 000c 233C9104 		sd	s1,88(sp)
 130              		.cfi_offset 1, -8
 131              		.cfi_offset 8, -16
 132              		.cfi_offset 9, -24
 133 0010 13040107 		addi	s0,sp,112
 134              		.cfi_def_cfa 8, 0
  17:src/interruptRoutine.cpp ****     //bitni sistemski registri
  18:src/interruptRoutine.cpp ****     uint64 scause, sepc, sstatus;
 135              		.loc 3 18 5
  19:src/interruptRoutine.cpp ****     __asm__ volatile("csrr %[scause], scause":[scause] "=r"(scause): : "a5", "a0", "a1", "a2", "a3"
 136              		.loc 3 19 5
 137              		.loc 3 19 119 is_stmt 0
 138              	#APP
 139              	# 19 "src/interruptRoutine.cpp" 1
  20              	    __asm__ volatile("csrr %[sepc], sepc":[sepc] "=r"(sepc): : "a5", "a0", "a1", "a2", "a3", "a4", 
 140              		csrr t1, scause
 141              	# 0 "" 2
 142              	#NO_APP
 143 0018 233C64FC 		sd	t1,-40(s0)
 144              	.LVL7:
 145              		.loc 3 20 5 is_stmt 1
 146              		.loc 3 20 111 is_stmt 0
 147              	#APP
 148              	# 20 "src/interruptRoutine.cpp" 1
  21              	    __asm__ volatile("csrr %[stat], sstatus":[stat] "=r"(sstatus): : "a5", "a0", "a1", "a2", "a3", 
 149              		csrr t1, sepc
 150              	# 0 "" 2
 151              	.LVL8:
 152              	#NO_APP
 153 0020 233864FC 		sd	t1,-48(s0)
 154              	.LVL9:
 155              		.loc 3 21 5 is_stmt 1
 156              		.loc 3 21 117 is_stmt 0
 157              	#APP
 158              	# 21 "src/interruptRoutine.cpp" 1
  22              	
 159              		csrr t1, sstatus
 160              	# 0 "" 2
 161              	.LVL10:
 162              	#NO_APP
 163 0028 233464FC 		sd	t1,-56(s0)
 164              	.LVL11:
  23:src/interruptRoutine.cpp ****     //argumenti preneti sistemskom pozivu
  24:src/interruptRoutine.cpp ****     uint64 a0, a1, a2, a3, a4;
 165              		.loc 3 24 5 is_stmt 1
  25:src/interruptRoutine.cpp ****     //uint64 a5, a6, a7;
  26:src/interruptRoutine.cpp ****     __asm__ volatile("mv %[ax], a0":[ax] "=r"(a0): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7"
 166              		.loc 3 26 5
 167              		.loc 3 26 101 is_stmt 0
 168              	#APP
 169              	# 26 "src/interruptRoutine.cpp" 1
  27              	    __asm__ volatile("mv %[ax], a1":[ax] "=r"(a1): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7"
 170              		mv t1, a0
 171              	# 0 "" 2
 172              	.LVL12:
GAS LISTING /tmp/ccBwJVte.s 			page 6


 173              	#NO_APP
 174 0030 233064FC 		sd	t1,-64(s0)
 175              	.LVL13:
 176              		.loc 3 27 5 is_stmt 1
 177              		.loc 3 27 101 is_stmt 0
 178              	#APP
 179              	# 27 "src/interruptRoutine.cpp" 1
  28              	    __asm__ volatile("mv %[ax], a2":[ax] "=r"(a2): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7"
 180              		mv t1, a1
 181              	# 0 "" 2
 182              	.LVL14:
 183              	#NO_APP
 184 0038 233C64FA 		sd	t1,-72(s0)
 185              	.LVL15:
 186              		.loc 3 28 5 is_stmt 1
 187              		.loc 3 28 101 is_stmt 0
 188              	#APP
 189              	# 28 "src/interruptRoutine.cpp" 1
  29              	    __asm__ volatile("mv %[ax], a3":[ax] "=r"(a3): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7"
 190              		mv t1, a2
 191              	# 0 "" 2
 192              	.LVL16:
 193              	#NO_APP
 194 0040 233864FA 		sd	t1,-80(s0)
 195              	.LVL17:
 196              		.loc 3 29 5 is_stmt 1
 197              		.loc 3 29 101 is_stmt 0
 198              	#APP
 199              	# 29 "src/interruptRoutine.cpp" 1
  30              	    __asm__ volatile("mv %[ax], a4":[ax] "=r"(a4): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7"
 200              		mv t1, a3
 201              	# 0 "" 2
 202              	.LVL18:
 203              	#NO_APP
 204 0048 233464FA 		sd	t1,-88(s0)
 205              	.LVL19:
 206              		.loc 3 30 5 is_stmt 1
 207              		.loc 3 30 101 is_stmt 0
 208              	#APP
 209              	# 30 "src/interruptRoutine.cpp" 1
  31              	//    __asm__ volatile("mv %[ax], a5":[ax] "=r"(a5): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a
 210              		mv t1, a4
 211              	# 0 "" 2
 212              	.LVL20:
 213              	#NO_APP
 214 0050 233064FA 		sd	t1,-96(s0)
 215              	.LVL21:
  32:src/interruptRoutine.cpp **** //    __asm__ volatile("mv %[ax], a6":[ax] "=r"(a6): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a
  33:src/interruptRoutine.cpp **** //    __asm__ volatile("mv %[ax], a7":[ax] "=r"(a7): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a
  34:src/interruptRoutine.cpp **** 
  35:src/interruptRoutine.cpp ****     if (scause == 0x9 || scause == 0x8) {
 216              		.loc 3 35 5 is_stmt 1
 217              	.LBB26:
 218 0054 033784FD 		ld	a4,-40(s0)
 219 0058 93079000 		li	a5,9
 220 005c 6308F700 		beq	a4,a5,.L7
 221              		.loc 3 35 23 is_stmt 0 discriminator 1
GAS LISTING /tmp/ccBwJVte.s 			page 7


 222 0060 033784FD 		ld	a4,-40(s0)
 223 0064 93078000 		li	a5,8
 224 0068 6316F746 		bne	a4,a5,.L8
 225              	.L7:
 226              	.LBB27:
  36:src/interruptRoutine.cpp ****         //prekid zbog poziva ecall
  37:src/interruptRoutine.cpp ****         switch (a0) {
 227              		.loc 3 37 9 is_stmt 1
 228              	.LBB28:
 229 006c 033704FC 		ld	a4,-64(s0)
 230 0070 93071008 		li	a5,129
 231 0074 630CF734 		beq	a4,a5,.L9
 232 0078 033704FC 		ld	a4,-64(s0)
 233 007c 93071008 		li	a5,129
 234 0080 63E6E738 		bgtu	a4,a5,.L10
 235 0084 033704FC 		ld	a4,-64(s0)
 236 0088 93073004 		li	a5,67
 237 008c 63E2E704 		bgtu	a4,a5,.L11
 238 0090 833704FC 		ld	a5,-64(s0)
 239 0094 638C0736 		beqz	a5,.L10
 240 0098 033704FC 		ld	a4,-64(s0)
 241 009c 93073004 		li	a5,67
 242 00a0 63E6E736 		bgtu	a4,a5,.L10
 243 00a4 833704FC 		ld	a5,-64(s0)
 244 00a8 13972700 		slli	a4,a5,2
 245 00ac 97070000 		lla	a5,.L13
 245      93870700 
 246 00b4 B307F700 		add	a5,a4,a5
 247 00b8 83A70700 		lw	a5,0(a5)
 248 00bc 1B870700 		sext.w	a4,a5
 249 00c0 97070000 		lla	a5,.L13
 249      93870700 
 250 00c8 B307F700 		add	a5,a4,a5
 251 00cc 67800700 		jr	a5
 252              		.section	.rodata
 253 0071 000000   		.align	2
 254              		.align	2
 255              	.L13:
 256 0074 00000000 		.word	.L10-.L13
 257 0078 00000000 		.word	.L26-.L13
 258 007c 00000000 		.word	.L25-.L13
 259 0080 00000000 		.word	.L10-.L13
 260 0084 00000000 		.word	.L10-.L13
 261 0088 00000000 		.word	.L10-.L13
 262 008c 00000000 		.word	.L10-.L13
 263 0090 00000000 		.word	.L10-.L13
 264 0094 00000000 		.word	.L10-.L13
 265 0098 00000000 		.word	.L10-.L13
 266 009c 00000000 		.word	.L10-.L13
 267 00a0 00000000 		.word	.L10-.L13
 268 00a4 00000000 		.word	.L10-.L13
 269 00a8 00000000 		.word	.L10-.L13
 270 00ac 00000000 		.word	.L10-.L13
 271 00b0 00000000 		.word	.L10-.L13
 272 00b4 00000000 		.word	.L10-.L13
 273 00b8 00000000 		.word	.L24-.L13
 274 00bc 00000000 		.word	.L23-.L13
GAS LISTING /tmp/ccBwJVte.s 			page 8


 275 00c0 00000000 		.word	.L22-.L13
 276 00c4 00000000 		.word	.L21-.L13
 277 00c8 00000000 		.word	.L10-.L13
 278 00cc 00000000 		.word	.L10-.L13
 279 00d0 00000000 		.word	.L10-.L13
 280 00d4 00000000 		.word	.L10-.L13
 281 00d8 00000000 		.word	.L10-.L13
 282 00dc 00000000 		.word	.L10-.L13
 283 00e0 00000000 		.word	.L10-.L13
 284 00e4 00000000 		.word	.L10-.L13
 285 00e8 00000000 		.word	.L10-.L13
 286 00ec 00000000 		.word	.L10-.L13
 287 00f0 00000000 		.word	.L10-.L13
 288 00f4 00000000 		.word	.L10-.L13
 289 00f8 00000000 		.word	.L20-.L13
 290 00fc 00000000 		.word	.L19-.L13
 291 0100 00000000 		.word	.L18-.L13
 292 0104 00000000 		.word	.L17-.L13
 293 0108 00000000 		.word	.L10-.L13
 294 010c 00000000 		.word	.L10-.L13
 295 0110 00000000 		.word	.L10-.L13
 296 0114 00000000 		.word	.L10-.L13
 297 0118 00000000 		.word	.L10-.L13
 298 011c 00000000 		.word	.L10-.L13
 299 0120 00000000 		.word	.L10-.L13
 300 0124 00000000 		.word	.L10-.L13
 301 0128 00000000 		.word	.L10-.L13
 302 012c 00000000 		.word	.L10-.L13
 303 0130 00000000 		.word	.L10-.L13
 304 0134 00000000 		.word	.L10-.L13
 305 0138 00000000 		.word	.L16-.L13
 306 013c 00000000 		.word	.L10-.L13
 307 0140 00000000 		.word	.L10-.L13
 308 0144 00000000 		.word	.L10-.L13
 309 0148 00000000 		.word	.L10-.L13
 310 014c 00000000 		.word	.L10-.L13
 311 0150 00000000 		.word	.L10-.L13
 312 0154 00000000 		.word	.L10-.L13
 313 0158 00000000 		.word	.L10-.L13
 314 015c 00000000 		.word	.L10-.L13
 315 0160 00000000 		.word	.L10-.L13
 316 0164 00000000 		.word	.L10-.L13
 317 0168 00000000 		.word	.L10-.L13
 318 016c 00000000 		.word	.L10-.L13
 319 0170 00000000 		.word	.L10-.L13
 320 0174 00000000 		.word	.L10-.L13
 321 0178 00000000 		.word	.L15-.L13
 322 017c 00000000 		.word	.L14-.L13
 323 0180 00000000 		.word	.L12-.L13
 324              		.text
 325              	.L11:
 326 00d0 033704FC 		ld	a4,-64(s0)
 327 00d4 93070008 		li	a5,128
 328 00d8 6304F72A 		beq	a4,a5,.L27
 329 00dc 6F000033 		j	.L10
 330              	.L26:
 331              	.LBB29:
GAS LISTING /tmp/ccBwJVte.s 			page 9


  38:src/interruptRoutine.cpp ****             case 0x01:
 332              		.loc 3 38 13
  39:src/interruptRoutine.cpp ****                 //mem_alloc
  40:src/interruptRoutine.cpp ****                 //a1 = broj blokova koje treba alocirati
  41:src/interruptRoutine.cpp ****                 KMemory::kmalloc((size_t)a1);
 333              		.loc 3 41 17
 334              		.loc 3 41 33 is_stmt 0
 335 00e0 033584FB 		ld	a0,-72(s0)
 336 00e4 97000000 		call	_ZN7KMemory7kmallocEm@plt
 336      E7800000 
 337              	.LVL22:
  42:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 338              		.loc 3 42 17 is_stmt 1
 339              		.loc 3 42 50 is_stmt 0
 340              	#APP
 341              	# 42 "src/interruptRoutine.cpp" 1
  43              	                break;
 342              		sd a0, 80(s0)
 343              	# 0 "" 2
 344              		.loc 3 43 17 is_stmt 1
 345              	#NO_APP
 346 00f0 6F00003C 		j	.L28
 347              	.LVL23:
 348              	.L25:
  44:src/interruptRoutine.cpp ****             case 0x02:
 349              		.loc 3 44 13
  45:src/interruptRoutine.cpp ****                 //mem_free
  46:src/interruptRoutine.cpp ****                 //a1 = pokazivac na memoriju koju dealociramo, dobijen sa mem_alloc
  47:src/interruptRoutine.cpp ****                 KMemory::kfree((void*)a1);
 350              		.loc 3 47 17
 351              		.loc 3 47 31 is_stmt 0
 352 00f4 833784FB 		ld	a5,-72(s0)
 353 00f8 13850700 		mv	a0,a5
 354 00fc 97000000 		call	_ZN7KMemory5kfreeEPv@plt
 354      E7800000 
 355              	.LVL24:
  48:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 356              		.loc 3 48 17 is_stmt 1
 357              		.loc 3 48 50 is_stmt 0
 358              	#APP
 359              	# 48 "src/interruptRoutine.cpp" 1
  49              	                break;
 360              		sd a0, 80(s0)
 361              	# 0 "" 2
 362              		.loc 3 49 17 is_stmt 1
 363              	#NO_APP
 364 0108 6F00803A 		j	.L28
 365              	.LVL25:
 366              	.L24:
  50:src/interruptRoutine.cpp ****             case 0x11:
 367              		.loc 3 50 13
  51:src/interruptRoutine.cpp ****                 //thread_create
  52:src/interruptRoutine.cpp ****                 //a1 = pokazivac na rucku u koju upisujemo identifikator niti(adresa u memoriji)
  53:src/interruptRoutine.cpp ****                 //a2 = pokazivac na funkciju koju nit treba da izvrsava
  54:src/interruptRoutine.cpp ****                 //a3 = argumenti funkcije koju nit treba da izvrsava
  55:src/interruptRoutine.cpp ****                 //a4 = poslednja lokacija alociranog steka(najniza adresa)
  56:src/interruptRoutine.cpp ****                 *((thread_t*)a1) = TCB::createThread((TCB::Body)a2, (void*)a3, (uint64*)a4);
GAS LISTING /tmp/ccBwJVte.s 			page 10


 368              		.loc 3 56 17
 369              		.loc 3 56 53 is_stmt 0
 370 010c 833704FB 		ld	a5,-80(s0)
 371 0110 033784FA 		ld	a4,-88(s0)
 372 0114 833604FA 		ld	a3,-96(s0)
 373              		.loc 3 56 17
 374 0118 833484FB 		ld	s1,-72(s0)
 375              		.loc 3 56 53
 376 011c 13860600 		mv	a2,a3
 377 0120 93050700 		mv	a1,a4
 378 0124 13850700 		mv	a0,a5
 379 0128 97000000 		call	_ZN3TCB12createThreadEPFvPvES0_Pm@plt
 379      E7800000 
 380              	.LVL26:
 381 0130 93070500 		mv	a5,a0
 382              		.loc 3 56 34
 383 0134 23B0F400 		sd	a5,0(s1)
  57:src/interruptRoutine.cpp ****                 if (*((thread_t*)a1) != nullptr) {
 384              		.loc 3 57 17 is_stmt 1
 385              		.loc 3 57 21 is_stmt 0
 386 0138 833784FB 		ld	a5,-72(s0)
 387 013c 83B70700 		ld	a5,0(a5)
 388              		.loc 3 57 17
 389 0140 63880702 		beqz	a5,.L29
  58:src/interruptRoutine.cpp ****                     if ((TCB::Body)a2 != (TCB::Body)main) {
 390              		.loc 3 58 21 is_stmt 1
 391              		.loc 3 58 39 is_stmt 0
 392 0144 033704FB 		ld	a4,-80(s0)
 393              		.loc 3 58 21
 394 0148 97070000 		la	a5,main
 394      83B70700 
 395 0150 630CF700 		beq	a4,a5,.L30
  59:src/interruptRoutine.cpp ****                         Scheduler::put(*((thread_t*)a1));
 396              		.loc 3 59 25 is_stmt 1
 397              		.loc 3 59 39 is_stmt 0
 398 0154 833784FB 		ld	a5,-72(s0)
 399 0158 83B70700 		ld	a5,0(a5)
 400 015c 13850700 		mv	a0,a5
 401 0160 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 401      E7800000 
 402              	.LVL27:
 403              	.L30:
  60:src/interruptRoutine.cpp ****                     }
  61:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, 0");
 404              		.loc 3 61 21 is_stmt 1
 405              		.loc 3 61 49 is_stmt 0
 406              	#APP
 407              	# 61 "src/interruptRoutine.cpp" 1
  62              	                } else {
 408              		li a0, 0
 409              	# 0 "" 2
 410              	#NO_APP
 411 016c 6F008000 		j	.L31
 412              	.L29:
  63:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, -1");
 413              		.loc 3 63 21 is_stmt 1
 414              		.loc 3 63 50 is_stmt 0
GAS LISTING /tmp/ccBwJVte.s 			page 11


 415              	#APP
 416              	# 63 "src/interruptRoutine.cpp" 1
  64              	                }
 417              		li a0, -1
 418              	# 0 "" 2
 419              	#NO_APP
 420              	.L31:
  65:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 421              		.loc 3 65 17 is_stmt 1
 422              		.loc 3 65 50 is_stmt 0
 423              	#APP
 424              	# 65 "src/interruptRoutine.cpp" 1
  66              	                break;
 425              		sd a0, 80(s0)
 426              	# 0 "" 2
 427              		.loc 3 66 17 is_stmt 1
 428              	#NO_APP
 429 0178 6F008033 		j	.L28
 430              	.LVL28:
 431              	.L23:
  67:src/interruptRoutine.cpp ****             case 0x12:
 432              		.loc 3 67 13
  68:src/interruptRoutine.cpp ****                 //thread_exit
  69:src/interruptRoutine.cpp ****                 TCB::getRunning()->setStatus(TCB::FINISHED);
 433              		.loc 3 69 17
 434              		.loc 3 69 45 is_stmt 0
 435 017c 97000000 		call	_ZN3TCB10getRunningEv
 435      E7800000 
 436              	.LVL29:
 437 0184 93070500 		mv	a5,a0
 438 0188 93055000 		li	a1,5
 439 018c 13850700 		mv	a0,a5
 440 0190 97000000 		call	_ZN3TCB9setStatusENS_12ThreadStatusE
 440      E7800000 
 441              	.LVL30:
  70:src/interruptRoutine.cpp ****                 TCB::releaseJoined();
 442              		.loc 3 70 17 is_stmt 1
 443              		.loc 3 70 35 is_stmt 0
 444 0198 97000000 		call	_ZN3TCB13releaseJoinedEv@plt
 444      E7800000 
 445              	.LVL31:
  71:src/interruptRoutine.cpp ****                 __asm__ volatile("li a0, 0");
 446              		.loc 3 71 17 is_stmt 1
 447              		.loc 3 71 45 is_stmt 0
 448              	#APP
 449              	# 71 "src/interruptRoutine.cpp" 1
  72              	                __asm__ volatile("sd a0, 80(s0)");
 450              		li a0, 0
 451              	# 0 "" 2
 452              		.loc 3 72 17 is_stmt 1
 453              		.loc 3 72 50 is_stmt 0
 454              	# 72 "src/interruptRoutine.cpp" 1
  73              	                TCB::dispatch();
 455              		sd a0, 80(s0)
 456              	# 0 "" 2
 457              		.loc 3 73 17 is_stmt 1
 458              		.loc 3 73 30 is_stmt 0
GAS LISTING /tmp/ccBwJVte.s 			page 12


 459              	#NO_APP
 460 01a8 97000000 		call	_ZN3TCB8dispatchEv@plt
 460      E7800000 
 461              	.LVL32:
  74:src/interruptRoutine.cpp ****                 break;
 462              		.loc 3 74 17 is_stmt 1
 463 01b0 6F000030 		j	.L28
 464              	.LVL33:
 465              	.L22:
  75:src/interruptRoutine.cpp ****             case 0x13:
 466              		.loc 3 75 13
  76:src/interruptRoutine.cpp ****                 //thread_dispatch
  77:src/interruptRoutine.cpp ****                 TCB::dispatch();
 467              		.loc 3 77 17
 468              		.loc 3 77 30 is_stmt 0
 469 01b4 97000000 		call	_ZN3TCB8dispatchEv@plt
 469      E7800000 
 470              	.LVL34:
  78:src/interruptRoutine.cpp ****                 break;
 471              		.loc 3 78 17 is_stmt 1
 472 01bc 6F00402F 		j	.L28
 473              	.LVL35:
 474              	.L21:
  79:src/interruptRoutine.cpp ****             case 0x14:
 475              		.loc 3 79 13
  80:src/interruptRoutine.cpp ****                 //thread_join
  81:src/interruptRoutine.cpp ****                 //a1 = rucka niti na koju tekuca nit treba da ceka
  82:src/interruptRoutine.cpp ****                 TCB::threadJoin((thread_t)a1);
 476              		.loc 3 82 17
 477              		.loc 3 82 32 is_stmt 0
 478 01c0 833784FB 		ld	a5,-72(s0)
 479 01c4 13850700 		mv	a0,a5
 480 01c8 97000000 		call	_ZN3TCB10threadJoinEPS_@plt
 480      E7800000 
 481              	.LVL36:
  83:src/interruptRoutine.cpp ****                 TCB::dispatch();
 482              		.loc 3 83 17 is_stmt 1
 483              		.loc 3 83 30 is_stmt 0
 484 01d0 97000000 		call	_ZN3TCB8dispatchEv@plt
 484      E7800000 
 485              	.LVL37:
  84:src/interruptRoutine.cpp ****                 break;
 486              		.loc 3 84 17 is_stmt 1
 487 01d8 6F00802D 		j	.L28
 488              	.LVL38:
 489              	.L20:
  85:src/interruptRoutine.cpp ****             case 0x21:
 490              		.loc 3 85 13
  86:src/interruptRoutine.cpp ****                 //sem_open
  87:src/interruptRoutine.cpp ****                 //a1 = pokazivac na rucku semafora, u koju se upisuje adresa semafora u memoriji
  88:src/interruptRoutine.cpp ****                 *((sem_t*)a1) = KSem::initSem((uint)a2);
 491              		.loc 3 88 17
 492              		.loc 3 88 46 is_stmt 0
 493 01dc 833704FB 		ld	a5,-80(s0)
 494 01e0 9B870700 		sext.w	a5,a5
 495              		.loc 3 88 17
 496 01e4 833484FB 		ld	s1,-72(s0)
GAS LISTING /tmp/ccBwJVte.s 			page 13


 497              		.loc 3 88 46
 498 01e8 13850700 		mv	a0,a5
 499 01ec 97000000 		call	_ZN4KSem7initSemEj@plt
 499      E7800000 
 500              	.LVL39:
 501 01f4 93070500 		mv	a5,a0
 502              		.loc 3 88 31
 503 01f8 23B0F400 		sd	a5,0(s1)
  89:src/interruptRoutine.cpp ****                 if (*((sem_t*)a1) != nullptr) {
 504              		.loc 3 89 17 is_stmt 1
 505              		.loc 3 89 21 is_stmt 0
 506 01fc 833784FB 		ld	a5,-72(s0)
 507 0200 83B70700 		ld	a5,0(a5)
 508              		.loc 3 89 17
 509 0204 63860700 		beqz	a5,.L32
  90:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, 0");
 510              		.loc 3 90 21 is_stmt 1
 511              		.loc 3 90 49 is_stmt 0
 512              	#APP
 513              	# 90 "src/interruptRoutine.cpp" 1
  91              	                } else {
 514              		li a0, 0
 515              	# 0 "" 2
 516              	#NO_APP
 517 020c 6F008000 		j	.L33
 518              	.L32:
  92:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, -1");
 519              		.loc 3 92 21 is_stmt 1
 520              		.loc 3 92 50 is_stmt 0
 521              	#APP
 522              	# 92 "src/interruptRoutine.cpp" 1
  93              	                }
 523              		li a0, -1
 524              	# 0 "" 2
 525              	#NO_APP
 526              	.L33:
  94:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 527              		.loc 3 94 17 is_stmt 1
 528              		.loc 3 94 50 is_stmt 0
 529              	#APP
 530              	# 94 "src/interruptRoutine.cpp" 1
  95              	                break;
 531              		sd a0, 80(s0)
 532              	# 0 "" 2
 533              		.loc 3 95 17 is_stmt 1
 534              	#NO_APP
 535 0218 6F008029 		j	.L28
 536              	.LVL40:
 537              	.L19:
  96:src/interruptRoutine.cpp ****             case 0x22:
 538              		.loc 3 96 13
  97:src/interruptRoutine.cpp ****                 //sem_close
  98:src/interruptRoutine.cpp ****                 //a1 = rucka semafora
  99:src/interruptRoutine.cpp ****                 KSem::closeSem((sem_t)a1);
 539              		.loc 3 99 17
 540              		.loc 3 99 31 is_stmt 0
 541 021c 833784FB 		ld	a5,-72(s0)
GAS LISTING /tmp/ccBwJVte.s 			page 14


 542 0220 13850700 		mv	a0,a5
 543 0224 97000000 		call	_ZN4KSem8closeSemEPS_@plt
 543      E7800000 
 544              	.LVL41:
 100:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 545              		.loc 3 100 17 is_stmt 1
 546              		.loc 3 100 50 is_stmt 0
 547              	#APP
 548              	# 100 "src/interruptRoutine.cpp" 1
 101              	                delete (sem_t)a1;
 549              		sd a0, 80(s0)
 550              	# 0 "" 2
 551              		.loc 3 101 17 is_stmt 1
 552              		.loc 3 101 24 is_stmt 0
 553              	#NO_APP
 554 0230 833484FB 		ld	s1,-72(s0)
 555              		.loc 3 101 33
 556 0234 63800426 		beqz	s1,.L50
 557              		.loc 3 101 31 discriminator 1
 558 0238 13850400 		mv	a0,s1
 559 023c 97000000 		call	_ZN4KSemD1Ev
 559      E7800000 
 560              	.LVL42:
 561 0244 13850400 		mv	a0,s1
 562 0248 97000000 		call	_ZN4KSemdlEPv@plt
 562      E7800000 
 563              	.LVL43:
 102:src/interruptRoutine.cpp ****                 break;
 564              		.loc 3 102 17 is_stmt 1 discriminator 1
 565 0250 6F004024 		j	.L50
 566              	.LVL44:
 567              	.L18:
 103:src/interruptRoutine.cpp ****             case 0x23:
 568              		.loc 3 103 13
 104:src/interruptRoutine.cpp ****                 //sem_wait
 105:src/interruptRoutine.cpp ****                 //a1 = rucka semafora
 106:src/interruptRoutine.cpp ****                 ((sem_t)a1)->wait();
 569              		.loc 3 106 17
 570              		.loc 3 106 34 is_stmt 0
 571 0254 833784FB 		ld	a5,-72(s0)
 572 0258 13850700 		mv	a0,a5
 573 025c 97000000 		call	_ZN4KSem4waitEv@plt
 573      E7800000 
 574              	.LVL45:
 107:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 575              		.loc 3 107 17 is_stmt 1
 576              		.loc 3 107 50 is_stmt 0
 577              	#APP
 578              	# 107 "src/interruptRoutine.cpp" 1
 108              	                break;
 579              		sd a0, 80(s0)
 580              	# 0 "" 2
 581              		.loc 3 108 17 is_stmt 1
 582              	#NO_APP
 583 0268 6F008024 		j	.L28
 584              	.LVL46:
 585              	.L17:
GAS LISTING /tmp/ccBwJVte.s 			page 15


 109:src/interruptRoutine.cpp ****             case 0x24:
 586              		.loc 3 109 13
 110:src/interruptRoutine.cpp ****                 //sem_signal
 111:src/interruptRoutine.cpp ****                 //a1 = rucka semafora
 112:src/interruptRoutine.cpp ****                 ((sem_t)a1)->signal();
 587              		.loc 3 112 17
 588              		.loc 3 112 36 is_stmt 0
 589 026c 833784FB 		ld	a5,-72(s0)
 590 0270 13850700 		mv	a0,a5
 591 0274 97000000 		call	_ZN4KSem6signalEv@plt
 591      E7800000 
 592              	.LVL47:
 113:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 593              		.loc 3 113 17 is_stmt 1
 594              		.loc 3 113 50 is_stmt 0
 595              	#APP
 596              	# 113 "src/interruptRoutine.cpp" 1
 114              	                break;
 597              		sd a0, 80(s0)
 598              	# 0 "" 2
 599              		.loc 3 114 17 is_stmt 1
 600              	#NO_APP
 601 0280 6F000023 		j	.L28
 602              	.LVL48:
 603              	.L16:
 115:src/interruptRoutine.cpp ****             case 0x31:
 604              		.loc 3 115 13
 116:src/interruptRoutine.cpp ****                 //time_sleep
 117:src/interruptRoutine.cpp ****                 //a1 = broj perioda tajmera na koji se uspavljuje tekuca nit
 118:src/interruptRoutine.cpp ****                 if ((time_t)a1 > 0) {
 605              		.loc 3 118 17
 606 0284 833784FB 		ld	a5,-72(s0)
 607 0288 63860700 		beqz	a5,.L35
 119:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, 0");
 608              		.loc 3 119 21
 609              		.loc 3 119 49 is_stmt 0
 610              	#APP
 611              	# 119 "src/interruptRoutine.cpp" 1
 120              	                } else {
 612              		li a0, 0
 613              	# 0 "" 2
 614              	#NO_APP
 615 0290 6F008000 		j	.L36
 616              	.L35:
 121:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, -1");
 617              		.loc 3 121 21 is_stmt 1
 618              		.loc 3 121 50 is_stmt 0
 619              	#APP
 620              	# 121 "src/interruptRoutine.cpp" 1
 122              	                }
 621              		li a0, -1
 622              	# 0 "" 2
 623              	#NO_APP
 624              	.L36:
 123:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 625              		.loc 3 123 17 is_stmt 1
 626              		.loc 3 123 50 is_stmt 0
GAS LISTING /tmp/ccBwJVte.s 			page 16


 627              	#APP
 628              	# 123 "src/interruptRoutine.cpp" 1
 124              	                if ((time_t)a1 > 0) {
 629              		sd a0, 80(s0)
 630              	# 0 "" 2
 631              		.loc 3 124 17 is_stmt 1
 632              	#NO_APP
 633 029c 833784FB 		ld	a5,-72(s0)
 634 02a0 638E071E 		beqz	a5,.L51
 125:src/interruptRoutine.cpp ****                     Scheduler::putToSleep(TCB::getRunning(), (time_t)a1);
 635              		.loc 3 125 21
 636              		.loc 3 125 42 is_stmt 0
 637 02a4 97000000 		call	_ZN3TCB10getRunningEv
 637      E7800000 
 638              	.LVL49:
 639 02ac 93070500 		mv	a5,a0
 640 02b0 833584FB 		ld	a1,-72(s0)
 641 02b4 13850700 		mv	a0,a5
 642 02b8 97000000 		call	_ZN9Scheduler10putToSleepEP3TCBm@plt
 642      E7800000 
 643              	.LVL50:
 126:src/interruptRoutine.cpp ****                     TCB::dispatch();
 644              		.loc 3 126 21 is_stmt 1
 645              		.loc 3 126 34 is_stmt 0
 646 02c0 97000000 		call	_ZN3TCB8dispatchEv@plt
 646      E7800000 
 647              	.LVL51:
 127:src/interruptRoutine.cpp ****                 }
 128:src/interruptRoutine.cpp ****                 break;
 648              		.loc 3 128 17 is_stmt 1
 649 02c8 6F00401D 		j	.L51
 650              	.LVL52:
 651              	.L15:
 129:src/interruptRoutine.cpp ****             case 0x41:
 652              		.loc 3 129 13
 130:src/interruptRoutine.cpp ****                 //getc
 131:src/interruptRoutine.cpp ****                 KConsole::kgetc();
 653              		.loc 3 131 17
 654              		.loc 3 131 32 is_stmt 0
 655 02cc 97000000 		call	_ZN8KConsole5kgetcEv@plt
 655      E7800000 
 656              	.LVL53:
 132:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 657              		.loc 3 132 17 is_stmt 1
 658              		.loc 3 132 50 is_stmt 0
 659              	#APP
 660              	# 132 "src/interruptRoutine.cpp" 1
 133              	                break;
 661              		sd a0, 80(s0)
 662              	# 0 "" 2
 663              		.loc 3 133 17 is_stmt 1
 664              	#NO_APP
 665 02d8 6F00801D 		j	.L28
 666              	.LVL54:
 667              	.L14:
 134:src/interruptRoutine.cpp ****             case 0x42:
 668              		.loc 3 134 13
GAS LISTING /tmp/ccBwJVte.s 			page 17


 135:src/interruptRoutine.cpp ****                 //putc
 136:src/interruptRoutine.cpp ****                 //a1 = karakter koji se upisuje u bafer za ispis na konzolu
 137:src/interruptRoutine.cpp ****                 KConsole::kputc((char)a1);
 669              		.loc 3 137 17
 670              		.loc 3 137 32 is_stmt 0
 671 02dc 833784FB 		ld	a5,-72(s0)
 672 02e0 93F7F70F 		andi	a5,a5,0xff
 673 02e4 13850700 		mv	a0,a5
 674 02e8 97000000 		call	_ZN8KConsole5kputcEc@plt
 674      E7800000 
 675              	.LVL55:
 138:src/interruptRoutine.cpp ****                 break;
 676              		.loc 3 138 17 is_stmt 1
 677 02f0 6F00001C 		j	.L28
 678              	.L12:
 139:src/interruptRoutine.cpp ****             case 0x43:
 679              		.loc 3 139 13
 140:src/interruptRoutine.cpp ****                 while (KConsole::getOutputHead() != KConsole::getOutputTail()) {
 680              		.loc 3 140 17
 681              		.loc 3 140 50
 682              		.loc 3 140 47 is_stmt 0
 683 02f4 97000000 		call	_ZN8KConsole13getOutputHeadEv
 683      E7800000 
 684              	.LVL56:
 685 02fc 93070500 		mv	a5,a0
 686 0300 93840700 		mv	s1,a5
 687              		.loc 3 140 76
 688 0304 97000000 		call	_ZN8KConsole13getOutputTailEv
 688      E7800000 
 689              	.LVL57:
 690 030c 93070500 		mv	a5,a0
 691              		.loc 3 140 50
 692 0310 13870400 		mv	a4,s1
 693 0314 B307F740 		sub	a5,a4,a5
 694 0318 B337F000 		snez	a5,a5
 695 031c 93F7F70F 		andi	a5,a5,0xff
 696 0320 63820718 		beqz	a5,.L52
 697              	.LBB30:
 141:src/interruptRoutine.cpp ****                     char c = KConsole::getFromOutput();
 698              		.loc 3 141 21 is_stmt 1
 699              		.loc 3 141 53 is_stmt 0
 700 0324 97000000 		call	_ZN8KConsole13getFromOutputEv@plt
 700      E7800000 
 701              	.LVL58:
 702 032c 93070500 		mv	a5,a0
 703 0330 A30BF4F8 		sb	a5,-105(s0)
 704              	.LVL59:
 705              	.L40:
 142:src/interruptRoutine.cpp ****                     while (!(KConsole::getSRvalue() & CONSOLE_TX_STATUS_BIT)) {}
 706              		.loc 3 142 21 is_stmt 1
 707              		.loc 3 142 28
 708              		.loc 3 142 50 is_stmt 0
 709 0334 97000000 		call	_ZN8KConsole10getSRvalueEv
 709      E7800000 
 710              	.LVL60:
 711 033c 93070500 		mv	a5,a0
 712              		.loc 3 142 53
GAS LISTING /tmp/ccBwJVte.s 			page 18


 713 0340 93F70702 		andi	a5,a5,32
 714              		.loc 3 142 28
 715 0344 93B71700 		seqz	a5,a5
 716 0348 93F7F70F 		andi	a5,a5,0xff
 717 034c 63840700 		beqz	a5,.L39
 718              		.loc 3 142 21
 719 0350 6FF05FFE 		j	.L40
 720              	.L39:
 143:src/interruptRoutine.cpp ****                     KConsole::setDRvalue(c);
 721              		.loc 3 143 21 is_stmt 1
 722              		.loc 3 143 41 is_stmt 0
 723 0354 834774F9 		lbu	a5,-105(s0)
 724 0358 13850700 		mv	a0,a5
 725 035c 97000000 		call	_ZN8KConsole10setDRvalueEc
 725      E7800000 
 726              	.LVL61:
 144:src/interruptRoutine.cpp ****                     sem_signal(KConsole::getOutputBufferHasSpace());
 727              		.loc 3 144 21 is_stmt 1
 728              		.loc 3 144 31 is_stmt 0
 729 0364 97000000 		call	_ZN8KConsole23getOutputBufferHasSpaceEv
 729      E7800000 
 730              	.LVL62:
 731 036c 93070500 		mv	a5,a0
 732 0370 13850700 		mv	a0,a5
 733 0374 97000000 		call	_Z10sem_signalP4KSem@plt
 733      E7800000 
 734              	.LVL63:
 735              	.LBE30:
 140:src/interruptRoutine.cpp ****                     char c = KConsole::getFromOutput();
 736              		.loc 3 140 17
 737 037c 6FF09FF7 		j	.L12
 738              	.LVL64:
 739              	.L27:
 145:src/interruptRoutine.cpp ****                 }
 146:src/interruptRoutine.cpp ****                 break;
 147:src/interruptRoutine.cpp ****             case 0x80:
 740              		.loc 3 147 13 is_stmt 1
 148:src/interruptRoutine.cpp ****                 //alloc thread
 149:src/interruptRoutine.cpp ****                 //a1 = pokazivac na rucku u koju upisujemo identifikator niti(adresa u memoriji)
 150:src/interruptRoutine.cpp ****                 //a2 = pokazivac na funkciju koju nit treba da izvrsava
 151:src/interruptRoutine.cpp ****                 //a3 = argumenti funkcije koju nit treba da izvrsava
 152:src/interruptRoutine.cpp ****                 //a4 = poslednja lokacija alociranog steka(najniza adresa)
 153:src/interruptRoutine.cpp ****                 *((thread_t*)a1) = TCB::createThread((TCB::Body)a2, (void*)a3, (uint64*)a4);
 741              		.loc 3 153 17
 742              		.loc 3 153 53 is_stmt 0
 743 0380 833704FB 		ld	a5,-80(s0)
 744 0384 033784FA 		ld	a4,-88(s0)
 745 0388 833604FA 		ld	a3,-96(s0)
 746              		.loc 3 153 17
 747 038c 833484FB 		ld	s1,-72(s0)
 748              		.loc 3 153 53
 749 0390 13860600 		mv	a2,a3
 750 0394 93050700 		mv	a1,a4
 751 0398 13850700 		mv	a0,a5
 752 039c 97000000 		call	_ZN3TCB12createThreadEPFvPvES0_Pm@plt
 752      E7800000 
 753              	.LVL65:
GAS LISTING /tmp/ccBwJVte.s 			page 19


 754 03a4 93070500 		mv	a5,a0
 755              		.loc 3 153 34
 756 03a8 23B0F400 		sd	a5,0(s1)
 154:src/interruptRoutine.cpp ****                 if (*((thread_t*)a1) != nullptr) {
 757              		.loc 3 154 17 is_stmt 1
 758              		.loc 3 154 21 is_stmt 0
 759 03ac 833784FB 		ld	a5,-72(s0)
 760 03b0 83B70700 		ld	a5,0(a5)
 761              		.loc 3 154 17
 762 03b4 63860700 		beqz	a5,.L41
 155:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, 0");
 763              		.loc 3 155 21 is_stmt 1
 764              		.loc 3 155 49 is_stmt 0
 765              	#APP
 766              	# 155 "src/interruptRoutine.cpp" 1
 156              	                } else {
 767              		li a0, 0
 768              	# 0 "" 2
 769              	#NO_APP
 770 03bc 6F008000 		j	.L42
 771              	.L41:
 157:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, -1");
 772              		.loc 3 157 21 is_stmt 1
 773              		.loc 3 157 50 is_stmt 0
 774              	#APP
 775              	# 157 "src/interruptRoutine.cpp" 1
 158              	                }
 776              		li a0, -1
 777              	# 0 "" 2
 778              	#NO_APP
 779              	.L42:
 159:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 780              		.loc 3 159 17 is_stmt 1
 781              		.loc 3 159 50 is_stmt 0
 782              	#APP
 783              	# 159 "src/interruptRoutine.cpp" 1
 160              	                break;
 784              		sd a0, 80(s0)
 785              	# 0 "" 2
 786              		.loc 3 160 17 is_stmt 1
 787              	#NO_APP
 788 03c8 6F00800E 		j	.L28
 789              	.LVL66:
 790              	.L9:
 161:src/interruptRoutine.cpp ****             case 0x81:
 791              		.loc 3 161 13
 162:src/interruptRoutine.cpp ****                 //start thread
 163:src/interruptRoutine.cpp ****                 //a1 = rucka niti koja se stavlja u scheduler
 164:src/interruptRoutine.cpp ****                 if (((thread_t)a1)->getBody() != (TCB::Body)main) {
 792              		.loc 3 164 17
 793              		.loc 3 164 44 is_stmt 0
 794 03cc 833784FB 		ld	a5,-72(s0)
 795 03d0 13850700 		mv	a0,a5
 796 03d4 97000000 		call	_ZN3TCB7getBodyEv
 796      E7800000 
 797              	.LVL67:
 798 03dc 13070500 		mv	a4,a0
GAS LISTING /tmp/ccBwJVte.s 			page 20


 799              		.loc 3 164 47
 800 03e0 97070000 		la	a5,main
 800      83B70700 
 801 03e8 B307F740 		sub	a5,a4,a5
 802 03ec B337F000 		snez	a5,a5
 803 03f0 93F7F70F 		andi	a5,a5,0xff
 804              		.loc 3 164 17
 805 03f4 638C070A 		beqz	a5,.L53
 165:src/interruptRoutine.cpp ****                     Scheduler::put((thread_t)a1);
 806              		.loc 3 165 21 is_stmt 1
 807              		.loc 3 165 35 is_stmt 0
 808 03f8 833784FB 		ld	a5,-72(s0)
 809 03fc 13850700 		mv	a0,a5
 810 0400 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 810      E7800000 
 811              	.LVL68:
 166:src/interruptRoutine.cpp ****                 }
 167:src/interruptRoutine.cpp ****                 break;
 812              		.loc 3 167 17 is_stmt 1
 813 0408 6F00400A 		j	.L53
 814              	.LVL69:
 815              	.L10:
 168:src/interruptRoutine.cpp ****             default:
 816              		.loc 3 168 13
 169:src/interruptRoutine.cpp ****                 printString("\nNepostojeci op code: ");
 817              		.loc 3 169 17
 818              		.loc 3 169 28 is_stmt 0
 819 040c 17050000 		lla	a0,.LC0
 819      13050500 
 820 0414 97000000 		call	_Z11printStringPKc@plt
 820      E7800000 
 821              	.LVL70:
 170:src/interruptRoutine.cpp ****                 printInt(a0);
 822              		.loc 3 170 17 is_stmt 1
 823              		.loc 3 170 25 is_stmt 0
 824 041c 833704FC 		ld	a5,-64(s0)
 825 0420 9B870700 		sext.w	a5,a5
 826 0424 13060000 		li	a2,0
 827 0428 9305A000 		li	a1,10
 828 042c 13850700 		mv	a0,a5
 829 0430 97000000 		call	_Z8printIntiii@plt
 829      E7800000 
 830              	.LVL71:
 171:src/interruptRoutine.cpp ****                 printString("\nscause: ");
 831              		.loc 3 171 17 is_stmt 1
 832              		.loc 3 171 28 is_stmt 0
 833 0438 17050000 		lla	a0,.LC1
 833      13050500 
 834 0440 97000000 		call	_Z11printStringPKc@plt
 834      E7800000 
 835              	.LVL72:
 172:src/interruptRoutine.cpp ****                 printInt(scause);
 836              		.loc 3 172 17 is_stmt 1
 837              		.loc 3 172 25 is_stmt 0
 838 0448 833784FD 		ld	a5,-40(s0)
 839 044c 9B870700 		sext.w	a5,a5
 840 0450 13060000 		li	a2,0
GAS LISTING /tmp/ccBwJVte.s 			page 21


 841 0454 9305A000 		li	a1,10
 842 0458 13850700 		mv	a0,a5
 843 045c 97000000 		call	_Z8printIntiii@plt
 843      E7800000 
 844              	.LVL73:
 173:src/interruptRoutine.cpp ****                 printString("\nsepc: ");
 845              		.loc 3 173 17 is_stmt 1
 846              		.loc 3 173 28 is_stmt 0
 847 0464 17050000 		lla	a0,.LC2
 847      13050500 
 848 046c 97000000 		call	_Z11printStringPKc@plt
 848      E7800000 
 849              	.LVL74:
 174:src/interruptRoutine.cpp ****                 printInt(sepc);
 850              		.loc 3 174 17 is_stmt 1
 851              		.loc 3 174 25 is_stmt 0
 852 0474 833704FD 		ld	a5,-48(s0)
 853 0478 9B870700 		sext.w	a5,a5
 854 047c 13060000 		li	a2,0
 855 0480 9305A000 		li	a1,10
 856 0484 13850700 		mv	a0,a5
 857 0488 97000000 		call	_Z8printIntiii@plt
 857      E7800000 
 858              	.LVL75:
 175:src/interruptRoutine.cpp ****                 break;
 859              		.loc 3 175 17 is_stmt 1
 860 0490 6F000002 		j	.L28
 861              	.L50:
 102:src/interruptRoutine.cpp ****             case 0x23:
 862              		.loc 3 102 17 is_stmt 0
 863 0494 13000000 		nop
 864 0498 6F008001 		j	.L28
 865              	.L51:
 128:src/interruptRoutine.cpp ****             case 0x41:
 866              		.loc 3 128 17
 867 049c 13000000 		nop
 868 04a0 6F000001 		j	.L28
 869              	.L52:
 146:src/interruptRoutine.cpp ****             case 0x80:
 870              		.loc 3 146 17
 871 04a4 13000000 		nop
 872 04a8 6F008000 		j	.L28
 873              	.L53:
 167:src/interruptRoutine.cpp ****             default:
 874              		.loc 3 167 17
 875 04ac 13000000 		nop
 876              	.L28:
 877              	.LBE29:
 878              	.LBE28:
 176:src/interruptRoutine.cpp ****         }
 177:src/interruptRoutine.cpp ****         //sepc pokazuje na ecall instrukciju, treba preci na sledecu instrukciju
 178:src/interruptRoutine.cpp ****         sepc += 4;
 879              		.loc 3 178 9 is_stmt 1
 880              		.loc 3 178 14 is_stmt 0
 881 04b0 833704FD 		ld	a5,-48(s0)
 882 04b4 93874700 		addi	a5,a5,4
 883 04b8 2338F4FC 		sd	a5,-48(s0)
GAS LISTING /tmp/ccBwJVte.s 			page 22


 884              	.LVL76:
 179:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 885              		.loc 3 179 9 is_stmt 1
 886              		.loc 3 179 66 is_stmt 0
 887 04bc 833704FD 		ld	a5,-48(s0)
 888              	#APP
 889              	# 179 "src/interruptRoutine.cpp" 1
 180              	        __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 890              		csrw sepc, a5
 891              	# 0 "" 2
 892              		.loc 3 180 9 is_stmt 1
 893              		.loc 3 180 71 is_stmt 0
 894              	#NO_APP
 895 04c4 833784FC 		ld	a5,-56(s0)
 896              	.LVL77:
 897              	#APP
 898              	# 180 "src/interruptRoutine.cpp" 1
 181              	    } else if (scause == 0x8000000000000009) {
 899              		csrw sstatus, a5
 900              	# 0 "" 2
 901              	#NO_APP
 902              	.LBE27:
 903 04cc 13000000 		nop
 904              	.LBE26:
 182:src/interruptRoutine.cpp ****         //spoljasnji hardverski prekid (od konzole)
 183:src/interruptRoutine.cpp ****         uint64 irq = plic_claim();
 184:src/interruptRoutine.cpp ****         if (irq == CONSOLE_IRQ) {
 185:src/interruptRoutine.cpp ****             if (KConsole::getSRvalue() & CONSOLE_RX_STATUS_BIT) {
 186:src/interruptRoutine.cpp ****                 //upisuje karakter sa ulaza(otkucani) u ulazni bafer KConsole
 187:src/interruptRoutine.cpp ****                 KConsole::placeInInput(KConsole::getDRvalue());
 188:src/interruptRoutine.cpp ****             }
 189:src/interruptRoutine.cpp ****         } else {
 190:src/interruptRoutine.cpp ****             printString("Neki drugi prekid\n");
 191:src/interruptRoutine.cpp ****         }
 192:src/interruptRoutine.cpp ****         plic_complete(irq);
 193:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 194:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 195:src/interruptRoutine.cpp ****         Riscv::mc_sip(Riscv::SIP_SEIP);
 196:src/interruptRoutine.cpp ****     } else if (scause == 0x8000000000000001) {
 197:src/interruptRoutine.cpp ****         //prekid od tajmera
 198:src/interruptRoutine.cpp ****         Scheduler::wake();
 199:src/interruptRoutine.cpp ****         TCB::getRunningTimeSlice()++;
 200:src/interruptRoutine.cpp ****         if (TCB::getRunningTimeSlice() >= TCB::getRunning()->getTimeSlice()) {
 201:src/interruptRoutine.cpp ****             TCB::dispatch();
 202:src/interruptRoutine.cpp ****         }
 203:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 204:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 205:src/interruptRoutine.cpp ****         Riscv::mc_sip(Riscv::SIP_SSIP);
 206:src/interruptRoutine.cpp ****     } else {
 207:src/interruptRoutine.cpp ****         printString("\nGreska u prekidnoj rutini\n");
 208:src/interruptRoutine.cpp ****         printString("scause: ");
 209:src/interruptRoutine.cpp ****         printInt(scause);
 210:src/interruptRoutine.cpp ****         printString("\nsepc: ");
 211:src/interruptRoutine.cpp ****         printInt(sepc);
 212:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 213:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 214:src/interruptRoutine.cpp ****     }
GAS LISTING /tmp/ccBwJVte.s 			page 23


 215:src/interruptRoutine.cpp **** }...
 905              		.loc 3 215 1
 906 04d0 6F00001C 		j	.L54
 907              	.LVL78:
 908              	.L8:
 909              	.LBB38:
 910              	.LBB31:
 181:src/interruptRoutine.cpp ****     } else if (scause == 0x8000000000000009) {
 911              		.loc 3 181 12 is_stmt 1
 912              	.LBB32:
 913 04d4 033784FD 		ld	a4,-40(s0)
 914              	.LVL79:
 915 04d8 9307F0FF 		li	a5,-1
 916 04dc 9397F703 		slli	a5,a5,63
 917 04e0 93879700 		addi	a5,a5,9
 918 04e4 631EF708 		bne	a4,a5,.L45
 919              	.LBB33:
 183:src/interruptRoutine.cpp ****         uint64 irq = plic_claim();
 920              		.loc 3 183 9
 183:src/interruptRoutine.cpp ****         uint64 irq = plic_claim();
 921              		.loc 3 183 32 is_stmt 0
 922 04e8 97000000 		call	plic_claim@plt
 922      E7800000 
 923              	.LVL80:
 924 04f0 93070500 		mv	a5,a0
 183:src/interruptRoutine.cpp ****         uint64 irq = plic_claim();
 925              		.loc 3 183 33
 926 04f4 233CF4F8 		sd	a5,-104(s0)
 927              	.LVL81:
 184:src/interruptRoutine.cpp ****         if (irq == CONSOLE_IRQ) {
 928              		.loc 3 184 9 is_stmt 1
 929 04f8 033784F9 		ld	a4,-104(s0)
 930 04fc 9307A000 		li	a5,10
 931 0500 631EF702 		bne	a4,a5,.L46
 185:src/interruptRoutine.cpp ****             if (KConsole::getSRvalue() & CONSOLE_RX_STATUS_BIT) {
 932              		.loc 3 185 13
 185:src/interruptRoutine.cpp ****             if (KConsole::getSRvalue() & CONSOLE_RX_STATUS_BIT) {
 933              		.loc 3 185 37 is_stmt 0
 934 0504 97000000 		call	_ZN8KConsole10getSRvalueEv
 934      E7800000 
 935              	.LVL82:
 936 050c 93070500 		mv	a5,a0
 185:src/interruptRoutine.cpp ****             if (KConsole::getSRvalue() & CONSOLE_RX_STATUS_BIT) {
 937              		.loc 3 185 40
 938 0510 93F71700 		andi	a5,a5,1
 185:src/interruptRoutine.cpp ****             if (KConsole::getSRvalue() & CONSOLE_RX_STATUS_BIT) {
 939              		.loc 3 185 63
 940 0514 B337F000 		snez	a5,a5
 941 0518 93F7F70F 		andi	a5,a5,0xff
 185:src/interruptRoutine.cpp ****             if (KConsole::getSRvalue() & CONSOLE_RX_STATUS_BIT) {
 942              		.loc 3 185 13
 943 051c 63880702 		beqz	a5,.L47
 187:src/interruptRoutine.cpp ****                 KConsole::placeInInput(KConsole::getDRvalue());
 944              		.loc 3 187 17 is_stmt 1
 187:src/interruptRoutine.cpp ****                 KConsole::placeInInput(KConsole::getDRvalue());
 945              		.loc 3 187 60 is_stmt 0
 946 0520 97000000 		call	_ZN8KConsole10getDRvalueEv
GAS LISTING /tmp/ccBwJVte.s 			page 24


 946      E7800000 
 947              	.LVL83:
 948 0528 93070500 		mv	a5,a0
 187:src/interruptRoutine.cpp ****                 KConsole::placeInInput(KConsole::getDRvalue());
 949              		.loc 3 187 39
 950 052c 13850700 		mv	a0,a5
 951 0530 97000000 		call	_ZN8KConsole12placeInInputEc@plt
 951      E7800000 
 952              	.LVL84:
 953 0538 6F004001 		j	.L47
 954              	.LVL85:
 955              	.L46:
 190:src/interruptRoutine.cpp ****             printString("Neki drugi prekid\n");
 956              		.loc 3 190 13 is_stmt 1
 190:src/interruptRoutine.cpp ****             printString("Neki drugi prekid\n");
 957              		.loc 3 190 24 is_stmt 0
 958 053c 17050000 		lla	a0,.LC3
 958      13050500 
 959              	.LVL86:
 960 0544 97000000 		call	_Z11printStringPKc@plt
 960      E7800000 
 961              	.LVL87:
 962              	.L47:
 192:src/interruptRoutine.cpp ****         plic_complete(irq);
 963              		.loc 3 192 9 is_stmt 1
 192:src/interruptRoutine.cpp ****         plic_complete(irq);
 964              		.loc 3 192 22 is_stmt 0
 965 054c 833784F9 		ld	a5,-104(s0)
 966 0550 9B870700 		sext.w	a5,a5
 967 0554 13850700 		mv	a0,a5
 968 0558 97000000 		call	plic_complete@plt
 968      E7800000 
 969              	.LVL88:
 193:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 970              		.loc 3 193 9 is_stmt 1
 193:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 971              		.loc 3 193 66 is_stmt 0
 972 0560 833704FD 		ld	a5,-48(s0)
 973              	#APP
 974              	# 193 "src/interruptRoutine.cpp" 1
 194:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 975              		csrw sepc, a5
 976              	# 0 "" 2
 977              		.loc 3 194 9 is_stmt 1
 194:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 978              		.loc 3 194 71 is_stmt 0
 979              	#NO_APP
 980 0568 833784FC 		ld	a5,-56(s0)
 981              	#APP
 982              	# 194 "src/interruptRoutine.cpp" 1
 195:src/interruptRoutine.cpp ****         Riscv::mc_sip(Riscv::SIP_SEIP);
 983              		csrw sstatus, a5
 984              	# 0 "" 2
 985              		.loc 3 195 9 is_stmt 1
 195:src/interruptRoutine.cpp ****         Riscv::mc_sip(Riscv::SIP_SEIP);
 986              		.loc 3 195 22 is_stmt 0
 987              	#NO_APP
GAS LISTING /tmp/ccBwJVte.s 			page 25


 988 0570 13050020 		li	a0,512
 989 0574 97000000 		call	_ZN5Riscv6mc_sipEm
 989      E7800000 
 990              	.LVL89:
 991              	.LBE33:
 992              	.LBE32:
 993              	.LBE31:
 994              	.LBE38:
 995              		.loc 3 215 1
 996 057c 6F004011 		j	.L54
 997              	.LVL90:
 998              	.L45:
 999              	.LBB39:
 1000              	.LBB36:
 1001              	.LBB34:
 196:src/interruptRoutine.cpp ****     } else if (scause == 0x8000000000000001) {
 1002              		.loc 3 196 12 is_stmt 1
 1003 0580 033784FD 		ld	a4,-40(s0)
 1004 0584 9307F0FF 		li	a5,-1
 1005 0588 9397F703 		slli	a5,a5,63
 1006 058c 93871700 		addi	a5,a5,1
 1007 0590 6314F708 		bne	a4,a5,.L48
 198:src/interruptRoutine.cpp ****         Scheduler::wake();
 1008              		.loc 3 198 9
 198:src/interruptRoutine.cpp ****         Scheduler::wake();
 1009              		.loc 3 198 24 is_stmt 0
 1010 0594 97000000 		call	_ZN9Scheduler4wakeEv@plt
 1010      E7800000 
 1011              	.LVL91:
 199:src/interruptRoutine.cpp ****         TCB::getRunningTimeSlice()++;
 1012              		.loc 3 199 9 is_stmt 1
 199:src/interruptRoutine.cpp ****         TCB::getRunningTimeSlice()++;
 1013              		.loc 3 199 34 is_stmt 0
 1014 059c 97000000 		call	_ZN3TCB19getRunningTimeSliceEv
 1014      E7800000 
 1015              	.LVL92:
 1016 05a4 93070500 		mv	a5,a0
 199:src/interruptRoutine.cpp ****         TCB::getRunningTimeSlice()++;
 1017              		.loc 3 199 33
 1018 05a8 03B70700 		ld	a4,0(a5)
 199:src/interruptRoutine.cpp ****         TCB::getRunningTimeSlice()++;
 1019              		.loc 3 199 35
 1020 05ac 13071700 		addi	a4,a4,1
 1021 05b0 23B0E700 		sd	a4,0(a5)
 200:src/interruptRoutine.cpp ****         if (TCB::getRunningTimeSlice() >= TCB::getRunning()->getTimeSlice()) {
 1022              		.loc 3 200 9 is_stmt 1
 200:src/interruptRoutine.cpp ****         if (TCB::getRunningTimeSlice() >= TCB::getRunning()->getTimeSlice()) {
 1023              		.loc 3 200 38 is_stmt 0
 1024 05b4 97000000 		call	_ZN3TCB19getRunningTimeSliceEv
 1024      E7800000 
 1025              	.LVL93:
 1026 05bc 93070500 		mv	a5,a0
 200:src/interruptRoutine.cpp ****         if (TCB::getRunningTimeSlice() >= TCB::getRunning()->getTimeSlice()) {
 1027              		.loc 3 200 37
 1028 05c0 83B40700 		ld	s1,0(a5)
 200:src/interruptRoutine.cpp ****         if (TCB::getRunningTimeSlice() >= TCB::getRunning()->getTimeSlice()) {
 1029              		.loc 3 200 74
GAS LISTING /tmp/ccBwJVte.s 			page 26


 1030 05c4 97000000 		call	_ZN3TCB10getRunningEv
 1030      E7800000 
 1031              	.LVL94:
 1032 05cc 93070500 		mv	a5,a0
 1033 05d0 13850700 		mv	a0,a5
 1034 05d4 97000000 		call	_ZN3TCB12getTimeSliceEv
 1034      E7800000 
 1035              	.LVL95:
 1036 05dc 93070500 		mv	a5,a0
 200:src/interruptRoutine.cpp ****         if (TCB::getRunningTimeSlice() >= TCB::getRunning()->getTimeSlice()) {
 1037              		.loc 3 200 40
 1038 05e0 B3B7F400 		sltu	a5,s1,a5
 1039 05e4 93C71700 		xori	a5,a5,1
 1040 05e8 93F7F70F 		andi	a5,a5,0xff
 200:src/interruptRoutine.cpp ****         if (TCB::getRunningTimeSlice() >= TCB::getRunning()->getTimeSlice()) {
 1041              		.loc 3 200 9
 1042 05ec 63860700 		beqz	a5,.L49
 201:src/interruptRoutine.cpp ****             TCB::dispatch();
 1043              		.loc 3 201 13 is_stmt 1
 201:src/interruptRoutine.cpp ****             TCB::dispatch();
 1044              		.loc 3 201 26 is_stmt 0
 1045 05f0 97000000 		call	_ZN3TCB8dispatchEv@plt
 1045      E7800000 
 1046              	.LVL96:
 1047              	.L49:
 203:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 1048              		.loc 3 203 9 is_stmt 1
 203:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 1049              		.loc 3 203 66 is_stmt 0
 1050 05f8 833704FD 		ld	a5,-48(s0)
 1051              	#APP
 1052              	# 203 "src/interruptRoutine.cpp" 1
 204:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 1053              		csrw sepc, a5
 1054              	# 0 "" 2
 1055              		.loc 3 204 9 is_stmt 1
 204:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 1056              		.loc 3 204 71 is_stmt 0
 1057              	#NO_APP
 1058 0600 833784FC 		ld	a5,-56(s0)
 1059              	#APP
 1060              	# 204 "src/interruptRoutine.cpp" 1
 205:src/interruptRoutine.cpp ****         Riscv::mc_sip(Riscv::SIP_SSIP);
 1061              		csrw sstatus, a5
 1062              	# 0 "" 2
 1063              		.loc 3 205 9 is_stmt 1
 205:src/interruptRoutine.cpp ****         Riscv::mc_sip(Riscv::SIP_SSIP);
 1064              		.loc 3 205 22 is_stmt 0
 1065              	#NO_APP
 1066 0608 13052000 		li	a0,2
 1067 060c 97000000 		call	_ZN5Riscv6mc_sipEm
 1067      E7800000 
 1068              	.LVL97:
 1069              	.LBE34:
 1070              	.LBE36:
 1071              	.LBE39:
 1072              		.loc 3 215 1
GAS LISTING /tmp/ccBwJVte.s 			page 27


 1073 0614 6F00C007 		j	.L54
 1074              	.LVL98:
 1075              	.L48:
 1076              	.LBB40:
 1077              	.LBB37:
 1078              	.LBB35:
 207:src/interruptRoutine.cpp ****         printString("\nGreska u prekidnoj rutini\n");
 1079              		.loc 3 207 9 is_stmt 1
 207:src/interruptRoutine.cpp ****         printString("\nGreska u prekidnoj rutini\n");
 1080              		.loc 3 207 20 is_stmt 0
 1081 0618 17050000 		lla	a0,.LC4
 1081      13050500 
 1082 0620 97000000 		call	_Z11printStringPKc@plt
 1082      E7800000 
 1083              	.LVL99:
 208:src/interruptRoutine.cpp ****         printString("scause: ");
 1084              		.loc 3 208 9 is_stmt 1
 208:src/interruptRoutine.cpp ****         printString("scause: ");
 1085              		.loc 3 208 20 is_stmt 0
 1086 0628 17050000 		lla	a0,.LC5
 1086      13050500 
 1087 0630 97000000 		call	_Z11printStringPKc@plt
 1087      E7800000 
 1088              	.LVL100:
 209:src/interruptRoutine.cpp ****         printInt(scause);
 1089              		.loc 3 209 9 is_stmt 1
 209:src/interruptRoutine.cpp ****         printInt(scause);
 1090              		.loc 3 209 17 is_stmt 0
 1091 0638 833784FD 		ld	a5,-40(s0)
 1092 063c 9B870700 		sext.w	a5,a5
 1093 0640 13060000 		li	a2,0
 1094 0644 9305A000 		li	a1,10
 1095 0648 13850700 		mv	a0,a5
 1096 064c 97000000 		call	_Z8printIntiii@plt
 1096      E7800000 
 1097              	.LVL101:
 210:src/interruptRoutine.cpp ****         printString("\nsepc: ");
 1098              		.loc 3 210 9 is_stmt 1
 210:src/interruptRoutine.cpp ****         printString("\nsepc: ");
 1099              		.loc 3 210 20 is_stmt 0
 1100 0654 17050000 		lla	a0,.LC2
 1100      13050500 
 1101 065c 97000000 		call	_Z11printStringPKc@plt
 1101      E7800000 
 1102              	.LVL102:
 211:src/interruptRoutine.cpp ****         printInt(sepc);
 1103              		.loc 3 211 9 is_stmt 1
 211:src/interruptRoutine.cpp ****         printInt(sepc);
 1104              		.loc 3 211 17 is_stmt 0
 1105 0664 833704FD 		ld	a5,-48(s0)
 1106 0668 9B870700 		sext.w	a5,a5
 1107 066c 13060000 		li	a2,0
 1108 0670 9305A000 		li	a1,10
 1109 0674 13850700 		mv	a0,a5
 1110 0678 97000000 		call	_Z8printIntiii@plt
 1110      E7800000 
 1111              	.LVL103:
GAS LISTING /tmp/ccBwJVte.s 			page 28


 212:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 1112              		.loc 3 212 9 is_stmt 1
 212:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 1113              		.loc 3 212 66 is_stmt 0
 1114 0680 833704FD 		ld	a5,-48(s0)
 1115              	#APP
 1116              	# 212 "src/interruptRoutine.cpp" 1
 213:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 1117              		csrw sepc, a5
 1118              	# 0 "" 2
 1119              		.loc 3 213 9 is_stmt 1
 213:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 1120              		.loc 3 213 71 is_stmt 0
 1121              	#NO_APP
 1122 0688 833784FC 		ld	a5,-56(s0)
 1123              	#APP
 1124              	# 213 "src/interruptRoutine.cpp" 1
 1125              		csrw sstatus, a5
 1126              	# 0 "" 2
 1127              	#NO_APP
 1128              	.L54:
 1129              	.LBE35:
 1130              	.LBE37:
 1131              	.LBE40:
 1132              		.loc 3 215 1
 1133 0690 13000000 		nop
 1134 0694 83308106 		ld	ra,104(sp)
 1135              		.cfi_restore 1
 1136 0698 03340106 		ld	s0,96(sp)
 1137              		.cfi_restore 8
 1138              		.cfi_def_cfa 2, 112
 1139              	.LVL104:
 1140 069c 83348105 		ld	s1,88(sp)
 1141              		.cfi_restore 9
 1142 06a0 13010107 		addi	sp,sp,112
 1143              		.cfi_def_cfa_offset 0
 1144              	.LVL105:
 1145 06a4 67800000 		jr	ra
 1146              		.cfi_endproc
 1147              	.LFE58:
 1149              		.section	.text._ZN5Riscv6mc_sipEm,"axG",@progbits,_ZN5Riscv6mc_sipEm,comdat
 1150              		.align	2
 1151              		.weak	_ZN5Riscv6mc_sipEm
 1153              	_ZN5Riscv6mc_sipEm:
 1154              	.LFB7:
 1155              		.file 4 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 5/17/23.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJEKAT2023_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJEKAT2023_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** class Riscv {
  11:src/../h/Riscv.hpp **** public:
GAS LISTING /tmp/ccBwJVte.s 			page 29


  12:src/../h/Riscv.hpp **** 
  13:src/../h/Riscv.hpp **** 	static void returnFromInterrupt();
  14:src/../h/Riscv.hpp **** 
  15:src/../h/Riscv.hpp **** 	//read scause
  16:src/../h/Riscv.hpp **** 	static uint64 r_scause();
  17:src/../h/Riscv.hpp **** 
  18:src/../h/Riscv.hpp **** 	//write scause
  19:src/../h/Riscv.hpp **** 	static void w_scause(uint64 scause);
  20:src/../h/Riscv.hpp **** 
  21:src/../h/Riscv.hpp **** 	//read sepc
  22:src/../h/Riscv.hpp **** 	static uint64 r_sepc();
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp **** 	//write sepc
  25:src/../h/Riscv.hpp **** 	static void w_sepc(uint64 sepc);
  26:src/../h/Riscv.hpp **** 
  27:src/../h/Riscv.hpp **** 	//read stvec
  28:src/../h/Riscv.hpp **** 	static uint64 r_stvec();
  29:src/../h/Riscv.hpp **** 
  30:src/../h/Riscv.hpp **** 	//write stvec
  31:src/../h/Riscv.hpp **** 	static void w_stvec(uint64 stvec);
  32:src/../h/Riscv.hpp **** 
  33:src/../h/Riscv.hpp **** 	enum BitMaskSip {
  34:src/../h/Riscv.hpp **** 		//postoji zahtev za softverski prekid
  35:src/../h/Riscv.hpp **** 		SIP_SSIP = (1 << 1),
  36:src/../h/Riscv.hpp **** 		//postoji prekid od tajmera
  37:src/../h/Riscv.hpp **** 		SIP_STIP = (1 << 5),
  38:src/../h/Riscv.hpp **** 		//postoji zahtev za spoljasnji hardverski prekid
  39:src/../h/Riscv.hpp **** 		SIP_SEIP = (1 << 9)
  40:src/../h/Riscv.hpp **** 	};
  41:src/../h/Riscv.hpp **** 
  42:src/../h/Riscv.hpp **** 	//mask set sip
  43:src/../h/Riscv.hpp **** 	static void ms_sip(uint64 mask);
  44:src/../h/Riscv.hpp **** 
  45:src/../h/Riscv.hpp **** 	//mask clear sip
  46:src/../h/Riscv.hpp **** 	static void mc_sip(uint64 mask);
  47:src/../h/Riscv.hpp **** 
  48:src/../h/Riscv.hpp **** 	//read sip
  49:src/../h/Riscv.hpp **** 	static uint64 r_sip();
  50:src/../h/Riscv.hpp **** 
  51:src/../h/Riscv.hpp **** 	//write sip
  52:src/../h/Riscv.hpp **** 	static void w_sip(uint64 sip);
  53:src/../h/Riscv.hpp **** 
  54:src/../h/Riscv.hpp **** 	//kada se pozove sret, SIE dobija vrednost SPIE, SPIE se postavlja na 1,
  55:src/../h/Riscv.hpp **** 	//rezim se postavlja na osnovu SPP bita, SPP se postavlja na 0
  56:src/../h/Riscv.hpp **** 	enum BitMaskSstatus {
  57:src/../h/Riscv.hpp **** 		//1 - dozvoljeni prekidi; 0- nedozvoljeni prekidi; igonrise se u korisnickom rezimu
  58:src/../h/Riscv.hpp **** 		SSTATUS_SIE = (1 << 1),
  59:src/../h/Riscv.hpp **** 		//prethodna vrednost bita SIE
  60:src/../h/Riscv.hpp **** 		SSTATUS_SPIE = (1 << 5),
  61:src/../h/Riscv.hpp **** 		//iz kog rezima se desio skok; 0 - iz korisnickog; 1 - iz sistemskog
  62:src/../h/Riscv.hpp **** 		SSTATUS_SPP = (1 << 8)
  63:src/../h/Riscv.hpp **** 	};
  64:src/../h/Riscv.hpp **** 
  65:src/../h/Riscv.hpp **** 	//mask set sstatus
  66:src/../h/Riscv.hpp **** 	static void ms_sstatus(uint64 mask);
  67:src/../h/Riscv.hpp **** 
  68:src/../h/Riscv.hpp **** 	//mask clear sstatus
GAS LISTING /tmp/ccBwJVte.s 			page 30


  69:src/../h/Riscv.hpp **** 	static void mc_sstatus(uint64 mask);
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp **** 	//read sstatus
  72:src/../h/Riscv.hpp **** 	static uint64 r_sstatus();
  73:src/../h/Riscv.hpp **** 
  74:src/../h/Riscv.hpp **** 	//write sstatus
  75:src/../h/Riscv.hpp **** 	static void w_sstatus(uint64 sstatus);
  76:src/../h/Riscv.hpp **** 
  77:src/../h/Riscv.hpp **** 	//upisuje kod sistemskog poziva u registar a0
  78:src/../h/Riscv.hpp **** 	static void loadOpCode(uint64 opCode);
  79:src/../h/Riscv.hpp **** 
  80:src/../h/Riscv.hpp **** };
  81:src/../h/Riscv.hpp **** 
  82:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause() {
  83:src/../h/Riscv.hpp **** 	uint64 volatile scause;
  84:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[scause], scause": [scause] "=r"(scause));
  85:src/../h/Riscv.hpp **** 	return scause;
  86:src/../h/Riscv.hpp **** }
  87:src/../h/Riscv.hpp **** 
  88:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
  89:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw scause, %[scause]": :[scause] "r"(scause));
  90:src/../h/Riscv.hpp **** }
  91:src/../h/Riscv.hpp **** 
  92:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc() {
  93:src/../h/Riscv.hpp **** 	uint64 volatile sepc;
  94:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[sepc], sepc": [sepc] "=r"(sepc));
  95:src/../h/Riscv.hpp **** 	return sepc;
  96:src/../h/Riscv.hpp **** }
  97:src/../h/Riscv.hpp **** 
  98:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
  99:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 100:src/../h/Riscv.hpp **** }
 101:src/../h/Riscv.hpp **** 
 102:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec() {
 103:src/../h/Riscv.hpp **** 	uint64 volatile stvec;
 104:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[stvec], stvec": [stvec] "=r"(stvec));
 105:src/../h/Riscv.hpp **** 	return stvec;
 106:src/../h/Riscv.hpp **** }
 107:src/../h/Riscv.hpp **** 
 108:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 109:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw stvec, %[stvec]": :[stvec] "r"(stvec));
 110:src/../h/Riscv.hpp **** }
 111:src/../h/Riscv.hpp **** 
 112:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 113:src/../h/Riscv.hpp **** 	__asm__ volatile("csrs sip, %[mask]": :[mask] "r"(mask));
 114:src/../h/Riscv.hpp **** }
 115:src/../h/Riscv.hpp **** 
 116:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 1156              		.loc 4 116 40 is_stmt 1
 1157              		.cfi_startproc
 1158              	.LVL106:
 1159 0000 130101FF 		addi	sp,sp,-16
 1160              		.cfi_def_cfa_offset 16
 1161 0004 23348100 		sd	s0,8(sp)
 1162              		.cfi_offset 8, -8
 1163 0008 13040101 		addi	s0,sp,16
 1164              		.cfi_def_cfa 8, 0
GAS LISTING /tmp/ccBwJVte.s 			page 31


 117:src/../h/Riscv.hpp **** 	__asm__ volatile("csrc sip, %[mask]": :[mask] "r"(mask));
 1165              		.loc 4 117 2
 1166              		.loc 4 117 58 is_stmt 0
 1167              	#APP
 1168              	# 117 "src/../h/Riscv.hpp" 1
 118              	}
 1169              		csrc sip, a0
 1170              	# 0 "" 2
 1171              		.loc 4 118 1
 1172              	#NO_APP
 1173 0010 03348100 		ld	s0,8(sp)
 1174              		.cfi_restore 8
 1175              		.cfi_def_cfa 2, 16
 1176 0014 13010101 		addi	sp,sp,16
 1177              		.cfi_def_cfa_offset 0
 1178 0018 67800000 		jr	ra
 1179              		.cfi_endproc
 1180              	.LFE7:
 1182              		.section	.text._ZN8KConsole10getSRvalueEv,"axG",@progbits,_ZN8KConsole10getSRvalueEv,comdat
 1183              		.align	2
 1184              		.weak	_ZN8KConsole10getSRvalueEv
 1186              	_ZN8KConsole10getSRvalueEv:
 1187              	.LFB34:
 1188              		.file 5 "src/../h/KConsole.hpp"
   1:src/../h/KConsole.hpp **** //
   2:src/../h/KConsole.hpp **** // Created by os on 6/7/23.
   3:src/../h/KConsole.hpp **** //
   4:src/../h/KConsole.hpp **** 
   5:src/../h/KConsole.hpp **** #ifndef PROJEKAT2023_KCONSOLE_HPP
   6:src/../h/KConsole.hpp **** #define PROJEKAT2023_KCONSOLE_HPP
   7:src/../h/KConsole.hpp **** 
   8:src/../h/KConsole.hpp **** #include "../lib/hw.h"
   9:src/../h/KConsole.hpp **** #include "../h/syscall_c.hpp"
  10:src/../h/KConsole.hpp **** #include "../test/printing.hpp"
  11:src/../h/KConsole.hpp **** #include "../visak/helper.hpp"
  12:src/../h/KConsole.hpp **** 
  13:src/../h/KConsole.hpp **** class KConsole {
  14:src/../h/KConsole.hpp **** public:
  15:src/../h/KConsole.hpp ****     static void initKConsole();
  16:src/../h/KConsole.hpp **** 
  17:src/../h/KConsole.hpp ****     //stavlja karakter u izlazni bafer konzole
  18:src/../h/KConsole.hpp ****     static void kputc(char c);
  19:src/../h/KConsole.hpp **** 
  20:src/../h/KConsole.hpp ****     //uzima karakter iz ulaznog bafera konzole
  21:src/../h/KConsole.hpp ****     static char kgetc();
  22:src/../h/KConsole.hpp **** 
  23:src/../h/KConsole.hpp ****     //vraca karakter iz izlaznog bafera; ako je bafer prazan, blokira se dok se ne napuni
  24:src/../h/KConsole.hpp ****     static char getFromOutput();
  25:src/../h/KConsole.hpp **** 
  26:src/../h/KConsole.hpp ****     //stavlja karakter u ulazni bafer; ako je bafer pun, ignorise se
  27:src/../h/KConsole.hpp ****     static void placeInInput(char c);
  28:src/../h/KConsole.hpp **** 
  29:src/../h/KConsole.hpp ****     //ispis svih preostalih karaktera u izlaznom baferu
  30:src/../h/KConsole.hpp ****     static void flush(){
  31:src/../h/KConsole.hpp ****         __asm__ volatile("li a0, 0x43");
  32:src/../h/KConsole.hpp ****         __asm__ volatile("ecall");
  33:src/../h/KConsole.hpp ****     }
GAS LISTING /tmp/ccBwJVte.s 			page 32


  34:src/../h/KConsole.hpp **** 
  35:src/../h/KConsole.hpp ****     static uint8 getSRvalue() { return *sr; }
 1189              		.loc 5 35 18 is_stmt 1
 1190              		.cfi_startproc
 1191 0000 130101FF 		addi	sp,sp,-16
 1192              		.cfi_def_cfa_offset 16
 1193 0004 23348100 		sd	s0,8(sp)
 1194              		.cfi_offset 8, -8
 1195 0008 13040101 		addi	s0,sp,16
 1196              		.cfi_def_cfa 8, 0
 1197              		.loc 5 35 33
 1198              		.loc 5 35 40 is_stmt 0
 1199 000c 97070000 		la	a5,_ZN8KConsole2srE
 1199      83B70700 
 1200 0014 83B70700 		ld	a5,0(a5)
 1201              		.loc 5 35 45
 1202 0018 03C50700 		lbu	a0,0(a5)
 1203 001c 03348100 		ld	s0,8(sp)
 1204              		.cfi_restore 8
 1205              		.cfi_def_cfa 2, 16
 1206 0020 13010101 		addi	sp,sp,16
 1207              		.cfi_def_cfa_offset 0
 1208 0024 67800000 		jr	ra
 1209              		.cfi_endproc
 1210              	.LFE34:
 1212              		.section	.text._ZN8KConsole10getDRvalueEv,"axG",@progbits,_ZN8KConsole10getDRvalueEv,comdat
 1213              		.align	2
 1214              		.weak	_ZN8KConsole10getDRvalueEv
 1216              	_ZN8KConsole10getDRvalueEv:
 1217              	.LFB35:
  36:src/../h/KConsole.hpp **** 
  37:src/../h/KConsole.hpp ****     static uint8 getDRvalue() { return *dr; }
 1218              		.loc 5 37 18 is_stmt 1
 1219              		.cfi_startproc
 1220 0000 130101FF 		addi	sp,sp,-16
 1221              		.cfi_def_cfa_offset 16
 1222 0004 23348100 		sd	s0,8(sp)
 1223              		.cfi_offset 8, -8
 1224 0008 13040101 		addi	s0,sp,16
 1225              		.cfi_def_cfa 8, 0
 1226              		.loc 5 37 33
 1227              		.loc 5 37 40 is_stmt 0
 1228 000c 97070000 		la	a5,_ZN8KConsole2drE
 1228      83B70700 
 1229 0014 83B70700 		ld	a5,0(a5)
 1230              		.loc 5 37 45
 1231 0018 03C50700 		lbu	a0,0(a5)
 1232 001c 03348100 		ld	s0,8(sp)
 1233              		.cfi_restore 8
 1234              		.cfi_def_cfa 2, 16
 1235 0020 13010101 		addi	sp,sp,16
 1236              		.cfi_def_cfa_offset 0
 1237 0024 67800000 		jr	ra
 1238              		.cfi_endproc
 1239              	.LFE35:
 1241              		.section	.text._ZN8KConsole10setDRvalueEc,"axG",@progbits,_ZN8KConsole10setDRvalueEc,comdat
 1242              		.align	2
GAS LISTING /tmp/ccBwJVte.s 			page 33


 1243              		.weak	_ZN8KConsole10setDRvalueEc
 1245              	_ZN8KConsole10setDRvalueEc:
 1246              	.LFB36:
  38:src/../h/KConsole.hpp **** 
  39:src/../h/KConsole.hpp ****     static void setDRvalue(char c) { *dr = c; }
 1247              		.loc 5 39 17 is_stmt 1
 1248              		.cfi_startproc
 1249              	.LVL107:
 1250 0000 130101FF 		addi	sp,sp,-16
 1251              		.cfi_def_cfa_offset 16
 1252 0004 23348100 		sd	s0,8(sp)
 1253              		.cfi_offset 8, -8
 1254 0008 13040101 		addi	s0,sp,16
 1255              		.cfi_def_cfa 8, 0
 1256              		.loc 5 39 38
 1257 000c 97070000 		la	a5,_ZN8KConsole2drE
 1257      83B70700 
 1258 0014 83B70700 		ld	a5,0(a5)
 1259              		.loc 5 39 42 is_stmt 0
 1260 0018 2380A700 		sb	a0,0(a5)
 1261              		.loc 5 39 47
 1262 001c 03348100 		ld	s0,8(sp)
 1263              		.cfi_restore 8
 1264              		.cfi_def_cfa 2, 16
 1265 0020 13010101 		addi	sp,sp,16
 1266              		.cfi_def_cfa_offset 0
 1267 0024 67800000 		jr	ra
 1268              		.cfi_endproc
 1269              	.LFE36:
 1271              		.section	.text._ZN8KConsole23getOutputBufferHasSpaceEv,"axG",@progbits,_ZN8KConsole23getOutputBuff
 1272              		.align	2
 1273              		.weak	_ZN8KConsole23getOutputBufferHasSpaceEv
 1275              	_ZN8KConsole23getOutputBufferHasSpaceEv:
 1276              	.LFB37:
  40:src/../h/KConsole.hpp **** 
  41:src/../h/KConsole.hpp ****     static sem_t getOutputBufferHasSpace() { return outputBufferHasSpace; }
 1277              		.loc 5 41 18 is_stmt 1
 1278              		.cfi_startproc
 1279 0000 130101FF 		addi	sp,sp,-16
 1280              		.cfi_def_cfa_offset 16
 1281 0004 23348100 		sd	s0,8(sp)
 1282              		.cfi_offset 8, -8
 1283 0008 13040101 		addi	s0,sp,16
 1284              		.cfi_def_cfa 8, 0
 1285              		.loc 5 41 46
 1286              		.loc 5 41 75 is_stmt 0
 1287 000c 97070000 		la	a5,_ZN8KConsole20outputBufferHasSpaceE
 1287      83B70700 
 1288 0014 03B50700 		ld	a0,0(a5)
 1289 0018 03348100 		ld	s0,8(sp)
 1290              		.cfi_restore 8
 1291              		.cfi_def_cfa 2, 16
 1292 001c 13010101 		addi	sp,sp,16
 1293              		.cfi_def_cfa_offset 0
 1294 0020 67800000 		jr	ra
 1295              		.cfi_endproc
 1296              	.LFE37:
GAS LISTING /tmp/ccBwJVte.s 			page 34


 1298              		.section	.text._ZN8KConsole13getOutputHeadEv,"axG",@progbits,_ZN8KConsole13getOutputHeadEv,comdat
 1299              		.align	2
 1300              		.weak	_ZN8KConsole13getOutputHeadEv
 1302              	_ZN8KConsole13getOutputHeadEv:
 1303              	.LFB38:
  42:src/../h/KConsole.hpp **** 
  43:src/../h/KConsole.hpp ****     static int getOutputHead() { return outputHead; }
 1304              		.loc 5 43 16 is_stmt 1
 1305              		.cfi_startproc
 1306 0000 130101FF 		addi	sp,sp,-16
 1307              		.cfi_def_cfa_offset 16
 1308 0004 23348100 		sd	s0,8(sp)
 1309              		.cfi_offset 8, -8
 1310 0008 13040101 		addi	s0,sp,16
 1311              		.cfi_def_cfa 8, 0
 1312              		.loc 5 43 34
 1313              		.loc 5 43 53 is_stmt 0
 1314 000c 97070000 		la	a5,_ZN8KConsole10outputHeadE
 1314      83B70700 
 1315 0014 03A50700 		lw	a0,0(a5)
 1316 0018 03348100 		ld	s0,8(sp)
 1317              		.cfi_restore 8
 1318              		.cfi_def_cfa 2, 16
 1319 001c 13010101 		addi	sp,sp,16
 1320              		.cfi_def_cfa_offset 0
 1321 0020 67800000 		jr	ra
 1322              		.cfi_endproc
 1323              	.LFE38:
 1325              		.section	.text._ZN8KConsole13getOutputTailEv,"axG",@progbits,_ZN8KConsole13getOutputTailEv,comdat
 1326              		.align	2
 1327              		.weak	_ZN8KConsole13getOutputTailEv
 1329              	_ZN8KConsole13getOutputTailEv:
 1330              	.LFB39:
  44:src/../h/KConsole.hpp **** 
  45:src/../h/KConsole.hpp ****     static int getOutputTail() { return outputTail; }
 1331              		.loc 5 45 16 is_stmt 1
 1332              		.cfi_startproc
 1333 0000 130101FF 		addi	sp,sp,-16
 1334              		.cfi_def_cfa_offset 16
 1335 0004 23348100 		sd	s0,8(sp)
 1336              		.cfi_offset 8, -8
 1337 0008 13040101 		addi	s0,sp,16
 1338              		.cfi_def_cfa 8, 0
 1339              		.loc 5 45 34
 1340              		.loc 5 45 53 is_stmt 0
 1341 000c 97070000 		la	a5,_ZN8KConsole10outputTailE
 1341      83B70700 
 1342 0014 03A50700 		lw	a0,0(a5)
 1343 0018 03348100 		ld	s0,8(sp)
 1344              		.cfi_restore 8
 1345              		.cfi_def_cfa 2, 16
 1346 001c 13010101 		addi	sp,sp,16
 1347              		.cfi_def_cfa_offset 0
 1348 0020 67800000 		jr	ra
 1349              		.cfi_endproc
 1350              	.LFE39:
 1352              		.section	.text._ZN3TCB9setStatusENS_12ThreadStatusE,"axG",@progbits,_ZN3TCB9setStatusENS_12ThreadS
GAS LISTING /tmp/ccBwJVte.s 			page 35


 1353              		.align	2
 1354              		.weak	_ZN3TCB9setStatusENS_12ThreadStatusE
 1356              	_ZN3TCB9setStatusENS_12ThreadStatusE:
 1357              	.LFB43:
 1358              		.file 6 "src/../h/TCB.hpp"
   1:src/../h/TCB.hpp **** //
   2:src/../h/TCB.hpp **** // Created by os on 5/23/23.
   3:src/../h/TCB.hpp **** //
   4:src/../h/TCB.hpp **** 
   5:src/../h/TCB.hpp **** #ifndef PROJEKAT2023_TCB_HPP
   6:src/../h/TCB.hpp **** #define PROJEKAT2023_TCB_HPP
   7:src/../h/TCB.hpp **** 
   8:src/../h/TCB.hpp **** #include "../lib/hw.h"
   9:src/../h/TCB.hpp **** #include "../h/ThreadQueue.hpp"
  10:src/../h/TCB.hpp **** 
  11:src/../h/TCB.hpp **** int main();
  12:src/../h/TCB.hpp **** class TCB {
  13:src/../h/TCB.hpp **** public:
  14:src/../h/TCB.hpp ****     friend class Scheduler;
  15:src/../h/TCB.hpp **** 
  16:src/../h/TCB.hpp ****     using Body = void (*)(void*);
  17:src/../h/TCB.hpp **** 
  18:src/../h/TCB.hpp ****     enum ThreadStatus {
  19:src/../h/TCB.hpp ****         CREATED, ACTIVE, BLOCKED, JOINING, SLEEPING, FINISHED
  20:src/../h/TCB.hpp ****     };
  21:src/../h/TCB.hpp **** 
  22:src/../h/TCB.hpp ****     void setStatus(ThreadStatus stat) { this->status = stat; }
 1359              		.loc 6 22 10 is_stmt 1
 1360              		.cfi_startproc
 1361              	.LVL108:
 1362 0000 130101FF 		addi	sp,sp,-16
 1363              		.cfi_def_cfa_offset 16
 1364 0004 23348100 		sd	s0,8(sp)
 1365              		.cfi_offset 8, -8
 1366 0008 13040101 		addi	s0,sp,16
 1367              		.cfi_def_cfa 8, 0
 1368              		.loc 6 22 41
 1369              		.loc 6 22 54 is_stmt 0
 1370 000c 232CB504 		sw	a1,88(a0)
 1371              		.loc 6 22 62
 1372 0010 03348100 		ld	s0,8(sp)
 1373              		.cfi_restore 8
 1374              		.cfi_def_cfa 2, 16
 1375 0014 13010101 		addi	sp,sp,16
 1376              		.cfi_def_cfa_offset 0
 1377 0018 67800000 		jr	ra
 1378              		.cfi_endproc
 1379              	.LFE43:
 1381              		.section	.text._ZN3TCB12getTimeSliceEv,"axG",@progbits,_ZN3TCB12getTimeSliceEv,comdat
 1382              		.align	2
 1383              		.weak	_ZN3TCB12getTimeSliceEv
 1385              	_ZN3TCB12getTimeSliceEv:
 1386              	.LFB45:
  23:src/../h/TCB.hpp **** 
  24:src/../h/TCB.hpp ****     ThreadStatus getStatus() { return this->status; }
  25:src/../h/TCB.hpp **** 
  26:src/../h/TCB.hpp ****     static TCB* createThread(Body function, void* args, uint64* stack);
GAS LISTING /tmp/ccBwJVte.s 			page 36


  27:src/../h/TCB.hpp **** 
  28:src/../h/TCB.hpp ****     static void start(TCB* newTcb);
  29:src/../h/TCB.hpp **** 
  30:src/../h/TCB.hpp ****     uint64 getTimeSlice() { return timeSlice; }
 1387              		.loc 6 30 12 is_stmt 1
 1388              		.cfi_startproc
 1389              	.LVL109:
 1390 0000 130101FF 		addi	sp,sp,-16
 1391              		.cfi_def_cfa_offset 16
 1392 0004 23348100 		sd	s0,8(sp)
 1393              		.cfi_offset 8, -8
 1394 0008 13040101 		addi	s0,sp,16
 1395              		.cfi_def_cfa 8, 0
 1396              		.loc 6 30 29
 1397              		.loc 6 30 47 is_stmt 0
 1398 000c 03358502 		ld	a0,40(a0)
 1399              	.LVL110:
 1400 0010 03348100 		ld	s0,8(sp)
 1401              		.cfi_restore 8
 1402              		.cfi_def_cfa 2, 16
 1403 0014 13010101 		addi	sp,sp,16
 1404              		.cfi_def_cfa_offset 0
 1405 0018 67800000 		jr	ra
 1406              		.cfi_endproc
 1407              	.LFE45:
 1409              		.section	.text._ZN3TCB7getBodyEv,"axG",@progbits,_ZN3TCB7getBodyEv,comdat
 1410              		.align	2
 1411              		.weak	_ZN3TCB7getBodyEv
 1413              	_ZN3TCB7getBodyEv:
 1414              	.LFB47:
  31:src/../h/TCB.hpp **** 
  32:src/../h/TCB.hpp ****     void setTimeSlice(uint64 value) { timeSlice = value; }
  33:src/../h/TCB.hpp **** 
  34:src/../h/TCB.hpp ****     Body getBody() { return threadFunction; }
 1415              		.loc 6 34 10 is_stmt 1
 1416              		.cfi_startproc
 1417              	.LVL111:
 1418 0000 130101FF 		addi	sp,sp,-16
 1419              		.cfi_def_cfa_offset 16
 1420 0004 23348100 		sd	s0,8(sp)
 1421              		.cfi_offset 8, -8
 1422 0008 13040101 		addi	s0,sp,16
 1423              		.cfi_def_cfa 8, 0
 1424              		.loc 6 34 22
 1425              		.loc 6 34 45 is_stmt 0
 1426 000c 03350501 		ld	a0,16(a0)
 1427              	.LVL112:
 1428 0010 03348100 		ld	s0,8(sp)
 1429              		.cfi_restore 8
 1430              		.cfi_def_cfa 2, 16
 1431 0014 13010101 		addi	sp,sp,16
 1432              		.cfi_def_cfa_offset 0
 1433 0018 67800000 		jr	ra
 1434              		.cfi_endproc
 1435              	.LFE47:
 1437              		.section	.text._ZN3TCB10getRunningEv,"axG",@progbits,_ZN3TCB10getRunningEv,comdat
 1438              		.align	2
GAS LISTING /tmp/ccBwJVte.s 			page 37


 1439              		.weak	_ZN3TCB10getRunningEv
 1441              	_ZN3TCB10getRunningEv:
 1442              	.LFB48:
  35:src/../h/TCB.hpp **** 
  36:src/../h/TCB.hpp ****     static TCB* getRunning() { return running; }
 1443              		.loc 6 36 17 is_stmt 1
 1444              		.cfi_startproc
 1445 0000 130101FF 		addi	sp,sp,-16
 1446              		.cfi_def_cfa_offset 16
 1447 0004 23348100 		sd	s0,8(sp)
 1448              		.cfi_offset 8, -8
 1449 0008 13040101 		addi	s0,sp,16
 1450              		.cfi_def_cfa 8, 0
 1451              		.loc 6 36 32
 1452              		.loc 6 36 48 is_stmt 0
 1453 000c 97070000 		la	a5,_ZN3TCB7runningE
 1453      83B70700 
 1454 0014 03B50700 		ld	a0,0(a5)
 1455 0018 03348100 		ld	s0,8(sp)
 1456              		.cfi_restore 8
 1457              		.cfi_def_cfa 2, 16
 1458 001c 13010101 		addi	sp,sp,16
 1459              		.cfi_def_cfa_offset 0
 1460 0020 67800000 		jr	ra
 1461              		.cfi_endproc
 1462              	.LFE48:
 1464              		.section	.text._ZN3TCB19getRunningTimeSliceEv,"axG",@progbits,_ZN3TCB19getRunningTimeSliceEv,comda
 1465              		.align	2
 1466              		.weak	_ZN3TCB19getRunningTimeSliceEv
 1468              	_ZN3TCB19getRunningTimeSliceEv:
 1469              	.LFB50:
  37:src/../h/TCB.hpp **** 
  38:src/../h/TCB.hpp ****     static void setRunning(TCB* newRunning) { running = newRunning; }
  39:src/../h/TCB.hpp **** 
  40:src/../h/TCB.hpp ****     static uint64 &getRunningTimeSlice() { return runningTimeSlice; }
 1470              		.loc 6 40 20 is_stmt 1
 1471              		.cfi_startproc
 1472 0000 130101FF 		addi	sp,sp,-16
 1473              		.cfi_def_cfa_offset 16
 1474 0004 23348100 		sd	s0,8(sp)
 1475              		.cfi_offset 8, -8
 1476 0008 13040101 		addi	s0,sp,16
 1477              		.cfi_def_cfa 8, 0
 1478              		.loc 6 40 44
 1479              		.loc 6 40 69 is_stmt 0
 1480 000c 17050000 		la	a0,_ZN3TCB16runningTimeSliceE
 1480      03350500 
 1481 0014 03348100 		ld	s0,8(sp)
 1482              		.cfi_restore 8
 1483              		.cfi_def_cfa 2, 16
 1484 0018 13010101 		addi	sp,sp,16
 1485              		.cfi_def_cfa_offset 0
 1486 001c 67800000 		jr	ra
 1487              		.cfi_endproc
 1488              	.LFE50:
 1490              		.text
 1491              	.Letext0:
GAS LISTING /tmp/ccBwJVte.s 			page 38


 1492              		.file 7 "src/../lib/hw.h"
 1493              		.file 8 "src/../h/KMemory.hpp"
 1494              		.file 9 "src/../h/../h/../h/syscall_c.hpp"
 1495              		.file 10 "src/../h/Scheduler.hpp"
 1496              		.file 11 "src/../h/../test/printing.hpp"
 6327              		.align	3
 6330              	DW.ref.__gxx_personality_v0:
 6331 0000 00000000 		.dword	__gxx_personality_v0
 6331      00000000 
 6332              		.ident	"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04) 9.4.0"
 6333              		.section	.note.GNU-stack,"",@progbits
GAS LISTING /tmp/ccBwJVte.s 			page 39


DEFINED SYMBOLS
                            *ABS*:0000000000000000 interruptRoutine.cpp
     /tmp/ccBwJVte.s:10     .text._ZN4KSemD2Ev:0000000000000000 _ZN4KSemD2Ev
     /tmp/ccBwJVte.s:14     .text._ZN4KSemD2Ev:0000000000000000 .L0 
     /tmp/ccBwJVte.s:6330   .data.rel.local.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/ccBwJVte.s:18     .text._ZN4KSemD2Ev:0000000000000000 .L0 
     /tmp/ccBwJVte.s:19     .text._ZN4KSemD2Ev:0000000000000004 .L0 
     /tmp/ccBwJVte.s:23     .text._ZN4KSemD2Ev:0000000000000010 .L0 
     /tmp/ccBwJVte.s:24     .text._ZN4KSemD2Ev:0000000000000010 .L0 
     /tmp/ccBwJVte.s:25     .text._ZN4KSemD2Ev:0000000000000010 .L0 
     /tmp/ccBwJVte.s:27     .text._ZN4KSemD2Ev:0000000000000014 .L0 
     /tmp/ccBwJVte.s:35     .text._ZN4KSemD2Ev:0000000000000018 .L0 
     /tmp/ccBwJVte.s:38     .text._ZN4KSemD2Ev:0000000000000018 .L0 
     /tmp/ccBwJVte.s:39     .text._ZN4KSemD2Ev:0000000000000018 .L0 
     /tmp/ccBwJVte.s:40     .text._ZN4KSemD2Ev:0000000000000018 .L0 
     /tmp/ccBwJVte.s:45     .text._ZN4KSemD2Ev:000000000000001c .L0 
     /tmp/ccBwJVte.s:49     .text._ZN4KSemD2Ev:0000000000000020 .L0 
     /tmp/ccBwJVte.s:50     .text._ZN4KSemD2Ev:0000000000000020 .L0 
     /tmp/ccBwJVte.s:51     .text._ZN4KSemD2Ev:0000000000000020 .L0 
     /tmp/ccBwJVte.s:53     .text._ZN4KSemD2Ev:0000000000000024 .L0 
     /tmp/ccBwJVte.s:55     .text._ZN4KSemD2Ev:0000000000000028 .L0 
     /tmp/ccBwJVte.s:56     .text._ZN4KSemD2Ev:0000000000000028 .L0 
     /tmp/ccBwJVte.s:61     .text._ZN4KSemD2Ev:000000000000002c .L0 
     /tmp/ccBwJVte.s:62     .text._ZN4KSemD2Ev:000000000000002c .L0 
     /tmp/ccBwJVte.s:65     .text._ZN4KSemD2Ev:0000000000000034 .L0 
     /tmp/ccBwJVte.s:73     .text._ZN4KSemD2Ev:0000000000000038 .L0 
     /tmp/ccBwJVte.s:74     .text._ZN4KSemD2Ev:000000000000003c .L0 
     /tmp/ccBwJVte.s:76     .text._ZN4KSemD2Ev:0000000000000040 .L0 
     /tmp/ccBwJVte.s:77     .text._ZN4KSemD2Ev:0000000000000040 .L0 
     /tmp/ccBwJVte.s:79     .text._ZN4KSemD2Ev:0000000000000044 .L0 
     /tmp/ccBwJVte.s:82     .text._ZN4KSemD2Ev:0000000000000048 .L0 
     /tmp/ccBwJVte.s:84     .text._ZN4KSemD2Ev:000000000000004c .L0 
     /tmp/ccBwJVte.s:10     .text._ZN4KSemD2Ev:0000000000000000 _ZN4KSemD1Ev
     /tmp/ccBwJVte.s:120    .text:0000000000000000 interruptRoutine
     /tmp/ccBwJVte.s:124    .text:0000000000000000 .L0 
     /tmp/ccBwJVte.s:125    .text:0000000000000000 .L0 
     /tmp/ccBwJVte.s:126    .text:0000000000000004 .L0 
     /tmp/ccBwJVte.s:130    .text:0000000000000010 .L0 
     /tmp/ccBwJVte.s:131    .text:0000000000000010 .L0 
     /tmp/ccBwJVte.s:132    .text:0000000000000010 .L0 
     /tmp/ccBwJVte.s:134    .text:0000000000000014 .L0 
     /tmp/ccBwJVte.s:136    .text:0000000000000014 .L0 
     /tmp/ccBwJVte.s:137    .text:0000000000000014 .L0 
src/interruptRoutine.cpp:19     .text:0000000000000014 .L0 
     /tmp/ccBwJVte.s:146    .text:000000000000001c .L0 
src/interruptRoutine.cpp:20     .text:000000000000001c .L0 
     /tmp/ccBwJVte.s:156    .text:0000000000000024 .L0 
src/interruptRoutine.cpp:21     .text:0000000000000024 .L0 
     /tmp/ccBwJVte.s:166    .text:000000000000002c .L0 
     /tmp/ccBwJVte.s:167    .text:000000000000002c .L0 
src/interruptRoutine.cpp:26     .text:000000000000002c .L0 
     /tmp/ccBwJVte.s:177    .text:0000000000000034 .L0 
src/interruptRoutine.cpp:27     .text:0000000000000034 .L0 
     /tmp/ccBwJVte.s:187    .text:000000000000003c .L0 
src/interruptRoutine.cpp:28     .text:000000000000003c .L0 
     /tmp/ccBwJVte.s:197    .text:0000000000000044 .L0 
src/interruptRoutine.cpp:29     .text:0000000000000044 .L0 
GAS LISTING /tmp/ccBwJVte.s 			page 40


     /tmp/ccBwJVte.s:207    .text:000000000000004c .L0 
src/interruptRoutine.cpp:30     .text:000000000000004c .L0 
     /tmp/ccBwJVte.s:218    .text:0000000000000054 .L0 
     /tmp/ccBwJVte.s:222    .text:0000000000000060 .L0 
     /tmp/ccBwJVte.s:229    .text:000000000000006c .L0 
     /tmp/ccBwJVte.s:333    .text:00000000000000e0 .L0 
     /tmp/ccBwJVte.s:334    .text:00000000000000e0 .L0 
     /tmp/ccBwJVte.s:335    .text:00000000000000e0 .L0 
     /tmp/ccBwJVte.s:339    .text:00000000000000ec .L0 
src/interruptRoutine.cpp:42     .text:00000000000000ec .L0 
     /tmp/ccBwJVte.s:346    .text:00000000000000f0 .L0 
     /tmp/ccBwJVte.s:350    .text:00000000000000f4 .L0 
     /tmp/ccBwJVte.s:351    .text:00000000000000f4 .L0 
     /tmp/ccBwJVte.s:352    .text:00000000000000f4 .L0 
     /tmp/ccBwJVte.s:357    .text:0000000000000104 .L0 
src/interruptRoutine.cpp:48     .text:0000000000000104 .L0 
     /tmp/ccBwJVte.s:364    .text:0000000000000108 .L0 
     /tmp/ccBwJVte.s:368    .text:000000000000010c .L0 
     /tmp/ccBwJVte.s:369    .text:000000000000010c .L0 
     /tmp/ccBwJVte.s:370    .text:000000000000010c .L0 
     /tmp/ccBwJVte.s:374    .text:0000000000000118 .L0 
     /tmp/ccBwJVte.s:376    .text:000000000000011c .L0 
     /tmp/ccBwJVte.s:383    .text:0000000000000134 .L0 
     /tmp/ccBwJVte.s:385    .text:0000000000000138 .L0 
     /tmp/ccBwJVte.s:386    .text:0000000000000138 .L0 
     /tmp/ccBwJVte.s:389    .text:0000000000000140 .L0 
     /tmp/ccBwJVte.s:391    .text:0000000000000144 .L0 
     /tmp/ccBwJVte.s:392    .text:0000000000000144 .L0 
     /tmp/ccBwJVte.s:394    .text:0000000000000148 .L0 
     /tmp/ccBwJVte.s:397    .text:0000000000000154 .L0 
     /tmp/ccBwJVte.s:398    .text:0000000000000154 .L0 
     /tmp/ccBwJVte.s:405    .text:0000000000000168 .L0 
src/interruptRoutine.cpp:61     .text:0000000000000168 .L0 
     /tmp/ccBwJVte.s:414    .text:0000000000000170 .L0 
src/interruptRoutine.cpp:63     .text:0000000000000170 .L0 
     /tmp/ccBwJVte.s:422    .text:0000000000000174 .L0 
src/interruptRoutine.cpp:65     .text:0000000000000174 .L0 
     /tmp/ccBwJVte.s:429    .text:0000000000000178 .L0 
     /tmp/ccBwJVte.s:433    .text:000000000000017c .L0 
     /tmp/ccBwJVte.s:434    .text:000000000000017c .L0 
     /tmp/ccBwJVte.s:1441   .text._ZN3TCB10getRunningEv:0000000000000000 _ZN3TCB10getRunningEv
     /tmp/ccBwJVte.s:435    .text:000000000000017c .L0 
     /tmp/ccBwJVte.s:1356   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000000 _ZN3TCB9setStatusENS_12ThreadStatusE
     /tmp/ccBwJVte.s:443    .text:0000000000000198 .L0 
     /tmp/ccBwJVte.s:444    .text:0000000000000198 .L0 
     /tmp/ccBwJVte.s:447    .text:00000000000001a0 .L0 
src/interruptRoutine.cpp:71     .text:00000000000001a0 .L0 
     /tmp/ccBwJVte.s:453    .text:00000000000001a4 .L0 
src/interruptRoutine.cpp:72     .text:00000000000001a4 .L0 
     /tmp/ccBwJVte.s:458    .text:00000000000001a8 .L0 
     /tmp/ccBwJVte.s:460    .text:00000000000001a8 .L0 
     /tmp/ccBwJVte.s:463    .text:00000000000001b0 .L0 
     /tmp/ccBwJVte.s:467    .text:00000000000001b4 .L0 
     /tmp/ccBwJVte.s:468    .text:00000000000001b4 .L0 
     /tmp/ccBwJVte.s:469    .text:00000000000001b4 .L0 
     /tmp/ccBwJVte.s:472    .text:00000000000001bc .L0 
     /tmp/ccBwJVte.s:476    .text:00000000000001c0 .L0 
GAS LISTING /tmp/ccBwJVte.s 			page 41


     /tmp/ccBwJVte.s:477    .text:00000000000001c0 .L0 
     /tmp/ccBwJVte.s:478    .text:00000000000001c0 .L0 
     /tmp/ccBwJVte.s:483    .text:00000000000001d0 .L0 
     /tmp/ccBwJVte.s:484    .text:00000000000001d0 .L0 
     /tmp/ccBwJVte.s:487    .text:00000000000001d8 .L0 
     /tmp/ccBwJVte.s:491    .text:00000000000001dc .L0 
     /tmp/ccBwJVte.s:492    .text:00000000000001dc .L0 
     /tmp/ccBwJVte.s:493    .text:00000000000001dc .L0 
     /tmp/ccBwJVte.s:496    .text:00000000000001e4 .L0 
     /tmp/ccBwJVte.s:498    .text:00000000000001e8 .L0 
     /tmp/ccBwJVte.s:503    .text:00000000000001f8 .L0 
     /tmp/ccBwJVte.s:505    .text:00000000000001fc .L0 
     /tmp/ccBwJVte.s:506    .text:00000000000001fc .L0 
     /tmp/ccBwJVte.s:509    .text:0000000000000204 .L0 
     /tmp/ccBwJVte.s:511    .text:0000000000000208 .L0 
src/interruptRoutine.cpp:90     .text:0000000000000208 .L0 
     /tmp/ccBwJVte.s:520    .text:0000000000000210 .L0 
src/interruptRoutine.cpp:92     .text:0000000000000210 .L0 
     /tmp/ccBwJVte.s:528    .text:0000000000000214 .L0 
src/interruptRoutine.cpp:94     .text:0000000000000214 .L0 
     /tmp/ccBwJVte.s:535    .text:0000000000000218 .L0 
     /tmp/ccBwJVte.s:539    .text:000000000000021c .L0 
     /tmp/ccBwJVte.s:540    .text:000000000000021c .L0 
     /tmp/ccBwJVte.s:541    .text:000000000000021c .L0 
     /tmp/ccBwJVte.s:546    .text:000000000000022c .L0 
src/interruptRoutine.cpp:100    .text:000000000000022c .L0 
     /tmp/ccBwJVte.s:552    .text:0000000000000230 .L0 
     /tmp/ccBwJVte.s:554    .text:0000000000000230 .L0 
     /tmp/ccBwJVte.s:556    .text:0000000000000234 .L0 
     /tmp/ccBwJVte.s:558    .text:0000000000000238 .L0 
     /tmp/ccBwJVte.s:565    .text:0000000000000250 .L0 
     /tmp/ccBwJVte.s:569    .text:0000000000000254 .L0 
     /tmp/ccBwJVte.s:570    .text:0000000000000254 .L0 
     /tmp/ccBwJVte.s:571    .text:0000000000000254 .L0 
     /tmp/ccBwJVte.s:576    .text:0000000000000264 .L0 
src/interruptRoutine.cpp:107    .text:0000000000000264 .L0 
     /tmp/ccBwJVte.s:583    .text:0000000000000268 .L0 
     /tmp/ccBwJVte.s:587    .text:000000000000026c .L0 
     /tmp/ccBwJVte.s:588    .text:000000000000026c .L0 
     /tmp/ccBwJVte.s:589    .text:000000000000026c .L0 
     /tmp/ccBwJVte.s:594    .text:000000000000027c .L0 
src/interruptRoutine.cpp:113    .text:000000000000027c .L0 
     /tmp/ccBwJVte.s:601    .text:0000000000000280 .L0 
     /tmp/ccBwJVte.s:605    .text:0000000000000284 .L0 
     /tmp/ccBwJVte.s:606    .text:0000000000000284 .L0 
     /tmp/ccBwJVte.s:609    .text:000000000000028c .L0 
src/interruptRoutine.cpp:119    .text:000000000000028c .L0 
     /tmp/ccBwJVte.s:618    .text:0000000000000294 .L0 
src/interruptRoutine.cpp:121    .text:0000000000000294 .L0 
     /tmp/ccBwJVte.s:626    .text:0000000000000298 .L0 
src/interruptRoutine.cpp:123    .text:0000000000000298 .L0 
     /tmp/ccBwJVte.s:633    .text:000000000000029c .L0 
     /tmp/ccBwJVte.s:636    .text:00000000000002a4 .L0 
     /tmp/ccBwJVte.s:637    .text:00000000000002a4 .L0 
     /tmp/ccBwJVte.s:645    .text:00000000000002c0 .L0 
     /tmp/ccBwJVte.s:646    .text:00000000000002c0 .L0 
     /tmp/ccBwJVte.s:649    .text:00000000000002c8 .L0 
GAS LISTING /tmp/ccBwJVte.s 			page 42


     /tmp/ccBwJVte.s:653    .text:00000000000002cc .L0 
     /tmp/ccBwJVte.s:654    .text:00000000000002cc .L0 
     /tmp/ccBwJVte.s:655    .text:00000000000002cc .L0 
     /tmp/ccBwJVte.s:658    .text:00000000000002d4 .L0 
src/interruptRoutine.cpp:132    .text:00000000000002d4 .L0 
     /tmp/ccBwJVte.s:665    .text:00000000000002d8 .L0 
     /tmp/ccBwJVte.s:669    .text:00000000000002dc .L0 
     /tmp/ccBwJVte.s:670    .text:00000000000002dc .L0 
     /tmp/ccBwJVte.s:671    .text:00000000000002dc .L0 
     /tmp/ccBwJVte.s:677    .text:00000000000002f0 .L0 
     /tmp/ccBwJVte.s:680    .text:00000000000002f4 .L0 
     /tmp/ccBwJVte.s:681    .text:00000000000002f4 .L0 
     /tmp/ccBwJVte.s:682    .text:00000000000002f4 .L0 
     /tmp/ccBwJVte.s:1302   .text._ZN8KConsole13getOutputHeadEv:0000000000000000 _ZN8KConsole13getOutputHeadEv
     /tmp/ccBwJVte.s:683    .text:00000000000002f4 .L0 
     /tmp/ccBwJVte.s:1329   .text._ZN8KConsole13getOutputTailEv:0000000000000000 _ZN8KConsole13getOutputTailEv
     /tmp/ccBwJVte.s:688    .text:0000000000000304 .L0 
     /tmp/ccBwJVte.s:692    .text:0000000000000310 .L0 
     /tmp/ccBwJVte.s:699    .text:0000000000000324 .L0 
     /tmp/ccBwJVte.s:700    .text:0000000000000324 .L0 
     /tmp/ccBwJVte.s:707    .text:0000000000000334 .L0 
     /tmp/ccBwJVte.s:708    .text:0000000000000334 .L0 
     /tmp/ccBwJVte.s:1186   .text._ZN8KConsole10getSRvalueEv:0000000000000000 _ZN8KConsole10getSRvalueEv
     /tmp/ccBwJVte.s:709    .text:0000000000000334 .L0 
     /tmp/ccBwJVte.s:713    .text:0000000000000340 .L0 
     /tmp/ccBwJVte.s:715    .text:0000000000000344 .L0 
     /tmp/ccBwJVte.s:719    .text:0000000000000350 .L0 
     /tmp/ccBwJVte.s:722    .text:0000000000000354 .L0 
     /tmp/ccBwJVte.s:723    .text:0000000000000354 .L0 
     /tmp/ccBwJVte.s:1245   .text._ZN8KConsole10setDRvalueEc:0000000000000000 _ZN8KConsole10setDRvalueEc
     /tmp/ccBwJVte.s:728    .text:0000000000000364 .L0 
     /tmp/ccBwJVte.s:1275   .text._ZN8KConsole23getOutputBufferHasSpaceEv:0000000000000000 _ZN8KConsole23getOutputBufferHasSpaceEv
     /tmp/ccBwJVte.s:729    .text:0000000000000364 .L0 
     /tmp/ccBwJVte.s:737    .text:000000000000037c .L0 
     /tmp/ccBwJVte.s:741    .text:0000000000000380 .L0 
     /tmp/ccBwJVte.s:742    .text:0000000000000380 .L0 
     /tmp/ccBwJVte.s:743    .text:0000000000000380 .L0 
     /tmp/ccBwJVte.s:747    .text:000000000000038c .L0 
     /tmp/ccBwJVte.s:749    .text:0000000000000390 .L0 
     /tmp/ccBwJVte.s:756    .text:00000000000003a8 .L0 
     /tmp/ccBwJVte.s:758    .text:00000000000003ac .L0 
     /tmp/ccBwJVte.s:759    .text:00000000000003ac .L0 
     /tmp/ccBwJVte.s:762    .text:00000000000003b4 .L0 
     /tmp/ccBwJVte.s:764    .text:00000000000003b8 .L0 
src/interruptRoutine.cpp:155    .text:00000000000003b8 .L0 
     /tmp/ccBwJVte.s:773    .text:00000000000003c0 .L0 
src/interruptRoutine.cpp:157    .text:00000000000003c0 .L0 
     /tmp/ccBwJVte.s:781    .text:00000000000003c4 .L0 
src/interruptRoutine.cpp:159    .text:00000000000003c4 .L0 
     /tmp/ccBwJVte.s:788    .text:00000000000003c8 .L0 
     /tmp/ccBwJVte.s:792    .text:00000000000003cc .L0 
     /tmp/ccBwJVte.s:793    .text:00000000000003cc .L0 
     /tmp/ccBwJVte.s:794    .text:00000000000003cc .L0 
     /tmp/ccBwJVte.s:1413   .text._ZN3TCB7getBodyEv:0000000000000000 _ZN3TCB7getBodyEv
     /tmp/ccBwJVte.s:800    .text:00000000000003e0 .L0 
     /tmp/ccBwJVte.s:805    .text:00000000000003f4 .L0 
     /tmp/ccBwJVte.s:807    .text:00000000000003f8 .L0 
GAS LISTING /tmp/ccBwJVte.s 			page 43


     /tmp/ccBwJVte.s:808    .text:00000000000003f8 .L0 
     /tmp/ccBwJVte.s:813    .text:0000000000000408 .L0 
     /tmp/ccBwJVte.s:817    .text:000000000000040c .L0 
     /tmp/ccBwJVte.s:818    .text:000000000000040c .L0 
     /tmp/ccBwJVte.s:819    .text:000000000000040c .L0 
     /tmp/ccBwJVte.s:823    .text:000000000000041c .L0 
     /tmp/ccBwJVte.s:824    .text:000000000000041c .L0 
     /tmp/ccBwJVte.s:832    .text:0000000000000438 .L0 
     /tmp/ccBwJVte.s:833    .text:0000000000000438 .L0 
     /tmp/ccBwJVte.s:837    .text:0000000000000448 .L0 
     /tmp/ccBwJVte.s:838    .text:0000000000000448 .L0 
     /tmp/ccBwJVte.s:846    .text:0000000000000464 .L0 
     /tmp/ccBwJVte.s:847    .text:0000000000000464 .L0 
     /tmp/ccBwJVte.s:851    .text:0000000000000474 .L0 
     /tmp/ccBwJVte.s:852    .text:0000000000000474 .L0 
     /tmp/ccBwJVte.s:860    .text:0000000000000490 .L0 
     /tmp/ccBwJVte.s:863    .text:0000000000000494 .L0 
     /tmp/ccBwJVte.s:867    .text:000000000000049c .L0 
     /tmp/ccBwJVte.s:871    .text:00000000000004a4 .L0 
     /tmp/ccBwJVte.s:875    .text:00000000000004ac .L0 
     /tmp/ccBwJVte.s:880    .text:00000000000004b0 .L0 
     /tmp/ccBwJVte.s:881    .text:00000000000004b0 .L0 
     /tmp/ccBwJVte.s:886    .text:00000000000004bc .L0 
     /tmp/ccBwJVte.s:887    .text:00000000000004bc .L0 
     /tmp/ccBwJVte.s:893    .text:00000000000004c4 .L0 
     /tmp/ccBwJVte.s:895    .text:00000000000004c4 .L0 
     /tmp/ccBwJVte.s:906    .text:00000000000004d0 .L0 
     /tmp/ccBwJVte.s:913    .text:00000000000004d4 .L0 
     /tmp/ccBwJVte.s:921    .text:00000000000004e8 .L0 
     /tmp/ccBwJVte.s:922    .text:00000000000004e8 .L0 
     /tmp/ccBwJVte.s:926    .text:00000000000004f4 .L0 
     /tmp/ccBwJVte.s:929    .text:00000000000004f8 .L0 
     /tmp/ccBwJVte.s:933    .text:0000000000000504 .L0 
     /tmp/ccBwJVte.s:934    .text:0000000000000504 .L0 
     /tmp/ccBwJVte.s:938    .text:0000000000000510 .L0 
     /tmp/ccBwJVte.s:940    .text:0000000000000514 .L0 
     /tmp/ccBwJVte.s:943    .text:000000000000051c .L0 
     /tmp/ccBwJVte.s:945    .text:0000000000000520 .L0 
     /tmp/ccBwJVte.s:1216   .text._ZN8KConsole10getDRvalueEv:0000000000000000 _ZN8KConsole10getDRvalueEv
     /tmp/ccBwJVte.s:946    .text:0000000000000520 .L0 
     /tmp/ccBwJVte.s:950    .text:000000000000052c .L0 
     /tmp/ccBwJVte.s:957    .text:000000000000053c .L0 
     /tmp/ccBwJVte.s:958    .text:000000000000053c .L0 
     /tmp/ccBwJVte.s:964    .text:000000000000054c .L0 
     /tmp/ccBwJVte.s:965    .text:000000000000054c .L0 
     /tmp/ccBwJVte.s:971    .text:0000000000000560 .L0 
     /tmp/ccBwJVte.s:972    .text:0000000000000560 .L0 
     /tmp/ccBwJVte.s:978    .text:0000000000000568 .L0 
     /tmp/ccBwJVte.s:980    .text:0000000000000568 .L0 
     /tmp/ccBwJVte.s:986    .text:0000000000000570 .L0 
     /tmp/ccBwJVte.s:988    .text:0000000000000570 .L0 
     /tmp/ccBwJVte.s:1153   .text._ZN5Riscv6mc_sipEm:0000000000000000 _ZN5Riscv6mc_sipEm
     /tmp/ccBwJVte.s:996    .text:000000000000057c .L0 
     /tmp/ccBwJVte.s:1003   .text:0000000000000580 .L0 
     /tmp/ccBwJVte.s:1009   .text:0000000000000594 .L0 
     /tmp/ccBwJVte.s:1010   .text:0000000000000594 .L0 
     /tmp/ccBwJVte.s:1013   .text:000000000000059c .L0 
GAS LISTING /tmp/ccBwJVte.s 			page 44


     /tmp/ccBwJVte.s:1468   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000000 _ZN3TCB19getRunningTimeSliceEv
     /tmp/ccBwJVte.s:1014   .text:000000000000059c .L0 
     /tmp/ccBwJVte.s:1018   .text:00000000000005a8 .L0 
     /tmp/ccBwJVte.s:1020   .text:00000000000005ac .L0 
     /tmp/ccBwJVte.s:1023   .text:00000000000005b4 .L0 
     /tmp/ccBwJVte.s:1024   .text:00000000000005b4 .L0 
     /tmp/ccBwJVte.s:1028   .text:00000000000005c0 .L0 
     /tmp/ccBwJVte.s:1030   .text:00000000000005c4 .L0 
     /tmp/ccBwJVte.s:1385   .text._ZN3TCB12getTimeSliceEv:0000000000000000 _ZN3TCB12getTimeSliceEv
     /tmp/ccBwJVte.s:1038   .text:00000000000005e0 .L0 
     /tmp/ccBwJVte.s:1042   .text:00000000000005ec .L0 
     /tmp/ccBwJVte.s:1044   .text:00000000000005f0 .L0 
     /tmp/ccBwJVte.s:1045   .text:00000000000005f0 .L0 
     /tmp/ccBwJVte.s:1049   .text:00000000000005f8 .L0 
     /tmp/ccBwJVte.s:1050   .text:00000000000005f8 .L0 
     /tmp/ccBwJVte.s:1056   .text:0000000000000600 .L0 
     /tmp/ccBwJVte.s:1058   .text:0000000000000600 .L0 
     /tmp/ccBwJVte.s:1064   .text:0000000000000608 .L0 
     /tmp/ccBwJVte.s:1066   .text:0000000000000608 .L0 
     /tmp/ccBwJVte.s:1073   .text:0000000000000614 .L0 
     /tmp/ccBwJVte.s:1080   .text:0000000000000618 .L0 
     /tmp/ccBwJVte.s:1081   .text:0000000000000618 .L0 
     /tmp/ccBwJVte.s:1085   .text:0000000000000628 .L0 
     /tmp/ccBwJVte.s:1086   .text:0000000000000628 .L0 
     /tmp/ccBwJVte.s:1090   .text:0000000000000638 .L0 
     /tmp/ccBwJVte.s:1091   .text:0000000000000638 .L0 
     /tmp/ccBwJVte.s:1099   .text:0000000000000654 .L0 
     /tmp/ccBwJVte.s:1100   .text:0000000000000654 .L0 
     /tmp/ccBwJVte.s:1104   .text:0000000000000664 .L0 
     /tmp/ccBwJVte.s:1105   .text:0000000000000664 .L0 
     /tmp/ccBwJVte.s:1113   .text:0000000000000680 .L0 
     /tmp/ccBwJVte.s:1114   .text:0000000000000680 .L0 
     /tmp/ccBwJVte.s:1120   .text:0000000000000688 .L0 
     /tmp/ccBwJVte.s:1122   .text:0000000000000688 .L0 
     /tmp/ccBwJVte.s:1133   .text:0000000000000690 .L0 
     /tmp/ccBwJVte.s:1135   .text:0000000000000698 .L0 
     /tmp/ccBwJVte.s:1137   .text:000000000000069c .L0 
     /tmp/ccBwJVte.s:1138   .text:000000000000069c .L0 
     /tmp/ccBwJVte.s:1141   .text:00000000000006a0 .L0 
     /tmp/ccBwJVte.s:1143   .text:00000000000006a4 .L0 
     /tmp/ccBwJVte.s:1146   .text:00000000000006a8 .L0 
     /tmp/ccBwJVte.s:1157   .text._ZN5Riscv6mc_sipEm:0000000000000000 .L0 
     /tmp/ccBwJVte.s:1159   .text._ZN5Riscv6mc_sipEm:0000000000000000 .L0 
     /tmp/ccBwJVte.s:1160   .text._ZN5Riscv6mc_sipEm:0000000000000004 .L0 
     /tmp/ccBwJVte.s:1162   .text._ZN5Riscv6mc_sipEm:0000000000000008 .L0 
     /tmp/ccBwJVte.s:1164   .text._ZN5Riscv6mc_sipEm:000000000000000c .L0 
     /tmp/ccBwJVte.s:1166   .text._ZN5Riscv6mc_sipEm:000000000000000c .L0 
  src/../h/Riscv.hpp:117    .text._ZN5Riscv6mc_sipEm:000000000000000c .L0 
     /tmp/ccBwJVte.s:1173   .text._ZN5Riscv6mc_sipEm:0000000000000010 .L0 
     /tmp/ccBwJVte.s:1174   .text._ZN5Riscv6mc_sipEm:0000000000000014 .L0 
     /tmp/ccBwJVte.s:1175   .text._ZN5Riscv6mc_sipEm:0000000000000014 .L0 
     /tmp/ccBwJVte.s:1177   .text._ZN5Riscv6mc_sipEm:0000000000000018 .L0 
     /tmp/ccBwJVte.s:1179   .text._ZN5Riscv6mc_sipEm:000000000000001c .L0 
     /tmp/ccBwJVte.s:1190   .text._ZN8KConsole10getSRvalueEv:0000000000000000 .L0 
     /tmp/ccBwJVte.s:1191   .text._ZN8KConsole10getSRvalueEv:0000000000000000 .L0 
     /tmp/ccBwJVte.s:1192   .text._ZN8KConsole10getSRvalueEv:0000000000000004 .L0 
     /tmp/ccBwJVte.s:1194   .text._ZN8KConsole10getSRvalueEv:0000000000000008 .L0 
GAS LISTING /tmp/ccBwJVte.s 			page 45


     /tmp/ccBwJVte.s:1196   .text._ZN8KConsole10getSRvalueEv:000000000000000c .L0 
     /tmp/ccBwJVte.s:1198   .text._ZN8KConsole10getSRvalueEv:000000000000000c .L0 
     /tmp/ccBwJVte.s:1199   .text._ZN8KConsole10getSRvalueEv:000000000000000c .L0 
     /tmp/ccBwJVte.s:1202   .text._ZN8KConsole10getSRvalueEv:0000000000000018 .L0 
     /tmp/ccBwJVte.s:1204   .text._ZN8KConsole10getSRvalueEv:0000000000000020 .L0 
     /tmp/ccBwJVte.s:1205   .text._ZN8KConsole10getSRvalueEv:0000000000000020 .L0 
     /tmp/ccBwJVte.s:1207   .text._ZN8KConsole10getSRvalueEv:0000000000000024 .L0 
     /tmp/ccBwJVte.s:1209   .text._ZN8KConsole10getSRvalueEv:0000000000000028 .L0 
     /tmp/ccBwJVte.s:1219   .text._ZN8KConsole10getDRvalueEv:0000000000000000 .L0 
     /tmp/ccBwJVte.s:1220   .text._ZN8KConsole10getDRvalueEv:0000000000000000 .L0 
     /tmp/ccBwJVte.s:1221   .text._ZN8KConsole10getDRvalueEv:0000000000000004 .L0 
     /tmp/ccBwJVte.s:1223   .text._ZN8KConsole10getDRvalueEv:0000000000000008 .L0 
     /tmp/ccBwJVte.s:1225   .text._ZN8KConsole10getDRvalueEv:000000000000000c .L0 
     /tmp/ccBwJVte.s:1227   .text._ZN8KConsole10getDRvalueEv:000000000000000c .L0 
     /tmp/ccBwJVte.s:1228   .text._ZN8KConsole10getDRvalueEv:000000000000000c .L0 
     /tmp/ccBwJVte.s:1231   .text._ZN8KConsole10getDRvalueEv:0000000000000018 .L0 
     /tmp/ccBwJVte.s:1233   .text._ZN8KConsole10getDRvalueEv:0000000000000020 .L0 
     /tmp/ccBwJVte.s:1234   .text._ZN8KConsole10getDRvalueEv:0000000000000020 .L0 
     /tmp/ccBwJVte.s:1236   .text._ZN8KConsole10getDRvalueEv:0000000000000024 .L0 
     /tmp/ccBwJVte.s:1238   .text._ZN8KConsole10getDRvalueEv:0000000000000028 .L0 
     /tmp/ccBwJVte.s:1248   .text._ZN8KConsole10setDRvalueEc:0000000000000000 .L0 
     /tmp/ccBwJVte.s:1250   .text._ZN8KConsole10setDRvalueEc:0000000000000000 .L0 
     /tmp/ccBwJVte.s:1251   .text._ZN8KConsole10setDRvalueEc:0000000000000004 .L0 
     /tmp/ccBwJVte.s:1253   .text._ZN8KConsole10setDRvalueEc:0000000000000008 .L0 
     /tmp/ccBwJVte.s:1255   .text._ZN8KConsole10setDRvalueEc:000000000000000c .L0 
     /tmp/ccBwJVte.s:1257   .text._ZN8KConsole10setDRvalueEc:000000000000000c .L0 
     /tmp/ccBwJVte.s:1260   .text._ZN8KConsole10setDRvalueEc:0000000000000018 .L0 
     /tmp/ccBwJVte.s:1262   .text._ZN8KConsole10setDRvalueEc:000000000000001c .L0 
     /tmp/ccBwJVte.s:1263   .text._ZN8KConsole10setDRvalueEc:0000000000000020 .L0 
     /tmp/ccBwJVte.s:1264   .text._ZN8KConsole10setDRvalueEc:0000000000000020 .L0 
     /tmp/ccBwJVte.s:1266   .text._ZN8KConsole10setDRvalueEc:0000000000000024 .L0 
     /tmp/ccBwJVte.s:1268   .text._ZN8KConsole10setDRvalueEc:0000000000000028 .L0 
     /tmp/ccBwJVte.s:1278   .text._ZN8KConsole23getOutputBufferHasSpaceEv:0000000000000000 .L0 
     /tmp/ccBwJVte.s:1279   .text._ZN8KConsole23getOutputBufferHasSpaceEv:0000000000000000 .L0 
     /tmp/ccBwJVte.s:1280   .text._ZN8KConsole23getOutputBufferHasSpaceEv:0000000000000004 .L0 
     /tmp/ccBwJVte.s:1282   .text._ZN8KConsole23getOutputBufferHasSpaceEv:0000000000000008 .L0 
     /tmp/ccBwJVte.s:1284   .text._ZN8KConsole23getOutputBufferHasSpaceEv:000000000000000c .L0 
     /tmp/ccBwJVte.s:1286   .text._ZN8KConsole23getOutputBufferHasSpaceEv:000000000000000c .L0 
     /tmp/ccBwJVte.s:1287   .text._ZN8KConsole23getOutputBufferHasSpaceEv:000000000000000c .L0 
     /tmp/ccBwJVte.s:1290   .text._ZN8KConsole23getOutputBufferHasSpaceEv:000000000000001c .L0 
     /tmp/ccBwJVte.s:1291   .text._ZN8KConsole23getOutputBufferHasSpaceEv:000000000000001c .L0 
     /tmp/ccBwJVte.s:1293   .text._ZN8KConsole23getOutputBufferHasSpaceEv:0000000000000020 .L0 
     /tmp/ccBwJVte.s:1295   .text._ZN8KConsole23getOutputBufferHasSpaceEv:0000000000000024 .L0 
     /tmp/ccBwJVte.s:1305   .text._ZN8KConsole13getOutputHeadEv:0000000000000000 .L0 
     /tmp/ccBwJVte.s:1306   .text._ZN8KConsole13getOutputHeadEv:0000000000000000 .L0 
     /tmp/ccBwJVte.s:1307   .text._ZN8KConsole13getOutputHeadEv:0000000000000004 .L0 
     /tmp/ccBwJVte.s:1309   .text._ZN8KConsole13getOutputHeadEv:0000000000000008 .L0 
     /tmp/ccBwJVte.s:1311   .text._ZN8KConsole13getOutputHeadEv:000000000000000c .L0 
     /tmp/ccBwJVte.s:1313   .text._ZN8KConsole13getOutputHeadEv:000000000000000c .L0 
     /tmp/ccBwJVte.s:1314   .text._ZN8KConsole13getOutputHeadEv:000000000000000c .L0 
     /tmp/ccBwJVte.s:1317   .text._ZN8KConsole13getOutputHeadEv:000000000000001c .L0 
     /tmp/ccBwJVte.s:1318   .text._ZN8KConsole13getOutputHeadEv:000000000000001c .L0 
     /tmp/ccBwJVte.s:1320   .text._ZN8KConsole13getOutputHeadEv:0000000000000020 .L0 
     /tmp/ccBwJVte.s:1322   .text._ZN8KConsole13getOutputHeadEv:0000000000000024 .L0 
     /tmp/ccBwJVte.s:1332   .text._ZN8KConsole13getOutputTailEv:0000000000000000 .L0 
     /tmp/ccBwJVte.s:1333   .text._ZN8KConsole13getOutputTailEv:0000000000000000 .L0 
     /tmp/ccBwJVte.s:1334   .text._ZN8KConsole13getOutputTailEv:0000000000000004 .L0 
GAS LISTING /tmp/ccBwJVte.s 			page 46


     /tmp/ccBwJVte.s:1336   .text._ZN8KConsole13getOutputTailEv:0000000000000008 .L0 
     /tmp/ccBwJVte.s:1338   .text._ZN8KConsole13getOutputTailEv:000000000000000c .L0 
     /tmp/ccBwJVte.s:1340   .text._ZN8KConsole13getOutputTailEv:000000000000000c .L0 
     /tmp/ccBwJVte.s:1341   .text._ZN8KConsole13getOutputTailEv:000000000000000c .L0 
     /tmp/ccBwJVte.s:1344   .text._ZN8KConsole13getOutputTailEv:000000000000001c .L0 
     /tmp/ccBwJVte.s:1345   .text._ZN8KConsole13getOutputTailEv:000000000000001c .L0 
     /tmp/ccBwJVte.s:1347   .text._ZN8KConsole13getOutputTailEv:0000000000000020 .L0 
     /tmp/ccBwJVte.s:1349   .text._ZN8KConsole13getOutputTailEv:0000000000000024 .L0 
     /tmp/ccBwJVte.s:1360   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000000 .L0 
     /tmp/ccBwJVte.s:1362   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000000 .L0 
     /tmp/ccBwJVte.s:1363   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000004 .L0 
     /tmp/ccBwJVte.s:1365   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000008 .L0 
     /tmp/ccBwJVte.s:1367   .text._ZN3TCB9setStatusENS_12ThreadStatusE:000000000000000c .L0 
     /tmp/ccBwJVte.s:1369   .text._ZN3TCB9setStatusENS_12ThreadStatusE:000000000000000c .L0 
     /tmp/ccBwJVte.s:1370   .text._ZN3TCB9setStatusENS_12ThreadStatusE:000000000000000c .L0 
     /tmp/ccBwJVte.s:1372   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000010 .L0 
     /tmp/ccBwJVte.s:1373   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000014 .L0 
     /tmp/ccBwJVte.s:1374   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000014 .L0 
     /tmp/ccBwJVte.s:1376   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000018 .L0 
     /tmp/ccBwJVte.s:1378   .text._ZN3TCB9setStatusENS_12ThreadStatusE:000000000000001c .L0 
     /tmp/ccBwJVte.s:1388   .text._ZN3TCB12getTimeSliceEv:0000000000000000 .L0 
     /tmp/ccBwJVte.s:1390   .text._ZN3TCB12getTimeSliceEv:0000000000000000 .L0 
     /tmp/ccBwJVte.s:1391   .text._ZN3TCB12getTimeSliceEv:0000000000000004 .L0 
     /tmp/ccBwJVte.s:1393   .text._ZN3TCB12getTimeSliceEv:0000000000000008 .L0 
     /tmp/ccBwJVte.s:1395   .text._ZN3TCB12getTimeSliceEv:000000000000000c .L0 
     /tmp/ccBwJVte.s:1397   .text._ZN3TCB12getTimeSliceEv:000000000000000c .L0 
     /tmp/ccBwJVte.s:1398   .text._ZN3TCB12getTimeSliceEv:000000000000000c .L0 
     /tmp/ccBwJVte.s:1401   .text._ZN3TCB12getTimeSliceEv:0000000000000014 .L0 
     /tmp/ccBwJVte.s:1402   .text._ZN3TCB12getTimeSliceEv:0000000000000014 .L0 
     /tmp/ccBwJVte.s:1404   .text._ZN3TCB12getTimeSliceEv:0000000000000018 .L0 
     /tmp/ccBwJVte.s:1406   .text._ZN3TCB12getTimeSliceEv:000000000000001c .L0 
     /tmp/ccBwJVte.s:1416   .text._ZN3TCB7getBodyEv:0000000000000000 .L0 
     /tmp/ccBwJVte.s:1418   .text._ZN3TCB7getBodyEv:0000000000000000 .L0 
     /tmp/ccBwJVte.s:1419   .text._ZN3TCB7getBodyEv:0000000000000004 .L0 
     /tmp/ccBwJVte.s:1421   .text._ZN3TCB7getBodyEv:0000000000000008 .L0 
     /tmp/ccBwJVte.s:1423   .text._ZN3TCB7getBodyEv:000000000000000c .L0 
     /tmp/ccBwJVte.s:1425   .text._ZN3TCB7getBodyEv:000000000000000c .L0 
     /tmp/ccBwJVte.s:1426   .text._ZN3TCB7getBodyEv:000000000000000c .L0 
     /tmp/ccBwJVte.s:1429   .text._ZN3TCB7getBodyEv:0000000000000014 .L0 
     /tmp/ccBwJVte.s:1430   .text._ZN3TCB7getBodyEv:0000000000000014 .L0 
     /tmp/ccBwJVte.s:1432   .text._ZN3TCB7getBodyEv:0000000000000018 .L0 
     /tmp/ccBwJVte.s:1434   .text._ZN3TCB7getBodyEv:000000000000001c .L0 
     /tmp/ccBwJVte.s:1444   .text._ZN3TCB10getRunningEv:0000000000000000 .L0 
     /tmp/ccBwJVte.s:1445   .text._ZN3TCB10getRunningEv:0000000000000000 .L0 
     /tmp/ccBwJVte.s:1446   .text._ZN3TCB10getRunningEv:0000000000000004 .L0 
     /tmp/ccBwJVte.s:1448   .text._ZN3TCB10getRunningEv:0000000000000008 .L0 
     /tmp/ccBwJVte.s:1450   .text._ZN3TCB10getRunningEv:000000000000000c .L0 
     /tmp/ccBwJVte.s:1452   .text._ZN3TCB10getRunningEv:000000000000000c .L0 
     /tmp/ccBwJVte.s:1453   .text._ZN3TCB10getRunningEv:000000000000000c .L0 
     /tmp/ccBwJVte.s:1456   .text._ZN3TCB10getRunningEv:000000000000001c .L0 
     /tmp/ccBwJVte.s:1457   .text._ZN3TCB10getRunningEv:000000000000001c .L0 
     /tmp/ccBwJVte.s:1459   .text._ZN3TCB10getRunningEv:0000000000000020 .L0 
     /tmp/ccBwJVte.s:1461   .text._ZN3TCB10getRunningEv:0000000000000024 .L0 
     /tmp/ccBwJVte.s:1471   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000000 .L0 
     /tmp/ccBwJVte.s:1472   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000000 .L0 
     /tmp/ccBwJVte.s:1473   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000004 .L0 
     /tmp/ccBwJVte.s:1475   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000008 .L0 
GAS LISTING /tmp/ccBwJVte.s 			page 47


     /tmp/ccBwJVte.s:1477   .text._ZN3TCB19getRunningTimeSliceEv:000000000000000c .L0 
     /tmp/ccBwJVte.s:1479   .text._ZN3TCB19getRunningTimeSliceEv:000000000000000c .L0 
     /tmp/ccBwJVte.s:1480   .text._ZN3TCB19getRunningTimeSliceEv:000000000000000c .L0 
     /tmp/ccBwJVte.s:1482   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000018 .L0 
     /tmp/ccBwJVte.s:1483   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000018 .L0 
     /tmp/ccBwJVte.s:1485   .text._ZN3TCB19getRunningTimeSliceEv:000000000000001c .L0 
     /tmp/ccBwJVte.s:1487   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000020 .L0 
     /tmp/ccBwJVte.s:97     .text._ZN4KSemD2Ev:000000000000004c .L0 
     /tmp/ccBwJVte.s:1497   .text:00000000000006a8 .L0 
     /tmp/ccBwJVte.s:1182   .text._ZN5Riscv6mc_sipEm:000000000000001c .L0 
     /tmp/ccBwJVte.s:1212   .text._ZN8KConsole10getSRvalueEv:0000000000000028 .L0 
     /tmp/ccBwJVte.s:1241   .text._ZN8KConsole10getDRvalueEv:0000000000000028 .L0 
     /tmp/ccBwJVte.s:1271   .text._ZN8KConsole10setDRvalueEc:0000000000000028 .L0 
     /tmp/ccBwJVte.s:1298   .text._ZN8KConsole23getOutputBufferHasSpaceEv:0000000000000024 .L0 
     /tmp/ccBwJVte.s:1325   .text._ZN8KConsole13getOutputHeadEv:0000000000000024 .L0 
     /tmp/ccBwJVte.s:1352   .text._ZN8KConsole13getOutputTailEv:0000000000000024 .L0 
     /tmp/ccBwJVte.s:1381   .text._ZN3TCB9setStatusENS_12ThreadStatusE:000000000000001c .L0 
     /tmp/ccBwJVte.s:1409   .text._ZN3TCB12getTimeSliceEv:000000000000001c .L0 
     /tmp/ccBwJVte.s:1437   .text._ZN3TCB7getBodyEv:000000000000001c .L0 
     /tmp/ccBwJVte.s:1464   .text._ZN3TCB10getRunningEv:0000000000000024 .L0 
     /tmp/ccBwJVte.s:1490   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000020 .L0 
     /tmp/ccBwJVte.s:255    .rodata:0000000000000074 .L13
     /tmp/ccBwJVte.s:245    .text:00000000000000ac .L0 
     /tmp/ccBwJVte.s:249    .text:00000000000000c0 .L0 
     /tmp/ccBwJVte.s:394    .text:0000000000000148 .L0 
     /tmp/ccBwJVte.s:800    .text:00000000000003e0 .L0 
     /tmp/ccBwJVte.s:99     .rodata:0000000000000000 .LC0
     /tmp/ccBwJVte.s:819    .text:000000000000040c .L0 
     /tmp/ccBwJVte.s:102    .rodata:0000000000000018 .LC1
     /tmp/ccBwJVte.s:833    .text:0000000000000438 .L0 
     /tmp/ccBwJVte.s:105    .rodata:0000000000000028 .LC2
     /tmp/ccBwJVte.s:847    .text:0000000000000464 .L0 
     /tmp/ccBwJVte.s:108    .rodata:0000000000000030 .LC3
     /tmp/ccBwJVte.s:958    .text:000000000000053c .L0 
     /tmp/ccBwJVte.s:111    .rodata:0000000000000048 .LC4
     /tmp/ccBwJVte.s:1081   .text:0000000000000618 .L0 
     /tmp/ccBwJVte.s:114    .rodata:0000000000000068 .LC5
     /tmp/ccBwJVte.s:1086   .text:0000000000000628 .L0 
     /tmp/ccBwJVte.s:1100   .text:0000000000000654 .L0 
     /tmp/ccBwJVte.s:225    .text:000000000000006c .L7
     /tmp/ccBwJVte.s:908    .text:00000000000004d4 .L8
     /tmp/ccBwJVte.s:790    .text:00000000000003cc .L9
     /tmp/ccBwJVte.s:815    .text:000000000000040c .L10
     /tmp/ccBwJVte.s:325    .text:00000000000000d0 .L11
     /tmp/ccBwJVte.s:739    .text:0000000000000380 .L27
     /tmp/ccBwJVte.s:876    .text:00000000000004b0 .L28
     /tmp/ccBwJVte.s:412    .text:0000000000000170 .L29
     /tmp/ccBwJVte.s:403    .text:0000000000000168 .L30
     /tmp/ccBwJVte.s:420    .text:0000000000000174 .L31
     /tmp/ccBwJVte.s:518    .text:0000000000000210 .L32
     /tmp/ccBwJVte.s:526    .text:0000000000000214 .L33
     /tmp/ccBwJVte.s:861    .text:0000000000000494 .L50
     /tmp/ccBwJVte.s:616    .text:0000000000000294 .L35
     /tmp/ccBwJVte.s:624    .text:0000000000000298 .L36
     /tmp/ccBwJVte.s:865    .text:000000000000049c .L51
     /tmp/ccBwJVte.s:869    .text:00000000000004a4 .L52
     /tmp/ccBwJVte.s:720    .text:0000000000000354 .L39
GAS LISTING /tmp/ccBwJVte.s 			page 48


     /tmp/ccBwJVte.s:705    .text:0000000000000334 .L40
     /tmp/ccBwJVte.s:678    .text:00000000000002f4 .L12
     /tmp/ccBwJVte.s:771    .text:00000000000003c0 .L41
     /tmp/ccBwJVte.s:779    .text:00000000000003c4 .L42
     /tmp/ccBwJVte.s:873    .text:00000000000004ac .L53
     /tmp/ccBwJVte.s:1128   .text:0000000000000690 .L54
     /tmp/ccBwJVte.s:998    .text:0000000000000580 .L45
     /tmp/ccBwJVte.s:955    .text:000000000000053c .L46
     /tmp/ccBwJVte.s:962    .text:000000000000054c .L47
     /tmp/ccBwJVte.s:1075   .text:0000000000000618 .L48
     /tmp/ccBwJVte.s:1047   .text:00000000000005f8 .L49
     /tmp/ccBwJVte.s:66     .text._ZN4KSemD2Ev:0000000000000038 .L1
     /tmp/ccBwJVte.s:30     .text._ZN4KSemD2Ev:0000000000000018 .L3
     /tmp/ccBwJVte.s:330    .text:00000000000000e0 .L26
     /tmp/ccBwJVte.s:348    .text:00000000000000f4 .L25
     /tmp/ccBwJVte.s:366    .text:000000000000010c .L24
     /tmp/ccBwJVte.s:431    .text:000000000000017c .L23
     /tmp/ccBwJVte.s:465    .text:00000000000001b4 .L22
     /tmp/ccBwJVte.s:474    .text:00000000000001c0 .L21
     /tmp/ccBwJVte.s:489    .text:00000000000001dc .L20
     /tmp/ccBwJVte.s:537    .text:000000000000021c .L19
     /tmp/ccBwJVte.s:567    .text:0000000000000254 .L18
     /tmp/ccBwJVte.s:585    .text:000000000000026c .L17
     /tmp/ccBwJVte.s:603    .text:0000000000000284 .L16
     /tmp/ccBwJVte.s:651    .text:00000000000002cc .L15
     /tmp/ccBwJVte.s:667    .text:00000000000002dc .L14
     /tmp/ccBwJVte.s:1199   .text._ZN8KConsole10getSRvalueEv:000000000000000c .L0 
     /tmp/ccBwJVte.s:1228   .text._ZN8KConsole10getDRvalueEv:000000000000000c .L0 
     /tmp/ccBwJVte.s:1257   .text._ZN8KConsole10setDRvalueEc:000000000000000c .L0 
     /tmp/ccBwJVte.s:1287   .text._ZN8KConsole23getOutputBufferHasSpaceEv:000000000000000c .L0 
     /tmp/ccBwJVte.s:1314   .text._ZN8KConsole13getOutputHeadEv:000000000000000c .L0 
     /tmp/ccBwJVte.s:1341   .text._ZN8KConsole13getOutputTailEv:000000000000000c .L0 
     /tmp/ccBwJVte.s:1453   .text._ZN3TCB10getRunningEv:000000000000000c .L0 
     /tmp/ccBwJVte.s:1480   .text._ZN3TCB19getRunningTimeSliceEv:000000000000000c .L0 
     /tmp/ccBwJVte.s:3937   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccBwJVte.s:6224   .debug_str:0000000000000bad .LASF240
     /tmp/ccBwJVte.s:6096   .debug_str:000000000000080d .LASF241
     /tmp/ccBwJVte.s:6168   .debug_str:0000000000000a41 .LASF242
     /tmp/ccBwJVte.s:5788   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccBwJVte.s:5820   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccBwJVte.s:6134   .debug_str:0000000000000933 .LASF3
     /tmp/ccBwJVte.s:5992   .debug_str:0000000000000503 .LASF0
     /tmp/ccBwJVte.s:6020   .debug_str:00000000000005c0 .LASF1
     /tmp/ccBwJVte.s:6146   .debug_str:000000000000099f .LASF2
     /tmp/ccBwJVte.s:5934   .debug_str:000000000000032b .LASF4
     /tmp/ccBwJVte.s:6162   .debug_str:0000000000000a20 .LASF5
     /tmp/ccBwJVte.s:6004   .debug_str:000000000000054b .LASF6
     /tmp/ccBwJVte.s:5844   .debug_str:00000000000000a5 .LASF7
     /tmp/ccBwJVte.s:6106   .debug_str:000000000000086a .LASF8
     /tmp/ccBwJVte.s:6094   .debug_str:00000000000007fa .LASF9
     /tmp/ccBwJVte.s:6010   .debug_str:0000000000000579 .LASF10
     /tmp/ccBwJVte.s:5960   .debug_str:0000000000000406 .LASF11
     /tmp/ccBwJVte.s:5974   .debug_str:0000000000000473 .LASF12
     /tmp/ccBwJVte.s:5878   .debug_str:0000000000000191 .LASF13
     /tmp/ccBwJVte.s:5946   .debug_str:00000000000003a3 .LASF14
     /tmp/ccBwJVte.s:5898   .debug_str:0000000000000216 .LASF15
     /tmp/ccBwJVte.s:5876   .debug_str:0000000000000181 .LASF16
GAS LISTING /tmp/ccBwJVte.s 			page 49


     /tmp/ccBwJVte.s:6196   .debug_str:0000000000000b04 .LASF17
     /tmp/ccBwJVte.s:5930   .debug_str:00000000000002f7 .LASF18
     /tmp/ccBwJVte.s:6182   .debug_str:0000000000000ab5 .LASF19
     /tmp/ccBwJVte.s:6280   .debug_str:0000000000000ded .LASF51
     /tmp/ccBwJVte.s:6130   .debug_str:000000000000091e .LASF72
     /tmp/ccBwJVte.s:6026   .debug_str:00000000000005e6 .LASF20
     /tmp/ccBwJVte.s:5850   .debug_str:00000000000000ca .LASF21
     /tmp/ccBwJVte.s:6296   .debug_str:0000000000000e60 .LASF22
     /tmp/ccBwJVte.s:6050   .debug_str:000000000000068f .LASF53
     /tmp/ccBwJVte.s:6258   .debug_str:0000000000000d60 .LASF55
     /tmp/ccBwJVte.s:6256   .debug_str:0000000000000d57 .LASF23
     /tmp/ccBwJVte.s:6246   .debug_str:0000000000000cf6 .LASF25
     /tmp/ccBwJVte.s:6142   .debug_str:000000000000098b .LASF27
     /tmp/ccBwJVte.s:6080   .debug_str:0000000000000784 .LASF29
     /tmp/ccBwJVte.s:6116   .debug_str:00000000000008a9 .LASF24
     /tmp/ccBwJVte.s:6124   .debug_str:00000000000008e2 .LASF26
     /tmp/ccBwJVte.s:6068   .debug_str:0000000000000728 .LASF28
     /tmp/ccBwJVte.s:6012   .debug_str:000000000000058c .LASF30
     /tmp/ccBwJVte.s:6294   .debug_str:0000000000000e58 .LASF31
     /tmp/ccBwJVte.s:6228   .debug_str:0000000000000c76 .LASF32
     /tmp/ccBwJVte.s:6062   .debug_str:0000000000000705 .LASF33
     /tmp/ccBwJVte.s:6078   .debug_str:0000000000000770 .LASF34
     /tmp/ccBwJVte.s:6192   .debug_str:0000000000000af0 .LASF35
     /tmp/ccBwJVte.s:6164   .debug_str:0000000000000a27 .LASF36
     /tmp/ccBwJVte.s:6166   .debug_str:0000000000000a3a .LASF37
     /tmp/ccBwJVte.s:5886   .debug_str:00000000000001bd .LASF38
     /tmp/ccBwJVte.s:5926   .debug_str:00000000000002e4 .LASF39
     /tmp/ccBwJVte.s:5984   .debug_str:00000000000004d6 .LASF40
     /tmp/ccBwJVte.s:5998   .debug_str:000000000000052f .LASF41
     /tmp/ccBwJVte.s:5912   .debug_str:000000000000029d .LASF42
     /tmp/ccBwJVte.s:5846   .debug_str:00000000000000ac .LASF43
     /tmp/ccBwJVte.s:6150   .debug_str:00000000000009b7 .LASF44
     /tmp/ccBwJVte.s:6144   .debug_str:0000000000000994 .LASF45
     /tmp/ccBwJVte.s:6318   .debug_str:0000000000000f0f .LASF46
     /tmp/ccBwJVte.s:6282   .debug_str:0000000000000df3 .LASF47
     /tmp/ccBwJVte.s:6298   .debug_str:0000000000000e69 .LASF48
     /tmp/ccBwJVte.s:6276   .debug_str:0000000000000dcd .LASF49
     /tmp/ccBwJVte.s:6048   .debug_str:0000000000000679 .LASF50
     /tmp/ccBwJVte.s:6236   .debug_str:0000000000000cb9 .LASF66
     /tmp/ccBwJVte.s:5904   .debug_str:0000000000000256 .LASF68
     /tmp/ccBwJVte.s:5938   .debug_str:000000000000034d .LASF52
     /tmp/ccBwJVte.s:5870   .debug_str:0000000000000151 .LASF54
     /tmp/ccBwJVte.s:6118   .debug_str:00000000000008b0 .LASF56
     /tmp/ccBwJVte.s:5950   .debug_str:00000000000003ca .LASF57
     /tmp/ccBwJVte.s:5964   .debug_str:000000000000041c .LASF59
     /tmp/ccBwJVte.s:5954   .debug_str:00000000000003d7 .LASF58
     /tmp/ccBwJVte.s:5996   .debug_str:000000000000051a .LASF60
     /tmp/ccBwJVte.s:5988   .debug_str:00000000000004f1 .LASF61
     /tmp/ccBwJVte.s:6044   .debug_str:0000000000000660 .LASF62
     /tmp/ccBwJVte.s:6152   .debug_str:00000000000009cf .LASF63
     /tmp/ccBwJVte.s:6122   .debug_str:00000000000008d8 .LASF64
     /tmp/ccBwJVte.s:6100   .debug_str:000000000000082c .LASF65
     /tmp/ccBwJVte.s:6088   .debug_str:00000000000007c8 .LASF67
     /tmp/ccBwJVte.s:6260   .debug_str:0000000000000d81 .LASF69
     /tmp/ccBwJVte.s:6040   .debug_str:0000000000000649 .LASF70
     /tmp/ccBwJVte.s:6274   .debug_str:0000000000000dc4 .LASF71
     /tmp/ccBwJVte.s:6176   .debug_str:0000000000000a84 .LASF73
GAS LISTING /tmp/ccBwJVte.s 			page 50


     /tmp/ccBwJVte.s:6114   .debug_str:00000000000008a1 .LASF74
     /tmp/ccBwJVte.s:5910   .debug_str:0000000000000296 .LASF75
     /tmp/ccBwJVte.s:5826   .debug_str:0000000000000026 .LASF76
     /tmp/ccBwJVte.s:5966   .debug_str:0000000000000432 .LASF77
     /tmp/ccBwJVte.s:6016   .debug_str:00000000000005af .LASF78
     /tmp/ccBwJVte.s:5866   .debug_str:0000000000000133 .LASF79
     /tmp/ccBwJVte.s:6206   .debug_str:0000000000000b34 .LASF149
     /tmp/ccBwJVte.s:5882   .debug_str:00000000000001a5 .LASF80
     /tmp/ccBwJVte.s:5976   .debug_str:0000000000000481 .LASF81
     /tmp/ccBwJVte.s:6132   .debug_str:0000000000000929 .LASF86
     /tmp/ccBwJVte.s:6036   .debug_str:000000000000062a .LASF88
     /tmp/ccBwJVte.s:6194   .debug_str:0000000000000af7 .LASF82
     /tmp/ccBwJVte.s:6292   .debug_str:0000000000000e36 .LASF83
     /tmp/ccBwJVte.s:6086   .debug_str:00000000000007c3 .LASF243
     /tmp/ccBwJVte.s:6308   .debug_str:0000000000000ec1 .LASF84
     /tmp/ccBwJVte.s:6006   .debug_str:000000000000055d .LASF85
     /tmp/ccBwJVte.s:6046   .debug_str:000000000000066c .LASF87
     /tmp/ccBwJVte.s:6128   .debug_str:0000000000000906 .LASF89
     /tmp/ccBwJVte.s:5916   .debug_str:00000000000002b8 .LASF90
     /tmp/ccBwJVte.s:6158   .debug_str:00000000000009fa .LASF91
     /tmp/ccBwJVte.s:6120   .debug_str:00000000000008d0 .LASF92
     /tmp/ccBwJVte.s:6042   .debug_str:000000000000064e .LASF93
     /tmp/ccBwJVte.s:5922   .debug_str:00000000000002d3 .LASF94
     /tmp/ccBwJVte.s:6180   .debug_str:0000000000000a9f .LASF95
     /tmp/ccBwJVte.s:5830   .debug_str:0000000000000037 .LASF96
     /tmp/ccBwJVte.s:6214   .debug_str:0000000000000b5b .LASF97
     /tmp/ccBwJVte.s:6254   .debug_str:0000000000000d43 .LASF98
     /tmp/ccBwJVte.s:6082   .debug_str:0000000000000799 .LASF99
     /tmp/ccBwJVte.s:6252   .debug_str:0000000000000d38 .LASF100
     /tmp/ccBwJVte.s:5948   .debug_str:00000000000003b2 .LASF101
     /tmp/ccBwJVte.s:6322   .debug_str:0000000000000f34 .LASF102
     /tmp/ccBwJVte.s:5942   .debug_str:0000000000000362 .LASF103
     /tmp/ccBwJVte.s:5918   .debug_str:00000000000002c5 .LASF104
     /tmp/ccBwJVte.s:5890   .debug_str:00000000000001d6 .LASF105
     /tmp/ccBwJVte.s:6266   .debug_str:0000000000000dab .LASF106
     /tmp/ccBwJVte.s:5852   .debug_str:00000000000000d3 .LASF107
     /tmp/ccBwJVte.s:6320   .debug_str:0000000000000f27 .LASF108
     /tmp/ccBwJVte.s:5970   .debug_str:0000000000000452 .LASF109
     /tmp/ccBwJVte.s:5832   .debug_str:0000000000000042 .LASF110
     /tmp/ccBwJVte.s:6076   .debug_str:0000000000000763 .LASF111
     /tmp/ccBwJVte.s:6304   .debug_str:0000000000000e9d .LASF214
     /tmp/ccBwJVte.s:6244   .debug_str:0000000000000cee .LASF112
     /tmp/ccBwJVte.s:5874   .debug_str:0000000000000172 .LASF113
     /tmp/ccBwJVte.s:6314   .debug_str:0000000000000ee8 .LASF114
     /tmp/ccBwJVte.s:6202   .debug_str:0000000000000b24 .LASF115
     /tmp/ccBwJVte.s:6230   .debug_str:0000000000000c8a .LASF116
     /tmp/ccBwJVte.s:6222   .debug_str:0000000000000b9d .LASF117
     /tmp/ccBwJVte.s:6090   .debug_str:00000000000007d0 .LASF118
     /tmp/ccBwJVte.s:5940   .debug_str:0000000000000355 .LASF119
     /tmp/ccBwJVte.s:6160   .debug_str:0000000000000a12 .LASF120
     /tmp/ccBwJVte.s:6270   .debug_str:0000000000000db8 .LASF121
     /tmp/ccBwJVte.s:6220   .debug_str:0000000000000b95 .LASF122
     /tmp/ccBwJVte.s:6126   .debug_str:00000000000008f5 .LASF123
     /tmp/ccBwJVte.s:5906   .debug_str:000000000000026e .LASF146
     /tmp/ccBwJVte.s:5836   .debug_str:000000000000005a .LASF155
     /tmp/ccBwJVte.s:5962   .debug_str:0000000000000416 .LASF124
     /tmp/ccBwJVte.s:6184   .debug_str:0000000000000acb .LASF125
GAS LISTING /tmp/ccBwJVte.s 			page 51


     /tmp/ccBwJVte.s:6018   .debug_str:00000000000005b8 .LASF126
     /tmp/ccBwJVte.s:6074   .debug_str:0000000000000750 .LASF127
     /tmp/ccBwJVte.s:5920   .debug_str:00000000000002ce .LASF128
     /tmp/ccBwJVte.s:5872   .debug_str:0000000000000162 .LASF129
     /tmp/ccBwJVte.s:6200   .debug_str:0000000000000b1d .LASF130
     /tmp/ccBwJVte.s:5862   .debug_str:0000000000000118 .LASF131
     /tmp/ccBwJVte.s:5914   .debug_str:00000000000002af .LASF132
     /tmp/ccBwJVte.s:6066   .debug_str:0000000000000712 .LASF133
     /tmp/ccBwJVte.s:5928   .debug_str:00000000000002ea .LASF134
     /tmp/ccBwJVte.s:5838   .debug_str:0000000000000082 .LASF135
     /tmp/ccBwJVte.s:5990   .debug_str:00000000000004fd .LASF136
     /tmp/ccBwJVte.s:6216   .debug_str:0000000000000b73 .LASF137
     /tmp/ccBwJVte.s:5834   .debug_str:0000000000000052 .LASF138
     /tmp/ccBwJVte.s:5848   .debug_str:00000000000000b7 .LASF139
     /tmp/ccBwJVte.s:6286   .debug_str:0000000000000e18 .LASF140
     /tmp/ccBwJVte.s:6250   .debug_str:0000000000000d28 .LASF141
     /tmp/ccBwJVte.s:6148   .debug_str:00000000000009ad .LASF142
     /tmp/ccBwJVte.s:6014   .debug_str:000000000000059f .LASF143
     /tmp/ccBwJVte.s:6108   .debug_str:0000000000000871 .LASF144
     /tmp/ccBwJVte.s:6264   .debug_str:0000000000000da3 .LASF145
     /tmp/ccBwJVte.s:5924   .debug_str:00000000000002de .LASF147
     /tmp/ccBwJVte.s:6240   .debug_str:0000000000000cc9 .LASF244
     /tmp/ccBwJVte.s:6070   .debug_str:000000000000072f .LASF148
     /tmp/ccBwJVte.s:6272   .debug_str:0000000000000dbf .LASF150
     /tmp/ccBwJVte.s:6238   .debug_str:0000000000000cc4 .LASF151
     /tmp/ccBwJVte.s:5880   .debug_str:00000000000001a0 .LASF152
     /tmp/ccBwJVte.s:5932   .debug_str:000000000000030d .LASF153
     /tmp/ccBwJVte.s:5908   .debug_str:000000000000027c .LASF154
     /tmp/ccBwJVte.s:5900   .debug_str:0000000000000226 .LASF156
     /tmp/ccBwJVte.s:5858   .debug_str:0000000000000107 .LASF157
     /tmp/ccBwJVte.s:6054   .debug_str:00000000000006bf .LASF158
     /tmp/ccBwJVte.s:5856   .debug_str:00000000000000f2 .LASF159
     /tmp/ccBwJVte.s:5968   .debug_str:000000000000043a .LASF160
     /tmp/ccBwJVte.s:6242   .debug_str:0000000000000cd6 .LASF245
     /tmp/ccBwJVte.s:6208   .debug_str:0000000000000b3c .LASF161
     /tmp/ccBwJVte.s:6028   .debug_str:00000000000005ef .LASF162
     /tmp/ccBwJVte.s:6000   .debug_str:0000000000000535 .LASF163
     /tmp/ccBwJVte.s:5936   .debug_str:0000000000000331 .LASF164
     /tmp/ccBwJVte.s:6024   .debug_str:00000000000005de .LASF165
     /tmp/ccBwJVte.s:6056   .debug_str:00000000000006c4 .LASF166
     /tmp/ccBwJVte.s:5864   .debug_str:000000000000012a .LASF167
     /tmp/ccBwJVte.s:6052   .debug_str:00000000000006a3 .LASF168
     /tmp/ccBwJVte.s:5902   .debug_str:0000000000000241 .LASF169
     /tmp/ccBwJVte.s:6278   .debug_str:0000000000000dd7 .LASF170
     /tmp/ccBwJVte.s:6034   .debug_str:0000000000000621 .LASF171
     /tmp/ccBwJVte.s:6198   .debug_str:0000000000000b10 .LASF172
     /tmp/ccBwJVte.s:6248   .debug_str:0000000000000d0b .LASF173
     /tmp/ccBwJVte.s:6170   .debug_str:0000000000000a5f .LASF174
     /tmp/ccBwJVte.s:6072   .debug_str:000000000000073b .LASF175
     /tmp/ccBwJVte.s:6098   .debug_str:0000000000000826 .LASF176
     /tmp/ccBwJVte.s:6060   .debug_str:00000000000006f0 .LASF177
     /tmp/ccBwJVte.s:6002   .debug_str:000000000000053d .LASF178
     /tmp/ccBwJVte.s:6092   .debug_str:00000000000007dc .LASF179
     /tmp/ccBwJVte.s:5980   .debug_str:00000000000004b1 .LASF180
     /tmp/ccBwJVte.s:6140   .debug_str:000000000000096e .LASF181
     /tmp/ccBwJVte.s:5888   .debug_str:00000000000001d0 .LASF182
     /tmp/ccBwJVte.s:5868   .debug_str:000000000000013c .LASF183
GAS LISTING /tmp/ccBwJVte.s 			page 52


     /tmp/ccBwJVte.s:5840   .debug_str:0000000000000090 .LASF184
     /tmp/ccBwJVte.s:6284   .debug_str:0000000000000dfd .LASF185
     /tmp/ccBwJVte.s:5824   .debug_str:000000000000001b .LASF186
     /tmp/ccBwJVte.s:5958   .debug_str:00000000000003eb .LASF187
     /tmp/ccBwJVte.s:6204   .debug_str:0000000000000b29 .LASF188
     /tmp/ccBwJVte.s:5822   .debug_str:0000000000000000 .LASF189
     /tmp/ccBwJVte.s:6032   .debug_str:0000000000000609 .LASF190
     /tmp/ccBwJVte.s:5944   .debug_str:000000000000037b .LASF191
     /tmp/ccBwJVte.s:6156   .debug_str:00000000000009ec .LASF192
     /tmp/ccBwJVte.s:6104   .debug_str:000000000000084c .LASF193
     /tmp/ccBwJVte.s:5884   .debug_str:00000000000001af .LASF194
     /tmp/ccBwJVte.s:6110   .debug_str:0000000000000879 .LASF195
     /tmp/ccBwJVte.s:6218   .debug_str:0000000000000b84 .LASF196
     /tmp/ccBwJVte.s:6188   .debug_str:0000000000000ad7 .LASF197
     /tmp/ccBwJVte.s:5972   .debug_str:000000000000045e .LASF198
     /tmp/ccBwJVte.s:6210   .debug_str:0000000000000b49 .LASF199
     /tmp/ccBwJVte.s:5956   .debug_str:00000000000003dd .LASF200
     /tmp/ccBwJVte.s:5828   .debug_str:000000000000002e .LASF246
     /tmp/ccBwJVte.s:6262   .debug_str:0000000000000d97 .LASF201
     /tmp/ccBwJVte.s:6058   .debug_str:00000000000006e3 .LASF202
     /tmp/ccBwJVte.s:5994   .debug_str:0000000000000510 .LASF203
     /tmp/ccBwJVte.s:6112   .debug_str:0000000000000897 .LASF204
     /tmp/ccBwJVte.s:6022   .debug_str:00000000000005d3 .LASF205
     /tmp/ccBwJVte.s:6084   .debug_str:00000000000007b8 .LASF206
     /tmp/ccBwJVte.s:6172   .debug_str:0000000000000a65 .LASF207
     /tmp/ccBwJVte.s:6212   .debug_str:0000000000000b56 .LASF208
     /tmp/ccBwJVte.s:6008   .debug_str:000000000000056f .LASF209
     /tmp/ccBwJVte.s:6190   .debug_str:0000000000000aeb .LASF210
     /tmp/ccBwJVte.s:6064   .debug_str:000000000000070d .LASF211
     /tmp/ccBwJVte.s:6312   .debug_str:0000000000000edb .LASF212
     /tmp/ccBwJVte.s:6302   .debug_str:0000000000000e8b .LASF213
     /tmp/ccBwJVte.s:5982   .debug_str:00000000000004be .LASF215
     /tmp/ccBwJVte.s:6310   .debug_str:0000000000000ec7 .LASF247
     /tmp/ccBwJVte.s:6232   .debug_str:0000000000000c94 .LASF216
     /tmp/ccBwJVte.s:6136   .debug_str:0000000000000938 .LASF217
     /tmp/ccBwJVte.s:5860   .debug_str:000000000000010d .LASF218
     /tmp/ccBwJVte.s:6316   .debug_str:0000000000000eee .LASF219
     /tmp/ccBwJVte.s:6030   .debug_str:0000000000000604 .LASF220
     /tmp/ccBwJVte.s:5894   .debug_str:00000000000001ee .LASF221
     /tmp/ccBwJVte.s:6102   .debug_str:000000000000083b .LASF222
     /tmp/ccBwJVte.s:121    .text:0000000000000000 .LFB58
     /tmp/ccBwJVte.s:1147   .text:00000000000006a8 .LFE58
     /tmp/ccBwJVte.s:6186   .debug_str:0000000000000ad0 .LASF223
     /tmp/ccBwJVte.s:5273   .debug_loc:0000000000000000 .LLST5
     /tmp/ccBwJVte.s:6226   .debug_str:0000000000000c71 .LASF224
     /tmp/ccBwJVte.s:5304   .debug_loc:0000000000000087 .LLST6
     /tmp/ccBwJVte.s:6288   .debug_str:0000000000000e25 .LASF225
     /tmp/ccBwJVte.s:5335   .debug_loc:000000000000010e .LLST7
     /tmp/ccBwJVte.s:5357   .debug_loc:000000000000016d .LLST8
     /tmp/ccBwJVte.s:5379   .debug_loc:00000000000001cc .LLST9
     /tmp/ccBwJVte.s:5401   .debug_loc:000000000000022d .LLST10
     /tmp/ccBwJVte.s:5423   .debug_loc:000000000000028e .LLST11
     /tmp/ccBwJVte.s:5445   .debug_loc:00000000000002ef .LLST12
     /tmp/ccBwJVte.s:697    .text:0000000000000324 .LBB30
     /tmp/ccBwJVte.s:735    .text:000000000000037c .LBE30
     /tmp/ccBwJVte.s:5629   .debug_loc:0000000000000620 .LLST13
     /tmp/ccBwJVte.s:701    .text:000000000000032c .LVL58
GAS LISTING /tmp/ccBwJVte.s 			page 53


     /tmp/ccBwJVte.s:710    .text:000000000000033c .LVL60
     /tmp/ccBwJVte.s:726    .text:0000000000000364 .LVL61
     /tmp/ccBwJVte.s:730    .text:000000000000036c .LVL62
     /tmp/ccBwJVte.s:734    .text:000000000000037c .LVL63
     /tmp/ccBwJVte.s:919    .text:00000000000004e8 .LBB33
     /tmp/ccBwJVte.s:991    .text:000000000000057c .LBE33
     /tmp/ccBwJVte.s:5637   .debug_loc:0000000000000645 .LLST14
     /tmp/ccBwJVte.s:923    .text:00000000000004f0 .LVL80
     /tmp/ccBwJVte.s:935    .text:000000000000050c .LVL82
     /tmp/ccBwJVte.s:947    .text:0000000000000528 .LVL83
     /tmp/ccBwJVte.s:952    .text:0000000000000538 .LVL84
     /tmp/ccBwJVte.s:961    .text:000000000000054c .LVL87
     /tmp/ccBwJVte.s:969    .text:0000000000000560 .LVL88
     /tmp/ccBwJVte.s:990    .text:000000000000057c .LVL89
     /tmp/ccBwJVte.s:337    .text:00000000000000ec .LVL22
     /tmp/ccBwJVte.s:355    .text:0000000000000104 .LVL24
     /tmp/ccBwJVte.s:380    .text:0000000000000130 .LVL26
     /tmp/ccBwJVte.s:402    .text:0000000000000168 .LVL27
     /tmp/ccBwJVte.s:436    .text:0000000000000184 .LVL29
     /tmp/ccBwJVte.s:441    .text:0000000000000198 .LVL30
     /tmp/ccBwJVte.s:445    .text:00000000000001a0 .LVL31
     /tmp/ccBwJVte.s:461    .text:00000000000001b0 .LVL32
     /tmp/ccBwJVte.s:470    .text:00000000000001bc .LVL34
     /tmp/ccBwJVte.s:481    .text:00000000000001d0 .LVL36
     /tmp/ccBwJVte.s:485    .text:00000000000001d8 .LVL37
     /tmp/ccBwJVte.s:500    .text:00000000000001f4 .LVL39
     /tmp/ccBwJVte.s:544    .text:000000000000022c .LVL41
     /tmp/ccBwJVte.s:560    .text:0000000000000244 .LVL42
     /tmp/ccBwJVte.s:563    .text:0000000000000250 .LVL43
     /tmp/ccBwJVte.s:574    .text:0000000000000264 .LVL45
     /tmp/ccBwJVte.s:592    .text:000000000000027c .LVL47
     /tmp/ccBwJVte.s:638    .text:00000000000002ac .LVL49
     /tmp/ccBwJVte.s:643    .text:00000000000002c0 .LVL50
     /tmp/ccBwJVte.s:647    .text:00000000000002c8 .LVL51
     /tmp/ccBwJVte.s:656    .text:00000000000002d4 .LVL53
     /tmp/ccBwJVte.s:675    .text:00000000000002f0 .LVL55
     /tmp/ccBwJVte.s:684    .text:00000000000002fc .LVL56
     /tmp/ccBwJVte.s:689    .text:000000000000030c .LVL57
     /tmp/ccBwJVte.s:753    .text:00000000000003a4 .LVL65
     /tmp/ccBwJVte.s:797    .text:00000000000003dc .LVL67
     /tmp/ccBwJVte.s:811    .text:0000000000000408 .LVL68
     /tmp/ccBwJVte.s:821    .text:000000000000041c .LVL70
     /tmp/ccBwJVte.s:830    .text:0000000000000438 .LVL71
     /tmp/ccBwJVte.s:835    .text:0000000000000448 .LVL72
     /tmp/ccBwJVte.s:844    .text:0000000000000464 .LVL73
     /tmp/ccBwJVte.s:849    .text:0000000000000474 .LVL74
     /tmp/ccBwJVte.s:858    .text:0000000000000490 .LVL75
     /tmp/ccBwJVte.s:1011   .text:000000000000059c .LVL91
     /tmp/ccBwJVte.s:1015   .text:00000000000005a4 .LVL92
     /tmp/ccBwJVte.s:1025   .text:00000000000005bc .LVL93
     /tmp/ccBwJVte.s:1031   .text:00000000000005cc .LVL94
     /tmp/ccBwJVte.s:1035   .text:00000000000005dc .LVL95
     /tmp/ccBwJVte.s:1046   .text:00000000000005f8 .LVL96
     /tmp/ccBwJVte.s:1068   .text:0000000000000614 .LVL97
     /tmp/ccBwJVte.s:1083   .text:0000000000000628 .LVL99
     /tmp/ccBwJVte.s:1088   .text:0000000000000638 .LVL100
     /tmp/ccBwJVte.s:1097   .text:0000000000000654 .LVL101
GAS LISTING /tmp/ccBwJVte.s 			page 54


     /tmp/ccBwJVte.s:1102   .text:0000000000000664 .LVL102
     /tmp/ccBwJVte.s:1111   .text:0000000000000680 .LVL103
     /tmp/ccBwJVte.s:5952   .debug_str:00000000000003d2 .LASF226
     /tmp/ccBwJVte.s:5842   .debug_str:000000000000009b .LASF227
     /tmp/ccBwJVte.s:5854   .debug_str:00000000000000e5 .LASF248
     /tmp/ccBwJVte.s:11     .text._ZN4KSemD2Ev:0000000000000000 .LFB60
     /tmp/ccBwJVte.s:85     .text._ZN4KSemD2Ev:000000000000004c .LFE60
     /tmp/ccBwJVte.s:5662   .debug_loc:00000000000006b8 .LLST0
     /tmp/ccBwJVte.s:31     .text._ZN4KSemD2Ev:0000000000000018 .LBB19
     /tmp/ccBwJVte.s:71     .text._ZN4KSemD2Ev:0000000000000038 .LBE19
     /tmp/ccBwJVte.s:5680   .debug_loc:0000000000000704 .LLST1
     /tmp/ccBwJVte.s:36     .text._ZN4KSemD2Ev:0000000000000018 .LBB21
     /tmp/ccBwJVte.s:43     .text._ZN4KSemD2Ev:000000000000001c .LBE21
     /tmp/ccBwJVte.s:5698   .debug_loc:0000000000000741 .LLST2
     /tmp/ccBwJVte.s:46     .text._ZN4KSemD2Ev:0000000000000020 .LBB23
     /tmp/ccBwJVte.s:69     .text._ZN4KSemD2Ev:0000000000000038 .LBE23
     /tmp/ccBwJVte.s:5707   .debug_loc:0000000000000766 .LLST3
     /tmp/ccBwJVte.s:58     .text._ZN4KSemD2Ev:000000000000002c .LBB24
     /tmp/ccBwJVte.s:68     .text._ZN4KSemD2Ev:0000000000000038 .LBE24
     /tmp/ccBwJVte.s:5714   .debug_loc:0000000000000789 .LLST4
     /tmp/ccBwJVte.s:63     .text._ZN4KSemD2Ev:0000000000000034 .LVL5
     /tmp/ccBwJVte.s:1469   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000000 .LFB50
     /tmp/ccBwJVte.s:1488   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000020 .LFE50
     /tmp/ccBwJVte.s:1442   .text._ZN3TCB10getRunningEv:0000000000000000 .LFB48
     /tmp/ccBwJVte.s:1462   .text._ZN3TCB10getRunningEv:0000000000000024 .LFE48
     /tmp/ccBwJVte.s:1414   .text._ZN3TCB7getBodyEv:0000000000000000 .LFB47
     /tmp/ccBwJVte.s:1435   .text._ZN3TCB7getBodyEv:000000000000001c .LFE47
     /tmp/ccBwJVte.s:5721   .debug_loc:00000000000007ac .LLST16
     /tmp/ccBwJVte.s:1386   .text._ZN3TCB12getTimeSliceEv:0000000000000000 .LFB45
     /tmp/ccBwJVte.s:1407   .text._ZN3TCB12getTimeSliceEv:000000000000001c .LFE45
     /tmp/ccBwJVte.s:5735   .debug_loc:00000000000007e5 .LLST15
     /tmp/ccBwJVte.s:1357   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000000 .LFB43
     /tmp/ccBwJVte.s:1379   .text._ZN3TCB9setStatusENS_12ThreadStatusE:000000000000001c .LFE43
     /tmp/ccBwJVte.s:5892   .debug_str:00000000000001e9 .LASF228
     /tmp/ccBwJVte.s:1330   .text._ZN8KConsole13getOutputTailEv:0000000000000000 .LFB39
     /tmp/ccBwJVte.s:1350   .text._ZN8KConsole13getOutputTailEv:0000000000000024 .LFE39
     /tmp/ccBwJVte.s:1303   .text._ZN8KConsole13getOutputHeadEv:0000000000000000 .LFB38
     /tmp/ccBwJVte.s:1323   .text._ZN8KConsole13getOutputHeadEv:0000000000000024 .LFE38
     /tmp/ccBwJVte.s:1276   .text._ZN8KConsole23getOutputBufferHasSpaceEv:0000000000000000 .LFB37
     /tmp/ccBwJVte.s:1296   .text._ZN8KConsole23getOutputBufferHasSpaceEv:0000000000000024 .LFE37
     /tmp/ccBwJVte.s:1246   .text._ZN8KConsole10setDRvalueEc:0000000000000000 .LFB36
     /tmp/ccBwJVte.s:1269   .text._ZN8KConsole10setDRvalueEc:0000000000000028 .LFE36
     /tmp/ccBwJVte.s:1217   .text._ZN8KConsole10getDRvalueEv:0000000000000000 .LFB35
     /tmp/ccBwJVte.s:1239   .text._ZN8KConsole10getDRvalueEv:0000000000000028 .LFE35
     /tmp/ccBwJVte.s:1187   .text._ZN8KConsole10getSRvalueEv:0000000000000000 .LFB34
     /tmp/ccBwJVte.s:1210   .text._ZN8KConsole10getSRvalueEv:0000000000000028 .LFE34
     /tmp/ccBwJVte.s:6154   .debug_str:00000000000009e7 .LASF249
     /tmp/ccBwJVte.s:6234   .debug_str:0000000000000ca4 .LASF250
     /tmp/ccBwJVte.s:1154   .text._ZN5Riscv6mc_sipEm:0000000000000000 .LFB7
     /tmp/ccBwJVte.s:1180   .text._ZN5Riscv6mc_sipEm:000000000000001c .LFE7
     /tmp/ccBwJVte.s:6268   .debug_str:0000000000000db3 .LASF229
     /tmp/ccBwJVte.s:6138   .debug_str:0000000000000959 .LASF230
     /tmp/ccBwJVte.s:5978   .debug_str:00000000000004a6 .LASF232
     /tmp/ccBwJVte.s:6038   .debug_str:000000000000063e .LASF231
     /tmp/ccBwJVte.s:5896   .debug_str:0000000000000203 .LASF233
     /tmp/ccBwJVte.s:6300   .debug_str:0000000000000e7f .LASF234
     /tmp/ccBwJVte.s:6178   .debug_str:0000000000000a91 .LASF235
GAS LISTING /tmp/ccBwJVte.s 			page 55


     /tmp/ccBwJVte.s:6174   .debug_str:0000000000000a75 .LASF236
     /tmp/ccBwJVte.s:6290   .debug_str:0000000000000e2d .LASF237
     /tmp/ccBwJVte.s:6306   .debug_str:0000000000000eb3 .LASF238
     /tmp/ccBwJVte.s:5986   .debug_str:00000000000004e8 .LASF239
     /tmp/ccBwJVte.s:144    .text:000000000000001c .LVL7
     /tmp/ccBwJVte.s:151    .text:0000000000000020 .LVL8
     /tmp/ccBwJVte.s:907    .text:00000000000004d4 .LVL78
     /tmp/ccBwJVte.s:914    .text:00000000000004d8 .LVL79
     /tmp/ccBwJVte.s:1139   .text:000000000000069c .LVL104
     /tmp/ccBwJVte.s:1144   .text:00000000000006a4 .LVL105
     /tmp/ccBwJVte.s:154    .text:0000000000000024 .LVL9
     /tmp/ccBwJVte.s:161    .text:0000000000000028 .LVL10
     /tmp/ccBwJVte.s:884    .text:00000000000004bc .LVL76
     /tmp/ccBwJVte.s:896    .text:00000000000004c8 .LVL77
     /tmp/ccBwJVte.s:164    .text:000000000000002c .LVL11
     /tmp/ccBwJVte.s:172    .text:0000000000000030 .LVL12
     /tmp/ccBwJVte.s:175    .text:0000000000000034 .LVL13
     /tmp/ccBwJVte.s:182    .text:0000000000000038 .LVL14
     /tmp/ccBwJVte.s:185    .text:000000000000003c .LVL15
     /tmp/ccBwJVte.s:192    .text:0000000000000040 .LVL16
     /tmp/ccBwJVte.s:195    .text:0000000000000044 .LVL17
     /tmp/ccBwJVte.s:202    .text:0000000000000048 .LVL18
     /tmp/ccBwJVte.s:205    .text:000000000000004c .LVL19
     /tmp/ccBwJVte.s:212    .text:0000000000000050 .LVL20
     /tmp/ccBwJVte.s:215    .text:0000000000000054 .LVL21
     /tmp/ccBwJVte.s:347    .text:00000000000000f4 .LVL23
     /tmp/ccBwJVte.s:365    .text:000000000000010c .LVL25
     /tmp/ccBwJVte.s:430    .text:000000000000017c .LVL28
     /tmp/ccBwJVte.s:464    .text:00000000000001b4 .LVL33
     /tmp/ccBwJVte.s:473    .text:00000000000001c0 .LVL35
     /tmp/ccBwJVte.s:488    .text:00000000000001dc .LVL38
     /tmp/ccBwJVte.s:536    .text:000000000000021c .LVL40
     /tmp/ccBwJVte.s:566    .text:0000000000000254 .LVL44
     /tmp/ccBwJVte.s:584    .text:000000000000026c .LVL46
     /tmp/ccBwJVte.s:602    .text:0000000000000284 .LVL48
     /tmp/ccBwJVte.s:650    .text:00000000000002cc .LVL52
     /tmp/ccBwJVte.s:666    .text:00000000000002dc .LVL54
     /tmp/ccBwJVte.s:738    .text:0000000000000380 .LVL64
     /tmp/ccBwJVte.s:789    .text:00000000000003cc .LVL66
     /tmp/ccBwJVte.s:814    .text:000000000000040c .LVL69
     /tmp/ccBwJVte.s:997    .text:0000000000000580 .LVL90
     /tmp/ccBwJVte.s:1074   .text:0000000000000618 .LVL98
     /tmp/ccBwJVte.s:704    .text:0000000000000334 .LVL59
     /tmp/ccBwJVte.s:927    .text:00000000000004f8 .LVL81
     /tmp/ccBwJVte.s:954    .text:000000000000053c .LVL85
     /tmp/ccBwJVte.s:959    .text:0000000000000544 .LVL86
     /tmp/ccBwJVte.s:17     .text._ZN4KSemD2Ev:0000000000000000 .LVL0
     /tmp/ccBwJVte.s:29     .text._ZN4KSemD2Ev:0000000000000018 .LVL1
     /tmp/ccBwJVte.s:80     .text._ZN4KSemD2Ev:0000000000000044 .LVL6
     /tmp/ccBwJVte.s:41     .text._ZN4KSemD2Ev:000000000000001c .LVL2
     /tmp/ccBwJVte.s:48     .text._ZN4KSemD2Ev:0000000000000020 .LVL3
     /tmp/ccBwJVte.s:57     .text._ZN4KSemD2Ev:000000000000002c .LVL4
     /tmp/ccBwJVte.s:1417   .text._ZN3TCB7getBodyEv:0000000000000000 .LVL111
     /tmp/ccBwJVte.s:1427   .text._ZN3TCB7getBodyEv:0000000000000010 .LVL112
     /tmp/ccBwJVte.s:1389   .text._ZN3TCB12getTimeSliceEv:0000000000000000 .LVL109
     /tmp/ccBwJVte.s:1399   .text._ZN3TCB12getTimeSliceEv:0000000000000010 .LVL110
     /tmp/ccBwJVte.s:1498   .debug_info:0000000000000000 .Ldebug_info0
GAS LISTING /tmp/ccBwJVte.s 			page 56


     /tmp/ccBwJVte.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccBwJVte.s:1491   .text:00000000000006a8 .Letext0
     /tmp/ccBwJVte.s:88     .gcc_except_table._ZN4KSemD2Ev:0000000000000000 .LLSDA60
                           .group:0000000000000000 _ZN4KSemD5Ev

UNDEFINED SYMBOLS
_Z8mem_freePv
__gxx_personality_v0
_ZN7KMemory7kmallocEm
_ZN7KMemory5kfreeEPv
_ZN3TCB12createThreadEPFvPvES0_Pm
main
_ZN9Scheduler3putEP3TCB
_ZN3TCB13releaseJoinedEv
_ZN3TCB8dispatchEv
_ZN3TCB10threadJoinEPS_
_ZN4KSem7initSemEj
_ZN4KSem8closeSemEPS_
_ZN4KSemdlEPv
_ZN4KSem4waitEv
_ZN4KSem6signalEv
_ZN9Scheduler10putToSleepEP3TCBm
_ZN8KConsole5kgetcEv
_ZN8KConsole5kputcEc
_ZN8KConsole13getFromOutputEv
_Z10sem_signalP4KSem
_Z11printStringPKc
_Z8printIntiii
plic_claim
_ZN8KConsole12placeInInputEc
plic_complete
_ZN9Scheduler4wakeEv
_ZN8KConsole2srE
_ZN8KConsole2drE
_ZN8KConsole20outputBufferHasSpaceE
_ZN8KConsole10outputHeadE
_ZN8KConsole10outputTailE
_ZN3TCB7runningE
_ZN3TCB16runningTimeSliceE
