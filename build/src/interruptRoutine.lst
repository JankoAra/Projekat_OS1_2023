GAS LISTING /tmp/cc4Tda8w.s 			page 1


   1              		.file	"interruptRoutine.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.section	.rodata
   7              		.align	3
   8              	.LC0:
   9 0000 0A4E6570 		.string	"\nNepostojeci op code: "
   9      6F73746F 
   9      6A656369 
   9      206F7020 
   9      636F6465 
  10 0017 00       		.align	3
  11              	.LC1:
  12 0018 0A736361 		.string	"\nscause: "
  12      7573653A 
  12      2000
  13 0022 00000000 		.align	3
  13      0000
  14              	.LC2:
  15 0028 0A736570 		.string	"\nsepc: "
  15      633A2000 
  16              		.align	3
  17              	.LC3:
  18 0030 0A477265 		.string	"\nGreska u prekidnoj rutini\n"
  18      736B6120 
  18      75207072 
  18      656B6964 
  18      6E6F6A20 
  19 004c 00000000 		.align	3
  20              	.LC4:
  21 0050 73636175 		.string	"scause: "
  21      73653A20 
  21      00
  22              		.text
  23              		.align	2
  24              		.globl	interruptRoutine
  26              	interruptRoutine:
  27              	.LFB48:
  28              		.file 1 "src/interruptRoutine.cpp"
   1:src/interruptRoutine.cpp **** //
   2:src/interruptRoutine.cpp **** // Created by os on 5/22/23.
   3:src/interruptRoutine.cpp **** //
   4:src/interruptRoutine.cpp **** 
   5:src/interruptRoutine.cpp **** #include "../lib/console.h"
   6:src/interruptRoutine.cpp **** #include "../lib/hw.h"
   7:src/interruptRoutine.cpp **** #include "../h/MemoryAllocator.hpp"
   8:src/interruptRoutine.cpp **** #include "../h/helper.hpp"
   9:src/interruptRoutine.cpp **** #include "../h/Riscv.hpp"
  10:src/interruptRoutine.cpp **** #include "../h/syscall_c.hpp"
  11:src/interruptRoutine.cpp **** #include "../h/TCB.hpp"
  12:src/interruptRoutine.cpp **** #include "../h/Scheduler.hpp"
  13:src/interruptRoutine.cpp **** #include "../h/KSem.hpp"
  14:src/interruptRoutine.cpp **** 
  15:src/interruptRoutine.cpp **** #pragma GCC optimize("O0")
  16:src/interruptRoutine.cpp **** extern "C" void interruptRoutine() {
GAS LISTING /tmp/cc4Tda8w.s 			page 2


  29              		.loc 1 16 36
  30              		.cfi_startproc
  31 0000 130101EF 		addi	sp,sp,-272
  32              		.cfi_def_cfa_offset 272
  33 0004 23341110 		sd	ra,264(sp)
  34 0008 23308110 		sd	s0,256(sp)
  35              		.cfi_offset 1, -8
  36              		.cfi_offset 8, -16
  37 000c 13040111 		addi	s0,sp,272
  38              		.cfi_def_cfa 8, 0
  17:src/interruptRoutine.cpp **** 	uint64 scause, sepc, sstatus;
  39              		.loc 1 17 2
  18:src/interruptRoutine.cpp **** 	__asm__ volatile("csrr %[scause], scause":[scause] "=r"(scause): : "a5", "a0", "a1", "a2", "a3", "
  40              		.loc 1 18 2
  41              		.loc 1 18 116 is_stmt 0
  42              	#APP
  43              	# 18 "src/interruptRoutine.cpp" 1
  19              		__asm__ volatile("csrr %[sepc], sepc":[sepc] "=r"(sepc): : "a5", "a0", "a1", "a2", "a3", "a4", "a6
  44              		csrr t1, scause
  45              	# 0 "" 2
  46              	#NO_APP
  47 0014 233C64FC 		sd	t1,-40(s0)
  48              	.LVL0:
  49              		.loc 1 19 2 is_stmt 1
  50              		.loc 1 19 108 is_stmt 0
  51              	#APP
  52              	# 19 "src/interruptRoutine.cpp" 1
  20              		__asm__ volatile("csrr %[status], sstatus":[status] "=r"(
  53              		csrr t1, sepc
  54              	# 0 "" 2
  55              	.LVL1:
  56              	#NO_APP
  57 001c 233864FC 		sd	t1,-48(s0)
  58              	.LVL2:
  59              		.loc 1 20 2 is_stmt 1
  21:src/interruptRoutine.cpp **** 			sstatus): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7");
  60              		.loc 1 21 63 is_stmt 0
  61              	#APP
  62              	# 21 "src/interruptRoutine.cpp" 1
  22              		uint64 a0, a1, a2, a3, a4, a5, a6, a7;
  63              		csrr t1, sstatus
  64              	# 0 "" 2
  65              	.LVL3:
  66              	#NO_APP
  67 0024 233464FC 		sd	t1,-56(s0)
  68              	.LVL4:
  69              		.loc 1 22 2 is_stmt 1
  23:src/interruptRoutine.cpp **** 	__asm__ volatile("mv %[ax], a0":[ax] "=r"(a0): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7");
  70              		.loc 1 23 2
  71              		.loc 1 23 98 is_stmt 0
  72              	#APP
  73              	# 23 "src/interruptRoutine.cpp" 1
  24              		__asm__ volatile("mv %[ax], a1":[ax] "=r"(a1): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7");
  74              		mv t1, a0
  75              	# 0 "" 2
  76              	.LVL5:
  77              	#NO_APP
GAS LISTING /tmp/cc4Tda8w.s 			page 3


  78 002c 233064FC 		sd	t1,-64(s0)
  79              	.LVL6:
  80              		.loc 1 24 2 is_stmt 1
  81              		.loc 1 24 98 is_stmt 0
  82              	#APP
  83              	# 24 "src/interruptRoutine.cpp" 1
  25              		__asm__ volatile("mv %[ax], a2":[ax] "=r"(a2): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7");
  84              		mv t1, a1
  85              	# 0 "" 2
  86              	.LVL7:
  87              	#NO_APP
  88 0034 233C64FA 		sd	t1,-72(s0)
  89              	.LVL8:
  90              		.loc 1 25 2 is_stmt 1
  91              		.loc 1 25 98 is_stmt 0
  92              	#APP
  93              	# 25 "src/interruptRoutine.cpp" 1
  26              		__asm__ volatile("mv %[ax], a3":[ax] "=r"(a3): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7");
  94              		mv t1, a2
  95              	# 0 "" 2
  96              	.LVL9:
  97              	#NO_APP
  98 003c 233864FA 		sd	t1,-80(s0)
  99              	.LVL10:
 100              		.loc 1 26 2 is_stmt 1
 101              		.loc 1 26 98 is_stmt 0
 102              	#APP
 103              	# 26 "src/interruptRoutine.cpp" 1
  27              		__asm__ volatile("mv %[ax], a4":[ax] "=r"(a4): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7");
 104              		mv t1, a3
 105              	# 0 "" 2
 106              	.LVL11:
 107              	#NO_APP
 108 0044 233464FA 		sd	t1,-88(s0)
 109              	.LVL12:
 110              		.loc 1 27 2 is_stmt 1
 111              		.loc 1 27 98 is_stmt 0
 112              	#APP
 113              	# 27 "src/interruptRoutine.cpp" 1
  28              		__asm__ volatile("mv %[ax], a5":[ax] "=r"(a5): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7");
 114              		mv t1, a4
 115              	# 0 "" 2
 116              	.LVL13:
 117              	#NO_APP
 118 004c 233064FA 		sd	t1,-96(s0)
 119              	.LVL14:
 120              		.loc 1 28 2 is_stmt 1
 121              		.loc 1 28 98 is_stmt 0
 122              	#APP
 123              	# 28 "src/interruptRoutine.cpp" 1
  29              		__asm__ volatile("mv %[ax], a6":[ax] "=r"(a6): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7");
 124              		mv t1, a5
 125              	# 0 "" 2
 126              	.LVL15:
 127              	#NO_APP
 128 0054 233C64F8 		sd	t1,-104(s0)
 129              	.LVL16:
GAS LISTING /tmp/cc4Tda8w.s 			page 4


 130              		.loc 1 29 2 is_stmt 1
 131              		.loc 1 29 98 is_stmt 0
 132              	#APP
 133              	# 29 "src/interruptRoutine.cpp" 1
  30              		__asm__ volatile("mv %[ax], a7":[ax] "=r"(a7): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7");
 134              		mv t1, a6
 135              	# 0 "" 2
 136              	.LVL17:
 137              	#NO_APP
 138 005c 233864F8 		sd	t1,-112(s0)
 139              	.LVL18:
 140              		.loc 1 30 2 is_stmt 1
 141              		.loc 1 30 98 is_stmt 0
 142              	#APP
 143              	# 30 "src/interruptRoutine.cpp" 1
  31              	
 144              		mv t1, a7
 145              	# 0 "" 2
 146              	.LVL19:
 147              	#NO_APP
 148 0064 233464F8 		sd	t1,-120(s0)
 149              	.LVL20:
  32:src/interruptRoutine.cpp **** 	if (scause == 0x09 || scause == 0x08) {
 150              		.loc 1 32 2 is_stmt 1
 151              	.LBB2:
 152 0068 033784FD 		ld	a4,-40(s0)
 153 006c 93079000 		li	a5,9
 154 0070 6308F700 		beq	a4,a5,.L2
 155              		.loc 1 32 21 is_stmt 0 discriminator 1
 156 0074 033784FD 		ld	a4,-40(s0)
 157 0078 93078000 		li	a5,8
 158 007c 631EF744 		bne	a4,a5,.L3
 159              	.L2:
 160              	.LBB3:
  33:src/interruptRoutine.cpp **** 		//prekid zbog poziva ecall
  34:src/interruptRoutine.cpp **** 		uint64 opCode = a0;
 161              		.loc 1 34 3 is_stmt 1
 162              		.loc 1 34 10 is_stmt 0
 163 0080 833704FC 		ld	a5,-64(s0)
 164 0084 2330F4F8 		sd	a5,-128(s0)
 165              	.LVL21:
  35:src/interruptRoutine.cpp **** 		switch (opCode) {
 166              		.loc 1 35 3 is_stmt 1
 167              	.LBB4:
 168 0088 033704F8 		ld	a4,-128(s0)
 169 008c 93071009 		li	a5,145
 170              	.LVL22:
 171 0090 630CF72C 		beq	a4,a5,.L4
 172 0094 033704F8 		ld	a4,-128(s0)
 173 0098 93071009 		li	a5,145
 174 009c 63EAE73A 		bgtu	a4,a5,.L5
 175 00a0 033704F8 		ld	a4,-128(s0)
 176 00a4 93072004 		li	a5,66
 177 00a8 63E2E704 		bgtu	a4,a5,.L6
 178 00ac 833704F8 		ld	a5,-128(s0)
 179 00b0 6380073A 		beqz	a5,.L5
 180 00b4 033704F8 		ld	a4,-128(s0)
GAS LISTING /tmp/cc4Tda8w.s 			page 5


 181 00b8 93072004 		li	a5,66
 182 00bc 63EAE738 		bgtu	a4,a5,.L5
 183 00c0 833704F8 		ld	a5,-128(s0)
 184 00c4 13972700 		slli	a4,a5,2
 185              	.LVL23:
 186 00c8 97070000 		lla	a5,.L8
 186      93870700 
 187              	.LVL24:
 188 00d0 B307F700 		add	a5,a4,a5
 189 00d4 83A70700 		lw	a5,0(a5)
 190 00d8 1B870700 		sext.w	a4,a5
 191 00dc 97070000 		lla	a5,.L8
 191      93870700 
 192 00e4 B307F700 		add	a5,a4,a5
 193 00e8 67800700 		jr	a5
 194              		.section	.rodata
 195 0059 000000   		.align	2
 196              		.align	2
 197              	.L8:
 198 005c 00000000 		.word	.L5-.L8
 199 0060 00000000 		.word	.L20-.L8
 200 0064 00000000 		.word	.L19-.L8
 201 0068 00000000 		.word	.L5-.L8
 202 006c 00000000 		.word	.L5-.L8
 203 0070 00000000 		.word	.L5-.L8
 204 0074 00000000 		.word	.L5-.L8
 205 0078 00000000 		.word	.L5-.L8
 206 007c 00000000 		.word	.L5-.L8
 207 0080 00000000 		.word	.L5-.L8
 208 0084 00000000 		.word	.L5-.L8
 209 0088 00000000 		.word	.L5-.L8
 210 008c 00000000 		.word	.L5-.L8
 211 0090 00000000 		.word	.L5-.L8
 212 0094 00000000 		.word	.L5-.L8
 213 0098 00000000 		.word	.L5-.L8
 214 009c 00000000 		.word	.L5-.L8
 215 00a0 00000000 		.word	.L18-.L8
 216 00a4 00000000 		.word	.L17-.L8
 217 00a8 00000000 		.word	.L16-.L8
 218 00ac 00000000 		.word	.L15-.L8
 219 00b0 00000000 		.word	.L5-.L8
 220 00b4 00000000 		.word	.L5-.L8
 221 00b8 00000000 		.word	.L5-.L8
 222 00bc 00000000 		.word	.L5-.L8
 223 00c0 00000000 		.word	.L5-.L8
 224 00c4 00000000 		.word	.L5-.L8
 225 00c8 00000000 		.word	.L5-.L8
 226 00cc 00000000 		.word	.L5-.L8
 227 00d0 00000000 		.word	.L5-.L8
 228 00d4 00000000 		.word	.L5-.L8
 229 00d8 00000000 		.word	.L5-.L8
 230 00dc 00000000 		.word	.L5-.L8
 231 00e0 00000000 		.word	.L14-.L8
 232 00e4 00000000 		.word	.L13-.L8
 233 00e8 00000000 		.word	.L12-.L8
 234 00ec 00000000 		.word	.L11-.L8
 235 00f0 00000000 		.word	.L5-.L8
GAS LISTING /tmp/cc4Tda8w.s 			page 6


 236 00f4 00000000 		.word	.L5-.L8
 237 00f8 00000000 		.word	.L5-.L8
 238 00fc 00000000 		.word	.L5-.L8
 239 0100 00000000 		.word	.L5-.L8
 240 0104 00000000 		.word	.L5-.L8
 241 0108 00000000 		.word	.L5-.L8
 242 010c 00000000 		.word	.L5-.L8
 243 0110 00000000 		.word	.L5-.L8
 244 0114 00000000 		.word	.L5-.L8
 245 0118 00000000 		.word	.L5-.L8
 246 011c 00000000 		.word	.L5-.L8
 247 0120 00000000 		.word	.L10-.L8
 248 0124 00000000 		.word	.L5-.L8
 249 0128 00000000 		.word	.L5-.L8
 250 012c 00000000 		.word	.L5-.L8
 251 0130 00000000 		.word	.L5-.L8
 252 0134 00000000 		.word	.L5-.L8
 253 0138 00000000 		.word	.L5-.L8
 254 013c 00000000 		.word	.L5-.L8
 255 0140 00000000 		.word	.L5-.L8
 256 0144 00000000 		.word	.L5-.L8
 257 0148 00000000 		.word	.L5-.L8
 258 014c 00000000 		.word	.L5-.L8
 259 0150 00000000 		.word	.L5-.L8
 260 0154 00000000 		.word	.L5-.L8
 261 0158 00000000 		.word	.L5-.L8
 262 015c 00000000 		.word	.L5-.L8
 263 0160 00000000 		.word	.L9-.L8
 264 0164 00000000 		.word	.L7-.L8
 265              		.text
 266              	.LVL25:
 267              	.L6:
 268 00ec 033704F8 		ld	a4,-128(s0)
 269              	.LVL26:
 270 00f0 93070009 		li	a5,144
 271 00f4 630EF722 		beq	a4,a5,.L21
 272 00f8 6F008035 		j	.L5
 273              	.L20:
 274              	.LBB5:
  36:src/interruptRoutine.cpp **** 			case 0x01:
 275              		.loc 1 36 4
  37:src/interruptRoutine.cpp **** 				//mem_alloc
  38:src/interruptRoutine.cpp **** 				size_t size;
 276              		.loc 1 38 5
  39:src/interruptRoutine.cpp **** 				size = (size_t)a1;
 277              		.loc 1 39 5
 278              		.loc 1 39 10 is_stmt 0
 279 00fc 833784FB 		ld	a5,-72(s0)
 280 0100 2334F4F0 		sd	a5,-248(s0)
 281              	.LVL27:
  40:src/interruptRoutine.cpp **** 				//__asm__ volatile("mv %[size], a1":[size] "=r"(size));
  41:src/interruptRoutine.cpp **** 				size = size * MEM_BLOCK_SIZE;
 282              		.loc 1 41 5 is_stmt 1
 283              		.loc 1 41 10 is_stmt 0
 284 0104 833784F0 		ld	a5,-248(s0)
 285 0108 93976700 		slli	a5,a5,6
 286              	.LVL28:
GAS LISTING /tmp/cc4Tda8w.s 			page 7


 287 010c 2334F4F0 		sd	a5,-248(s0)
 288              	.LVL29:
  42:src/interruptRoutine.cpp **** 				MemoryAllocator::kmalloc(size);
 289              		.loc 1 42 5 is_stmt 1
 290              		.loc 1 42 29 is_stmt 0
 291 0110 93053000 		li	a1,3
 292 0114 033584F0 		ld	a0,-248(s0)
 293 0118 97000000 		call	_ZN15MemoryAllocator7kmallocEmNS_7PurposeE@plt
 293      E7800000 
 294              	.LVL30:
  43:src/interruptRoutine.cpp **** 				__asm__ volatile("sd a0, 80(s0)");
 295              		.loc 1 43 5 is_stmt 1
 296              		.loc 1 43 38 is_stmt 0
 297              	#APP
 298              	# 43 "src/interruptRoutine.cpp" 1
  44              					break;
 299              		sd a0, 80(s0)
 300              	# 0 "" 2
 301              		.loc 1 44 5 is_stmt 1
 302              	#NO_APP
 303 0124 6F008039 		j	.L22
 304              	.LVL31:
 305              	.L19:
  45:src/interruptRoutine.cpp **** 			case 0x02:
 306              		.loc 1 45 4
  46:src/interruptRoutine.cpp **** 				//mem_free
  47:src/interruptRoutine.cpp **** 				void* ptr;
 307              		.loc 1 47 5
  48:src/interruptRoutine.cpp **** 				ptr = (void*)a1;
 308              		.loc 1 48 5
 309              		.loc 1 48 9 is_stmt 0
 310 0128 833784FB 		ld	a5,-72(s0)
 311 012c 2338F4F0 		sd	a5,-240(s0)
 312              	.LVL32:
  49:src/interruptRoutine.cpp **** 				//__asm__ volatile("mv %[ptr], a1" :[ptr]"=r"(ptr));
  50:src/interruptRoutine.cpp **** 				MemoryAllocator::kfree(ptr);
 313              		.loc 1 50 5 is_stmt 1
 314              		.loc 1 50 27 is_stmt 0
 315 0130 033504F1 		ld	a0,-240(s0)
 316 0134 97000000 		call	_ZN15MemoryAllocator5kfreeEPv@plt
 316      E7800000 
 317              	.LVL33:
  51:src/interruptRoutine.cpp **** 				__asm__ volatile("sd a0, 80(s0)");
 318              		.loc 1 51 5 is_stmt 1
 319              		.loc 1 51 38 is_stmt 0
 320              	#APP
 321              	# 51 "src/interruptRoutine.cpp" 1
  52              					break;
 322              		sd a0, 80(s0)
 323              	# 0 "" 2
 324              		.loc 1 52 5 is_stmt 1
 325              	#NO_APP
 326 0140 6F00C037 		j	.L22
 327              	.LVL34:
 328              	.L18:
  53:src/interruptRoutine.cpp **** 			case 0x11:
 329              		.loc 1 53 4
GAS LISTING /tmp/cc4Tda8w.s 			page 8


  54:src/interruptRoutine.cpp **** 				//thread_create
  55:src/interruptRoutine.cpp **** 				thread_t* handle;
 330              		.loc 1 55 5
  56:src/interruptRoutine.cpp **** 				handle = (thread_t*)a1;
 331              		.loc 1 56 5
 332              		.loc 1 56 12 is_stmt 0
 333 0144 833784FB 		ld	a5,-72(s0)
 334 0148 2338F4F2 		sd	a5,-208(s0)
 335              	.LVL35:
  57:src/interruptRoutine.cpp **** 				void (* function)(void*);
 336              		.loc 1 57 5 is_stmt 1
  58:src/interruptRoutine.cpp **** 				function = (void (*)(void*))a2;
 337              		.loc 1 58 5
 338              		.loc 1 58 14 is_stmt 0
 339 014c 833704FB 		ld	a5,-80(s0)
 340              	.LVL36:
 341 0150 2334F4F2 		sd	a5,-216(s0)
 342              	.LVL37:
  59:src/interruptRoutine.cpp **** 				void* args;
 343              		.loc 1 59 5 is_stmt 1
  60:src/interruptRoutine.cpp **** 				args = (void*)a3;
 344              		.loc 1 60 5
 345              		.loc 1 60 10 is_stmt 0
 346 0154 833784FA 		ld	a5,-88(s0)
 347              	.LVL38:
 348 0158 2330F4F2 		sd	a5,-224(s0)
 349              	.LVL39:
  61:src/interruptRoutine.cpp **** 				uint64* sp;
 350              		.loc 1 61 5 is_stmt 1
  62:src/interruptRoutine.cpp **** 				sp = (uint64*)a4;
 351              		.loc 1 62 5
 352              		.loc 1 62 8 is_stmt 0
 353 015c 833704FA 		ld	a5,-96(s0)
 354              	.LVL40:
 355 0160 233CF4F0 		sd	a5,-232(s0)
 356              	.LVL41:
  63:src/interruptRoutine.cpp **** 
  64:src/interruptRoutine.cpp **** 				*handle = TCB::createThread(function, args, sp);
 357              		.loc 1 64 5 is_stmt 1
 358              		.loc 1 64 32 is_stmt 0
 359 0164 033684F1 		ld	a2,-232(s0)
 360 0168 833504F2 		ld	a1,-224(s0)
 361 016c 033584F2 		ld	a0,-216(s0)
 362 0170 97000000 		call	_ZN3TCB12createThreadEPFvPvES0_Pm@plt
 362      E7800000 
 363              	.LVL42:
 364 0178 13070500 		mv	a4,a0
 365              		.loc 1 64 13
 366 017c 833704F3 		ld	a5,-208(s0)
 367 0180 23B0E700 		sd	a4,0(a5)
  65:src/interruptRoutine.cpp **** 				TCB::start(*handle);
 368              		.loc 1 65 5 is_stmt 1
 369              		.loc 1 65 15 is_stmt 0
 370 0184 833704F3 		ld	a5,-208(s0)
 371 0188 83B70700 		ld	a5,0(a5)
 372 018c 13850700 		mv	a0,a5
 373 0190 97000000 		call	_ZN3TCB5startEPS_@plt
GAS LISTING /tmp/cc4Tda8w.s 			page 9


 373      E7800000 
 374              	.LVL43:
  66:src/interruptRoutine.cpp **** 				if (*handle != nullptr) {
 375              		.loc 1 66 5 is_stmt 1
 376              		.loc 1 66 9 is_stmt 0
 377 0198 833704F3 		ld	a5,-208(s0)
 378 019c 83B70700 		ld	a5,0(a5)
 379              		.loc 1 66 5
 380 01a0 63860700 		beqz	a5,.L23
  67:src/interruptRoutine.cpp **** 					__asm__ volatile("li a0, 0");
 381              		.loc 1 67 6 is_stmt 1
 382              		.loc 1 67 34 is_stmt 0
 383              	#APP
 384              	# 67 "src/interruptRoutine.cpp" 1
  68              					} else {
 385              		li a0, 0
 386              	# 0 "" 2
 387              	#NO_APP
 388 01a8 6F008000 		j	.L24
 389              	.L23:
  69:src/interruptRoutine.cpp **** 					__asm__ volatile("li a0, -1");
 390              		.loc 1 69 6 is_stmt 1
 391              		.loc 1 69 35 is_stmt 0
 392              	#APP
 393              	# 69 "src/interruptRoutine.cpp" 1
  70              					}
 394              		li a0, -1
 395              	# 0 "" 2
 396              	#NO_APP
 397              	.L24:
  71:src/interruptRoutine.cpp **** 				__asm__ volatile("sd a0, 80(s0)");
 398              		.loc 1 71 5 is_stmt 1
 399              		.loc 1 71 38 is_stmt 0
 400              	#APP
 401              	# 71 "src/interruptRoutine.cpp" 1
  72              					break;
 402              		sd a0, 80(s0)
 403              	# 0 "" 2
 404              		.loc 1 72 5 is_stmt 1
 405              	#NO_APP
 406 01b4 6F008030 		j	.L22
 407              	.LVL44:
 408              	.L17:
  73:src/interruptRoutine.cpp **** 			case 0x12:
 409              		.loc 1 73 4
  74:src/interruptRoutine.cpp **** 				//thread_exit
  75:src/interruptRoutine.cpp **** 				TCB::running->setFinished(true);
 410              		.loc 1 75 5
 411              		.loc 1 75 30 is_stmt 0
 412 01b8 97070000 		la	a5,_ZN3TCB7runningE
 412      83B70700 
 413 01c0 83B70700 		ld	a5,0(a5)
 414 01c4 93051000 		li	a1,1
 415 01c8 13850700 		mv	a0,a5
 416 01cc 97000000 		call	_ZN3TCB11setFinishedEb
 416      E7800000 
 417              	.LVL45:
GAS LISTING /tmp/cc4Tda8w.s 			page 10


  76:src/interruptRoutine.cpp **** 				TCB::releaseJoined();
 418              		.loc 1 76 5 is_stmt 1
 419              		.loc 1 76 23 is_stmt 0
 420 01d4 97000000 		call	_ZN3TCB13releaseJoinedEv@plt
 420      E7800000 
 421              	.LVL46:
  77:src/interruptRoutine.cpp **** 				TCB::yield();
 422              		.loc 1 77 5 is_stmt 1
 423              		.loc 1 77 15 is_stmt 0
 424 01dc 97000000 		call	_ZN3TCB5yieldEv@plt
 424      E7800000 
 425              	.LVL47:
  78:src/interruptRoutine.cpp **** 				break;
 426              		.loc 1 78 5 is_stmt 1
 427 01e4 6F00802D 		j	.L22
 428              	.LVL48:
 429              	.L16:
  79:src/interruptRoutine.cpp **** 			case 0x13:
 430              		.loc 1 79 4
  80:src/interruptRoutine.cpp **** 				//thread_dispatch
  81:src/interruptRoutine.cpp **** 				TCB::yield();
 431              		.loc 1 81 5
 432              		.loc 1 81 15 is_stmt 0
 433 01e8 97000000 		call	_ZN3TCB5yieldEv@plt
 433      E7800000 
 434              	.LVL49:
  82:src/interruptRoutine.cpp **** 				break;
 435              		.loc 1 82 5 is_stmt 1
 436 01f0 6F00C02C 		j	.L22
 437              	.LVL50:
 438              	.L15:
  83:src/interruptRoutine.cpp **** 			case 0x14:
 439              		.loc 1 83 4
  84:src/interruptRoutine.cpp **** 				//thread_join
  85:src/interruptRoutine.cpp **** 				thread_t handleToJoin;
 440              		.loc 1 85 5
  86:src/interruptRoutine.cpp **** 				handleToJoin = (thread_t)a1;
 441              		.loc 1 86 5
 442              		.loc 1 86 18 is_stmt 0
 443 01f4 833784FB 		ld	a5,-72(s0)
 444 01f8 233CF4F2 		sd	a5,-200(s0)
 445              	.LVL51:
  87:src/interruptRoutine.cpp **** 				TCB::threadJoin(handleToJoin);
 446              		.loc 1 87 5 is_stmt 1
 447              		.loc 1 87 20 is_stmt 0
 448 01fc 033584F3 		ld	a0,-200(s0)
 449 0200 97000000 		call	_ZN3TCB10threadJoinEPS_@plt
 449      E7800000 
 450              	.LVL52:
  88:src/interruptRoutine.cpp **** 				TCB::yield();
 451              		.loc 1 88 5 is_stmt 1
 452              		.loc 1 88 15 is_stmt 0
 453 0208 97000000 		call	_ZN3TCB5yieldEv@plt
 453      E7800000 
 454              	.LVL53:
  89:src/interruptRoutine.cpp **** 				break;
 455              		.loc 1 89 5 is_stmt 1
GAS LISTING /tmp/cc4Tda8w.s 			page 11


 456 0210 6F00C02A 		j	.L22
 457              	.LVL54:
 458              	.L14:
  90:src/interruptRoutine.cpp **** 			case 0x21:
 459              		.loc 1 90 4
  91:src/interruptRoutine.cpp **** 				//sem_open
  92:src/interruptRoutine.cpp **** 				sem_t* openHandle;
 460              		.loc 1 92 5
  93:src/interruptRoutine.cpp **** 				openHandle = (sem_t*)a1;
 461              		.loc 1 93 5
 462              		.loc 1 93 16 is_stmt 0
 463 0214 833784FB 		ld	a5,-72(s0)
 464 0218 2334F4F4 		sd	a5,-184(s0)
 465              	.LVL55:
  94:src/interruptRoutine.cpp **** 				uint initVal;
 466              		.loc 1 94 5 is_stmt 1
  95:src/interruptRoutine.cpp **** 				initVal = (uint)a2;
 467              		.loc 1 95 5
 468              		.loc 1 95 13 is_stmt 0
 469 021c 833704FB 		ld	a5,-80(s0)
 470              	.LVL56:
 471 0220 2322F4F4 		sw	a5,-188(s0)
 472              	.LVL57:
  96:src/interruptRoutine.cpp **** 				*openHandle = KSem::initSem(initVal);
 473              		.loc 1 96 5 is_stmt 1
 474              		.loc 1 96 32 is_stmt 0
 475 0224 832744F4 		lw	a5,-188(s0)
 476              	.LVL58:
 477 0228 13850700 		mv	a0,a5
 478 022c 97000000 		call	_ZN4KSem7initSemEj@plt
 478      E7800000 
 479              	.LVL59:
 480 0234 13070500 		mv	a4,a0
 481              		.loc 1 96 17
 482 0238 833784F4 		ld	a5,-184(s0)
 483 023c 23B0E700 		sd	a4,0(a5)
  97:src/interruptRoutine.cpp **** 				if (*openHandle != nullptr) {
 484              		.loc 1 97 5 is_stmt 1
 485              		.loc 1 97 9 is_stmt 0
 486 0240 833784F4 		ld	a5,-184(s0)
 487 0244 83B70700 		ld	a5,0(a5)
 488              		.loc 1 97 5
 489 0248 63860700 		beqz	a5,.L25
  98:src/interruptRoutine.cpp **** 					__asm__ volatile("li a0, 0");
 490              		.loc 1 98 6 is_stmt 1
 491              		.loc 1 98 34 is_stmt 0
 492              	#APP
 493              	# 98 "src/interruptRoutine.cpp" 1
  99              					} else {
 494              		li a0, 0
 495              	# 0 "" 2
 496              	#NO_APP
 497 0250 6F008000 		j	.L26
 498              	.L25:
 100:src/interruptRoutine.cpp **** 					__asm__ volatile("li a0, -1");
 499              		.loc 1 100 6 is_stmt 1
 500              		.loc 1 100 35 is_stmt 0
GAS LISTING /tmp/cc4Tda8w.s 			page 12


 501              	#APP
 502              	# 100 "src/interruptRoutine.cpp" 1
 101              					}
 503              		li a0, -1
 504              	# 0 "" 2
 505              	#NO_APP
 506              	.L26:
 102:src/interruptRoutine.cpp **** 				__asm__ volatile("sd a0, 80(s0)");
 507              		.loc 1 102 5 is_stmt 1
 508              		.loc 1 102 38 is_stmt 0
 509              	#APP
 510              	# 102 "src/interruptRoutine.cpp" 1
 103              					break;
 511              		sd a0, 80(s0)
 512              	# 0 "" 2
 513              		.loc 1 103 5 is_stmt 1
 514              	#NO_APP
 515 025c 6F000026 		j	.L22
 516              	.LVL60:
 517              	.L13:
 104:src/interruptRoutine.cpp **** 			case 0x22:
 518              		.loc 1 104 4
 105:src/interruptRoutine.cpp **** 				//sem_close
 106:src/interruptRoutine.cpp **** 				sem_t closeHandle;
 519              		.loc 1 106 5
 107:src/interruptRoutine.cpp **** 				closeHandle = (sem_t)a1;
 520              		.loc 1 107 5
 521              		.loc 1 107 17 is_stmt 0
 522 0260 833784FB 		ld	a5,-72(s0)
 523 0264 2338F4F4 		sd	a5,-176(s0)
 524              	.LVL61:
 108:src/interruptRoutine.cpp **** 				KSem::closeSem(closeHandle);
 525              		.loc 1 108 5 is_stmt 1
 526              		.loc 1 108 19 is_stmt 0
 527 0268 033504F5 		ld	a0,-176(s0)
 528 026c 97000000 		call	_ZN4KSem8closeSemEPS_@plt
 528      E7800000 
 529              	.LVL62:
 109:src/interruptRoutine.cpp **** 				__asm__ volatile("sd a0, 80(s0)");
 530              		.loc 1 109 5 is_stmt 1
 531              		.loc 1 109 38 is_stmt 0
 532              	#APP
 533              	# 109 "src/interruptRoutine.cpp" 1
 110              					break;
 534              		sd a0, 80(s0)
 535              	# 0 "" 2
 536              		.loc 1 110 5 is_stmt 1
 537              	#NO_APP
 538 0278 6F004024 		j	.L22
 539              	.LVL63:
 540              	.L12:
 111:src/interruptRoutine.cpp **** 			case 0x23:
 541              		.loc 1 111 4
 112:src/interruptRoutine.cpp **** 				//sem_wait
 113:src/interruptRoutine.cpp **** 				sem_t waitHandle;
 542              		.loc 1 113 5
 114:src/interruptRoutine.cpp **** 				waitHandle = (sem_t)a1;
GAS LISTING /tmp/cc4Tda8w.s 			page 13


 543              		.loc 1 114 5
 544              		.loc 1 114 16 is_stmt 0
 545 027c 833784FB 		ld	a5,-72(s0)
 546 0280 233CF4F4 		sd	a5,-168(s0)
 547              	.LVL64:
 115:src/interruptRoutine.cpp **** 				waitHandle->wait();
 548              		.loc 1 115 5 is_stmt 1
 549              		.loc 1 115 21 is_stmt 0
 550 0284 033584F5 		ld	a0,-168(s0)
 551 0288 97000000 		call	_ZN4KSem4waitEv@plt
 551      E7800000 
 552              	.LVL65:
 116:src/interruptRoutine.cpp **** 				__asm__ volatile("sd a0, 80(s0)");
 553              		.loc 1 116 5 is_stmt 1
 554              		.loc 1 116 38 is_stmt 0
 555              	#APP
 556              	# 116 "src/interruptRoutine.cpp" 1
 117              					break;
 557              		sd a0, 80(s0)
 558              	# 0 "" 2
 559              		.loc 1 117 5 is_stmt 1
 560              	#NO_APP
 561 0294 6F008022 		j	.L22
 562              	.LVL66:
 563              	.L11:
 118:src/interruptRoutine.cpp **** 			case 0x24:
 564              		.loc 1 118 4
 119:src/interruptRoutine.cpp **** 				//sem_signal
 120:src/interruptRoutine.cpp **** 				sem_t signalHandle;
 565              		.loc 1 120 5
 121:src/interruptRoutine.cpp **** 				signalHandle = (sem_t)a1;
 566              		.loc 1 121 5
 567              		.loc 1 121 18 is_stmt 0
 568 0298 833784FB 		ld	a5,-72(s0)
 569 029c 2330F4F6 		sd	a5,-160(s0)
 570              	.LVL67:
 122:src/interruptRoutine.cpp **** 				signalHandle->signal();
 571              		.loc 1 122 5 is_stmt 1
 572              		.loc 1 122 25 is_stmt 0
 573 02a0 033504F6 		ld	a0,-160(s0)
 574 02a4 97000000 		call	_ZN4KSem6signalEv@plt
 574      E7800000 
 575              	.LVL68:
 123:src/interruptRoutine.cpp **** 				__asm__ volatile("sd a0, 80(s0)");
 576              		.loc 1 123 5 is_stmt 1
 577              		.loc 1 123 38 is_stmt 0
 578              	#APP
 579              	# 123 "src/interruptRoutine.cpp" 1
 124              					break;
 580              		sd a0, 80(s0)
 581              	# 0 "" 2
 582              		.loc 1 124 5 is_stmt 1
 583              	#NO_APP
 584 02b0 6F00C020 		j	.L22
 585              	.LVL69:
 586              	.L10:
 125:src/interruptRoutine.cpp **** 			case 0x31:
GAS LISTING /tmp/cc4Tda8w.s 			page 14


 587              		.loc 1 125 4
 126:src/interruptRoutine.cpp **** 				//time_sleep
 127:src/interruptRoutine.cpp **** 				time_t timerPeriods;
 588              		.loc 1 127 5
 128:src/interruptRoutine.cpp **** 				timerPeriods = (time_t)a1;
 589              		.loc 1 128 5
 590              		.loc 1 128 18 is_stmt 0
 591 02b4 833784FB 		ld	a5,-72(s0)
 592 02b8 2334F4F6 		sd	a5,-152(s0)
 593              	.LVL70:
 129:src/interruptRoutine.cpp **** 				if (timerPeriods > 0) {
 594              		.loc 1 129 5 is_stmt 1
 595 02bc 833784F6 		ld	a5,-152(s0)
 596 02c0 63860700 		beqz	a5,.L27
 130:src/interruptRoutine.cpp **** 					__asm__ volatile("li a0, 0");
 597              		.loc 1 130 6
 598              		.loc 1 130 34 is_stmt 0
 599              	#APP
 600              	# 130 "src/interruptRoutine.cpp" 1
 131              					} else {
 601              		li a0, 0
 602              	# 0 "" 2
 603              	#NO_APP
 604 02c8 6F008000 		j	.L28
 605              	.L27:
 132:src/interruptRoutine.cpp **** 					__asm__ volatile("li a0, -1");
 606              		.loc 1 132 6 is_stmt 1
 607              		.loc 1 132 35 is_stmt 0
 608              	#APP
 609              	# 132 "src/interruptRoutine.cpp" 1
 133              					}
 610              		li a0, -1
 611              	# 0 "" 2
 612              	#NO_APP
 613              	.L28:
 134:src/interruptRoutine.cpp **** 				__asm__ volatile("sd a0, 80(s0)");
 614              		.loc 1 134 5 is_stmt 1
 615              		.loc 1 134 38 is_stmt 0
 616              	#APP
 617              	# 134 "src/interruptRoutine.cpp" 1
 135              					if (timerPeriods > 0) {
 618              		sd a0, 80(s0)
 619              	# 0 "" 2
 620              		.loc 1 135 5 is_stmt 1
 621              	#NO_APP
 622 02d4 833784F6 		ld	a5,-152(s0)
 623              	.LVL71:
 624 02d8 6388071C 		beqz	a5,.L41
 136:src/interruptRoutine.cpp **** 					Scheduler::putToSleep(TCB::running, timerPeriods);
 625              		.loc 1 136 6
 626              		.loc 1 136 27 is_stmt 0
 627 02dc 97070000 		la	a5,_ZN3TCB7runningE
 627      83B70700 
 628 02e4 83B70700 		ld	a5,0(a5)
 629 02e8 833584F6 		ld	a1,-152(s0)
 630 02ec 13850700 		mv	a0,a5
 631 02f0 97000000 		call	_ZN9Scheduler10putToSleepEP3TCBm@plt
GAS LISTING /tmp/cc4Tda8w.s 			page 15


 631      E7800000 
 632              	.LVL72:
 137:src/interruptRoutine.cpp **** 					TCB::yield();
 633              		.loc 1 137 6 is_stmt 1
 634              		.loc 1 137 16 is_stmt 0
 635 02f8 97000000 		call	_ZN3TCB5yieldEv@plt
 635      E7800000 
 636              	.LVL73:
 138:src/interruptRoutine.cpp **** 				}
 139:src/interruptRoutine.cpp **** 				break;
 637              		.loc 1 139 5 is_stmt 1
 638 0300 6F00801A 		j	.L41
 639              	.LVL74:
 640              	.L9:
 140:src/interruptRoutine.cpp **** 			case 0x41:
 641              		.loc 1 140 4
 141:src/interruptRoutine.cpp **** 				//getc
 142:src/interruptRoutine.cpp **** 				__getc();
 642              		.loc 1 142 5
 643              		.loc 1 142 11 is_stmt 0
 644 0304 97000000 		call	__getc@plt
 644      E7800000 
 645              	.LVL75:
 143:src/interruptRoutine.cpp **** 				__asm__ volatile("sd a0, 80(s0)");
 646              		.loc 1 143 5 is_stmt 1
 647              		.loc 1 143 38 is_stmt 0
 648              	#APP
 649              	# 143 "src/interruptRoutine.cpp" 1
 144              					break;
 650              		sd a0, 80(s0)
 651              	# 0 "" 2
 652              		.loc 1 144 5 is_stmt 1
 653              	#NO_APP
 654 0310 6F00C01A 		j	.L22
 655              	.LVL76:
 656              	.L7:
 145:src/interruptRoutine.cpp **** 			case 0x42:
 657              		.loc 1 145 4
 146:src/interruptRoutine.cpp **** 				//putc
 147:src/interruptRoutine.cpp **** 				char c;
 658              		.loc 1 147 5
 148:src/interruptRoutine.cpp **** 				c = (char)a1;
 659              		.loc 1 148 5
 660              		.loc 1 148 7 is_stmt 0
 661 0314 833784FB 		ld	a5,-72(s0)
 662 0318 A309F4F6 		sb	a5,-141(s0)
 663              	.LVL77:
 149:src/interruptRoutine.cpp **** 				__putc(c);
 664              		.loc 1 149 5 is_stmt 1
 665              		.loc 1 149 11 is_stmt 0
 666 031c 834734F7 		lbu	a5,-141(s0)
 667              	.LVL78:
 668 0320 13850700 		mv	a0,a5
 669 0324 97000000 		call	__putc@plt
 669      E7800000 
 670              	.LVL79:
 150:src/interruptRoutine.cpp **** 				break;
GAS LISTING /tmp/cc4Tda8w.s 			page 16


 671              		.loc 1 150 5 is_stmt 1
 672 032c 6F000019 		j	.L22
 673              	.LVL80:
 674              	.L21:
 151:src/interruptRoutine.cpp **** 			case 0x90:
 675              		.loc 1 151 4
 152:src/interruptRoutine.cpp **** 				//printString
 153:src/interruptRoutine.cpp **** 				const char* string;
 676              		.loc 1 153 5
 154:src/interruptRoutine.cpp **** 				string = (const char*)a1;
 677              		.loc 1 154 5
 678              		.loc 1 154 12 is_stmt 0
 679 0330 833784FB 		ld	a5,-72(s0)
 680 0334 2334F4FE 		sd	a5,-24(s0)
 681              	.LVL81:
 682              	.L31:
 155:src/interruptRoutine.cpp **** 				while (*string != '\0') {
 683              		.loc 1 155 5 is_stmt 1
 684              		.loc 1 155 20
 685              		.loc 1 155 12 is_stmt 0
 686 0338 833784FE 		ld	a5,-24(s0)
 687 033c 83C70700 		lbu	a5,0(a5)
 688              		.loc 1 155 20
 689 0340 63880716 		beqz	a5,.L42
 156:src/interruptRoutine.cpp **** 					__putc(*string);
 690              		.loc 1 156 6 is_stmt 1
 691              		.loc 1 156 12 is_stmt 0
 692 0344 833784FE 		ld	a5,-24(s0)
 693 0348 83C70700 		lbu	a5,0(a5)
 694 034c 13850700 		mv	a0,a5
 695 0350 97000000 		call	__putc@plt
 695      E7800000 
 696              	.LVL82:
 157:src/interruptRoutine.cpp **** 					string++;
 697              		.loc 1 157 6 is_stmt 1
 698              		.loc 1 157 12 is_stmt 0
 699 0358 833784FE 		ld	a5,-24(s0)
 700 035c 93871700 		addi	a5,a5,1
 701 0360 2334F4FE 		sd	a5,-24(s0)
 702              	.LVL83:
 155:src/interruptRoutine.cpp **** 				while (*string != '\0') {
 703              		.loc 1 155 5
 704 0364 6FF05FFD 		j	.L31
 705              	.LVL84:
 706              	.L4:
 158:src/interruptRoutine.cpp **** 				}
 159:src/interruptRoutine.cpp **** 				break;
 160:src/interruptRoutine.cpp **** 			case 0x91:
 707              		.loc 1 160 4 is_stmt 1
 161:src/interruptRoutine.cpp **** 				//printInteger
 162:src/interruptRoutine.cpp **** 				uint64 integer;
 708              		.loc 1 162 5
 163:src/interruptRoutine.cpp **** 				integer = a1;
 709              		.loc 1 163 5
 710              		.loc 1 163 13 is_stmt 0
 711 0368 833784FB 		ld	a5,-72(s0)
 712 036c 233CF4F6 		sd	a5,-136(s0)
GAS LISTING /tmp/cc4Tda8w.s 			page 17


 713              	.LVL85:
 164:src/interruptRoutine.cpp **** 				static char digits[] = "0123456789";
 714              		.loc 1 164 5 is_stmt 1
 165:src/interruptRoutine.cpp **** 				char buf[16];
 715              		.loc 1 165 5
 166:src/interruptRoutine.cpp **** 				int i, neg;
 716              		.loc 1 166 5
 167:src/interruptRoutine.cpp **** 				uint x;
 717              		.loc 1 167 5
 168:src/interruptRoutine.cpp **** 
 169:src/interruptRoutine.cpp **** 				neg = 0;
 718              		.loc 1 169 5
 719              		.loc 1 169 9 is_stmt 0
 720 0370 232A04F6 		sw	zero,-140(s0)
 721              	.LVL86:
 170:src/interruptRoutine.cpp **** 				if (integer < 0) {
 722              		.loc 1 170 5 is_stmt 1
 171:src/interruptRoutine.cpp **** 					neg = 1;
 172:src/interruptRoutine.cpp **** 					x = -integer;
 173:src/interruptRoutine.cpp **** 				} else {
 174:src/interruptRoutine.cpp **** 					x = integer;
 723              		.loc 1 174 6
 724              		.loc 1 174 8 is_stmt 0
 725 0374 833784F7 		ld	a5,-136(s0)
 726 0378 2320F4FE 		sw	a5,-32(s0)
 727              	.LVL87:
 175:src/interruptRoutine.cpp **** 				}
 176:src/interruptRoutine.cpp **** 
 177:src/interruptRoutine.cpp **** 				i = 0;
 728              		.loc 1 177 5 is_stmt 1
 729              		.loc 1 177 7 is_stmt 0
 730 037c 232204FE 		sw	zero,-28(s0)
 731              	.LVL88:
 732              	.L33:
 178:src/interruptRoutine.cpp **** 				do {
 733              		.loc 1 178 5 is_stmt 1
 179:src/interruptRoutine.cpp **** 					buf[i++] = digits[x % 10];
 734              		.loc 1 179 6
 735              		.loc 1 179 26 is_stmt 0
 736 0380 032704FE 		lw	a4,-32(s0)
 737 0384 9307A000 		li	a5,10
 738 0388 BB77F702 		remuw	a5,a4,a5
 739 038c 1B860700 		sext.w	a2,a5
 740              		.loc 1 179 11
 741 0390 832744FE 		lw	a5,-28(s0)
 742 0394 1B871700 		addiw	a4,a5,1
 743 0398 2322E4FE 		sw	a4,-28(s0)
 744              	.LVL89:
 745              		.loc 1 179 30
 746 039c 97060000 		lla	a3,_ZZ16interruptRoutineE6digits
 746      93860600 
 747 03a4 13170602 		slli	a4,a2,32
 748 03a8 13570702 		srli	a4,a4,32
 749              	.LVL90:
 750 03ac 3387E600 		add	a4,a3,a4
 751 03b0 03470700 		lbu	a4,0(a4)
 752              		.loc 1 179 15
GAS LISTING /tmp/cc4Tda8w.s 			page 18


 753 03b4 930604FF 		addi	a3,s0,-16
 754 03b8 B387F600 		add	a5,a3,a5
 755 03bc 2384E7F0 		sb	a4,-248(a5)
 180:src/interruptRoutine.cpp **** 				} while ((x /= 10) != 0);
 756              		.loc 1 180 24 is_stmt 1
 757              		.loc 1 180 17 is_stmt 0
 758 03c0 032704FE 		lw	a4,-32(s0)
 759 03c4 9307A000 		li	a5,10
 760 03c8 BB57F702 		divuw	a5,a4,a5
 761 03cc 2320F4FE 		sw	a5,-32(s0)
 762              	.LVL91:
 763              		.loc 1 180 24
 764 03d0 832704FE 		lw	a5,-32(s0)
 765 03d4 9B870700 		sext.w	a5,a5
 766              	.LVL92:
 767 03d8 B337F000 		snez	a5,a5
 768 03dc 93F7F70F 		andi	a5,a5,0xff
 769 03e0 63840700 		beqz	a5,.L32
 178:src/interruptRoutine.cpp **** 				do {
 770              		.loc 1 178 5
 771 03e4 6FF0DFF9 		j	.L33
 772              	.L32:
 181:src/interruptRoutine.cpp **** 				if (neg) buf[i++] = '-';
 773              		.loc 1 181 5 is_stmt 1
 774 03e8 832744F7 		lw	a5,-140(s0)
 775 03ec 9B870700 		sext.w	a5,a5
 776 03f0 63800702 		beqz	a5,.L36
 777              		.loc 1 181 14 discriminator 1
 778              		.loc 1 181 19 is_stmt 0 discriminator 1
 779 03f4 832744FE 		lw	a5,-28(s0)
 780 03f8 1B871700 		addiw	a4,a5,1
 781 03fc 2322E4FE 		sw	a4,-28(s0)
 782              	.LVL93:
 783              		.loc 1 181 23 discriminator 1
 784 0400 130704FF 		addi	a4,s0,-16
 785              	.LVL94:
 786 0404 B307F700 		add	a5,a4,a5
 787 0408 1307D002 		li	a4,45
 788 040c 2384E7F0 		sb	a4,-248(a5)
 789              	.LVL95:
 790              	.L36:
 182:src/interruptRoutine.cpp **** 
 183:src/interruptRoutine.cpp **** 				while (--i >= 0) {
 791              		.loc 1 183 5 is_stmt 1
 792              		.loc 1 183 16
 793 0410 832744FE 		lw	a5,-28(s0)
 794 0414 9B87F7FF 		addiw	a5,a5,-1
 795 0418 2322F4FE 		sw	a5,-28(s0)
 796              	.LVL96:
 797 041c 832744FE 		lw	a5,-28(s0)
 798 0420 93C7F7FF 		not	a5,a5
 799              	.LVL97:
 800 0424 9BD7F701 		srliw	a5,a5,31
 801 0428 93F7F70F 		andi	a5,a5,0xff
 802 042c 63860708 		beqz	a5,.L43
 184:src/interruptRoutine.cpp **** 					__putc(buf[i]);
 803              		.loc 1 184 6
GAS LISTING /tmp/cc4Tda8w.s 			page 19


 804              		.loc 1 184 12 is_stmt 0
 805 0430 832744FE 		lw	a5,-28(s0)
 806 0434 130704FF 		addi	a4,s0,-16
 807 0438 B307F700 		add	a5,a4,a5
 808 043c 83C787F0 		lbu	a5,-248(a5)
 809 0440 13850700 		mv	a0,a5
 810 0444 97000000 		call	__putc@plt
 810      E7800000 
 811              	.LVL98:
 183:src/interruptRoutine.cpp **** 					__putc(buf[i]);
 812              		.loc 1 183 5
 813 044c 6FF05FFC 		j	.L36
 814              	.LVL99:
 815              	.L5:
 185:src/interruptRoutine.cpp **** 				}
 186:src/interruptRoutine.cpp **** 				break;
 187:src/interruptRoutine.cpp **** 			default:
 816              		.loc 1 187 4 is_stmt 1
 188:src/interruptRoutine.cpp **** 				printString("\nNepostojeci op code: ");
 817              		.loc 1 188 5
 818              		.loc 1 188 16 is_stmt 0
 819 0450 17050000 		lla	a0,.LC0
 819      13050500 
 820 0458 97000000 		call	_Z11printStringPKc@plt
 820      E7800000 
 821              	.LVL100:
 189:src/interruptRoutine.cpp **** 				printInteger(opCode);
 822              		.loc 1 189 5 is_stmt 1
 823              		.loc 1 189 17 is_stmt 0
 824 0460 033504F8 		ld	a0,-128(s0)
 825 0464 97000000 		call	_Z12printIntegerm@plt
 825      E7800000 
 826              	.LVL101:
 190:src/interruptRoutine.cpp **** 				printString("\nscause: ");
 827              		.loc 1 190 5 is_stmt 1
 828              		.loc 1 190 16 is_stmt 0
 829 046c 17050000 		lla	a0,.LC1
 829      13050500 
 830 0474 97000000 		call	_Z11printStringPKc@plt
 830      E7800000 
 831              	.LVL102:
 191:src/interruptRoutine.cpp **** 				printInteger(scause);
 832              		.loc 1 191 5 is_stmt 1
 833              		.loc 1 191 17 is_stmt 0
 834 047c 033584FD 		ld	a0,-40(s0)
 835 0480 97000000 		call	_Z12printIntegerm@plt
 835      E7800000 
 836              	.LVL103:
 192:src/interruptRoutine.cpp **** 				printString("\nsepc: ");
 837              		.loc 1 192 5 is_stmt 1
 838              		.loc 1 192 16 is_stmt 0
 839 0488 17050000 		lla	a0,.LC2
 839      13050500 
 840 0490 97000000 		call	_Z11printStringPKc@plt
 840      E7800000 
 841              	.LVL104:
 193:src/interruptRoutine.cpp **** 				printInteger(sepc);
GAS LISTING /tmp/cc4Tda8w.s 			page 20


 842              		.loc 1 193 5 is_stmt 1
 843              		.loc 1 193 17 is_stmt 0
 844 0498 033504FD 		ld	a0,-48(s0)
 845 049c 97000000 		call	_Z12printIntegerm@plt
 845      E7800000 
 846              	.LVL105:
 194:src/interruptRoutine.cpp **** 				break;
 847              		.loc 1 194 5 is_stmt 1
 848 04a4 6F008001 		j	.L22
 849              	.LVL106:
 850              	.L41:
 139:src/interruptRoutine.cpp **** 			case 0x41:
 851              		.loc 1 139 5 is_stmt 0
 852 04a8 13000000 		nop
 853 04ac 6F000001 		j	.L22
 854              	.LVL107:
 855              	.L42:
 159:src/interruptRoutine.cpp **** 			case 0x91:
 856              		.loc 1 159 5
 857 04b0 13000000 		nop
 858 04b4 6F008000 		j	.L22
 859              	.LVL108:
 860              	.L43:
 186:src/interruptRoutine.cpp **** 			default:
 861              		.loc 1 186 5
 862 04b8 13000000 		nop
 863              	.LVL109:
 864              	.L22:
 865              	.LBE5:
 866              	.LBE4:
 195:src/interruptRoutine.cpp **** 		}
 196:src/interruptRoutine.cpp **** 		//sepc pokazuje na ecall instrukciju, treba preci na sledecu instrukciju
 197:src/interruptRoutine.cpp **** 		//sepc += 4;
 198:src/interruptRoutine.cpp **** 		__asm__ volatile("addi %[dst], %[src], 0x4":[dst]"=r"(sepc):[src]"r"(
 867              		.loc 1 198 3 is_stmt 1 discriminator 1
 199:src/interruptRoutine.cpp **** 				sepc):"a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7");
 868              		.loc 1 199 58 is_stmt 0 discriminator 1
 869 04bc 033304FD 		ld	t1,-48(s0)
 870              	#APP
 871              	# 199 "src/interruptRoutine.cpp" 1
 200              			__asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc):"a5", "a0", "a1", "a2", "a3", "a4", "a6"
 872              		addi t1, t1, 0x4
 873              	# 0 "" 2
 874              	.LVL110:
 875              	#NO_APP
 876 04c4 233864FC 		sd	t1,-48(s0)
 877              	.LVL111:
 878              		.loc 1 200 3 is_stmt 1 discriminator 1
 879              		.loc 1 200 107 is_stmt 0 discriminator 1
 880 04c8 033304FD 		ld	t1,-48(s0)
 881              	#APP
 882              	# 200 "src/interruptRoutine.cpp" 1
 201              			//Riscv::w_sepc(sepc + 4);
 883              		csrw sepc, t1
 884              	# 0 "" 2
 885              	#NO_APP
 886              	.LBE3:
GAS LISTING /tmp/cc4Tda8w.s 			page 21


 887 04d0 13000000 		nop
 888              	.LBE2:
 202:src/interruptRoutine.cpp **** 	} else if (scause == (1UL << 63 | 9)) {
 203:src/interruptRoutine.cpp **** 		//spoljasnji hardverski prekid (od konzole)
 204:src/interruptRoutine.cpp **** 		console_handler();
 205:src/interruptRoutine.cpp **** 	} else if (scause == (1UL << 63 | 1)) {
 206:src/interruptRoutine.cpp **** 		//prekid od tajmera
 207:src/interruptRoutine.cpp **** 		//printString("\nPrekid od tajmera\n");
 208:src/interruptRoutine.cpp **** 		Scheduler::wake();
 209:src/interruptRoutine.cpp **** 		TCB::runningTimeSlice++;
 210:src/interruptRoutine.cpp **** 		if (TCB::runningTimeSlice >= TCB::running->getTimeSlice()) {
 211:src/interruptRoutine.cpp **** 			//printString("\nMenjam kontekst\n");
 212:src/interruptRoutine.cpp **** 			TCB::yield();
 213:src/interruptRoutine.cpp **** 			TCB::runningTimeSlice = 0;
 214:src/interruptRoutine.cpp **** 		}
 215:src/interruptRoutine.cpp **** 
 216:src/interruptRoutine.cpp **** 		Riscv::w_sepc(sepc);
 217:src/interruptRoutine.cpp **** 		Riscv::w_sstatus(sstatus);
 218:src/interruptRoutine.cpp **** 		Riscv::mc_sip(Riscv::SIP_SSIP);
 219:src/interruptRoutine.cpp **** 	} else {
 220:src/interruptRoutine.cpp **** 		printString("\nGreska u prekidnoj rutini\n");
 221:src/interruptRoutine.cpp **** 		printString("scause: ");
 222:src/interruptRoutine.cpp **** 		printInteger(scause);
 223:src/interruptRoutine.cpp **** 		printString("\nsepc: ");
 224:src/interruptRoutine.cpp **** 		printInteger(sepc);
 225:src/interruptRoutine.cpp **** 	}
 226:src/interruptRoutine.cpp **** }
 889              		.loc 1 226 1 discriminator 1
 890 04d4 6F008011 		j	.L44
 891              	.LVL112:
 892              	.L3:
 893              	.LBB6:
 202:src/interruptRoutine.cpp **** 	} else if (scause == (1UL << 63 | 9)) {
 894              		.loc 1 202 9 is_stmt 1
 895 04d8 033784FD 		ld	a4,-40(s0)
 896              	.LVL113:
 897 04dc 9307F0FF 		li	a5,-1
 898 04e0 9397F703 		slli	a5,a5,63
 899 04e4 93879700 		addi	a5,a5,9
 900 04e8 6318F700 		bne	a4,a5,.L38
 204:src/interruptRoutine.cpp **** 	} else if (scause == (1UL << 63 | 1)) {
 901              		.loc 1 204 3
 204:src/interruptRoutine.cpp **** 	} else if (scause == (1UL << 63 | 1)) {
 902              		.loc 1 204 18 is_stmt 0
 903 04ec 97000000 		call	console_handler@plt
 903      E7800000 
 904              	.LVL114:
 905              	.LBE6:
 906              		.loc 1 226 1
 907 04f4 6F00800F 		j	.L44
 908              	.LVL115:
 909              	.L38:
 910              	.LBB7:
 205:src/interruptRoutine.cpp **** 		//prekid od tajmera
 911              		.loc 1 205 9 is_stmt 1
 912 04f8 033784FD 		ld	a4,-40(s0)
 913 04fc 9307F0FF 		li	a5,-1
GAS LISTING /tmp/cc4Tda8w.s 			page 22


 914 0500 9397F703 		slli	a5,a5,63
 915 0504 93871700 		addi	a5,a5,1
 916 0508 631EF708 		bne	a4,a5,.L39
 208:src/interruptRoutine.cpp **** 		TCB::runningTimeSlice++;
 917              		.loc 1 208 3
 208:src/interruptRoutine.cpp **** 		TCB::runningTimeSlice++;
 918              		.loc 1 208 18 is_stmt 0
 919 050c 97000000 		call	_ZN9Scheduler4wakeEv@plt
 919      E7800000 
 920              	.LVL116:
 209:src/interruptRoutine.cpp **** 		if (TCB::runningTimeSlice >= TCB::running->getTimeSlice()) {
 921              		.loc 1 209 3 is_stmt 1
 209:src/interruptRoutine.cpp **** 		if (TCB::runningTimeSlice >= TCB::running->getTimeSlice()) {
 922              		.loc 1 209 24 is_stmt 0
 923 0514 97070000 		la	a5,_ZN3TCB16runningTimeSliceE
 923      83B70700 
 924 051c 83B70700 		ld	a5,0(a5)
 925 0520 13871700 		addi	a4,a5,1
 926 0524 97070000 		la	a5,_ZN3TCB16runningTimeSliceE
 926      83B70700 
 927 052c 23B0E700 		sd	a4,0(a5)
 210:src/interruptRoutine.cpp **** 			//printString("\nMenjam kontekst\n");
 928              		.loc 1 210 3 is_stmt 1
 210:src/interruptRoutine.cpp **** 			//printString("\nMenjam kontekst\n");
 929              		.loc 1 210 58 is_stmt 0
 930 0530 97070000 		la	a5,_ZN3TCB7runningE
 930      83B70700 
 931 0538 83B70700 		ld	a5,0(a5)
 932 053c 13850700 		mv	a0,a5
 933 0540 97000000 		call	_ZN3TCB12getTimeSliceEv
 933      E7800000 
 934              	.LVL117:
 935 0548 13070500 		mv	a4,a0
 210:src/interruptRoutine.cpp **** 			//printString("\nMenjam kontekst\n");
 936              		.loc 1 210 29
 937 054c 97070000 		la	a5,_ZN3TCB16runningTimeSliceE
 937      83B70700 
 938 0554 83B70700 		ld	a5,0(a5)
 939 0558 B3B7E700 		sgtu	a5,a4,a5
 940 055c 93C71700 		xori	a5,a5,1
 941 0560 93F7F70F 		andi	a5,a5,0xff
 210:src/interruptRoutine.cpp **** 			//printString("\nMenjam kontekst\n");
 942              		.loc 1 210 3
 943 0564 638C0700 		beqz	a5,.L40
 212:src/interruptRoutine.cpp **** 			TCB::runningTimeSlice = 0;
 944              		.loc 1 212 4 is_stmt 1
 212:src/interruptRoutine.cpp **** 			TCB::runningTimeSlice = 0;
 945              		.loc 1 212 14 is_stmt 0
 946 0568 97000000 		call	_ZN3TCB5yieldEv@plt
 946      E7800000 
 947              	.LVL118:
 213:src/interruptRoutine.cpp **** 		}
 948              		.loc 1 213 4 is_stmt 1
 213:src/interruptRoutine.cpp **** 		}
 949              		.loc 1 213 26 is_stmt 0
 950 0570 97070000 		la	a5,_ZN3TCB16runningTimeSliceE
 950      83B70700 
GAS LISTING /tmp/cc4Tda8w.s 			page 23


 951 0578 23B00700 		sd	zero,0(a5)
 952              	.L40:
 216:src/interruptRoutine.cpp **** 		Riscv::w_sstatus(sstatus);
 953              		.loc 1 216 3 is_stmt 1
 216:src/interruptRoutine.cpp **** 		Riscv::w_sstatus(sstatus);
 954              		.loc 1 216 16 is_stmt 0
 955 057c 033504FD 		ld	a0,-48(s0)
 956 0580 97000000 		call	_ZN5Riscv6w_sepcEm
 956      E7800000 
 957              	.LVL119:
 217:src/interruptRoutine.cpp **** 		Riscv::mc_sip(Riscv::SIP_SSIP);
 958              		.loc 1 217 3 is_stmt 1
 217:src/interruptRoutine.cpp **** 		Riscv::mc_sip(Riscv::SIP_SSIP);
 959              		.loc 1 217 19 is_stmt 0
 960 0588 033584FC 		ld	a0,-56(s0)
 961 058c 97000000 		call	_ZN5Riscv9w_sstatusEm
 961      E7800000 
 962              	.LVL120:
 218:src/interruptRoutine.cpp **** 	} else {
 963              		.loc 1 218 3 is_stmt 1
 218:src/interruptRoutine.cpp **** 	} else {
 964              		.loc 1 218 16 is_stmt 0
 965 0594 13052000 		li	a0,2
 966 0598 97000000 		call	_ZN5Riscv6mc_sipEm
 966      E7800000 
 967              	.LVL121:
 968              	.LBE7:
 969              		.loc 1 226 1
 970 05a0 6F00C004 		j	.L44
 971              	.LVL122:
 972              	.L39:
 973              	.LBB8:
 220:src/interruptRoutine.cpp **** 		printString("scause: ");
 974              		.loc 1 220 3 is_stmt 1
 220:src/interruptRoutine.cpp **** 		printString("scause: ");
 975              		.loc 1 220 14 is_stmt 0
 976 05a4 17050000 		lla	a0,.LC3
 976      13050500 
 977 05ac 97000000 		call	_Z11printStringPKc@plt
 977      E7800000 
 978              	.LVL123:
 221:src/interruptRoutine.cpp **** 		printInteger(scause);
 979              		.loc 1 221 3 is_stmt 1
 221:src/interruptRoutine.cpp **** 		printInteger(scause);
 980              		.loc 1 221 14 is_stmt 0
 981 05b4 17050000 		lla	a0,.LC4
 981      13050500 
 982 05bc 97000000 		call	_Z11printStringPKc@plt
 982      E7800000 
 983              	.LVL124:
 222:src/interruptRoutine.cpp **** 		printString("\nsepc: ");
 984              		.loc 1 222 3 is_stmt 1
 222:src/interruptRoutine.cpp **** 		printString("\nsepc: ");
 985              		.loc 1 222 15 is_stmt 0
 986 05c4 033584FD 		ld	a0,-40(s0)
 987 05c8 97000000 		call	_Z12printIntegerm@plt
 987      E7800000 
GAS LISTING /tmp/cc4Tda8w.s 			page 24


 988              	.LVL125:
 223:src/interruptRoutine.cpp **** 		printInteger(sepc);
 989              		.loc 1 223 3 is_stmt 1
 223:src/interruptRoutine.cpp **** 		printInteger(sepc);
 990              		.loc 1 223 14 is_stmt 0
 991 05d0 17050000 		lla	a0,.LC2
 991      13050500 
 992 05d8 97000000 		call	_Z11printStringPKc@plt
 992      E7800000 
 993              	.LVL126:
 224:src/interruptRoutine.cpp **** 	}
 994              		.loc 1 224 3 is_stmt 1
 224:src/interruptRoutine.cpp **** 	}
 995              		.loc 1 224 15 is_stmt 0
 996 05e0 033504FD 		ld	a0,-48(s0)
 997 05e4 97000000 		call	_Z12printIntegerm@plt
 997      E7800000 
 998              	.LVL127:
 999              	.L44:
 1000              	.LBE8:
 1001              		.loc 1 226 1
 1002 05ec 13000000 		nop
 1003 05f0 83308110 		ld	ra,264(sp)
 1004              		.cfi_restore 1
 1005 05f4 03340110 		ld	s0,256(sp)
 1006              		.cfi_restore 8
 1007              		.cfi_def_cfa 2, 272
 1008              	.LVL128:
 1009 05f8 13010111 		addi	sp,sp,272
 1010              		.cfi_def_cfa_offset 0
 1011              	.LVL129:
 1012 05fc 67800000 		jr	ra
 1013              		.cfi_endproc
 1014              	.LFE48:
 1016              		.section	.text._ZN5Riscv6w_sepcEm,"axG",@progbits,_ZN5Riscv6w_sepcEm,comdat
 1017              		.align	2
 1018              		.weak	_ZN5Riscv6w_sepcEm
 1020              	_ZN5Riscv6w_sepcEm:
 1021              	.LFB6:
 1022              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 5/17/23.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJEKAT2023_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJEKAT2023_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** class Riscv {
  11:src/../h/Riscv.hpp **** public:
  12:src/../h/Riscv.hpp **** 
  13:src/../h/Riscv.hpp **** 	static void popSppSpie();
  14:src/../h/Riscv.hpp **** 
  15:src/../h/Riscv.hpp **** 	//stavljanje registara x3-x31 na stek
  16:src/../h/Riscv.hpp **** 	static void pushRegisters();    //implementacija u asm
  17:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/cc4Tda8w.s 			page 25


  18:src/../h/Riscv.hpp **** 	//skidanje registara x3-x31 sa steka
  19:src/../h/Riscv.hpp **** 	static void popRegisters();     //implementacija u asm
  20:src/../h/Riscv.hpp **** 
  21:src/../h/Riscv.hpp **** 	//read scause
  22:src/../h/Riscv.hpp **** 	static uint64 r_scause();
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp **** 	//write scause
  25:src/../h/Riscv.hpp **** 	static void w_scause(uint64 scause);
  26:src/../h/Riscv.hpp **** 
  27:src/../h/Riscv.hpp **** 	//read sepc
  28:src/../h/Riscv.hpp **** 	static uint64 r_sepc();
  29:src/../h/Riscv.hpp **** 
  30:src/../h/Riscv.hpp **** 	//write sepc
  31:src/../h/Riscv.hpp **** 	static void w_sepc(uint64 sepc);
  32:src/../h/Riscv.hpp **** 
  33:src/../h/Riscv.hpp **** 	//read stvec
  34:src/../h/Riscv.hpp **** 	static uint64 r_stvec();
  35:src/../h/Riscv.hpp **** 
  36:src/../h/Riscv.hpp **** 	//write stvec
  37:src/../h/Riscv.hpp **** 	static void w_stvec(uint64 stvec);
  38:src/../h/Riscv.hpp **** 
  39:src/../h/Riscv.hpp **** 	enum BitMaskSip {
  40:src/../h/Riscv.hpp **** 		//postoji zahtev za softverski prekid
  41:src/../h/Riscv.hpp **** 		SIP_SSIP = (1 << 1),
  42:src/../h/Riscv.hpp **** 		//postoji prekid od tajmera
  43:src/../h/Riscv.hpp **** 		SIP_STIP = (1 << 5),
  44:src/../h/Riscv.hpp **** 		//postoji zahtev za spoljasnji hardverski prekid
  45:src/../h/Riscv.hpp **** 		SIP_SEIP = (1 << 9)
  46:src/../h/Riscv.hpp **** 	};
  47:src/../h/Riscv.hpp **** 
  48:src/../h/Riscv.hpp **** 	//mask set sip
  49:src/../h/Riscv.hpp **** 	static void ms_sip(uint64 mask);
  50:src/../h/Riscv.hpp **** 
  51:src/../h/Riscv.hpp **** 	//mask clear sip
  52:src/../h/Riscv.hpp **** 	static void mc_sip(uint64 mask);
  53:src/../h/Riscv.hpp **** 
  54:src/../h/Riscv.hpp **** 	//read sip
  55:src/../h/Riscv.hpp **** 	static uint64 r_sip();
  56:src/../h/Riscv.hpp **** 
  57:src/../h/Riscv.hpp **** 	//write sip
  58:src/../h/Riscv.hpp **** 	static void w_sip(uint64 sip);
  59:src/../h/Riscv.hpp **** 
  60:src/../h/Riscv.hpp **** 	//kada se pozove sret, SIE dobija vrednost SPIE, SPIE se postavlja na 1,
  61:src/../h/Riscv.hpp **** 	//rezim se postavlja na osnovu SPP bita, SPP se postavlja na 0
  62:src/../h/Riscv.hpp **** 	enum BitMaskSstatus {
  63:src/../h/Riscv.hpp **** 		//1 - dozvoljeni prekidi; 0- nedozvoljeni prekidi; igonrise se u korisnickom rezimu
  64:src/../h/Riscv.hpp **** 		SSTATUS_SIE = (1 << 1),
  65:src/../h/Riscv.hpp **** 		//prethodna vrednost bita SIE
  66:src/../h/Riscv.hpp **** 		SSTATUS_SPIE = (1 << 5),
  67:src/../h/Riscv.hpp **** 		//iz kog rezima se desio skok; 0 - iz korisnickog; 1 - iz sistemskog
  68:src/../h/Riscv.hpp **** 		SSTATUS_SPP = (1 << 8)
  69:src/../h/Riscv.hpp **** 	};
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp **** 	//mask set sstatus
  72:src/../h/Riscv.hpp **** 	static void ms_sstatus(uint64 mask);
  73:src/../h/Riscv.hpp **** 
  74:src/../h/Riscv.hpp **** 	//mask clear sstatus
GAS LISTING /tmp/cc4Tda8w.s 			page 26


  75:src/../h/Riscv.hpp **** 	static void mc_sstatus(uint64 mask);
  76:src/../h/Riscv.hpp **** 
  77:src/../h/Riscv.hpp **** 	//read sstatus
  78:src/../h/Riscv.hpp **** 	static uint64 r_sstatus();
  79:src/../h/Riscv.hpp **** 
  80:src/../h/Riscv.hpp **** 	//write sstatus
  81:src/../h/Riscv.hpp **** 	static void w_sstatus(uint64 sstatus);
  82:src/../h/Riscv.hpp **** 
  83:src/../h/Riscv.hpp **** 	//upisuje kod sistemskog poziva u registar a0
  84:src/../h/Riscv.hpp **** 	static void loadOpCode(uint64 opCode);
  85:src/../h/Riscv.hpp **** 
  86:src/../h/Riscv.hpp **** };
  87:src/../h/Riscv.hpp **** 
  88:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause() {
  89:src/../h/Riscv.hpp **** 	uint64 volatile scause;
  90:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[scause], scause": [scause] "=r"(scause));
  91:src/../h/Riscv.hpp **** 	return scause;
  92:src/../h/Riscv.hpp **** }
  93:src/../h/Riscv.hpp **** 
  94:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
  95:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw scause, %[scause]": :[scause] "r"(scause));
  96:src/../h/Riscv.hpp **** }
  97:src/../h/Riscv.hpp **** 
  98:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc() {
  99:src/../h/Riscv.hpp **** 	uint64 volatile sepc;
 100:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[sepc], sepc": [sepc] "=r"(sepc));
 101:src/../h/Riscv.hpp **** 	return sepc;
 102:src/../h/Riscv.hpp **** }
 103:src/../h/Riscv.hpp **** 
 104:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
 1023              		.loc 2 104 40 is_stmt 1
 1024              		.cfi_startproc
 1025              	.LVL130:
 1026 0000 130101FF 		addi	sp,sp,-16
 1027              		.cfi_def_cfa_offset 16
 1028 0004 23348100 		sd	s0,8(sp)
 1029              		.cfi_offset 8, -8
 1030 0008 13040101 		addi	s0,sp,16
 1031              		.cfi_def_cfa 8, 0
 105:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 1032              		.loc 2 105 2
 1033              		.loc 2 105 59 is_stmt 0
 1034              	#APP
 1035              	# 105 "src/../h/Riscv.hpp" 1
 106              	}
 1036              		csrw sepc, a0
 1037              	# 0 "" 2
 1038              		.loc 2 106 1
 1039              	#NO_APP
 1040 0010 03348100 		ld	s0,8(sp)
 1041              		.cfi_restore 8
 1042              		.cfi_def_cfa 2, 16
 1043 0014 13010101 		addi	sp,sp,16
 1044              		.cfi_def_cfa_offset 0
 1045 0018 67800000 		jr	ra
 1046              		.cfi_endproc
 1047              	.LFE6:
GAS LISTING /tmp/cc4Tda8w.s 			page 27


 1049              		.section	.text._ZN5Riscv6mc_sipEm,"axG",@progbits,_ZN5Riscv6mc_sipEm,comdat
 1050              		.align	2
 1051              		.weak	_ZN5Riscv6mc_sipEm
 1053              	_ZN5Riscv6mc_sipEm:
 1054              	.LFB10:
 107:src/../h/Riscv.hpp **** 
 108:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec() {
 109:src/../h/Riscv.hpp **** 	uint64 volatile stvec;
 110:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[stvec], stvec": [stvec] "=r"(stvec));
 111:src/../h/Riscv.hpp **** 	return stvec;
 112:src/../h/Riscv.hpp **** }
 113:src/../h/Riscv.hpp **** 
 114:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 115:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw stvec, %[stvec]": :[stvec] "r"(stvec));
 116:src/../h/Riscv.hpp **** }
 117:src/../h/Riscv.hpp **** 
 118:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 119:src/../h/Riscv.hpp **** 	__asm__ volatile("csrs sip, %[mask]": :[mask] "r"(mask));
 120:src/../h/Riscv.hpp **** }
 121:src/../h/Riscv.hpp **** 
 122:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 1055              		.loc 2 122 40 is_stmt 1
 1056              		.cfi_startproc
 1057              	.LVL131:
 1058 0000 130101FF 		addi	sp,sp,-16
 1059              		.cfi_def_cfa_offset 16
 1060 0004 23348100 		sd	s0,8(sp)
 1061              		.cfi_offset 8, -8
 1062 0008 13040101 		addi	s0,sp,16
 1063              		.cfi_def_cfa 8, 0
 123:src/../h/Riscv.hpp **** 	__asm__ volatile("csrc sip, %[mask]": :[mask] "r"(mask));
 1064              		.loc 2 123 2
 1065              		.loc 2 123 58 is_stmt 0
 1066              	#APP
 1067              	# 123 "src/../h/Riscv.hpp" 1
 124              	}
 1068              		csrc sip, a0
 1069              	# 0 "" 2
 1070              		.loc 2 124 1
 1071              	#NO_APP
 1072 0010 03348100 		ld	s0,8(sp)
 1073              		.cfi_restore 8
 1074              		.cfi_def_cfa 2, 16
 1075 0014 13010101 		addi	sp,sp,16
 1076              		.cfi_def_cfa_offset 0
 1077 0018 67800000 		jr	ra
 1078              		.cfi_endproc
 1079              	.LFE10:
 1081              		.section	.text._ZN5Riscv9w_sstatusEm,"axG",@progbits,_ZN5Riscv9w_sstatusEm,comdat
 1082              		.align	2
 1083              		.weak	_ZN5Riscv9w_sstatusEm
 1085              	_ZN5Riscv9w_sstatusEm:
 1086              	.LFB16:
 125:src/../h/Riscv.hpp **** 
 126:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip() {
 127:src/../h/Riscv.hpp **** 	uint64 volatile sip;
 128:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[sip], sip": [sip] "=r"(sip));
GAS LISTING /tmp/cc4Tda8w.s 			page 28


 129:src/../h/Riscv.hpp **** 	return sip;
 130:src/../h/Riscv.hpp **** }
 131:src/../h/Riscv.hpp **** 
 132:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip) {
 133:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw sip, %[sip]": :[sip] "r"(sip));
 134:src/../h/Riscv.hpp **** }
 135:src/../h/Riscv.hpp **** 
 136:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
 137:src/../h/Riscv.hpp **** 	__asm__ volatile("csrs sstatus, %[mask]": :[mask] "r"(mask));
 138:src/../h/Riscv.hpp **** }
 139:src/../h/Riscv.hpp **** 
 140:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask) {
 141:src/../h/Riscv.hpp **** 	__asm__ volatile("csrc sstatus, %[mask]": :[mask] "r"(mask));
 142:src/../h/Riscv.hpp **** }
 143:src/../h/Riscv.hpp **** 
 144:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sstatus() {
 145:src/../h/Riscv.hpp **** 	uint64 volatile sstatus;
 146:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[sstatus], sstatus": [sstatus] "=r"(sstatus));
 147:src/../h/Riscv.hpp **** 	return sstatus;
 148:src/../h/Riscv.hpp **** }
 149:src/../h/Riscv.hpp **** 
 150:src/../h/Riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus) {
 1087              		.loc 2 150 46 is_stmt 1
 1088              		.cfi_startproc
 1089              	.LVL132:
 1090 0000 130101FF 		addi	sp,sp,-16
 1091              		.cfi_def_cfa_offset 16
 1092 0004 23348100 		sd	s0,8(sp)
 1093              		.cfi_offset 8, -8
 1094 0008 13040101 		addi	s0,sp,16
 1095              		.cfi_def_cfa 8, 0
 151:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw sstatus, %[sstatus]": :[sstatus] "r"(sstatus));
 1096              		.loc 2 151 2
 1097              		.loc 2 151 71 is_stmt 0
 1098              	#APP
 1099              	# 151 "src/../h/Riscv.hpp" 1
 152              	}
 1100              		csrw sstatus, a0
 1101              	# 0 "" 2
 1102              		.loc 2 152 1
 1103              	#NO_APP
 1104 0010 03348100 		ld	s0,8(sp)
 1105              		.cfi_restore 8
 1106              		.cfi_def_cfa 2, 16
 1107 0014 13010101 		addi	sp,sp,16
 1108              		.cfi_def_cfa_offset 0
 1109 0018 67800000 		jr	ra
 1110              		.cfi_endproc
 1111              	.LFE16:
 1113              		.section	.text._ZN3TCB11setFinishedEb,"axG",@progbits,_ZN3TCB11setFinishedEb,comdat
 1114              		.align	2
 1115              		.weak	_ZN3TCB11setFinishedEb
 1117              	_ZN3TCB11setFinishedEb:
 1118              	.LFB33:
 1119              		.file 3 "src/../h/TCB.hpp"
   1:src/../h/TCB.hpp **** //
   2:src/../h/TCB.hpp **** // Created by os on 5/23/23.
GAS LISTING /tmp/cc4Tda8w.s 			page 29


   3:src/../h/TCB.hpp **** //
   4:src/../h/TCB.hpp **** 
   5:src/../h/TCB.hpp **** #ifndef PROJEKAT2023_TCB_HPP
   6:src/../h/TCB.hpp **** #define PROJEKAT2023_TCB_HPP
   7:src/../h/TCB.hpp **** 
   8:src/../h/TCB.hpp **** #include "../lib/hw.h"
   9:src/../h/TCB.hpp **** #include "../h/ThreadQueue.hpp"
  10:src/../h/TCB.hpp **** 
  11:src/../h/TCB.hpp **** class TCB {
  12:src/../h/TCB.hpp **** public:
  13:src/../h/TCB.hpp **** 	friend class Scheduler;
  14:src/../h/TCB.hpp **** 
  15:src/../h/TCB.hpp **** 	using Body = void (*)(void*);
  16:src/../h/TCB.hpp **** 
  17:src/../h/TCB.hpp **** 	static TCB* createThread(Body function, void* args, uint64* stack);
  18:src/../h/TCB.hpp **** 	static void start(TCB* newTcb);
  19:src/../h/TCB.hpp **** 
  20:src/../h/TCB.hpp **** 	bool isFinished() { return finished; }
  21:src/../h/TCB.hpp **** 
  22:src/../h/TCB.hpp **** 	void setFinished(bool finish) { this->finished = finish; }
 1120              		.loc 3 22 7 is_stmt 1
 1121              		.cfi_startproc
 1122              	.LVL133:
 1123 0000 130101FF 		addi	sp,sp,-16
 1124              		.cfi_def_cfa_offset 16
 1125 0004 23348100 		sd	s0,8(sp)
 1126              		.cfi_offset 8, -8
 1127 0008 13040101 		addi	s0,sp,16
 1128              		.cfi_def_cfa 8, 0
 1129              		.loc 3 22 34
 1130              		.loc 3 22 49 is_stmt 0
 1131 000c 2308B502 		sb	a1,48(a0)
 1132              		.loc 3 22 59
 1133 0010 03348100 		ld	s0,8(sp)
 1134              		.cfi_restore 8
 1135              		.cfi_def_cfa 2, 16
 1136 0014 13010101 		addi	sp,sp,16
 1137              		.cfi_def_cfa_offset 0
 1138 0018 67800000 		jr	ra
 1139              		.cfi_endproc
 1140              	.LFE33:
 1142              		.section	.text._ZN3TCB12getTimeSliceEv,"axG",@progbits,_ZN3TCB12getTimeSliceEv,comdat
 1143              		.align	2
 1144              		.weak	_ZN3TCB12getTimeSliceEv
 1146              	_ZN3TCB12getTimeSliceEv:
 1147              	.LFB36:
  23:src/../h/TCB.hpp **** 
  24:src/../h/TCB.hpp **** 	bool isBlocked() { return blocked; }
  25:src/../h/TCB.hpp **** 
  26:src/../h/TCB.hpp **** 	void setBlocked(bool block) { this->blocked = block; }
  27:src/../h/TCB.hpp **** 
  28:src/../h/TCB.hpp **** 	uint64 getTimeSlice() { return timeSlice; }
 1148              		.loc 3 28 9 is_stmt 1
 1149              		.cfi_startproc
 1150              	.LVL134:
 1151 0000 130101FF 		addi	sp,sp,-16
 1152              		.cfi_def_cfa_offset 16
GAS LISTING /tmp/cc4Tda8w.s 			page 30


 1153 0004 23348100 		sd	s0,8(sp)
 1154              		.cfi_offset 8, -8
 1155 0008 13040101 		addi	s0,sp,16
 1156              		.cfi_def_cfa 8, 0
 1157              		.loc 3 28 26
 1158              		.loc 3 28 44 is_stmt 0
 1159 000c 03358502 		ld	a0,40(a0)
 1160              	.LVL135:
 1161 0010 03348100 		ld	s0,8(sp)
 1162              		.cfi_restore 8
 1163              		.cfi_def_cfa 2, 16
 1164 0014 13010101 		addi	sp,sp,16
 1165              		.cfi_def_cfa_offset 0
 1166 0018 67800000 		jr	ra
 1167              		.cfi_endproc
 1168              	.LFE36:
 1170              		.data
 1171              		.align	3
 1174              	_ZZ16interruptRoutineE6digits:
 1175 0000 30313233 		.string	"0123456789"
 1175      34353637 
 1175      383900
 1176              		.text
 1177              	.Letext0:
 1178              		.file 4 "src/../lib/hw.h"
 1179              		.file 5 "src/../h/MemoryAllocator.hpp"
 1180              		.file 6 "src/../h/syscall_c.hpp"
 1181              		.file 7 "src/../h/KSem.hpp"
 1182              		.file 8 "src/../h/../h/ThreadQueue.hpp"
 1183              		.file 9 "src/../h/Scheduler.hpp"
 1184              		.file 10 "src/../lib/console.h"
 1185              		.file 11 "src/../h/helper.hpp"
GAS LISTING /tmp/cc4Tda8w.s 			page 31


DEFINED SYMBOLS
                            *ABS*:0000000000000000 interruptRoutine.cpp
     /tmp/cc4Tda8w.s:26     .text:0000000000000000 interruptRoutine
     /tmp/cc4Tda8w.s:30     .text:0000000000000000 .L0 
     /tmp/cc4Tda8w.s:31     .text:0000000000000000 .L0 
     /tmp/cc4Tda8w.s:32     .text:0000000000000004 .L0 
     /tmp/cc4Tda8w.s:35     .text:000000000000000c .L0 
     /tmp/cc4Tda8w.s:36     .text:000000000000000c .L0 
     /tmp/cc4Tda8w.s:38     .text:0000000000000010 .L0 
     /tmp/cc4Tda8w.s:40     .text:0000000000000010 .L0 
     /tmp/cc4Tda8w.s:41     .text:0000000000000010 .L0 
src/interruptRoutine.cpp:18     .text:0000000000000010 .L0 
     /tmp/cc4Tda8w.s:50     .text:0000000000000018 .L0 
src/interruptRoutine.cpp:19     .text:0000000000000018 .L0 
     /tmp/cc4Tda8w.s:60     .text:0000000000000020 .L0 
src/interruptRoutine.cpp:21     .text:0000000000000020 .L0 
     /tmp/cc4Tda8w.s:70     .text:0000000000000028 .L0 
     /tmp/cc4Tda8w.s:71     .text:0000000000000028 .L0 
src/interruptRoutine.cpp:23     .text:0000000000000028 .L0 
     /tmp/cc4Tda8w.s:81     .text:0000000000000030 .L0 
src/interruptRoutine.cpp:24     .text:0000000000000030 .L0 
     /tmp/cc4Tda8w.s:91     .text:0000000000000038 .L0 
src/interruptRoutine.cpp:25     .text:0000000000000038 .L0 
     /tmp/cc4Tda8w.s:101    .text:0000000000000040 .L0 
src/interruptRoutine.cpp:26     .text:0000000000000040 .L0 
     /tmp/cc4Tda8w.s:111    .text:0000000000000048 .L0 
src/interruptRoutine.cpp:27     .text:0000000000000048 .L0 
     /tmp/cc4Tda8w.s:121    .text:0000000000000050 .L0 
src/interruptRoutine.cpp:28     .text:0000000000000050 .L0 
     /tmp/cc4Tda8w.s:131    .text:0000000000000058 .L0 
src/interruptRoutine.cpp:29     .text:0000000000000058 .L0 
     /tmp/cc4Tda8w.s:141    .text:0000000000000060 .L0 
src/interruptRoutine.cpp:30     .text:0000000000000060 .L0 
     /tmp/cc4Tda8w.s:152    .text:0000000000000068 .L0 
     /tmp/cc4Tda8w.s:156    .text:0000000000000074 .L0 
     /tmp/cc4Tda8w.s:162    .text:0000000000000080 .L0 
     /tmp/cc4Tda8w.s:163    .text:0000000000000080 .L0 
     /tmp/cc4Tda8w.s:168    .text:0000000000000088 .L0 
     /tmp/cc4Tda8w.s:276    .text:00000000000000fc .L0 
     /tmp/cc4Tda8w.s:277    .text:00000000000000fc .L0 
     /tmp/cc4Tda8w.s:278    .text:00000000000000fc .L0 
     /tmp/cc4Tda8w.s:279    .text:00000000000000fc .L0 
     /tmp/cc4Tda8w.s:283    .text:0000000000000104 .L0 
     /tmp/cc4Tda8w.s:284    .text:0000000000000104 .L0 
     /tmp/cc4Tda8w.s:290    .text:0000000000000110 .L0 
     /tmp/cc4Tda8w.s:291    .text:0000000000000110 .L0 
     /tmp/cc4Tda8w.s:296    .text:0000000000000120 .L0 
src/interruptRoutine.cpp:43     .text:0000000000000120 .L0 
     /tmp/cc4Tda8w.s:303    .text:0000000000000124 .L0 
     /tmp/cc4Tda8w.s:307    .text:0000000000000128 .L0 
     /tmp/cc4Tda8w.s:308    .text:0000000000000128 .L0 
     /tmp/cc4Tda8w.s:309    .text:0000000000000128 .L0 
     /tmp/cc4Tda8w.s:310    .text:0000000000000128 .L0 
     /tmp/cc4Tda8w.s:314    .text:0000000000000130 .L0 
     /tmp/cc4Tda8w.s:315    .text:0000000000000130 .L0 
     /tmp/cc4Tda8w.s:319    .text:000000000000013c .L0 
src/interruptRoutine.cpp:51     .text:000000000000013c .L0 
GAS LISTING /tmp/cc4Tda8w.s 			page 32


     /tmp/cc4Tda8w.s:326    .text:0000000000000140 .L0 
     /tmp/cc4Tda8w.s:330    .text:0000000000000144 .L0 
     /tmp/cc4Tda8w.s:331    .text:0000000000000144 .L0 
     /tmp/cc4Tda8w.s:332    .text:0000000000000144 .L0 
     /tmp/cc4Tda8w.s:333    .text:0000000000000144 .L0 
     /tmp/cc4Tda8w.s:337    .text:000000000000014c .L0 
     /tmp/cc4Tda8w.s:338    .text:000000000000014c .L0 
     /tmp/cc4Tda8w.s:339    .text:000000000000014c .L0 
     /tmp/cc4Tda8w.s:344    .text:0000000000000154 .L0 
     /tmp/cc4Tda8w.s:345    .text:0000000000000154 .L0 
     /tmp/cc4Tda8w.s:346    .text:0000000000000154 .L0 
     /tmp/cc4Tda8w.s:351    .text:000000000000015c .L0 
     /tmp/cc4Tda8w.s:352    .text:000000000000015c .L0 
     /tmp/cc4Tda8w.s:353    .text:000000000000015c .L0 
     /tmp/cc4Tda8w.s:358    .text:0000000000000164 .L0 
     /tmp/cc4Tda8w.s:359    .text:0000000000000164 .L0 
     /tmp/cc4Tda8w.s:366    .text:000000000000017c .L0 
     /tmp/cc4Tda8w.s:369    .text:0000000000000184 .L0 
     /tmp/cc4Tda8w.s:370    .text:0000000000000184 .L0 
     /tmp/cc4Tda8w.s:376    .text:0000000000000198 .L0 
     /tmp/cc4Tda8w.s:377    .text:0000000000000198 .L0 
     /tmp/cc4Tda8w.s:380    .text:00000000000001a0 .L0 
     /tmp/cc4Tda8w.s:382    .text:00000000000001a4 .L0 
src/interruptRoutine.cpp:67     .text:00000000000001a4 .L0 
     /tmp/cc4Tda8w.s:391    .text:00000000000001ac .L0 
src/interruptRoutine.cpp:69     .text:00000000000001ac .L0 
     /tmp/cc4Tda8w.s:399    .text:00000000000001b0 .L0 
src/interruptRoutine.cpp:71     .text:00000000000001b0 .L0 
     /tmp/cc4Tda8w.s:406    .text:00000000000001b4 .L0 
     /tmp/cc4Tda8w.s:410    .text:00000000000001b8 .L0 
     /tmp/cc4Tda8w.s:411    .text:00000000000001b8 .L0 
     /tmp/cc4Tda8w.s:412    .text:00000000000001b8 .L0 
     /tmp/cc4Tda8w.s:1117   .text._ZN3TCB11setFinishedEb:0000000000000000 _ZN3TCB11setFinishedEb
     /tmp/cc4Tda8w.s:419    .text:00000000000001d4 .L0 
     /tmp/cc4Tda8w.s:420    .text:00000000000001d4 .L0 
     /tmp/cc4Tda8w.s:423    .text:00000000000001dc .L0 
     /tmp/cc4Tda8w.s:424    .text:00000000000001dc .L0 
     /tmp/cc4Tda8w.s:427    .text:00000000000001e4 .L0 
     /tmp/cc4Tda8w.s:431    .text:00000000000001e8 .L0 
     /tmp/cc4Tda8w.s:432    .text:00000000000001e8 .L0 
     /tmp/cc4Tda8w.s:433    .text:00000000000001e8 .L0 
     /tmp/cc4Tda8w.s:436    .text:00000000000001f0 .L0 
     /tmp/cc4Tda8w.s:440    .text:00000000000001f4 .L0 
     /tmp/cc4Tda8w.s:441    .text:00000000000001f4 .L0 
     /tmp/cc4Tda8w.s:442    .text:00000000000001f4 .L0 
     /tmp/cc4Tda8w.s:443    .text:00000000000001f4 .L0 
     /tmp/cc4Tda8w.s:447    .text:00000000000001fc .L0 
     /tmp/cc4Tda8w.s:448    .text:00000000000001fc .L0 
     /tmp/cc4Tda8w.s:452    .text:0000000000000208 .L0 
     /tmp/cc4Tda8w.s:453    .text:0000000000000208 .L0 
     /tmp/cc4Tda8w.s:456    .text:0000000000000210 .L0 
     /tmp/cc4Tda8w.s:460    .text:0000000000000214 .L0 
     /tmp/cc4Tda8w.s:461    .text:0000000000000214 .L0 
     /tmp/cc4Tda8w.s:462    .text:0000000000000214 .L0 
     /tmp/cc4Tda8w.s:463    .text:0000000000000214 .L0 
     /tmp/cc4Tda8w.s:467    .text:000000000000021c .L0 
     /tmp/cc4Tda8w.s:468    .text:000000000000021c .L0 
GAS LISTING /tmp/cc4Tda8w.s 			page 33


     /tmp/cc4Tda8w.s:469    .text:000000000000021c .L0 
     /tmp/cc4Tda8w.s:474    .text:0000000000000224 .L0 
     /tmp/cc4Tda8w.s:475    .text:0000000000000224 .L0 
     /tmp/cc4Tda8w.s:482    .text:0000000000000238 .L0 
     /tmp/cc4Tda8w.s:485    .text:0000000000000240 .L0 
     /tmp/cc4Tda8w.s:486    .text:0000000000000240 .L0 
     /tmp/cc4Tda8w.s:489    .text:0000000000000248 .L0 
     /tmp/cc4Tda8w.s:491    .text:000000000000024c .L0 
src/interruptRoutine.cpp:98     .text:000000000000024c .L0 
     /tmp/cc4Tda8w.s:500    .text:0000000000000254 .L0 
src/interruptRoutine.cpp:100    .text:0000000000000254 .L0 
     /tmp/cc4Tda8w.s:508    .text:0000000000000258 .L0 
src/interruptRoutine.cpp:102    .text:0000000000000258 .L0 
     /tmp/cc4Tda8w.s:515    .text:000000000000025c .L0 
     /tmp/cc4Tda8w.s:519    .text:0000000000000260 .L0 
     /tmp/cc4Tda8w.s:520    .text:0000000000000260 .L0 
     /tmp/cc4Tda8w.s:521    .text:0000000000000260 .L0 
     /tmp/cc4Tda8w.s:522    .text:0000000000000260 .L0 
     /tmp/cc4Tda8w.s:526    .text:0000000000000268 .L0 
     /tmp/cc4Tda8w.s:527    .text:0000000000000268 .L0 
     /tmp/cc4Tda8w.s:531    .text:0000000000000274 .L0 
src/interruptRoutine.cpp:109    .text:0000000000000274 .L0 
     /tmp/cc4Tda8w.s:538    .text:0000000000000278 .L0 
     /tmp/cc4Tda8w.s:542    .text:000000000000027c .L0 
     /tmp/cc4Tda8w.s:543    .text:000000000000027c .L0 
     /tmp/cc4Tda8w.s:544    .text:000000000000027c .L0 
     /tmp/cc4Tda8w.s:545    .text:000000000000027c .L0 
     /tmp/cc4Tda8w.s:549    .text:0000000000000284 .L0 
     /tmp/cc4Tda8w.s:550    .text:0000000000000284 .L0 
     /tmp/cc4Tda8w.s:554    .text:0000000000000290 .L0 
src/interruptRoutine.cpp:116    .text:0000000000000290 .L0 
     /tmp/cc4Tda8w.s:561    .text:0000000000000294 .L0 
     /tmp/cc4Tda8w.s:565    .text:0000000000000298 .L0 
     /tmp/cc4Tda8w.s:566    .text:0000000000000298 .L0 
     /tmp/cc4Tda8w.s:567    .text:0000000000000298 .L0 
     /tmp/cc4Tda8w.s:568    .text:0000000000000298 .L0 
     /tmp/cc4Tda8w.s:572    .text:00000000000002a0 .L0 
     /tmp/cc4Tda8w.s:573    .text:00000000000002a0 .L0 
     /tmp/cc4Tda8w.s:577    .text:00000000000002ac .L0 
src/interruptRoutine.cpp:123    .text:00000000000002ac .L0 
     /tmp/cc4Tda8w.s:584    .text:00000000000002b0 .L0 
     /tmp/cc4Tda8w.s:588    .text:00000000000002b4 .L0 
     /tmp/cc4Tda8w.s:589    .text:00000000000002b4 .L0 
     /tmp/cc4Tda8w.s:590    .text:00000000000002b4 .L0 
     /tmp/cc4Tda8w.s:591    .text:00000000000002b4 .L0 
     /tmp/cc4Tda8w.s:595    .text:00000000000002bc .L0 
     /tmp/cc4Tda8w.s:598    .text:00000000000002c4 .L0 
src/interruptRoutine.cpp:130    .text:00000000000002c4 .L0 
     /tmp/cc4Tda8w.s:607    .text:00000000000002cc .L0 
src/interruptRoutine.cpp:132    .text:00000000000002cc .L0 
     /tmp/cc4Tda8w.s:615    .text:00000000000002d0 .L0 
src/interruptRoutine.cpp:134    .text:00000000000002d0 .L0 
     /tmp/cc4Tda8w.s:622    .text:00000000000002d4 .L0 
     /tmp/cc4Tda8w.s:626    .text:00000000000002dc .L0 
     /tmp/cc4Tda8w.s:627    .text:00000000000002dc .L0 
     /tmp/cc4Tda8w.s:634    .text:00000000000002f8 .L0 
     /tmp/cc4Tda8w.s:635    .text:00000000000002f8 .L0 
GAS LISTING /tmp/cc4Tda8w.s 			page 34


     /tmp/cc4Tda8w.s:638    .text:0000000000000300 .L0 
     /tmp/cc4Tda8w.s:642    .text:0000000000000304 .L0 
     /tmp/cc4Tda8w.s:643    .text:0000000000000304 .L0 
     /tmp/cc4Tda8w.s:644    .text:0000000000000304 .L0 
     /tmp/cc4Tda8w.s:647    .text:000000000000030c .L0 
src/interruptRoutine.cpp:143    .text:000000000000030c .L0 
     /tmp/cc4Tda8w.s:654    .text:0000000000000310 .L0 
     /tmp/cc4Tda8w.s:658    .text:0000000000000314 .L0 
     /tmp/cc4Tda8w.s:659    .text:0000000000000314 .L0 
     /tmp/cc4Tda8w.s:660    .text:0000000000000314 .L0 
     /tmp/cc4Tda8w.s:661    .text:0000000000000314 .L0 
     /tmp/cc4Tda8w.s:665    .text:000000000000031c .L0 
     /tmp/cc4Tda8w.s:666    .text:000000000000031c .L0 
     /tmp/cc4Tda8w.s:672    .text:000000000000032c .L0 
     /tmp/cc4Tda8w.s:676    .text:0000000000000330 .L0 
     /tmp/cc4Tda8w.s:677    .text:0000000000000330 .L0 
     /tmp/cc4Tda8w.s:678    .text:0000000000000330 .L0 
     /tmp/cc4Tda8w.s:679    .text:0000000000000330 .L0 
     /tmp/cc4Tda8w.s:684    .text:0000000000000338 .L0 
     /tmp/cc4Tda8w.s:685    .text:0000000000000338 .L0 
     /tmp/cc4Tda8w.s:686    .text:0000000000000338 .L0 
     /tmp/cc4Tda8w.s:689    .text:0000000000000340 .L0 
     /tmp/cc4Tda8w.s:691    .text:0000000000000344 .L0 
     /tmp/cc4Tda8w.s:692    .text:0000000000000344 .L0 
     /tmp/cc4Tda8w.s:698    .text:0000000000000358 .L0 
     /tmp/cc4Tda8w.s:699    .text:0000000000000358 .L0 
     /tmp/cc4Tda8w.s:704    .text:0000000000000364 .L0 
     /tmp/cc4Tda8w.s:708    .text:0000000000000368 .L0 
     /tmp/cc4Tda8w.s:709    .text:0000000000000368 .L0 
     /tmp/cc4Tda8w.s:710    .text:0000000000000368 .L0 
     /tmp/cc4Tda8w.s:711    .text:0000000000000368 .L0 
     /tmp/cc4Tda8w.s:715    .text:0000000000000370 .L0 
     /tmp/cc4Tda8w.s:716    .text:0000000000000370 .L0 
     /tmp/cc4Tda8w.s:717    .text:0000000000000370 .L0 
     /tmp/cc4Tda8w.s:718    .text:0000000000000370 .L0 
     /tmp/cc4Tda8w.s:719    .text:0000000000000370 .L0 
     /tmp/cc4Tda8w.s:720    .text:0000000000000370 .L0 
     /tmp/cc4Tda8w.s:723    .text:0000000000000374 .L0 
     /tmp/cc4Tda8w.s:724    .text:0000000000000374 .L0 
     /tmp/cc4Tda8w.s:725    .text:0000000000000374 .L0 
     /tmp/cc4Tda8w.s:729    .text:000000000000037c .L0 
     /tmp/cc4Tda8w.s:730    .text:000000000000037c .L0 
     /tmp/cc4Tda8w.s:734    .text:0000000000000380 .L0 
     /tmp/cc4Tda8w.s:735    .text:0000000000000380 .L0 
     /tmp/cc4Tda8w.s:736    .text:0000000000000380 .L0 
     /tmp/cc4Tda8w.s:741    .text:0000000000000390 .L0 
     /tmp/cc4Tda8w.s:1174   .data:0000000000000000 _ZZ16interruptRoutineE6digits
     /tmp/cc4Tda8w.s:746    .text:000000000000039c .L0 
     /tmp/cc4Tda8w.s:753    .text:00000000000003b4 .L0 
     /tmp/cc4Tda8w.s:757    .text:00000000000003c0 .L0 
     /tmp/cc4Tda8w.s:758    .text:00000000000003c0 .L0 
     /tmp/cc4Tda8w.s:764    .text:00000000000003d0 .L0 
     /tmp/cc4Tda8w.s:771    .text:00000000000003e4 .L0 
     /tmp/cc4Tda8w.s:774    .text:00000000000003e8 .L0 
     /tmp/cc4Tda8w.s:778    .text:00000000000003f4 .L0 
     /tmp/cc4Tda8w.s:779    .text:00000000000003f4 .L0 
     /tmp/cc4Tda8w.s:784    .text:0000000000000400 .L0 
GAS LISTING /tmp/cc4Tda8w.s 			page 35


     /tmp/cc4Tda8w.s:792    .text:0000000000000410 .L0 
     /tmp/cc4Tda8w.s:793    .text:0000000000000410 .L0 
     /tmp/cc4Tda8w.s:804    .text:0000000000000430 .L0 
     /tmp/cc4Tda8w.s:805    .text:0000000000000430 .L0 
     /tmp/cc4Tda8w.s:813    .text:000000000000044c .L0 
     /tmp/cc4Tda8w.s:817    .text:0000000000000450 .L0 
     /tmp/cc4Tda8w.s:818    .text:0000000000000450 .L0 
     /tmp/cc4Tda8w.s:819    .text:0000000000000450 .L0 
     /tmp/cc4Tda8w.s:823    .text:0000000000000460 .L0 
     /tmp/cc4Tda8w.s:824    .text:0000000000000460 .L0 
     /tmp/cc4Tda8w.s:828    .text:000000000000046c .L0 
     /tmp/cc4Tda8w.s:829    .text:000000000000046c .L0 
     /tmp/cc4Tda8w.s:833    .text:000000000000047c .L0 
     /tmp/cc4Tda8w.s:834    .text:000000000000047c .L0 
     /tmp/cc4Tda8w.s:838    .text:0000000000000488 .L0 
     /tmp/cc4Tda8w.s:839    .text:0000000000000488 .L0 
     /tmp/cc4Tda8w.s:843    .text:0000000000000498 .L0 
     /tmp/cc4Tda8w.s:844    .text:0000000000000498 .L0 
     /tmp/cc4Tda8w.s:848    .text:00000000000004a4 .L0 
     /tmp/cc4Tda8w.s:852    .text:00000000000004a8 .L0 
     /tmp/cc4Tda8w.s:857    .text:00000000000004b0 .L0 
     /tmp/cc4Tda8w.s:862    .text:00000000000004b8 .L0 
     /tmp/cc4Tda8w.s:868    .text:00000000000004bc .L0 
     /tmp/cc4Tda8w.s:869    .text:00000000000004bc .L0 
     /tmp/cc4Tda8w.s:879    .text:00000000000004c8 .L0 
     /tmp/cc4Tda8w.s:880    .text:00000000000004c8 .L0 
     /tmp/cc4Tda8w.s:890    .text:00000000000004d4 .L0 
     /tmp/cc4Tda8w.s:895    .text:00000000000004d8 .L0 
     /tmp/cc4Tda8w.s:902    .text:00000000000004ec .L0 
     /tmp/cc4Tda8w.s:903    .text:00000000000004ec .L0 
     /tmp/cc4Tda8w.s:907    .text:00000000000004f4 .L0 
     /tmp/cc4Tda8w.s:912    .text:00000000000004f8 .L0 
     /tmp/cc4Tda8w.s:918    .text:000000000000050c .L0 
     /tmp/cc4Tda8w.s:919    .text:000000000000050c .L0 
     /tmp/cc4Tda8w.s:922    .text:0000000000000514 .L0 
     /tmp/cc4Tda8w.s:923    .text:0000000000000514 .L0 
     /tmp/cc4Tda8w.s:929    .text:0000000000000530 .L0 
     /tmp/cc4Tda8w.s:930    .text:0000000000000530 .L0 
     /tmp/cc4Tda8w.s:1146   .text._ZN3TCB12getTimeSliceEv:0000000000000000 _ZN3TCB12getTimeSliceEv
     /tmp/cc4Tda8w.s:937    .text:000000000000054c .L0 
     /tmp/cc4Tda8w.s:943    .text:0000000000000564 .L0 
     /tmp/cc4Tda8w.s:945    .text:0000000000000568 .L0 
     /tmp/cc4Tda8w.s:946    .text:0000000000000568 .L0 
     /tmp/cc4Tda8w.s:949    .text:0000000000000570 .L0 
     /tmp/cc4Tda8w.s:950    .text:0000000000000570 .L0 
     /tmp/cc4Tda8w.s:954    .text:000000000000057c .L0 
     /tmp/cc4Tda8w.s:955    .text:000000000000057c .L0 
     /tmp/cc4Tda8w.s:1020   .text._ZN5Riscv6w_sepcEm:0000000000000000 _ZN5Riscv6w_sepcEm
     /tmp/cc4Tda8w.s:959    .text:0000000000000588 .L0 
     /tmp/cc4Tda8w.s:960    .text:0000000000000588 .L0 
     /tmp/cc4Tda8w.s:1085   .text._ZN5Riscv9w_sstatusEm:0000000000000000 _ZN5Riscv9w_sstatusEm
     /tmp/cc4Tda8w.s:964    .text:0000000000000594 .L0 
     /tmp/cc4Tda8w.s:965    .text:0000000000000594 .L0 
     /tmp/cc4Tda8w.s:1053   .text._ZN5Riscv6mc_sipEm:0000000000000000 _ZN5Riscv6mc_sipEm
     /tmp/cc4Tda8w.s:970    .text:00000000000005a0 .L0 
     /tmp/cc4Tda8w.s:975    .text:00000000000005a4 .L0 
     /tmp/cc4Tda8w.s:976    .text:00000000000005a4 .L0 
GAS LISTING /tmp/cc4Tda8w.s 			page 36


     /tmp/cc4Tda8w.s:980    .text:00000000000005b4 .L0 
     /tmp/cc4Tda8w.s:981    .text:00000000000005b4 .L0 
     /tmp/cc4Tda8w.s:985    .text:00000000000005c4 .L0 
     /tmp/cc4Tda8w.s:986    .text:00000000000005c4 .L0 
     /tmp/cc4Tda8w.s:990    .text:00000000000005d0 .L0 
     /tmp/cc4Tda8w.s:991    .text:00000000000005d0 .L0 
     /tmp/cc4Tda8w.s:995    .text:00000000000005e0 .L0 
     /tmp/cc4Tda8w.s:996    .text:00000000000005e0 .L0 
     /tmp/cc4Tda8w.s:1002   .text:00000000000005ec .L0 
     /tmp/cc4Tda8w.s:1004   .text:00000000000005f4 .L0 
     /tmp/cc4Tda8w.s:1006   .text:00000000000005f8 .L0 
     /tmp/cc4Tda8w.s:1007   .text:00000000000005f8 .L0 
     /tmp/cc4Tda8w.s:1010   .text:00000000000005fc .L0 
     /tmp/cc4Tda8w.s:1013   .text:0000000000000600 .L0 
     /tmp/cc4Tda8w.s:1024   .text._ZN5Riscv6w_sepcEm:0000000000000000 .L0 
     /tmp/cc4Tda8w.s:1026   .text._ZN5Riscv6w_sepcEm:0000000000000000 .L0 
     /tmp/cc4Tda8w.s:1027   .text._ZN5Riscv6w_sepcEm:0000000000000004 .L0 
     /tmp/cc4Tda8w.s:1029   .text._ZN5Riscv6w_sepcEm:0000000000000008 .L0 
     /tmp/cc4Tda8w.s:1031   .text._ZN5Riscv6w_sepcEm:000000000000000c .L0 
     /tmp/cc4Tda8w.s:1033   .text._ZN5Riscv6w_sepcEm:000000000000000c .L0 
  src/../h/Riscv.hpp:105    .text._ZN5Riscv6w_sepcEm:000000000000000c .L0 
     /tmp/cc4Tda8w.s:1040   .text._ZN5Riscv6w_sepcEm:0000000000000010 .L0 
     /tmp/cc4Tda8w.s:1041   .text._ZN5Riscv6w_sepcEm:0000000000000014 .L0 
     /tmp/cc4Tda8w.s:1042   .text._ZN5Riscv6w_sepcEm:0000000000000014 .L0 
     /tmp/cc4Tda8w.s:1044   .text._ZN5Riscv6w_sepcEm:0000000000000018 .L0 
     /tmp/cc4Tda8w.s:1046   .text._ZN5Riscv6w_sepcEm:000000000000001c .L0 
     /tmp/cc4Tda8w.s:1056   .text._ZN5Riscv6mc_sipEm:0000000000000000 .L0 
     /tmp/cc4Tda8w.s:1058   .text._ZN5Riscv6mc_sipEm:0000000000000000 .L0 
     /tmp/cc4Tda8w.s:1059   .text._ZN5Riscv6mc_sipEm:0000000000000004 .L0 
     /tmp/cc4Tda8w.s:1061   .text._ZN5Riscv6mc_sipEm:0000000000000008 .L0 
     /tmp/cc4Tda8w.s:1063   .text._ZN5Riscv6mc_sipEm:000000000000000c .L0 
     /tmp/cc4Tda8w.s:1065   .text._ZN5Riscv6mc_sipEm:000000000000000c .L0 
  src/../h/Riscv.hpp:123    .text._ZN5Riscv6mc_sipEm:000000000000000c .L0 
     /tmp/cc4Tda8w.s:1072   .text._ZN5Riscv6mc_sipEm:0000000000000010 .L0 
     /tmp/cc4Tda8w.s:1073   .text._ZN5Riscv6mc_sipEm:0000000000000014 .L0 
     /tmp/cc4Tda8w.s:1074   .text._ZN5Riscv6mc_sipEm:0000000000000014 .L0 
     /tmp/cc4Tda8w.s:1076   .text._ZN5Riscv6mc_sipEm:0000000000000018 .L0 
     /tmp/cc4Tda8w.s:1078   .text._ZN5Riscv6mc_sipEm:000000000000001c .L0 
     /tmp/cc4Tda8w.s:1088   .text._ZN5Riscv9w_sstatusEm:0000000000000000 .L0 
     /tmp/cc4Tda8w.s:1090   .text._ZN5Riscv9w_sstatusEm:0000000000000000 .L0 
     /tmp/cc4Tda8w.s:1091   .text._ZN5Riscv9w_sstatusEm:0000000000000004 .L0 
     /tmp/cc4Tda8w.s:1093   .text._ZN5Riscv9w_sstatusEm:0000000000000008 .L0 
     /tmp/cc4Tda8w.s:1095   .text._ZN5Riscv9w_sstatusEm:000000000000000c .L0 
     /tmp/cc4Tda8w.s:1097   .text._ZN5Riscv9w_sstatusEm:000000000000000c .L0 
  src/../h/Riscv.hpp:151    .text._ZN5Riscv9w_sstatusEm:000000000000000c .L0 
     /tmp/cc4Tda8w.s:1104   .text._ZN5Riscv9w_sstatusEm:0000000000000010 .L0 
     /tmp/cc4Tda8w.s:1105   .text._ZN5Riscv9w_sstatusEm:0000000000000014 .L0 
     /tmp/cc4Tda8w.s:1106   .text._ZN5Riscv9w_sstatusEm:0000000000000014 .L0 
     /tmp/cc4Tda8w.s:1108   .text._ZN5Riscv9w_sstatusEm:0000000000000018 .L0 
     /tmp/cc4Tda8w.s:1110   .text._ZN5Riscv9w_sstatusEm:000000000000001c .L0 
     /tmp/cc4Tda8w.s:1121   .text._ZN3TCB11setFinishedEb:0000000000000000 .L0 
     /tmp/cc4Tda8w.s:1123   .text._ZN3TCB11setFinishedEb:0000000000000000 .L0 
     /tmp/cc4Tda8w.s:1124   .text._ZN3TCB11setFinishedEb:0000000000000004 .L0 
     /tmp/cc4Tda8w.s:1126   .text._ZN3TCB11setFinishedEb:0000000000000008 .L0 
     /tmp/cc4Tda8w.s:1128   .text._ZN3TCB11setFinishedEb:000000000000000c .L0 
     /tmp/cc4Tda8w.s:1130   .text._ZN3TCB11setFinishedEb:000000000000000c .L0 
     /tmp/cc4Tda8w.s:1131   .text._ZN3TCB11setFinishedEb:000000000000000c .L0 
GAS LISTING /tmp/cc4Tda8w.s 			page 37


     /tmp/cc4Tda8w.s:1133   .text._ZN3TCB11setFinishedEb:0000000000000010 .L0 
     /tmp/cc4Tda8w.s:1134   .text._ZN3TCB11setFinishedEb:0000000000000014 .L0 
     /tmp/cc4Tda8w.s:1135   .text._ZN3TCB11setFinishedEb:0000000000000014 .L0 
     /tmp/cc4Tda8w.s:1137   .text._ZN3TCB11setFinishedEb:0000000000000018 .L0 
     /tmp/cc4Tda8w.s:1139   .text._ZN3TCB11setFinishedEb:000000000000001c .L0 
     /tmp/cc4Tda8w.s:1149   .text._ZN3TCB12getTimeSliceEv:0000000000000000 .L0 
     /tmp/cc4Tda8w.s:1151   .text._ZN3TCB12getTimeSliceEv:0000000000000000 .L0 
     /tmp/cc4Tda8w.s:1152   .text._ZN3TCB12getTimeSliceEv:0000000000000004 .L0 
     /tmp/cc4Tda8w.s:1154   .text._ZN3TCB12getTimeSliceEv:0000000000000008 .L0 
     /tmp/cc4Tda8w.s:1156   .text._ZN3TCB12getTimeSliceEv:000000000000000c .L0 
     /tmp/cc4Tda8w.s:1158   .text._ZN3TCB12getTimeSliceEv:000000000000000c .L0 
     /tmp/cc4Tda8w.s:1159   .text._ZN3TCB12getTimeSliceEv:000000000000000c .L0 
     /tmp/cc4Tda8w.s:1162   .text._ZN3TCB12getTimeSliceEv:0000000000000014 .L0 
     /tmp/cc4Tda8w.s:1163   .text._ZN3TCB12getTimeSliceEv:0000000000000014 .L0 
     /tmp/cc4Tda8w.s:1165   .text._ZN3TCB12getTimeSliceEv:0000000000000018 .L0 
     /tmp/cc4Tda8w.s:1167   .text._ZN3TCB12getTimeSliceEv:000000000000001c .L0 
     /tmp/cc4Tda8w.s:1186   .text:0000000000000600 .L0 
     /tmp/cc4Tda8w.s:1049   .text._ZN5Riscv6w_sepcEm:000000000000001c .L0 
     /tmp/cc4Tda8w.s:1081   .text._ZN5Riscv6mc_sipEm:000000000000001c .L0 
     /tmp/cc4Tda8w.s:1113   .text._ZN5Riscv9w_sstatusEm:000000000000001c .L0 
     /tmp/cc4Tda8w.s:1142   .text._ZN3TCB11setFinishedEb:000000000000001c .L0 
     /tmp/cc4Tda8w.s:1170   .text._ZN3TCB12getTimeSliceEv:000000000000001c .L0 
     /tmp/cc4Tda8w.s:197    .rodata:000000000000005c .L8
     /tmp/cc4Tda8w.s:186    .text:00000000000000c8 .L0 
     /tmp/cc4Tda8w.s:191    .text:00000000000000dc .L0 
     /tmp/cc4Tda8w.s:412    .text:00000000000001b8 .L0 
     /tmp/cc4Tda8w.s:627    .text:00000000000002dc .L0 
     /tmp/cc4Tda8w.s:746    .text:000000000000039c .L0 
     /tmp/cc4Tda8w.s:8      .rodata:0000000000000000 .LC0
     /tmp/cc4Tda8w.s:819    .text:0000000000000450 .L0 
     /tmp/cc4Tda8w.s:11     .rodata:0000000000000018 .LC1
     /tmp/cc4Tda8w.s:829    .text:000000000000046c .L0 
     /tmp/cc4Tda8w.s:14     .rodata:0000000000000028 .LC2
     /tmp/cc4Tda8w.s:839    .text:0000000000000488 .L0 
     /tmp/cc4Tda8w.s:923    .text:0000000000000514 .L0 
     /tmp/cc4Tda8w.s:926    .text:0000000000000524 .L0 
     /tmp/cc4Tda8w.s:930    .text:0000000000000530 .L0 
     /tmp/cc4Tda8w.s:937    .text:000000000000054c .L0 
     /tmp/cc4Tda8w.s:950    .text:0000000000000570 .L0 
     /tmp/cc4Tda8w.s:17     .rodata:0000000000000030 .LC3
     /tmp/cc4Tda8w.s:976    .text:00000000000005a4 .L0 
     /tmp/cc4Tda8w.s:20     .rodata:0000000000000050 .LC4
     /tmp/cc4Tda8w.s:981    .text:00000000000005b4 .L0 
     /tmp/cc4Tda8w.s:991    .text:00000000000005d0 .L0 
     /tmp/cc4Tda8w.s:159    .text:0000000000000080 .L2
     /tmp/cc4Tda8w.s:892    .text:00000000000004d8 .L3
     /tmp/cc4Tda8w.s:706    .text:0000000000000368 .L4
     /tmp/cc4Tda8w.s:815    .text:0000000000000450 .L5
     /tmp/cc4Tda8w.s:267    .text:00000000000000ec .L6
     /tmp/cc4Tda8w.s:674    .text:0000000000000330 .L21
     /tmp/cc4Tda8w.s:864    .text:00000000000004bc .L22
     /tmp/cc4Tda8w.s:389    .text:00000000000001ac .L23
     /tmp/cc4Tda8w.s:397    .text:00000000000001b0 .L24
     /tmp/cc4Tda8w.s:498    .text:0000000000000254 .L25
     /tmp/cc4Tda8w.s:506    .text:0000000000000258 .L26
     /tmp/cc4Tda8w.s:605    .text:00000000000002cc .L27
     /tmp/cc4Tda8w.s:613    .text:00000000000002d0 .L28
GAS LISTING /tmp/cc4Tda8w.s 			page 38


     /tmp/cc4Tda8w.s:850    .text:00000000000004a8 .L41
     /tmp/cc4Tda8w.s:855    .text:00000000000004b0 .L42
     /tmp/cc4Tda8w.s:682    .text:0000000000000338 .L31
     /tmp/cc4Tda8w.s:772    .text:00000000000003e8 .L32
     /tmp/cc4Tda8w.s:732    .text:0000000000000380 .L33
     /tmp/cc4Tda8w.s:790    .text:0000000000000410 .L36
     /tmp/cc4Tda8w.s:860    .text:00000000000004b8 .L43
     /tmp/cc4Tda8w.s:999    .text:00000000000005ec .L44
     /tmp/cc4Tda8w.s:909    .text:00000000000004f8 .L38
     /tmp/cc4Tda8w.s:972    .text:00000000000005a4 .L39
     /tmp/cc4Tda8w.s:952    .text:000000000000057c .L40
     /tmp/cc4Tda8w.s:273    .text:00000000000000fc .L20
     /tmp/cc4Tda8w.s:305    .text:0000000000000128 .L19
     /tmp/cc4Tda8w.s:328    .text:0000000000000144 .L18
     /tmp/cc4Tda8w.s:408    .text:00000000000001b8 .L17
     /tmp/cc4Tda8w.s:429    .text:00000000000001e8 .L16
     /tmp/cc4Tda8w.s:438    .text:00000000000001f4 .L15
     /tmp/cc4Tda8w.s:458    .text:0000000000000214 .L14
     /tmp/cc4Tda8w.s:517    .text:0000000000000260 .L13
     /tmp/cc4Tda8w.s:540    .text:000000000000027c .L12
     /tmp/cc4Tda8w.s:563    .text:0000000000000298 .L11
     /tmp/cc4Tda8w.s:586    .text:00000000000002b4 .L10
     /tmp/cc4Tda8w.s:640    .text:0000000000000304 .L9
     /tmp/cc4Tda8w.s:656    .text:0000000000000314 .L7
     /tmp/cc4Tda8w.s:3255   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cc4Tda8w.s:5491   .debug_str:000000000000098f .LASF211
     /tmp/cc4Tda8w.s:5387   .debug_str:00000000000006bd .LASF212
     /tmp/cc4Tda8w.s:5445   .debug_str:0000000000000858 .LASF213
     /tmp/cc4Tda8w.s:5127   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/cc4Tda8w.s:5143   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cc4Tda8w.s:5411   .debug_str:000000000000075f .LASF3
     /tmp/cc4Tda8w.s:5287   .debug_str:000000000000044f .LASF0
     /tmp/cc4Tda8w.s:5317   .debug_str:00000000000004fc .LASF1
     /tmp/cc4Tda8w.s:5425   .debug_str:00000000000007bc .LASF2
     /tmp/cc4Tda8w.s:5435   .debug_str:0000000000000814 .LASF4
     /tmp/cc4Tda8w.s:5301   .debug_str:0000000000000499 .LASF5
     /tmp/cc4Tda8w.s:5159   .debug_str:0000000000000076 .LASF6
     /tmp/cc4Tda8w.s:5395   .debug_str:00000000000006fc .LASF7
     /tmp/cc4Tda8w.s:5385   .debug_str:00000000000006aa .LASF8
     /tmp/cc4Tda8w.s:5307   .debug_str:00000000000004c7 .LASF9
     /tmp/cc4Tda8w.s:5259   .debug_str:000000000000038a .LASF10
     /tmp/cc4Tda8w.s:5269   .debug_str:00000000000003d4 .LASF11
     /tmp/cc4Tda8w.s:5193   .debug_str:0000000000000181 .LASF12
     /tmp/cc4Tda8w.s:5249   .debug_str:0000000000000352 .LASF13
     /tmp/cc4Tda8w.s:5207   .debug_str:00000000000001fa .LASF14
     /tmp/cc4Tda8w.s:5191   .debug_str:0000000000000171 .LASF15
     /tmp/cc4Tda8w.s:5465   .debug_str:00000000000008f1 .LASF16
     /tmp/cc4Tda8w.s:5239   .debug_str:00000000000002e9 .LASF17
     /tmp/cc4Tda8w.s:5449   .debug_str:000000000000087f .LASF18
     /tmp/cc4Tda8w.s:5383   .debug_str:000000000000069a .LASF38
     /tmp/cc4Tda8w.s:5377   .debug_str:000000000000067d .LASF40
     /tmp/cc4Tda8w.s:5393   .debug_str:00000000000006f6 .LASF19
     /tmp/cc4Tda8w.s:5559   .debug_str:0000000000000c16 .LASF20
     /tmp/cc4Tda8w.s:5415   .debug_str:0000000000000785 .LASF21
     /tmp/cc4Tda8w.s:5513   .debug_str:0000000000000b0b .LASF22
     /tmp/cc4Tda8w.s:5335   .debug_str:000000000000054f .LASF23
     /tmp/cc4Tda8w.s:5399   .debug_str:000000000000070b .LASF27
GAS LISTING /tmp/cc4Tda8w.s 			page 39


     /tmp/cc4Tda8w.s:5195   .debug_str:0000000000000190 .LASF24
     /tmp/cc4Tda8w.s:5175   .debug_str:00000000000000fe .LASF25
     /tmp/cc4Tda8w.s:5315   .debug_str:00000000000004f7 .LASF26
     /tmp/cc4Tda8w.s:5231   .debug_str:00000000000002ba .LASF28
     /tmp/cc4Tda8w.s:5409   .debug_str:0000000000000757 .LASF29
     /tmp/cc4Tda8w.s:5547   .debug_str:0000000000000bca .LASF30
     /tmp/cc4Tda8w.s:5499   .debug_str:0000000000000a7e .LASF32
     /tmp/cc4Tda8w.s:5255   .debug_str:000000000000037e .LASF31
     /tmp/cc4Tda8w.s:5373   .debug_str:000000000000065a .LASF33
     /tmp/cc4Tda8w.s:5173   .debug_str:00000000000000e5 .LASF52
     /tmp/cc4Tda8w.s:5417   .debug_str:000000000000078c .LASF34
     /tmp/cc4Tda8w.s:5521   .debug_str:0000000000000b22 .LASF35
     /tmp/cc4Tda8w.s:5283   .debug_str:000000000000043d .LASF36
     /tmp/cc4Tda8w.s:5297   .debug_str:0000000000000487 .LASF80
     /tmp/cc4Tda8w.s:5463   .debug_str:00000000000008bc .LASF82
     /tmp/cc4Tda8w.s:5337   .debug_str:0000000000000559 .LASF37
     /tmp/cc4Tda8w.s:5535   .debug_str:0000000000000b69 .LASF39
     /tmp/cc4Tda8w.s:5407   .debug_str:000000000000074c .LASF41
     /tmp/cc4Tda8w.s:5325   .debug_str:0000000000000525 .LASF42
     /tmp/cc4Tda8w.s:5243   .debug_str:000000000000031a .LASF43
     /tmp/cc4Tda8w.s:5549   .debug_str:0000000000000bd2 .LASF44
     /tmp/cc4Tda8w.s:5273   .debug_str:00000000000003f2 .LASF45
     /tmp/cc4Tda8w.s:5359   .debug_str:00000000000005e6 .LASF47
     /tmp/cc4Tda8w.s:5443   .debug_str:000000000000084a .LASF46
     /tmp/cc4Tda8w.s:5241   .debug_str:00000000000002ff .LASF48
     /tmp/cc4Tda8w.s:5291   .debug_str:000000000000046c .LASF49
     /tmp/cc4Tda8w.s:5545   .debug_str:0000000000000bb0 .LASF50
     /tmp/cc4Tda8w.s:5319   .debug_str:000000000000050f .LASF54
     /tmp/cc4Tda8w.s:5507   .debug_str:0000000000000ad4 .LASF56
     /tmp/cc4Tda8w.s:5421   .debug_str:00000000000007a8 .LASF51
     /tmp/cc4Tda8w.s:5371   .debug_str:0000000000000645 .LASF53
     /tmp/cc4Tda8w.s:5401   .debug_str:000000000000071a .LASF55
     /tmp/cc4Tda8w.s:5403   .debug_str:0000000000000721 .LASF57
     /tmp/cc4Tda8w.s:5357   .debug_str:00000000000005df .LASF58
     /tmp/cc4Tda8w.s:5309   .debug_str:00000000000004da .LASF59
     /tmp/cc4Tda8w.s:5347   .debug_str:00000000000005a7 .LASF60
     /tmp/cc4Tda8w.s:5495   .debug_str:0000000000000a60 .LASF61
     /tmp/cc4Tda8w.s:5351   .debug_str:00000000000005bc .LASF62
     /tmp/cc4Tda8w.s:5369   .debug_str:0000000000000631 .LASF63
     /tmp/cc4Tda8w.s:5459   .debug_str:00000000000008ae .LASF64
     /tmp/cc4Tda8w.s:5439   .debug_str:0000000000000830 .LASF65
     /tmp/cc4Tda8w.s:5441   .debug_str:0000000000000843 .LASF66
     /tmp/cc4Tda8w.s:5199   .debug_str:00000000000001a1 .LASF67
     /tmp/cc4Tda8w.s:5235   .debug_str:00000000000002d6 .LASF68
     /tmp/cc4Tda8w.s:5281   .debug_str:000000000000042b .LASF69
     /tmp/cc4Tda8w.s:5293   .debug_str:0000000000000479 .LASF70
     /tmp/cc4Tda8w.s:5221   .debug_str:0000000000000284 .LASF71
     /tmp/cc4Tda8w.s:5161   .debug_str:000000000000007d .LASF72
     /tmp/cc4Tda8w.s:5429   .debug_str:00000000000007d4 .LASF73
     /tmp/cc4Tda8w.s:5423   .debug_str:00000000000007b1 .LASF74
     /tmp/cc4Tda8w.s:5573   .debug_str:0000000000000c84 .LASF75
     /tmp/cc4Tda8w.s:5537   .debug_str:0000000000000b6f .LASF76
     /tmp/cc4Tda8w.s:5553   .debug_str:0000000000000be2 .LASF77
     /tmp/cc4Tda8w.s:5529   .debug_str:0000000000000b41 .LASF78
     /tmp/cc4Tda8w.s:5343   .debug_str:0000000000000572 .LASF79
     /tmp/cc4Tda8w.s:5501   .debug_str:0000000000000aa9 .LASF81
     /tmp/cc4Tda8w.s:5213   .debug_str:000000000000023a .LASF83
GAS LISTING /tmp/cc4Tda8w.s 			page 40


     /tmp/cc4Tda8w.s:5527   .debug_str:0000000000000b38 .LASF84
     /tmp/cc4Tda8w.s:5475   .debug_str:0000000000000933 .LASF150
     /tmp/cc4Tda8w.s:5493   .debug_str:0000000000000a53 .LASF85
     /tmp/cc4Tda8w.s:5543   .debug_str:0000000000000b8e .LASF86
     /tmp/cc4Tda8w.s:5375   .debug_str:0000000000000678 .LASF214
     /tmp/cc4Tda8w.s:5563   .debug_str:0000000000000c36 .LASF87
     /tmp/cc4Tda8w.s:5303   .debug_str:00000000000004ab .LASF88
     /tmp/cc4Tda8w.s:5477   .debug_str:000000000000093b .LASF91
     /tmp/cc4Tda8w.s:5469   .debug_str:0000000000000911 .LASF93
     /tmp/cc4Tda8w.s:5181   .debug_str:0000000000000120 .LASF89
     /tmp/cc4Tda8w.s:5509   .debug_str:0000000000000ae9 .LASF90
     /tmp/cc4Tda8w.s:5427   .debug_str:00000000000007ca .LASF92
     /tmp/cc4Tda8w.s:5467   .debug_str:00000000000008fd .LASF94
     /tmp/cc4Tda8w.s:5481   .debug_str:0000000000000953 .LASF95
     /tmp/cc4Tda8w.s:5245   .debug_str:0000000000000323 .LASF96
     /tmp/cc4Tda8w.s:5341   .debug_str:0000000000000565 .LASF97
     /tmp/cc4Tda8w.s:5405   .debug_str:0000000000000734 .LASF98
     /tmp/cc4Tda8w.s:5225   .debug_str:000000000000029f .LASF99
     /tmp/cc4Tda8w.s:5433   .debug_str:00000000000007fc .LASF100
     /tmp/cc4Tda8w.s:5511   .debug_str:0000000000000b00 .LASF101
     /tmp/cc4Tda8w.s:5251   .debug_str:0000000000000361 .LASF102
     /tmp/cc4Tda8w.s:5577   .debug_str:0000000000000ca9 .LASF103
     /tmp/cc4Tda8w.s:5247   .debug_str:0000000000000339 .LASF104
     /tmp/cc4Tda8w.s:5321   .debug_str:0000000000000518 .LASF105
     /tmp/cc4Tda8w.s:5419   .debug_str:0000000000000798 .LASF106
     /tmp/cc4Tda8w.s:5227   .debug_str:00000000000002ac .LASF107
     /tmp/cc4Tda8w.s:5201   .debug_str:00000000000001b4 .LASF108
     /tmp/cc4Tda8w.s:5327   .debug_str:000000000000052e .LASF109
     /tmp/cc4Tda8w.s:5167   .debug_str:00000000000000b7 .LASF110
     /tmp/cc4Tda8w.s:5487   .debug_str:0000000000000977 .LASF111
     /tmp/cc4Tda8w.s:5187   .debug_str:0000000000000151 .LASF112
     /tmp/cc4Tda8w.s:5505   .debug_str:0000000000000acc .LASF113
     /tmp/cc4Tda8w.s:5189   .debug_str:0000000000000162 .LASF114
     /tmp/cc4Tda8w.s:5569   .debug_str:0000000000000c5d .LASF115
     /tmp/cc4Tda8w.s:5515   .debug_str:0000000000000b10 .LASF116
     /tmp/cc4Tda8w.s:5497   .debug_str:0000000000000a74 .LASF117
     /tmp/cc4Tda8w.s:5447   .debug_str:0000000000000876 .LASF118
     /tmp/cc4Tda8w.s:5397   .debug_str:0000000000000703 .LASF119
     /tmp/cc4Tda8w.s:5275   .debug_str:00000000000003fd .LASF120
     /tmp/cc4Tda8w.s:5489   .debug_str:000000000000097f .LASF121
     /tmp/cc4Tda8w.s:5381   .debug_str:000000000000068e .LASF122
     /tmp/cc4Tda8w.s:5149   .debug_str:000000000000001d .LASF123
     /tmp/cc4Tda8w.s:5151   .debug_str:000000000000002a .LASF124
     /tmp/cc4Tda8w.s:5561   .debug_str:0000000000000c20 .LASF175
     /tmp/cc4Tda8w.s:5215   .debug_str:0000000000000252 .LASF125
     /tmp/cc4Tda8w.s:5155   .debug_str:0000000000000040 .LASF126
     /tmp/cc4Tda8w.s:5575   .debug_str:0000000000000c9c .LASF127
     /tmp/cc4Tda8w.s:5267   .debug_str:00000000000003c8 .LASF128
     /tmp/cc4Tda8w.s:5289   .debug_str:000000000000045c .LASF146
     /tmp/cc4Tda8w.s:5367   .debug_str:0000000000000624 .LASF147
     /tmp/cc4Tda8w.s:5261   .debug_str:000000000000039a .LASF129
     /tmp/cc4Tda8w.s:5451   .debug_str:0000000000000895 .LASF130
     /tmp/cc4Tda8w.s:5483   .debug_str:000000000000095e .LASF131
     /tmp/cc4Tda8w.s:5365   .debug_str:0000000000000611 .LASF132
     /tmp/cc4Tda8w.s:5229   .debug_str:00000000000002b5 .LASF133
     /tmp/cc4Tda8w.s:5431   .debug_str:00000000000007ec .LASF134
     /tmp/cc4Tda8w.s:5473   .debug_str:000000000000092c .LASF135
GAS LISTING /tmp/cc4Tda8w.s 			page 41


     /tmp/cc4Tda8w.s:5179   .debug_str:000000000000010e .LASF136
     /tmp/cc4Tda8w.s:5223   .debug_str:0000000000000296 .LASF137
     /tmp/cc4Tda8w.s:5355   .debug_str:00000000000005c9 .LASF138
     /tmp/cc4Tda8w.s:5285   .debug_str:0000000000000449 .LASF139
     /tmp/cc4Tda8w.s:5485   .debug_str:0000000000000966 .LASF140
     /tmp/cc4Tda8w.s:5153   .debug_str:0000000000000038 .LASF141
     /tmp/cc4Tda8w.s:5163   .debug_str:0000000000000088 .LASF142
     /tmp/cc4Tda8w.s:5539   .debug_str:0000000000000b79 .LASF143
     /tmp/cc4Tda8w.s:5519   .debug_str:0000000000000b1a .LASF144
     /tmp/cc4Tda8w.s:5237   .debug_str:00000000000002dc .LASF145
     /tmp/cc4Tda8w.s:5157   .debug_str:0000000000000068 .LASF148
     /tmp/cc4Tda8w.s:5361   .debug_str:00000000000005fe .LASF149
     /tmp/cc4Tda8w.s:5525   .debug_str:0000000000000b33 .LASF151
     /tmp/cc4Tda8w.s:5311   .debug_str:00000000000004ed .LASF152
     /tmp/cc4Tda8w.s:5203   .debug_str:00000000000001c7 .LASF153
     /tmp/cc4Tda8w.s:5217   .debug_str:0000000000000260 .LASF154
     /tmp/cc4Tda8w.s:5209   .debug_str:000000000000020a .LASF155
     /tmp/cc4Tda8w.s:5257   .debug_str:0000000000000384 .LASF156
     /tmp/cc4Tda8w.s:5313   .debug_str:00000000000004f2 .LASF157
     /tmp/cc4Tda8w.s:5169   .debug_str:00000000000000c9 .LASF158
     /tmp/cc4Tda8w.s:5265   .debug_str:00000000000003b0 .LASF159
     /tmp/cc4Tda8w.s:5219   .debug_str:000000000000027a .LASF215
     /tmp/cc4Tda8w.s:5503   .debug_str:0000000000000ab4 .LASF216
     /tmp/cc4Tda8w.s:5479   .debug_str:0000000000000946 .LASF160
     /tmp/cc4Tda8w.s:5437   .debug_str:000000000000081b .LASF161
     /tmp/cc4Tda8w.s:5295   .debug_str:000000000000047f .LASF162
     /tmp/cc4Tda8w.s:5165   .debug_str:000000000000009b .LASF163
     /tmp/cc4Tda8w.s:5531   .debug_str:0000000000000b4b .LASF164
     /tmp/cc4Tda8w.s:5345   .debug_str:0000000000000588 .LASF165
     /tmp/cc4Tda8w.s:5183   .debug_str:000000000000012c .LASF166
     /tmp/cc4Tda8w.s:5185   .debug_str:0000000000000135 .LASF167
     /tmp/cc4Tda8w.s:5211   .debug_str:0000000000000225 .LASF168
     /tmp/cc4Tda8w.s:5533   .debug_str:0000000000000b53 .LASF169
     /tmp/cc4Tda8w.s:5305   .debug_str:00000000000004bd .LASF170
     /tmp/cc4Tda8w.s:5457   .debug_str:00000000000008a9 .LASF171
     /tmp/cc4Tda8w.s:5353   .debug_str:00000000000005c4 .LASF172
     /tmp/cc4Tda8w.s:5567   .debug_str:0000000000000c50 .LASF173
     /tmp/cc4Tda8w.s:5557   .debug_str:0000000000000c04 .LASF174
     /tmp/cc4Tda8w.s:5279   .debug_str:0000000000000413 .LASF176
     /tmp/cc4Tda8w.s:5565   .debug_str:0000000000000c3c .LASF217
     /tmp/cc4Tda8w.s:5271   .debug_str:00000000000003e2 .LASF177
     /tmp/cc4Tda8w.s:5413   .debug_str:0000000000000764 .LASF178
     /tmp/cc4Tda8w.s:5177   .debug_str:0000000000000103 .LASF179
     /tmp/cc4Tda8w.s:5571   .debug_str:0000000000000c63 .LASF180
     /tmp/cc4Tda8w.s:5329   .debug_str:0000000000000536 .LASF181
     /tmp/cc4Tda8w.s:5205   .debug_str:00000000000001e5 .LASF182
     /tmp/cc4Tda8w.s:5579   .debug_str:0000000000000cb7 .LASF183
     /tmp/cc4Tda8w.s:27     .text:0000000000000000 .LFB48
     /tmp/cc4Tda8w.s:1014   .text:0000000000000600 .LFE48
     /tmp/cc4Tda8w.s:5453   .debug_str:000000000000089a .LASF184
     /tmp/cc4Tda8w.s:4315   .debug_loc:0000000000000000 .LLST0
     /tmp/cc4Tda8w.s:5517   .debug_str:0000000000000b15 .LASF185
     /tmp/cc4Tda8w.s:4346   .debug_loc:0000000000000087 .LLST1
     /tmp/cc4Tda8w.s:5541   .debug_str:0000000000000b86 .LASF186
     /tmp/cc4Tda8w.s:4377   .debug_loc:000000000000010e .LLST2
     /tmp/cc4Tda8w.s:4399   .debug_loc:000000000000016e .LLST3
     /tmp/cc4Tda8w.s:4421   .debug_loc:00000000000001ce .LLST4
GAS LISTING /tmp/cc4Tda8w.s 			page 42


     /tmp/cc4Tda8w.s:4443   .debug_loc:0000000000000230 .LLST5
     /tmp/cc4Tda8w.s:4465   .debug_loc:0000000000000292 .LLST6
     /tmp/cc4Tda8w.s:4487   .debug_loc:00000000000002f4 .LLST7
     /tmp/cc4Tda8w.s:4509   .debug_loc:0000000000000356 .LLST8
     /tmp/cc4Tda8w.s:4531   .debug_loc:00000000000003b8 .LLST9
     /tmp/cc4Tda8w.s:4553   .debug_loc:000000000000041a .LLST10
     /tmp/cc4Tda8w.s:160    .text:0000000000000080 .LBB3
     /tmp/cc4Tda8w.s:886    .text:00000000000004d0 .LBE3
     /tmp/cc4Tda8w.s:5363   .debug_str:000000000000060a .LASF187
     /tmp/cc4Tda8w.s:4737   .debug_loc:000000000000074c .LLST11
     /tmp/cc4Tda8w.s:274    .text:00000000000000fc .LBB5
     /tmp/cc4Tda8w.s:865    .text:00000000000004bc .LBE5
     /tmp/cc4Tda8w.s:4790   .debug_loc:0000000000000835 .LLST12
     /tmp/cc4Tda8w.s:4811   .debug_loc:0000000000000895 .LLST13
     /tmp/cc4Tda8w.s:5551   .debug_str:0000000000000bdb .LASF188
     /tmp/cc4Tda8w.s:4823   .debug_loc:00000000000008cd .LLST14
     /tmp/cc4Tda8w.s:5379   .debug_str:0000000000000685 .LASF189
     /tmp/cc4Tda8w.s:4835   .debug_loc:0000000000000905 .LLST15
     /tmp/cc4Tda8w.s:4847   .debug_loc:000000000000093d .LLST16
     /tmp/cc4Tda8w.s:4859   .debug_loc:0000000000000975 .LLST17
     /tmp/cc4Tda8w.s:5349   .debug_str:00000000000005af .LASF190
     /tmp/cc4Tda8w.s:4871   .debug_loc:00000000000009ad .LLST18
     /tmp/cc4Tda8w.s:5277   .debug_str:0000000000000408 .LASF191
     /tmp/cc4Tda8w.s:4883   .debug_loc:00000000000009e5 .LLST19
     /tmp/cc4Tda8w.s:5455   .debug_str:00000000000008a1 .LASF192
     /tmp/cc4Tda8w.s:4895   .debug_loc:0000000000000a1d .LLST20
     /tmp/cc4Tda8w.s:5197   .debug_str:0000000000000195 .LASF193
     /tmp/cc4Tda8w.s:4907   .debug_loc:0000000000000a55 .LLST21
     /tmp/cc4Tda8w.s:5145   .debug_str:0000000000000000 .LASF194
     /tmp/cc4Tda8w.s:4919   .debug_loc:0000000000000a8d .LLST22
     /tmp/cc4Tda8w.s:5331   .debug_str:000000000000053b .LASF195
     /tmp/cc4Tda8w.s:4931   .debug_loc:0000000000000ac5 .LLST23
     /tmp/cc4Tda8w.s:5233   .debug_str:00000000000002c9 .LASF196
     /tmp/cc4Tda8w.s:4943   .debug_loc:0000000000000afd .LLST24
     /tmp/cc4Tda8w.s:4960   .debug_loc:0000000000000b4a .LLST25
     /tmp/cc4Tda8w.s:5171   .debug_str:00000000000000de .LASF197
     /tmp/cc4Tda8w.s:4972   .debug_loc:0000000000000b82 .LLST26
     /tmp/cc4Tda8w.s:5299   .debug_str:0000000000000491 .LASF198
     /tmp/cc4Tda8w.s:4989   .debug_loc:0000000000000bcd .LLST27
     /tmp/cc4Tda8w.s:5461   .debug_str:00000000000008b5 .LASF199
     /tmp/cc4Tda8w.s:5011   .debug_loc:0000000000000c2f .LLST28
     /tmp/cc4Tda8w.s:5051   .debug_loc:0000000000000cdc .LLST29
     /tmp/cc4Tda8w.s:5064   .debug_loc:0000000000000d16 .LLST30
     /tmp/cc4Tda8w.s:294    .text:0000000000000120 .LVL30
     /tmp/cc4Tda8w.s:317    .text:000000000000013c .LVL33
     /tmp/cc4Tda8w.s:363    .text:0000000000000178 .LVL42
     /tmp/cc4Tda8w.s:374    .text:0000000000000198 .LVL43
     /tmp/cc4Tda8w.s:417    .text:00000000000001d4 .LVL45
     /tmp/cc4Tda8w.s:421    .text:00000000000001dc .LVL46
     /tmp/cc4Tda8w.s:425    .text:00000000000001e4 .LVL47
     /tmp/cc4Tda8w.s:434    .text:00000000000001f0 .LVL49
     /tmp/cc4Tda8w.s:450    .text:0000000000000208 .LVL52
     /tmp/cc4Tda8w.s:454    .text:0000000000000210 .LVL53
     /tmp/cc4Tda8w.s:479    .text:0000000000000234 .LVL59
     /tmp/cc4Tda8w.s:529    .text:0000000000000274 .LVL62
     /tmp/cc4Tda8w.s:552    .text:0000000000000290 .LVL65
     /tmp/cc4Tda8w.s:575    .text:00000000000002ac .LVL68
GAS LISTING /tmp/cc4Tda8w.s 			page 43


     /tmp/cc4Tda8w.s:632    .text:00000000000002f8 .LVL72
     /tmp/cc4Tda8w.s:636    .text:0000000000000300 .LVL73
     /tmp/cc4Tda8w.s:645    .text:000000000000030c .LVL75
     /tmp/cc4Tda8w.s:670    .text:000000000000032c .LVL79
     /tmp/cc4Tda8w.s:696    .text:0000000000000358 .LVL82
     /tmp/cc4Tda8w.s:811    .text:000000000000044c .LVL98
     /tmp/cc4Tda8w.s:821    .text:0000000000000460 .LVL100
     /tmp/cc4Tda8w.s:826    .text:000000000000046c .LVL101
     /tmp/cc4Tda8w.s:831    .text:000000000000047c .LVL102
     /tmp/cc4Tda8w.s:836    .text:0000000000000488 .LVL103
     /tmp/cc4Tda8w.s:841    .text:0000000000000498 .LVL104
     /tmp/cc4Tda8w.s:846    .text:00000000000004a4 .LVL105
     /tmp/cc4Tda8w.s:904    .text:00000000000004f4 .LVL114
     /tmp/cc4Tda8w.s:920    .text:0000000000000514 .LVL116
     /tmp/cc4Tda8w.s:934    .text:0000000000000548 .LVL117
     /tmp/cc4Tda8w.s:947    .text:0000000000000570 .LVL118
     /tmp/cc4Tda8w.s:957    .text:0000000000000588 .LVL119
     /tmp/cc4Tda8w.s:962    .text:0000000000000594 .LVL120
     /tmp/cc4Tda8w.s:967    .text:00000000000005a0 .LVL121
     /tmp/cc4Tda8w.s:978    .text:00000000000005b4 .LVL123
     /tmp/cc4Tda8w.s:983    .text:00000000000005c4 .LVL124
     /tmp/cc4Tda8w.s:988    .text:00000000000005d0 .LVL125
     /tmp/cc4Tda8w.s:993    .text:00000000000005e0 .LVL126
     /tmp/cc4Tda8w.s:998    .text:00000000000005ec .LVL127
     /tmp/cc4Tda8w.s:5471   .debug_str:0000000000000927 .LASF200
     /tmp/cc4Tda8w.s:1147   .text._ZN3TCB12getTimeSliceEv:0000000000000000 .LFB36
     /tmp/cc4Tda8w.s:1168   .text._ZN3TCB12getTimeSliceEv:000000000000001c .LFE36
     /tmp/cc4Tda8w.s:5253   .debug_str:0000000000000379 .LASF201
     /tmp/cc4Tda8w.s:5090   .debug_loc:0000000000000d88 .LLST31
     /tmp/cc4Tda8w.s:1118   .text._ZN3TCB11setFinishedEb:0000000000000000 .LFB33
     /tmp/cc4Tda8w.s:1140   .text._ZN3TCB11setFinishedEb:000000000000001c .LFE33
     /tmp/cc4Tda8w.s:5339   .debug_str:000000000000055e .LASF202
     /tmp/cc4Tda8w.s:1086   .text._ZN5Riscv9w_sstatusEm:0000000000000000 .LFB16
     /tmp/cc4Tda8w.s:1111   .text._ZN5Riscv9w_sstatusEm:000000000000001c .LFE16
     /tmp/cc4Tda8w.s:1054   .text._ZN5Riscv6mc_sipEm:0000000000000000 .LFB10
     /tmp/cc4Tda8w.s:1079   .text._ZN5Riscv6mc_sipEm:000000000000001c .LFE10
     /tmp/cc4Tda8w.s:5523   .debug_str:0000000000000b2e .LASF203
     /tmp/cc4Tda8w.s:1021   .text._ZN5Riscv6w_sepcEm:0000000000000000 .LFB6
     /tmp/cc4Tda8w.s:1047   .text._ZN5Riscv6w_sepcEm:000000000000001c .LFE6
     /tmp/cc4Tda8w.s:5323   .debug_str:000000000000051e .LASF204
     /tmp/cc4Tda8w.s:5333   .debug_str:0000000000000548 .LASF205
     /tmp/cc4Tda8w.s:5389   .debug_str:00000000000006d6 .LASF206
     /tmp/cc4Tda8w.s:5555   .debug_str:0000000000000bf8 .LASF207
     /tmp/cc4Tda8w.s:5147   .debug_str:000000000000000b .LASF208
     /tmp/cc4Tda8w.s:5391   .debug_str:00000000000006e9 .LASF209
     /tmp/cc4Tda8w.s:5263   .debug_str:00000000000003a0 .LASF210
     /tmp/cc4Tda8w.s:48     .text:0000000000000018 .LVL0
     /tmp/cc4Tda8w.s:55     .text:000000000000001c .LVL1
     /tmp/cc4Tda8w.s:891    .text:00000000000004d8 .LVL112
     /tmp/cc4Tda8w.s:896    .text:00000000000004dc .LVL113
     /tmp/cc4Tda8w.s:1008   .text:00000000000005f8 .LVL128
     /tmp/cc4Tda8w.s:1011   .text:00000000000005fc .LVL129
     /tmp/cc4Tda8w.s:58     .text:0000000000000020 .LVL2
     /tmp/cc4Tda8w.s:65     .text:0000000000000024 .LVL3
     /tmp/cc4Tda8w.s:874    .text:00000000000004c4 .LVL110
     /tmp/cc4Tda8w.s:877    .text:00000000000004c8 .LVL111
     /tmp/cc4Tda8w.s:68     .text:0000000000000028 .LVL4
GAS LISTING /tmp/cc4Tda8w.s 			page 44


     /tmp/cc4Tda8w.s:76     .text:000000000000002c .LVL5
     /tmp/cc4Tda8w.s:79     .text:0000000000000030 .LVL6
     /tmp/cc4Tda8w.s:86     .text:0000000000000034 .LVL7
     /tmp/cc4Tda8w.s:89     .text:0000000000000038 .LVL8
     /tmp/cc4Tda8w.s:96     .text:000000000000003c .LVL9
     /tmp/cc4Tda8w.s:99     .text:0000000000000040 .LVL10
     /tmp/cc4Tda8w.s:106    .text:0000000000000044 .LVL11
     /tmp/cc4Tda8w.s:109    .text:0000000000000048 .LVL12
     /tmp/cc4Tda8w.s:116    .text:000000000000004c .LVL13
     /tmp/cc4Tda8w.s:119    .text:0000000000000050 .LVL14
     /tmp/cc4Tda8w.s:126    .text:0000000000000054 .LVL15
     /tmp/cc4Tda8w.s:129    .text:0000000000000058 .LVL16
     /tmp/cc4Tda8w.s:136    .text:000000000000005c .LVL17
     /tmp/cc4Tda8w.s:139    .text:0000000000000060 .LVL18
     /tmp/cc4Tda8w.s:146    .text:0000000000000064 .LVL19
     /tmp/cc4Tda8w.s:149    .text:0000000000000068 .LVL20
     /tmp/cc4Tda8w.s:304    .text:0000000000000128 .LVL31
     /tmp/cc4Tda8w.s:327    .text:0000000000000144 .LVL34
     /tmp/cc4Tda8w.s:407    .text:00000000000001b8 .LVL44
     /tmp/cc4Tda8w.s:428    .text:00000000000001e8 .LVL48
     /tmp/cc4Tda8w.s:437    .text:00000000000001f4 .LVL50
     /tmp/cc4Tda8w.s:457    .text:0000000000000214 .LVL54
     /tmp/cc4Tda8w.s:516    .text:0000000000000260 .LVL60
     /tmp/cc4Tda8w.s:539    .text:000000000000027c .LVL63
     /tmp/cc4Tda8w.s:562    .text:0000000000000298 .LVL66
     /tmp/cc4Tda8w.s:585    .text:00000000000002b4 .LVL69
     /tmp/cc4Tda8w.s:639    .text:0000000000000304 .LVL74
     /tmp/cc4Tda8w.s:655    .text:0000000000000314 .LVL76
     /tmp/cc4Tda8w.s:673    .text:0000000000000330 .LVL80
     /tmp/cc4Tda8w.s:681    .text:0000000000000338 .LVL81
     /tmp/cc4Tda8w.s:705    .text:0000000000000368 .LVL84
     /tmp/cc4Tda8w.s:789    .text:0000000000000410 .LVL95
     /tmp/cc4Tda8w.s:814    .text:0000000000000450 .LVL99
     /tmp/cc4Tda8w.s:908    .text:00000000000004f8 .LVL115
     /tmp/cc4Tda8w.s:971    .text:00000000000005a4 .LVL122
     /tmp/cc4Tda8w.s:165    .text:0000000000000088 .LVL21
     /tmp/cc4Tda8w.s:170    .text:0000000000000090 .LVL22
     /tmp/cc4Tda8w.s:185    .text:00000000000000c8 .LVL23
     /tmp/cc4Tda8w.s:187    .text:00000000000000d0 .LVL24
     /tmp/cc4Tda8w.s:266    .text:00000000000000ec .LVL25
     /tmp/cc4Tda8w.s:269    .text:00000000000000f0 .LVL26
     /tmp/cc4Tda8w.s:731    .text:0000000000000380 .LVL88
     /tmp/cc4Tda8w.s:281    .text:0000000000000104 .LVL27
     /tmp/cc4Tda8w.s:286    .text:000000000000010c .LVL28
     /tmp/cc4Tda8w.s:288    .text:0000000000000110 .LVL29
     /tmp/cc4Tda8w.s:312    .text:0000000000000130 .LVL32
     /tmp/cc4Tda8w.s:335    .text:000000000000014c .LVL35
     /tmp/cc4Tda8w.s:340    .text:0000000000000150 .LVL36
     /tmp/cc4Tda8w.s:342    .text:0000000000000154 .LVL37
     /tmp/cc4Tda8w.s:347    .text:0000000000000158 .LVL38
     /tmp/cc4Tda8w.s:349    .text:000000000000015c .LVL39
     /tmp/cc4Tda8w.s:354    .text:0000000000000160 .LVL40
     /tmp/cc4Tda8w.s:356    .text:0000000000000164 .LVL41
     /tmp/cc4Tda8w.s:445    .text:00000000000001fc .LVL51
     /tmp/cc4Tda8w.s:465    .text:000000000000021c .LVL55
     /tmp/cc4Tda8w.s:470    .text:0000000000000220 .LVL56
     /tmp/cc4Tda8w.s:472    .text:0000000000000224 .LVL57
GAS LISTING /tmp/cc4Tda8w.s 			page 45


     /tmp/cc4Tda8w.s:476    .text:0000000000000228 .LVL58
     /tmp/cc4Tda8w.s:524    .text:0000000000000268 .LVL61
     /tmp/cc4Tda8w.s:547    .text:0000000000000284 .LVL64
     /tmp/cc4Tda8w.s:570    .text:00000000000002a0 .LVL67
     /tmp/cc4Tda8w.s:593    .text:00000000000002bc .LVL70
     /tmp/cc4Tda8w.s:623    .text:00000000000002d8 .LVL71
     /tmp/cc4Tda8w.s:849    .text:00000000000004a8 .LVL106
     /tmp/cc4Tda8w.s:854    .text:00000000000004b0 .LVL107
     /tmp/cc4Tda8w.s:663    .text:000000000000031c .LVL77
     /tmp/cc4Tda8w.s:667    .text:0000000000000320 .LVL78
     /tmp/cc4Tda8w.s:702    .text:0000000000000364 .LVL83
     /tmp/cc4Tda8w.s:859    .text:00000000000004b8 .LVL108
     /tmp/cc4Tda8w.s:713    .text:0000000000000370 .LVL85
     /tmp/cc4Tda8w.s:863    .text:00000000000004bc .LVL109
     /tmp/cc4Tda8w.s:744    .text:000000000000039c .LVL89
     /tmp/cc4Tda8w.s:749    .text:00000000000003ac .LVL90
     /tmp/cc4Tda8w.s:782    .text:0000000000000400 .LVL93
     /tmp/cc4Tda8w.s:785    .text:0000000000000404 .LVL94
     /tmp/cc4Tda8w.s:796    .text:000000000000041c .LVL96
     /tmp/cc4Tda8w.s:799    .text:0000000000000424 .LVL97
     /tmp/cc4Tda8w.s:721    .text:0000000000000374 .LVL86
     /tmp/cc4Tda8w.s:727    .text:000000000000037c .LVL87
     /tmp/cc4Tda8w.s:762    .text:00000000000003d0 .LVL91
     /tmp/cc4Tda8w.s:766    .text:00000000000003d8 .LVL92
     /tmp/cc4Tda8w.s:1150   .text._ZN3TCB12getTimeSliceEv:0000000000000000 .LVL134
     /tmp/cc4Tda8w.s:1160   .text._ZN3TCB12getTimeSliceEv:0000000000000010 .LVL135
     /tmp/cc4Tda8w.s:1187   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/cc4Tda8w.s:5      .text:0000000000000000 .Ltext0
     /tmp/cc4Tda8w.s:1177   .text:0000000000000600 .Letext0

UNDEFINED SYMBOLS
_ZN15MemoryAllocator7kmallocEmNS_7PurposeE
_ZN15MemoryAllocator5kfreeEPv
_ZN3TCB12createThreadEPFvPvES0_Pm
_ZN3TCB5startEPS_
_ZN3TCB7runningE
_ZN3TCB13releaseJoinedEv
_ZN3TCB5yieldEv
_ZN3TCB10threadJoinEPS_
_ZN4KSem7initSemEj
_ZN4KSem8closeSemEPS_
_ZN4KSem4waitEv
_ZN4KSem6signalEv
_ZN9Scheduler10putToSleepEP3TCBm
__getc
__putc
_Z11printStringPKc
_Z12printIntegerm
console_handler
_ZN9Scheduler4wakeEv
_ZN3TCB16runningTimeSliceE
