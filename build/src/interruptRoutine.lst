GAS LISTING /tmp/cc8S9ckH.s 			page 1


   1              		.file	"interruptRoutine.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.section	.text._ZN4KSemD2Ev,"axG",@progbits,_ZN4KSemD5Ev,comdat
   7              		.align	2
   8              		.weak	_ZN4KSemD2Ev
  10              	_ZN4KSemD2Ev:
  11              	.LFB53:
  12              		.file 1 "src/../h/KSem.hpp"
   1:src/../h/KSem.hpp **** //
   2:src/../h/KSem.hpp **** // Created by os on 6/4/23.
   3:src/../h/KSem.hpp **** //
   4:src/../h/KSem.hpp **** 
   5:src/../h/KSem.hpp **** #ifndef PROJEKAT2023_KSEM_HPP
   6:src/../h/KSem.hpp **** #define PROJEKAT2023_KSEM_HPP
   7:src/../h/KSem.hpp **** 
   8:src/../h/KSem.hpp **** #include "../h/ThreadQueue.hpp"
   9:src/../h/KSem.hpp **** 
  10:src/../h/KSem.hpp **** //klasa napravljena po uzoru na semafor u skolskom jezgru
  11:src/../h/KSem.hpp **** class KSem {
  13              		.loc 1 11 7
  14              		.cfi_startproc
  15              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
  16              		.cfi_lsda 0x1b,.LLSDA53
  17              	.LVL0:
  18 0000 130101FE 		addi	sp,sp,-32
  19              		.cfi_def_cfa_offset 32
  20 0004 233C1100 		sd	ra,24(sp)
  21 0008 23388100 		sd	s0,16(sp)
  22 000c 23349100 		sd	s1,8(sp)
  23              		.cfi_offset 1, -8
  24              		.cfi_offset 8, -16
  25              		.cfi_offset 9, -24
  26 0010 13040102 		addi	s0,sp,32
  27              		.cfi_def_cfa 8, 0
  28 0014 93040500 		mv	s1,a0
  29              	.LVL1:
  30              	.L3:
  31              	.LBB19:
  32              	.LBB20:
  33              		.file 2 "src/../h/../h/ThreadQueue.hpp"
   1:src/../h/../h/ThreadQueue.hpp **** //
   2:src/../h/../h/ThreadQueue.hpp **** // Created by os on 6/4/23.
   3:src/../h/../h/ThreadQueue.hpp **** //
   4:src/../h/../h/ThreadQueue.hpp **** 
   5:src/../h/../h/ThreadQueue.hpp **** #ifndef PROJEKAT2023_THREADQUEUE_HPP
   6:src/../h/../h/ThreadQueue.hpp **** #define PROJEKAT2023_THREADQUEUE_HPP
   7:src/../h/../h/ThreadQueue.hpp **** 
   8:src/../h/../h/ThreadQueue.hpp **** #include "../h/syscall_c.hpp"
   9:src/../h/../h/ThreadQueue.hpp **** 
  10:src/../h/../h/ThreadQueue.hpp **** class TCB;
  11:src/../h/../h/ThreadQueue.hpp **** 
  12:src/../h/../h/ThreadQueue.hpp **** class ThreadQueue {
  13:src/../h/../h/ThreadQueue.hpp **** private:
  14:src/../h/../h/ThreadQueue.hpp ****     struct Node {
GAS LISTING /tmp/cc8S9ckH.s 			page 2


  15:src/../h/../h/ThreadQueue.hpp ****         TCB* data;
  16:src/../h/../h/ThreadQueue.hpp ****         Node* next;
  17:src/../h/../h/ThreadQueue.hpp **** 
  18:src/../h/../h/ThreadQueue.hpp ****         Node(TCB* d) : data(d), next(nullptr) {}
  19:src/../h/../h/ThreadQueue.hpp **** 
  20:src/../h/../h/ThreadQueue.hpp ****         static void* operator new(size_t size) {
  21:src/../h/../h/ThreadQueue.hpp ****             return mem_alloc(size);
  22:src/../h/../h/ThreadQueue.hpp ****         }
  23:src/../h/../h/ThreadQueue.hpp **** 
  24:src/../h/../h/ThreadQueue.hpp ****         static void operator delete(void* ptr) {
  25:src/../h/../h/ThreadQueue.hpp ****             mem_free(ptr);
  26:src/../h/../h/ThreadQueue.hpp ****         }
  27:src/../h/../h/ThreadQueue.hpp ****     };
  28:src/../h/../h/ThreadQueue.hpp **** 
  29:src/../h/../h/ThreadQueue.hpp ****     Node* front;
  30:src/../h/../h/ThreadQueue.hpp ****     Node* back;
  31:src/../h/../h/ThreadQueue.hpp **** 
  32:src/../h/../h/ThreadQueue.hpp **** public:
  33:src/../h/../h/ThreadQueue.hpp ****     ThreadQueue() : front(nullptr), back(nullptr) {}
  34:src/../h/../h/ThreadQueue.hpp **** 
  35:src/../h/../h/ThreadQueue.hpp ****     ThreadQueue(const ThreadQueue &) = delete;
  36:src/../h/../h/ThreadQueue.hpp **** 
  37:src/../h/../h/ThreadQueue.hpp ****     ThreadQueue &operator=(const ThreadQueue &) = delete;
  38:src/../h/../h/ThreadQueue.hpp **** 
  39:src/../h/../h/ThreadQueue.hpp ****     ~ThreadQueue() {
  40:src/../h/../h/ThreadQueue.hpp ****         while (!isEmpty()) {
  34              		.loc 2 40 9
  35              		.loc 2 40 16
  36              	.LBB21:
  37              	.LBB22:
  41:src/../h/../h/ThreadQueue.hpp ****             Node* node = front;
  42:src/../h/../h/ThreadQueue.hpp ****             front = front->next;
  43:src/../h/../h/ThreadQueue.hpp ****             delete node;
  44:src/../h/../h/ThreadQueue.hpp ****         }
  45:src/../h/../h/ThreadQueue.hpp ****     }
  46:src/../h/../h/ThreadQueue.hpp **** 
  47:src/../h/../h/ThreadQueue.hpp ****     bool isEmpty() const {
  48:src/../h/../h/ThreadQueue.hpp ****         return front == nullptr;
  38              		.loc 2 48 9
  39              		.loc 2 48 16 is_stmt 0
  40 0018 03B58400 		ld	a0,8(s1)
  41              	.LVL2:
  42              	.LBE22:
  43              	.LBE21:
  40:src/../h/../h/ThreadQueue.hpp ****             Node* node = front;
  44              		.loc 2 40 16
  45 001c 630E0500 		beqz	a0,.L1
  46              	.LBB23:
  41:src/../h/../h/ThreadQueue.hpp ****             Node* node = front;
  47              		.loc 2 41 13 is_stmt 1
  48              	.LVL3:
  42:src/../h/../h/ThreadQueue.hpp ****             delete node;
  49              		.loc 2 42 13
  42:src/../h/../h/ThreadQueue.hpp ****             delete node;
  50              		.loc 2 42 28 is_stmt 0
  51 0020 83378500 		ld	a5,8(a0)
  42:src/../h/../h/ThreadQueue.hpp ****             delete node;
GAS LISTING /tmp/cc8S9ckH.s 			page 3


  52              		.loc 2 42 19
  53 0024 23B4F400 		sd	a5,8(s1)
  43:src/../h/../h/ThreadQueue.hpp ****         }
  54              		.loc 2 43 13 is_stmt 1
  43:src/../h/../h/ThreadQueue.hpp ****         }
  55              		.loc 2 43 24 is_stmt 0
  56 0028 E30805FE 		beqz	a0,.L3
  57              	.LVL4:
  58              	.LBB24:
  59              	.LBB25:
  25:src/../h/../h/ThreadQueue.hpp ****         }
  60              		.loc 2 25 13 is_stmt 1
  25:src/../h/../h/ThreadQueue.hpp ****         }
  61              		.loc 2 25 21 is_stmt 0
  62 002c 97000000 		call	_Z8mem_freePv@plt
  62      E7800000 
  63              	.LVL5:
  26:src/../h/../h/ThreadQueue.hpp ****     };
  64              		.loc 2 26 9
  65 0034 6FF05FFE 		j	.L3
  66              	.L1:
  67              	.LBE25:
  68              	.LBE24:
  69              	.LBE23:
  70              	.LBE20:
  71              	.LBE19:
  72              		.loc 1 11 7
  73 0038 83308101 		ld	ra,24(sp)
  74              		.cfi_restore 1
  75 003c 03340101 		ld	s0,16(sp)
  76              		.cfi_restore 8
  77              		.cfi_def_cfa 2, 32
  78 0040 83348100 		ld	s1,8(sp)
  79              		.cfi_restore 9
  80              	.LVL6:
  81 0044 13010102 		addi	sp,sp,32
  82              		.cfi_def_cfa_offset 0
  83 0048 67800000 		jr	ra
  84              		.cfi_endproc
  85              	.LFE53:
  86              		.globl	__gxx_personality_v0
  87              		.section	.gcc_except_table._ZN4KSemD2Ev,"aG",@progbits,_ZN4KSemD5Ev,comdat
  88              	.LLSDA53:
  89 0000 FF       		.byte	0xff
  90 0001 FF       		.byte	0xff
  91 0002 03       		.byte	0x3
  92 0003 00       		.byte	0
  93              		.section	.text._ZN4KSemD2Ev,"axG",@progbits,_ZN4KSemD5Ev,comdat
  95              		.weak	_ZN4KSemD1Ev
  96              		.set	_ZN4KSemD1Ev,_ZN4KSemD2Ev
  97              		.section	.rodata
  98              		.align	3
  99              	.LC0:
 100 0000 0A4E6570 		.string	"\nNepostojeci op code: "
 100      6F73746F 
 100      6A656369 
 100      206F7020 
GAS LISTING /tmp/cc8S9ckH.s 			page 4


 100      636F6465 
 101 0017 00       		.align	3
 102              	.LC1:
 103 0018 0A736361 		.string	"\nscause: "
 103      7573653A 
 103      2000
 104 0022 00000000 		.align	3
 104      0000
 105              	.LC2:
 106 0028 0A736570 		.string	"\nsepc: "
 106      633A2000 
 107              		.align	3
 108              	.LC3:
 109 0030 4E656B69 		.string	"Neki drugi prekid\n"
 109      20647275 
 109      67692070 
 109      72656B69 
 109      640A00
 110 0043 00000000 		.align	3
 110      00
 111              	.LC4:
 112 0048 0A477265 		.string	"\nGreska u prekidnoj rutini\n"
 112      736B6120 
 112      75207072 
 112      656B6964 
 112      6E6F6A20 
 113 0064 00000000 		.align	3
 114              	.LC5:
 115 0068 73636175 		.string	"scause: "
 115      73653A20 
 115      00
 116              		.text
 117              		.align	2
 118              		.globl	interruptRoutine
 120              	interruptRoutine:
 121              	.LFB51:
 122              		.file 3 "src/interruptRoutine.cpp"
   1:src/interruptRoutine.cpp **** //
   2:src/interruptRoutine.cpp **** // Created by os on 5/22/23.
   3:src/interruptRoutine.cpp **** //
   4:src/interruptRoutine.cpp **** 
   5:src/interruptRoutine.cpp **** #include "../lib/hw.h"
   6:src/interruptRoutine.cpp **** #include "../h/Riscv.hpp"
   7:src/interruptRoutine.cpp **** #include "../h/KMemory.hpp"
   8:src/interruptRoutine.cpp **** #include "../h/KSem.hpp"
   9:src/interruptRoutine.cpp **** #include "../h/KConsole.hpp"
  10:src/interruptRoutine.cpp **** #include "../h/TCB.hpp"
  11:src/interruptRoutine.cpp **** #include "../h/Scheduler.hpp"
  12:src/interruptRoutine.cpp **** 
  13:src/interruptRoutine.cpp **** int main();
  14:src/interruptRoutine.cpp **** 
  15:src/interruptRoutine.cpp **** #pragma GCC optimize("O0")
  16:src/interruptRoutine.cpp **** extern "C" void interruptRoutine() {
 123              		.loc 3 16 36 is_stmt 1
 124              		.cfi_startproc
 125 0000 130101F9 		addi	sp,sp,-112
 126              		.cfi_def_cfa_offset 112
GAS LISTING /tmp/cc8S9ckH.s 			page 5


 127 0004 23341106 		sd	ra,104(sp)
 128 0008 23308106 		sd	s0,96(sp)
 129 000c 233C9104 		sd	s1,88(sp)
 130              		.cfi_offset 1, -8
 131              		.cfi_offset 8, -16
 132              		.cfi_offset 9, -24
 133 0010 13040107 		addi	s0,sp,112
 134              		.cfi_def_cfa 8, 0
  17:src/interruptRoutine.cpp ****     //bitni sistemski registri
  18:src/interruptRoutine.cpp ****     uint64 scause, sepc, sstatus;
 135              		.loc 3 18 5
  19:src/interruptRoutine.cpp ****     __asm__ volatile("csrr %[scause], scause":[scause] "=r"(scause): : "a5", "a0", "a1", "a2", "a3"
 136              		.loc 3 19 5
 137              		.loc 3 19 119 is_stmt 0
 138              	#APP
 139              	# 19 "src/interruptRoutine.cpp" 1
  20              	    __asm__ volatile("csrr %[sepc], sepc":[sepc] "=r"(sepc): : "a5", "a0", "a1", "a2", "a3", "a4", 
 140              		csrr t1, scause
 141              	# 0 "" 2
 142              	#NO_APP
 143 0018 233C64FC 		sd	t1,-40(s0)
 144              	.LVL7:
 145              		.loc 3 20 5 is_stmt 1
 146              		.loc 3 20 111 is_stmt 0
 147              	#APP
 148              	# 20 "src/interruptRoutine.cpp" 1
  21              	    __asm__ volatile("csrr %[stat], sstatus":[stat] "=r"(sstatus): : "a5", "a0", "a1", "a2", "a3", 
 149              		csrr t1, sepc
 150              	# 0 "" 2
 151              	.LVL8:
 152              	#NO_APP
 153 0020 233864FC 		sd	t1,-48(s0)
 154              	.LVL9:
 155              		.loc 3 21 5 is_stmt 1
 156              		.loc 3 21 117 is_stmt 0
 157              	#APP
 158              	# 21 "src/interruptRoutine.cpp" 1
  22              	
 159              		csrr t1, sstatus
 160              	# 0 "" 2
 161              	.LVL10:
 162              	#NO_APP
 163 0028 233464FC 		sd	t1,-56(s0)
 164              	.LVL11:
  23:src/interruptRoutine.cpp ****     //argumenti preneti sistemskom pozivu
  24:src/interruptRoutine.cpp ****     uint64 a0, a1, a2, a3, a4;
 165              		.loc 3 24 5 is_stmt 1
  25:src/interruptRoutine.cpp ****     //uint64 a5, a6, a7;
  26:src/interruptRoutine.cpp ****     __asm__ volatile("mv %[ax], a0":[ax] "=r"(a0): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7"
 166              		.loc 3 26 5
 167              		.loc 3 26 101 is_stmt 0
 168              	#APP
 169              	# 26 "src/interruptRoutine.cpp" 1
  27              	    __asm__ volatile("mv %[ax], a1":[ax] "=r"(a1): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7"
 170              		mv t1, a0
 171              	# 0 "" 2
 172              	.LVL12:
GAS LISTING /tmp/cc8S9ckH.s 			page 6


 173              	#NO_APP
 174 0030 233064FC 		sd	t1,-64(s0)
 175              	.LVL13:
 176              		.loc 3 27 5 is_stmt 1
 177              		.loc 3 27 101 is_stmt 0
 178              	#APP
 179              	# 27 "src/interruptRoutine.cpp" 1
  28              	    __asm__ volatile("mv %[ax], a2":[ax] "=r"(a2): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7"
 180              		mv t1, a1
 181              	# 0 "" 2
 182              	.LVL14:
 183              	#NO_APP
 184 0038 233C64FA 		sd	t1,-72(s0)
 185              	.LVL15:
 186              		.loc 3 28 5 is_stmt 1
 187              		.loc 3 28 101 is_stmt 0
 188              	#APP
 189              	# 28 "src/interruptRoutine.cpp" 1
  29              	    __asm__ volatile("mv %[ax], a3":[ax] "=r"(a3): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7"
 190              		mv t1, a2
 191              	# 0 "" 2
 192              	.LVL16:
 193              	#NO_APP
 194 0040 233864FA 		sd	t1,-80(s0)
 195              	.LVL17:
 196              		.loc 3 29 5 is_stmt 1
 197              		.loc 3 29 101 is_stmt 0
 198              	#APP
 199              	# 29 "src/interruptRoutine.cpp" 1
  30              	    __asm__ volatile("mv %[ax], a4":[ax] "=r"(a4): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7"
 200              		mv t1, a3
 201              	# 0 "" 2
 202              	.LVL18:
 203              	#NO_APP
 204 0048 233464FA 		sd	t1,-88(s0)
 205              	.LVL19:
 206              		.loc 3 30 5 is_stmt 1
 207              		.loc 3 30 101 is_stmt 0
 208              	#APP
 209              	# 30 "src/interruptRoutine.cpp" 1
  31              	//    __asm__ volatile("mv %[ax], a5":[ax] "=r"(a5): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a
 210              		mv t1, a4
 211              	# 0 "" 2
 212              	.LVL20:
 213              	#NO_APP
 214 0050 233064FA 		sd	t1,-96(s0)
 215              	.LVL21:
  32:src/interruptRoutine.cpp **** //    __asm__ volatile("mv %[ax], a6":[ax] "=r"(a6): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a
  33:src/interruptRoutine.cpp **** //    __asm__ volatile("mv %[ax], a7":[ax] "=r"(a7): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a
  34:src/interruptRoutine.cpp **** 
  35:src/interruptRoutine.cpp ****     if (scause == 0x9 || scause == 0x8) {
 216              		.loc 3 35 5 is_stmt 1
 217              	.LBB26:
 218 0054 033784FD 		ld	a4,-40(s0)
 219 0058 93079000 		li	a5,9
 220 005c 6308F700 		beq	a4,a5,.L7
 221              		.loc 3 35 23 is_stmt 0 discriminator 1
GAS LISTING /tmp/cc8S9ckH.s 			page 7


 222 0060 033784FD 		ld	a4,-40(s0)
 223 0064 93078000 		li	a5,8
 224 0068 6316F73C 		bne	a4,a5,.L8
 225              	.L7:
  36:src/interruptRoutine.cpp ****         //prekid zbog poziva ecall
  37:src/interruptRoutine.cpp ****         switch (a0) {
 226              		.loc 3 37 9 is_stmt 1
 227 006c 033704FC 		ld	a4,-64(s0)
 228 0070 93071009 		li	a5,145
 229 0074 6302F732 		beq	a4,a5,.L9
 230 0078 033704FC 		ld	a4,-64(s0)
 231 007c 93071009 		li	a5,145
 232 0080 63E4E732 		bgtu	a4,a5,.L10
 233 0084 033704FC 		ld	a4,-64(s0)
 234 0088 93071008 		li	a5,129
 235 008c 6306F72C 		beq	a4,a5,.L11
 236 0090 033704FC 		ld	a4,-64(s0)
 237 0094 93071008 		li	a5,129
 238 0098 63E8E730 		bgtu	a4,a5,.L10
 239 009c 033704FC 		ld	a4,-64(s0)
 240 00a0 93072004 		li	a5,66
 241 00a4 63E2E704 		bgtu	a4,a5,.L12
 242 00a8 833704FC 		ld	a5,-64(s0)
 243 00ac 638E072E 		beqz	a5,.L10
 244 00b0 033704FC 		ld	a4,-64(s0)
 245 00b4 93072004 		li	a5,66
 246 00b8 63E8E72E 		bgtu	a4,a5,.L10
 247 00bc 833704FC 		ld	a5,-64(s0)
 248 00c0 13972700 		slli	a4,a5,2
 249 00c4 97070000 		lla	a5,.L14
 249      93870700 
 250 00cc B307F700 		add	a5,a4,a5
 251 00d0 83A70700 		lw	a5,0(a5)
 252 00d4 1B870700 		sext.w	a4,a5
 253 00d8 97070000 		lla	a5,.L14
 253      93870700 
 254 00e0 B307F700 		add	a5,a4,a5
 255 00e4 67800700 		jr	a5
 256              		.section	.rodata
 257 0071 000000   		.align	2
 258              		.align	2
 259              	.L14:
 260 0074 00000000 		.word	.L10-.L14
 261 0078 00000000 		.word	.L26-.L14
 262 007c 00000000 		.word	.L25-.L14
 263 0080 00000000 		.word	.L10-.L14
 264 0084 00000000 		.word	.L10-.L14
 265 0088 00000000 		.word	.L10-.L14
 266 008c 00000000 		.word	.L10-.L14
 267 0090 00000000 		.word	.L10-.L14
 268 0094 00000000 		.word	.L10-.L14
 269 0098 00000000 		.word	.L10-.L14
 270 009c 00000000 		.word	.L10-.L14
 271 00a0 00000000 		.word	.L10-.L14
 272 00a4 00000000 		.word	.L10-.L14
 273 00a8 00000000 		.word	.L10-.L14
 274 00ac 00000000 		.word	.L10-.L14
GAS LISTING /tmp/cc8S9ckH.s 			page 8


 275 00b0 00000000 		.word	.L10-.L14
 276 00b4 00000000 		.word	.L10-.L14
 277 00b8 00000000 		.word	.L24-.L14
 278 00bc 00000000 		.word	.L23-.L14
 279 00c0 00000000 		.word	.L22-.L14
 280 00c4 00000000 		.word	.L21-.L14
 281 00c8 00000000 		.word	.L10-.L14
 282 00cc 00000000 		.word	.L10-.L14
 283 00d0 00000000 		.word	.L10-.L14
 284 00d4 00000000 		.word	.L10-.L14
 285 00d8 00000000 		.word	.L10-.L14
 286 00dc 00000000 		.word	.L10-.L14
 287 00e0 00000000 		.word	.L10-.L14
 288 00e4 00000000 		.word	.L10-.L14
 289 00e8 00000000 		.word	.L10-.L14
 290 00ec 00000000 		.word	.L10-.L14
 291 00f0 00000000 		.word	.L10-.L14
 292 00f4 00000000 		.word	.L10-.L14
 293 00f8 00000000 		.word	.L20-.L14
 294 00fc 00000000 		.word	.L19-.L14
 295 0100 00000000 		.word	.L18-.L14
 296 0104 00000000 		.word	.L17-.L14
 297 0108 00000000 		.word	.L10-.L14
 298 010c 00000000 		.word	.L10-.L14
 299 0110 00000000 		.word	.L10-.L14
 300 0114 00000000 		.word	.L10-.L14
 301 0118 00000000 		.word	.L10-.L14
 302 011c 00000000 		.word	.L10-.L14
 303 0120 00000000 		.word	.L10-.L14
 304 0124 00000000 		.word	.L10-.L14
 305 0128 00000000 		.word	.L10-.L14
 306 012c 00000000 		.word	.L10-.L14
 307 0130 00000000 		.word	.L10-.L14
 308 0134 00000000 		.word	.L10-.L14
 309 0138 00000000 		.word	.L16-.L14
 310 013c 00000000 		.word	.L10-.L14
 311 0140 00000000 		.word	.L10-.L14
 312 0144 00000000 		.word	.L10-.L14
 313 0148 00000000 		.word	.L10-.L14
 314 014c 00000000 		.word	.L10-.L14
 315 0150 00000000 		.word	.L10-.L14
 316 0154 00000000 		.word	.L10-.L14
 317 0158 00000000 		.word	.L10-.L14
 318 015c 00000000 		.word	.L10-.L14
 319 0160 00000000 		.word	.L10-.L14
 320 0164 00000000 		.word	.L10-.L14
 321 0168 00000000 		.word	.L10-.L14
 322 016c 00000000 		.word	.L10-.L14
 323 0170 00000000 		.word	.L10-.L14
 324 0174 00000000 		.word	.L10-.L14
 325 0178 00000000 		.word	.L15-.L14
 326 017c 00000000 		.word	.L13-.L14
 327              		.text
 328              	.L12:
 329 00e8 033704FC 		ld	a4,-64(s0)
 330 00ec 93070008 		li	a5,128
 331 00f0 630EF720 		beq	a4,a5,.L27
GAS LISTING /tmp/cc8S9ckH.s 			page 9


 332 00f4 6F00402B 		j	.L10
 333              	.L26:
  38:src/interruptRoutine.cpp ****             case 0x01:
 334              		.loc 3 38 13
  39:src/interruptRoutine.cpp ****                 //mem_alloc
  40:src/interruptRoutine.cpp ****                 //a1 = broj blokova koje treba alocirati
  41:src/interruptRoutine.cpp ****                 KMemory::kmalloc((size_t)a1);
 335              		.loc 3 41 17
 336              		.loc 3 41 33 is_stmt 0
 337 00f8 033584FB 		ld	a0,-72(s0)
 338 00fc 97000000 		call	_ZN7KMemory7kmallocEm@plt
 338      E7800000 
 339              	.LVL22:
  42:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 340              		.loc 3 42 17 is_stmt 1
 341              		.loc 3 42 50 is_stmt 0
 342              	#APP
 343              	# 42 "src/interruptRoutine.cpp" 1
  43              	                break;
 344              		sd a0, 80(s0)
 345              	# 0 "" 2
 346              		.loc 3 43 17 is_stmt 1
 347              	#NO_APP
 348 0108 6F00C030 		j	.L28
 349              	.LVL23:
 350              	.L25:
  44:src/interruptRoutine.cpp ****             case 0x02:
 351              		.loc 3 44 13
  45:src/interruptRoutine.cpp ****                 //mem_free
  46:src/interruptRoutine.cpp ****                 //a1 = pokazivac na memoriju koju dealociramo, dobijen sa mem_alloc
  47:src/interruptRoutine.cpp ****                 KMemory::kfree((void*)a1);
 352              		.loc 3 47 17
 353              		.loc 3 47 31 is_stmt 0
 354 010c 833784FB 		ld	a5,-72(s0)
 355 0110 13850700 		mv	a0,a5
 356 0114 97000000 		call	_ZN7KMemory5kfreeEPv@plt
 356      E7800000 
 357              	.LVL24:
  48:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 358              		.loc 3 48 17 is_stmt 1
 359              		.loc 3 48 50 is_stmt 0
 360              	#APP
 361              	# 48 "src/interruptRoutine.cpp" 1
  49              	                break;
 362              		sd a0, 80(s0)
 363              	# 0 "" 2
 364              		.loc 3 49 17 is_stmt 1
 365              	#NO_APP
 366 0120 6F00402F 		j	.L28
 367              	.LVL25:
 368              	.L24:
  50:src/interruptRoutine.cpp ****             case 0x11:
 369              		.loc 3 50 13
  51:src/interruptRoutine.cpp ****                 //thread_create
  52:src/interruptRoutine.cpp ****                 //a1 = pokazivac na rucku u koju upisujemo identifikator niti(adresa u memoriji)
  53:src/interruptRoutine.cpp ****                 //a2 = pokazivac na funkciju koju nit treba da izvrsava
  54:src/interruptRoutine.cpp ****                 //a3 = argumenti funkcije koju nit treba da izvrsava
GAS LISTING /tmp/cc8S9ckH.s 			page 10


  55:src/interruptRoutine.cpp ****                 //a4 = poslednja lokacija alociranog steka(najniza adresa)
  56:src/interruptRoutine.cpp ****                 *((thread_t*)a1) = TCB::createThread((TCB::Body)a2, (void*)a3, (uint64*)a4);
 370              		.loc 3 56 17
 371              		.loc 3 56 53 is_stmt 0
 372 0124 833704FB 		ld	a5,-80(s0)
 373 0128 033784FA 		ld	a4,-88(s0)
 374 012c 833604FA 		ld	a3,-96(s0)
 375              		.loc 3 56 17
 376 0130 833484FB 		ld	s1,-72(s0)
 377              		.loc 3 56 53
 378 0134 13860600 		mv	a2,a3
 379 0138 93050700 		mv	a1,a4
 380 013c 13850700 		mv	a0,a5
 381 0140 97000000 		call	_ZN3TCB12createThreadEPFvPvES0_Pm@plt
 381      E7800000 
 382              	.LVL26:
 383 0148 93070500 		mv	a5,a0
 384              		.loc 3 56 34
 385 014c 23B0F400 		sd	a5,0(s1)
  57:src/interruptRoutine.cpp ****                 if (*((thread_t*)a1) != nullptr) {
 386              		.loc 3 57 17 is_stmt 1
 387              		.loc 3 57 21 is_stmt 0
 388 0150 833784FB 		ld	a5,-72(s0)
 389 0154 83B70700 		ld	a5,0(a5)
 390              		.loc 3 57 17
 391 0158 63880702 		beqz	a5,.L29
  58:src/interruptRoutine.cpp ****                     if ((TCB::Body)a2 != (TCB::Body)main) {
 392              		.loc 3 58 21 is_stmt 1
 393              		.loc 3 58 39 is_stmt 0
 394 015c 033704FB 		ld	a4,-80(s0)
 395              		.loc 3 58 21
 396 0160 97070000 		la	a5,main
 396      83B70700 
 397 0168 630CF700 		beq	a4,a5,.L30
  59:src/interruptRoutine.cpp ****                         Scheduler::put(*((thread_t*)a1));
 398              		.loc 3 59 25 is_stmt 1
 399              		.loc 3 59 39 is_stmt 0
 400 016c 833784FB 		ld	a5,-72(s0)
 401 0170 83B70700 		ld	a5,0(a5)
 402 0174 13850700 		mv	a0,a5
 403 0178 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 403      E7800000 
 404              	.LVL27:
 405              	.L30:
  60:src/interruptRoutine.cpp ****                     }
  61:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, 0");
 406              		.loc 3 61 21 is_stmt 1
 407              		.loc 3 61 49 is_stmt 0
 408              	#APP
 409              	# 61 "src/interruptRoutine.cpp" 1
  62              	                } else {
 410              		li a0, 0
 411              	# 0 "" 2
 412              	#NO_APP
 413 0184 6F008000 		j	.L31
 414              	.L29:
  63:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, -1");
GAS LISTING /tmp/cc8S9ckH.s 			page 11


 415              		.loc 3 63 21 is_stmt 1
 416              		.loc 3 63 50 is_stmt 0
 417              	#APP
 418              	# 63 "src/interruptRoutine.cpp" 1
  64              	                }
 419              		li a0, -1
 420              	# 0 "" 2
 421              	#NO_APP
 422              	.L31:
  65:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 423              		.loc 3 65 17 is_stmt 1
 424              		.loc 3 65 50 is_stmt 0
 425              	#APP
 426              	# 65 "src/interruptRoutine.cpp" 1
  66              	                break;
 427              		sd a0, 80(s0)
 428              	# 0 "" 2
 429              		.loc 3 66 17 is_stmt 1
 430              	#NO_APP
 431 0190 6F004028 		j	.L28
 432              	.LVL28:
 433              	.L23:
  67:src/interruptRoutine.cpp ****             case 0x12:
 434              		.loc 3 67 13
  68:src/interruptRoutine.cpp ****                 //thread_exit
  69:src/interruptRoutine.cpp ****                 TCB::getRunning()->setStatus(TCB::FINISHED);
 435              		.loc 3 69 17
 436              		.loc 3 69 45 is_stmt 0
 437 0194 97000000 		call	_ZN3TCB10getRunningEv
 437      E7800000 
 438              	.LVL29:
 439 019c 93070500 		mv	a5,a0
 440 01a0 93055000 		li	a1,5
 441 01a4 13850700 		mv	a0,a5
 442 01a8 97000000 		call	_ZN3TCB9setStatusENS_12ThreadStatusE
 442      E7800000 
 443              	.LVL30:
  70:src/interruptRoutine.cpp ****                 TCB::releaseJoined();
 444              		.loc 3 70 17 is_stmt 1
 445              		.loc 3 70 35 is_stmt 0
 446 01b0 97000000 		call	_ZN3TCB13releaseJoinedEv@plt
 446      E7800000 
 447              	.LVL31:
  71:src/interruptRoutine.cpp ****                 __asm__ volatile("li a0, 0");
 448              		.loc 3 71 17 is_stmt 1
 449              		.loc 3 71 45 is_stmt 0
 450              	#APP
 451              	# 71 "src/interruptRoutine.cpp" 1
  72              	                __asm__ volatile("sd a0, 80(s0)");
 452              		li a0, 0
 453              	# 0 "" 2
 454              		.loc 3 72 17 is_stmt 1
 455              		.loc 3 72 50 is_stmt 0
 456              	# 72 "src/interruptRoutine.cpp" 1
  73              	                TCB::dispatch();
 457              		sd a0, 80(s0)
 458              	# 0 "" 2
GAS LISTING /tmp/cc8S9ckH.s 			page 12


 459              		.loc 3 73 17 is_stmt 1
 460              		.loc 3 73 30 is_stmt 0
 461              	#NO_APP
 462 01c0 97000000 		call	_ZN3TCB8dispatchEv@plt
 462      E7800000 
 463              	.LVL32:
  74:src/interruptRoutine.cpp ****                 break;
 464              		.loc 3 74 17 is_stmt 1
 465 01c8 6F00C024 		j	.L28
 466              	.LVL33:
 467              	.L22:
  75:src/interruptRoutine.cpp ****             case 0x13:
 468              		.loc 3 75 13
  76:src/interruptRoutine.cpp ****                 //thread_dispatch
  77:src/interruptRoutine.cpp ****                 TCB::dispatch();
 469              		.loc 3 77 17
 470              		.loc 3 77 30 is_stmt 0
 471 01cc 97000000 		call	_ZN3TCB8dispatchEv@plt
 471      E7800000 
 472              	.LVL34:
  78:src/interruptRoutine.cpp ****                 break;
 473              		.loc 3 78 17 is_stmt 1
 474 01d4 6F000024 		j	.L28
 475              	.LVL35:
 476              	.L21:
  79:src/interruptRoutine.cpp ****             case 0x14:
 477              		.loc 3 79 13
  80:src/interruptRoutine.cpp ****                 //thread_join
  81:src/interruptRoutine.cpp ****                 //a1 = rucka niti na koju tekuca nit treba da ceka
  82:src/interruptRoutine.cpp ****                 TCB::threadJoin((thread_t)a1);
 478              		.loc 3 82 17
 479              		.loc 3 82 32 is_stmt 0
 480 01d8 833784FB 		ld	a5,-72(s0)
 481 01dc 13850700 		mv	a0,a5
 482 01e0 97000000 		call	_ZN3TCB10threadJoinEPS_@plt
 482      E7800000 
 483              	.LVL36:
  83:src/interruptRoutine.cpp ****                 TCB::dispatch();
 484              		.loc 3 83 17 is_stmt 1
 485              		.loc 3 83 30 is_stmt 0
 486 01e8 97000000 		call	_ZN3TCB8dispatchEv@plt
 486      E7800000 
 487              	.LVL37:
  84:src/interruptRoutine.cpp ****                 break;
 488              		.loc 3 84 17 is_stmt 1
 489 01f0 6F004022 		j	.L28
 490              	.LVL38:
 491              	.L20:
  85:src/interruptRoutine.cpp ****             case 0x21:
 492              		.loc 3 85 13
  86:src/interruptRoutine.cpp ****                 //sem_open
  87:src/interruptRoutine.cpp ****                 //a1 = pokazivac na rucku semafora, u koju se upisuje adresa semafora u memoriji
  88:src/interruptRoutine.cpp ****                 *((sem_t*)a1) = KSem::initSem((uint)a2);
 493              		.loc 3 88 17
 494              		.loc 3 88 46 is_stmt 0
 495 01f4 833704FB 		ld	a5,-80(s0)
 496 01f8 9B870700 		sext.w	a5,a5
GAS LISTING /tmp/cc8S9ckH.s 			page 13


 497              		.loc 3 88 17
 498 01fc 833484FB 		ld	s1,-72(s0)
 499              		.loc 3 88 46
 500 0200 13850700 		mv	a0,a5
 501 0204 97000000 		call	_ZN4KSem7initSemEj@plt
 501      E7800000 
 502              	.LVL39:
 503 020c 93070500 		mv	a5,a0
 504              		.loc 3 88 31
 505 0210 23B0F400 		sd	a5,0(s1)
  89:src/interruptRoutine.cpp ****                 if (*((sem_t*)a1) != nullptr) {
 506              		.loc 3 89 17 is_stmt 1
 507              		.loc 3 89 21 is_stmt 0
 508 0214 833784FB 		ld	a5,-72(s0)
 509 0218 83B70700 		ld	a5,0(a5)
 510              		.loc 3 89 17
 511 021c 63860700 		beqz	a5,.L32
  90:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, 0");
 512              		.loc 3 90 21 is_stmt 1
 513              		.loc 3 90 49 is_stmt 0
 514              	#APP
 515              	# 90 "src/interruptRoutine.cpp" 1
  91              	                } else {
 516              		li a0, 0
 517              	# 0 "" 2
 518              	#NO_APP
 519 0224 6F008000 		j	.L33
 520              	.L32:
  92:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, -1");
 521              		.loc 3 92 21 is_stmt 1
 522              		.loc 3 92 50 is_stmt 0
 523              	#APP
 524              	# 92 "src/interruptRoutine.cpp" 1
  93              	                }
 525              		li a0, -1
 526              	# 0 "" 2
 527              	#NO_APP
 528              	.L33:
  94:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 529              		.loc 3 94 17 is_stmt 1
 530              		.loc 3 94 50 is_stmt 0
 531              	#APP
 532              	# 94 "src/interruptRoutine.cpp" 1
  95              	                break;
 533              		sd a0, 80(s0)
 534              	# 0 "" 2
 535              		.loc 3 95 17 is_stmt 1
 536              	#NO_APP
 537 0230 6F00401E 		j	.L28
 538              	.LVL40:
 539              	.L19:
  96:src/interruptRoutine.cpp ****             case 0x22:
 540              		.loc 3 96 13
  97:src/interruptRoutine.cpp ****                 //sem_close
  98:src/interruptRoutine.cpp ****                 //a1 = rucka semafora
  99:src/interruptRoutine.cpp ****                 KSem::closeSem((sem_t)a1);
 541              		.loc 3 99 17
GAS LISTING /tmp/cc8S9ckH.s 			page 14


 542              		.loc 3 99 31 is_stmt 0
 543 0234 833784FB 		ld	a5,-72(s0)
 544 0238 13850700 		mv	a0,a5
 545 023c 97000000 		call	_ZN4KSem8closeSemEPS_@plt
 545      E7800000 
 546              	.LVL41:
 100:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 547              		.loc 3 100 17 is_stmt 1
 548              		.loc 3 100 50 is_stmt 0
 549              	#APP
 550              	# 100 "src/interruptRoutine.cpp" 1
 101              	                delete (sem_t)a1;
 551              		sd a0, 80(s0)
 552              	# 0 "" 2
 553              		.loc 3 101 17 is_stmt 1
 554              		.loc 3 101 24 is_stmt 0
 555              	#NO_APP
 556 0248 833484FB 		ld	s1,-72(s0)
 557              		.loc 3 101 33
 558 024c 638A041A 		beqz	s1,.L47
 559              		.loc 3 101 31 discriminator 1
 560 0250 13850400 		mv	a0,s1
 561 0254 97000000 		call	_ZN4KSemD1Ev
 561      E7800000 
 562              	.LVL42:
 563 025c 13850400 		mv	a0,s1
 564 0260 97000000 		call	_ZN4KSemdlEPv@plt
 564      E7800000 
 565              	.LVL43:
 102:src/interruptRoutine.cpp ****                 break;
 566              		.loc 3 102 17 is_stmt 1 discriminator 1
 567 0268 6F008019 		j	.L47
 568              	.LVL44:
 569              	.L18:
 103:src/interruptRoutine.cpp ****             case 0x23:
 570              		.loc 3 103 13
 104:src/interruptRoutine.cpp ****                 //sem_wait
 105:src/interruptRoutine.cpp ****                 //a1 = rucka semafora
 106:src/interruptRoutine.cpp ****                 ((sem_t)a1)->wait();
 571              		.loc 3 106 17
 572              		.loc 3 106 34 is_stmt 0
 573 026c 833784FB 		ld	a5,-72(s0)
 574 0270 13850700 		mv	a0,a5
 575 0274 97000000 		call	_ZN4KSem4waitEv@plt
 575      E7800000 
 576              	.LVL45:
 107:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 577              		.loc 3 107 17 is_stmt 1
 578              		.loc 3 107 50 is_stmt 0
 579              	#APP
 580              	# 107 "src/interruptRoutine.cpp" 1
 108              	                break;
 581              		sd a0, 80(s0)
 582              	# 0 "" 2
 583              		.loc 3 108 17 is_stmt 1
 584              	#NO_APP
 585 0280 6F004019 		j	.L28
GAS LISTING /tmp/cc8S9ckH.s 			page 15


 586              	.LVL46:
 587              	.L17:
 109:src/interruptRoutine.cpp ****             case 0x24:
 588              		.loc 3 109 13
 110:src/interruptRoutine.cpp ****                 //sem_signal
 111:src/interruptRoutine.cpp ****                 //a1 = rucka semafora
 112:src/interruptRoutine.cpp ****                 ((sem_t)a1)->signal();
 589              		.loc 3 112 17
 590              		.loc 3 112 36 is_stmt 0
 591 0284 833784FB 		ld	a5,-72(s0)
 592 0288 13850700 		mv	a0,a5
 593 028c 97000000 		call	_ZN4KSem6signalEv@plt
 593      E7800000 
 594              	.LVL47:
 113:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 595              		.loc 3 113 17 is_stmt 1
 596              		.loc 3 113 50 is_stmt 0
 597              	#APP
 598              	# 113 "src/interruptRoutine.cpp" 1
 114              	                break;
 599              		sd a0, 80(s0)
 600              	# 0 "" 2
 601              		.loc 3 114 17 is_stmt 1
 602              	#NO_APP
 603 0298 6F00C017 		j	.L28
 604              	.LVL48:
 605              	.L16:
 115:src/interruptRoutine.cpp ****             case 0x31:
 606              		.loc 3 115 13
 116:src/interruptRoutine.cpp ****                 //time_sleep
 117:src/interruptRoutine.cpp ****                 //a1 = broj perioda tajmera na koji se uspavljuje tekuca nit
 118:src/interruptRoutine.cpp ****                 if ((time_t)a1 > 0) {
 607              		.loc 3 118 17
 608 029c 833784FB 		ld	a5,-72(s0)
 609 02a0 63860700 		beqz	a5,.L35
 119:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, 0");
 610              		.loc 3 119 21
 611              		.loc 3 119 49 is_stmt 0
 612              	#APP
 613              	# 119 "src/interruptRoutine.cpp" 1
 120              	                } else {
 614              		li a0, 0
 615              	# 0 "" 2
 616              	#NO_APP
 617 02a8 6F008000 		j	.L36
 618              	.L35:
 121:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, -1");
 619              		.loc 3 121 21 is_stmt 1
 620              		.loc 3 121 50 is_stmt 0
 621              	#APP
 622              	# 121 "src/interruptRoutine.cpp" 1
 122              	                }
 623              		li a0, -1
 624              	# 0 "" 2
 625              	#NO_APP
 626              	.L36:
 123:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
GAS LISTING /tmp/cc8S9ckH.s 			page 16


 627              		.loc 3 123 17 is_stmt 1
 628              		.loc 3 123 50 is_stmt 0
 629              	#APP
 630              	# 123 "src/interruptRoutine.cpp" 1
 124              	                if ((time_t)a1 > 0) {
 631              		sd a0, 80(s0)
 632              	# 0 "" 2
 633              		.loc 3 124 17 is_stmt 1
 634              	#NO_APP
 635 02b4 833784FB 		ld	a5,-72(s0)
 636 02b8 63880714 		beqz	a5,.L48
 125:src/interruptRoutine.cpp ****                     Scheduler::putToSleep(TCB::getRunning(), (time_t)a1);
 637              		.loc 3 125 21
 638              		.loc 3 125 42 is_stmt 0
 639 02bc 97000000 		call	_ZN3TCB10getRunningEv
 639      E7800000 
 640              	.LVL49:
 641 02c4 93070500 		mv	a5,a0
 642 02c8 833584FB 		ld	a1,-72(s0)
 643 02cc 13850700 		mv	a0,a5
 644 02d0 97000000 		call	_ZN9Scheduler10putToSleepEP3TCBm@plt
 644      E7800000 
 645              	.LVL50:
 126:src/interruptRoutine.cpp ****                     TCB::dispatch();
 646              		.loc 3 126 21 is_stmt 1
 647              		.loc 3 126 34 is_stmt 0
 648 02d8 97000000 		call	_ZN3TCB8dispatchEv@plt
 648      E7800000 
 649              	.LVL51:
 127:src/interruptRoutine.cpp ****                 }
 128:src/interruptRoutine.cpp ****                 break;
 650              		.loc 3 128 17 is_stmt 1
 651 02e0 6F008012 		j	.L48
 652              	.LVL52:
 653              	.L15:
 129:src/interruptRoutine.cpp ****             case 0x41:
 654              		.loc 3 129 13
 130:src/interruptRoutine.cpp ****                 //getc
 131:src/interruptRoutine.cpp ****                 KConsole::kgetc();
 655              		.loc 3 131 17
 656              		.loc 3 131 32 is_stmt 0
 657 02e4 97000000 		call	_ZN8KConsole5kgetcEv@plt
 657      E7800000 
 658              	.LVL53:
 132:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 659              		.loc 3 132 17 is_stmt 1
 660              		.loc 3 132 50 is_stmt 0
 661              	#APP
 662              	# 132 "src/interruptRoutine.cpp" 1
 133              	                break;
 663              		sd a0, 80(s0)
 664              	# 0 "" 2
 665              		.loc 3 133 17 is_stmt 1
 666              	#NO_APP
 667 02f0 6F004012 		j	.L28
 668              	.LVL54:
 669              	.L13:
GAS LISTING /tmp/cc8S9ckH.s 			page 17


 134:src/interruptRoutine.cpp ****             case 0x42:
 670              		.loc 3 134 13
 135:src/interruptRoutine.cpp ****                 //putc
 136:src/interruptRoutine.cpp ****                 //a1 = karakter koji se upisuje u bafer za ispis na konzolu
 137:src/interruptRoutine.cpp ****                 KConsole::kputc((char)a1);
 671              		.loc 3 137 17
 672              		.loc 3 137 32 is_stmt 0
 673 02f4 833784FB 		ld	a5,-72(s0)
 674 02f8 93F7F70F 		andi	a5,a5,0xff
 675 02fc 13850700 		mv	a0,a5
 676 0300 97000000 		call	_ZN8KConsole5kputcEc@plt
 676      E7800000 
 677              	.LVL55:
 138:src/interruptRoutine.cpp ****                 break;
 678              		.loc 3 138 17 is_stmt 1
 679 0308 6F00C010 		j	.L28
 680              	.LVL56:
 681              	.L27:
 139:src/interruptRoutine.cpp ****             case 0x80:
 682              		.loc 3 139 13
 140:src/interruptRoutine.cpp ****                 //alloc thread
 141:src/interruptRoutine.cpp ****                 //a1 = pokazivac na rucku u koju upisujemo identifikator niti(adresa u memoriji)
 142:src/interruptRoutine.cpp ****                 //a2 = pokazivac na funkciju koju nit treba da izvrsava
 143:src/interruptRoutine.cpp ****                 //a3 = argumenti funkcije koju nit treba da izvrsava
 144:src/interruptRoutine.cpp ****                 //a4 = poslednja lokacija alociranog steka(najniza adresa)
 145:src/interruptRoutine.cpp ****                 *((thread_t*)a1) = TCB::createThread((TCB::Body)a2, (void*)a3, (uint64*)a4);
 683              		.loc 3 145 17
 684              		.loc 3 145 53 is_stmt 0
 685 030c 833704FB 		ld	a5,-80(s0)
 686 0310 033784FA 		ld	a4,-88(s0)
 687 0314 833604FA 		ld	a3,-96(s0)
 688              		.loc 3 145 17
 689 0318 833484FB 		ld	s1,-72(s0)
 690              		.loc 3 145 53
 691 031c 13860600 		mv	a2,a3
 692 0320 93050700 		mv	a1,a4
 693 0324 13850700 		mv	a0,a5
 694 0328 97000000 		call	_ZN3TCB12createThreadEPFvPvES0_Pm@plt
 694      E7800000 
 695              	.LVL57:
 696 0330 93070500 		mv	a5,a0
 697              		.loc 3 145 34
 698 0334 23B0F400 		sd	a5,0(s1)
 146:src/interruptRoutine.cpp ****                 if (*((thread_t*)a1) != nullptr) {
 699              		.loc 3 146 17 is_stmt 1
 700              		.loc 3 146 21 is_stmt 0
 701 0338 833784FB 		ld	a5,-72(s0)
 702 033c 83B70700 		ld	a5,0(a5)
 703              		.loc 3 146 17
 704 0340 63860700 		beqz	a5,.L38
 147:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, 0");
 705              		.loc 3 147 21 is_stmt 1
 706              		.loc 3 147 49 is_stmt 0
 707              	#APP
 708              	# 147 "src/interruptRoutine.cpp" 1
 148              	                } else {
 709              		li a0, 0
GAS LISTING /tmp/cc8S9ckH.s 			page 18


 710              	# 0 "" 2
 711              	#NO_APP
 712 0348 6F008000 		j	.L39
 713              	.L38:
 149:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, -1");
 714              		.loc 3 149 21 is_stmt 1
 715              		.loc 3 149 50 is_stmt 0
 716              	#APP
 717              	# 149 "src/interruptRoutine.cpp" 1
 150              	                }
 718              		li a0, -1
 719              	# 0 "" 2
 720              	#NO_APP
 721              	.L39:
 151:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 722              		.loc 3 151 17 is_stmt 1
 723              		.loc 3 151 50 is_stmt 0
 724              	#APP
 725              	# 151 "src/interruptRoutine.cpp" 1
 152              	                break;
 726              		sd a0, 80(s0)
 727              	# 0 "" 2
 728              		.loc 3 152 17 is_stmt 1
 729              	#NO_APP
 730 0354 6F00000C 		j	.L28
 731              	.LVL58:
 732              	.L11:
 153:src/interruptRoutine.cpp ****             case 0x81:
 733              		.loc 3 153 13
 154:src/interruptRoutine.cpp ****                 //start thread
 155:src/interruptRoutine.cpp ****                 //a1 = rucka niti koja se stavlja u scheduler
 156:src/interruptRoutine.cpp ****                 if (((thread_t)a1)->getBody() != (TCB::Body)main) {
 734              		.loc 3 156 17
 735              		.loc 3 156 44 is_stmt 0
 736 0358 833784FB 		ld	a5,-72(s0)
 737 035c 13850700 		mv	a0,a5
 738 0360 97000000 		call	_ZN3TCB7getBodyEv
 738      E7800000 
 739              	.LVL59:
 740 0368 13070500 		mv	a4,a0
 741              		.loc 3 156 47
 742 036c 97070000 		la	a5,main
 742      83B70700 
 743 0374 B307F740 		sub	a5,a4,a5
 744 0378 B337F000 		snez	a5,a5
 745 037c 93F7F70F 		andi	a5,a5,0xff
 746              		.loc 3 156 17
 747 0380 63880708 		beqz	a5,.L49
 157:src/interruptRoutine.cpp ****                     Scheduler::put((thread_t)a1);
 748              		.loc 3 157 21 is_stmt 1
 749              		.loc 3 157 35 is_stmt 0
 750 0384 833784FB 		ld	a5,-72(s0)
 751 0388 13850700 		mv	a0,a5
 752 038c 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 752      E7800000 
 753              	.LVL60:
 158:src/interruptRoutine.cpp ****                 }
GAS LISTING /tmp/cc8S9ckH.s 			page 19


 159:src/interruptRoutine.cpp ****                 break;
 754              		.loc 3 159 17 is_stmt 1
 755 0394 6F00C007 		j	.L49
 756              	.LVL61:
 757              	.L9:
 160:src/interruptRoutine.cpp ****             case 0x91:
 758              		.loc 3 160 13
 161:src/interruptRoutine.cpp ****                 //printInteger
 162:src/interruptRoutine.cpp ****                 //a1 = integer za ispis
 163:src/interruptRoutine.cpp ****                 kPrintInt(a1);
 759              		.loc 3 163 17
 760              		.loc 3 163 26 is_stmt 0
 761 0398 033584FB 		ld	a0,-72(s0)
 762 039c 97000000 		call	_Z9kPrintIntm@plt
 762      E7800000 
 763              	.LVL62:
 164:src/interruptRoutine.cpp ****                 break;
 764              		.loc 3 164 17 is_stmt 1
 765 03a4 6F000007 		j	.L28
 766              	.LVL63:
 767              	.L10:
 165:src/interruptRoutine.cpp ****             default:
 768              		.loc 3 165 13
 166:src/interruptRoutine.cpp ****                 printString("\nNepostojeci op code: ");
 769              		.loc 3 166 17
 770              		.loc 3 166 28 is_stmt 0
 771 03a8 17050000 		lla	a0,.LC0
 771      13050500 
 772 03b0 97000000 		call	_Z11printStringPKc@plt
 772      E7800000 
 773              	.LVL64:
 167:src/interruptRoutine.cpp ****                 kPrintInt(a0);
 774              		.loc 3 167 17 is_stmt 1
 775              		.loc 3 167 26 is_stmt 0
 776 03b8 033504FC 		ld	a0,-64(s0)
 777 03bc 97000000 		call	_Z9kPrintIntm@plt
 777      E7800000 
 778              	.LVL65:
 168:src/interruptRoutine.cpp ****                 printString("\nscause: ");
 779              		.loc 3 168 17 is_stmt 1
 780              		.loc 3 168 28 is_stmt 0
 781 03c4 17050000 		lla	a0,.LC1
 781      13050500 
 782 03cc 97000000 		call	_Z11printStringPKc@plt
 782      E7800000 
 783              	.LVL66:
 169:src/interruptRoutine.cpp ****                 kPrintInt(scause);
 784              		.loc 3 169 17 is_stmt 1
 785              		.loc 3 169 26 is_stmt 0
 786 03d4 033584FD 		ld	a0,-40(s0)
 787 03d8 97000000 		call	_Z9kPrintIntm@plt
 787      E7800000 
 788              	.LVL67:
 170:src/interruptRoutine.cpp ****                 printString("\nsepc: ");
 789              		.loc 3 170 17 is_stmt 1
 790              		.loc 3 170 28 is_stmt 0
 791 03e0 17050000 		lla	a0,.LC2
GAS LISTING /tmp/cc8S9ckH.s 			page 20


 791      13050500 
 792 03e8 97000000 		call	_Z11printStringPKc@plt
 792      E7800000 
 793              	.LVL68:
 171:src/interruptRoutine.cpp ****                 kPrintInt(sepc);
 794              		.loc 3 171 17 is_stmt 1
 795              		.loc 3 171 26 is_stmt 0
 796 03f0 033504FD 		ld	a0,-48(s0)
 797 03f4 97000000 		call	_Z9kPrintIntm@plt
 797      E7800000 
 798              	.LVL69:
 172:src/interruptRoutine.cpp ****                 break;
 799              		.loc 3 172 17 is_stmt 1
 800 03fc 6F008001 		j	.L28
 801              	.L47:
 102:src/interruptRoutine.cpp ****             case 0x23:
 802              		.loc 3 102 17 is_stmt 0
 803 0400 13000000 		nop
 804 0404 6F000001 		j	.L28
 805              	.L48:
 128:src/interruptRoutine.cpp ****             case 0x41:
 806              		.loc 3 128 17
 807 0408 13000000 		nop
 808 040c 6F008000 		j	.L28
 809              	.L49:
 159:src/interruptRoutine.cpp ****             case 0x91:
 810              		.loc 3 159 17
 811 0410 13000000 		nop
 812              	.L28:
 173:src/interruptRoutine.cpp ****         }
 174:src/interruptRoutine.cpp ****         //sepc pokazuje na ecall instrukciju, treba preci na sledecu instrukciju
 175:src/interruptRoutine.cpp ****         sepc += 4;
 813              		.loc 3 175 9 is_stmt 1
 814              		.loc 3 175 14 is_stmt 0
 815 0414 833704FD 		ld	a5,-48(s0)
 816 0418 93874700 		addi	a5,a5,4
 817 041c 2338F4FC 		sd	a5,-48(s0)
 818              	.LVL70:
 176:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 819              		.loc 3 176 9 is_stmt 1
 820              		.loc 3 176 66 is_stmt 0
 821 0420 833704FD 		ld	a5,-48(s0)
 822              	#APP
 823              	# 176 "src/interruptRoutine.cpp" 1
 177              	        __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 824              		csrw sepc, a5
 825              	# 0 "" 2
 826              		.loc 3 177 9 is_stmt 1
 827              		.loc 3 177 71 is_stmt 0
 828              	#NO_APP
 829 0428 833784FC 		ld	a5,-56(s0)
 830              	.LVL71:
 831              	#APP
 832              	# 177 "src/interruptRoutine.cpp" 1
 178              	    } else if (scause == 0x8000000000000009) {
 833              		csrw sstatus, a5
 834              	# 0 "" 2
GAS LISTING /tmp/cc8S9ckH.s 			page 21


 835              	#NO_APP
 836              	.LBE26:
 179:src/interruptRoutine.cpp ****         //spoljasnji hardverski prekid (od konzole)
 180:src/interruptRoutine.cpp ****         uint64 irq = plic_claim();
 181:src/interruptRoutine.cpp ****         if (irq == CONSOLE_IRQ) {
 182:src/interruptRoutine.cpp ****             if (*KConsole::sr & CONSOLE_RX_STATUS_BIT) {
 183:src/interruptRoutine.cpp ****                 KConsole::placeInInput(*KConsole::dr);
 184:src/interruptRoutine.cpp ****             }
 185:src/interruptRoutine.cpp ****         } else {
 186:src/interruptRoutine.cpp ****             printString("Neki drugi prekid\n");
 187:src/interruptRoutine.cpp ****         }
 188:src/interruptRoutine.cpp ****         plic_complete(irq);
 189:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 190:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 191:src/interruptRoutine.cpp ****         Riscv::mc_sip(Riscv::SIP_SEIP);
 192:src/interruptRoutine.cpp ****     } else if (scause == 0x8000000000000001) {
 193:src/interruptRoutine.cpp ****         //prekid od tajmera
 194:src/interruptRoutine.cpp ****         Scheduler::wake();
 195:src/interruptRoutine.cpp ****         TCB::getRunningTimeSlice()++;
 196:src/interruptRoutine.cpp ****         if (TCB::getRunningTimeSlice() >= TCB::getRunning()->getTimeSlice()) {
 197:src/interruptRoutine.cpp ****             TCB::dispatch();
 198:src/interruptRoutine.cpp ****         }
 199:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 200:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 201:src/interruptRoutine.cpp ****         Riscv::mc_sip(Riscv::SIP_SSIP);
 202:src/interruptRoutine.cpp ****     } else {
 203:src/interruptRoutine.cpp ****         printString("\nGreska u prekidnoj rutini\n");
 204:src/interruptRoutine.cpp ****         printString("scause: ");
 205:src/interruptRoutine.cpp ****         kPrintInt(scause);
 206:src/interruptRoutine.cpp ****         printString("\nsepc: ");
 207:src/interruptRoutine.cpp ****         kPrintInt(sepc);
 208:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 209:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 210:src/interruptRoutine.cpp ****     }
 211:src/interruptRoutine.cpp **** }...
 837              		.loc 3 211 1
 838 0430 6F00001A 		j	.L50
 839              	.LVL72:
 840              	.L8:
 841              	.LBB34:
 842              	.LBB27:
 178:src/interruptRoutine.cpp ****     } else if (scause == 0x8000000000000009) {
 843              		.loc 3 178 12 is_stmt 1
 844              	.LBB28:
 845 0434 033784FD 		ld	a4,-40(s0)
 846              	.LVL73:
 847 0438 9307F0FF 		li	a5,-1
 848 043c 9397F703 		slli	a5,a5,63
 849 0440 93879700 		addi	a5,a5,9
 850 0444 631EF708 		bne	a4,a5,.L42
 851              	.LBB29:
 180:src/interruptRoutine.cpp ****         uint64 irq = plic_claim();
 852              		.loc 3 180 9
 180:src/interruptRoutine.cpp ****         uint64 irq = plic_claim();
 853              		.loc 3 180 32 is_stmt 0
 854 0448 97000000 		call	plic_claim@plt
 854      E7800000 
GAS LISTING /tmp/cc8S9ckH.s 			page 22


 855              	.LVL74:
 856 0450 93070500 		mv	a5,a0
 180:src/interruptRoutine.cpp ****         uint64 irq = plic_claim();
 857              		.loc 3 180 33
 858 0454 233CF4F8 		sd	a5,-104(s0)
 859              	.LVL75:
 181:src/interruptRoutine.cpp ****         if (irq == CONSOLE_IRQ) {
 860              		.loc 3 181 9 is_stmt 1
 861 0458 033784F9 		ld	a4,-104(s0)
 862 045c 9307A000 		li	a5,10
 863 0460 631EF702 		bne	a4,a5,.L43
 182:src/interruptRoutine.cpp ****             if (*KConsole::sr & CONSOLE_RX_STATUS_BIT) {
 864              		.loc 3 182 13
 182:src/interruptRoutine.cpp ****             if (*KConsole::sr & CONSOLE_RX_STATUS_BIT) {
 865              		.loc 3 182 17 is_stmt 0
 866 0464 97070000 		la	a5,_ZN8KConsole2srE
 866      83B70700 
 867 046c 83B70700 		ld	a5,0(a5)
 868 0470 83C70700 		lbu	a5,0(a5)
 182:src/interruptRoutine.cpp ****             if (*KConsole::sr & CONSOLE_RX_STATUS_BIT) {
 869              		.loc 3 182 31
 870 0474 93F71700 		andi	a5,a5,1
 182:src/interruptRoutine.cpp ****             if (*KConsole::sr & CONSOLE_RX_STATUS_BIT) {
 871              		.loc 3 182 13
 872 0478 638A0702 		beqz	a5,.L44
 183:src/interruptRoutine.cpp ****                 KConsole::placeInInput(*KConsole::dr);
 873              		.loc 3 183 17 is_stmt 1
 183:src/interruptRoutine.cpp ****                 KConsole::placeInInput(*KConsole::dr);
 874              		.loc 3 183 39 is_stmt 0
 875 047c 97070000 		la	a5,_ZN8KConsole2drE
 875      83B70700 
 876 0484 83B70700 		ld	a5,0(a5)
 877 0488 83C70700 		lbu	a5,0(a5)
 878 048c 13850700 		mv	a0,a5
 879              	.LVL76:
 880 0490 97000000 		call	_ZN8KConsole12placeInInputEc@plt
 880      E7800000 
 881              	.LVL77:
 882 0498 6F004001 		j	.L44
 883              	.LVL78:
 884              	.L43:
 186:src/interruptRoutine.cpp ****             printString("Neki drugi prekid\n");
 885              		.loc 3 186 13 is_stmt 1
 186:src/interruptRoutine.cpp ****             printString("Neki drugi prekid\n");
 886              		.loc 3 186 24 is_stmt 0
 887 049c 17050000 		lla	a0,.LC3
 887      13050500 
 888              	.LVL79:
 889 04a4 97000000 		call	_Z11printStringPKc@plt
 889      E7800000 
 890              	.LVL80:
 891              	.L44:
 188:src/interruptRoutine.cpp ****         plic_complete(irq);
 892              		.loc 3 188 9 is_stmt 1
 188:src/interruptRoutine.cpp ****         plic_complete(irq);
 893              		.loc 3 188 22 is_stmt 0
 894 04ac 833784F9 		ld	a5,-104(s0)
GAS LISTING /tmp/cc8S9ckH.s 			page 23


 895 04b0 9B870700 		sext.w	a5,a5
 896 04b4 13850700 		mv	a0,a5
 897 04b8 97000000 		call	plic_complete@plt
 897      E7800000 
 898              	.LVL81:
 189:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 899              		.loc 3 189 9 is_stmt 1
 189:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 900              		.loc 3 189 66 is_stmt 0
 901 04c0 833704FD 		ld	a5,-48(s0)
 902              	#APP
 903              	# 189 "src/interruptRoutine.cpp" 1
 190:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 904              		csrw sepc, a5
 905              	# 0 "" 2
 906              		.loc 3 190 9 is_stmt 1
 190:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 907              		.loc 3 190 71 is_stmt 0
 908              	#NO_APP
 909 04c8 833784FC 		ld	a5,-56(s0)
 910              	#APP
 911              	# 190 "src/interruptRoutine.cpp" 1
 191:src/interruptRoutine.cpp ****         Riscv::mc_sip(Riscv::SIP_SEIP);
 912              		csrw sstatus, a5
 913              	# 0 "" 2
 914              		.loc 3 191 9 is_stmt 1
 191:src/interruptRoutine.cpp ****         Riscv::mc_sip(Riscv::SIP_SEIP);
 915              		.loc 3 191 22 is_stmt 0
 916              	#NO_APP
 917 04d0 13050020 		li	a0,512
 918 04d4 97000000 		call	_ZN5Riscv6mc_sipEm
 918      E7800000 
 919              	.LVL82:
 920              	.LBE29:
 921              	.LBE28:
 922              	.LBE27:
 923              	.LBE34:
 924              		.loc 3 211 1
 925 04dc 6F00400F 		j	.L50
 926              	.LVL83:
 927              	.L42:
 928              	.LBB35:
 929              	.LBB32:
 930              	.LBB30:
 192:src/interruptRoutine.cpp ****     } else if (scause == 0x8000000000000001) {
 931              		.loc 3 192 12 is_stmt 1
 932 04e0 033784FD 		ld	a4,-40(s0)
 933 04e4 9307F0FF 		li	a5,-1
 934 04e8 9397F703 		slli	a5,a5,63
 935 04ec 93871700 		addi	a5,a5,1
 936 04f0 6314F708 		bne	a4,a5,.L45
 194:src/interruptRoutine.cpp ****         Scheduler::wake();
 937              		.loc 3 194 9
 194:src/interruptRoutine.cpp ****         Scheduler::wake();
 938              		.loc 3 194 24 is_stmt 0
 939 04f4 97000000 		call	_ZN9Scheduler4wakeEv@plt
 939      E7800000 
GAS LISTING /tmp/cc8S9ckH.s 			page 24


 940              	.LVL84:
 195:src/interruptRoutine.cpp ****         TCB::getRunningTimeSlice()++;
 941              		.loc 3 195 9 is_stmt 1
 195:src/interruptRoutine.cpp ****         TCB::getRunningTimeSlice()++;
 942              		.loc 3 195 34 is_stmt 0
 943 04fc 97000000 		call	_ZN3TCB19getRunningTimeSliceEv
 943      E7800000 
 944              	.LVL85:
 945 0504 93070500 		mv	a5,a0
 195:src/interruptRoutine.cpp ****         TCB::getRunningTimeSlice()++;
 946              		.loc 3 195 33
 947 0508 03B70700 		ld	a4,0(a5)
 195:src/interruptRoutine.cpp ****         TCB::getRunningTimeSlice()++;
 948              		.loc 3 195 35
 949 050c 13071700 		addi	a4,a4,1
 950 0510 23B0E700 		sd	a4,0(a5)
 196:src/interruptRoutine.cpp ****         if (TCB::getRunningTimeSlice() >= TCB::getRunning()->getTimeSlice()) {
 951              		.loc 3 196 9 is_stmt 1
 196:src/interruptRoutine.cpp ****         if (TCB::getRunningTimeSlice() >= TCB::getRunning()->getTimeSlice()) {
 952              		.loc 3 196 38 is_stmt 0
 953 0514 97000000 		call	_ZN3TCB19getRunningTimeSliceEv
 953      E7800000 
 954              	.LVL86:
 955 051c 93070500 		mv	a5,a0
 196:src/interruptRoutine.cpp ****         if (TCB::getRunningTimeSlice() >= TCB::getRunning()->getTimeSlice()) {
 956              		.loc 3 196 37
 957 0520 83B40700 		ld	s1,0(a5)
 196:src/interruptRoutine.cpp ****         if (TCB::getRunningTimeSlice() >= TCB::getRunning()->getTimeSlice()) {
 958              		.loc 3 196 74
 959 0524 97000000 		call	_ZN3TCB10getRunningEv
 959      E7800000 
 960              	.LVL87:
 961 052c 93070500 		mv	a5,a0
 962 0530 13850700 		mv	a0,a5
 963 0534 97000000 		call	_ZN3TCB12getTimeSliceEv
 963      E7800000 
 964              	.LVL88:
 965 053c 93070500 		mv	a5,a0
 196:src/interruptRoutine.cpp ****         if (TCB::getRunningTimeSlice() >= TCB::getRunning()->getTimeSlice()) {
 966              		.loc 3 196 40
 967 0540 B3B7F400 		sltu	a5,s1,a5
 968 0544 93C71700 		xori	a5,a5,1
 969 0548 93F7F70F 		andi	a5,a5,0xff
 196:src/interruptRoutine.cpp ****         if (TCB::getRunningTimeSlice() >= TCB::getRunning()->getTimeSlice()) {
 970              		.loc 3 196 9
 971 054c 63860700 		beqz	a5,.L46
 197:src/interruptRoutine.cpp ****             TCB::dispatch();
 972              		.loc 3 197 13 is_stmt 1
 197:src/interruptRoutine.cpp ****             TCB::dispatch();
 973              		.loc 3 197 26 is_stmt 0
 974 0550 97000000 		call	_ZN3TCB8dispatchEv@plt
 974      E7800000 
 975              	.LVL89:
 976              	.L46:
 199:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 977              		.loc 3 199 9 is_stmt 1
 199:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
GAS LISTING /tmp/cc8S9ckH.s 			page 25


 978              		.loc 3 199 66 is_stmt 0
 979 0558 833704FD 		ld	a5,-48(s0)
 980              	#APP
 981              	# 199 "src/interruptRoutine.cpp" 1
 200:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 982              		csrw sepc, a5
 983              	# 0 "" 2
 984              		.loc 3 200 9 is_stmt 1
 200:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 985              		.loc 3 200 71 is_stmt 0
 986              	#NO_APP
 987 0560 833784FC 		ld	a5,-56(s0)
 988              	#APP
 989              	# 200 "src/interruptRoutine.cpp" 1
 201:src/interruptRoutine.cpp ****         Riscv::mc_sip(Riscv::SIP_SSIP);
 990              		csrw sstatus, a5
 991              	# 0 "" 2
 992              		.loc 3 201 9 is_stmt 1
 201:src/interruptRoutine.cpp ****         Riscv::mc_sip(Riscv::SIP_SSIP);
 993              		.loc 3 201 22 is_stmt 0
 994              	#NO_APP
 995 0568 13052000 		li	a0,2
 996 056c 97000000 		call	_ZN5Riscv6mc_sipEm
 996      E7800000 
 997              	.LVL90:
 998              	.LBE30:
 999              	.LBE32:
 1000              	.LBE35:
 1001              		.loc 3 211 1
 1002 0574 6F00C005 		j	.L50
 1003              	.LVL91:
 1004              	.L45:
 1005              	.LBB36:
 1006              	.LBB33:
 1007              	.LBB31:
 203:src/interruptRoutine.cpp ****         printString("\nGreska u prekidnoj rutini\n");
 1008              		.loc 3 203 9 is_stmt 1
 203:src/interruptRoutine.cpp ****         printString("\nGreska u prekidnoj rutini\n");
 1009              		.loc 3 203 20 is_stmt 0
 1010 0578 17050000 		lla	a0,.LC4
 1010      13050500 
 1011 0580 97000000 		call	_Z11printStringPKc@plt
 1011      E7800000 
 1012              	.LVL92:
 204:src/interruptRoutine.cpp ****         printString("scause: ");
 1013              		.loc 3 204 9 is_stmt 1
 204:src/interruptRoutine.cpp ****         printString("scause: ");
 1014              		.loc 3 204 20 is_stmt 0
 1015 0588 17050000 		lla	a0,.LC5
 1015      13050500 
 1016 0590 97000000 		call	_Z11printStringPKc@plt
 1016      E7800000 
 1017              	.LVL93:
 205:src/interruptRoutine.cpp ****         kPrintInt(scause);
 1018              		.loc 3 205 9 is_stmt 1
 205:src/interruptRoutine.cpp ****         kPrintInt(scause);
 1019              		.loc 3 205 18 is_stmt 0
GAS LISTING /tmp/cc8S9ckH.s 			page 26


 1020 0598 033584FD 		ld	a0,-40(s0)
 1021 059c 97000000 		call	_Z9kPrintIntm@plt
 1021      E7800000 
 1022              	.LVL94:
 206:src/interruptRoutine.cpp ****         printString("\nsepc: ");
 1023              		.loc 3 206 9 is_stmt 1
 206:src/interruptRoutine.cpp ****         printString("\nsepc: ");
 1024              		.loc 3 206 20 is_stmt 0
 1025 05a4 17050000 		lla	a0,.LC2
 1025      13050500 
 1026 05ac 97000000 		call	_Z11printStringPKc@plt
 1026      E7800000 
 1027              	.LVL95:
 207:src/interruptRoutine.cpp ****         kPrintInt(sepc);
 1028              		.loc 3 207 9 is_stmt 1
 207:src/interruptRoutine.cpp ****         kPrintInt(sepc);
 1029              		.loc 3 207 18 is_stmt 0
 1030 05b4 033504FD 		ld	a0,-48(s0)
 1031 05b8 97000000 		call	_Z9kPrintIntm@plt
 1031      E7800000 
 1032              	.LVL96:
 208:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 1033              		.loc 3 208 9 is_stmt 1
 208:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 1034              		.loc 3 208 66 is_stmt 0
 1035 05c0 833704FD 		ld	a5,-48(s0)
 1036              	#APP
 1037              	# 208 "src/interruptRoutine.cpp" 1
 209:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 1038              		csrw sepc, a5
 1039              	# 0 "" 2
 1040              		.loc 3 209 9 is_stmt 1
 209:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 1041              		.loc 3 209 71 is_stmt 0
 1042              	#NO_APP
 1043 05c8 833784FC 		ld	a5,-56(s0)
 1044              	#APP
 1045              	# 209 "src/interruptRoutine.cpp" 1
 1046              		csrw sstatus, a5
 1047              	# 0 "" 2
 1048              	#NO_APP
 1049              	.L50:
 1050              	.LBE31:
 1051              	.LBE33:
 1052              	.LBE36:
 1053              		.loc 3 211 1
 1054 05d0 13000000 		nop
 1055 05d4 83308106 		ld	ra,104(sp)
 1056              		.cfi_restore 1
 1057 05d8 03340106 		ld	s0,96(sp)
 1058              		.cfi_restore 8
 1059              		.cfi_def_cfa 2, 112
 1060              	.LVL97:
 1061 05dc 83348105 		ld	s1,88(sp)
 1062              		.cfi_restore 9
 1063 05e0 13010107 		addi	sp,sp,112
 1064              		.cfi_def_cfa_offset 0
GAS LISTING /tmp/cc8S9ckH.s 			page 27


 1065              	.LVL98:
 1066 05e4 67800000 		jr	ra
 1067              		.cfi_endproc
 1068              	.LFE51:
 1070              		.section	.text._ZN5Riscv6mc_sipEm,"axG",@progbits,_ZN5Riscv6mc_sipEm,comdat
 1071              		.align	2
 1072              		.weak	_ZN5Riscv6mc_sipEm
 1074              	_ZN5Riscv6mc_sipEm:
 1075              	.LFB7:
 1076              		.file 4 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 5/17/23.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJEKAT2023_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJEKAT2023_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** class Riscv {
  11:src/../h/Riscv.hpp **** public:
  12:src/../h/Riscv.hpp **** 
  13:src/../h/Riscv.hpp **** 	static void returnFromInterrupt();
  14:src/../h/Riscv.hpp **** 
  15:src/../h/Riscv.hpp **** 	//read scause
  16:src/../h/Riscv.hpp **** 	static uint64 r_scause();
  17:src/../h/Riscv.hpp **** 
  18:src/../h/Riscv.hpp **** 	//write scause
  19:src/../h/Riscv.hpp **** 	static void w_scause(uint64 scause);
  20:src/../h/Riscv.hpp **** 
  21:src/../h/Riscv.hpp **** 	//read sepc
  22:src/../h/Riscv.hpp **** 	static uint64 r_sepc();
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp **** 	//write sepc
  25:src/../h/Riscv.hpp **** 	static void w_sepc(uint64 sepc);
  26:src/../h/Riscv.hpp **** 
  27:src/../h/Riscv.hpp **** 	//read stvec
  28:src/../h/Riscv.hpp **** 	static uint64 r_stvec();
  29:src/../h/Riscv.hpp **** 
  30:src/../h/Riscv.hpp **** 	//write stvec
  31:src/../h/Riscv.hpp **** 	static void w_stvec(uint64 stvec);
  32:src/../h/Riscv.hpp **** 
  33:src/../h/Riscv.hpp **** 	enum BitMaskSip {
  34:src/../h/Riscv.hpp **** 		//postoji zahtev za softverski prekid
  35:src/../h/Riscv.hpp **** 		SIP_SSIP = (1 << 1),
  36:src/../h/Riscv.hpp **** 		//postoji prekid od tajmera
  37:src/../h/Riscv.hpp **** 		SIP_STIP = (1 << 5),
  38:src/../h/Riscv.hpp **** 		//postoji zahtev za spoljasnji hardverski prekid
  39:src/../h/Riscv.hpp **** 		SIP_SEIP = (1 << 9)
  40:src/../h/Riscv.hpp **** 	};
  41:src/../h/Riscv.hpp **** 
  42:src/../h/Riscv.hpp **** 	//mask set sip
  43:src/../h/Riscv.hpp **** 	static void ms_sip(uint64 mask);
  44:src/../h/Riscv.hpp **** 
  45:src/../h/Riscv.hpp **** 	//mask clear sip
  46:src/../h/Riscv.hpp **** 	static void mc_sip(uint64 mask);
  47:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/cc8S9ckH.s 			page 28


  48:src/../h/Riscv.hpp **** 	//read sip
  49:src/../h/Riscv.hpp **** 	static uint64 r_sip();
  50:src/../h/Riscv.hpp **** 
  51:src/../h/Riscv.hpp **** 	//write sip
  52:src/../h/Riscv.hpp **** 	static void w_sip(uint64 sip);
  53:src/../h/Riscv.hpp **** 
  54:src/../h/Riscv.hpp **** 	//kada se pozove sret, SIE dobija vrednost SPIE, SPIE se postavlja na 1,
  55:src/../h/Riscv.hpp **** 	//rezim se postavlja na osnovu SPP bita, SPP se postavlja na 0
  56:src/../h/Riscv.hpp **** 	enum BitMaskSstatus {
  57:src/../h/Riscv.hpp **** 		//1 - dozvoljeni prekidi; 0- nedozvoljeni prekidi; igonrise se u korisnickom rezimu
  58:src/../h/Riscv.hpp **** 		SSTATUS_SIE = (1 << 1),
  59:src/../h/Riscv.hpp **** 		//prethodna vrednost bita SIE
  60:src/../h/Riscv.hpp **** 		SSTATUS_SPIE = (1 << 5),
  61:src/../h/Riscv.hpp **** 		//iz kog rezima se desio skok; 0 - iz korisnickog; 1 - iz sistemskog
  62:src/../h/Riscv.hpp **** 		SSTATUS_SPP = (1 << 8)
  63:src/../h/Riscv.hpp **** 	};
  64:src/../h/Riscv.hpp **** 
  65:src/../h/Riscv.hpp **** 	//mask set sstatus
  66:src/../h/Riscv.hpp **** 	static void ms_sstatus(uint64 mask);
  67:src/../h/Riscv.hpp **** 
  68:src/../h/Riscv.hpp **** 	//mask clear sstatus
  69:src/../h/Riscv.hpp **** 	static void mc_sstatus(uint64 mask);
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp **** 	//read sstatus
  72:src/../h/Riscv.hpp **** 	static uint64 r_sstatus();
  73:src/../h/Riscv.hpp **** 
  74:src/../h/Riscv.hpp **** 	//write sstatus
  75:src/../h/Riscv.hpp **** 	static void w_sstatus(uint64 sstatus);
  76:src/../h/Riscv.hpp **** 
  77:src/../h/Riscv.hpp **** 	//upisuje kod sistemskog poziva u registar a0
  78:src/../h/Riscv.hpp **** 	static void loadOpCode(uint64 opCode);
  79:src/../h/Riscv.hpp **** 
  80:src/../h/Riscv.hpp **** };
  81:src/../h/Riscv.hpp **** 
  82:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause() {
  83:src/../h/Riscv.hpp **** 	uint64 volatile scause;
  84:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[scause], scause": [scause] "=r"(scause));
  85:src/../h/Riscv.hpp **** 	return scause;
  86:src/../h/Riscv.hpp **** }
  87:src/../h/Riscv.hpp **** 
  88:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
  89:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw scause, %[scause]": :[scause] "r"(scause));
  90:src/../h/Riscv.hpp **** }
  91:src/../h/Riscv.hpp **** 
  92:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc() {
  93:src/../h/Riscv.hpp **** 	uint64 volatile sepc;
  94:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[sepc], sepc": [sepc] "=r"(sepc));
  95:src/../h/Riscv.hpp **** 	return sepc;
  96:src/../h/Riscv.hpp **** }
  97:src/../h/Riscv.hpp **** 
  98:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
  99:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 100:src/../h/Riscv.hpp **** }
 101:src/../h/Riscv.hpp **** 
 102:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec() {
 103:src/../h/Riscv.hpp **** 	uint64 volatile stvec;
 104:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[stvec], stvec": [stvec] "=r"(stvec));
GAS LISTING /tmp/cc8S9ckH.s 			page 29


 105:src/../h/Riscv.hpp **** 	return stvec;
 106:src/../h/Riscv.hpp **** }
 107:src/../h/Riscv.hpp **** 
 108:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 109:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw stvec, %[stvec]": :[stvec] "r"(stvec));
 110:src/../h/Riscv.hpp **** }
 111:src/../h/Riscv.hpp **** 
 112:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 113:src/../h/Riscv.hpp **** 	__asm__ volatile("csrs sip, %[mask]": :[mask] "r"(mask));
 114:src/../h/Riscv.hpp **** }
 115:src/../h/Riscv.hpp **** 
 116:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 1077              		.loc 4 116 40 is_stmt 1
 1078              		.cfi_startproc
 1079              	.LVL99:
 1080 0000 130101FF 		addi	sp,sp,-16
 1081              		.cfi_def_cfa_offset 16
 1082 0004 23348100 		sd	s0,8(sp)
 1083              		.cfi_offset 8, -8
 1084 0008 13040101 		addi	s0,sp,16
 1085              		.cfi_def_cfa 8, 0
 117:src/../h/Riscv.hpp **** 	__asm__ volatile("csrc sip, %[mask]": :[mask] "r"(mask));
 1086              		.loc 4 117 2
 1087              		.loc 4 117 58 is_stmt 0
 1088              	#APP
 1089              	# 117 "src/../h/Riscv.hpp" 1
 118              	}
 1090              		csrc sip, a0
 1091              	# 0 "" 2
 1092              		.loc 4 118 1
 1093              	#NO_APP
 1094 0010 03348100 		ld	s0,8(sp)
 1095              		.cfi_restore 8
 1096              		.cfi_def_cfa 2, 16
 1097 0014 13010101 		addi	sp,sp,16
 1098              		.cfi_def_cfa_offset 0
 1099 0018 67800000 		jr	ra
 1100              		.cfi_endproc
 1101              	.LFE7:
 1103              		.section	.text._ZN3TCB9setStatusENS_12ThreadStatusE,"axG",@progbits,_ZN3TCB9setStatusENS_12ThreadS
 1104              		.align	2
 1105              		.weak	_ZN3TCB9setStatusENS_12ThreadStatusE
 1107              	_ZN3TCB9setStatusENS_12ThreadStatusE:
 1108              	.LFB36:
 1109              		.file 5 "src/../h/TCB.hpp"
   1:src/../h/TCB.hpp **** //
   2:src/../h/TCB.hpp **** // Created by os on 5/23/23.
   3:src/../h/TCB.hpp **** //
   4:src/../h/TCB.hpp **** 
   5:src/../h/TCB.hpp **** #ifndef PROJEKAT2023_TCB_HPP
   6:src/../h/TCB.hpp **** #define PROJEKAT2023_TCB_HPP
   7:src/../h/TCB.hpp **** 
   8:src/../h/TCB.hpp **** #include "../lib/hw.h"
   9:src/../h/TCB.hpp **** #include "../h/ThreadQueue.hpp"
  10:src/../h/TCB.hpp **** 
  11:src/../h/TCB.hpp **** int main();
  12:src/../h/TCB.hpp **** class TCB {
GAS LISTING /tmp/cc8S9ckH.s 			page 30


  13:src/../h/TCB.hpp **** public:
  14:src/../h/TCB.hpp ****     friend class Scheduler;
  15:src/../h/TCB.hpp **** 
  16:src/../h/TCB.hpp ****     using Body = void (*)(void*);
  17:src/../h/TCB.hpp **** 
  18:src/../h/TCB.hpp ****     enum ThreadStatus {
  19:src/../h/TCB.hpp ****         CREATED, ACTIVE, BLOCKED, JOINING, SLEEPING, FINISHED
  20:src/../h/TCB.hpp ****     };
  21:src/../h/TCB.hpp **** 
  22:src/../h/TCB.hpp ****     void setStatus(ThreadStatus stat) { this->status = stat; }
 1110              		.loc 5 22 10 is_stmt 1
 1111              		.cfi_startproc
 1112              	.LVL100:
 1113 0000 130101FF 		addi	sp,sp,-16
 1114              		.cfi_def_cfa_offset 16
 1115 0004 23348100 		sd	s0,8(sp)
 1116              		.cfi_offset 8, -8
 1117 0008 13040101 		addi	s0,sp,16
 1118              		.cfi_def_cfa 8, 0
 1119              		.loc 5 22 41
 1120              		.loc 5 22 54 is_stmt 0
 1121 000c 232CB504 		sw	a1,88(a0)
 1122              		.loc 5 22 62
 1123 0010 03348100 		ld	s0,8(sp)
 1124              		.cfi_restore 8
 1125              		.cfi_def_cfa 2, 16
 1126 0014 13010101 		addi	sp,sp,16
 1127              		.cfi_def_cfa_offset 0
 1128 0018 67800000 		jr	ra
 1129              		.cfi_endproc
 1130              	.LFE36:
 1132              		.section	.text._ZN3TCB12getTimeSliceEv,"axG",@progbits,_ZN3TCB12getTimeSliceEv,comdat
 1133              		.align	2
 1134              		.weak	_ZN3TCB12getTimeSliceEv
 1136              	_ZN3TCB12getTimeSliceEv:
 1137              	.LFB38:
  23:src/../h/TCB.hpp **** 
  24:src/../h/TCB.hpp ****     ThreadStatus getStatus() { return this->status; }
  25:src/../h/TCB.hpp **** 
  26:src/../h/TCB.hpp ****     static TCB* createThread(Body function, void* args, uint64* stack);
  27:src/../h/TCB.hpp **** 
  28:src/../h/TCB.hpp ****     static void start(TCB* newTcb);
  29:src/../h/TCB.hpp **** 
  30:src/../h/TCB.hpp ****     uint64 getTimeSlice() { return timeSlice; }
 1138              		.loc 5 30 12 is_stmt 1
 1139              		.cfi_startproc
 1140              	.LVL101:
 1141 0000 130101FF 		addi	sp,sp,-16
 1142              		.cfi_def_cfa_offset 16
 1143 0004 23348100 		sd	s0,8(sp)
 1144              		.cfi_offset 8, -8
 1145 0008 13040101 		addi	s0,sp,16
 1146              		.cfi_def_cfa 8, 0
 1147              		.loc 5 30 29
 1148              		.loc 5 30 47 is_stmt 0
 1149 000c 03358502 		ld	a0,40(a0)
 1150              	.LVL102:
GAS LISTING /tmp/cc8S9ckH.s 			page 31


 1151 0010 03348100 		ld	s0,8(sp)
 1152              		.cfi_restore 8
 1153              		.cfi_def_cfa 2, 16
 1154 0014 13010101 		addi	sp,sp,16
 1155              		.cfi_def_cfa_offset 0
 1156 0018 67800000 		jr	ra
 1157              		.cfi_endproc
 1158              	.LFE38:
 1160              		.section	.text._ZN3TCB7getBodyEv,"axG",@progbits,_ZN3TCB7getBodyEv,comdat
 1161              		.align	2
 1162              		.weak	_ZN3TCB7getBodyEv
 1164              	_ZN3TCB7getBodyEv:
 1165              	.LFB40:
  31:src/../h/TCB.hpp **** 
  32:src/../h/TCB.hpp ****     void setTimeSlice(uint64 value) { timeSlice = value; }
  33:src/../h/TCB.hpp **** 
  34:src/../h/TCB.hpp ****     Body getBody() { return threadFunction; }
 1166              		.loc 5 34 10 is_stmt 1
 1167              		.cfi_startproc
 1168              	.LVL103:
 1169 0000 130101FF 		addi	sp,sp,-16
 1170              		.cfi_def_cfa_offset 16
 1171 0004 23348100 		sd	s0,8(sp)
 1172              		.cfi_offset 8, -8
 1173 0008 13040101 		addi	s0,sp,16
 1174              		.cfi_def_cfa 8, 0
 1175              		.loc 5 34 22
 1176              		.loc 5 34 45 is_stmt 0
 1177 000c 03350501 		ld	a0,16(a0)
 1178              	.LVL104:
 1179 0010 03348100 		ld	s0,8(sp)
 1180              		.cfi_restore 8
 1181              		.cfi_def_cfa 2, 16
 1182 0014 13010101 		addi	sp,sp,16
 1183              		.cfi_def_cfa_offset 0
 1184 0018 67800000 		jr	ra
 1185              		.cfi_endproc
 1186              	.LFE40:
 1188              		.section	.text._ZN3TCB10getRunningEv,"axG",@progbits,_ZN3TCB10getRunningEv,comdat
 1189              		.align	2
 1190              		.weak	_ZN3TCB10getRunningEv
 1192              	_ZN3TCB10getRunningEv:
 1193              	.LFB41:
  35:src/../h/TCB.hpp **** 
  36:src/../h/TCB.hpp ****     static TCB* getRunning() { return running; }
 1194              		.loc 5 36 17 is_stmt 1
 1195              		.cfi_startproc
 1196 0000 130101FF 		addi	sp,sp,-16
 1197              		.cfi_def_cfa_offset 16
 1198 0004 23348100 		sd	s0,8(sp)
 1199              		.cfi_offset 8, -8
 1200 0008 13040101 		addi	s0,sp,16
 1201              		.cfi_def_cfa 8, 0
 1202              		.loc 5 36 32
 1203              		.loc 5 36 48 is_stmt 0
 1204 000c 97070000 		la	a5,_ZN3TCB7runningE
 1204      83B70700 
GAS LISTING /tmp/cc8S9ckH.s 			page 32


 1205 0014 03B50700 		ld	a0,0(a5)
 1206 0018 03348100 		ld	s0,8(sp)
 1207              		.cfi_restore 8
 1208              		.cfi_def_cfa 2, 16
 1209 001c 13010101 		addi	sp,sp,16
 1210              		.cfi_def_cfa_offset 0
 1211 0020 67800000 		jr	ra
 1212              		.cfi_endproc
 1213              	.LFE41:
 1215              		.section	.text._ZN3TCB19getRunningTimeSliceEv,"axG",@progbits,_ZN3TCB19getRunningTimeSliceEv,comda
 1216              		.align	2
 1217              		.weak	_ZN3TCB19getRunningTimeSliceEv
 1219              	_ZN3TCB19getRunningTimeSliceEv:
 1220              	.LFB43:
  37:src/../h/TCB.hpp **** 
  38:src/../h/TCB.hpp ****     static void setRunning(TCB* newRunning) { running = newRunning; }
  39:src/../h/TCB.hpp **** 
  40:src/../h/TCB.hpp ****     static uint64 &getRunningTimeSlice() { return runningTimeSlice; }
 1221              		.loc 5 40 20 is_stmt 1
 1222              		.cfi_startproc
 1223 0000 130101FF 		addi	sp,sp,-16
 1224              		.cfi_def_cfa_offset 16
 1225 0004 23348100 		sd	s0,8(sp)
 1226              		.cfi_offset 8, -8
 1227 0008 13040101 		addi	s0,sp,16
 1228              		.cfi_def_cfa 8, 0
 1229              		.loc 5 40 44
 1230              		.loc 5 40 69 is_stmt 0
 1231 000c 17050000 		la	a0,_ZN3TCB16runningTimeSliceE
 1231      03350500 
 1232 0014 03348100 		ld	s0,8(sp)
 1233              		.cfi_restore 8
 1234              		.cfi_def_cfa 2, 16
 1235 0018 13010101 		addi	sp,sp,16
 1236              		.cfi_def_cfa_offset 0
 1237 001c 67800000 		jr	ra
 1238              		.cfi_endproc
 1239              	.LFE43:
 1241              		.text
 1242              	.Letext0:
 1243              		.file 6 "src/../lib/hw.h"
 1244              		.file 7 "src/../h/KMemory.hpp"
 1245              		.file 8 "src/../h/../h/../h/syscall_c.hpp"
 1246              		.file 9 "src/../h/KConsole.hpp"
 1247              		.file 10 "src/../h/Scheduler.hpp"
 1248              		.file 11 "src/../h/../test/printing.hpp"
 1249              		.file 12 "src/../h/../h/helper.hpp"
 5837              		.align	3
 5840              	DW.ref.__gxx_personality_v0:
 5841 0000 00000000 		.dword	__gxx_personality_v0
 5841      00000000 
 5842              		.ident	"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04) 9.4.0"
 5843              		.section	.note.GNU-stack,"",@progbits
GAS LISTING /tmp/cc8S9ckH.s 			page 33


DEFINED SYMBOLS
                            *ABS*:0000000000000000 interruptRoutine.cpp
     /tmp/cc8S9ckH.s:10     .text._ZN4KSemD2Ev:0000000000000000 _ZN4KSemD2Ev
     /tmp/cc8S9ckH.s:14     .text._ZN4KSemD2Ev:0000000000000000 .L0 
     /tmp/cc8S9ckH.s:5840   .data.rel.local.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/cc8S9ckH.s:18     .text._ZN4KSemD2Ev:0000000000000000 .L0 
     /tmp/cc8S9ckH.s:19     .text._ZN4KSemD2Ev:0000000000000004 .L0 
     /tmp/cc8S9ckH.s:23     .text._ZN4KSemD2Ev:0000000000000010 .L0 
     /tmp/cc8S9ckH.s:24     .text._ZN4KSemD2Ev:0000000000000010 .L0 
     /tmp/cc8S9ckH.s:25     .text._ZN4KSemD2Ev:0000000000000010 .L0 
     /tmp/cc8S9ckH.s:27     .text._ZN4KSemD2Ev:0000000000000014 .L0 
     /tmp/cc8S9ckH.s:35     .text._ZN4KSemD2Ev:0000000000000018 .L0 
     /tmp/cc8S9ckH.s:38     .text._ZN4KSemD2Ev:0000000000000018 .L0 
     /tmp/cc8S9ckH.s:39     .text._ZN4KSemD2Ev:0000000000000018 .L0 
     /tmp/cc8S9ckH.s:40     .text._ZN4KSemD2Ev:0000000000000018 .L0 
     /tmp/cc8S9ckH.s:45     .text._ZN4KSemD2Ev:000000000000001c .L0 
     /tmp/cc8S9ckH.s:49     .text._ZN4KSemD2Ev:0000000000000020 .L0 
     /tmp/cc8S9ckH.s:50     .text._ZN4KSemD2Ev:0000000000000020 .L0 
     /tmp/cc8S9ckH.s:51     .text._ZN4KSemD2Ev:0000000000000020 .L0 
     /tmp/cc8S9ckH.s:53     .text._ZN4KSemD2Ev:0000000000000024 .L0 
     /tmp/cc8S9ckH.s:55     .text._ZN4KSemD2Ev:0000000000000028 .L0 
     /tmp/cc8S9ckH.s:56     .text._ZN4KSemD2Ev:0000000000000028 .L0 
     /tmp/cc8S9ckH.s:61     .text._ZN4KSemD2Ev:000000000000002c .L0 
     /tmp/cc8S9ckH.s:62     .text._ZN4KSemD2Ev:000000000000002c .L0 
     /tmp/cc8S9ckH.s:65     .text._ZN4KSemD2Ev:0000000000000034 .L0 
     /tmp/cc8S9ckH.s:73     .text._ZN4KSemD2Ev:0000000000000038 .L0 
     /tmp/cc8S9ckH.s:74     .text._ZN4KSemD2Ev:000000000000003c .L0 
     /tmp/cc8S9ckH.s:76     .text._ZN4KSemD2Ev:0000000000000040 .L0 
     /tmp/cc8S9ckH.s:77     .text._ZN4KSemD2Ev:0000000000000040 .L0 
     /tmp/cc8S9ckH.s:79     .text._ZN4KSemD2Ev:0000000000000044 .L0 
     /tmp/cc8S9ckH.s:82     .text._ZN4KSemD2Ev:0000000000000048 .L0 
     /tmp/cc8S9ckH.s:84     .text._ZN4KSemD2Ev:000000000000004c .L0 
     /tmp/cc8S9ckH.s:10     .text._ZN4KSemD2Ev:0000000000000000 _ZN4KSemD1Ev
     /tmp/cc8S9ckH.s:120    .text:0000000000000000 interruptRoutine
     /tmp/cc8S9ckH.s:124    .text:0000000000000000 .L0 
     /tmp/cc8S9ckH.s:125    .text:0000000000000000 .L0 
     /tmp/cc8S9ckH.s:126    .text:0000000000000004 .L0 
     /tmp/cc8S9ckH.s:130    .text:0000000000000010 .L0 
     /tmp/cc8S9ckH.s:131    .text:0000000000000010 .L0 
     /tmp/cc8S9ckH.s:132    .text:0000000000000010 .L0 
     /tmp/cc8S9ckH.s:134    .text:0000000000000014 .L0 
     /tmp/cc8S9ckH.s:136    .text:0000000000000014 .L0 
     /tmp/cc8S9ckH.s:137    .text:0000000000000014 .L0 
src/interruptRoutine.cpp:19     .text:0000000000000014 .L0 
     /tmp/cc8S9ckH.s:146    .text:000000000000001c .L0 
src/interruptRoutine.cpp:20     .text:000000000000001c .L0 
     /tmp/cc8S9ckH.s:156    .text:0000000000000024 .L0 
src/interruptRoutine.cpp:21     .text:0000000000000024 .L0 
     /tmp/cc8S9ckH.s:166    .text:000000000000002c .L0 
     /tmp/cc8S9ckH.s:167    .text:000000000000002c .L0 
src/interruptRoutine.cpp:26     .text:000000000000002c .L0 
     /tmp/cc8S9ckH.s:177    .text:0000000000000034 .L0 
src/interruptRoutine.cpp:27     .text:0000000000000034 .L0 
     /tmp/cc8S9ckH.s:187    .text:000000000000003c .L0 
src/interruptRoutine.cpp:28     .text:000000000000003c .L0 
     /tmp/cc8S9ckH.s:197    .text:0000000000000044 .L0 
src/interruptRoutine.cpp:29     .text:0000000000000044 .L0 
GAS LISTING /tmp/cc8S9ckH.s 			page 34


     /tmp/cc8S9ckH.s:207    .text:000000000000004c .L0 
src/interruptRoutine.cpp:30     .text:000000000000004c .L0 
     /tmp/cc8S9ckH.s:218    .text:0000000000000054 .L0 
     /tmp/cc8S9ckH.s:222    .text:0000000000000060 .L0 
     /tmp/cc8S9ckH.s:227    .text:000000000000006c .L0 
     /tmp/cc8S9ckH.s:335    .text:00000000000000f8 .L0 
     /tmp/cc8S9ckH.s:336    .text:00000000000000f8 .L0 
     /tmp/cc8S9ckH.s:337    .text:00000000000000f8 .L0 
     /tmp/cc8S9ckH.s:341    .text:0000000000000104 .L0 
src/interruptRoutine.cpp:42     .text:0000000000000104 .L0 
     /tmp/cc8S9ckH.s:348    .text:0000000000000108 .L0 
     /tmp/cc8S9ckH.s:352    .text:000000000000010c .L0 
     /tmp/cc8S9ckH.s:353    .text:000000000000010c .L0 
     /tmp/cc8S9ckH.s:354    .text:000000000000010c .L0 
     /tmp/cc8S9ckH.s:359    .text:000000000000011c .L0 
src/interruptRoutine.cpp:48     .text:000000000000011c .L0 
     /tmp/cc8S9ckH.s:366    .text:0000000000000120 .L0 
     /tmp/cc8S9ckH.s:370    .text:0000000000000124 .L0 
     /tmp/cc8S9ckH.s:371    .text:0000000000000124 .L0 
     /tmp/cc8S9ckH.s:372    .text:0000000000000124 .L0 
     /tmp/cc8S9ckH.s:376    .text:0000000000000130 .L0 
     /tmp/cc8S9ckH.s:378    .text:0000000000000134 .L0 
     /tmp/cc8S9ckH.s:385    .text:000000000000014c .L0 
     /tmp/cc8S9ckH.s:387    .text:0000000000000150 .L0 
     /tmp/cc8S9ckH.s:388    .text:0000000000000150 .L0 
     /tmp/cc8S9ckH.s:391    .text:0000000000000158 .L0 
     /tmp/cc8S9ckH.s:393    .text:000000000000015c .L0 
     /tmp/cc8S9ckH.s:394    .text:000000000000015c .L0 
     /tmp/cc8S9ckH.s:396    .text:0000000000000160 .L0 
     /tmp/cc8S9ckH.s:399    .text:000000000000016c .L0 
     /tmp/cc8S9ckH.s:400    .text:000000000000016c .L0 
     /tmp/cc8S9ckH.s:407    .text:0000000000000180 .L0 
src/interruptRoutine.cpp:61     .text:0000000000000180 .L0 
     /tmp/cc8S9ckH.s:416    .text:0000000000000188 .L0 
src/interruptRoutine.cpp:63     .text:0000000000000188 .L0 
     /tmp/cc8S9ckH.s:424    .text:000000000000018c .L0 
src/interruptRoutine.cpp:65     .text:000000000000018c .L0 
     /tmp/cc8S9ckH.s:431    .text:0000000000000190 .L0 
     /tmp/cc8S9ckH.s:435    .text:0000000000000194 .L0 
     /tmp/cc8S9ckH.s:436    .text:0000000000000194 .L0 
     /tmp/cc8S9ckH.s:1192   .text._ZN3TCB10getRunningEv:0000000000000000 _ZN3TCB10getRunningEv
     /tmp/cc8S9ckH.s:437    .text:0000000000000194 .L0 
     /tmp/cc8S9ckH.s:1107   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000000 _ZN3TCB9setStatusENS_12ThreadStatusE
     /tmp/cc8S9ckH.s:445    .text:00000000000001b0 .L0 
     /tmp/cc8S9ckH.s:446    .text:00000000000001b0 .L0 
     /tmp/cc8S9ckH.s:449    .text:00000000000001b8 .L0 
src/interruptRoutine.cpp:71     .text:00000000000001b8 .L0 
     /tmp/cc8S9ckH.s:455    .text:00000000000001bc .L0 
src/interruptRoutine.cpp:72     .text:00000000000001bc .L0 
     /tmp/cc8S9ckH.s:460    .text:00000000000001c0 .L0 
     /tmp/cc8S9ckH.s:462    .text:00000000000001c0 .L0 
     /tmp/cc8S9ckH.s:465    .text:00000000000001c8 .L0 
     /tmp/cc8S9ckH.s:469    .text:00000000000001cc .L0 
     /tmp/cc8S9ckH.s:470    .text:00000000000001cc .L0 
     /tmp/cc8S9ckH.s:471    .text:00000000000001cc .L0 
     /tmp/cc8S9ckH.s:474    .text:00000000000001d4 .L0 
     /tmp/cc8S9ckH.s:478    .text:00000000000001d8 .L0 
GAS LISTING /tmp/cc8S9ckH.s 			page 35


     /tmp/cc8S9ckH.s:479    .text:00000000000001d8 .L0 
     /tmp/cc8S9ckH.s:480    .text:00000000000001d8 .L0 
     /tmp/cc8S9ckH.s:485    .text:00000000000001e8 .L0 
     /tmp/cc8S9ckH.s:486    .text:00000000000001e8 .L0 
     /tmp/cc8S9ckH.s:489    .text:00000000000001f0 .L0 
     /tmp/cc8S9ckH.s:493    .text:00000000000001f4 .L0 
     /tmp/cc8S9ckH.s:494    .text:00000000000001f4 .L0 
     /tmp/cc8S9ckH.s:495    .text:00000000000001f4 .L0 
     /tmp/cc8S9ckH.s:498    .text:00000000000001fc .L0 
     /tmp/cc8S9ckH.s:500    .text:0000000000000200 .L0 
     /tmp/cc8S9ckH.s:505    .text:0000000000000210 .L0 
     /tmp/cc8S9ckH.s:507    .text:0000000000000214 .L0 
     /tmp/cc8S9ckH.s:508    .text:0000000000000214 .L0 
     /tmp/cc8S9ckH.s:511    .text:000000000000021c .L0 
     /tmp/cc8S9ckH.s:513    .text:0000000000000220 .L0 
src/interruptRoutine.cpp:90     .text:0000000000000220 .L0 
     /tmp/cc8S9ckH.s:522    .text:0000000000000228 .L0 
src/interruptRoutine.cpp:92     .text:0000000000000228 .L0 
     /tmp/cc8S9ckH.s:530    .text:000000000000022c .L0 
src/interruptRoutine.cpp:94     .text:000000000000022c .L0 
     /tmp/cc8S9ckH.s:537    .text:0000000000000230 .L0 
     /tmp/cc8S9ckH.s:541    .text:0000000000000234 .L0 
     /tmp/cc8S9ckH.s:542    .text:0000000000000234 .L0 
     /tmp/cc8S9ckH.s:543    .text:0000000000000234 .L0 
     /tmp/cc8S9ckH.s:548    .text:0000000000000244 .L0 
src/interruptRoutine.cpp:100    .text:0000000000000244 .L0 
     /tmp/cc8S9ckH.s:554    .text:0000000000000248 .L0 
     /tmp/cc8S9ckH.s:556    .text:0000000000000248 .L0 
     /tmp/cc8S9ckH.s:558    .text:000000000000024c .L0 
     /tmp/cc8S9ckH.s:560    .text:0000000000000250 .L0 
     /tmp/cc8S9ckH.s:567    .text:0000000000000268 .L0 
     /tmp/cc8S9ckH.s:571    .text:000000000000026c .L0 
     /tmp/cc8S9ckH.s:572    .text:000000000000026c .L0 
     /tmp/cc8S9ckH.s:573    .text:000000000000026c .L0 
     /tmp/cc8S9ckH.s:578    .text:000000000000027c .L0 
src/interruptRoutine.cpp:107    .text:000000000000027c .L0 
     /tmp/cc8S9ckH.s:585    .text:0000000000000280 .L0 
     /tmp/cc8S9ckH.s:589    .text:0000000000000284 .L0 
     /tmp/cc8S9ckH.s:590    .text:0000000000000284 .L0 
     /tmp/cc8S9ckH.s:591    .text:0000000000000284 .L0 
     /tmp/cc8S9ckH.s:596    .text:0000000000000294 .L0 
src/interruptRoutine.cpp:113    .text:0000000000000294 .L0 
     /tmp/cc8S9ckH.s:603    .text:0000000000000298 .L0 
     /tmp/cc8S9ckH.s:607    .text:000000000000029c .L0 
     /tmp/cc8S9ckH.s:608    .text:000000000000029c .L0 
     /tmp/cc8S9ckH.s:611    .text:00000000000002a4 .L0 
src/interruptRoutine.cpp:119    .text:00000000000002a4 .L0 
     /tmp/cc8S9ckH.s:620    .text:00000000000002ac .L0 
src/interruptRoutine.cpp:121    .text:00000000000002ac .L0 
     /tmp/cc8S9ckH.s:628    .text:00000000000002b0 .L0 
src/interruptRoutine.cpp:123    .text:00000000000002b0 .L0 
     /tmp/cc8S9ckH.s:635    .text:00000000000002b4 .L0 
     /tmp/cc8S9ckH.s:638    .text:00000000000002bc .L0 
     /tmp/cc8S9ckH.s:639    .text:00000000000002bc .L0 
     /tmp/cc8S9ckH.s:647    .text:00000000000002d8 .L0 
     /tmp/cc8S9ckH.s:648    .text:00000000000002d8 .L0 
     /tmp/cc8S9ckH.s:651    .text:00000000000002e0 .L0 
GAS LISTING /tmp/cc8S9ckH.s 			page 36


     /tmp/cc8S9ckH.s:655    .text:00000000000002e4 .L0 
     /tmp/cc8S9ckH.s:656    .text:00000000000002e4 .L0 
     /tmp/cc8S9ckH.s:657    .text:00000000000002e4 .L0 
     /tmp/cc8S9ckH.s:660    .text:00000000000002ec .L0 
src/interruptRoutine.cpp:132    .text:00000000000002ec .L0 
     /tmp/cc8S9ckH.s:667    .text:00000000000002f0 .L0 
     /tmp/cc8S9ckH.s:671    .text:00000000000002f4 .L0 
     /tmp/cc8S9ckH.s:672    .text:00000000000002f4 .L0 
     /tmp/cc8S9ckH.s:673    .text:00000000000002f4 .L0 
     /tmp/cc8S9ckH.s:679    .text:0000000000000308 .L0 
     /tmp/cc8S9ckH.s:683    .text:000000000000030c .L0 
     /tmp/cc8S9ckH.s:684    .text:000000000000030c .L0 
     /tmp/cc8S9ckH.s:685    .text:000000000000030c .L0 
     /tmp/cc8S9ckH.s:689    .text:0000000000000318 .L0 
     /tmp/cc8S9ckH.s:691    .text:000000000000031c .L0 
     /tmp/cc8S9ckH.s:698    .text:0000000000000334 .L0 
     /tmp/cc8S9ckH.s:700    .text:0000000000000338 .L0 
     /tmp/cc8S9ckH.s:701    .text:0000000000000338 .L0 
     /tmp/cc8S9ckH.s:704    .text:0000000000000340 .L0 
     /tmp/cc8S9ckH.s:706    .text:0000000000000344 .L0 
src/interruptRoutine.cpp:147    .text:0000000000000344 .L0 
     /tmp/cc8S9ckH.s:715    .text:000000000000034c .L0 
src/interruptRoutine.cpp:149    .text:000000000000034c .L0 
     /tmp/cc8S9ckH.s:723    .text:0000000000000350 .L0 
src/interruptRoutine.cpp:151    .text:0000000000000350 .L0 
     /tmp/cc8S9ckH.s:730    .text:0000000000000354 .L0 
     /tmp/cc8S9ckH.s:734    .text:0000000000000358 .L0 
     /tmp/cc8S9ckH.s:735    .text:0000000000000358 .L0 
     /tmp/cc8S9ckH.s:736    .text:0000000000000358 .L0 
     /tmp/cc8S9ckH.s:1164   .text._ZN3TCB7getBodyEv:0000000000000000 _ZN3TCB7getBodyEv
     /tmp/cc8S9ckH.s:742    .text:000000000000036c .L0 
     /tmp/cc8S9ckH.s:747    .text:0000000000000380 .L0 
     /tmp/cc8S9ckH.s:749    .text:0000000000000384 .L0 
     /tmp/cc8S9ckH.s:750    .text:0000000000000384 .L0 
     /tmp/cc8S9ckH.s:755    .text:0000000000000394 .L0 
     /tmp/cc8S9ckH.s:759    .text:0000000000000398 .L0 
     /tmp/cc8S9ckH.s:760    .text:0000000000000398 .L0 
     /tmp/cc8S9ckH.s:761    .text:0000000000000398 .L0 
     /tmp/cc8S9ckH.s:765    .text:00000000000003a4 .L0 
     /tmp/cc8S9ckH.s:769    .text:00000000000003a8 .L0 
     /tmp/cc8S9ckH.s:770    .text:00000000000003a8 .L0 
     /tmp/cc8S9ckH.s:771    .text:00000000000003a8 .L0 
     /tmp/cc8S9ckH.s:775    .text:00000000000003b8 .L0 
     /tmp/cc8S9ckH.s:776    .text:00000000000003b8 .L0 
     /tmp/cc8S9ckH.s:780    .text:00000000000003c4 .L0 
     /tmp/cc8S9ckH.s:781    .text:00000000000003c4 .L0 
     /tmp/cc8S9ckH.s:785    .text:00000000000003d4 .L0 
     /tmp/cc8S9ckH.s:786    .text:00000000000003d4 .L0 
     /tmp/cc8S9ckH.s:790    .text:00000000000003e0 .L0 
     /tmp/cc8S9ckH.s:791    .text:00000000000003e0 .L0 
     /tmp/cc8S9ckH.s:795    .text:00000000000003f0 .L0 
     /tmp/cc8S9ckH.s:796    .text:00000000000003f0 .L0 
     /tmp/cc8S9ckH.s:800    .text:00000000000003fc .L0 
     /tmp/cc8S9ckH.s:803    .text:0000000000000400 .L0 
     /tmp/cc8S9ckH.s:807    .text:0000000000000408 .L0 
     /tmp/cc8S9ckH.s:811    .text:0000000000000410 .L0 
     /tmp/cc8S9ckH.s:814    .text:0000000000000414 .L0 
GAS LISTING /tmp/cc8S9ckH.s 			page 37


     /tmp/cc8S9ckH.s:815    .text:0000000000000414 .L0 
     /tmp/cc8S9ckH.s:820    .text:0000000000000420 .L0 
     /tmp/cc8S9ckH.s:821    .text:0000000000000420 .L0 
     /tmp/cc8S9ckH.s:827    .text:0000000000000428 .L0 
     /tmp/cc8S9ckH.s:829    .text:0000000000000428 .L0 
     /tmp/cc8S9ckH.s:838    .text:0000000000000430 .L0 
     /tmp/cc8S9ckH.s:845    .text:0000000000000434 .L0 
     /tmp/cc8S9ckH.s:853    .text:0000000000000448 .L0 
     /tmp/cc8S9ckH.s:854    .text:0000000000000448 .L0 
     /tmp/cc8S9ckH.s:858    .text:0000000000000454 .L0 
     /tmp/cc8S9ckH.s:861    .text:0000000000000458 .L0 
     /tmp/cc8S9ckH.s:865    .text:0000000000000464 .L0 
     /tmp/cc8S9ckH.s:866    .text:0000000000000464 .L0 
     /tmp/cc8S9ckH.s:870    .text:0000000000000474 .L0 
     /tmp/cc8S9ckH.s:872    .text:0000000000000478 .L0 
     /tmp/cc8S9ckH.s:874    .text:000000000000047c .L0 
     /tmp/cc8S9ckH.s:875    .text:000000000000047c .L0 
     /tmp/cc8S9ckH.s:886    .text:000000000000049c .L0 
     /tmp/cc8S9ckH.s:887    .text:000000000000049c .L0 
     /tmp/cc8S9ckH.s:893    .text:00000000000004ac .L0 
     /tmp/cc8S9ckH.s:894    .text:00000000000004ac .L0 
     /tmp/cc8S9ckH.s:900    .text:00000000000004c0 .L0 
     /tmp/cc8S9ckH.s:901    .text:00000000000004c0 .L0 
     /tmp/cc8S9ckH.s:907    .text:00000000000004c8 .L0 
     /tmp/cc8S9ckH.s:909    .text:00000000000004c8 .L0 
     /tmp/cc8S9ckH.s:915    .text:00000000000004d0 .L0 
     /tmp/cc8S9ckH.s:917    .text:00000000000004d0 .L0 
     /tmp/cc8S9ckH.s:1074   .text._ZN5Riscv6mc_sipEm:0000000000000000 _ZN5Riscv6mc_sipEm
     /tmp/cc8S9ckH.s:925    .text:00000000000004dc .L0 
     /tmp/cc8S9ckH.s:932    .text:00000000000004e0 .L0 
     /tmp/cc8S9ckH.s:938    .text:00000000000004f4 .L0 
     /tmp/cc8S9ckH.s:939    .text:00000000000004f4 .L0 
     /tmp/cc8S9ckH.s:942    .text:00000000000004fc .L0 
     /tmp/cc8S9ckH.s:1219   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000000 _ZN3TCB19getRunningTimeSliceEv
     /tmp/cc8S9ckH.s:943    .text:00000000000004fc .L0 
     /tmp/cc8S9ckH.s:947    .text:0000000000000508 .L0 
     /tmp/cc8S9ckH.s:949    .text:000000000000050c .L0 
     /tmp/cc8S9ckH.s:952    .text:0000000000000514 .L0 
     /tmp/cc8S9ckH.s:953    .text:0000000000000514 .L0 
     /tmp/cc8S9ckH.s:957    .text:0000000000000520 .L0 
     /tmp/cc8S9ckH.s:959    .text:0000000000000524 .L0 
     /tmp/cc8S9ckH.s:1136   .text._ZN3TCB12getTimeSliceEv:0000000000000000 _ZN3TCB12getTimeSliceEv
     /tmp/cc8S9ckH.s:967    .text:0000000000000540 .L0 
     /tmp/cc8S9ckH.s:971    .text:000000000000054c .L0 
     /tmp/cc8S9ckH.s:973    .text:0000000000000550 .L0 
     /tmp/cc8S9ckH.s:974    .text:0000000000000550 .L0 
     /tmp/cc8S9ckH.s:978    .text:0000000000000558 .L0 
     /tmp/cc8S9ckH.s:979    .text:0000000000000558 .L0 
     /tmp/cc8S9ckH.s:985    .text:0000000000000560 .L0 
     /tmp/cc8S9ckH.s:987    .text:0000000000000560 .L0 
     /tmp/cc8S9ckH.s:993    .text:0000000000000568 .L0 
     /tmp/cc8S9ckH.s:995    .text:0000000000000568 .L0 
     /tmp/cc8S9ckH.s:1002   .text:0000000000000574 .L0 
     /tmp/cc8S9ckH.s:1009   .text:0000000000000578 .L0 
     /tmp/cc8S9ckH.s:1010   .text:0000000000000578 .L0 
     /tmp/cc8S9ckH.s:1014   .text:0000000000000588 .L0 
     /tmp/cc8S9ckH.s:1015   .text:0000000000000588 .L0 
GAS LISTING /tmp/cc8S9ckH.s 			page 38


     /tmp/cc8S9ckH.s:1019   .text:0000000000000598 .L0 
     /tmp/cc8S9ckH.s:1020   .text:0000000000000598 .L0 
     /tmp/cc8S9ckH.s:1024   .text:00000000000005a4 .L0 
     /tmp/cc8S9ckH.s:1025   .text:00000000000005a4 .L0 
     /tmp/cc8S9ckH.s:1029   .text:00000000000005b4 .L0 
     /tmp/cc8S9ckH.s:1030   .text:00000000000005b4 .L0 
     /tmp/cc8S9ckH.s:1034   .text:00000000000005c0 .L0 
     /tmp/cc8S9ckH.s:1035   .text:00000000000005c0 .L0 
     /tmp/cc8S9ckH.s:1041   .text:00000000000005c8 .L0 
     /tmp/cc8S9ckH.s:1043   .text:00000000000005c8 .L0 
     /tmp/cc8S9ckH.s:1054   .text:00000000000005d0 .L0 
     /tmp/cc8S9ckH.s:1056   .text:00000000000005d8 .L0 
     /tmp/cc8S9ckH.s:1058   .text:00000000000005dc .L0 
     /tmp/cc8S9ckH.s:1059   .text:00000000000005dc .L0 
     /tmp/cc8S9ckH.s:1062   .text:00000000000005e0 .L0 
     /tmp/cc8S9ckH.s:1064   .text:00000000000005e4 .L0 
     /tmp/cc8S9ckH.s:1067   .text:00000000000005e8 .L0 
     /tmp/cc8S9ckH.s:1078   .text._ZN5Riscv6mc_sipEm:0000000000000000 .L0 
     /tmp/cc8S9ckH.s:1080   .text._ZN5Riscv6mc_sipEm:0000000000000000 .L0 
     /tmp/cc8S9ckH.s:1081   .text._ZN5Riscv6mc_sipEm:0000000000000004 .L0 
     /tmp/cc8S9ckH.s:1083   .text._ZN5Riscv6mc_sipEm:0000000000000008 .L0 
     /tmp/cc8S9ckH.s:1085   .text._ZN5Riscv6mc_sipEm:000000000000000c .L0 
     /tmp/cc8S9ckH.s:1087   .text._ZN5Riscv6mc_sipEm:000000000000000c .L0 
  src/../h/Riscv.hpp:117    .text._ZN5Riscv6mc_sipEm:000000000000000c .L0 
     /tmp/cc8S9ckH.s:1094   .text._ZN5Riscv6mc_sipEm:0000000000000010 .L0 
     /tmp/cc8S9ckH.s:1095   .text._ZN5Riscv6mc_sipEm:0000000000000014 .L0 
     /tmp/cc8S9ckH.s:1096   .text._ZN5Riscv6mc_sipEm:0000000000000014 .L0 
     /tmp/cc8S9ckH.s:1098   .text._ZN5Riscv6mc_sipEm:0000000000000018 .L0 
     /tmp/cc8S9ckH.s:1100   .text._ZN5Riscv6mc_sipEm:000000000000001c .L0 
     /tmp/cc8S9ckH.s:1111   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000000 .L0 
     /tmp/cc8S9ckH.s:1113   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000000 .L0 
     /tmp/cc8S9ckH.s:1114   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000004 .L0 
     /tmp/cc8S9ckH.s:1116   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000008 .L0 
     /tmp/cc8S9ckH.s:1118   .text._ZN3TCB9setStatusENS_12ThreadStatusE:000000000000000c .L0 
     /tmp/cc8S9ckH.s:1120   .text._ZN3TCB9setStatusENS_12ThreadStatusE:000000000000000c .L0 
     /tmp/cc8S9ckH.s:1121   .text._ZN3TCB9setStatusENS_12ThreadStatusE:000000000000000c .L0 
     /tmp/cc8S9ckH.s:1123   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000010 .L0 
     /tmp/cc8S9ckH.s:1124   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000014 .L0 
     /tmp/cc8S9ckH.s:1125   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000014 .L0 
     /tmp/cc8S9ckH.s:1127   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000018 .L0 
     /tmp/cc8S9ckH.s:1129   .text._ZN3TCB9setStatusENS_12ThreadStatusE:000000000000001c .L0 
     /tmp/cc8S9ckH.s:1139   .text._ZN3TCB12getTimeSliceEv:0000000000000000 .L0 
     /tmp/cc8S9ckH.s:1141   .text._ZN3TCB12getTimeSliceEv:0000000000000000 .L0 
     /tmp/cc8S9ckH.s:1142   .text._ZN3TCB12getTimeSliceEv:0000000000000004 .L0 
     /tmp/cc8S9ckH.s:1144   .text._ZN3TCB12getTimeSliceEv:0000000000000008 .L0 
     /tmp/cc8S9ckH.s:1146   .text._ZN3TCB12getTimeSliceEv:000000000000000c .L0 
     /tmp/cc8S9ckH.s:1148   .text._ZN3TCB12getTimeSliceEv:000000000000000c .L0 
     /tmp/cc8S9ckH.s:1149   .text._ZN3TCB12getTimeSliceEv:000000000000000c .L0 
     /tmp/cc8S9ckH.s:1152   .text._ZN3TCB12getTimeSliceEv:0000000000000014 .L0 
     /tmp/cc8S9ckH.s:1153   .text._ZN3TCB12getTimeSliceEv:0000000000000014 .L0 
     /tmp/cc8S9ckH.s:1155   .text._ZN3TCB12getTimeSliceEv:0000000000000018 .L0 
     /tmp/cc8S9ckH.s:1157   .text._ZN3TCB12getTimeSliceEv:000000000000001c .L0 
     /tmp/cc8S9ckH.s:1167   .text._ZN3TCB7getBodyEv:0000000000000000 .L0 
     /tmp/cc8S9ckH.s:1169   .text._ZN3TCB7getBodyEv:0000000000000000 .L0 
     /tmp/cc8S9ckH.s:1170   .text._ZN3TCB7getBodyEv:0000000000000004 .L0 
     /tmp/cc8S9ckH.s:1172   .text._ZN3TCB7getBodyEv:0000000000000008 .L0 
     /tmp/cc8S9ckH.s:1174   .text._ZN3TCB7getBodyEv:000000000000000c .L0 
GAS LISTING /tmp/cc8S9ckH.s 			page 39


     /tmp/cc8S9ckH.s:1176   .text._ZN3TCB7getBodyEv:000000000000000c .L0 
     /tmp/cc8S9ckH.s:1177   .text._ZN3TCB7getBodyEv:000000000000000c .L0 
     /tmp/cc8S9ckH.s:1180   .text._ZN3TCB7getBodyEv:0000000000000014 .L0 
     /tmp/cc8S9ckH.s:1181   .text._ZN3TCB7getBodyEv:0000000000000014 .L0 
     /tmp/cc8S9ckH.s:1183   .text._ZN3TCB7getBodyEv:0000000000000018 .L0 
     /tmp/cc8S9ckH.s:1185   .text._ZN3TCB7getBodyEv:000000000000001c .L0 
     /tmp/cc8S9ckH.s:1195   .text._ZN3TCB10getRunningEv:0000000000000000 .L0 
     /tmp/cc8S9ckH.s:1196   .text._ZN3TCB10getRunningEv:0000000000000000 .L0 
     /tmp/cc8S9ckH.s:1197   .text._ZN3TCB10getRunningEv:0000000000000004 .L0 
     /tmp/cc8S9ckH.s:1199   .text._ZN3TCB10getRunningEv:0000000000000008 .L0 
     /tmp/cc8S9ckH.s:1201   .text._ZN3TCB10getRunningEv:000000000000000c .L0 
     /tmp/cc8S9ckH.s:1203   .text._ZN3TCB10getRunningEv:000000000000000c .L0 
     /tmp/cc8S9ckH.s:1204   .text._ZN3TCB10getRunningEv:000000000000000c .L0 
     /tmp/cc8S9ckH.s:1207   .text._ZN3TCB10getRunningEv:000000000000001c .L0 
     /tmp/cc8S9ckH.s:1208   .text._ZN3TCB10getRunningEv:000000000000001c .L0 
     /tmp/cc8S9ckH.s:1210   .text._ZN3TCB10getRunningEv:0000000000000020 .L0 
     /tmp/cc8S9ckH.s:1212   .text._ZN3TCB10getRunningEv:0000000000000024 .L0 
     /tmp/cc8S9ckH.s:1222   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000000 .L0 
     /tmp/cc8S9ckH.s:1223   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000000 .L0 
     /tmp/cc8S9ckH.s:1224   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000004 .L0 
     /tmp/cc8S9ckH.s:1226   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000008 .L0 
     /tmp/cc8S9ckH.s:1228   .text._ZN3TCB19getRunningTimeSliceEv:000000000000000c .L0 
     /tmp/cc8S9ckH.s:1230   .text._ZN3TCB19getRunningTimeSliceEv:000000000000000c .L0 
     /tmp/cc8S9ckH.s:1231   .text._ZN3TCB19getRunningTimeSliceEv:000000000000000c .L0 
     /tmp/cc8S9ckH.s:1233   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000018 .L0 
     /tmp/cc8S9ckH.s:1234   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000018 .L0 
     /tmp/cc8S9ckH.s:1236   .text._ZN3TCB19getRunningTimeSliceEv:000000000000001c .L0 
     /tmp/cc8S9ckH.s:1238   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000020 .L0 
     /tmp/cc8S9ckH.s:97     .text._ZN4KSemD2Ev:000000000000004c .L0 
     /tmp/cc8S9ckH.s:1250   .text:00000000000005e8 .L0 
     /tmp/cc8S9ckH.s:1103   .text._ZN5Riscv6mc_sipEm:000000000000001c .L0 
     /tmp/cc8S9ckH.s:1132   .text._ZN3TCB9setStatusENS_12ThreadStatusE:000000000000001c .L0 
     /tmp/cc8S9ckH.s:1160   .text._ZN3TCB12getTimeSliceEv:000000000000001c .L0 
     /tmp/cc8S9ckH.s:1188   .text._ZN3TCB7getBodyEv:000000000000001c .L0 
     /tmp/cc8S9ckH.s:1215   .text._ZN3TCB10getRunningEv:0000000000000024 .L0 
     /tmp/cc8S9ckH.s:1241   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000020 .L0 
     /tmp/cc8S9ckH.s:259    .rodata:0000000000000074 .L14
     /tmp/cc8S9ckH.s:249    .text:00000000000000c4 .L0 
     /tmp/cc8S9ckH.s:253    .text:00000000000000d8 .L0 
     /tmp/cc8S9ckH.s:396    .text:0000000000000160 .L0 
     /tmp/cc8S9ckH.s:742    .text:000000000000036c .L0 
     /tmp/cc8S9ckH.s:99     .rodata:0000000000000000 .LC0
     /tmp/cc8S9ckH.s:771    .text:00000000000003a8 .L0 
     /tmp/cc8S9ckH.s:102    .rodata:0000000000000018 .LC1
     /tmp/cc8S9ckH.s:781    .text:00000000000003c4 .L0 
     /tmp/cc8S9ckH.s:105    .rodata:0000000000000028 .LC2
     /tmp/cc8S9ckH.s:791    .text:00000000000003e0 .L0 
     /tmp/cc8S9ckH.s:866    .text:0000000000000464 .L0 
     /tmp/cc8S9ckH.s:875    .text:000000000000047c .L0 
     /tmp/cc8S9ckH.s:108    .rodata:0000000000000030 .LC3
     /tmp/cc8S9ckH.s:887    .text:000000000000049c .L0 
     /tmp/cc8S9ckH.s:111    .rodata:0000000000000048 .LC4
     /tmp/cc8S9ckH.s:1010   .text:0000000000000578 .L0 
     /tmp/cc8S9ckH.s:114    .rodata:0000000000000068 .LC5
     /tmp/cc8S9ckH.s:1015   .text:0000000000000588 .L0 
     /tmp/cc8S9ckH.s:1025   .text:00000000000005a4 .L0 
     /tmp/cc8S9ckH.s:225    .text:000000000000006c .L7
GAS LISTING /tmp/cc8S9ckH.s 			page 40


     /tmp/cc8S9ckH.s:840    .text:0000000000000434 .L8
     /tmp/cc8S9ckH.s:757    .text:0000000000000398 .L9
     /tmp/cc8S9ckH.s:767    .text:00000000000003a8 .L10
     /tmp/cc8S9ckH.s:732    .text:0000000000000358 .L11
     /tmp/cc8S9ckH.s:328    .text:00000000000000e8 .L12
     /tmp/cc8S9ckH.s:681    .text:000000000000030c .L27
     /tmp/cc8S9ckH.s:812    .text:0000000000000414 .L28
     /tmp/cc8S9ckH.s:414    .text:0000000000000188 .L29
     /tmp/cc8S9ckH.s:405    .text:0000000000000180 .L30
     /tmp/cc8S9ckH.s:422    .text:000000000000018c .L31
     /tmp/cc8S9ckH.s:520    .text:0000000000000228 .L32
     /tmp/cc8S9ckH.s:528    .text:000000000000022c .L33
     /tmp/cc8S9ckH.s:801    .text:0000000000000400 .L47
     /tmp/cc8S9ckH.s:618    .text:00000000000002ac .L35
     /tmp/cc8S9ckH.s:626    .text:00000000000002b0 .L36
     /tmp/cc8S9ckH.s:805    .text:0000000000000408 .L48
     /tmp/cc8S9ckH.s:713    .text:000000000000034c .L38
     /tmp/cc8S9ckH.s:721    .text:0000000000000350 .L39
     /tmp/cc8S9ckH.s:809    .text:0000000000000410 .L49
     /tmp/cc8S9ckH.s:1049   .text:00000000000005d0 .L50
     /tmp/cc8S9ckH.s:927    .text:00000000000004e0 .L42
     /tmp/cc8S9ckH.s:884    .text:000000000000049c .L43
     /tmp/cc8S9ckH.s:891    .text:00000000000004ac .L44
     /tmp/cc8S9ckH.s:1004   .text:0000000000000578 .L45
     /tmp/cc8S9ckH.s:976    .text:0000000000000558 .L46
     /tmp/cc8S9ckH.s:66     .text._ZN4KSemD2Ev:0000000000000038 .L1
     /tmp/cc8S9ckH.s:30     .text._ZN4KSemD2Ev:0000000000000018 .L3
     /tmp/cc8S9ckH.s:333    .text:00000000000000f8 .L26
     /tmp/cc8S9ckH.s:350    .text:000000000000010c .L25
     /tmp/cc8S9ckH.s:368    .text:0000000000000124 .L24
     /tmp/cc8S9ckH.s:433    .text:0000000000000194 .L23
     /tmp/cc8S9ckH.s:467    .text:00000000000001cc .L22
     /tmp/cc8S9ckH.s:476    .text:00000000000001d8 .L21
     /tmp/cc8S9ckH.s:491    .text:00000000000001f4 .L20
     /tmp/cc8S9ckH.s:539    .text:0000000000000234 .L19
     /tmp/cc8S9ckH.s:569    .text:000000000000026c .L18
     /tmp/cc8S9ckH.s:587    .text:0000000000000284 .L17
     /tmp/cc8S9ckH.s:605    .text:000000000000029c .L16
     /tmp/cc8S9ckH.s:653    .text:00000000000002e4 .L15
     /tmp/cc8S9ckH.s:669    .text:00000000000002f4 .L13
     /tmp/cc8S9ckH.s:1204   .text._ZN3TCB10getRunningEv:000000000000000c .L0 
     /tmp/cc8S9ckH.s:1231   .text._ZN3TCB19getRunningTimeSliceEv:000000000000000c .L0 
     /tmp/cc8S9ckH.s:3505   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cc8S9ckH.s:5740   .debug_str:0000000000000ab5 .LASF225
     /tmp/cc8S9ckH.s:5620   .debug_str:0000000000000762 .LASF226
     /tmp/cc8S9ckH.s:5686   .debug_str:000000000000094e .LASF227
     /tmp/cc8S9ckH.s:5340   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/cc8S9ckH.s:5360   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cc8S9ckH.s:5654   .debug_str:0000000000000855 .LASF3
     /tmp/cc8S9ckH.s:5518   .debug_str:000000000000046c .LASF0
     /tmp/cc8S9ckH.s:5544   .debug_str:000000000000051f .LASF1
     /tmp/cc8S9ckH.s:5666   .debug_str:00000000000008ba .LASF2
     /tmp/cc8S9ckH.s:5464   .debug_str:00000000000002d8 .LASF4
     /tmp/cc8S9ckH.s:5680   .debug_str:000000000000092d .LASF5
     /tmp/cc8S9ckH.s:5530   .debug_str:00000000000004b4 .LASF6
     /tmp/cc8S9ckH.s:5378   .debug_str:0000000000000074 .LASF7
     /tmp/cc8S9ckH.s:5628   .debug_str:00000000000007aa .LASF8
GAS LISTING /tmp/cc8S9ckH.s 			page 41


     /tmp/cc8S9ckH.s:5618   .debug_str:000000000000074f .LASF9
     /tmp/cc8S9ckH.s:5534   .debug_str:00000000000004d8 .LASF10
     /tmp/cc8S9ckH.s:5488   .debug_str:000000000000037a .LASF11
     /tmp/cc8S9ckH.s:5502   .debug_str:00000000000003e7 .LASF12
     /tmp/cc8S9ckH.s:5412   .debug_str:000000000000015d .LASF13
     /tmp/cc8S9ckH.s:5474   .debug_str:0000000000000328 .LASF14
     /tmp/cc8S9ckH.s:5428   .debug_str:00000000000001c3 .LASF15
     /tmp/cc8S9ckH.s:5410   .debug_str:000000000000014d .LASF16
     /tmp/cc8S9ckH.s:5712   .debug_str:0000000000000a02 .LASF17
     /tmp/cc8S9ckH.s:5460   .debug_str:00000000000002a4 .LASF18
     /tmp/cc8S9ckH.s:5698   .debug_str:00000000000009b3 .LASF19
     /tmp/cc8S9ckH.s:5796   .debug_str:0000000000000cef .LASF51
     /tmp/cc8S9ckH.s:5650   .debug_str:0000000000000840 .LASF71
     /tmp/cc8S9ckH.s:5550   .debug_str:0000000000000545 .LASF20
     /tmp/cc8S9ckH.s:5384   .debug_str:0000000000000099 .LASF21
     /tmp/cc8S9ckH.s:5808   .debug_str:0000000000000d3e .LASF22
     /tmp/cc8S9ckH.s:5572   .debug_str:00000000000005d6 .LASF53
     /tmp/cc8S9ckH.s:5772   .debug_str:0000000000000c50 .LASF55
     /tmp/cc8S9ckH.s:5770   .debug_str:0000000000000c47 .LASF23
     /tmp/cc8S9ckH.s:5760   .debug_str:0000000000000be6 .LASF25
     /tmp/cc8S9ckH.s:5662   .debug_str:00000000000008a6 .LASF27
     /tmp/cc8S9ckH.s:5604   .debug_str:00000000000006d9 .LASF29
     /tmp/cc8S9ckH.s:5636   .debug_str:00000000000007cb .LASF24
     /tmp/cc8S9ckH.s:5644   .debug_str:0000000000000804 .LASF26
     /tmp/cc8S9ckH.s:5592   .debug_str:000000000000067d .LASF28
     /tmp/cc8S9ckH.s:5536   .debug_str:00000000000004eb .LASF30
     /tmp/cc8S9ckH.s:5806   .debug_str:0000000000000d36 .LASF31
     /tmp/cc8S9ckH.s:5744   .debug_str:0000000000000b7e .LASF32
     /tmp/cc8S9ckH.s:5586   .debug_str:000000000000065a .LASF33
     /tmp/cc8S9ckH.s:5602   .debug_str:00000000000006c5 .LASF34
     /tmp/cc8S9ckH.s:5708   .debug_str:00000000000009ee .LASF35
     /tmp/cc8S9ckH.s:5682   .debug_str:0000000000000934 .LASF36
     /tmp/cc8S9ckH.s:5684   .debug_str:0000000000000947 .LASF37
     /tmp/cc8S9ckH.s:5418   .debug_str:000000000000017b .LASF38
     /tmp/cc8S9ckH.s:5456   .debug_str:0000000000000291 .LASF39
     /tmp/cc8S9ckH.s:5510   .debug_str:000000000000043f .LASF40
     /tmp/cc8S9ckH.s:5524   .debug_str:0000000000000498 .LASF41
     /tmp/cc8S9ckH.s:5442   .debug_str:000000000000024a .LASF42
     /tmp/cc8S9ckH.s:5380   .debug_str:000000000000007b .LASF43
     /tmp/cc8S9ckH.s:5670   .debug_str:00000000000008d2 .LASF44
     /tmp/cc8S9ckH.s:5664   .debug_str:00000000000008af .LASF45
     /tmp/cc8S9ckH.s:5828   .debug_str:0000000000000def .LASF46
     /tmp/cc8S9ckH.s:5798   .debug_str:0000000000000cf5 .LASF47
     /tmp/cc8S9ckH.s:5810   .debug_str:0000000000000d47 .LASF48
     /tmp/cc8S9ckH.s:5792   .debug_str:0000000000000ccf .LASF49
     /tmp/cc8S9ckH.s:5570   .debug_str:00000000000005c0 .LASF50
     /tmp/cc8S9ckH.s:5752   .debug_str:0000000000000bc1 .LASF65
     /tmp/cc8S9ckH.s:5434   .debug_str:0000000000000203 .LASF67
     /tmp/cc8S9ckH.s:5468   .debug_str:00000000000002fa .LASF52
     /tmp/cc8S9ckH.s:5404   .debug_str:000000000000011d .LASF54
     /tmp/cc8S9ckH.s:5638   .debug_str:00000000000007d2 .LASF56
     /tmp/cc8S9ckH.s:5478   .debug_str:000000000000034f .LASF57
     /tmp/cc8S9ckH.s:5492   .debug_str:0000000000000390 .LASF59
     /tmp/cc8S9ckH.s:5482   .debug_str:000000000000035c .LASF58
     /tmp/cc8S9ckH.s:5522   .debug_str:0000000000000483 .LASF60
     /tmp/cc8S9ckH.s:5514   .debug_str:000000000000045a .LASF61
     /tmp/cc8S9ckH.s:5566   .debug_str:00000000000005a7 .LASF62
GAS LISTING /tmp/cc8S9ckH.s 			page 42


     /tmp/cc8S9ckH.s:5672   .debug_str:00000000000008ea .LASF63
     /tmp/cc8S9ckH.s:5642   .debug_str:00000000000007fa .LASF64
     /tmp/cc8S9ckH.s:5612   .debug_str:000000000000071d .LASF66
     /tmp/cc8S9ckH.s:5774   .debug_str:0000000000000c71 .LASF68
     /tmp/cc8S9ckH.s:5562   .debug_str:0000000000000590 .LASF69
     /tmp/cc8S9ckH.s:5790   .debug_str:0000000000000cc6 .LASF70
     /tmp/cc8S9ckH.s:5692   .debug_str:0000000000000982 .LASF72
     /tmp/cc8S9ckH.s:5634   .debug_str:00000000000007c3 .LASF73
     /tmp/cc8S9ckH.s:5440   .debug_str:0000000000000243 .LASF74
     /tmp/cc8S9ckH.s:5362   .debug_str:0000000000000000 .LASF75
     /tmp/cc8S9ckH.s:5494   .debug_str:00000000000003a6 .LASF76
     /tmp/cc8S9ckH.s:5540   .debug_str:000000000000050e .LASF77
     /tmp/cc8S9ckH.s:5402   .debug_str:0000000000000114 .LASF78
     /tmp/cc8S9ckH.s:5722   .debug_str:0000000000000a3c .LASF148
     /tmp/cc8S9ckH.s:5416   .debug_str:0000000000000171 .LASF79
     /tmp/cc8S9ckH.s:5504   .debug_str:00000000000003f5 .LASF80
     /tmp/cc8S9ckH.s:5652   .debug_str:000000000000084b .LASF85
     /tmp/cc8S9ckH.s:5558   .debug_str:0000000000000571 .LASF87
     /tmp/cc8S9ckH.s:5710   .debug_str:00000000000009f5 .LASF81
     /tmp/cc8S9ckH.s:5804   .debug_str:0000000000000d14 .LASF82
     /tmp/cc8S9ckH.s:5610   .debug_str:0000000000000718 .LASF228
     /tmp/cc8S9ckH.s:5818   .debug_str:0000000000000da1 .LASF83
     /tmp/cc8S9ckH.s:5532   .debug_str:00000000000004c6 .LASF84
     /tmp/cc8S9ckH.s:5568   .debug_str:00000000000005b3 .LASF86
     /tmp/cc8S9ckH.s:5648   .debug_str:0000000000000828 .LASF88
     /tmp/cc8S9ckH.s:5446   .debug_str:0000000000000265 .LASF89
     /tmp/cc8S9ckH.s:5676   .debug_str:0000000000000907 .LASF90
     /tmp/cc8S9ckH.s:5640   .debug_str:00000000000007f2 .LASF91
     /tmp/cc8S9ckH.s:5564   .debug_str:0000000000000595 .LASF92
     /tmp/cc8S9ckH.s:5452   .debug_str:0000000000000280 .LASF93
     /tmp/cc8S9ckH.s:5696   .debug_str:000000000000099d .LASF94
     /tmp/cc8S9ckH.s:5366   .debug_str:0000000000000011 .LASF95
     /tmp/cc8S9ckH.s:5730   .debug_str:0000000000000a63 .LASF96
     /tmp/cc8S9ckH.s:5768   .debug_str:0000000000000c33 .LASF97
     /tmp/cc8S9ckH.s:5606   .debug_str:00000000000006ee .LASF98
     /tmp/cc8S9ckH.s:5766   .debug_str:0000000000000c28 .LASF99
     /tmp/cc8S9ckH.s:5476   .debug_str:0000000000000337 .LASF100
     /tmp/cc8S9ckH.s:5832   .debug_str:0000000000000e14 .LASF101
     /tmp/cc8S9ckH.s:5472   .debug_str:000000000000030f .LASF102
     /tmp/cc8S9ckH.s:5448   .debug_str:0000000000000272 .LASF103
     /tmp/cc8S9ckH.s:5420   .debug_str:000000000000018e .LASF104
     /tmp/cc8S9ckH.s:5782   .debug_str:0000000000000cad .LASF105
     /tmp/cc8S9ckH.s:5386   .debug_str:00000000000000a2 .LASF106
     /tmp/cc8S9ckH.s:5830   .debug_str:0000000000000e07 .LASF107
     /tmp/cc8S9ckH.s:5498   .debug_str:00000000000003c6 .LASF108
     /tmp/cc8S9ckH.s:5368   .debug_str:000000000000001c .LASF109
     /tmp/cc8S9ckH.s:5600   .debug_str:00000000000006b8 .LASF110
     /tmp/cc8S9ckH.s:5816   .debug_str:0000000000000d8b .LASF201
     /tmp/cc8S9ckH.s:5758   .debug_str:0000000000000bde .LASF111
     /tmp/cc8S9ckH.s:5408   .debug_str:000000000000013e .LASF112
     /tmp/cc8S9ckH.s:5824   .debug_str:0000000000000dc8 .LASF113
     /tmp/cc8S9ckH.s:5718   .debug_str:0000000000000a22 .LASF114
     /tmp/cc8S9ckH.s:5746   .debug_str:0000000000000b92 .LASF115
     /tmp/cc8S9ckH.s:5738   .debug_str:0000000000000aa5 .LASF116
     /tmp/cc8S9ckH.s:5614   .debug_str:0000000000000725 .LASF117
     /tmp/cc8S9ckH.s:5470   .debug_str:0000000000000302 .LASF118
     /tmp/cc8S9ckH.s:5678   .debug_str:000000000000091f .LASF119
GAS LISTING /tmp/cc8S9ckH.s 			page 43


     /tmp/cc8S9ckH.s:5786   .debug_str:0000000000000cba .LASF120
     /tmp/cc8S9ckH.s:5736   .debug_str:0000000000000a9d .LASF121
     /tmp/cc8S9ckH.s:5646   .debug_str:0000000000000817 .LASF122
     /tmp/cc8S9ckH.s:5436   .debug_str:000000000000021b .LASF145
     /tmp/cc8S9ckH.s:5372   .debug_str:0000000000000034 .LASF154
     /tmp/cc8S9ckH.s:5490   .debug_str:000000000000038a .LASF123
     /tmp/cc8S9ckH.s:5700   .debug_str:00000000000009c9 .LASF124
     /tmp/cc8S9ckH.s:5542   .debug_str:0000000000000517 .LASF125
     /tmp/cc8S9ckH.s:5598   .debug_str:00000000000006a5 .LASF126
     /tmp/cc8S9ckH.s:5450   .debug_str:000000000000027b .LASF127
     /tmp/cc8S9ckH.s:5406   .debug_str:000000000000012e .LASF128
     /tmp/cc8S9ckH.s:5716   .debug_str:0000000000000a1b .LASF129
     /tmp/cc8S9ckH.s:5396   .debug_str:00000000000000e7 .LASF130
     /tmp/cc8S9ckH.s:5444   .debug_str:000000000000025c .LASF131
     /tmp/cc8S9ckH.s:5590   .debug_str:0000000000000667 .LASF132
     /tmp/cc8S9ckH.s:5458   .debug_str:0000000000000297 .LASF133
     /tmp/cc8S9ckH.s:5374   .debug_str:000000000000005c .LASF134
     /tmp/cc8S9ckH.s:5516   .debug_str:0000000000000466 .LASF135
     /tmp/cc8S9ckH.s:5732   .debug_str:0000000000000a7b .LASF136
     /tmp/cc8S9ckH.s:5370   .debug_str:000000000000002c .LASF137
     /tmp/cc8S9ckH.s:5382   .debug_str:0000000000000086 .LASF138
     /tmp/cc8S9ckH.s:5800   .debug_str:0000000000000cff .LASF139
     /tmp/cc8S9ckH.s:5764   .debug_str:0000000000000c18 .LASF140
     /tmp/cc8S9ckH.s:5668   .debug_str:00000000000008c8 .LASF141
     /tmp/cc8S9ckH.s:5538   .debug_str:00000000000004fe .LASF142
     /tmp/cc8S9ckH.s:5630   .debug_str:00000000000007b1 .LASF143
     /tmp/cc8S9ckH.s:5780   .debug_str:0000000000000ca5 .LASF144
     /tmp/cc8S9ckH.s:5454   .debug_str:000000000000028b .LASF146
     /tmp/cc8S9ckH.s:5756   .debug_str:0000000000000bd1 .LASF229
     /tmp/cc8S9ckH.s:5594   .debug_str:0000000000000684 .LASF147
     /tmp/cc8S9ckH.s:5788   .debug_str:0000000000000cc1 .LASF149
     /tmp/cc8S9ckH.s:5754   .debug_str:0000000000000bcc .LASF150
     /tmp/cc8S9ckH.s:5414   .debug_str:000000000000016c .LASF151
     /tmp/cc8S9ckH.s:5462   .debug_str:00000000000002ba .LASF152
     /tmp/cc8S9ckH.s:5438   .debug_str:0000000000000229 .LASF153
     /tmp/cc8S9ckH.s:5430   .debug_str:00000000000001d3 .LASF155
     /tmp/cc8S9ckH.s:5392   .debug_str:00000000000000d6 .LASF156
     /tmp/cc8S9ckH.s:5578   .debug_str:0000000000000614 .LASF157
     /tmp/cc8S9ckH.s:5390   .debug_str:00000000000000c1 .LASF158
     /tmp/cc8S9ckH.s:5496   .debug_str:00000000000003ae .LASF159
     /tmp/cc8S9ckH.s:5624   .debug_str:0000000000000781 .LASF230
     /tmp/cc8S9ckH.s:5724   .debug_str:0000000000000a44 .LASF160
     /tmp/cc8S9ckH.s:5552   .debug_str:000000000000054e .LASF161
     /tmp/cc8S9ckH.s:5526   .debug_str:000000000000049e .LASF162
     /tmp/cc8S9ckH.s:5466   .debug_str:00000000000002de .LASF163
     /tmp/cc8S9ckH.s:5548   .debug_str:000000000000053d .LASF164
     /tmp/cc8S9ckH.s:5580   .debug_str:0000000000000619 .LASF165
     /tmp/cc8S9ckH.s:5400   .debug_str:000000000000010b .LASF166
     /tmp/cc8S9ckH.s:5574   .debug_str:00000000000005ea .LASF167
     /tmp/cc8S9ckH.s:5432   .debug_str:00000000000001ee .LASF168
     /tmp/cc8S9ckH.s:5794   .debug_str:0000000000000cd9 .LASF169
     /tmp/cc8S9ckH.s:5556   .debug_str:0000000000000568 .LASF170
     /tmp/cc8S9ckH.s:5688   .debug_str:000000000000096c .LASF171
     /tmp/cc8S9ckH.s:5596   .debug_str:0000000000000690 .LASF172
     /tmp/cc8S9ckH.s:5622   .debug_str:000000000000077b .LASF173
     /tmp/cc8S9ckH.s:5584   .debug_str:0000000000000645 .LASF174
     /tmp/cc8S9ckH.s:5734   .debug_str:0000000000000a8c .LASF175
GAS LISTING /tmp/cc8S9ckH.s 			page 44


     /tmp/cc8S9ckH.s:5714   .debug_str:0000000000000a0e .LASF176
     /tmp/cc8S9ckH.s:5762   .debug_str:0000000000000bfb .LASF177
     /tmp/cc8S9ckH.s:5778   .debug_str:0000000000000c93 .LASF178
     /tmp/cc8S9ckH.s:5814   .debug_str:0000000000000d69 .LASF179
     /tmp/cc8S9ckH.s:5528   .debug_str:00000000000004a6 .LASF180
     /tmp/cc8S9ckH.s:5616   .debug_str:0000000000000731 .LASF181
     /tmp/cc8S9ckH.s:5506   .debug_str:000000000000041a .LASF182
     /tmp/cc8S9ckH.s:5660   .debug_str:0000000000000889 .LASF183
     /tmp/cc8S9ckH.s:5704   .debug_str:00000000000009d5 .LASF184
     /tmp/cc8S9ckH.s:5500   .debug_str:00000000000003d2 .LASF185
     /tmp/cc8S9ckH.s:5484   .debug_str:0000000000000362 .LASF186
     /tmp/cc8S9ckH.s:5726   .debug_str:0000000000000a51 .LASF187
     /tmp/cc8S9ckH.s:5364   .debug_str:0000000000000008 .LASF231
     /tmp/cc8S9ckH.s:5776   .debug_str:0000000000000c87 .LASF188
     /tmp/cc8S9ckH.s:5582   .debug_str:0000000000000638 .LASF189
     /tmp/cc8S9ckH.s:5520   .debug_str:0000000000000479 .LASF190
     /tmp/cc8S9ckH.s:5632   .debug_str:00000000000007b9 .LASF191
     /tmp/cc8S9ckH.s:5546   .debug_str:0000000000000532 .LASF192
     /tmp/cc8S9ckH.s:5608   .debug_str:000000000000070d .LASF193
     /tmp/cc8S9ckH.s:5690   .debug_str:0000000000000972 .LASF194
     /tmp/cc8S9ckH.s:5728   .debug_str:0000000000000a5e .LASF195
     /tmp/cc8S9ckH.s:5486   .debug_str:0000000000000370 .LASF196
     /tmp/cc8S9ckH.s:5706   .debug_str:00000000000009e9 .LASF197
     /tmp/cc8S9ckH.s:5588   .debug_str:0000000000000662 .LASF198
     /tmp/cc8S9ckH.s:5822   .debug_str:0000000000000dbb .LASF199
     /tmp/cc8S9ckH.s:5398   .debug_str:00000000000000f9 .LASF200
     /tmp/cc8S9ckH.s:5508   .debug_str:0000000000000427 .LASF202
     /tmp/cc8S9ckH.s:5820   .debug_str:0000000000000da7 .LASF232
     /tmp/cc8S9ckH.s:5748   .debug_str:0000000000000b9c .LASF203
     /tmp/cc8S9ckH.s:5656   .debug_str:000000000000085a .LASF204
     /tmp/cc8S9ckH.s:5394   .debug_str:00000000000000dc .LASF205
     /tmp/cc8S9ckH.s:5826   .debug_str:0000000000000dce .LASF206
     /tmp/cc8S9ckH.s:5554   .debug_str:0000000000000563 .LASF207
     /tmp/cc8S9ckH.s:5720   .debug_str:0000000000000a27 .LASF208
     /tmp/cc8S9ckH.s:5626   .debug_str:0000000000000799 .LASF209
     /tmp/cc8S9ckH.s:121    .text:0000000000000000 .LFB51
     /tmp/cc8S9ckH.s:1068   .text:00000000000005e8 .LFE51
     /tmp/cc8S9ckH.s:5702   .debug_str:00000000000009ce .LASF210
     /tmp/cc8S9ckH.s:4832   .debug_loc:0000000000000000 .LLST5
     /tmp/cc8S9ckH.s:5742   .debug_str:0000000000000b79 .LASF211
     /tmp/cc8S9ckH.s:4863   .debug_loc:0000000000000087 .LLST6
     /tmp/cc8S9ckH.s:5802   .debug_str:0000000000000d0c .LASF212
     /tmp/cc8S9ckH.s:4894   .debug_loc:000000000000010e .LLST7
     /tmp/cc8S9ckH.s:4916   .debug_loc:000000000000016d .LLST8
     /tmp/cc8S9ckH.s:4938   .debug_loc:00000000000001cc .LLST9
     /tmp/cc8S9ckH.s:4960   .debug_loc:000000000000022d .LLST10
     /tmp/cc8S9ckH.s:4982   .debug_loc:000000000000028e .LLST11
     /tmp/cc8S9ckH.s:5004   .debug_loc:00000000000002ef .LLST12
     /tmp/cc8S9ckH.s:851    .text:0000000000000448 .LBB29
     /tmp/cc8S9ckH.s:920    .text:00000000000004dc .LBE29
     /tmp/cc8S9ckH.s:5197   .debug_loc:0000000000000648 .LLST13
     /tmp/cc8S9ckH.s:855    .text:0000000000000450 .LVL74
     /tmp/cc8S9ckH.s:881    .text:0000000000000498 .LVL77
     /tmp/cc8S9ckH.s:890    .text:00000000000004ac .LVL80
     /tmp/cc8S9ckH.s:898    .text:00000000000004c0 .LVL81
     /tmp/cc8S9ckH.s:919    .text:00000000000004dc .LVL82
     /tmp/cc8S9ckH.s:339    .text:0000000000000104 .LVL22
GAS LISTING /tmp/cc8S9ckH.s 			page 45


     /tmp/cc8S9ckH.s:357    .text:000000000000011c .LVL24
     /tmp/cc8S9ckH.s:382    .text:0000000000000148 .LVL26
     /tmp/cc8S9ckH.s:404    .text:0000000000000180 .LVL27
     /tmp/cc8S9ckH.s:438    .text:000000000000019c .LVL29
     /tmp/cc8S9ckH.s:443    .text:00000000000001b0 .LVL30
     /tmp/cc8S9ckH.s:447    .text:00000000000001b8 .LVL31
     /tmp/cc8S9ckH.s:463    .text:00000000000001c8 .LVL32
     /tmp/cc8S9ckH.s:472    .text:00000000000001d4 .LVL34
     /tmp/cc8S9ckH.s:483    .text:00000000000001e8 .LVL36
     /tmp/cc8S9ckH.s:487    .text:00000000000001f0 .LVL37
     /tmp/cc8S9ckH.s:502    .text:000000000000020c .LVL39
     /tmp/cc8S9ckH.s:546    .text:0000000000000244 .LVL41
     /tmp/cc8S9ckH.s:562    .text:000000000000025c .LVL42
     /tmp/cc8S9ckH.s:565    .text:0000000000000268 .LVL43
     /tmp/cc8S9ckH.s:576    .text:000000000000027c .LVL45
     /tmp/cc8S9ckH.s:594    .text:0000000000000294 .LVL47
     /tmp/cc8S9ckH.s:640    .text:00000000000002c4 .LVL49
     /tmp/cc8S9ckH.s:645    .text:00000000000002d8 .LVL50
     /tmp/cc8S9ckH.s:649    .text:00000000000002e0 .LVL51
     /tmp/cc8S9ckH.s:658    .text:00000000000002ec .LVL53
     /tmp/cc8S9ckH.s:677    .text:0000000000000308 .LVL55
     /tmp/cc8S9ckH.s:695    .text:0000000000000330 .LVL57
     /tmp/cc8S9ckH.s:739    .text:0000000000000368 .LVL59
     /tmp/cc8S9ckH.s:753    .text:0000000000000394 .LVL60
     /tmp/cc8S9ckH.s:763    .text:00000000000003a4 .LVL62
     /tmp/cc8S9ckH.s:773    .text:00000000000003b8 .LVL64
     /tmp/cc8S9ckH.s:778    .text:00000000000003c4 .LVL65
     /tmp/cc8S9ckH.s:783    .text:00000000000003d4 .LVL66
     /tmp/cc8S9ckH.s:788    .text:00000000000003e0 .LVL67
     /tmp/cc8S9ckH.s:793    .text:00000000000003f0 .LVL68
     /tmp/cc8S9ckH.s:798    .text:00000000000003fc .LVL69
     /tmp/cc8S9ckH.s:940    .text:00000000000004fc .LVL84
     /tmp/cc8S9ckH.s:944    .text:0000000000000504 .LVL85
     /tmp/cc8S9ckH.s:954    .text:000000000000051c .LVL86
     /tmp/cc8S9ckH.s:960    .text:000000000000052c .LVL87
     /tmp/cc8S9ckH.s:964    .text:000000000000053c .LVL88
     /tmp/cc8S9ckH.s:975    .text:0000000000000558 .LVL89
     /tmp/cc8S9ckH.s:997    .text:0000000000000574 .LVL90
     /tmp/cc8S9ckH.s:1012   .text:0000000000000588 .LVL92
     /tmp/cc8S9ckH.s:1017   .text:0000000000000598 .LVL93
     /tmp/cc8S9ckH.s:1022   .text:00000000000005a4 .LVL94
     /tmp/cc8S9ckH.s:1027   .text:00000000000005b4 .LVL95
     /tmp/cc8S9ckH.s:1032   .text:00000000000005c0 .LVL96
     /tmp/cc8S9ckH.s:5480   .debug_str:0000000000000357 .LASF213
     /tmp/cc8S9ckH.s:5376   .debug_str:000000000000006a .LASF214
     /tmp/cc8S9ckH.s:5388   .debug_str:00000000000000b4 .LASF233
     /tmp/cc8S9ckH.s:11     .text._ZN4KSemD2Ev:0000000000000000 .LFB53
     /tmp/cc8S9ckH.s:85     .text._ZN4KSemD2Ev:000000000000004c .LFE53
     /tmp/cc8S9ckH.s:5226   .debug_loc:00000000000006ce .LLST0
     /tmp/cc8S9ckH.s:31     .text._ZN4KSemD2Ev:0000000000000018 .LBB19
     /tmp/cc8S9ckH.s:71     .text._ZN4KSemD2Ev:0000000000000038 .LBE19
     /tmp/cc8S9ckH.s:5244   .debug_loc:000000000000071a .LLST1
     /tmp/cc8S9ckH.s:36     .text._ZN4KSemD2Ev:0000000000000018 .LBB21
     /tmp/cc8S9ckH.s:43     .text._ZN4KSemD2Ev:000000000000001c .LBE21
     /tmp/cc8S9ckH.s:5262   .debug_loc:0000000000000757 .LLST2
     /tmp/cc8S9ckH.s:46     .text._ZN4KSemD2Ev:0000000000000020 .LBB23
     /tmp/cc8S9ckH.s:69     .text._ZN4KSemD2Ev:0000000000000038 .LBE23
GAS LISTING /tmp/cc8S9ckH.s 			page 46


     /tmp/cc8S9ckH.s:5271   .debug_loc:000000000000077c .LLST3
     /tmp/cc8S9ckH.s:58     .text._ZN4KSemD2Ev:000000000000002c .LBB24
     /tmp/cc8S9ckH.s:68     .text._ZN4KSemD2Ev:0000000000000038 .LBE24
     /tmp/cc8S9ckH.s:5278   .debug_loc:000000000000079f .LLST4
     /tmp/cc8S9ckH.s:63     .text._ZN4KSemD2Ev:0000000000000034 .LVL5
     /tmp/cc8S9ckH.s:1220   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000000 .LFB43
     /tmp/cc8S9ckH.s:1239   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000020 .LFE43
     /tmp/cc8S9ckH.s:1193   .text._ZN3TCB10getRunningEv:0000000000000000 .LFB41
     /tmp/cc8S9ckH.s:1213   .text._ZN3TCB10getRunningEv:0000000000000024 .LFE41
     /tmp/cc8S9ckH.s:1165   .text._ZN3TCB7getBodyEv:0000000000000000 .LFB40
     /tmp/cc8S9ckH.s:1186   .text._ZN3TCB7getBodyEv:000000000000001c .LFE40
     /tmp/cc8S9ckH.s:5285   .debug_loc:00000000000007c2 .LLST15
     /tmp/cc8S9ckH.s:1137   .text._ZN3TCB12getTimeSliceEv:0000000000000000 .LFB38
     /tmp/cc8S9ckH.s:1158   .text._ZN3TCB12getTimeSliceEv:000000000000001c .LFE38
     /tmp/cc8S9ckH.s:5299   .debug_loc:00000000000007fb .LLST14
     /tmp/cc8S9ckH.s:1108   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000000 .LFB36
     /tmp/cc8S9ckH.s:1130   .text._ZN3TCB9setStatusENS_12ThreadStatusE:000000000000001c .LFE36
     /tmp/cc8S9ckH.s:5424   .debug_str:00000000000001ab .LASF215
     /tmp/cc8S9ckH.s:5674   .debug_str:0000000000000902 .LASF234
     /tmp/cc8S9ckH.s:5750   .debug_str:0000000000000bac .LASF235
     /tmp/cc8S9ckH.s:1075   .text._ZN5Riscv6mc_sipEm:0000000000000000 .LFB7
     /tmp/cc8S9ckH.s:1101   .text._ZN5Riscv6mc_sipEm:000000000000001c .LFE7
     /tmp/cc8S9ckH.s:5784   .debug_str:0000000000000cb5 .LASF216
     /tmp/cc8S9ckH.s:5560   .debug_str:0000000000000585 .LASF217
     /tmp/cc8S9ckH.s:5426   .debug_str:00000000000001b0 .LASF218
     /tmp/cc8S9ckH.s:5812   .debug_str:0000000000000d5d .LASF219
     /tmp/cc8S9ckH.s:5694   .debug_str:000000000000098f .LASF220
     /tmp/cc8S9ckH.s:5576   .debug_str:0000000000000606 .LASF221
     /tmp/cc8S9ckH.s:5422   .debug_str:00000000000001a1 .LASF222
     /tmp/cc8S9ckH.s:5658   .debug_str:000000000000087b .LASF223
     /tmp/cc8S9ckH.s:5512   .debug_str:0000000000000451 .LASF224
     /tmp/cc8S9ckH.s:144    .text:000000000000001c .LVL7
     /tmp/cc8S9ckH.s:151    .text:0000000000000020 .LVL8
     /tmp/cc8S9ckH.s:839    .text:0000000000000434 .LVL72
     /tmp/cc8S9ckH.s:846    .text:0000000000000438 .LVL73
     /tmp/cc8S9ckH.s:1060   .text:00000000000005dc .LVL97
     /tmp/cc8S9ckH.s:1065   .text:00000000000005e4 .LVL98
     /tmp/cc8S9ckH.s:154    .text:0000000000000024 .LVL9
     /tmp/cc8S9ckH.s:161    .text:0000000000000028 .LVL10
     /tmp/cc8S9ckH.s:818    .text:0000000000000420 .LVL70
     /tmp/cc8S9ckH.s:830    .text:000000000000042c .LVL71
     /tmp/cc8S9ckH.s:164    .text:000000000000002c .LVL11
     /tmp/cc8S9ckH.s:172    .text:0000000000000030 .LVL12
     /tmp/cc8S9ckH.s:175    .text:0000000000000034 .LVL13
     /tmp/cc8S9ckH.s:182    .text:0000000000000038 .LVL14
     /tmp/cc8S9ckH.s:185    .text:000000000000003c .LVL15
     /tmp/cc8S9ckH.s:192    .text:0000000000000040 .LVL16
     /tmp/cc8S9ckH.s:195    .text:0000000000000044 .LVL17
     /tmp/cc8S9ckH.s:202    .text:0000000000000048 .LVL18
     /tmp/cc8S9ckH.s:205    .text:000000000000004c .LVL19
     /tmp/cc8S9ckH.s:212    .text:0000000000000050 .LVL20
     /tmp/cc8S9ckH.s:215    .text:0000000000000054 .LVL21
     /tmp/cc8S9ckH.s:349    .text:000000000000010c .LVL23
     /tmp/cc8S9ckH.s:367    .text:0000000000000124 .LVL25
     /tmp/cc8S9ckH.s:432    .text:0000000000000194 .LVL28
     /tmp/cc8S9ckH.s:466    .text:00000000000001cc .LVL33
     /tmp/cc8S9ckH.s:475    .text:00000000000001d8 .LVL35
GAS LISTING /tmp/cc8S9ckH.s 			page 47


     /tmp/cc8S9ckH.s:490    .text:00000000000001f4 .LVL38
     /tmp/cc8S9ckH.s:538    .text:0000000000000234 .LVL40
     /tmp/cc8S9ckH.s:568    .text:000000000000026c .LVL44
     /tmp/cc8S9ckH.s:586    .text:0000000000000284 .LVL46
     /tmp/cc8S9ckH.s:604    .text:000000000000029c .LVL48
     /tmp/cc8S9ckH.s:652    .text:00000000000002e4 .LVL52
     /tmp/cc8S9ckH.s:668    .text:00000000000002f4 .LVL54
     /tmp/cc8S9ckH.s:680    .text:000000000000030c .LVL56
     /tmp/cc8S9ckH.s:731    .text:0000000000000358 .LVL58
     /tmp/cc8S9ckH.s:756    .text:0000000000000398 .LVL61
     /tmp/cc8S9ckH.s:766    .text:00000000000003a8 .LVL63
     /tmp/cc8S9ckH.s:926    .text:00000000000004e0 .LVL83
     /tmp/cc8S9ckH.s:1003   .text:0000000000000578 .LVL91
     /tmp/cc8S9ckH.s:859    .text:0000000000000458 .LVL75
     /tmp/cc8S9ckH.s:879    .text:0000000000000490 .LVL76
     /tmp/cc8S9ckH.s:883    .text:000000000000049c .LVL78
     /tmp/cc8S9ckH.s:888    .text:00000000000004a4 .LVL79
     /tmp/cc8S9ckH.s:17     .text._ZN4KSemD2Ev:0000000000000000 .LVL0
     /tmp/cc8S9ckH.s:29     .text._ZN4KSemD2Ev:0000000000000018 .LVL1
     /tmp/cc8S9ckH.s:80     .text._ZN4KSemD2Ev:0000000000000044 .LVL6
     /tmp/cc8S9ckH.s:41     .text._ZN4KSemD2Ev:000000000000001c .LVL2
     /tmp/cc8S9ckH.s:48     .text._ZN4KSemD2Ev:0000000000000020 .LVL3
     /tmp/cc8S9ckH.s:57     .text._ZN4KSemD2Ev:000000000000002c .LVL4
     /tmp/cc8S9ckH.s:1168   .text._ZN3TCB7getBodyEv:0000000000000000 .LVL103
     /tmp/cc8S9ckH.s:1178   .text._ZN3TCB7getBodyEv:0000000000000010 .LVL104
     /tmp/cc8S9ckH.s:1140   .text._ZN3TCB12getTimeSliceEv:0000000000000000 .LVL101
     /tmp/cc8S9ckH.s:1150   .text._ZN3TCB12getTimeSliceEv:0000000000000010 .LVL102
     /tmp/cc8S9ckH.s:1251   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/cc8S9ckH.s:5      .text:0000000000000000 .Ltext0
     /tmp/cc8S9ckH.s:1242   .text:00000000000005e8 .Letext0
     /tmp/cc8S9ckH.s:88     .gcc_except_table._ZN4KSemD2Ev:0000000000000000 .LLSDA53
                           .group:0000000000000000 _ZN4KSemD5Ev

UNDEFINED SYMBOLS
_Z8mem_freePv
__gxx_personality_v0
_ZN7KMemory7kmallocEm
_ZN7KMemory5kfreeEPv
_ZN3TCB12createThreadEPFvPvES0_Pm
main
_ZN9Scheduler3putEP3TCB
_ZN3TCB13releaseJoinedEv
_ZN3TCB8dispatchEv
_ZN3TCB10threadJoinEPS_
_ZN4KSem7initSemEj
_ZN4KSem8closeSemEPS_
_ZN4KSemdlEPv
_ZN4KSem4waitEv
_ZN4KSem6signalEv
_ZN9Scheduler10putToSleepEP3TCBm
_ZN8KConsole5kgetcEv
_ZN8KConsole5kputcEc
_Z9kPrintIntm
_Z11printStringPKc
plic_claim
_ZN8KConsole2srE
_ZN8KConsole2drE
GAS LISTING /tmp/cc8S9ckH.s 			page 48


_ZN8KConsole12placeInInputEc
plic_complete
_ZN9Scheduler4wakeEv
_ZN3TCB7runningE
_ZN3TCB16runningTimeSliceE
