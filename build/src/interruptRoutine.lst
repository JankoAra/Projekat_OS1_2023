GAS LISTING /tmp/ccUvhS4d.s 			page 1


   1              		.file	"interruptRoutine.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.section	.rodata.str1.8,"aMS",@progbits,1
   7              		.align	3
   8              	.LC0:
   9 0000 4E65706F 		.string	"Nepostojeci op code"
   9      73746F6A 
   9      65636920 
   9      6F702063 
   9      6F646500 
  10 0014 00000000 		.align	3
  11              	.LC1:
  12 0018 47726573 		.string	"Greska u prekidnoj rutini"
  12      6B612075 
  12      20707265 
  12      6B69646E 
  12      6F6A2072 
  13              		.text
  14              		.align	2
  15              		.globl	interruptRoutine
  17              	interruptRoutine:
  18              	.LFB18:
  19              		.file 1 "src/interruptRoutine.cpp"
   1:src/interruptRoutine.cpp **** //
   2:src/interruptRoutine.cpp **** // Created by os on 5/22/23.
   3:src/interruptRoutine.cpp **** //
   4:src/interruptRoutine.cpp **** 
   5:src/interruptRoutine.cpp **** #include "../lib/console.h"
   6:src/interruptRoutine.cpp **** #include "../lib/hw.h"
   7:src/interruptRoutine.cpp **** #include "../h/MemoryAllocator.hpp"
   8:src/interruptRoutine.cpp **** #include "../h/helper.hpp"
   9:src/interruptRoutine.cpp **** #include "../h/Riscv.hpp"
  10:src/interruptRoutine.cpp **** #include "../h/syscall_c.hpp"
  11:src/interruptRoutine.cpp **** 
  12:src/interruptRoutine.cpp **** extern "C" void interruptRoutine() {
  20              		.loc 1 12 36
  21              		.cfi_startproc
  22 0000 130101FD 		addi	sp,sp,-48
  23              		.cfi_def_cfa_offset 48
  24 0004 23341102 		sd	ra,40(sp)
  25 0008 23308102 		sd	s0,32(sp)
  26 000c 233C9100 		sd	s1,24(sp)
  27              		.cfi_offset 1, -8
  28              		.cfi_offset 8, -16
  29              		.cfi_offset 9, -24
  30 0010 13040103 		addi	s0,sp,48
  31              		.cfi_def_cfa 8, 0
  13:src/interruptRoutine.cpp **** 	uint64 scause = Riscv::r_scause();
  32              		.loc 1 13 2
  33              	.LBB14:
  34              	.LBB15:
  35              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 5/17/23.
GAS LISTING /tmp/ccUvhS4d.s 			page 2


   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJEKAT2023_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJEKAT2023_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** class Riscv {
  11:src/../h/Riscv.hpp **** public:
  12:src/../h/Riscv.hpp **** 
  13:src/../h/Riscv.hpp **** 	//stavljanje registara x3-x31 na stek
  14:src/../h/Riscv.hpp **** 	static void pushRegisters();    //implementacija u asm
  15:src/../h/Riscv.hpp **** 
  16:src/../h/Riscv.hpp **** 	//skidanje registara x3-x31 sa steka
  17:src/../h/Riscv.hpp **** 	static void popRegisters();     //implementacija u asm
  18:src/../h/Riscv.hpp **** 
  19:src/../h/Riscv.hpp **** 	//read scause
  20:src/../h/Riscv.hpp **** 	static uint64 r_scause();
  21:src/../h/Riscv.hpp **** 
  22:src/../h/Riscv.hpp **** 	//write scause
  23:src/../h/Riscv.hpp **** 	static void w_scause(uint64 scause);
  24:src/../h/Riscv.hpp **** 
  25:src/../h/Riscv.hpp **** 	//read sepc
  26:src/../h/Riscv.hpp **** 	static uint64 r_sepc();
  27:src/../h/Riscv.hpp **** 
  28:src/../h/Riscv.hpp **** 	//write sepc
  29:src/../h/Riscv.hpp **** 	static void w_sepc(uint64 sepc);
  30:src/../h/Riscv.hpp **** 
  31:src/../h/Riscv.hpp **** 	//read stvec
  32:src/../h/Riscv.hpp **** 	static uint64 r_stvec();
  33:src/../h/Riscv.hpp **** 
  34:src/../h/Riscv.hpp **** 	//write stvec
  35:src/../h/Riscv.hpp **** 	static void w_stvec(uint64 stvec);
  36:src/../h/Riscv.hpp **** 
  37:src/../h/Riscv.hpp **** 	enum BitMaskSip {
  38:src/../h/Riscv.hpp **** 		SIP_SSIP = (1 << 1),    //postoji zahtev za softverski prekid
  39:src/../h/Riscv.hpp **** 		SIP_STIP = (1 << 5),    //postoji prekid od tajmera
  40:src/../h/Riscv.hpp **** 		SIP_SEIP = (1 << 9)        //postoji zahtev za spoljasnji hardverski prekid
  41:src/../h/Riscv.hpp **** 	};
  42:src/../h/Riscv.hpp **** 
  43:src/../h/Riscv.hpp **** 	//mask set sip
  44:src/../h/Riscv.hpp **** 	static void ms_sip(uint64 mask);
  45:src/../h/Riscv.hpp **** 
  46:src/../h/Riscv.hpp **** 	//mask clear sip
  47:src/../h/Riscv.hpp **** 	static void mc_sip(uint64 mask);
  48:src/../h/Riscv.hpp **** 
  49:src/../h/Riscv.hpp **** 	//read sip
  50:src/../h/Riscv.hpp **** 	static uint64 r_sip();
  51:src/../h/Riscv.hpp **** 
  52:src/../h/Riscv.hpp **** 	//write sip
  53:src/../h/Riscv.hpp **** 	static void w_sip(uint64 sip);
  54:src/../h/Riscv.hpp **** 
  55:src/../h/Riscv.hpp **** 	enum BitMaskSstatus {
  56:src/../h/Riscv.hpp **** 		SSTATUS_SIE = (1 << 1),
  57:src/../h/Riscv.hpp **** 		SSTATUS_SPIE = (1 << 5),
  58:src/../h/Riscv.hpp **** 		SSTATUS_SPP = (1 << 8)
  59:src/../h/Riscv.hpp **** 	};
GAS LISTING /tmp/ccUvhS4d.s 			page 3


  60:src/../h/Riscv.hpp **** 
  61:src/../h/Riscv.hpp **** 	//mask set sstatus
  62:src/../h/Riscv.hpp **** 	static void ms_sstatus(uint64 mask);
  63:src/../h/Riscv.hpp **** 
  64:src/../h/Riscv.hpp **** 	//mask clear sstatus
  65:src/../h/Riscv.hpp **** 	static void mc_sstatus(uint64 mask);
  66:src/../h/Riscv.hpp **** 
  67:src/../h/Riscv.hpp **** 	//read sstatus
  68:src/../h/Riscv.hpp **** 	static uint64 r_sstatus();
  69:src/../h/Riscv.hpp **** 
  70:src/../h/Riscv.hpp **** 	//write sstatus
  71:src/../h/Riscv.hpp **** 	static void w_sstatus(uint64 sstatus);
  72:src/../h/Riscv.hpp **** 
  73:src/../h/Riscv.hpp **** 	//upisuje kod sistemskog poziva u registar a0
  74:src/../h/Riscv.hpp **** 	static void loadOpCode(uint64 opCode);
  75:src/../h/Riscv.hpp **** 
  76:src/../h/Riscv.hpp **** };
  77:src/../h/Riscv.hpp **** 
  78:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause() {
  79:src/../h/Riscv.hpp **** 	uint64 volatile scause;
  36              		.loc 2 79 2
  80:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[scause], scause": [scause] "=r"(scause));
  37              		.loc 2 80 2
  38              		.loc 2 80 67 is_stmt 0
  39              	#APP
  40              	# 80 "src/../h/Riscv.hpp" 1
  81              		return scause;
  41              		csrr a5, scause
  42              	# 0 "" 2
  43              	#NO_APP
  44 0018 233CF4FC 		sd	a5,-40(s0)
  45              		.loc 2 81 2 is_stmt 1
  46              		.loc 2 81 9 is_stmt 0
  47 001c 033784FD 		ld	a4,-40(s0)
  48              	.LVL0:
  49              	.LBE15:
  50              	.LBE14:
  14:src/interruptRoutine.cpp **** 	uint64 sepc = Riscv::r_sepc();
  51              		.loc 1 14 2 is_stmt 1
  52              	.LBB16:
  53              	.LBB17:
  82:src/../h/Riscv.hpp **** }
  83:src/../h/Riscv.hpp **** 
  84:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
  85:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw scause, %[scause]": :[scause] "r"(scause));
  86:src/../h/Riscv.hpp **** }
  87:src/../h/Riscv.hpp **** 
  88:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc() {
  89:src/../h/Riscv.hpp **** 	uint64 volatile sepc;
  54              		.loc 2 89 2
  90:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[sepc], sepc": [sepc] "=r"(sepc));
  55              		.loc 2 90 2
  56              		.loc 2 90 59 is_stmt 0
  57              	#APP
  58              	# 90 "src/../h/Riscv.hpp" 1
  91              		return sepc;
  59              		csrr a5, sepc
GAS LISTING /tmp/ccUvhS4d.s 			page 4


  60              	# 0 "" 2
  61              	#NO_APP
  62 0024 2338F4FC 		sd	a5,-48(s0)
  63              		.loc 2 91 2 is_stmt 1
  64              		.loc 2 91 9 is_stmt 0
  65 0028 833404FD 		ld	s1,-48(s0)
  66              	.LVL1:
  67              	.LBE17:
  68              	.LBE16:
  15:src/interruptRoutine.cpp **** 
  16:src/interruptRoutine.cpp **** 	if (scause == 0x09 || scause == 0x08) {
  69              		.loc 1 16 2 is_stmt 1
  70              	.LBB18:
  71              		.loc 1 16 21 is_stmt 0
  72 002c 930687FF 		addi	a3,a4,-8
  73              		.loc 1 16 2
  74 0030 93071000 		li	a5,1
  75 0034 63F8D702 		bleu	a3,a5,.L12
  17:src/interruptRoutine.cpp **** 		//prekid zbog poziva ecall
  18:src/interruptRoutine.cpp **** 		uint64 opCode;
  19:src/interruptRoutine.cpp **** 		__asm__ volatile("mv %[op], a0":[op] "=r"(opCode));
  20:src/interruptRoutine.cpp **** 
  21:src/interruptRoutine.cpp **** 		switch (opCode) {
  22:src/interruptRoutine.cpp **** 			case 0x01:
  23:src/interruptRoutine.cpp **** 				//mem_alloc
  24:src/interruptRoutine.cpp **** 				size_t size;
  25:src/interruptRoutine.cpp **** 				__asm__ volatile("mv %[size], a1":[size] "=r"(size));
  26:src/interruptRoutine.cpp **** 				size = size * MEM_BLOCK_SIZE;
  27:src/interruptRoutine.cpp **** 				MemoryAllocator::kmalloc(size);
  28:src/interruptRoutine.cpp **** 				break;
  29:src/interruptRoutine.cpp **** 			case 0x02:
  30:src/interruptRoutine.cpp **** 				//mem_free
  31:src/interruptRoutine.cpp **** 				void* ptr;
  32:src/interruptRoutine.cpp **** 				__asm__ volatile("mv %[ptr], a1" :[ptr]"=r"(ptr));
  33:src/interruptRoutine.cpp **** 				MemoryAllocator::kfree(ptr);
  34:src/interruptRoutine.cpp **** 				break;
  35:src/interruptRoutine.cpp **** 			case 0x11:
  36:src/interruptRoutine.cpp **** 				//thread_create
  37:src/interruptRoutine.cpp **** 				break;
  38:src/interruptRoutine.cpp **** 			case 0x12:
  39:src/interruptRoutine.cpp **** 				//thread_exit
  40:src/interruptRoutine.cpp **** 				break;
  41:src/interruptRoutine.cpp **** 			case 0x13:
  42:src/interruptRoutine.cpp **** 				//thread_dispatch
  43:src/interruptRoutine.cpp **** 				break;
  44:src/interruptRoutine.cpp **** 			case 0x14:
  45:src/interruptRoutine.cpp **** 				//thread_join
  46:src/interruptRoutine.cpp **** 				break;
  47:src/interruptRoutine.cpp **** 			case 0x21:
  48:src/interruptRoutine.cpp **** 				//sem_open
  49:src/interruptRoutine.cpp **** 				break;
  50:src/interruptRoutine.cpp **** 			case 0x22:
  51:src/interruptRoutine.cpp **** 				//sem_close
  52:src/interruptRoutine.cpp **** 				break;
  53:src/interruptRoutine.cpp **** 			case 0x23:
  54:src/interruptRoutine.cpp **** 				//sem_wait
  55:src/interruptRoutine.cpp **** 				break;
GAS LISTING /tmp/ccUvhS4d.s 			page 5


  56:src/interruptRoutine.cpp **** 			case 0x24:
  57:src/interruptRoutine.cpp **** 				//sem_signal
  58:src/interruptRoutine.cpp **** 				break;
  59:src/interruptRoutine.cpp **** 			case 0x31:
  60:src/interruptRoutine.cpp **** 				//time_sleep
  61:src/interruptRoutine.cpp **** 				break;
  62:src/interruptRoutine.cpp **** 			case 0x41:
  63:src/interruptRoutine.cpp **** 				//getc
  64:src/interruptRoutine.cpp **** 				break;
  65:src/interruptRoutine.cpp **** 			case 0x42:
  66:src/interruptRoutine.cpp **** 				//putc
  67:src/interruptRoutine.cpp **** 				break;
  68:src/interruptRoutine.cpp **** 			default:
  69:src/interruptRoutine.cpp **** 				println("Nepostojeci op code");
  70:src/interruptRoutine.cpp **** 				break;
  71:src/interruptRoutine.cpp **** 		}
  72:src/interruptRoutine.cpp **** 		//sepc pokazuje na ecall instrukciju, treba preci na sledecu instrukciju
  73:src/interruptRoutine.cpp **** 		Riscv::w_sepc(sepc + 4);
  74:src/interruptRoutine.cpp **** 	} else if (scause == (1UL << 63 | 9)) {
  76              		.loc 1 74 9 is_stmt 1
  77 0038 9307F0FF 		li	a5,-1
  78 003c 9397F703 		slli	a5,a5,63
  79 0040 93879700 		addi	a5,a5,9
  80 0044 630CF708 		beq	a4,a5,.L13
  75:src/interruptRoutine.cpp **** 		//spoljasnji hardverski prekid
  76:src/interruptRoutine.cpp **** 		console_handler();
  77:src/interruptRoutine.cpp **** 	} else if (scause == (1UL << 63 | 1)) {
  81              		.loc 1 77 9
  82 0048 9307F0FF 		li	a5,-1
  83 004c 9397F703 		slli	a5,a5,63
  84 0050 93871700 		addi	a5,a5,1
  85 0054 631AF708 		bne	a4,a5,.L10
  78:src/interruptRoutine.cpp **** 		//prekid od tajmera
  79:src/interruptRoutine.cpp **** 		Riscv::mc_sip(Riscv::SIP_SSIP);
  86              		.loc 1 79 3
  87              	.LVL2:
  88              	.LBB19:
  89              	.LBB20:
  92:src/../h/Riscv.hpp **** }
  93:src/../h/Riscv.hpp **** 
  94:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
  95:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
  96:src/../h/Riscv.hpp **** }
  97:src/../h/Riscv.hpp **** 
  98:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec() {
  99:src/../h/Riscv.hpp **** 	uint64 volatile stvec;
 100:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[stvec], stvec": [stvec] "=r"(stvec));
 101:src/../h/Riscv.hpp **** 	return stvec;
 102:src/../h/Riscv.hpp **** }
 103:src/../h/Riscv.hpp **** 
 104:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 105:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw stvec, %[stvec]": :[stvec] "r"(stvec));
 106:src/../h/Riscv.hpp **** }
 107:src/../h/Riscv.hpp **** 
 108:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 109:src/../h/Riscv.hpp **** 	__asm__ volatile("csrs sip, %[mask]": :[mask] "r"(mask));
 110:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/ccUvhS4d.s 			page 6


 111:src/../h/Riscv.hpp **** 
 112:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 113:src/../h/Riscv.hpp **** 	__asm__ volatile("csrc sip, %[mask]": :[mask] "r"(mask));
  90              		.loc 2 113 2
  91              		.loc 2 113 58 is_stmt 0
  92 0058 93072000 		li	a5,2
  93              	#APP
  94              	# 113 "src/../h/Riscv.hpp" 1
 114              	}
  95              		csrc sip, a5
  96              	# 0 "" 2
  97              		.loc 2 114 1
  98              	#NO_APP
  99 0060 6F004004 		j	.L1
 100              	.LVL3:
 101              	.L12:
 102              	.LBE20:
 103              	.LBE19:
 104              	.LBB21:
  18:src/interruptRoutine.cpp **** 		__asm__ volatile("mv %[op], a0":[op] "=r"(opCode));
 105              		.loc 1 18 3 is_stmt 1
  19:src/interruptRoutine.cpp **** 
 106              		.loc 1 19 3
  19:src/interruptRoutine.cpp **** 
 107              		.loc 1 19 53 is_stmt 0
 108              	#APP
 109              	# 19 "src/interruptRoutine.cpp" 1
 110              		mv a5, a0
 111              	# 0 "" 2
 112              	.LVL4:
  21:src/interruptRoutine.cpp **** 			case 0x01:
 113              		.loc 1 21 3 is_stmt 1
 114              	#NO_APP
 115 0068 13072004 		li	a4,66
 116              	.LVL5:
 117 006c 636EF704 		bgtu	a5,a4,.L3
 118 0070 93972700 		slli	a5,a5,2
 119              	.LVL6:
 120 0074 17070000 		lla	a4,.L5
 120      13070700 
 121 007c B387E700 		add	a5,a5,a4
 122 0080 83A70700 		lw	a5,0(a5)
 123 0084 B387E700 		add	a5,a5,a4
 124 0088 67800700 		jr	a5
 125              		.section	.rodata
 126              		.align	2
 127              		.align	2
 128              	.L5:
 129 0000 00000000 		.word	.L3-.L5
 130 0004 00000000 		.word	.L7-.L5
 131 0008 00000000 		.word	.L6-.L5
 132 000c 00000000 		.word	.L3-.L5
 133 0010 00000000 		.word	.L3-.L5
 134 0014 00000000 		.word	.L3-.L5
 135 0018 00000000 		.word	.L3-.L5
 136 001c 00000000 		.word	.L3-.L5
 137 0020 00000000 		.word	.L3-.L5
GAS LISTING /tmp/ccUvhS4d.s 			page 7


 138 0024 00000000 		.word	.L3-.L5
 139 0028 00000000 		.word	.L3-.L5
 140 002c 00000000 		.word	.L3-.L5
 141 0030 00000000 		.word	.L3-.L5
 142 0034 00000000 		.word	.L3-.L5
 143 0038 00000000 		.word	.L3-.L5
 144 003c 00000000 		.word	.L3-.L5
 145 0040 00000000 		.word	.L3-.L5
 146 0044 00000000 		.word	.L4-.L5
 147 0048 00000000 		.word	.L4-.L5
 148 004c 00000000 		.word	.L4-.L5
 149 0050 00000000 		.word	.L4-.L5
 150 0054 00000000 		.word	.L3-.L5
 151 0058 00000000 		.word	.L3-.L5
 152 005c 00000000 		.word	.L3-.L5
 153 0060 00000000 		.word	.L3-.L5
 154 0064 00000000 		.word	.L3-.L5
 155 0068 00000000 		.word	.L3-.L5
 156 006c 00000000 		.word	.L3-.L5
 157 0070 00000000 		.word	.L3-.L5
 158 0074 00000000 		.word	.L3-.L5
 159 0078 00000000 		.word	.L3-.L5
 160 007c 00000000 		.word	.L3-.L5
 161 0080 00000000 		.word	.L3-.L5
 162 0084 00000000 		.word	.L4-.L5
 163 0088 00000000 		.word	.L4-.L5
 164 008c 00000000 		.word	.L4-.L5
 165 0090 00000000 		.word	.L4-.L5
 166 0094 00000000 		.word	.L3-.L5
 167 0098 00000000 		.word	.L3-.L5
 168 009c 00000000 		.word	.L3-.L5
 169 00a0 00000000 		.word	.L3-.L5
 170 00a4 00000000 		.word	.L3-.L5
 171 00a8 00000000 		.word	.L3-.L5
 172 00ac 00000000 		.word	.L3-.L5
 173 00b0 00000000 		.word	.L3-.L5
 174 00b4 00000000 		.word	.L3-.L5
 175 00b8 00000000 		.word	.L3-.L5
 176 00bc 00000000 		.word	.L3-.L5
 177 00c0 00000000 		.word	.L3-.L5
 178 00c4 00000000 		.word	.L4-.L5
 179 00c8 00000000 		.word	.L3-.L5
 180 00cc 00000000 		.word	.L3-.L5
 181 00d0 00000000 		.word	.L3-.L5
 182 00d4 00000000 		.word	.L3-.L5
 183 00d8 00000000 		.word	.L3-.L5
 184 00dc 00000000 		.word	.L3-.L5
 185 00e0 00000000 		.word	.L3-.L5
 186 00e4 00000000 		.word	.L3-.L5
 187 00e8 00000000 		.word	.L3-.L5
 188 00ec 00000000 		.word	.L3-.L5
 189 00f0 00000000 		.word	.L3-.L5
 190 00f4 00000000 		.word	.L3-.L5
 191 00f8 00000000 		.word	.L3-.L5
 192 00fc 00000000 		.word	.L3-.L5
 193 0100 00000000 		.word	.L3-.L5
 194 0104 00000000 		.word	.L4-.L5
GAS LISTING /tmp/ccUvhS4d.s 			page 8


 195 0108 00000000 		.word	.L4-.L5
 196              		.text
 197              	.L7:
 198              	.LBB22:
  22:src/interruptRoutine.cpp **** 				//mem_alloc
 199              		.loc 1 22 4
  24:src/interruptRoutine.cpp **** 				__asm__ volatile("mv %[size], a1":[size] "=r"(size));
 200              		.loc 1 24 5
  25:src/interruptRoutine.cpp **** 				size = size * MEM_BLOCK_SIZE;
 201              		.loc 1 25 5
  25:src/interruptRoutine.cpp **** 				size = size * MEM_BLOCK_SIZE;
 202              		.loc 1 25 57 is_stmt 0
 203              	#APP
 204              	# 25 "src/interruptRoutine.cpp" 1
 205              		mv a0, a1
 206              	# 0 "" 2
 207              	.LVL7:
  26:src/interruptRoutine.cpp **** 				MemoryAllocator::kmalloc(size);
 208              		.loc 1 26 5 is_stmt 1
  27:src/interruptRoutine.cpp **** 				break;
 209              		.loc 1 27 5
  27:src/interruptRoutine.cpp **** 				break;
 210              		.loc 1 27 29 is_stmt 0
 211              	#NO_APP
 212 0090 13156500 		slli	a0,a0,6
 213              	.LVL8:
 214 0094 97000000 		call	_ZN15MemoryAllocator7kmallocEm@plt
 214      E7800000 
 215              	.LVL9:
  28:src/interruptRoutine.cpp **** 			case 0x02:
 216              		.loc 1 28 5 is_stmt 1
 217              	.L4:
 218              	.LBE22:
  73:src/interruptRoutine.cpp **** 	} else if (scause == (1UL << 63 | 9)) {
 219              		.loc 1 73 3
  73:src/interruptRoutine.cpp **** 	} else if (scause == (1UL << 63 | 9)) {
 220              		.loc 1 73 16 is_stmt 0
 221 009c 93844400 		addi	s1,s1,4
 222              	.LVL10:
 223              	.LBB23:
 224              	.LBB24:
  95:src/../h/Riscv.hpp **** }
 225              		.loc 2 95 2 is_stmt 1
  95:src/../h/Riscv.hpp **** }
 226              		.loc 2 95 59 is_stmt 0
 227              	#APP
 228              	# 95 "src/../h/Riscv.hpp" 1
 229              		csrw sepc, s1
 230              	# 0 "" 2
 231              	.LVL11:
 232              	#NO_APP
 233              	.L1:
 234              	.LBE24:
 235              	.LBE23:
 236              	.LBE21:
 237              	.LBE18:
  80:src/interruptRoutine.cpp **** 	} else {
GAS LISTING /tmp/ccUvhS4d.s 			page 9


  81:src/interruptRoutine.cpp **** 		println("Greska u prekidnoj rutini");
  82:src/interruptRoutine.cpp **** 	}
  83:src/interruptRoutine.cpp **** }
 238              		.loc 1 83 1
 239 00a4 83308102 		ld	ra,40(sp)
 240              		.cfi_remember_state
 241              		.cfi_restore 1
 242 00a8 03340102 		ld	s0,32(sp)
 243              		.cfi_restore 8
 244              		.cfi_def_cfa 2, 48
 245 00ac 83348101 		ld	s1,24(sp)
 246              		.cfi_restore 9
 247 00b0 13010103 		addi	sp,sp,48
 248              		.cfi_def_cfa_offset 0
 249 00b4 67800000 		jr	ra
 250              	.LVL12:
 251              	.L6:
 252              		.cfi_restore_state
 253              	.LBB27:
 254              	.LBB26:
 255              	.LBB25:
  29:src/interruptRoutine.cpp **** 				//mem_free
 256              		.loc 1 29 4 is_stmt 1
  31:src/interruptRoutine.cpp **** 				__asm__ volatile("mv %[ptr], a1" :[ptr]"=r"(ptr));
 257              		.loc 1 31 5
  32:src/interruptRoutine.cpp **** 				MemoryAllocator::kfree(ptr);
 258              		.loc 1 32 5
  32:src/interruptRoutine.cpp **** 				MemoryAllocator::kfree(ptr);
 259              		.loc 1 32 54 is_stmt 0
 260              	#APP
 261              	# 32 "src/interruptRoutine.cpp" 1
 262              		mv a0, a1
 263              	# 0 "" 2
 264              	.LVL13:
  33:src/interruptRoutine.cpp **** 				break;
 265              		.loc 1 33 5 is_stmt 1
  33:src/interruptRoutine.cpp **** 				break;
 266              		.loc 1 33 27 is_stmt 0
 267              	#NO_APP
 268 00bc 97000000 		call	_ZN15MemoryAllocator5kfreeEPv@plt
 268      E7800000 
 269              	.LVL14:
  34:src/interruptRoutine.cpp **** 			case 0x11:
 270              		.loc 1 34 5 is_stmt 1
 271 00c4 6FF09FFD 		j	.L4
 272              	.LVL15:
 273              	.L3:
  68:src/interruptRoutine.cpp **** 				println("Nepostojeci op code");
 274              		.loc 1 68 4
  69:src/interruptRoutine.cpp **** 				break;
 275              		.loc 1 69 5
  69:src/interruptRoutine.cpp **** 				break;
 276              		.loc 1 69 12 is_stmt 0
 277 00c8 17050000 		lla	a0,.LC0
 277      13050500 
 278 00d0 97000000 		call	_Z7printlnPKc@plt
 278      E7800000 
GAS LISTING /tmp/ccUvhS4d.s 			page 10


 279              	.LVL16:
  70:src/interruptRoutine.cpp **** 		}
 280              		.loc 1 70 5 is_stmt 1
 281 00d8 6FF05FFC 		j	.L4
 282              	.LVL17:
 283              	.L13:
 284              	.LBE25:
 285              	.LBE26:
  76:src/interruptRoutine.cpp **** 	} else if (scause == (1UL << 63 | 1)) {
 286              		.loc 1 76 3
  76:src/interruptRoutine.cpp **** 	} else if (scause == (1UL << 63 | 1)) {
 287              		.loc 1 76 18 is_stmt 0
 288 00dc 97000000 		call	console_handler@plt
 288      E7800000 
 289              	.LVL18:
 290 00e4 6FF01FFC 		j	.L1
 291              	.LVL19:
 292              	.L10:
  81:src/interruptRoutine.cpp **** 	}
 293              		.loc 1 81 3 is_stmt 1
  81:src/interruptRoutine.cpp **** 	}
 294              		.loc 1 81 10 is_stmt 0
 295 00e8 17050000 		lla	a0,.LC1
 295      13050500 
 296 00f0 97000000 		call	_Z7printlnPKc@plt
 296      E7800000 
 297              	.LVL20:
 298              	.LBE27:
 299              		.loc 1 83 1
 300 00f8 6FF0DFFA 		j	.L1
 301              		.cfi_endproc
 302              	.LFE18:
 304              	.Letext0:
 305              		.file 3 "src/../lib/hw.h"
 306              		.file 4 "src/../h/MemoryAllocator.hpp"
 307              		.file 5 "src/../h/syscall_c.hpp"
 308              		.file 6 "src/../h/helper.hpp"
 309              		.file 7 "src/../lib/console.h"
GAS LISTING /tmp/ccUvhS4d.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 interruptRoutine.cpp
     /tmp/ccUvhS4d.s:17     .text:0000000000000000 interruptRoutine
     /tmp/ccUvhS4d.s:21     .text:0000000000000000 .L0 
     /tmp/ccUvhS4d.s:22     .text:0000000000000000 .L0 
     /tmp/ccUvhS4d.s:23     .text:0000000000000004 .L0 
     /tmp/ccUvhS4d.s:27     .text:0000000000000010 .L0 
     /tmp/ccUvhS4d.s:28     .text:0000000000000010 .L0 
     /tmp/ccUvhS4d.s:29     .text:0000000000000010 .L0 
     /tmp/ccUvhS4d.s:31     .text:0000000000000014 .L0 
     /tmp/ccUvhS4d.s:36     .text:0000000000000014 .L0 
     /tmp/ccUvhS4d.s:37     .text:0000000000000014 .L0 
     /tmp/ccUvhS4d.s:38     .text:0000000000000014 .L0 
  src/../h/Riscv.hpp:80     .text:0000000000000014 .L0 
     /tmp/ccUvhS4d.s:46     .text:000000000000001c .L0 
     /tmp/ccUvhS4d.s:47     .text:000000000000001c .L0 
     /tmp/ccUvhS4d.s:54     .text:0000000000000020 .L0 
     /tmp/ccUvhS4d.s:55     .text:0000000000000020 .L0 
     /tmp/ccUvhS4d.s:56     .text:0000000000000020 .L0 
  src/../h/Riscv.hpp:90     .text:0000000000000020 .L0 
     /tmp/ccUvhS4d.s:64     .text:0000000000000028 .L0 
     /tmp/ccUvhS4d.s:65     .text:0000000000000028 .L0 
     /tmp/ccUvhS4d.s:71     .text:000000000000002c .L0 
     /tmp/ccUvhS4d.s:72     .text:000000000000002c .L0 
     /tmp/ccUvhS4d.s:74     .text:0000000000000030 .L0 
     /tmp/ccUvhS4d.s:77     .text:0000000000000038 .L0 
     /tmp/ccUvhS4d.s:82     .text:0000000000000048 .L0 
     /tmp/ccUvhS4d.s:90     .text:0000000000000058 .L0 
     /tmp/ccUvhS4d.s:91     .text:0000000000000058 .L0 
     /tmp/ccUvhS4d.s:92     .text:0000000000000058 .L0 
     /tmp/ccUvhS4d.s:99     .text:0000000000000060 .L0 
     /tmp/ccUvhS4d.s:106    .text:0000000000000064 .L0 
     /tmp/ccUvhS4d.s:107    .text:0000000000000064 .L0 
src/interruptRoutine.cpp:19     .text:0000000000000064 .L0 
     /tmp/ccUvhS4d.s:115    .text:0000000000000068 .L0 
     /tmp/ccUvhS4d.s:200    .text:000000000000008c .L0 
     /tmp/ccUvhS4d.s:201    .text:000000000000008c .L0 
     /tmp/ccUvhS4d.s:202    .text:000000000000008c .L0 
src/interruptRoutine.cpp:25     .text:000000000000008c .L0 
     /tmp/ccUvhS4d.s:209    .text:0000000000000090 .L0 
     /tmp/ccUvhS4d.s:210    .text:0000000000000090 .L0 
     /tmp/ccUvhS4d.s:212    .text:0000000000000090 .L0 
     /tmp/ccUvhS4d.s:219    .text:000000000000009c .L0 
     /tmp/ccUvhS4d.s:220    .text:000000000000009c .L0 
     /tmp/ccUvhS4d.s:221    .text:000000000000009c .L0 
     /tmp/ccUvhS4d.s:226    .text:00000000000000a0 .L0 
  src/../h/Riscv.hpp:95     .text:00000000000000a0 .L0 
     /tmp/ccUvhS4d.s:239    .text:00000000000000a4 .L0 
     /tmp/ccUvhS4d.s:240    .text:00000000000000a8 .L0 
     /tmp/ccUvhS4d.s:241    .text:00000000000000a8 .L0 
     /tmp/ccUvhS4d.s:243    .text:00000000000000ac .L0 
     /tmp/ccUvhS4d.s:244    .text:00000000000000ac .L0 
     /tmp/ccUvhS4d.s:246    .text:00000000000000b0 .L0 
     /tmp/ccUvhS4d.s:248    .text:00000000000000b4 .L0 
     /tmp/ccUvhS4d.s:252    .text:00000000000000b8 .L0 
     /tmp/ccUvhS4d.s:257    .text:00000000000000b8 .L0 
     /tmp/ccUvhS4d.s:258    .text:00000000000000b8 .L0 
GAS LISTING /tmp/ccUvhS4d.s 			page 12


     /tmp/ccUvhS4d.s:259    .text:00000000000000b8 .L0 
src/interruptRoutine.cpp:32     .text:00000000000000b8 .L0 
     /tmp/ccUvhS4d.s:266    .text:00000000000000bc .L0 
     /tmp/ccUvhS4d.s:268    .text:00000000000000bc .L0 
     /tmp/ccUvhS4d.s:271    .text:00000000000000c4 .L0 
     /tmp/ccUvhS4d.s:275    .text:00000000000000c8 .L0 
     /tmp/ccUvhS4d.s:276    .text:00000000000000c8 .L0 
     /tmp/ccUvhS4d.s:277    .text:00000000000000c8 .L0 
     /tmp/ccUvhS4d.s:281    .text:00000000000000d8 .L0 
     /tmp/ccUvhS4d.s:287    .text:00000000000000dc .L0 
     /tmp/ccUvhS4d.s:288    .text:00000000000000dc .L0 
     /tmp/ccUvhS4d.s:294    .text:00000000000000e8 .L0 
     /tmp/ccUvhS4d.s:295    .text:00000000000000e8 .L0 
     /tmp/ccUvhS4d.s:300    .text:00000000000000f8 .L0 
     /tmp/ccUvhS4d.s:301    .text:00000000000000fc .L0 
     /tmp/ccUvhS4d.s:310    .text:00000000000000fc .L0 
     /tmp/ccUvhS4d.s:128    .rodata:0000000000000000 .L5
     /tmp/ccUvhS4d.s:120    .text:0000000000000074 .L0 
     /tmp/ccUvhS4d.s:8      .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccUvhS4d.s:277    .text:00000000000000c8 .L0 
     /tmp/ccUvhS4d.s:11     .rodata.str1.8:0000000000000018 .LC1
     /tmp/ccUvhS4d.s:295    .text:00000000000000e8 .L0 
     /tmp/ccUvhS4d.s:101    .text:0000000000000064 .L12
     /tmp/ccUvhS4d.s:283    .text:00000000000000dc .L13
     /tmp/ccUvhS4d.s:292    .text:00000000000000e8 .L10
     /tmp/ccUvhS4d.s:233    .text:00000000000000a4 .L1
     /tmp/ccUvhS4d.s:273    .text:00000000000000c8 .L3
     /tmp/ccUvhS4d.s:217    .text:000000000000009c .L4
     /tmp/ccUvhS4d.s:197    .text:000000000000008c .L7
     /tmp/ccUvhS4d.s:251    .text:00000000000000b8 .L6
     /tmp/ccUvhS4d.s:977    .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccUvhS4d.s:1900   .debug_str:0000000000000413 .LASF80
     /tmp/ccUvhS4d.s:1830   .debug_str:00000000000001ef .LASF81
     /tmp/ccUvhS4d.s:1824   .debug_str:00000000000001a7 .LASF82
     /tmp/ccUvhS4d.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccUvhS4d.s:304    .text:00000000000000fc .Letext0
     /tmp/ccUvhS4d.s:1762   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccUvhS4d.s:1856   .debug_str:00000000000002ea .LASF0
     /tmp/ccUvhS4d.s:1868   .debug_str:000000000000031d .LASF1
     /tmp/ccUvhS4d.s:1848   .debug_str:000000000000028a .LASF2
     /tmp/ccUvhS4d.s:1836   .debug_str:0000000000000238 .LASF4
     /tmp/ccUvhS4d.s:1888   .debug_str:00000000000003cd .LASF3
     /tmp/ccUvhS4d.s:1780   .debug_str:0000000000000066 .LASF5
     /tmp/ccUvhS4d.s:1870   .debug_str:0000000000000330 .LASF6
     /tmp/ccUvhS4d.s:1854   .debug_str:00000000000002d7 .LASF7
     /tmp/ccUvhS4d.s:1910   .debug_str:000000000000050b .LASF8
     /tmp/ccUvhS4d.s:1822   .debug_str:0000000000000199 .LASF9
     /tmp/ccUvhS4d.s:1874   .debug_str:000000000000034f .LASF10
     /tmp/ccUvhS4d.s:1902   .debug_str:00000000000004d7 .LASF11
     /tmp/ccUvhS4d.s:1782   .debug_str:000000000000006d .LASF12
     /tmp/ccUvhS4d.s:1770   .debug_str:0000000000000032 .LASF13
     /tmp/ccUvhS4d.s:1786   .debug_str:0000000000000087 .LASF14
     /tmp/ccUvhS4d.s:1884   .debug_str:000000000000039f .LASF15
     /tmp/ccUvhS4d.s:1794   .debug_str:00000000000000b5 .LASF16
     /tmp/ccUvhS4d.s:1846   .debug_str:000000000000027a .LASF30
     /tmp/ccUvhS4d.s:1908   .debug_str:00000000000004fc .LASF20
     /tmp/ccUvhS4d.s:1924   .debug_str:0000000000000558 .LASF17
GAS LISTING /tmp/ccUvhS4d.s 			page 13


     /tmp/ccUvhS4d.s:1912   .debug_str:000000000000051b .LASF18
     /tmp/ccUvhS4d.s:1896   .debug_str:00000000000003fc .LASF19
     /tmp/ccUvhS4d.s:1838   .debug_str:000000000000023f .LASF21
     /tmp/ccUvhS4d.s:1906   .debug_str:00000000000004f4 .LASF22
     /tmp/ccUvhS4d.s:1882   .debug_str:0000000000000380 .LASF24
     /tmp/ccUvhS4d.s:1790   .debug_str:000000000000009e .LASF23
     /tmp/ccUvhS4d.s:1768   .debug_str:0000000000000014 .LASF25
     /tmp/ccUvhS4d.s:1800   .debug_str:00000000000000ef .LASF40
     /tmp/ccUvhS4d.s:1764   .debug_str:0000000000000000 .LASF26
     /tmp/ccUvhS4d.s:1918   .debug_str:000000000000053a .LASF27
     /tmp/ccUvhS4d.s:1872   .debug_str:0000000000000343 .LASF28
     /tmp/ccUvhS4d.s:1808   .debug_str:0000000000000141 .LASF68
     /tmp/ccUvhS4d.s:1852   .debug_str:00000000000002a2 .LASF70
     /tmp/ccUvhS4d.s:1812   .debug_str:0000000000000160 .LASF29
     /tmp/ccUvhS4d.s:1864   .debug_str:000000000000030c .LASF31
     /tmp/ccUvhS4d.s:1842   .debug_str:0000000000000257 .LASF83
     /tmp/ccUvhS4d.s:1892   .debug_str:00000000000003e6 .LASF32
     /tmp/ccUvhS4d.s:1862   .debug_str:0000000000000303 .LASF33
     /tmp/ccUvhS4d.s:1840   .debug_str:000000000000024e .LASF34
     /tmp/ccUvhS4d.s:1778   .debug_str:0000000000000058 .LASF35
     /tmp/ccUvhS4d.s:1806   .debug_str:0000000000000126 .LASF37
     /tmp/ccUvhS4d.s:1894   .debug_str:00000000000003ef .LASF36
     /tmp/ccUvhS4d.s:1834   .debug_str:000000000000021e .LASF38
     /tmp/ccUvhS4d.s:1772   .debug_str:0000000000000042 .LASF42
     /tmp/ccUvhS4d.s:1810   .debug_str:000000000000014b .LASF44
     /tmp/ccUvhS4d.s:1804   .debug_str:000000000000011d .LASF39
     /tmp/ccUvhS4d.s:1802   .debug_str:0000000000000108 .LASF41
     /tmp/ccUvhS4d.s:1890   .debug_str:00000000000003df .LASF43
     /tmp/ccUvhS4d.s:1878   .debug_str:0000000000000366 .LASF45
     /tmp/ccUvhS4d.s:1880   .debug_str:0000000000000379 .LASF46
     /tmp/ccUvhS4d.s:1820   .debug_str:0000000000000186 .LASF47
     /tmp/ccUvhS4d.s:1816   .debug_str:0000000000000178 .LASF48
     /tmp/ccUvhS4d.s:1796   .debug_str:00000000000000cb .LASF49
     /tmp/ccUvhS4d.s:1766   .debug_str:000000000000000c .LASF50
     /tmp/ccUvhS4d.s:1828   .debug_str:00000000000001db .LASF51
     /tmp/ccUvhS4d.s:1858   .debug_str:00000000000002f7 .LASF52
     /tmp/ccUvhS4d.s:1914   .debug_str:0000000000000520 .LASF53
     /tmp/ccUvhS4d.s:1776   .debug_str:0000000000000051 .LASF54
     /tmp/ccUvhS4d.s:1814   .debug_str:0000000000000165 .LASF55
     /tmp/ccUvhS4d.s:1818   .debug_str:0000000000000180 .LASF56
     /tmp/ccUvhS4d.s:1898   .debug_str:0000000000000401 .LASF57
     /tmp/ccUvhS4d.s:1774   .debug_str:000000000000004b .LASF58
     /tmp/ccUvhS4d.s:1930   .debug_str:000000000000057a .LASF59
     /tmp/ccUvhS4d.s:1922   .debug_str:000000000000054d .LASF60
     /tmp/ccUvhS4d.s:1886   .debug_str:00000000000003b5 .LASF61
     /tmp/ccUvhS4d.s:1866   .debug_str:0000000000000312 .LASF62
     /tmp/ccUvhS4d.s:1844   .debug_str:0000000000000262 .LASF63
     /tmp/ccUvhS4d.s:1784   .debug_str:000000000000007d .LASF64
     /tmp/ccUvhS4d.s:1832   .debug_str:0000000000000208 .LASF65
     /tmp/ccUvhS4d.s:1850   .debug_str:0000000000000298 .LASF66
     /tmp/ccUvhS4d.s:1826   .debug_str:00000000000001c5 .LASF67
     /tmp/ccUvhS4d.s:1788   .debug_str:0000000000000093 .LASF69
     /tmp/ccUvhS4d.s:1926   .debug_str:000000000000055d .LASF71
     /tmp/ccUvhS4d.s:1792   .debug_str:00000000000000a4 .LASF72
     /tmp/ccUvhS4d.s:18     .text:0000000000000000 .LFB18
     /tmp/ccUvhS4d.s:302    .text:00000000000000fc .LFE18
     /tmp/ccUvhS4d.s:1916   .debug_str:0000000000000533 .LASF73
GAS LISTING /tmp/ccUvhS4d.s 			page 14


     /tmp/ccUvhS4d.s:1641   .debug_loc:0000000000000000 .LLST0
     /tmp/ccUvhS4d.s:1860   .debug_str:00000000000002fe .LASF74
     /tmp/ccUvhS4d.s:1674   .debug_loc:0000000000000088 .LLST1
     /tmp/ccUvhS4d.s:1748   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccUvhS4d.s:1920   .debug_str:0000000000000546 .LASF75
     /tmp/ccUvhS4d.s:1691   .debug_loc:00000000000000d3 .LLST3
     /tmp/ccUvhS4d.s:1698   .debug_loc:00000000000000f6 .LLST4
     /tmp/ccUvhS4d.s:1713   .debug_loc:0000000000000130 .LLST5
     /tmp/ccUvhS4d.s:215    .text:000000000000009c .LVL9
     /tmp/ccUvhS4d.s:269    .text:00000000000000c4 .LVL14
     /tmp/ccUvhS4d.s:279    .text:00000000000000d8 .LVL16
     /tmp/ccUvhS4d.s:223    .text:00000000000000a0 .LBB23
     /tmp/ccUvhS4d.s:235    .text:00000000000000a4 .LBE23
     /tmp/ccUvhS4d.s:1720   .debug_loc:0000000000000153 .LLST6
     /tmp/ccUvhS4d.s:33     .text:0000000000000014 .LBB14
     /tmp/ccUvhS4d.s:50     .text:0000000000000020 .LBE14
     /tmp/ccUvhS4d.s:52     .text:0000000000000020 .LBB16
     /tmp/ccUvhS4d.s:68     .text:000000000000002c .LBE16
     /tmp/ccUvhS4d.s:88     .text:0000000000000058 .LBB19
     /tmp/ccUvhS4d.s:103    .text:0000000000000064 .LBE19
     /tmp/ccUvhS4d.s:1727   .debug_loc:0000000000000176 .LLST2
     /tmp/ccUvhS4d.s:289    .text:00000000000000e4 .LVL18
     /tmp/ccUvhS4d.s:297    .text:00000000000000f8 .LVL20
     /tmp/ccUvhS4d.s:1928   .debug_str:0000000000000575 .LASF76
     /tmp/ccUvhS4d.s:1904   .debug_str:00000000000004e6 .LASF77
     /tmp/ccUvhS4d.s:1876   .debug_str:000000000000035e .LASF79
     /tmp/ccUvhS4d.s:1798   .debug_str:00000000000000df .LASF78
     /tmp/ccUvhS4d.s:48     .text:0000000000000020 .LVL0
     /tmp/ccUvhS4d.s:116    .text:000000000000006c .LVL5
     /tmp/ccUvhS4d.s:250    .text:00000000000000b8 .LVL12
     /tmp/ccUvhS4d.s:272    .text:00000000000000c8 .LVL15
     /tmp/ccUvhS4d.s:282    .text:00000000000000dc .LVL17
     /tmp/ccUvhS4d.s:291    .text:00000000000000e8 .LVL19
     /tmp/ccUvhS4d.s:66     .text:000000000000002c .LVL1
     /tmp/ccUvhS4d.s:222    .text:00000000000000a0 .LVL10
     /tmp/ccUvhS4d.s:231    .text:00000000000000a4 .LVL11
     /tmp/ccUvhS4d.s:112    .text:0000000000000068 .LVL4
     /tmp/ccUvhS4d.s:119    .text:0000000000000074 .LVL6
     /tmp/ccUvhS4d.s:207    .text:0000000000000090 .LVL7
     /tmp/ccUvhS4d.s:213    .text:0000000000000094 .LVL8
     /tmp/ccUvhS4d.s:264    .text:00000000000000bc .LVL13
     /tmp/ccUvhS4d.s:87     .text:0000000000000058 .LVL2
     /tmp/ccUvhS4d.s:100    .text:0000000000000064 .LVL3
     /tmp/ccUvhS4d.s:311    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccUvhS4d.s:104    .text:0000000000000064 .LBB21
     /tmp/ccUvhS4d.s:236    .text:00000000000000a4 .LBE21
     /tmp/ccUvhS4d.s:254    .text:00000000000000b8 .LBB26
     /tmp/ccUvhS4d.s:285    .text:00000000000000dc .LBE26
     /tmp/ccUvhS4d.s:198    .text:000000000000008c .LBB22
     /tmp/ccUvhS4d.s:218    .text:000000000000009c .LBE22
     /tmp/ccUvhS4d.s:255    .text:00000000000000b8 .LBB25
     /tmp/ccUvhS4d.s:284    .text:00000000000000dc .LBE25

UNDEFINED SYMBOLS
_ZN15MemoryAllocator7kmallocEm
_ZN15MemoryAllocator5kfreeEPv
_Z7printlnPKc
GAS LISTING /tmp/ccUvhS4d.s 			page 15


console_handler
