GAS LISTING /tmp/cc0yUZsn.s 			page 1


   1              		.file	"interruptRoutine.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.section	.rodata
   7              		.align	3
   8              	.LC0:
   9 0000 0A4E6570 		.string	"\nNepostojeci op code: "
   9      6F73746F 
   9      6A656369 
   9      206F7020 
   9      636F6465 
  10 0017 00       		.align	3
  11              	.LC1:
  12 0018 0A736361 		.string	"\nscause: "
  12      7573653A 
  12      2000
  13 0022 00000000 		.align	3
  13      0000
  14              	.LC2:
  15 0028 0A736570 		.string	"\nsepc: "
  15      633A2000 
  16              		.align	3
  17              	.LC3:
  18 0030 0A477265 		.string	"\nGreska u prekidnoj rutini"
  18      736B6120 
  18      75207072 
  18      656B6964 
  18      6E6F6A20 
  19 004b 00000000 		.align	3
  19      00
  20              	.LC4:
  21 0050 73636175 		.string	"scause: "
  21      73653A20 
  21      00
  22              		.text
  23              		.align	2
  24              		.globl	interruptRoutine
  26              	interruptRoutine:
  27              	.LFB27:
  28              		.file 1 "src/interruptRoutine.cpp"
   1:src/interruptRoutine.cpp **** //
   2:src/interruptRoutine.cpp **** // Created by os on 5/22/23.
   3:src/interruptRoutine.cpp **** //
   4:src/interruptRoutine.cpp **** 
   5:src/interruptRoutine.cpp **** #include "../lib/console.h"
   6:src/interruptRoutine.cpp **** #include "../lib/hw.h"
   7:src/interruptRoutine.cpp **** #include "../h/MemoryAllocator.hpp"
   8:src/interruptRoutine.cpp **** #include "../h/helper.hpp"
   9:src/interruptRoutine.cpp **** #include "../h/Riscv.hpp"
  10:src/interruptRoutine.cpp **** #include "../h/syscall_c.hpp"
  11:src/interruptRoutine.cpp **** #include "../h/TCB.hpp"
  12:src/interruptRoutine.cpp **** 
  13:src/interruptRoutine.cpp **** #pragma GCC optimize("O0")
  14:src/interruptRoutine.cpp **** 
  15:src/interruptRoutine.cpp **** extern "C" void interruptRoutine() {
GAS LISTING /tmp/cc0yUZsn.s 			page 2


  29              		.loc 1 15 36
  30              		.cfi_startproc
  31 0000 130101F6 		addi	sp,sp,-160
  32              		.cfi_def_cfa_offset 160
  33 0004 233C1108 		sd	ra,152(sp)
  34 0008 23388108 		sd	s0,144(sp)
  35              		.cfi_offset 1, -8
  36              		.cfi_offset 8, -16
  37 000c 1304010A 		addi	s0,sp,160
  38              		.cfi_def_cfa 8, 0
  16:src/interruptRoutine.cpp **** 	//uint64 scause = Riscv::r_scause();
  17:src/interruptRoutine.cpp **** 	//uint64 sepc = Riscv::r_sepc();
  18:src/interruptRoutine.cpp **** 	uint64 scause, sepc, sstatus;
  39              		.loc 1 18 2
  19:src/interruptRoutine.cpp **** 	__asm__ volatile("csrr %[scause], scause":[scause] "=r"(scause): : "a5", "a0", "a1", "a2", "a3", "
  40              		.loc 1 19 2
  41              		.loc 1 19 116 is_stmt 0
  42              	#APP
  43              	# 19 "src/interruptRoutine.cpp" 1
  20              		__asm__ volatile("csrr %[sepc], sepc":[sepc] "=r"(sepc): : "a5", "a0", "a1", "a2", "a3", "a4", "a6
  44              		csrr t1, scause
  45              	# 0 "" 2
  46              	#NO_APP
  47 0014 233464FE 		sd	t1,-24(s0)
  48              	.LVL0:
  49              		.loc 1 20 2 is_stmt 1
  50              		.loc 1 20 108 is_stmt 0
  51              	#APP
  52              	# 20 "src/interruptRoutine.cpp" 1
  21              		__asm__ volatile("csrr %[status], sstatus":[status] "=r"(
  53              		csrr t1, sepc
  54              	# 0 "" 2
  55              	.LVL1:
  56              	#NO_APP
  57 001c 233064FE 		sd	t1,-32(s0)
  58              	.LVL2:
  59              		.loc 1 21 2 is_stmt 1
  22:src/interruptRoutine.cpp **** 			sstatus): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7");
  60              		.loc 1 22 63 is_stmt 0
  61              	#APP
  62              	# 22 "src/interruptRoutine.cpp" 1
  23              		uint64 a0, a1, a2, a3, a4, a5, a6, a7;
  63              		csrr t1, sstatus
  64              	# 0 "" 2
  65              	.LVL3:
  66              	#NO_APP
  67 0024 233C64FC 		sd	t1,-40(s0)
  68              	.LVL4:
  69              		.loc 1 23 2 is_stmt 1
  24:src/interruptRoutine.cpp **** 	__asm__ volatile("mv %[ax], a0":[ax] "=r"(a0): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7");
  70              		.loc 1 24 2
  71              		.loc 1 24 98 is_stmt 0
  72              	#APP
  73              	# 24 "src/interruptRoutine.cpp" 1
  25              		__asm__ volatile("mv %[ax], a1":[ax] "=r"(a1): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7");
  74              		mv t1, a0
  75              	# 0 "" 2
GAS LISTING /tmp/cc0yUZsn.s 			page 3


  76              	.LVL5:
  77              	#NO_APP
  78 002c 233864FC 		sd	t1,-48(s0)
  79              	.LVL6:
  80              		.loc 1 25 2 is_stmt 1
  81              		.loc 1 25 98 is_stmt 0
  82              	#APP
  83              	# 25 "src/interruptRoutine.cpp" 1
  26              		__asm__ volatile("mv %[ax], a2":[ax] "=r"(a2): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7");
  84              		mv t1, a1
  85              	# 0 "" 2
  86              	.LVL7:
  87              	#NO_APP
  88 0034 233464FC 		sd	t1,-56(s0)
  89              	.LVL8:
  90              		.loc 1 26 2 is_stmt 1
  91              		.loc 1 26 98 is_stmt 0
  92              	#APP
  93              	# 26 "src/interruptRoutine.cpp" 1
  27              		__asm__ volatile("mv %[ax], a3":[ax] "=r"(a3): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7");
  94              		mv t1, a2
  95              	# 0 "" 2
  96              	.LVL9:
  97              	#NO_APP
  98 003c 233064FC 		sd	t1,-64(s0)
  99              	.LVL10:
 100              		.loc 1 27 2 is_stmt 1
 101              		.loc 1 27 98 is_stmt 0
 102              	#APP
 103              	# 27 "src/interruptRoutine.cpp" 1
  28              		__asm__ volatile("mv %[ax], a4":[ax] "=r"(a4): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7");
 104              		mv t1, a3
 105              	# 0 "" 2
 106              	.LVL11:
 107              	#NO_APP
 108 0044 233C64FA 		sd	t1,-72(s0)
 109              	.LVL12:
 110              		.loc 1 28 2 is_stmt 1
 111              		.loc 1 28 98 is_stmt 0
 112              	#APP
 113              	# 28 "src/interruptRoutine.cpp" 1
  29              		__asm__ volatile("mv %[ax], a5":[ax] "=r"(a5): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7");
 114              		mv t1, a4
 115              	# 0 "" 2
 116              	.LVL13:
 117              	#NO_APP
 118 004c 233864FA 		sd	t1,-80(s0)
 119              	.LVL14:
 120              		.loc 1 29 2 is_stmt 1
 121              		.loc 1 29 98 is_stmt 0
 122              	#APP
 123              	# 29 "src/interruptRoutine.cpp" 1
  30              		__asm__ volatile("mv %[ax], a6":[ax] "=r"(a6): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7");
 124              		mv t1, a5
 125              	# 0 "" 2
 126              	.LVL15:
 127              	#NO_APP
GAS LISTING /tmp/cc0yUZsn.s 			page 4


 128 0054 233464FA 		sd	t1,-88(s0)
 129              	.LVL16:
 130              		.loc 1 30 2 is_stmt 1
 131              		.loc 1 30 98 is_stmt 0
 132              	#APP
 133              	# 30 "src/interruptRoutine.cpp" 1
  31              		__asm__ volatile("mv %[ax], a7":[ax] "=r"(a7): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7");
 134              		mv t1, a6
 135              	# 0 "" 2
 136              	.LVL17:
 137              	#NO_APP
 138 005c 233064FA 		sd	t1,-96(s0)
 139              	.LVL18:
 140              		.loc 1 31 2 is_stmt 1
 141              		.loc 1 31 98 is_stmt 0
 142              	#APP
 143              	# 31 "src/interruptRoutine.cpp" 1
  32              	
 144              		mv t1, a7
 145              	# 0 "" 2
 146              	.LVL19:
 147              	#NO_APP
 148 0064 233C64F8 		sd	t1,-104(s0)
 149              	.LVL20:
  33:src/interruptRoutine.cpp **** 	if (scause == 0x09 || scause == 0x08) {
 150              		.loc 1 33 2 is_stmt 1
 151              	.LBB2:
 152 0068 033784FE 		ld	a4,-24(s0)
 153 006c 93079000 		li	a5,9
 154 0070 6308F700 		beq	a4,a5,.L2
 155              		.loc 1 33 21 is_stmt 0 discriminator 1
 156 0074 033784FE 		ld	a4,-24(s0)
 157 0078 93078000 		li	a5,8
 158 007c 6316F716 		bne	a4,a5,.L3
 159              	.L2:
 160              	.LBB3:
  34:src/interruptRoutine.cpp **** 		//prekid zbog poziva ecall
  35:src/interruptRoutine.cpp **** 		uint64 opCode = a0;
 161              		.loc 1 35 3 is_stmt 1
 162              		.loc 1 35 10 is_stmt 0
 163 0080 833704FD 		ld	a5,-48(s0)
 164 0084 2338F4F8 		sd	a5,-112(s0)
 165              	.LVL21:
  36:src/interruptRoutine.cpp **** 
  37:src/interruptRoutine.cpp **** 		switch (opCode) {
 166              		.loc 1 37 3 is_stmt 1
 167 0088 033704F9 		ld	a4,-112(s0)
 168 008c 93072004 		li	a5,66
 169              	.LVL22:
 170 0090 63E0E70E 		bgtu	a4,a5,.L4
 171 0094 833704F9 		ld	a5,-112(s0)
 172 0098 13972700 		slli	a4,a5,2
 173              	.LVL23:
 174 009c 97070000 		lla	a5,.L6
 174      93870700 
 175              	.LVL24:
 176 00a4 B307F700 		add	a5,a4,a5
GAS LISTING /tmp/cc0yUZsn.s 			page 5


 177 00a8 83A70700 		lw	a5,0(a5)
 178 00ac 1B870700 		sext.w	a4,a5
 179 00b0 97070000 		lla	a5,.L6
 179      93870700 
 180 00b8 B307F700 		add	a5,a4,a5
 181 00bc 67800700 		jr	a5
 182              		.section	.rodata
 183 0059 000000   		.align	2
 184              		.align	2
 185              	.L6:
 186 005c 00000000 		.word	.L4-.L6
 187 0060 00000000 		.word	.L18-.L6
 188 0064 00000000 		.word	.L17-.L6
 189 0068 00000000 		.word	.L4-.L6
 190 006c 00000000 		.word	.L4-.L6
 191 0070 00000000 		.word	.L4-.L6
 192 0074 00000000 		.word	.L4-.L6
 193 0078 00000000 		.word	.L4-.L6
 194 007c 00000000 		.word	.L4-.L6
 195 0080 00000000 		.word	.L4-.L6
 196 0084 00000000 		.word	.L4-.L6
 197 0088 00000000 		.word	.L4-.L6
 198 008c 00000000 		.word	.L4-.L6
 199 0090 00000000 		.word	.L4-.L6
 200 0094 00000000 		.word	.L4-.L6
 201 0098 00000000 		.word	.L4-.L6
 202 009c 00000000 		.word	.L4-.L6
 203 00a0 00000000 		.word	.L16-.L6
 204 00a4 00000000 		.word	.L25-.L6
 205 00a8 00000000 		.word	.L14-.L6
 206 00ac 00000000 		.word	.L25-.L6
 207 00b0 00000000 		.word	.L4-.L6
 208 00b4 00000000 		.word	.L4-.L6
 209 00b8 00000000 		.word	.L4-.L6
 210 00bc 00000000 		.word	.L4-.L6
 211 00c0 00000000 		.word	.L4-.L6
 212 00c4 00000000 		.word	.L4-.L6
 213 00c8 00000000 		.word	.L4-.L6
 214 00cc 00000000 		.word	.L4-.L6
 215 00d0 00000000 		.word	.L4-.L6
 216 00d4 00000000 		.word	.L4-.L6
 217 00d8 00000000 		.word	.L4-.L6
 218 00dc 00000000 		.word	.L4-.L6
 219 00e0 00000000 		.word	.L25-.L6
 220 00e4 00000000 		.word	.L25-.L6
 221 00e8 00000000 		.word	.L25-.L6
 222 00ec 00000000 		.word	.L25-.L6
 223 00f0 00000000 		.word	.L4-.L6
 224 00f4 00000000 		.word	.L4-.L6
 225 00f8 00000000 		.word	.L4-.L6
 226 00fc 00000000 		.word	.L4-.L6
 227 0100 00000000 		.word	.L4-.L6
 228 0104 00000000 		.word	.L4-.L6
 229 0108 00000000 		.word	.L4-.L6
 230 010c 00000000 		.word	.L4-.L6
 231 0110 00000000 		.word	.L4-.L6
 232 0114 00000000 		.word	.L4-.L6
GAS LISTING /tmp/cc0yUZsn.s 			page 6


 233 0118 00000000 		.word	.L4-.L6
 234 011c 00000000 		.word	.L4-.L6
 235 0120 00000000 		.word	.L25-.L6
 236 0124 00000000 		.word	.L4-.L6
 237 0128 00000000 		.word	.L4-.L6
 238 012c 00000000 		.word	.L4-.L6
 239 0130 00000000 		.word	.L4-.L6
 240 0134 00000000 		.word	.L4-.L6
 241 0138 00000000 		.word	.L4-.L6
 242 013c 00000000 		.word	.L4-.L6
 243 0140 00000000 		.word	.L4-.L6
 244 0144 00000000 		.word	.L4-.L6
 245 0148 00000000 		.word	.L4-.L6
 246 014c 00000000 		.word	.L4-.L6
 247 0150 00000000 		.word	.L4-.L6
 248 0154 00000000 		.word	.L4-.L6
 249 0158 00000000 		.word	.L4-.L6
 250 015c 00000000 		.word	.L4-.L6
 251 0160 00000000 		.word	.L25-.L6
 252 0164 00000000 		.word	.L25-.L6
 253              		.text
 254              	.L18:
 255              	.LBB4:
 256              	.LBB5:
  38:src/interruptRoutine.cpp **** 			case 0x01:
 257              		.loc 1 38 4
  39:src/interruptRoutine.cpp **** 				//mem_alloc
  40:src/interruptRoutine.cpp **** 				size_t size;
 258              		.loc 1 40 5
  41:src/interruptRoutine.cpp **** 				size = (size_t)a1;
 259              		.loc 1 41 5
 260              		.loc 1 41 10 is_stmt 0
 261 00c0 833784FC 		ld	a5,-56(s0)
 262 00c4 2330F4F6 		sd	a5,-160(s0)
 263              	.LVL25:
  42:src/interruptRoutine.cpp **** 				//__asm__ volatile("mv %[size], a1":[size] "=r"(size));
  43:src/interruptRoutine.cpp **** 				size = size * MEM_BLOCK_SIZE;
 264              		.loc 1 43 5 is_stmt 1
 265              		.loc 1 43 10 is_stmt 0
 266 00c8 833704F6 		ld	a5,-160(s0)
 267 00cc 93976700 		slli	a5,a5,6
 268              	.LVL26:
 269 00d0 2330F4F6 		sd	a5,-160(s0)
 270              	.LVL27:
  44:src/interruptRoutine.cpp **** 				MemoryAllocator::kmalloc(size);
 271              		.loc 1 44 5 is_stmt 1
 272              		.loc 1 44 29 is_stmt 0
 273 00d4 033504F6 		ld	a0,-160(s0)
 274 00d8 97000000 		call	_ZN15MemoryAllocator7kmallocEm@plt
 274      E7800000 
 275              	.LVL28:
  45:src/interruptRoutine.cpp **** 				__asm__ volatile("sd a0, 80(s0)");
 276              		.loc 1 45 5 is_stmt 1
 277              		.loc 1 45 38 is_stmt 0
 278              	#APP
 279              	# 45 "src/interruptRoutine.cpp" 1
  46              					break;
GAS LISTING /tmp/cc0yUZsn.s 			page 7


 280              		sd a0, 80(s0)
 281              	# 0 "" 2
 282              		.loc 1 46 5 is_stmt 1
 283              	#NO_APP
 284 00e4 6F00800E 		j	.L19
 285              	.LVL29:
 286              	.L17:
  47:src/interruptRoutine.cpp **** 			case 0x02:
 287              		.loc 1 47 4
  48:src/interruptRoutine.cpp **** 				//mem_free
  49:src/interruptRoutine.cpp **** 				void* ptr;
 288              		.loc 1 49 5
  50:src/interruptRoutine.cpp **** 				ptr = (void*)a1;
 289              		.loc 1 50 5
 290              		.loc 1 50 9 is_stmt 0
 291 00e8 833784FC 		ld	a5,-56(s0)
 292 00ec 2334F4F6 		sd	a5,-152(s0)
 293              	.LVL30:
  51:src/interruptRoutine.cpp **** 				//__asm__ volatile("mv %[ptr], a1" :[ptr]"=r"(ptr));
  52:src/interruptRoutine.cpp **** 				MemoryAllocator::kfree(ptr);
 294              		.loc 1 52 5 is_stmt 1
 295              		.loc 1 52 27 is_stmt 0
 296 00f0 033584F6 		ld	a0,-152(s0)
 297 00f4 97000000 		call	_ZN15MemoryAllocator5kfreeEPv@plt
 297      E7800000 
 298              	.LVL31:
  53:src/interruptRoutine.cpp **** 				__asm__ volatile("sd a0, 80(s0)");
 299              		.loc 1 53 5 is_stmt 1
 300              		.loc 1 53 38 is_stmt 0
 301              	#APP
 302              	# 53 "src/interruptRoutine.cpp" 1
  54              					break;
 303              		sd a0, 80(s0)
 304              	# 0 "" 2
 305              		.loc 1 54 5 is_stmt 1
 306              	#NO_APP
 307 0100 6F00C00C 		j	.L19
 308              	.LVL32:
 309              	.L16:
  55:src/interruptRoutine.cpp **** 			case 0x11:
 310              		.loc 1 55 4
  56:src/interruptRoutine.cpp **** 				//thread_create
  57:src/interruptRoutine.cpp **** 				thread_t* handle;
 311              		.loc 1 57 5
  58:src/interruptRoutine.cpp **** 				handle = (thread_t*)a1;
 312              		.loc 1 58 5
 313              		.loc 1 58 12 is_stmt 0
 314 0104 833784FC 		ld	a5,-56(s0)
 315 0108 2334F4F8 		sd	a5,-120(s0)
 316              	.LVL33:
  59:src/interruptRoutine.cpp **** 				void (* function)(void*);
 317              		.loc 1 59 5 is_stmt 1
  60:src/interruptRoutine.cpp **** 				function = (void (*)(void*))a2;
 318              		.loc 1 60 5
 319              		.loc 1 60 14 is_stmt 0
 320 010c 833704FC 		ld	a5,-64(s0)
 321              	.LVL34:
GAS LISTING /tmp/cc0yUZsn.s 			page 8


 322 0110 2330F4F8 		sd	a5,-128(s0)
 323              	.LVL35:
  61:src/interruptRoutine.cpp **** 				void* args;
 324              		.loc 1 61 5 is_stmt 1
  62:src/interruptRoutine.cpp **** 				args = (void*)a3;
 325              		.loc 1 62 5
 326              		.loc 1 62 10 is_stmt 0
 327 0114 833784FB 		ld	a5,-72(s0)
 328              	.LVL36:
 329 0118 233CF4F6 		sd	a5,-136(s0)
 330              	.LVL37:
  63:src/interruptRoutine.cpp **** 				uint64* sp;
 331              		.loc 1 63 5 is_stmt 1
  64:src/interruptRoutine.cpp **** 				sp = (uint64*)a4;
 332              		.loc 1 64 5
 333              		.loc 1 64 8 is_stmt 0
 334 011c 833704FB 		ld	a5,-80(s0)
 335              	.LVL38:
 336 0120 2338F4F6 		sd	a5,-144(s0)
 337              	.LVL39:
  65:src/interruptRoutine.cpp **** 
  66:src/interruptRoutine.cpp **** 				*handle = TCB::createThread(function, args, sp);
 338              		.loc 1 66 5 is_stmt 1
 339              		.loc 1 66 32 is_stmt 0
 340 0124 033604F7 		ld	a2,-144(s0)
 341 0128 833584F7 		ld	a1,-136(s0)
 342 012c 033504F8 		ld	a0,-128(s0)
 343 0130 97000000 		call	_ZN3TCB12createThreadEPFvPvES0_Pm@plt
 343      E7800000 
 344              	.LVL40:
 345 0138 13070500 		mv	a4,a0
 346              		.loc 1 66 13
 347 013c 833784F8 		ld	a5,-120(s0)
 348 0140 23B0E700 		sd	a4,0(a5)
  67:src/interruptRoutine.cpp **** 				if (*handle != nullptr) {
 349              		.loc 1 67 5 is_stmt 1
 350              		.loc 1 67 9 is_stmt 0
 351 0144 833784F8 		ld	a5,-120(s0)
 352 0148 83B70700 		ld	a5,0(a5)
 353              		.loc 1 67 5
 354 014c 63860700 		beqz	a5,.L20
  68:src/interruptRoutine.cpp **** 					__asm__ volatile("li a0, 0");
 355              		.loc 1 68 6 is_stmt 1
 356              		.loc 1 68 34 is_stmt 0
 357              	#APP
 358              	# 68 "src/interruptRoutine.cpp" 1
  69              					} else {
 359              		li a0, 0
 360              	# 0 "" 2
 361              	#NO_APP
 362 0154 6F008000 		j	.L21
 363              	.L20:
  70:src/interruptRoutine.cpp **** 					__asm__ volatile("li a0, -1");
 364              		.loc 1 70 6 is_stmt 1
 365              		.loc 1 70 35 is_stmt 0
 366              	#APP
 367              	# 70 "src/interruptRoutine.cpp" 1
GAS LISTING /tmp/cc0yUZsn.s 			page 9


  71              					}
 368              		li a0, -1
 369              	# 0 "" 2
 370              	#NO_APP
 371              	.L21:
  72:src/interruptRoutine.cpp **** 				__asm__ volatile("sd a0, 80(s0)");
 372              		.loc 1 72 5 is_stmt 1
 373              		.loc 1 72 38 is_stmt 0
 374              	#APP
 375              	# 72 "src/interruptRoutine.cpp" 1
  73              					break;
 376              		sd a0, 80(s0)
 377              	# 0 "" 2
 378              		.loc 1 73 5 is_stmt 1
 379              	#NO_APP
 380 0160 6F00C006 		j	.L19
 381              	.LVL41:
 382              	.L14:
  74:src/interruptRoutine.cpp **** 			case 0x12:
  75:src/interruptRoutine.cpp **** 				//thread_exit
  76:src/interruptRoutine.cpp **** 				break;
  77:src/interruptRoutine.cpp **** 			case 0x13:
 383              		.loc 1 77 4
  78:src/interruptRoutine.cpp **** 				//thread_dispatch
  79:src/interruptRoutine.cpp **** 				TCB::yield();
 384              		.loc 1 79 5
 385              		.loc 1 79 15 is_stmt 0
 386 0164 97000000 		call	_ZN3TCB5yieldEv@plt
 386      E7800000 
 387              	.LVL42:
  80:src/interruptRoutine.cpp **** 				break;
 388              		.loc 1 80 5 is_stmt 1
 389 016c 6F000006 		j	.L19
 390              	.LVL43:
 391              	.L4:
  81:src/interruptRoutine.cpp **** 			case 0x14:
  82:src/interruptRoutine.cpp **** 				//thread_join
  83:src/interruptRoutine.cpp **** 				break;
  84:src/interruptRoutine.cpp **** 			case 0x21:
  85:src/interruptRoutine.cpp **** 				//sem_open
  86:src/interruptRoutine.cpp **** 				break;
  87:src/interruptRoutine.cpp **** 			case 0x22:
  88:src/interruptRoutine.cpp **** 				//sem_close
  89:src/interruptRoutine.cpp **** 				break;
  90:src/interruptRoutine.cpp **** 			case 0x23:
  91:src/interruptRoutine.cpp **** 				//sem_wait
  92:src/interruptRoutine.cpp **** 				break;
  93:src/interruptRoutine.cpp **** 			case 0x24:
  94:src/interruptRoutine.cpp **** 				//sem_signal
  95:src/interruptRoutine.cpp **** 				break;
  96:src/interruptRoutine.cpp **** 			case 0x31:
  97:src/interruptRoutine.cpp **** 				//time_sleep
  98:src/interruptRoutine.cpp **** 				break;
  99:src/interruptRoutine.cpp **** 			case 0x41:
 100:src/interruptRoutine.cpp **** 				//getc
 101:src/interruptRoutine.cpp **** 				break;
 102:src/interruptRoutine.cpp **** 			case 0x42:
GAS LISTING /tmp/cc0yUZsn.s 			page 10


 103:src/interruptRoutine.cpp **** 				//putc
 104:src/interruptRoutine.cpp **** 				break;
 105:src/interruptRoutine.cpp **** 			default:
 392              		.loc 1 105 4
 106:src/interruptRoutine.cpp **** 				printString("\nNepostojeci op code: ");
 393              		.loc 1 106 5
 394              		.loc 1 106 16 is_stmt 0
 395 0170 17050000 		lla	a0,.LC0
 395      13050500 
 396 0178 97000000 		call	_Z11printStringPKc@plt
 396      E7800000 
 397              	.LVL44:
 107:src/interruptRoutine.cpp **** 				printInteger(opCode);
 398              		.loc 1 107 5 is_stmt 1
 399              		.loc 1 107 17 is_stmt 0
 400 0180 033504F9 		ld	a0,-112(s0)
 401 0184 97000000 		call	_Z12printIntegerm@plt
 401      E7800000 
 402              	.LVL45:
 108:src/interruptRoutine.cpp **** 				printString("\nscause: ");
 403              		.loc 1 108 5 is_stmt 1
 404              		.loc 1 108 16 is_stmt 0
 405 018c 17050000 		lla	a0,.LC1
 405      13050500 
 406 0194 97000000 		call	_Z11printStringPKc@plt
 406      E7800000 
 407              	.LVL46:
 109:src/interruptRoutine.cpp **** 				printInteger(scause);
 408              		.loc 1 109 5 is_stmt 1
 409              		.loc 1 109 17 is_stmt 0
 410 019c 033584FE 		ld	a0,-24(s0)
 411 01a0 97000000 		call	_Z12printIntegerm@plt
 411      E7800000 
 412              	.LVL47:
 110:src/interruptRoutine.cpp **** 				printString("\nsepc: ");
 413              		.loc 1 110 5 is_stmt 1
 414              		.loc 1 110 16 is_stmt 0
 415 01a8 17050000 		lla	a0,.LC2
 415      13050500 
 416 01b0 97000000 		call	_Z11printStringPKc@plt
 416      E7800000 
 417              	.LVL48:
 111:src/interruptRoutine.cpp **** 				printInteger(sepc);
 418              		.loc 1 111 5 is_stmt 1
 419              		.loc 1 111 17 is_stmt 0
 420 01b8 033504FE 		ld	a0,-32(s0)
 421 01bc 97000000 		call	_Z12printIntegerm@plt
 421      E7800000 
 422              	.LVL49:
 112:src/interruptRoutine.cpp **** 				break;
 423              		.loc 1 112 5 is_stmt 1
 424 01c4 6F008000 		j	.L19
 425              	.LVL50:
 426              	.L25:
  76:src/interruptRoutine.cpp **** 			case 0x13:
 427              		.loc 1 76 5 is_stmt 0
 428 01c8 13000000 		nop
GAS LISTING /tmp/cc0yUZsn.s 			page 11


 429              	.LVL51:
 430              	.L19:
 431              	.LBE5:
 432              	.LBE4:
 113:src/interruptRoutine.cpp **** 		}
 114:src/interruptRoutine.cpp **** 		//sepc pokazuje na ecall instrukciju, treba preci na sledecu instrukciju
 115:src/interruptRoutine.cpp **** 		//sepc += 4;
 116:src/interruptRoutine.cpp **** 		__asm__ volatile("addi %[dst], %[src], 0x4":[dst]"=r"(sepc):[src]"r"(
 433              		.loc 1 116 3 is_stmt 1
 117:src/interruptRoutine.cpp **** 				sepc):"a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7");
 434              		.loc 1 117 58 is_stmt 0
 435 01cc 033304FE 		ld	t1,-32(s0)
 436              	#APP
 437              	# 117 "src/interruptRoutine.cpp" 1
 118              			__asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc):"a5", "a0", "a1", "a2", "a3", "a4", "a6"
 438              		addi t1, t1, 0x4
 439              	# 0 "" 2
 440              	.LVL52:
 441              	#NO_APP
 442 01d4 233064FE 		sd	t1,-32(s0)
 443              	.LVL53:
 444              		.loc 1 118 3 is_stmt 1
 445              		.loc 1 118 107 is_stmt 0
 446 01d8 033304FE 		ld	t1,-32(s0)
 447              	#APP
 448              	# 118 "src/interruptRoutine.cpp" 1
 119              			//Riscv::w_sepc(sepc + 4);
 449              		csrw sepc, t1
 450              	# 0 "" 2
 451              	#NO_APP
 452              	.LBE3:
 453 01e0 13000000 		nop
 454              	.LBE2:
 120:src/interruptRoutine.cpp **** 	} else if (scause == (1UL << 63 | 9)) {
 121:src/interruptRoutine.cpp **** 		//spoljasnji hardverski prekid
 122:src/interruptRoutine.cpp **** 		console_handler();
 123:src/interruptRoutine.cpp **** 	} else if (scause == (1UL << 63 | 1)) {
 124:src/interruptRoutine.cpp **** 		//prekid od tajmera
 125:src/interruptRoutine.cpp **** 		Riscv::mc_sip(Riscv::SIP_SSIP);
 126:src/interruptRoutine.cpp **** 	} else {
 127:src/interruptRoutine.cpp **** 		println("\nGreska u prekidnoj rutini");
 128:src/interruptRoutine.cpp **** 		printString("scause: ");
 129:src/interruptRoutine.cpp **** 		printInteger(scause);
 130:src/interruptRoutine.cpp **** 		printString("\nsepc: ");
 131:src/interruptRoutine.cpp **** 		printInteger(sepc);
 132:src/interruptRoutine.cpp **** 	}
 133:src/interruptRoutine.cpp **** }
 455              		.loc 1 133 1
 456 01e4 6F000009 		j	.L26
 457              	.LVL54:
 458              	.L3:
 459              	.LBB6:
 120:src/interruptRoutine.cpp **** 	} else if (scause == (1UL << 63 | 9)) {
 460              		.loc 1 120 9 is_stmt 1
 461 01e8 033784FE 		ld	a4,-24(s0)
 462              	.LVL55:
 463 01ec 9307F0FF 		li	a5,-1
GAS LISTING /tmp/cc0yUZsn.s 			page 12


 464 01f0 9397F703 		slli	a5,a5,63
 465 01f4 93879700 		addi	a5,a5,9
 466 01f8 6318F700 		bne	a4,a5,.L23
 122:src/interruptRoutine.cpp **** 	} else if (scause == (1UL << 63 | 1)) {
 467              		.loc 1 122 3
 122:src/interruptRoutine.cpp **** 	} else if (scause == (1UL << 63 | 1)) {
 468              		.loc 1 122 18 is_stmt 0
 469 01fc 97000000 		call	console_handler@plt
 469      E7800000 
 470              	.LVL56:
 471              	.LBE6:
 472              		.loc 1 133 1
 473 0204 6F000007 		j	.L26
 474              	.LVL57:
 475              	.L23:
 476              	.LBB7:
 123:src/interruptRoutine.cpp **** 		//prekid od tajmera
 477              		.loc 1 123 9 is_stmt 1
 478 0208 033784FE 		ld	a4,-24(s0)
 479 020c 9307F0FF 		li	a5,-1
 480 0210 9397F703 		slli	a5,a5,63
 481 0214 93871700 		addi	a5,a5,1
 482 0218 631AF700 		bne	a4,a5,.L24
 125:src/interruptRoutine.cpp **** 	} else {
 483              		.loc 1 125 3
 125:src/interruptRoutine.cpp **** 	} else {
 484              		.loc 1 125 16 is_stmt 0
 485 021c 13052000 		li	a0,2
 486 0220 97000000 		call	_ZN5Riscv6mc_sipEm
 486      E7800000 
 487              	.LVL58:
 488              	.LBE7:
 489              		.loc 1 133 1
 490 0228 6F00C004 		j	.L26
 491              	.LVL59:
 492              	.L24:
 493              	.LBB8:
 127:src/interruptRoutine.cpp **** 		printString("scause: ");
 494              		.loc 1 127 3 is_stmt 1
 127:src/interruptRoutine.cpp **** 		printString("scause: ");
 495              		.loc 1 127 10 is_stmt 0
 496 022c 17050000 		lla	a0,.LC3
 496      13050500 
 497 0234 97000000 		call	_Z7printlnPKc@plt
 497      E7800000 
 498              	.LVL60:
 128:src/interruptRoutine.cpp **** 		printInteger(scause);
 499              		.loc 1 128 3 is_stmt 1
 128:src/interruptRoutine.cpp **** 		printInteger(scause);
 500              		.loc 1 128 14 is_stmt 0
 501 023c 17050000 		lla	a0,.LC4
 501      13050500 
 502 0244 97000000 		call	_Z11printStringPKc@plt
 502      E7800000 
 503              	.LVL61:
 129:src/interruptRoutine.cpp **** 		printString("\nsepc: ");
 504              		.loc 1 129 3 is_stmt 1
GAS LISTING /tmp/cc0yUZsn.s 			page 13


 129:src/interruptRoutine.cpp **** 		printString("\nsepc: ");
 505              		.loc 1 129 15 is_stmt 0
 506 024c 033584FE 		ld	a0,-24(s0)
 507 0250 97000000 		call	_Z12printIntegerm@plt
 507      E7800000 
 508              	.LVL62:
 130:src/interruptRoutine.cpp **** 		printInteger(sepc);
 509              		.loc 1 130 3 is_stmt 1
 130:src/interruptRoutine.cpp **** 		printInteger(sepc);
 510              		.loc 1 130 14 is_stmt 0
 511 0258 17050000 		lla	a0,.LC2
 511      13050500 
 512 0260 97000000 		call	_Z11printStringPKc@plt
 512      E7800000 
 513              	.LVL63:
 131:src/interruptRoutine.cpp **** 	}
 514              		.loc 1 131 3 is_stmt 1
 131:src/interruptRoutine.cpp **** 	}
 515              		.loc 1 131 15 is_stmt 0
 516 0268 033504FE 		ld	a0,-32(s0)
 517 026c 97000000 		call	_Z12printIntegerm@plt
 517      E7800000 
 518              	.LVL64:
 519              	.L26:
 520              	.LBE8:
 521              		.loc 1 133 1
 522 0274 13000000 		nop
 523 0278 83308109 		ld	ra,152(sp)
 524              		.cfi_restore 1
 525 027c 03340109 		ld	s0,144(sp)
 526              		.cfi_restore 8
 527              		.cfi_def_cfa 2, 160
 528              	.LVL65:
 529 0280 1301010A 		addi	sp,sp,160
 530              		.cfi_def_cfa_offset 0
 531              	.LVL66:
 532 0284 67800000 		jr	ra
 533              		.cfi_endproc
 534              	.LFE27:
 536              		.section	.text._ZN5Riscv6mc_sipEm,"axG",@progbits,_ZN5Riscv6mc_sipEm,comdat
 537              		.align	2
 538              		.weak	_ZN5Riscv6mc_sipEm
 540              	_ZN5Riscv6mc_sipEm:
 541              	.LFB10:
 542              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 5/17/23.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJEKAT2023_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJEKAT2023_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** class Riscv {
  11:src/../h/Riscv.hpp **** public:
  12:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/cc0yUZsn.s 			page 14


  13:src/../h/Riscv.hpp **** 	//stavljanje registara x3-x31 na stek
  14:src/../h/Riscv.hpp **** 	static void pushRegisters();    //implementacija u asm
  15:src/../h/Riscv.hpp **** 
  16:src/../h/Riscv.hpp **** 	//skidanje registara x3-x31 sa steka
  17:src/../h/Riscv.hpp **** 	static void popRegisters();     //implementacija u asm
  18:src/../h/Riscv.hpp **** 
  19:src/../h/Riscv.hpp **** 	//read scause
  20:src/../h/Riscv.hpp **** 	static uint64 r_scause();
  21:src/../h/Riscv.hpp **** 
  22:src/../h/Riscv.hpp **** 	//write scause
  23:src/../h/Riscv.hpp **** 	static void w_scause(uint64 scause);
  24:src/../h/Riscv.hpp **** 
  25:src/../h/Riscv.hpp **** 	//read sepc
  26:src/../h/Riscv.hpp **** 	static uint64 r_sepc();
  27:src/../h/Riscv.hpp **** 
  28:src/../h/Riscv.hpp **** 	//write sepc
  29:src/../h/Riscv.hpp **** 	static void w_sepc(uint64 sepc);
  30:src/../h/Riscv.hpp **** 
  31:src/../h/Riscv.hpp **** 	//read stvec
  32:src/../h/Riscv.hpp **** 	static uint64 r_stvec();
  33:src/../h/Riscv.hpp **** 
  34:src/../h/Riscv.hpp **** 	//write stvec
  35:src/../h/Riscv.hpp **** 	static void w_stvec(uint64 stvec);
  36:src/../h/Riscv.hpp **** 
  37:src/../h/Riscv.hpp **** 	enum BitMaskSip {
  38:src/../h/Riscv.hpp **** 		//postoji zahtev za softverski prekid
  39:src/../h/Riscv.hpp **** 		SIP_SSIP = (1 << 1),
  40:src/../h/Riscv.hpp **** 		//postoji prekid od tajmera
  41:src/../h/Riscv.hpp **** 		SIP_STIP = (1 << 5),
  42:src/../h/Riscv.hpp **** 		//postoji zahtev za spoljasnji hardverski prekid
  43:src/../h/Riscv.hpp **** 		SIP_SEIP = (1 << 9)
  44:src/../h/Riscv.hpp **** 	};
  45:src/../h/Riscv.hpp **** 
  46:src/../h/Riscv.hpp **** 	//mask set sip
  47:src/../h/Riscv.hpp **** 	static void ms_sip(uint64 mask);
  48:src/../h/Riscv.hpp **** 
  49:src/../h/Riscv.hpp **** 	//mask clear sip
  50:src/../h/Riscv.hpp **** 	static void mc_sip(uint64 mask);
  51:src/../h/Riscv.hpp **** 
  52:src/../h/Riscv.hpp **** 	//read sip
  53:src/../h/Riscv.hpp **** 	static uint64 r_sip();
  54:src/../h/Riscv.hpp **** 
  55:src/../h/Riscv.hpp **** 	//write sip
  56:src/../h/Riscv.hpp **** 	static void w_sip(uint64 sip);
  57:src/../h/Riscv.hpp **** 
  58:src/../h/Riscv.hpp **** 	enum BitMaskSstatus {
  59:src/../h/Riscv.hpp **** 		//1 - dozvoljeni prekidi; 0- nedozvoljeni prekidi; igonrise se u korisnickom rezimu
  60:src/../h/Riscv.hpp **** 		SSTATUS_SIE = (1 << 1),
  61:src/../h/Riscv.hpp **** 		//prethodna vrednost bita SIE
  62:src/../h/Riscv.hpp **** 		SSTATUS_SPIE = (1 << 5),
  63:src/../h/Riscv.hpp **** 		//iz kog rezima se desio skok; 0 - iz korisnickog; 1 - iz sistemskog
  64:src/../h/Riscv.hpp **** 		SSTATUS_SPP = (1 << 8)
  65:src/../h/Riscv.hpp **** 	};
  66:src/../h/Riscv.hpp **** 
  67:src/../h/Riscv.hpp **** 	//mask set sstatus
  68:src/../h/Riscv.hpp **** 	static void ms_sstatus(uint64 mask);
  69:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/cc0yUZsn.s 			page 15


  70:src/../h/Riscv.hpp **** 	//mask clear sstatus
  71:src/../h/Riscv.hpp **** 	static void mc_sstatus(uint64 mask);
  72:src/../h/Riscv.hpp **** 
  73:src/../h/Riscv.hpp **** 	//read sstatus
  74:src/../h/Riscv.hpp **** 	static uint64 r_sstatus();
  75:src/../h/Riscv.hpp **** 
  76:src/../h/Riscv.hpp **** 	//write sstatus
  77:src/../h/Riscv.hpp **** 	static void w_sstatus(uint64 sstatus);
  78:src/../h/Riscv.hpp **** 
  79:src/../h/Riscv.hpp **** 	//upisuje kod sistemskog poziva u registar a0
  80:src/../h/Riscv.hpp **** 	static void loadOpCode(uint64 opCode);
  81:src/../h/Riscv.hpp **** 
  82:src/../h/Riscv.hpp **** };
  83:src/../h/Riscv.hpp **** 
  84:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause() {
  85:src/../h/Riscv.hpp **** 	uint64 volatile scause;
  86:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[scause], scause": [scause] "=r"(scause));
  87:src/../h/Riscv.hpp **** 	return scause;
  88:src/../h/Riscv.hpp **** }
  89:src/../h/Riscv.hpp **** 
  90:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
  91:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw scause, %[scause]": :[scause] "r"(scause));
  92:src/../h/Riscv.hpp **** }
  93:src/../h/Riscv.hpp **** 
  94:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc() {
  95:src/../h/Riscv.hpp **** 	uint64 volatile sepc;
  96:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[sepc], sepc": [sepc] "=r"(sepc));
  97:src/../h/Riscv.hpp **** 	return sepc;
  98:src/../h/Riscv.hpp **** }
  99:src/../h/Riscv.hpp **** 
 100:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
 101:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 102:src/../h/Riscv.hpp **** }
 103:src/../h/Riscv.hpp **** 
 104:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec() {
 105:src/../h/Riscv.hpp **** 	uint64 volatile stvec;
 106:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[stvec], stvec": [stvec] "=r"(stvec));
 107:src/../h/Riscv.hpp **** 	return stvec;
 108:src/../h/Riscv.hpp **** }
 109:src/../h/Riscv.hpp **** 
 110:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 111:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw stvec, %[stvec]": :[stvec] "r"(stvec));
 112:src/../h/Riscv.hpp **** }
 113:src/../h/Riscv.hpp **** 
 114:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 115:src/../h/Riscv.hpp **** 	__asm__ volatile("csrs sip, %[mask]": :[mask] "r"(mask));
 116:src/../h/Riscv.hpp **** }
 117:src/../h/Riscv.hpp **** 
 118:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 543              		.loc 2 118 40 is_stmt 1
 544              		.cfi_startproc
 545              	.LVL67:
 546 0000 130101FF 		addi	sp,sp,-16
 547              		.cfi_def_cfa_offset 16
 548 0004 23348100 		sd	s0,8(sp)
 549              		.cfi_offset 8, -8
 550 0008 13040101 		addi	s0,sp,16
GAS LISTING /tmp/cc0yUZsn.s 			page 16


 551              		.cfi_def_cfa 8, 0
 119:src/../h/Riscv.hpp **** 	__asm__ volatile("csrc sip, %[mask]": :[mask] "r"(mask));
 552              		.loc 2 119 2
 553              		.loc 2 119 58 is_stmt 0
 554              	#APP
 555              	# 119 "src/../h/Riscv.hpp" 1
 120              	}
 556              		csrc sip, a0
 557              	# 0 "" 2
 558              		.loc 2 120 1
 559              	#NO_APP
 560 0010 03348100 		ld	s0,8(sp)
 561              		.cfi_restore 8
 562              		.cfi_def_cfa 2, 16
 563 0014 13010101 		addi	sp,sp,16
 564              		.cfi_def_cfa_offset 0
 565 0018 67800000 		jr	ra
 566              		.cfi_endproc
 567              	.LFE10:
 569              		.text
 570              	.Letext0:
 571              		.file 3 "src/../lib/hw.h"
 572              		.file 4 "src/../h/MemoryAllocator.hpp"
 573              		.file 5 "src/../h/syscall_c.hpp"
 574              		.file 6 "src/../h/TCB.hpp"
 575              		.file 7 "src/../h/helper.hpp"
 576              		.file 8 "src/../lib/console.h"
GAS LISTING /tmp/cc0yUZsn.s 			page 17


DEFINED SYMBOLS
                            *ABS*:0000000000000000 interruptRoutine.cpp
     /tmp/cc0yUZsn.s:26     .text:0000000000000000 interruptRoutine
     /tmp/cc0yUZsn.s:30     .text:0000000000000000 .L0 
     /tmp/cc0yUZsn.s:31     .text:0000000000000000 .L0 
     /tmp/cc0yUZsn.s:32     .text:0000000000000004 .L0 
     /tmp/cc0yUZsn.s:35     .text:000000000000000c .L0 
     /tmp/cc0yUZsn.s:36     .text:000000000000000c .L0 
     /tmp/cc0yUZsn.s:38     .text:0000000000000010 .L0 
     /tmp/cc0yUZsn.s:40     .text:0000000000000010 .L0 
     /tmp/cc0yUZsn.s:41     .text:0000000000000010 .L0 
src/interruptRoutine.cpp:19     .text:0000000000000010 .L0 
     /tmp/cc0yUZsn.s:50     .text:0000000000000018 .L0 
src/interruptRoutine.cpp:20     .text:0000000000000018 .L0 
     /tmp/cc0yUZsn.s:60     .text:0000000000000020 .L0 
src/interruptRoutine.cpp:22     .text:0000000000000020 .L0 
     /tmp/cc0yUZsn.s:70     .text:0000000000000028 .L0 
     /tmp/cc0yUZsn.s:71     .text:0000000000000028 .L0 
src/interruptRoutine.cpp:24     .text:0000000000000028 .L0 
     /tmp/cc0yUZsn.s:81     .text:0000000000000030 .L0 
src/interruptRoutine.cpp:25     .text:0000000000000030 .L0 
     /tmp/cc0yUZsn.s:91     .text:0000000000000038 .L0 
src/interruptRoutine.cpp:26     .text:0000000000000038 .L0 
     /tmp/cc0yUZsn.s:101    .text:0000000000000040 .L0 
src/interruptRoutine.cpp:27     .text:0000000000000040 .L0 
     /tmp/cc0yUZsn.s:111    .text:0000000000000048 .L0 
src/interruptRoutine.cpp:28     .text:0000000000000048 .L0 
     /tmp/cc0yUZsn.s:121    .text:0000000000000050 .L0 
src/interruptRoutine.cpp:29     .text:0000000000000050 .L0 
     /tmp/cc0yUZsn.s:131    .text:0000000000000058 .L0 
src/interruptRoutine.cpp:30     .text:0000000000000058 .L0 
     /tmp/cc0yUZsn.s:141    .text:0000000000000060 .L0 
src/interruptRoutine.cpp:31     .text:0000000000000060 .L0 
     /tmp/cc0yUZsn.s:152    .text:0000000000000068 .L0 
     /tmp/cc0yUZsn.s:156    .text:0000000000000074 .L0 
     /tmp/cc0yUZsn.s:162    .text:0000000000000080 .L0 
     /tmp/cc0yUZsn.s:163    .text:0000000000000080 .L0 
     /tmp/cc0yUZsn.s:167    .text:0000000000000088 .L0 
     /tmp/cc0yUZsn.s:258    .text:00000000000000c0 .L0 
     /tmp/cc0yUZsn.s:259    .text:00000000000000c0 .L0 
     /tmp/cc0yUZsn.s:260    .text:00000000000000c0 .L0 
     /tmp/cc0yUZsn.s:261    .text:00000000000000c0 .L0 
     /tmp/cc0yUZsn.s:265    .text:00000000000000c8 .L0 
     /tmp/cc0yUZsn.s:266    .text:00000000000000c8 .L0 
     /tmp/cc0yUZsn.s:272    .text:00000000000000d4 .L0 
     /tmp/cc0yUZsn.s:273    .text:00000000000000d4 .L0 
     /tmp/cc0yUZsn.s:277    .text:00000000000000e0 .L0 
src/interruptRoutine.cpp:45     .text:00000000000000e0 .L0 
     /tmp/cc0yUZsn.s:284    .text:00000000000000e4 .L0 
     /tmp/cc0yUZsn.s:288    .text:00000000000000e8 .L0 
     /tmp/cc0yUZsn.s:289    .text:00000000000000e8 .L0 
     /tmp/cc0yUZsn.s:290    .text:00000000000000e8 .L0 
     /tmp/cc0yUZsn.s:291    .text:00000000000000e8 .L0 
     /tmp/cc0yUZsn.s:295    .text:00000000000000f0 .L0 
     /tmp/cc0yUZsn.s:296    .text:00000000000000f0 .L0 
     /tmp/cc0yUZsn.s:300    .text:00000000000000fc .L0 
src/interruptRoutine.cpp:53     .text:00000000000000fc .L0 
GAS LISTING /tmp/cc0yUZsn.s 			page 18


     /tmp/cc0yUZsn.s:307    .text:0000000000000100 .L0 
     /tmp/cc0yUZsn.s:311    .text:0000000000000104 .L0 
     /tmp/cc0yUZsn.s:312    .text:0000000000000104 .L0 
     /tmp/cc0yUZsn.s:313    .text:0000000000000104 .L0 
     /tmp/cc0yUZsn.s:314    .text:0000000000000104 .L0 
     /tmp/cc0yUZsn.s:318    .text:000000000000010c .L0 
     /tmp/cc0yUZsn.s:319    .text:000000000000010c .L0 
     /tmp/cc0yUZsn.s:320    .text:000000000000010c .L0 
     /tmp/cc0yUZsn.s:325    .text:0000000000000114 .L0 
     /tmp/cc0yUZsn.s:326    .text:0000000000000114 .L0 
     /tmp/cc0yUZsn.s:327    .text:0000000000000114 .L0 
     /tmp/cc0yUZsn.s:332    .text:000000000000011c .L0 
     /tmp/cc0yUZsn.s:333    .text:000000000000011c .L0 
     /tmp/cc0yUZsn.s:334    .text:000000000000011c .L0 
     /tmp/cc0yUZsn.s:339    .text:0000000000000124 .L0 
     /tmp/cc0yUZsn.s:340    .text:0000000000000124 .L0 
     /tmp/cc0yUZsn.s:347    .text:000000000000013c .L0 
     /tmp/cc0yUZsn.s:350    .text:0000000000000144 .L0 
     /tmp/cc0yUZsn.s:351    .text:0000000000000144 .L0 
     /tmp/cc0yUZsn.s:354    .text:000000000000014c .L0 
     /tmp/cc0yUZsn.s:356    .text:0000000000000150 .L0 
src/interruptRoutine.cpp:68     .text:0000000000000150 .L0 
     /tmp/cc0yUZsn.s:365    .text:0000000000000158 .L0 
src/interruptRoutine.cpp:70     .text:0000000000000158 .L0 
     /tmp/cc0yUZsn.s:373    .text:000000000000015c .L0 
src/interruptRoutine.cpp:72     .text:000000000000015c .L0 
     /tmp/cc0yUZsn.s:380    .text:0000000000000160 .L0 
     /tmp/cc0yUZsn.s:384    .text:0000000000000164 .L0 
     /tmp/cc0yUZsn.s:385    .text:0000000000000164 .L0 
     /tmp/cc0yUZsn.s:386    .text:0000000000000164 .L0 
     /tmp/cc0yUZsn.s:389    .text:000000000000016c .L0 
     /tmp/cc0yUZsn.s:393    .text:0000000000000170 .L0 
     /tmp/cc0yUZsn.s:394    .text:0000000000000170 .L0 
     /tmp/cc0yUZsn.s:395    .text:0000000000000170 .L0 
     /tmp/cc0yUZsn.s:399    .text:0000000000000180 .L0 
     /tmp/cc0yUZsn.s:400    .text:0000000000000180 .L0 
     /tmp/cc0yUZsn.s:404    .text:000000000000018c .L0 
     /tmp/cc0yUZsn.s:405    .text:000000000000018c .L0 
     /tmp/cc0yUZsn.s:409    .text:000000000000019c .L0 
     /tmp/cc0yUZsn.s:410    .text:000000000000019c .L0 
     /tmp/cc0yUZsn.s:414    .text:00000000000001a8 .L0 
     /tmp/cc0yUZsn.s:415    .text:00000000000001a8 .L0 
     /tmp/cc0yUZsn.s:419    .text:00000000000001b8 .L0 
     /tmp/cc0yUZsn.s:420    .text:00000000000001b8 .L0 
     /tmp/cc0yUZsn.s:424    .text:00000000000001c4 .L0 
     /tmp/cc0yUZsn.s:428    .text:00000000000001c8 .L0 
     /tmp/cc0yUZsn.s:434    .text:00000000000001cc .L0 
     /tmp/cc0yUZsn.s:435    .text:00000000000001cc .L0 
     /tmp/cc0yUZsn.s:445    .text:00000000000001d8 .L0 
     /tmp/cc0yUZsn.s:446    .text:00000000000001d8 .L0 
     /tmp/cc0yUZsn.s:456    .text:00000000000001e4 .L0 
     /tmp/cc0yUZsn.s:461    .text:00000000000001e8 .L0 
     /tmp/cc0yUZsn.s:468    .text:00000000000001fc .L0 
     /tmp/cc0yUZsn.s:469    .text:00000000000001fc .L0 
     /tmp/cc0yUZsn.s:473    .text:0000000000000204 .L0 
     /tmp/cc0yUZsn.s:478    .text:0000000000000208 .L0 
     /tmp/cc0yUZsn.s:484    .text:000000000000021c .L0 
GAS LISTING /tmp/cc0yUZsn.s 			page 19


     /tmp/cc0yUZsn.s:485    .text:000000000000021c .L0 
     /tmp/cc0yUZsn.s:540    .text._ZN5Riscv6mc_sipEm:0000000000000000 _ZN5Riscv6mc_sipEm
     /tmp/cc0yUZsn.s:490    .text:0000000000000228 .L0 
     /tmp/cc0yUZsn.s:495    .text:000000000000022c .L0 
     /tmp/cc0yUZsn.s:496    .text:000000000000022c .L0 
     /tmp/cc0yUZsn.s:500    .text:000000000000023c .L0 
     /tmp/cc0yUZsn.s:501    .text:000000000000023c .L0 
     /tmp/cc0yUZsn.s:505    .text:000000000000024c .L0 
     /tmp/cc0yUZsn.s:506    .text:000000000000024c .L0 
     /tmp/cc0yUZsn.s:510    .text:0000000000000258 .L0 
     /tmp/cc0yUZsn.s:511    .text:0000000000000258 .L0 
     /tmp/cc0yUZsn.s:515    .text:0000000000000268 .L0 
     /tmp/cc0yUZsn.s:516    .text:0000000000000268 .L0 
     /tmp/cc0yUZsn.s:522    .text:0000000000000274 .L0 
     /tmp/cc0yUZsn.s:524    .text:000000000000027c .L0 
     /tmp/cc0yUZsn.s:526    .text:0000000000000280 .L0 
     /tmp/cc0yUZsn.s:527    .text:0000000000000280 .L0 
     /tmp/cc0yUZsn.s:530    .text:0000000000000284 .L0 
     /tmp/cc0yUZsn.s:533    .text:0000000000000288 .L0 
     /tmp/cc0yUZsn.s:544    .text._ZN5Riscv6mc_sipEm:0000000000000000 .L0 
     /tmp/cc0yUZsn.s:546    .text._ZN5Riscv6mc_sipEm:0000000000000000 .L0 
     /tmp/cc0yUZsn.s:547    .text._ZN5Riscv6mc_sipEm:0000000000000004 .L0 
     /tmp/cc0yUZsn.s:549    .text._ZN5Riscv6mc_sipEm:0000000000000008 .L0 
     /tmp/cc0yUZsn.s:551    .text._ZN5Riscv6mc_sipEm:000000000000000c .L0 
     /tmp/cc0yUZsn.s:553    .text._ZN5Riscv6mc_sipEm:000000000000000c .L0 
  src/../h/Riscv.hpp:119    .text._ZN5Riscv6mc_sipEm:000000000000000c .L0 
     /tmp/cc0yUZsn.s:560    .text._ZN5Riscv6mc_sipEm:0000000000000010 .L0 
     /tmp/cc0yUZsn.s:561    .text._ZN5Riscv6mc_sipEm:0000000000000014 .L0 
     /tmp/cc0yUZsn.s:562    .text._ZN5Riscv6mc_sipEm:0000000000000014 .L0 
     /tmp/cc0yUZsn.s:564    .text._ZN5Riscv6mc_sipEm:0000000000000018 .L0 
     /tmp/cc0yUZsn.s:566    .text._ZN5Riscv6mc_sipEm:000000000000001c .L0 
     /tmp/cc0yUZsn.s:577    .text:0000000000000288 .L0 
     /tmp/cc0yUZsn.s:569    .text._ZN5Riscv6mc_sipEm:000000000000001c .L0 
     /tmp/cc0yUZsn.s:185    .rodata:000000000000005c .L6
     /tmp/cc0yUZsn.s:174    .text:000000000000009c .L0 
     /tmp/cc0yUZsn.s:179    .text:00000000000000b0 .L0 
     /tmp/cc0yUZsn.s:8      .rodata:0000000000000000 .LC0
     /tmp/cc0yUZsn.s:395    .text:0000000000000170 .L0 
     /tmp/cc0yUZsn.s:11     .rodata:0000000000000018 .LC1
     /tmp/cc0yUZsn.s:405    .text:000000000000018c .L0 
     /tmp/cc0yUZsn.s:14     .rodata:0000000000000028 .LC2
     /tmp/cc0yUZsn.s:415    .text:00000000000001a8 .L0 
     /tmp/cc0yUZsn.s:17     .rodata:0000000000000030 .LC3
     /tmp/cc0yUZsn.s:496    .text:000000000000022c .L0 
     /tmp/cc0yUZsn.s:20     .rodata:0000000000000050 .LC4
     /tmp/cc0yUZsn.s:501    .text:000000000000023c .L0 
     /tmp/cc0yUZsn.s:511    .text:0000000000000258 .L0 
     /tmp/cc0yUZsn.s:159    .text:0000000000000080 .L2
     /tmp/cc0yUZsn.s:458    .text:00000000000001e8 .L3
     /tmp/cc0yUZsn.s:391    .text:0000000000000170 .L4
     /tmp/cc0yUZsn.s:430    .text:00000000000001cc .L19
     /tmp/cc0yUZsn.s:363    .text:0000000000000158 .L20
     /tmp/cc0yUZsn.s:371    .text:000000000000015c .L21
     /tmp/cc0yUZsn.s:519    .text:0000000000000274 .L26
     /tmp/cc0yUZsn.s:475    .text:0000000000000208 .L23
     /tmp/cc0yUZsn.s:492    .text:000000000000022c .L24
     /tmp/cc0yUZsn.s:254    .text:00000000000000c0 .L18
GAS LISTING /tmp/cc0yUZsn.s 			page 20


     /tmp/cc0yUZsn.s:286    .text:00000000000000e8 .L17
     /tmp/cc0yUZsn.s:309    .text:0000000000000104 .L16
     /tmp/cc0yUZsn.s:426    .text:00000000000001c8 .L25
     /tmp/cc0yUZsn.s:382    .text:0000000000000164 .L14
     /tmp/cc0yUZsn.s:1750   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cc0yUZsn.s:3289   .debug_str:000000000000066a .LASF126
     /tmp/cc0yUZsn.s:3157   .debug_str:00000000000002c6 .LASF127
     /tmp/cc0yUZsn.s:3151   .debug_str:000000000000027e .LASF128
     /tmp/cc0yUZsn.s:3055   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/cc0yUZsn.s:3063   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cc0yUZsn.s:3205   .debug_str:0000000000000449 .LASF0
     /tmp/cc0yUZsn.s:3225   .debug_str:000000000000049a .LASF1
     /tmp/cc0yUZsn.s:3191   .debug_str:00000000000003ce .LASF2
     /tmp/cc0yUZsn.s:3163   .debug_str:000000000000030f .LASF4
     /tmp/cc0yUZsn.s:3269   .debug_str:00000000000005e0 .LASF3
     /tmp/cc0yUZsn.s:3093   .debug_str:00000000000000b4 .LASF5
     /tmp/cc0yUZsn.s:3115   .debug_str:0000000000000149 .LASF6
     /tmp/cc0yUZsn.s:3229   .debug_str:00000000000004b4 .LASF7
     /tmp/cc0yUZsn.s:3203   .debug_str:0000000000000436 .LASF8
     /tmp/cc0yUZsn.s:3303   .debug_str:000000000000077e .LASF9
     /tmp/cc0yUZsn.s:3149   .debug_str:0000000000000270 .LASF10
     /tmp/cc0yUZsn.s:3241   .debug_str:0000000000000513 .LASF11
     /tmp/cc0yUZsn.s:3291   .debug_str:000000000000072e .LASF12
     /tmp/cc0yUZsn.s:3095   .debug_str:00000000000000bb .LASF13
     /tmp/cc0yUZsn.s:3073   .debug_str:000000000000003b .LASF14
     /tmp/cc0yUZsn.s:3099   .debug_str:00000000000000d5 .LASF15
     /tmp/cc0yUZsn.s:3263   .debug_str:00000000000005ac .LASF16
     /tmp/cc0yUZsn.s:3109   .debug_str:0000000000000108 .LASF17
     /tmp/cc0yUZsn.s:3187   .debug_str:00000000000003b3 .LASF31
     /tmp/cc0yUZsn.s:3299   .debug_str:0000000000000762 .LASF21
     /tmp/cc0yUZsn.s:3329   .debug_str:000000000000083e .LASF18
     /tmp/cc0yUZsn.s:3315   .debug_str:00000000000007d6 .LASF19
     /tmp/cc0yUZsn.s:3285   .debug_str:0000000000000653 .LASF20
     /tmp/cc0yUZsn.s:3165   .debug_str:0000000000000316 .LASF22
     /tmp/cc0yUZsn.s:3297   .debug_str:000000000000075a .LASF23
     /tmp/cc0yUZsn.s:3261   .debug_str:000000000000058d .LASF25
     /tmp/cc0yUZsn.s:3105   .debug_str:00000000000000f1 .LASF24
     /tmp/cc0yUZsn.s:3071   .debug_str:000000000000001d .LASF26
     /tmp/cc0yUZsn.s:3121   .debug_str:0000000000000173 .LASF41
     /tmp/cc0yUZsn.s:3067   .debug_str:0000000000000009 .LASF27
     /tmp/cc0yUZsn.s:3325   .debug_str:0000000000000827 .LASF28
     /tmp/cc0yUZsn.s:3237   .debug_str:00000000000004ef .LASF29
     /tmp/cc0yUZsn.s:3129   .debug_str:00000000000001c5 .LASF69
     /tmp/cc0yUZsn.s:3199   .debug_str:00000000000003f9 .LASF71
     /tmp/cc0yUZsn.s:3135   .debug_str:00000000000001f7 .LASF30
     /tmp/cc0yUZsn.s:3221   .debug_str:0000000000000489 .LASF32
     /tmp/cc0yUZsn.s:3177   .debug_str:0000000000000357 .LASF129
     /tmp/cc0yUZsn.s:3279   .debug_str:0000000000000627 .LASF33
     /tmp/cc0yUZsn.s:3219   .debug_str:0000000000000480 .LASF34
     /tmp/cc0yUZsn.s:3171   .debug_str:0000000000000339 .LASF35
     /tmp/cc0yUZsn.s:3089   .debug_str:000000000000009a .LASF36
     /tmp/cc0yUZsn.s:3127   .debug_str:00000000000001aa .LASF38
     /tmp/cc0yUZsn.s:3281   .debug_str:0000000000000630 .LASF37
     /tmp/cc0yUZsn.s:3161   .debug_str:00000000000002f5 .LASF39
     /tmp/cc0yUZsn.s:3075   .debug_str:000000000000004b .LASF43
     /tmp/cc0yUZsn.s:3131   .debug_str:00000000000001cf .LASF45
     /tmp/cc0yUZsn.s:3125   .debug_str:00000000000001a1 .LASF40
GAS LISTING /tmp/cc0yUZsn.s 			page 21


     /tmp/cc0yUZsn.s:3123   .debug_str:000000000000018c .LASF42
     /tmp/cc0yUZsn.s:3271   .debug_str:00000000000005f2 .LASF44
     /tmp/cc0yUZsn.s:3249   .debug_str:0000000000000548 .LASF46
     /tmp/cc0yUZsn.s:3259   .debug_str:0000000000000586 .LASF47
     /tmp/cc0yUZsn.s:3147   .debug_str:000000000000025d .LASF48
     /tmp/cc0yUZsn.s:3139   .debug_str:000000000000020f .LASF49
     /tmp/cc0yUZsn.s:3111   .debug_str:000000000000011e .LASF50
     /tmp/cc0yUZsn.s:3069   .debug_str:0000000000000015 .LASF51
     /tmp/cc0yUZsn.s:3155   .debug_str:00000000000002b2 .LASF52
     /tmp/cc0yUZsn.s:3207   .debug_str:0000000000000456 .LASF53
     /tmp/cc0yUZsn.s:3319   .debug_str:00000000000007eb .LASF54
     /tmp/cc0yUZsn.s:3085   .debug_str:0000000000000083 .LASF55
     /tmp/cc0yUZsn.s:3137   .debug_str:00000000000001fc .LASF56
     /tmp/cc0yUZsn.s:3145   .debug_str:0000000000000257 .LASF57
     /tmp/cc0yUZsn.s:3287   .debug_str:0000000000000658 .LASF58
     /tmp/cc0yUZsn.s:3081   .debug_str:0000000000000066 .LASF59
     /tmp/cc0yUZsn.s:3335   .debug_str:0000000000000863 .LASF60
     /tmp/cc0yUZsn.s:3327   .debug_str:0000000000000833 .LASF61
     /tmp/cc0yUZsn.s:3267   .debug_str:00000000000005c8 .LASF62
     /tmp/cc0yUZsn.s:3223   .debug_str:000000000000048f .LASF63
     /tmp/cc0yUZsn.s:3179   .debug_str:0000000000000362 .LASF64
     /tmp/cc0yUZsn.s:3097   .debug_str:00000000000000cb .LASF65
     /tmp/cc0yUZsn.s:3159   .debug_str:00000000000002df .LASF66
     /tmp/cc0yUZsn.s:3197   .debug_str:00000000000003ef .LASF67
     /tmp/cc0yUZsn.s:3153   .debug_str:000000000000029c .LASF68
     /tmp/cc0yUZsn.s:3101   .debug_str:00000000000000e1 .LASF70
     /tmp/cc0yUZsn.s:3331   .debug_str:0000000000000843 .LASF72
     /tmp/cc0yUZsn.s:3065   .debug_str:0000000000000000 .LASF73
     /tmp/cc0yUZsn.s:3079   .debug_str:000000000000005e .LASF130
     /tmp/cc0yUZsn.s:3175   .debug_str:000000000000034a .LASF74
     /tmp/cc0yUZsn.s:3321   .debug_str:00000000000007fe .LASF75
     /tmp/cc0yUZsn.s:3255   .debug_str:0000000000000574 .LASF131
     /tmp/cc0yUZsn.s:3231   .debug_str:00000000000004c7 .LASF78
     /tmp/cc0yUZsn.s:3181   .debug_str:000000000000037a .LASF80
     /tmp/cc0yUZsn.s:3193   .debug_str:00000000000003dc .LASF76
     /tmp/cc0yUZsn.s:3113   .debug_str:0000000000000132 .LASF77
     /tmp/cc0yUZsn.s:3077   .debug_str:0000000000000054 .LASF79
     /tmp/cc0yUZsn.s:3235   .debug_str:00000000000004db .LASF81
     /tmp/cc0yUZsn.s:3167   .debug_str:0000000000000325 .LASF82
     /tmp/cc0yUZsn.s:3183   .debug_str:0000000000000390 .LASF83
     /tmp/cc0yUZsn.s:3185   .debug_str:00000000000003a6 .LASF84
     /tmp/cc0yUZsn.s:3239   .debug_str:00000000000004fb .LASF85
     /tmp/cc0yUZsn.s:3301   .debug_str:0000000000000771 .LASF86
     /tmp/cc0yUZsn.s:3305   .debug_str:000000000000078e .LASF87
     /tmp/cc0yUZsn.s:3277   .debug_str:000000000000061b .LASF88
     /tmp/cc0yUZsn.s:3083   .debug_str:000000000000006c .LASF89
     /tmp/cc0yUZsn.s:3189   .debug_str:00000000000003c3 .LASF90
     /tmp/cc0yUZsn.s:3141   .debug_str:0000000000000217 .LASF91
     /tmp/cc0yUZsn.s:3265   .debug_str:00000000000005c2 .LASF92
     /tmp/cc0yUZsn.s:3317   .debug_str:00000000000007db .LASF93
     /tmp/cc0yUZsn.s:3209   .debug_str:000000000000045d .LASF94
     /tmp/cc0yUZsn.s:3133   .debug_str:00000000000001e4 .LASF95
     /tmp/cc0yUZsn.s:3333   .debug_str:000000000000085b .LASF96
     /tmp/cc0yUZsn.s:3273   .debug_str:00000000000005f9 .LASF97
     /tmp/cc0yUZsn.s:3313   .debug_str:00000000000007ce .LASF98
     /tmp/cc0yUZsn.s:3251   .debug_str:000000000000055b .LASF99
     /tmp/cc0yUZsn.s:3173   .debug_str:0000000000000342 .LASF100
GAS LISTING /tmp/cc0yUZsn.s 			page 22


     /tmp/cc0yUZsn.s:3295   .debug_str:000000000000074b .LASF101
     /tmp/cc0yUZsn.s:3211   .debug_str:0000000000000466 .LASF102
     /tmp/cc0yUZsn.s:3213   .debug_str:000000000000046c .LASF103
     /tmp/cc0yUZsn.s:3217   .debug_str:0000000000000476 .LASF104
     /tmp/cc0yUZsn.s:3169   .debug_str:0000000000000330 .LASF105
     /tmp/cc0yUZsn.s:3201   .debug_str:000000000000042e .LASF106
     /tmp/cc0yUZsn.s:3087   .debug_str:000000000000008a .LASF107
     /tmp/cc0yUZsn.s:3283   .debug_str:000000000000063d .LASF132
     /tmp/cc0yUZsn.s:3307   .debug_str:00000000000007a6 .LASF108
     /tmp/cc0yUZsn.s:3143   .debug_str:000000000000022f .LASF109
     /tmp/cc0yUZsn.s:3311   .debug_str:00000000000007c1 .LASF110
     /tmp/cc0yUZsn.s:3091   .debug_str:00000000000000a8 .LASF111
     /tmp/cc0yUZsn.s:3275   .debug_str:000000000000060b .LASF133
     /tmp/cc0yUZsn.s:3257   .debug_str:0000000000000579 .LASF134
     /tmp/cc0yUZsn.s:3107   .debug_str:00000000000000f7 .LASF112
     /tmp/cc0yUZsn.s:27     .text:0000000000000000 .LFB27
     /tmp/cc0yUZsn.s:534    .text:0000000000000288 .LFE27
     /tmp/cc0yUZsn.s:3323   .debug_str:0000000000000820 .LASF113
     /tmp/cc0yUZsn.s:2602   .debug_loc:0000000000000000 .LLST0
     /tmp/cc0yUZsn.s:3215   .debug_str:0000000000000471 .LASF114
     /tmp/cc0yUZsn.s:2633   .debug_loc:0000000000000087 .LLST1
     /tmp/cc0yUZsn.s:3253   .debug_str:000000000000056c .LASF115
     /tmp/cc0yUZsn.s:2664   .debug_loc:000000000000010e .LLST2
     /tmp/cc0yUZsn.s:2686   .debug_loc:000000000000016e .LLST3
     /tmp/cc0yUZsn.s:2708   .debug_loc:00000000000001ce .LLST4
     /tmp/cc0yUZsn.s:2730   .debug_loc:000000000000022e .LLST5
     /tmp/cc0yUZsn.s:2752   .debug_loc:000000000000028e .LLST6
     /tmp/cc0yUZsn.s:2774   .debug_loc:00000000000002f0 .LLST7
     /tmp/cc0yUZsn.s:2796   .debug_loc:0000000000000352 .LLST8
     /tmp/cc0yUZsn.s:2818   .debug_loc:00000000000003b4 .LLST9
     /tmp/cc0yUZsn.s:2840   .debug_loc:0000000000000416 .LLST10
     /tmp/cc0yUZsn.s:160    .text:0000000000000080 .LBB3
     /tmp/cc0yUZsn.s:452    .text:00000000000001e0 .LBE3
     /tmp/cc0yUZsn.s:3227   .debug_str:00000000000004ad .LASF116
     /tmp/cc0yUZsn.s:2934   .debug_loc:00000000000005b7 .LLST11
     /tmp/cc0yUZsn.s:256    .text:00000000000000c0 .LBB5
     /tmp/cc0yUZsn.s:431    .text:00000000000001cc .LBE5
     /tmp/cc0yUZsn.s:2959   .debug_loc:0000000000000629 .LLST12
     /tmp/cc0yUZsn.s:2980   .debug_loc:0000000000000687 .LLST13
     /tmp/cc0yUZsn.s:3195   .debug_str:00000000000003e8 .LASF117
     /tmp/cc0yUZsn.s:2992   .debug_loc:00000000000006bf .LLST14
     /tmp/cc0yUZsn.s:3233   .debug_str:00000000000004d2 .LASF118
     /tmp/cc0yUZsn.s:3004   .debug_loc:00000000000006f6 .LLST15
     /tmp/cc0yUZsn.s:3016   .debug_loc:000000000000072d .LLST16
     /tmp/cc0yUZsn.s:3028   .debug_loc:0000000000000765 .LLST17
     /tmp/cc0yUZsn.s:275    .text:00000000000000e0 .LVL28
     /tmp/cc0yUZsn.s:298    .text:00000000000000fc .LVL31
     /tmp/cc0yUZsn.s:344    .text:0000000000000138 .LVL40
     /tmp/cc0yUZsn.s:387    .text:000000000000016c .LVL42
     /tmp/cc0yUZsn.s:397    .text:0000000000000180 .LVL44
     /tmp/cc0yUZsn.s:402    .text:000000000000018c .LVL45
     /tmp/cc0yUZsn.s:407    .text:000000000000019c .LVL46
     /tmp/cc0yUZsn.s:412    .text:00000000000001a8 .LVL47
     /tmp/cc0yUZsn.s:417    .text:00000000000001b8 .LVL48
     /tmp/cc0yUZsn.s:422    .text:00000000000001c4 .LVL49
     /tmp/cc0yUZsn.s:470    .text:0000000000000204 .LVL56
     /tmp/cc0yUZsn.s:487    .text:0000000000000228 .LVL58
GAS LISTING /tmp/cc0yUZsn.s 			page 23


     /tmp/cc0yUZsn.s:498    .text:000000000000023c .LVL60
     /tmp/cc0yUZsn.s:503    .text:000000000000024c .LVL61
     /tmp/cc0yUZsn.s:508    .text:0000000000000258 .LVL62
     /tmp/cc0yUZsn.s:513    .text:0000000000000268 .LVL63
     /tmp/cc0yUZsn.s:518    .text:0000000000000274 .LVL64
     /tmp/cc0yUZsn.s:541    .text._ZN5Riscv6mc_sipEm:0000000000000000 .LFB10
     /tmp/cc0yUZsn.s:567    .text._ZN5Riscv6mc_sipEm:000000000000001c .LFE10
     /tmp/cc0yUZsn.s:3103   .debug_str:00000000000000ec .LASF135
     /tmp/cc0yUZsn.s:3117   .debug_str:0000000000000150 .LASF119
     /tmp/cc0yUZsn.s:3245   .debug_str:000000000000052a .LASF121
     /tmp/cc0yUZsn.s:3247   .debug_str:0000000000000536 .LASF120
     /tmp/cc0yUZsn.s:3309   .debug_str:00000000000007b4 .LASF122
     /tmp/cc0yUZsn.s:3119   .debug_str:0000000000000163 .LASF123
     /tmp/cc0yUZsn.s:3293   .debug_str:000000000000073d .LASF124
     /tmp/cc0yUZsn.s:3243   .debug_str:0000000000000522 .LASF125
     /tmp/cc0yUZsn.s:48     .text:0000000000000018 .LVL0
     /tmp/cc0yUZsn.s:55     .text:000000000000001c .LVL1
     /tmp/cc0yUZsn.s:457    .text:00000000000001e8 .LVL54
     /tmp/cc0yUZsn.s:462    .text:00000000000001ec .LVL55
     /tmp/cc0yUZsn.s:528    .text:0000000000000280 .LVL65
     /tmp/cc0yUZsn.s:531    .text:0000000000000284 .LVL66
     /tmp/cc0yUZsn.s:58     .text:0000000000000020 .LVL2
     /tmp/cc0yUZsn.s:65     .text:0000000000000024 .LVL3
     /tmp/cc0yUZsn.s:440    .text:00000000000001d4 .LVL52
     /tmp/cc0yUZsn.s:443    .text:00000000000001d8 .LVL53
     /tmp/cc0yUZsn.s:68     .text:0000000000000028 .LVL4
     /tmp/cc0yUZsn.s:76     .text:000000000000002c .LVL5
     /tmp/cc0yUZsn.s:79     .text:0000000000000030 .LVL6
     /tmp/cc0yUZsn.s:86     .text:0000000000000034 .LVL7
     /tmp/cc0yUZsn.s:89     .text:0000000000000038 .LVL8
     /tmp/cc0yUZsn.s:96     .text:000000000000003c .LVL9
     /tmp/cc0yUZsn.s:99     .text:0000000000000040 .LVL10
     /tmp/cc0yUZsn.s:106    .text:0000000000000044 .LVL11
     /tmp/cc0yUZsn.s:109    .text:0000000000000048 .LVL12
     /tmp/cc0yUZsn.s:116    .text:000000000000004c .LVL13
     /tmp/cc0yUZsn.s:119    .text:0000000000000050 .LVL14
     /tmp/cc0yUZsn.s:126    .text:0000000000000054 .LVL15
     /tmp/cc0yUZsn.s:129    .text:0000000000000058 .LVL16
     /tmp/cc0yUZsn.s:136    .text:000000000000005c .LVL17
     /tmp/cc0yUZsn.s:139    .text:0000000000000060 .LVL18
     /tmp/cc0yUZsn.s:146    .text:0000000000000064 .LVL19
     /tmp/cc0yUZsn.s:149    .text:0000000000000068 .LVL20
     /tmp/cc0yUZsn.s:285    .text:00000000000000e8 .LVL29
     /tmp/cc0yUZsn.s:308    .text:0000000000000104 .LVL32
     /tmp/cc0yUZsn.s:381    .text:0000000000000164 .LVL41
     /tmp/cc0yUZsn.s:390    .text:0000000000000170 .LVL43
     /tmp/cc0yUZsn.s:425    .text:00000000000001c8 .LVL50
     /tmp/cc0yUZsn.s:429    .text:00000000000001cc .LVL51
     /tmp/cc0yUZsn.s:474    .text:0000000000000208 .LVL57
     /tmp/cc0yUZsn.s:491    .text:000000000000022c .LVL59
     /tmp/cc0yUZsn.s:165    .text:0000000000000088 .LVL21
     /tmp/cc0yUZsn.s:169    .text:0000000000000090 .LVL22
     /tmp/cc0yUZsn.s:173    .text:000000000000009c .LVL23
     /tmp/cc0yUZsn.s:175    .text:00000000000000a4 .LVL24
     /tmp/cc0yUZsn.s:263    .text:00000000000000c8 .LVL25
     /tmp/cc0yUZsn.s:268    .text:00000000000000d0 .LVL26
     /tmp/cc0yUZsn.s:270    .text:00000000000000d4 .LVL27
GAS LISTING /tmp/cc0yUZsn.s 			page 24


     /tmp/cc0yUZsn.s:293    .text:00000000000000f0 .LVL30
     /tmp/cc0yUZsn.s:316    .text:000000000000010c .LVL33
     /tmp/cc0yUZsn.s:321    .text:0000000000000110 .LVL34
     /tmp/cc0yUZsn.s:323    .text:0000000000000114 .LVL35
     /tmp/cc0yUZsn.s:328    .text:0000000000000118 .LVL36
     /tmp/cc0yUZsn.s:330    .text:000000000000011c .LVL37
     /tmp/cc0yUZsn.s:335    .text:0000000000000120 .LVL38
     /tmp/cc0yUZsn.s:337    .text:0000000000000124 .LVL39
     /tmp/cc0yUZsn.s:578    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/cc0yUZsn.s:5      .text:0000000000000000 .Ltext0
     /tmp/cc0yUZsn.s:570    .text:0000000000000288 .Letext0

UNDEFINED SYMBOLS
_ZN15MemoryAllocator7kmallocEm
_ZN15MemoryAllocator5kfreeEPv
_ZN3TCB12createThreadEPFvPvES0_Pm
_ZN3TCB5yieldEv
_Z11printStringPKc
_Z12printIntegerm
console_handler
_Z7printlnPKc
