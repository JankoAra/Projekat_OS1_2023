GAS LISTING /tmp/ccGI7nPt.s 			page 1


   1              		.file	"interruptRoutine.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.section	.rodata
   7              		.align	3
   8              	.LC0:
   9 0000 0A4E6570 		.string	"\nNepostojeci op code: "
   9      6F73746F 
   9      6A656369 
   9      206F7020 
   9      636F6465 
  10 0017 00       		.align	3
  11              	.LC1:
  12 0018 0A736361 		.string	"\nscause: "
  12      7573653A 
  12      2000
  13 0022 00000000 		.align	3
  13      0000
  14              	.LC2:
  15 0028 0A736570 		.string	"\nsepc: "
  15      633A2000 
  16              		.align	3
  17              	.LC3:
  18 0030 0A477265 		.string	"\nGreska u prekidnoj rutini"
  18      736B6120 
  18      75207072 
  18      656B6964 
  18      6E6F6A20 
  19 004b 00000000 		.align	3
  19      00
  20              	.LC4:
  21 0050 73636175 		.string	"scause: "
  21      73653A20 
  21      00
  22              		.text
  23              		.align	2
  24              		.globl	interruptRoutine
  26              	interruptRoutine:
  27              	.LFB27:
  28              		.file 1 "src/interruptRoutine.cpp"
   1:src/interruptRoutine.cpp **** //
   2:src/interruptRoutine.cpp **** // Created by os on 5/22/23.
   3:src/interruptRoutine.cpp **** //
   4:src/interruptRoutine.cpp **** 
   5:src/interruptRoutine.cpp **** #include "../lib/console.h"
   6:src/interruptRoutine.cpp **** #include "../lib/hw.h"
   7:src/interruptRoutine.cpp **** #include "../h/MemoryAllocator.hpp"
   8:src/interruptRoutine.cpp **** #include "../h/helper.hpp"
   9:src/interruptRoutine.cpp **** #include "../h/Riscv.hpp"
  10:src/interruptRoutine.cpp **** #include "../h/syscall_c.hpp"
  11:src/interruptRoutine.cpp **** #include "../h/TCB.hpp"
  12:src/interruptRoutine.cpp **** 
  13:src/interruptRoutine.cpp **** #pragma GCC optimize("O0")
  14:src/interruptRoutine.cpp **** extern "C" void interruptRoutine() {
  29              		.loc 1 14 36
GAS LISTING /tmp/ccGI7nPt.s 			page 2


  30              		.cfi_startproc
  31 0000 130101F6 		addi	sp,sp,-160
  32              		.cfi_def_cfa_offset 160
  33 0004 233C1108 		sd	ra,152(sp)
  34 0008 23388108 		sd	s0,144(sp)
  35              		.cfi_offset 1, -8
  36              		.cfi_offset 8, -16
  37 000c 1304010A 		addi	s0,sp,160
  38              		.cfi_def_cfa 8, 0
  15:src/interruptRoutine.cpp **** 	uint64 scause, sepc, sstatus;
  39              		.loc 1 15 2
  16:src/interruptRoutine.cpp **** 	__asm__ volatile("csrr %[scause], scause":[scause] "=r"(scause): : "a5", "a0", "a1", "a2", "a3", "
  40              		.loc 1 16 2
  41              		.loc 1 16 116 is_stmt 0
  42              	#APP
  43              	# 16 "src/interruptRoutine.cpp" 1
  17              		__asm__ volatile("csrr %[sepc], sepc":[sepc] "=r"(sepc): : "a5", "a0", "a1", "a2", "a3", "a4", "a6
  44              		csrr t1, scause
  45              	# 0 "" 2
  46              	#NO_APP
  47 0014 233464FE 		sd	t1,-24(s0)
  48              	.LVL0:
  49              		.loc 1 17 2 is_stmt 1
  50              		.loc 1 17 108 is_stmt 0
  51              	#APP
  52              	# 17 "src/interruptRoutine.cpp" 1
  18              		__asm__ volatile("csrr %[status], sstatus":[status] "=r"(
  53              		csrr t1, sepc
  54              	# 0 "" 2
  55              	.LVL1:
  56              	#NO_APP
  57 001c 233064FE 		sd	t1,-32(s0)
  58              	.LVL2:
  59              		.loc 1 18 2 is_stmt 1
  19:src/interruptRoutine.cpp **** 			sstatus): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7");
  60              		.loc 1 19 63 is_stmt 0
  61              	#APP
  62              	# 19 "src/interruptRoutine.cpp" 1
  20              		uint64 a0, a1, a2, a3, a4, a5, a6, a7;
  63              		csrr t1, sstatus
  64              	# 0 "" 2
  65              	.LVL3:
  66              	#NO_APP
  67 0024 233C64FC 		sd	t1,-40(s0)
  68              	.LVL4:
  69              		.loc 1 20 2 is_stmt 1
  21:src/interruptRoutine.cpp **** 	__asm__ volatile("mv %[ax], a0":[ax] "=r"(a0): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7");
  70              		.loc 1 21 2
  71              		.loc 1 21 98 is_stmt 0
  72              	#APP
  73              	# 21 "src/interruptRoutine.cpp" 1
  22              		__asm__ volatile("mv %[ax], a1":[ax] "=r"(a1): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7");
  74              		mv t1, a0
  75              	# 0 "" 2
  76              	.LVL5:
  77              	#NO_APP
  78 002c 233864FC 		sd	t1,-48(s0)
GAS LISTING /tmp/ccGI7nPt.s 			page 3


  79              	.LVL6:
  80              		.loc 1 22 2 is_stmt 1
  81              		.loc 1 22 98 is_stmt 0
  82              	#APP
  83              	# 22 "src/interruptRoutine.cpp" 1
  23              		__asm__ volatile("mv %[ax], a2":[ax] "=r"(a2): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7");
  84              		mv t1, a1
  85              	# 0 "" 2
  86              	.LVL7:
  87              	#NO_APP
  88 0034 233464FC 		sd	t1,-56(s0)
  89              	.LVL8:
  90              		.loc 1 23 2 is_stmt 1
  91              		.loc 1 23 98 is_stmt 0
  92              	#APP
  93              	# 23 "src/interruptRoutine.cpp" 1
  24              		__asm__ volatile("mv %[ax], a3":[ax] "=r"(a3): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7");
  94              		mv t1, a2
  95              	# 0 "" 2
  96              	.LVL9:
  97              	#NO_APP
  98 003c 233064FC 		sd	t1,-64(s0)
  99              	.LVL10:
 100              		.loc 1 24 2 is_stmt 1
 101              		.loc 1 24 98 is_stmt 0
 102              	#APP
 103              	# 24 "src/interruptRoutine.cpp" 1
  25              		__asm__ volatile("mv %[ax], a4":[ax] "=r"(a4): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7");
 104              		mv t1, a3
 105              	# 0 "" 2
 106              	.LVL11:
 107              	#NO_APP
 108 0044 233C64FA 		sd	t1,-72(s0)
 109              	.LVL12:
 110              		.loc 1 25 2 is_stmt 1
 111              		.loc 1 25 98 is_stmt 0
 112              	#APP
 113              	# 25 "src/interruptRoutine.cpp" 1
  26              		__asm__ volatile("mv %[ax], a5":[ax] "=r"(a5): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7");
 114              		mv t1, a4
 115              	# 0 "" 2
 116              	.LVL13:
 117              	#NO_APP
 118 004c 233864FA 		sd	t1,-80(s0)
 119              	.LVL14:
 120              		.loc 1 26 2 is_stmt 1
 121              		.loc 1 26 98 is_stmt 0
 122              	#APP
 123              	# 26 "src/interruptRoutine.cpp" 1
  27              		__asm__ volatile("mv %[ax], a6":[ax] "=r"(a6): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7");
 124              		mv t1, a5
 125              	# 0 "" 2
 126              	.LVL15:
 127              	#NO_APP
 128 0054 233464FA 		sd	t1,-88(s0)
 129              	.LVL16:
 130              		.loc 1 27 2 is_stmt 1
GAS LISTING /tmp/ccGI7nPt.s 			page 4


 131              		.loc 1 27 98 is_stmt 0
 132              	#APP
 133              	# 27 "src/interruptRoutine.cpp" 1
  28              		__asm__ volatile("mv %[ax], a7":[ax] "=r"(a7): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7");
 134              		mv t1, a6
 135              	# 0 "" 2
 136              	.LVL17:
 137              	#NO_APP
 138 005c 233064FA 		sd	t1,-96(s0)
 139              	.LVL18:
 140              		.loc 1 28 2 is_stmt 1
 141              		.loc 1 28 98 is_stmt 0
 142              	#APP
 143              	# 28 "src/interruptRoutine.cpp" 1
  29              	
 144              		mv t1, a7
 145              	# 0 "" 2
 146              	.LVL19:
 147              	#NO_APP
 148 0064 233C64F8 		sd	t1,-104(s0)
 149              	.LVL20:
  30:src/interruptRoutine.cpp **** 	if (scause == 0x09 || scause == 0x08) {
 150              		.loc 1 30 2 is_stmt 1
 151              	.LBB2:
 152 0068 033784FE 		ld	a4,-24(s0)
 153 006c 93079000 		li	a5,9
 154 0070 6308F700 		beq	a4,a5,.L2
 155              		.loc 1 30 21 is_stmt 0 discriminator 1
 156 0074 033784FE 		ld	a4,-24(s0)
 157 0078 93078000 		li	a5,8
 158 007c 631AF718 		bne	a4,a5,.L3
 159              	.L2:
 160              	.LBB3:
  31:src/interruptRoutine.cpp **** 		//prekid zbog poziva ecall
  32:src/interruptRoutine.cpp **** 		uint64 opCode = a0;
 161              		.loc 1 32 3 is_stmt 1
 162              		.loc 1 32 10 is_stmt 0
 163 0080 833704FD 		ld	a5,-48(s0)
 164 0084 2338F4F8 		sd	a5,-112(s0)
 165              	.LVL21:
  33:src/interruptRoutine.cpp **** 		switch (opCode) {
 166              		.loc 1 33 3 is_stmt 1
 167 0088 033704F9 		ld	a4,-112(s0)
 168 008c 93072004 		li	a5,66
 169              	.LVL22:
 170 0090 63E4E710 		bgtu	a4,a5,.L4
 171 0094 833704F9 		ld	a5,-112(s0)
 172 0098 13972700 		slli	a4,a5,2
 173              	.LVL23:
 174 009c 97070000 		lla	a5,.L6
 174      93870700 
 175              	.LVL24:
 176 00a4 B307F700 		add	a5,a4,a5
 177 00a8 83A70700 		lw	a5,0(a5)
 178 00ac 1B870700 		sext.w	a4,a5
 179 00b0 97070000 		lla	a5,.L6
 179      93870700 
GAS LISTING /tmp/ccGI7nPt.s 			page 5


 180 00b8 B307F700 		add	a5,a4,a5
 181 00bc 67800700 		jr	a5
 182              		.section	.rodata
 183 0059 000000   		.align	2
 184              		.align	2
 185              	.L6:
 186 005c 00000000 		.word	.L4-.L6
 187 0060 00000000 		.word	.L18-.L6
 188 0064 00000000 		.word	.L17-.L6
 189 0068 00000000 		.word	.L4-.L6
 190 006c 00000000 		.word	.L4-.L6
 191 0070 00000000 		.word	.L4-.L6
 192 0074 00000000 		.word	.L4-.L6
 193 0078 00000000 		.word	.L4-.L6
 194 007c 00000000 		.word	.L4-.L6
 195 0080 00000000 		.word	.L4-.L6
 196 0084 00000000 		.word	.L4-.L6
 197 0088 00000000 		.word	.L4-.L6
 198 008c 00000000 		.word	.L4-.L6
 199 0090 00000000 		.word	.L4-.L6
 200 0094 00000000 		.word	.L4-.L6
 201 0098 00000000 		.word	.L4-.L6
 202 009c 00000000 		.word	.L4-.L6
 203 00a0 00000000 		.word	.L16-.L6
 204 00a4 00000000 		.word	.L15-.L6
 205 00a8 00000000 		.word	.L14-.L6
 206 00ac 00000000 		.word	.L25-.L6
 207 00b0 00000000 		.word	.L4-.L6
 208 00b4 00000000 		.word	.L4-.L6
 209 00b8 00000000 		.word	.L4-.L6
 210 00bc 00000000 		.word	.L4-.L6
 211 00c0 00000000 		.word	.L4-.L6
 212 00c4 00000000 		.word	.L4-.L6
 213 00c8 00000000 		.word	.L4-.L6
 214 00cc 00000000 		.word	.L4-.L6
 215 00d0 00000000 		.word	.L4-.L6
 216 00d4 00000000 		.word	.L4-.L6
 217 00d8 00000000 		.word	.L4-.L6
 218 00dc 00000000 		.word	.L4-.L6
 219 00e0 00000000 		.word	.L25-.L6
 220 00e4 00000000 		.word	.L25-.L6
 221 00e8 00000000 		.word	.L25-.L6
 222 00ec 00000000 		.word	.L25-.L6
 223 00f0 00000000 		.word	.L4-.L6
 224 00f4 00000000 		.word	.L4-.L6
 225 00f8 00000000 		.word	.L4-.L6
 226 00fc 00000000 		.word	.L4-.L6
 227 0100 00000000 		.word	.L4-.L6
 228 0104 00000000 		.word	.L4-.L6
 229 0108 00000000 		.word	.L4-.L6
 230 010c 00000000 		.word	.L4-.L6
 231 0110 00000000 		.word	.L4-.L6
 232 0114 00000000 		.word	.L4-.L6
 233 0118 00000000 		.word	.L4-.L6
 234 011c 00000000 		.word	.L4-.L6
 235 0120 00000000 		.word	.L25-.L6
 236 0124 00000000 		.word	.L4-.L6
GAS LISTING /tmp/ccGI7nPt.s 			page 6


 237 0128 00000000 		.word	.L4-.L6
 238 012c 00000000 		.word	.L4-.L6
 239 0130 00000000 		.word	.L4-.L6
 240 0134 00000000 		.word	.L4-.L6
 241 0138 00000000 		.word	.L4-.L6
 242 013c 00000000 		.word	.L4-.L6
 243 0140 00000000 		.word	.L4-.L6
 244 0144 00000000 		.word	.L4-.L6
 245 0148 00000000 		.word	.L4-.L6
 246 014c 00000000 		.word	.L4-.L6
 247 0150 00000000 		.word	.L4-.L6
 248 0154 00000000 		.word	.L4-.L6
 249 0158 00000000 		.word	.L4-.L6
 250 015c 00000000 		.word	.L4-.L6
 251 0160 00000000 		.word	.L25-.L6
 252 0164 00000000 		.word	.L25-.L6
 253              		.text
 254              	.L18:
 255              	.LBB4:
 256              	.LBB5:
  34:src/interruptRoutine.cpp **** 			case 0x01:
 257              		.loc 1 34 4
  35:src/interruptRoutine.cpp **** 				//mem_alloc
  36:src/interruptRoutine.cpp **** 				size_t size;
 258              		.loc 1 36 5
  37:src/interruptRoutine.cpp **** 				size = (size_t)a1;
 259              		.loc 1 37 5
 260              		.loc 1 37 10 is_stmt 0
 261 00c0 833784FC 		ld	a5,-56(s0)
 262 00c4 2330F4F6 		sd	a5,-160(s0)
 263              	.LVL25:
  38:src/interruptRoutine.cpp **** 				//__asm__ volatile("mv %[size], a1":[size] "=r"(size));
  39:src/interruptRoutine.cpp **** 				size = size * MEM_BLOCK_SIZE;
 264              		.loc 1 39 5 is_stmt 1
 265              		.loc 1 39 10 is_stmt 0
 266 00c8 833704F6 		ld	a5,-160(s0)
 267 00cc 93976700 		slli	a5,a5,6
 268              	.LVL26:
 269 00d0 2330F4F6 		sd	a5,-160(s0)
 270              	.LVL27:
  40:src/interruptRoutine.cpp **** 				MemoryAllocator::kmalloc(size);
 271              		.loc 1 40 5 is_stmt 1
 272              		.loc 1 40 29 is_stmt 0
 273 00d4 033504F6 		ld	a0,-160(s0)
 274 00d8 97000000 		call	_ZN15MemoryAllocator7kmallocEm@plt
 274      E7800000 
 275              	.LVL28:
  41:src/interruptRoutine.cpp **** 				__asm__ volatile("sd a0, 80(s0)");
 276              		.loc 1 41 5 is_stmt 1
 277              		.loc 1 41 38 is_stmt 0
 278              	#APP
 279              	# 41 "src/interruptRoutine.cpp" 1
  42              					break;
 280              		sd a0, 80(s0)
 281              	# 0 "" 2
 282              		.loc 1 42 5 is_stmt 1
 283              	#NO_APP
GAS LISTING /tmp/ccGI7nPt.s 			page 7


 284 00e4 6F000011 		j	.L19
 285              	.LVL29:
 286              	.L17:
  43:src/interruptRoutine.cpp **** 			case 0x02:
 287              		.loc 1 43 4
  44:src/interruptRoutine.cpp **** 				//mem_free
  45:src/interruptRoutine.cpp **** 				void* ptr;
 288              		.loc 1 45 5
  46:src/interruptRoutine.cpp **** 				ptr = (void*)a1;
 289              		.loc 1 46 5
 290              		.loc 1 46 9 is_stmt 0
 291 00e8 833784FC 		ld	a5,-56(s0)
 292 00ec 2334F4F6 		sd	a5,-152(s0)
 293              	.LVL30:
  47:src/interruptRoutine.cpp **** 				//__asm__ volatile("mv %[ptr], a1" :[ptr]"=r"(ptr));
  48:src/interruptRoutine.cpp **** 				MemoryAllocator::kfree(ptr);
 294              		.loc 1 48 5 is_stmt 1
 295              		.loc 1 48 27 is_stmt 0
 296 00f0 033584F6 		ld	a0,-152(s0)
 297 00f4 97000000 		call	_ZN15MemoryAllocator5kfreeEPv@plt
 297      E7800000 
 298              	.LVL31:
  49:src/interruptRoutine.cpp **** 				__asm__ volatile("sd a0, 80(s0)");
 299              		.loc 1 49 5 is_stmt 1
 300              		.loc 1 49 38 is_stmt 0
 301              	#APP
 302              	# 49 "src/interruptRoutine.cpp" 1
  50              					break;
 303              		sd a0, 80(s0)
 304              	# 0 "" 2
 305              		.loc 1 50 5 is_stmt 1
 306              	#NO_APP
 307 0100 6F00400F 		j	.L19
 308              	.LVL32:
 309              	.L16:
  51:src/interruptRoutine.cpp **** 			case 0x11:
 310              		.loc 1 51 4
  52:src/interruptRoutine.cpp **** 				//thread_create
  53:src/interruptRoutine.cpp **** 				thread_t* handle;
 311              		.loc 1 53 5
  54:src/interruptRoutine.cpp **** 				handle = (thread_t*)a1;
 312              		.loc 1 54 5
 313              		.loc 1 54 12 is_stmt 0
 314 0104 833784FC 		ld	a5,-56(s0)
 315 0108 2334F4F8 		sd	a5,-120(s0)
 316              	.LVL33:
  55:src/interruptRoutine.cpp **** 				void (* function)(void*);
 317              		.loc 1 55 5 is_stmt 1
  56:src/interruptRoutine.cpp **** 				function = (void (*)(void*))a2;
 318              		.loc 1 56 5
 319              		.loc 1 56 14 is_stmt 0
 320 010c 833704FC 		ld	a5,-64(s0)
 321              	.LVL34:
 322 0110 2330F4F8 		sd	a5,-128(s0)
 323              	.LVL35:
  57:src/interruptRoutine.cpp **** 				void* args;
 324              		.loc 1 57 5 is_stmt 1
GAS LISTING /tmp/ccGI7nPt.s 			page 8


  58:src/interruptRoutine.cpp **** 				args = (void*)a3;
 325              		.loc 1 58 5
 326              		.loc 1 58 10 is_stmt 0
 327 0114 833784FB 		ld	a5,-72(s0)
 328              	.LVL36:
 329 0118 233CF4F6 		sd	a5,-136(s0)
 330              	.LVL37:
  59:src/interruptRoutine.cpp **** 				uint64* sp;
 331              		.loc 1 59 5 is_stmt 1
  60:src/interruptRoutine.cpp **** 				sp = (uint64*)a4;
 332              		.loc 1 60 5
 333              		.loc 1 60 8 is_stmt 0
 334 011c 833704FB 		ld	a5,-80(s0)
 335              	.LVL38:
 336 0120 2338F4F6 		sd	a5,-144(s0)
 337              	.LVL39:
  61:src/interruptRoutine.cpp **** 
  62:src/interruptRoutine.cpp **** 				*handle = TCB::createThread(function, args, sp);
 338              		.loc 1 62 5 is_stmt 1
 339              		.loc 1 62 32 is_stmt 0
 340 0124 033604F7 		ld	a2,-144(s0)
 341 0128 833584F7 		ld	a1,-136(s0)
 342 012c 033504F8 		ld	a0,-128(s0)
 343 0130 97000000 		call	_ZN3TCB12createThreadEPFvPvES0_Pm@plt
 343      E7800000 
 344              	.LVL40:
 345 0138 13070500 		mv	a4,a0
 346              		.loc 1 62 13
 347 013c 833784F8 		ld	a5,-120(s0)
 348 0140 23B0E700 		sd	a4,0(a5)
  63:src/interruptRoutine.cpp **** 				if (*handle != nullptr) {
 349              		.loc 1 63 5 is_stmt 1
 350              		.loc 1 63 9 is_stmt 0
 351 0144 833784F8 		ld	a5,-120(s0)
 352 0148 83B70700 		ld	a5,0(a5)
 353              		.loc 1 63 5
 354 014c 63860700 		beqz	a5,.L20
  64:src/interruptRoutine.cpp **** 					__asm__ volatile("li a0, 0");
 355              		.loc 1 64 6 is_stmt 1
 356              		.loc 1 64 34 is_stmt 0
 357              	#APP
 358              	# 64 "src/interruptRoutine.cpp" 1
  65              					} else {
 359              		li a0, 0
 360              	# 0 "" 2
 361              	#NO_APP
 362 0154 6F008000 		j	.L21
 363              	.L20:
  66:src/interruptRoutine.cpp **** 					__asm__ volatile("li a0, -1");
 364              		.loc 1 66 6 is_stmt 1
 365              		.loc 1 66 35 is_stmt 0
 366              	#APP
 367              	# 66 "src/interruptRoutine.cpp" 1
  67              					}
 368              		li a0, -1
 369              	# 0 "" 2
 370              	#NO_APP
GAS LISTING /tmp/ccGI7nPt.s 			page 9


 371              	.L21:
  68:src/interruptRoutine.cpp **** 				__asm__ volatile("sd a0, 80(s0)");
 372              		.loc 1 68 5 is_stmt 1
 373              		.loc 1 68 38 is_stmt 0
 374              	#APP
 375              	# 68 "src/interruptRoutine.cpp" 1
  69              					break;
 376              		sd a0, 80(s0)
 377              	# 0 "" 2
 378              		.loc 1 69 5 is_stmt 1
 379              	#NO_APP
 380 0160 6F004009 		j	.L19
 381              	.LVL41:
 382              	.L15:
  70:src/interruptRoutine.cpp **** 			case 0x12:
 383              		.loc 1 70 4
  71:src/interruptRoutine.cpp **** 				//thread_exit
  72:src/interruptRoutine.cpp **** 				TCB::running->setFinished(true);
 384              		.loc 1 72 5
 385              		.loc 1 72 30 is_stmt 0
 386 0164 97070000 		la	a5,_ZN3TCB7runningE
 386      83B70700 
 387 016c 83B70700 		ld	a5,0(a5)
 388 0170 93051000 		li	a1,1
 389 0174 13850700 		mv	a0,a5
 390 0178 97000000 		call	_ZN3TCB11setFinishedEb
 390      E7800000 
 391              	.LVL42:
  73:src/interruptRoutine.cpp **** 				TCB::yield();
 392              		.loc 1 73 5 is_stmt 1
 393              		.loc 1 73 15 is_stmt 0
 394 0180 97000000 		call	_ZN3TCB5yieldEv@plt
 394      E7800000 
 395              	.LVL43:
  74:src/interruptRoutine.cpp **** 				break;
 396              		.loc 1 74 5 is_stmt 1
 397 0188 6F00C006 		j	.L19
 398              	.LVL44:
 399              	.L14:
  75:src/interruptRoutine.cpp **** 			case 0x13:
 400              		.loc 1 75 4
  76:src/interruptRoutine.cpp **** 				//thread_dispatch
  77:src/interruptRoutine.cpp **** 				TCB::yield();
 401              		.loc 1 77 5
 402              		.loc 1 77 15 is_stmt 0
 403 018c 97000000 		call	_ZN3TCB5yieldEv@plt
 403      E7800000 
 404              	.LVL45:
  78:src/interruptRoutine.cpp **** 				break;
 405              		.loc 1 78 5 is_stmt 1
 406 0194 6F000006 		j	.L19
 407              	.LVL46:
 408              	.L4:
  79:src/interruptRoutine.cpp **** 			case 0x14:
  80:src/interruptRoutine.cpp **** 				//thread_join
  81:src/interruptRoutine.cpp **** 				break;
  82:src/interruptRoutine.cpp **** 			case 0x21:
GAS LISTING /tmp/ccGI7nPt.s 			page 10


  83:src/interruptRoutine.cpp **** 				//sem_open
  84:src/interruptRoutine.cpp **** 				break;
  85:src/interruptRoutine.cpp **** 			case 0x22:
  86:src/interruptRoutine.cpp **** 				//sem_close
  87:src/interruptRoutine.cpp **** 				break;
  88:src/interruptRoutine.cpp **** 			case 0x23:
  89:src/interruptRoutine.cpp **** 				//sem_wait
  90:src/interruptRoutine.cpp **** 				break;
  91:src/interruptRoutine.cpp **** 			case 0x24:
  92:src/interruptRoutine.cpp **** 				//sem_signal
  93:src/interruptRoutine.cpp **** 				break;
  94:src/interruptRoutine.cpp **** 			case 0x31:
  95:src/interruptRoutine.cpp **** 				//time_sleep
  96:src/interruptRoutine.cpp **** 				break;
  97:src/interruptRoutine.cpp **** 			case 0x41:
  98:src/interruptRoutine.cpp **** 				//getc
  99:src/interruptRoutine.cpp **** 				break;
 100:src/interruptRoutine.cpp **** 			case 0x42:
 101:src/interruptRoutine.cpp **** 				//putc
 102:src/interruptRoutine.cpp **** 				break;
 103:src/interruptRoutine.cpp **** 			default:
 409              		.loc 1 103 4
 104:src/interruptRoutine.cpp **** 				printString("\nNepostojeci op code: ");
 410              		.loc 1 104 5
 411              		.loc 1 104 16 is_stmt 0
 412 0198 17050000 		lla	a0,.LC0
 412      13050500 
 413 01a0 97000000 		call	_Z11printStringPKc@plt
 413      E7800000 
 414              	.LVL47:
 105:src/interruptRoutine.cpp **** 				printInteger(opCode);
 415              		.loc 1 105 5 is_stmt 1
 416              		.loc 1 105 17 is_stmt 0
 417 01a8 033504F9 		ld	a0,-112(s0)
 418 01ac 97000000 		call	_Z12printIntegerm@plt
 418      E7800000 
 419              	.LVL48:
 106:src/interruptRoutine.cpp **** 				printString("\nscause: ");
 420              		.loc 1 106 5 is_stmt 1
 421              		.loc 1 106 16 is_stmt 0
 422 01b4 17050000 		lla	a0,.LC1
 422      13050500 
 423 01bc 97000000 		call	_Z11printStringPKc@plt
 423      E7800000 
 424              	.LVL49:
 107:src/interruptRoutine.cpp **** 				printInteger(scause);
 425              		.loc 1 107 5 is_stmt 1
 426              		.loc 1 107 17 is_stmt 0
 427 01c4 033584FE 		ld	a0,-24(s0)
 428 01c8 97000000 		call	_Z12printIntegerm@plt
 428      E7800000 
 429              	.LVL50:
 108:src/interruptRoutine.cpp **** 				printString("\nsepc: ");
 430              		.loc 1 108 5 is_stmt 1
 431              		.loc 1 108 16 is_stmt 0
 432 01d0 17050000 		lla	a0,.LC2
 432      13050500 
GAS LISTING /tmp/ccGI7nPt.s 			page 11


 433 01d8 97000000 		call	_Z11printStringPKc@plt
 433      E7800000 
 434              	.LVL51:
 109:src/interruptRoutine.cpp **** 				printInteger(sepc);
 435              		.loc 1 109 5 is_stmt 1
 436              		.loc 1 109 17 is_stmt 0
 437 01e0 033504FE 		ld	a0,-32(s0)
 438 01e4 97000000 		call	_Z12printIntegerm@plt
 438      E7800000 
 439              	.LVL52:
 110:src/interruptRoutine.cpp **** 				break;
 440              		.loc 1 110 5 is_stmt 1
 441 01ec 6F008000 		j	.L19
 442              	.LVL53:
 443              	.L25:
  81:src/interruptRoutine.cpp **** 			case 0x21:
 444              		.loc 1 81 5 is_stmt 0
 445 01f0 13000000 		nop
 446              	.LVL54:
 447              	.L19:
 448              	.LBE5:
 449              	.LBE4:
 111:src/interruptRoutine.cpp **** 		}
 112:src/interruptRoutine.cpp **** 		//sepc pokazuje na ecall instrukciju, treba preci na sledecu instrukciju
 113:src/interruptRoutine.cpp **** 		//sepc += 4;
 114:src/interruptRoutine.cpp **** 		__asm__ volatile("addi %[dst], %[src], 0x4":[dst]"=r"(sepc):[src]"r"(
 450              		.loc 1 114 3 is_stmt 1
 115:src/interruptRoutine.cpp **** 				sepc):"a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7");
 451              		.loc 1 115 58 is_stmt 0
 452 01f4 033304FE 		ld	t1,-32(s0)
 453              	#APP
 454              	# 115 "src/interruptRoutine.cpp" 1
 116              			__asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc):"a5", "a0", "a1", "a2", "a3", "a4", "a6"
 455              		addi t1, t1, 0x4
 456              	# 0 "" 2
 457              	.LVL55:
 458              	#NO_APP
 459 01fc 233064FE 		sd	t1,-32(s0)
 460              	.LVL56:
 461              		.loc 1 116 3 is_stmt 1
 462              		.loc 1 116 107 is_stmt 0
 463 0200 033304FE 		ld	t1,-32(s0)
 464              	#APP
 465              	# 116 "src/interruptRoutine.cpp" 1
 117              			//Riscv::w_sepc(sepc + 4);
 466              		csrw sepc, t1
 467              	# 0 "" 2
 468              	#NO_APP
 469              	.LBE3:
 470 0208 13000000 		nop
 471              	.LBE2:
 118:src/interruptRoutine.cpp **** 	} else if (scause == (1UL << 63 | 9)) {
 119:src/interruptRoutine.cpp **** 		//spoljasnji hardverski prekid (od konzole)
 120:src/interruptRoutine.cpp **** 		console_handler();
 121:src/interruptRoutine.cpp **** 	} else if (scause == (1UL << 63 | 1)) {
 122:src/interruptRoutine.cpp **** 		//prekid od tajmera
 123:src/interruptRoutine.cpp **** 		Riscv::mc_sip(Riscv::SIP_SSIP);
GAS LISTING /tmp/ccGI7nPt.s 			page 12


 124:src/interruptRoutine.cpp **** 	} else {
 125:src/interruptRoutine.cpp **** 		println("\nGreska u prekidnoj rutini");
 126:src/interruptRoutine.cpp **** 		printString("scause: ");
 127:src/interruptRoutine.cpp **** 		printInteger(scause);
 128:src/interruptRoutine.cpp **** 		printString("\nsepc: ");
 129:src/interruptRoutine.cpp **** 		printInteger(sepc);
 130:src/interruptRoutine.cpp **** 	}
 131:src/interruptRoutine.cpp **** }
 472              		.loc 1 131 1
 473 020c 6F000009 		j	.L26
 474              	.LVL57:
 475              	.L3:
 476              	.LBB6:
 118:src/interruptRoutine.cpp **** 	} else if (scause == (1UL << 63 | 9)) {
 477              		.loc 1 118 9 is_stmt 1
 478 0210 033784FE 		ld	a4,-24(s0)
 479              	.LVL58:
 480 0214 9307F0FF 		li	a5,-1
 481 0218 9397F703 		slli	a5,a5,63
 482 021c 93879700 		addi	a5,a5,9
 483 0220 6318F700 		bne	a4,a5,.L23
 120:src/interruptRoutine.cpp **** 	} else if (scause == (1UL << 63 | 1)) {
 484              		.loc 1 120 3
 120:src/interruptRoutine.cpp **** 	} else if (scause == (1UL << 63 | 1)) {
 485              		.loc 1 120 18 is_stmt 0
 486 0224 97000000 		call	console_handler@plt
 486      E7800000 
 487              	.LVL59:
 488              	.LBE6:
 489              		.loc 1 131 1
 490 022c 6F000007 		j	.L26
 491              	.LVL60:
 492              	.L23:
 493              	.LBB7:
 121:src/interruptRoutine.cpp **** 		//prekid od tajmera
 494              		.loc 1 121 9 is_stmt 1
 495 0230 033784FE 		ld	a4,-24(s0)
 496 0234 9307F0FF 		li	a5,-1
 497 0238 9397F703 		slli	a5,a5,63
 498 023c 93871700 		addi	a5,a5,1
 499 0240 631AF700 		bne	a4,a5,.L24
 123:src/interruptRoutine.cpp **** 	} else {
 500              		.loc 1 123 3
 123:src/interruptRoutine.cpp **** 	} else {
 501              		.loc 1 123 16 is_stmt 0
 502 0244 13052000 		li	a0,2
 503 0248 97000000 		call	_ZN5Riscv6mc_sipEm
 503      E7800000 
 504              	.LVL61:
 505              	.LBE7:
 506              		.loc 1 131 1
 507 0250 6F00C004 		j	.L26
 508              	.LVL62:
 509              	.L24:
 510              	.LBB8:
 125:src/interruptRoutine.cpp **** 		printString("scause: ");
 511              		.loc 1 125 3 is_stmt 1
GAS LISTING /tmp/ccGI7nPt.s 			page 13


 125:src/interruptRoutine.cpp **** 		printString("scause: ");
 512              		.loc 1 125 10 is_stmt 0
 513 0254 17050000 		lla	a0,.LC3
 513      13050500 
 514 025c 97000000 		call	_Z7printlnPKc@plt
 514      E7800000 
 515              	.LVL63:
 126:src/interruptRoutine.cpp **** 		printInteger(scause);
 516              		.loc 1 126 3 is_stmt 1
 126:src/interruptRoutine.cpp **** 		printInteger(scause);
 517              		.loc 1 126 14 is_stmt 0
 518 0264 17050000 		lla	a0,.LC4
 518      13050500 
 519 026c 97000000 		call	_Z11printStringPKc@plt
 519      E7800000 
 520              	.LVL64:
 127:src/interruptRoutine.cpp **** 		printString("\nsepc: ");
 521              		.loc 1 127 3 is_stmt 1
 127:src/interruptRoutine.cpp **** 		printString("\nsepc: ");
 522              		.loc 1 127 15 is_stmt 0
 523 0274 033584FE 		ld	a0,-24(s0)
 524 0278 97000000 		call	_Z12printIntegerm@plt
 524      E7800000 
 525              	.LVL65:
 128:src/interruptRoutine.cpp **** 		printInteger(sepc);
 526              		.loc 1 128 3 is_stmt 1
 128:src/interruptRoutine.cpp **** 		printInteger(sepc);
 527              		.loc 1 128 14 is_stmt 0
 528 0280 17050000 		lla	a0,.LC2
 528      13050500 
 529 0288 97000000 		call	_Z11printStringPKc@plt
 529      E7800000 
 530              	.LVL66:
 129:src/interruptRoutine.cpp **** 	}
 531              		.loc 1 129 3 is_stmt 1
 129:src/interruptRoutine.cpp **** 	}
 532              		.loc 1 129 15 is_stmt 0
 533 0290 033504FE 		ld	a0,-32(s0)
 534 0294 97000000 		call	_Z12printIntegerm@plt
 534      E7800000 
 535              	.LVL67:
 536              	.L26:
 537              	.LBE8:
 538              		.loc 1 131 1
 539 029c 13000000 		nop
 540 02a0 83308109 		ld	ra,152(sp)
 541              		.cfi_restore 1
 542 02a4 03340109 		ld	s0,144(sp)
 543              		.cfi_restore 8
 544              		.cfi_def_cfa 2, 160
 545              	.LVL68:
 546 02a8 1301010A 		addi	sp,sp,160
 547              		.cfi_def_cfa_offset 0
 548              	.LVL69:
 549 02ac 67800000 		jr	ra
 550              		.cfi_endproc
 551              	.LFE27:
GAS LISTING /tmp/ccGI7nPt.s 			page 14


 553              		.section	.text._ZN5Riscv6mc_sipEm,"axG",@progbits,_ZN5Riscv6mc_sipEm,comdat
 554              		.align	2
 555              		.weak	_ZN5Riscv6mc_sipEm
 557              	_ZN5Riscv6mc_sipEm:
 558              	.LFB10:
 559              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 5/17/23.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJEKAT2023_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJEKAT2023_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** class Riscv {
  11:src/../h/Riscv.hpp **** public:
  12:src/../h/Riscv.hpp **** 
  13:src/../h/Riscv.hpp **** 	static void popSppSpie();
  14:src/../h/Riscv.hpp **** 
  15:src/../h/Riscv.hpp **** 	//stavljanje registara x3-x31 na stek
  16:src/../h/Riscv.hpp **** 	static void pushRegisters();    //implementacija u asm
  17:src/../h/Riscv.hpp **** 
  18:src/../h/Riscv.hpp **** 	//skidanje registara x3-x31 sa steka
  19:src/../h/Riscv.hpp **** 	static void popRegisters();     //implementacija u asm
  20:src/../h/Riscv.hpp **** 
  21:src/../h/Riscv.hpp **** 	//read scause
  22:src/../h/Riscv.hpp **** 	static uint64 r_scause();
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp **** 	//write scause
  25:src/../h/Riscv.hpp **** 	static void w_scause(uint64 scause);
  26:src/../h/Riscv.hpp **** 
  27:src/../h/Riscv.hpp **** 	//read sepc
  28:src/../h/Riscv.hpp **** 	static uint64 r_sepc();
  29:src/../h/Riscv.hpp **** 
  30:src/../h/Riscv.hpp **** 	//write sepc
  31:src/../h/Riscv.hpp **** 	static void w_sepc(uint64 sepc);
  32:src/../h/Riscv.hpp **** 
  33:src/../h/Riscv.hpp **** 	//read stvec
  34:src/../h/Riscv.hpp **** 	static uint64 r_stvec();
  35:src/../h/Riscv.hpp **** 
  36:src/../h/Riscv.hpp **** 	//write stvec
  37:src/../h/Riscv.hpp **** 	static void w_stvec(uint64 stvec);
  38:src/../h/Riscv.hpp **** 
  39:src/../h/Riscv.hpp **** 	enum BitMaskSip {
  40:src/../h/Riscv.hpp **** 		//postoji zahtev za softverski prekid
  41:src/../h/Riscv.hpp **** 		SIP_SSIP = (1 << 1),
  42:src/../h/Riscv.hpp **** 		//postoji prekid od tajmera
  43:src/../h/Riscv.hpp **** 		SIP_STIP = (1 << 5),
  44:src/../h/Riscv.hpp **** 		//postoji zahtev za spoljasnji hardverski prekid
  45:src/../h/Riscv.hpp **** 		SIP_SEIP = (1 << 9)
  46:src/../h/Riscv.hpp **** 	};
  47:src/../h/Riscv.hpp **** 
  48:src/../h/Riscv.hpp **** 	//mask set sip
  49:src/../h/Riscv.hpp **** 	static void ms_sip(uint64 mask);
  50:src/../h/Riscv.hpp **** 
  51:src/../h/Riscv.hpp **** 	//mask clear sip
GAS LISTING /tmp/ccGI7nPt.s 			page 15


  52:src/../h/Riscv.hpp **** 	static void mc_sip(uint64 mask);
  53:src/../h/Riscv.hpp **** 
  54:src/../h/Riscv.hpp **** 	//read sip
  55:src/../h/Riscv.hpp **** 	static uint64 r_sip();
  56:src/../h/Riscv.hpp **** 
  57:src/../h/Riscv.hpp **** 	//write sip
  58:src/../h/Riscv.hpp **** 	static void w_sip(uint64 sip);
  59:src/../h/Riscv.hpp **** 
  60:src/../h/Riscv.hpp **** 	//kada se pozove sret, SIE dobija vrednost SPIE, SPIE se postavlja na 1,
  61:src/../h/Riscv.hpp **** 	//rezim se postavlja na osnovu SPP bita, SPP se postavlja na 0
  62:src/../h/Riscv.hpp **** 	enum BitMaskSstatus {
  63:src/../h/Riscv.hpp **** 		//1 - dozvoljeni prekidi; 0- nedozvoljeni prekidi; igonrise se u korisnickom rezimu
  64:src/../h/Riscv.hpp **** 		SSTATUS_SIE = (1 << 1),
  65:src/../h/Riscv.hpp **** 		//prethodna vrednost bita SIE
  66:src/../h/Riscv.hpp **** 		SSTATUS_SPIE = (1 << 5),
  67:src/../h/Riscv.hpp **** 		//iz kog rezima se desio skok; 0 - iz korisnickog; 1 - iz sistemskog
  68:src/../h/Riscv.hpp **** 		SSTATUS_SPP = (1 << 8)
  69:src/../h/Riscv.hpp **** 	};
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp **** 	//mask set sstatus
  72:src/../h/Riscv.hpp **** 	static void ms_sstatus(uint64 mask);
  73:src/../h/Riscv.hpp **** 
  74:src/../h/Riscv.hpp **** 	//mask clear sstatus
  75:src/../h/Riscv.hpp **** 	static void mc_sstatus(uint64 mask);
  76:src/../h/Riscv.hpp **** 
  77:src/../h/Riscv.hpp **** 	//read sstatus
  78:src/../h/Riscv.hpp **** 	static uint64 r_sstatus();
  79:src/../h/Riscv.hpp **** 
  80:src/../h/Riscv.hpp **** 	//write sstatus
  81:src/../h/Riscv.hpp **** 	static void w_sstatus(uint64 sstatus);
  82:src/../h/Riscv.hpp **** 
  83:src/../h/Riscv.hpp **** 	//upisuje kod sistemskog poziva u registar a0
  84:src/../h/Riscv.hpp **** 	static void loadOpCode(uint64 opCode);
  85:src/../h/Riscv.hpp **** 
  86:src/../h/Riscv.hpp **** };
  87:src/../h/Riscv.hpp **** 
  88:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause() {
  89:src/../h/Riscv.hpp **** 	uint64 volatile scause;
  90:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[scause], scause": [scause] "=r"(scause));
  91:src/../h/Riscv.hpp **** 	return scause;
  92:src/../h/Riscv.hpp **** }
  93:src/../h/Riscv.hpp **** 
  94:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
  95:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw scause, %[scause]": :[scause] "r"(scause));
  96:src/../h/Riscv.hpp **** }
  97:src/../h/Riscv.hpp **** 
  98:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc() {
  99:src/../h/Riscv.hpp **** 	uint64 volatile sepc;
 100:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[sepc], sepc": [sepc] "=r"(sepc));
 101:src/../h/Riscv.hpp **** 	return sepc;
 102:src/../h/Riscv.hpp **** }
 103:src/../h/Riscv.hpp **** 
 104:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
 105:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 106:src/../h/Riscv.hpp **** }
 107:src/../h/Riscv.hpp **** 
 108:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec() {
GAS LISTING /tmp/ccGI7nPt.s 			page 16


 109:src/../h/Riscv.hpp **** 	uint64 volatile stvec;
 110:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[stvec], stvec": [stvec] "=r"(stvec));
 111:src/../h/Riscv.hpp **** 	return stvec;
 112:src/../h/Riscv.hpp **** }
 113:src/../h/Riscv.hpp **** 
 114:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 115:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw stvec, %[stvec]": :[stvec] "r"(stvec));
 116:src/../h/Riscv.hpp **** }
 117:src/../h/Riscv.hpp **** 
 118:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 119:src/../h/Riscv.hpp **** 	__asm__ volatile("csrs sip, %[mask]": :[mask] "r"(mask));
 120:src/../h/Riscv.hpp **** }
 121:src/../h/Riscv.hpp **** 
 122:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 560              		.loc 2 122 40 is_stmt 1
 561              		.cfi_startproc
 562              	.LVL70:
 563 0000 130101FF 		addi	sp,sp,-16
 564              		.cfi_def_cfa_offset 16
 565 0004 23348100 		sd	s0,8(sp)
 566              		.cfi_offset 8, -8
 567 0008 13040101 		addi	s0,sp,16
 568              		.cfi_def_cfa 8, 0
 123:src/../h/Riscv.hpp **** 	__asm__ volatile("csrc sip, %[mask]": :[mask] "r"(mask));
 569              		.loc 2 123 2
 570              		.loc 2 123 58 is_stmt 0
 571              	#APP
 572              	# 123 "src/../h/Riscv.hpp" 1
 124              	}
 573              		csrc sip, a0
 574              	# 0 "" 2
 575              		.loc 2 124 1
 576              	#NO_APP
 577 0010 03348100 		ld	s0,8(sp)
 578              		.cfi_restore 8
 579              		.cfi_def_cfa 2, 16
 580 0014 13010101 		addi	sp,sp,16
 581              		.cfi_def_cfa_offset 0
 582 0018 67800000 		jr	ra
 583              		.cfi_endproc
 584              	.LFE10:
 586              		.section	.text._ZN3TCB11setFinishedEb,"axG",@progbits,_ZN3TCB11setFinishedEb,comdat
 587              		.align	2
 588              		.weak	_ZN3TCB11setFinishedEb
 590              	_ZN3TCB11setFinishedEb:
 591              	.LFB19:
 592              		.file 3 "src/../h/TCB.hpp"
   1:src/../h/TCB.hpp **** //
   2:src/../h/TCB.hpp **** // Created by os on 5/23/23.
   3:src/../h/TCB.hpp **** //
   4:src/../h/TCB.hpp **** 
   5:src/../h/TCB.hpp **** #ifndef PROJEKAT2023_TCB_HPP
   6:src/../h/TCB.hpp **** #define PROJEKAT2023_TCB_HPP
   7:src/../h/TCB.hpp **** 
   8:src/../h/TCB.hpp **** #include "../lib/hw.h"
   9:src/../h/TCB.hpp **** 
  10:src/../h/TCB.hpp **** class TCB {
GAS LISTING /tmp/ccGI7nPt.s 			page 17


  11:src/../h/TCB.hpp **** public:
  12:src/../h/TCB.hpp **** 	friend class Scheduler;
  13:src/../h/TCB.hpp **** 	using Body = void (*)(void*);
  14:src/../h/TCB.hpp **** 
  15:src/../h/TCB.hpp **** 	static TCB* createThread(Body function, void* args, uint64* stack);
  16:src/../h/TCB.hpp **** 
  17:src/../h/TCB.hpp **** 	bool isFinished() { return finished; }
  18:src/../h/TCB.hpp **** 
  19:src/../h/TCB.hpp **** 	void setFinished(bool finish) { this->finished = finish; }
 593              		.loc 3 19 7 is_stmt 1
 594              		.cfi_startproc
 595              	.LVL71:
 596 0000 130101FF 		addi	sp,sp,-16
 597              		.cfi_def_cfa_offset 16
 598 0004 23348100 		sd	s0,8(sp)
 599              		.cfi_offset 8, -8
 600 0008 13040101 		addi	s0,sp,16
 601              		.cfi_def_cfa 8, 0
 602              		.loc 3 19 34
 603              		.loc 3 19 49 is_stmt 0
 604 000c 2308B502 		sb	a1,48(a0)
 605              		.loc 3 19 59
 606 0010 03348100 		ld	s0,8(sp)
 607              		.cfi_restore 8
 608              		.cfi_def_cfa 2, 16
 609 0014 13010101 		addi	sp,sp,16
 610              		.cfi_def_cfa_offset 0
 611 0018 67800000 		jr	ra
 612              		.cfi_endproc
 613              	.LFE19:
 615              		.text
 616              	.Letext0:
 617              		.file 4 "src/../lib/hw.h"
 618              		.file 5 "src/../h/MemoryAllocator.hpp"
 619              		.file 6 "src/../h/syscall_c.hpp"
 620              		.file 7 "src/../h/helper.hpp"
 621              		.file 8 "src/../lib/console.h"
GAS LISTING /tmp/ccGI7nPt.s 			page 18


DEFINED SYMBOLS
                            *ABS*:0000000000000000 interruptRoutine.cpp
     /tmp/ccGI7nPt.s:26     .text:0000000000000000 interruptRoutine
     /tmp/ccGI7nPt.s:30     .text:0000000000000000 .L0 
     /tmp/ccGI7nPt.s:31     .text:0000000000000000 .L0 
     /tmp/ccGI7nPt.s:32     .text:0000000000000004 .L0 
     /tmp/ccGI7nPt.s:35     .text:000000000000000c .L0 
     /tmp/ccGI7nPt.s:36     .text:000000000000000c .L0 
     /tmp/ccGI7nPt.s:38     .text:0000000000000010 .L0 
     /tmp/ccGI7nPt.s:40     .text:0000000000000010 .L0 
     /tmp/ccGI7nPt.s:41     .text:0000000000000010 .L0 
src/interruptRoutine.cpp:16     .text:0000000000000010 .L0 
     /tmp/ccGI7nPt.s:50     .text:0000000000000018 .L0 
src/interruptRoutine.cpp:17     .text:0000000000000018 .L0 
     /tmp/ccGI7nPt.s:60     .text:0000000000000020 .L0 
src/interruptRoutine.cpp:19     .text:0000000000000020 .L0 
     /tmp/ccGI7nPt.s:70     .text:0000000000000028 .L0 
     /tmp/ccGI7nPt.s:71     .text:0000000000000028 .L0 
src/interruptRoutine.cpp:21     .text:0000000000000028 .L0 
     /tmp/ccGI7nPt.s:81     .text:0000000000000030 .L0 
src/interruptRoutine.cpp:22     .text:0000000000000030 .L0 
     /tmp/ccGI7nPt.s:91     .text:0000000000000038 .L0 
src/interruptRoutine.cpp:23     .text:0000000000000038 .L0 
     /tmp/ccGI7nPt.s:101    .text:0000000000000040 .L0 
src/interruptRoutine.cpp:24     .text:0000000000000040 .L0 
     /tmp/ccGI7nPt.s:111    .text:0000000000000048 .L0 
src/interruptRoutine.cpp:25     .text:0000000000000048 .L0 
     /tmp/ccGI7nPt.s:121    .text:0000000000000050 .L0 
src/interruptRoutine.cpp:26     .text:0000000000000050 .L0 
     /tmp/ccGI7nPt.s:131    .text:0000000000000058 .L0 
src/interruptRoutine.cpp:27     .text:0000000000000058 .L0 
     /tmp/ccGI7nPt.s:141    .text:0000000000000060 .L0 
src/interruptRoutine.cpp:28     .text:0000000000000060 .L0 
     /tmp/ccGI7nPt.s:152    .text:0000000000000068 .L0 
     /tmp/ccGI7nPt.s:156    .text:0000000000000074 .L0 
     /tmp/ccGI7nPt.s:162    .text:0000000000000080 .L0 
     /tmp/ccGI7nPt.s:163    .text:0000000000000080 .L0 
     /tmp/ccGI7nPt.s:167    .text:0000000000000088 .L0 
     /tmp/ccGI7nPt.s:258    .text:00000000000000c0 .L0 
     /tmp/ccGI7nPt.s:259    .text:00000000000000c0 .L0 
     /tmp/ccGI7nPt.s:260    .text:00000000000000c0 .L0 
     /tmp/ccGI7nPt.s:261    .text:00000000000000c0 .L0 
     /tmp/ccGI7nPt.s:265    .text:00000000000000c8 .L0 
     /tmp/ccGI7nPt.s:266    .text:00000000000000c8 .L0 
     /tmp/ccGI7nPt.s:272    .text:00000000000000d4 .L0 
     /tmp/ccGI7nPt.s:273    .text:00000000000000d4 .L0 
     /tmp/ccGI7nPt.s:277    .text:00000000000000e0 .L0 
src/interruptRoutine.cpp:41     .text:00000000000000e0 .L0 
     /tmp/ccGI7nPt.s:284    .text:00000000000000e4 .L0 
     /tmp/ccGI7nPt.s:288    .text:00000000000000e8 .L0 
     /tmp/ccGI7nPt.s:289    .text:00000000000000e8 .L0 
     /tmp/ccGI7nPt.s:290    .text:00000000000000e8 .L0 
     /tmp/ccGI7nPt.s:291    .text:00000000000000e8 .L0 
     /tmp/ccGI7nPt.s:295    .text:00000000000000f0 .L0 
     /tmp/ccGI7nPt.s:296    .text:00000000000000f0 .L0 
     /tmp/ccGI7nPt.s:300    .text:00000000000000fc .L0 
src/interruptRoutine.cpp:49     .text:00000000000000fc .L0 
GAS LISTING /tmp/ccGI7nPt.s 			page 19


     /tmp/ccGI7nPt.s:307    .text:0000000000000100 .L0 
     /tmp/ccGI7nPt.s:311    .text:0000000000000104 .L0 
     /tmp/ccGI7nPt.s:312    .text:0000000000000104 .L0 
     /tmp/ccGI7nPt.s:313    .text:0000000000000104 .L0 
     /tmp/ccGI7nPt.s:314    .text:0000000000000104 .L0 
     /tmp/ccGI7nPt.s:318    .text:000000000000010c .L0 
     /tmp/ccGI7nPt.s:319    .text:000000000000010c .L0 
     /tmp/ccGI7nPt.s:320    .text:000000000000010c .L0 
     /tmp/ccGI7nPt.s:325    .text:0000000000000114 .L0 
     /tmp/ccGI7nPt.s:326    .text:0000000000000114 .L0 
     /tmp/ccGI7nPt.s:327    .text:0000000000000114 .L0 
     /tmp/ccGI7nPt.s:332    .text:000000000000011c .L0 
     /tmp/ccGI7nPt.s:333    .text:000000000000011c .L0 
     /tmp/ccGI7nPt.s:334    .text:000000000000011c .L0 
     /tmp/ccGI7nPt.s:339    .text:0000000000000124 .L0 
     /tmp/ccGI7nPt.s:340    .text:0000000000000124 .L0 
     /tmp/ccGI7nPt.s:347    .text:000000000000013c .L0 
     /tmp/ccGI7nPt.s:350    .text:0000000000000144 .L0 
     /tmp/ccGI7nPt.s:351    .text:0000000000000144 .L0 
     /tmp/ccGI7nPt.s:354    .text:000000000000014c .L0 
     /tmp/ccGI7nPt.s:356    .text:0000000000000150 .L0 
src/interruptRoutine.cpp:64     .text:0000000000000150 .L0 
     /tmp/ccGI7nPt.s:365    .text:0000000000000158 .L0 
src/interruptRoutine.cpp:66     .text:0000000000000158 .L0 
     /tmp/ccGI7nPt.s:373    .text:000000000000015c .L0 
src/interruptRoutine.cpp:68     .text:000000000000015c .L0 
     /tmp/ccGI7nPt.s:380    .text:0000000000000160 .L0 
     /tmp/ccGI7nPt.s:384    .text:0000000000000164 .L0 
     /tmp/ccGI7nPt.s:385    .text:0000000000000164 .L0 
     /tmp/ccGI7nPt.s:386    .text:0000000000000164 .L0 
     /tmp/ccGI7nPt.s:590    .text._ZN3TCB11setFinishedEb:0000000000000000 _ZN3TCB11setFinishedEb
     /tmp/ccGI7nPt.s:393    .text:0000000000000180 .L0 
     /tmp/ccGI7nPt.s:394    .text:0000000000000180 .L0 
     /tmp/ccGI7nPt.s:397    .text:0000000000000188 .L0 
     /tmp/ccGI7nPt.s:401    .text:000000000000018c .L0 
     /tmp/ccGI7nPt.s:402    .text:000000000000018c .L0 
     /tmp/ccGI7nPt.s:403    .text:000000000000018c .L0 
     /tmp/ccGI7nPt.s:406    .text:0000000000000194 .L0 
     /tmp/ccGI7nPt.s:410    .text:0000000000000198 .L0 
     /tmp/ccGI7nPt.s:411    .text:0000000000000198 .L0 
     /tmp/ccGI7nPt.s:412    .text:0000000000000198 .L0 
     /tmp/ccGI7nPt.s:416    .text:00000000000001a8 .L0 
     /tmp/ccGI7nPt.s:417    .text:00000000000001a8 .L0 
     /tmp/ccGI7nPt.s:421    .text:00000000000001b4 .L0 
     /tmp/ccGI7nPt.s:422    .text:00000000000001b4 .L0 
     /tmp/ccGI7nPt.s:426    .text:00000000000001c4 .L0 
     /tmp/ccGI7nPt.s:427    .text:00000000000001c4 .L0 
     /tmp/ccGI7nPt.s:431    .text:00000000000001d0 .L0 
     /tmp/ccGI7nPt.s:432    .text:00000000000001d0 .L0 
     /tmp/ccGI7nPt.s:436    .text:00000000000001e0 .L0 
     /tmp/ccGI7nPt.s:437    .text:00000000000001e0 .L0 
     /tmp/ccGI7nPt.s:441    .text:00000000000001ec .L0 
     /tmp/ccGI7nPt.s:445    .text:00000000000001f0 .L0 
     /tmp/ccGI7nPt.s:451    .text:00000000000001f4 .L0 
     /tmp/ccGI7nPt.s:452    .text:00000000000001f4 .L0 
     /tmp/ccGI7nPt.s:462    .text:0000000000000200 .L0 
     /tmp/ccGI7nPt.s:463    .text:0000000000000200 .L0 
GAS LISTING /tmp/ccGI7nPt.s 			page 20


     /tmp/ccGI7nPt.s:473    .text:000000000000020c .L0 
     /tmp/ccGI7nPt.s:478    .text:0000000000000210 .L0 
     /tmp/ccGI7nPt.s:485    .text:0000000000000224 .L0 
     /tmp/ccGI7nPt.s:486    .text:0000000000000224 .L0 
     /tmp/ccGI7nPt.s:490    .text:000000000000022c .L0 
     /tmp/ccGI7nPt.s:495    .text:0000000000000230 .L0 
     /tmp/ccGI7nPt.s:501    .text:0000000000000244 .L0 
     /tmp/ccGI7nPt.s:502    .text:0000000000000244 .L0 
     /tmp/ccGI7nPt.s:557    .text._ZN5Riscv6mc_sipEm:0000000000000000 _ZN5Riscv6mc_sipEm
     /tmp/ccGI7nPt.s:507    .text:0000000000000250 .L0 
     /tmp/ccGI7nPt.s:512    .text:0000000000000254 .L0 
     /tmp/ccGI7nPt.s:513    .text:0000000000000254 .L0 
     /tmp/ccGI7nPt.s:517    .text:0000000000000264 .L0 
     /tmp/ccGI7nPt.s:518    .text:0000000000000264 .L0 
     /tmp/ccGI7nPt.s:522    .text:0000000000000274 .L0 
     /tmp/ccGI7nPt.s:523    .text:0000000000000274 .L0 
     /tmp/ccGI7nPt.s:527    .text:0000000000000280 .L0 
     /tmp/ccGI7nPt.s:528    .text:0000000000000280 .L0 
     /tmp/ccGI7nPt.s:532    .text:0000000000000290 .L0 
     /tmp/ccGI7nPt.s:533    .text:0000000000000290 .L0 
     /tmp/ccGI7nPt.s:539    .text:000000000000029c .L0 
     /tmp/ccGI7nPt.s:541    .text:00000000000002a4 .L0 
     /tmp/ccGI7nPt.s:543    .text:00000000000002a8 .L0 
     /tmp/ccGI7nPt.s:544    .text:00000000000002a8 .L0 
     /tmp/ccGI7nPt.s:547    .text:00000000000002ac .L0 
     /tmp/ccGI7nPt.s:550    .text:00000000000002b0 .L0 
     /tmp/ccGI7nPt.s:561    .text._ZN5Riscv6mc_sipEm:0000000000000000 .L0 
     /tmp/ccGI7nPt.s:563    .text._ZN5Riscv6mc_sipEm:0000000000000000 .L0 
     /tmp/ccGI7nPt.s:564    .text._ZN5Riscv6mc_sipEm:0000000000000004 .L0 
     /tmp/ccGI7nPt.s:566    .text._ZN5Riscv6mc_sipEm:0000000000000008 .L0 
     /tmp/ccGI7nPt.s:568    .text._ZN5Riscv6mc_sipEm:000000000000000c .L0 
     /tmp/ccGI7nPt.s:570    .text._ZN5Riscv6mc_sipEm:000000000000000c .L0 
  src/../h/Riscv.hpp:123    .text._ZN5Riscv6mc_sipEm:000000000000000c .L0 
     /tmp/ccGI7nPt.s:577    .text._ZN5Riscv6mc_sipEm:0000000000000010 .L0 
     /tmp/ccGI7nPt.s:578    .text._ZN5Riscv6mc_sipEm:0000000000000014 .L0 
     /tmp/ccGI7nPt.s:579    .text._ZN5Riscv6mc_sipEm:0000000000000014 .L0 
     /tmp/ccGI7nPt.s:581    .text._ZN5Riscv6mc_sipEm:0000000000000018 .L0 
     /tmp/ccGI7nPt.s:583    .text._ZN5Riscv6mc_sipEm:000000000000001c .L0 
     /tmp/ccGI7nPt.s:594    .text._ZN3TCB11setFinishedEb:0000000000000000 .L0 
     /tmp/ccGI7nPt.s:596    .text._ZN3TCB11setFinishedEb:0000000000000000 .L0 
     /tmp/ccGI7nPt.s:597    .text._ZN3TCB11setFinishedEb:0000000000000004 .L0 
     /tmp/ccGI7nPt.s:599    .text._ZN3TCB11setFinishedEb:0000000000000008 .L0 
     /tmp/ccGI7nPt.s:601    .text._ZN3TCB11setFinishedEb:000000000000000c .L0 
     /tmp/ccGI7nPt.s:603    .text._ZN3TCB11setFinishedEb:000000000000000c .L0 
     /tmp/ccGI7nPt.s:604    .text._ZN3TCB11setFinishedEb:000000000000000c .L0 
     /tmp/ccGI7nPt.s:606    .text._ZN3TCB11setFinishedEb:0000000000000010 .L0 
     /tmp/ccGI7nPt.s:607    .text._ZN3TCB11setFinishedEb:0000000000000014 .L0 
     /tmp/ccGI7nPt.s:608    .text._ZN3TCB11setFinishedEb:0000000000000014 .L0 
     /tmp/ccGI7nPt.s:610    .text._ZN3TCB11setFinishedEb:0000000000000018 .L0 
     /tmp/ccGI7nPt.s:612    .text._ZN3TCB11setFinishedEb:000000000000001c .L0 
     /tmp/ccGI7nPt.s:622    .text:00000000000002b0 .L0 
     /tmp/ccGI7nPt.s:586    .text._ZN5Riscv6mc_sipEm:000000000000001c .L0 
     /tmp/ccGI7nPt.s:615    .text._ZN3TCB11setFinishedEb:000000000000001c .L0 
     /tmp/ccGI7nPt.s:185    .rodata:000000000000005c .L6
     /tmp/ccGI7nPt.s:174    .text:000000000000009c .L0 
     /tmp/ccGI7nPt.s:179    .text:00000000000000b0 .L0 
     /tmp/ccGI7nPt.s:386    .text:0000000000000164 .L0 
GAS LISTING /tmp/ccGI7nPt.s 			page 21


     /tmp/ccGI7nPt.s:8      .rodata:0000000000000000 .LC0
     /tmp/ccGI7nPt.s:412    .text:0000000000000198 .L0 
     /tmp/ccGI7nPt.s:11     .rodata:0000000000000018 .LC1
     /tmp/ccGI7nPt.s:422    .text:00000000000001b4 .L0 
     /tmp/ccGI7nPt.s:14     .rodata:0000000000000028 .LC2
     /tmp/ccGI7nPt.s:432    .text:00000000000001d0 .L0 
     /tmp/ccGI7nPt.s:17     .rodata:0000000000000030 .LC3
     /tmp/ccGI7nPt.s:513    .text:0000000000000254 .L0 
     /tmp/ccGI7nPt.s:20     .rodata:0000000000000050 .LC4
     /tmp/ccGI7nPt.s:518    .text:0000000000000264 .L0 
     /tmp/ccGI7nPt.s:528    .text:0000000000000280 .L0 
     /tmp/ccGI7nPt.s:159    .text:0000000000000080 .L2
     /tmp/ccGI7nPt.s:475    .text:0000000000000210 .L3
     /tmp/ccGI7nPt.s:408    .text:0000000000000198 .L4
     /tmp/ccGI7nPt.s:447    .text:00000000000001f4 .L19
     /tmp/ccGI7nPt.s:363    .text:0000000000000158 .L20
     /tmp/ccGI7nPt.s:371    .text:000000000000015c .L21
     /tmp/ccGI7nPt.s:536    .text:000000000000029c .L26
     /tmp/ccGI7nPt.s:492    .text:0000000000000230 .L23
     /tmp/ccGI7nPt.s:509    .text:0000000000000254 .L24
     /tmp/ccGI7nPt.s:254    .text:00000000000000c0 .L18
     /tmp/ccGI7nPt.s:286    .text:00000000000000e8 .L17
     /tmp/ccGI7nPt.s:309    .text:0000000000000104 .L16
     /tmp/ccGI7nPt.s:382    .text:0000000000000164 .L15
     /tmp/ccGI7nPt.s:399    .text:000000000000018c .L14
     /tmp/ccGI7nPt.s:443    .text:00000000000001f0 .L25
     /tmp/ccGI7nPt.s:1839   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccGI7nPt.s:3431   .debug_str:0000000000000688 .LASF130
     /tmp/ccGI7nPt.s:3295   .debug_str:00000000000002d2 .LASF131
     /tmp/ccGI7nPt.s:3289   .debug_str:000000000000028a .LASF132
     /tmp/ccGI7nPt.s:3187   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccGI7nPt.s:3197   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccGI7nPt.s:3343   .debug_str:0000000000000455 .LASF0
     /tmp/ccGI7nPt.s:3365   .debug_str:00000000000004ad .LASF1
     /tmp/ccGI7nPt.s:3329   .debug_str:00000000000003da .LASF2
     /tmp/ccGI7nPt.s:3301   .debug_str:000000000000031b .LASF4
     /tmp/ccGI7nPt.s:3409   .debug_str:00000000000005f7 .LASF3
     /tmp/ccGI7nPt.s:3229   .debug_str:00000000000000bb .LASF5
     /tmp/ccGI7nPt.s:3253   .debug_str:0000000000000155 .LASF6
     /tmp/ccGI7nPt.s:3369   .debug_str:00000000000004c7 .LASF7
     /tmp/ccGI7nPt.s:3341   .debug_str:0000000000000442 .LASF8
     /tmp/ccGI7nPt.s:3445   .debug_str:000000000000079c .LASF9
     /tmp/ccGI7nPt.s:3287   .debug_str:000000000000027c .LASF10
     /tmp/ccGI7nPt.s:3381   .debug_str:0000000000000526 .LASF11
     /tmp/ccGI7nPt.s:3433   .debug_str:000000000000074c .LASF12
     /tmp/ccGI7nPt.s:3231   .debug_str:00000000000000c2 .LASF13
     /tmp/ccGI7nPt.s:3207   .debug_str:000000000000003b .LASF14
     /tmp/ccGI7nPt.s:3235   .debug_str:00000000000000dc .LASF15
     /tmp/ccGI7nPt.s:3403   .debug_str:00000000000005c3 .LASF16
     /tmp/ccGI7nPt.s:3247   .debug_str:0000000000000114 .LASF17
     /tmp/ccGI7nPt.s:3325   .debug_str:00000000000003bf .LASF31
     /tmp/ccGI7nPt.s:3441   .debug_str:0000000000000780 .LASF21
     /tmp/ccGI7nPt.s:3471   .debug_str:000000000000086d .LASF18
     /tmp/ccGI7nPt.s:3457   .debug_str:00000000000007f4 .LASF19
     /tmp/ccGI7nPt.s:3425   .debug_str:000000000000066a .LASF20
     /tmp/ccGI7nPt.s:3303   .debug_str:0000000000000322 .LASF22
     /tmp/ccGI7nPt.s:3439   .debug_str:0000000000000778 .LASF23
GAS LISTING /tmp/ccGI7nPt.s 			page 22


     /tmp/ccGI7nPt.s:3401   .debug_str:00000000000005a4 .LASF25
     /tmp/ccGI7nPt.s:3241   .debug_str:00000000000000f8 .LASF24
     /tmp/ccGI7nPt.s:3205   .debug_str:000000000000001d .LASF26
     /tmp/ccGI7nPt.s:3259   .debug_str:000000000000017f .LASF43
     /tmp/ccGI7nPt.s:3201   .debug_str:0000000000000009 .LASF27
     /tmp/ccGI7nPt.s:3467   .debug_str:0000000000000856 .LASF28
     /tmp/ccGI7nPt.s:3377   .debug_str:0000000000000502 .LASF29
     /tmp/ccGI7nPt.s:3267   .debug_str:00000000000001d1 .LASF71
     /tmp/ccGI7nPt.s:3337   .debug_str:0000000000000405 .LASF73
     /tmp/ccGI7nPt.s:3273   .debug_str:0000000000000203 .LASF30
     /tmp/ccGI7nPt.s:3361   .debug_str:000000000000049c .LASF32
     /tmp/ccGI7nPt.s:3315   .debug_str:0000000000000363 .LASF133
     /tmp/ccGI7nPt.s:3419   .debug_str:000000000000063e .LASF33
     /tmp/ccGI7nPt.s:3359   .debug_str:0000000000000493 .LASF34
     /tmp/ccGI7nPt.s:3309   .debug_str:0000000000000345 .LASF35
     /tmp/ccGI7nPt.s:3399   .debug_str:0000000000000599 .LASF36
     /tmp/ccGI7nPt.s:3465   .debug_str:000000000000083e .LASF38
     /tmp/ccGI7nPt.s:3225   .debug_str:00000000000000a1 .LASF37
     /tmp/ccGI7nPt.s:3265   .debug_str:00000000000001b6 .LASF39
     /tmp/ccGI7nPt.s:3421   .debug_str:0000000000000647 .LASF40
     /tmp/ccGI7nPt.s:3299   .debug_str:0000000000000301 .LASF41
     /tmp/ccGI7nPt.s:3209   .debug_str:000000000000004b .LASF45
     /tmp/ccGI7nPt.s:3269   .debug_str:00000000000001db .LASF47
     /tmp/ccGI7nPt.s:3263   .debug_str:00000000000001ad .LASF42
     /tmp/ccGI7nPt.s:3261   .debug_str:0000000000000198 .LASF44
     /tmp/ccGI7nPt.s:3411   .debug_str:0000000000000609 .LASF46
     /tmp/ccGI7nPt.s:3389   .debug_str:000000000000055b .LASF48
     /tmp/ccGI7nPt.s:3429   .debug_str:0000000000000681 .LASF49
     /tmp/ccGI7nPt.s:3285   .debug_str:0000000000000269 .LASF50
     /tmp/ccGI7nPt.s:3277   .debug_str:000000000000021b .LASF51
     /tmp/ccGI7nPt.s:3249   .debug_str:000000000000012a .LASF52
     /tmp/ccGI7nPt.s:3203   .debug_str:0000000000000015 .LASF53
     /tmp/ccGI7nPt.s:3293   .debug_str:00000000000002be .LASF54
     /tmp/ccGI7nPt.s:3345   .debug_str:0000000000000462 .LASF55
     /tmp/ccGI7nPt.s:3461   .debug_str:0000000000000809 .LASF56
     /tmp/ccGI7nPt.s:3221   .debug_str:000000000000008a .LASF57
     /tmp/ccGI7nPt.s:3275   .debug_str:0000000000000208 .LASF58
     /tmp/ccGI7nPt.s:3283   .debug_str:0000000000000263 .LASF59
     /tmp/ccGI7nPt.s:3427   .debug_str:000000000000066f .LASF60
     /tmp/ccGI7nPt.s:3217   .debug_str:000000000000006d .LASF61
     /tmp/ccGI7nPt.s:3477   .debug_str:0000000000000892 .LASF62
     /tmp/ccGI7nPt.s:3469   .debug_str:0000000000000862 .LASF63
     /tmp/ccGI7nPt.s:3407   .debug_str:00000000000005df .LASF64
     /tmp/ccGI7nPt.s:3363   .debug_str:00000000000004a2 .LASF65
     /tmp/ccGI7nPt.s:3317   .debug_str:000000000000036e .LASF66
     /tmp/ccGI7nPt.s:3233   .debug_str:00000000000000d2 .LASF67
     /tmp/ccGI7nPt.s:3297   .debug_str:00000000000002eb .LASF68
     /tmp/ccGI7nPt.s:3335   .debug_str:00000000000003fb .LASF69
     /tmp/ccGI7nPt.s:3291   .debug_str:00000000000002a8 .LASF70
     /tmp/ccGI7nPt.s:3237   .debug_str:00000000000000e8 .LASF72
     /tmp/ccGI7nPt.s:3473   .debug_str:0000000000000872 .LASF74
     /tmp/ccGI7nPt.s:3199   .debug_str:0000000000000000 .LASF75
     /tmp/ccGI7nPt.s:3215   .debug_str:0000000000000065 .LASF134
     /tmp/ccGI7nPt.s:3313   .debug_str:0000000000000356 .LASF76
     /tmp/ccGI7nPt.s:3463   .debug_str:000000000000081c .LASF77
     /tmp/ccGI7nPt.s:3395   .debug_str:0000000000000587 .LASF135
     /tmp/ccGI7nPt.s:3371   .debug_str:00000000000004da .LASF80
GAS LISTING /tmp/ccGI7nPt.s 			page 23


     /tmp/ccGI7nPt.s:3319   .debug_str:0000000000000386 .LASF82
     /tmp/ccGI7nPt.s:3331   .debug_str:00000000000003e8 .LASF78
     /tmp/ccGI7nPt.s:3251   .debug_str:000000000000013e .LASF79
     /tmp/ccGI7nPt.s:3213   .debug_str:000000000000005b .LASF81
     /tmp/ccGI7nPt.s:3375   .debug_str:00000000000004ee .LASF83
     /tmp/ccGI7nPt.s:3305   .debug_str:0000000000000331 .LASF84
     /tmp/ccGI7nPt.s:3321   .debug_str:000000000000039c .LASF85
     /tmp/ccGI7nPt.s:3323   .debug_str:00000000000003b2 .LASF86
     /tmp/ccGI7nPt.s:3379   .debug_str:000000000000050e .LASF87
     /tmp/ccGI7nPt.s:3443   .debug_str:000000000000078f .LASF88
     /tmp/ccGI7nPt.s:3447   .debug_str:00000000000007ac .LASF89
     /tmp/ccGI7nPt.s:3417   .debug_str:0000000000000632 .LASF90
     /tmp/ccGI7nPt.s:3219   .debug_str:0000000000000073 .LASF91
     /tmp/ccGI7nPt.s:3327   .debug_str:00000000000003cf .LASF92
     /tmp/ccGI7nPt.s:3279   .debug_str:0000000000000223 .LASF93
     /tmp/ccGI7nPt.s:3405   .debug_str:00000000000005d9 .LASF94
     /tmp/ccGI7nPt.s:3459   .debug_str:00000000000007f9 .LASF95
     /tmp/ccGI7nPt.s:3347   .debug_str:0000000000000469 .LASF96
     /tmp/ccGI7nPt.s:3271   .debug_str:00000000000001f0 .LASF97
     /tmp/ccGI7nPt.s:3475   .debug_str:000000000000088a .LASF98
     /tmp/ccGI7nPt.s:3413   .debug_str:0000000000000610 .LASF99
     /tmp/ccGI7nPt.s:3455   .debug_str:00000000000007ec .LASF100
     /tmp/ccGI7nPt.s:3391   .debug_str:000000000000056e .LASF101
     /tmp/ccGI7nPt.s:3311   .debug_str:000000000000034e .LASF102
     /tmp/ccGI7nPt.s:3437   .debug_str:0000000000000769 .LASF103
     /tmp/ccGI7nPt.s:3349   .debug_str:0000000000000472 .LASF104
     /tmp/ccGI7nPt.s:3351   .debug_str:0000000000000478 .LASF105
     /tmp/ccGI7nPt.s:3355   .debug_str:0000000000000482 .LASF106
     /tmp/ccGI7nPt.s:3307   .debug_str:000000000000033c .LASF107
     /tmp/ccGI7nPt.s:3339   .debug_str:000000000000043a .LASF108
     /tmp/ccGI7nPt.s:3223   .debug_str:0000000000000091 .LASF109
     /tmp/ccGI7nPt.s:3423   .debug_str:0000000000000654 .LASF136
     /tmp/ccGI7nPt.s:3449   .debug_str:00000000000007c4 .LASF110
     /tmp/ccGI7nPt.s:3281   .debug_str:000000000000023b .LASF111
     /tmp/ccGI7nPt.s:3453   .debug_str:00000000000007df .LASF112
     /tmp/ccGI7nPt.s:3227   .debug_str:00000000000000af .LASF113
     /tmp/ccGI7nPt.s:3415   .debug_str:0000000000000622 .LASF137
     /tmp/ccGI7nPt.s:3397   .debug_str:000000000000058c .LASF138
     /tmp/ccGI7nPt.s:3243   .debug_str:00000000000000fe .LASF114
     /tmp/ccGI7nPt.s:27     .text:0000000000000000 .LFB27
     /tmp/ccGI7nPt.s:551    .text:00000000000002b0 .LFE27
     /tmp/ccGI7nPt.s:3211   .debug_str:0000000000000054 .LASF115
     /tmp/ccGI7nPt.s:2723   .debug_loc:0000000000000000 .LLST0
     /tmp/ccGI7nPt.s:3353   .debug_str:000000000000047d .LASF116
     /tmp/ccGI7nPt.s:2754   .debug_loc:0000000000000087 .LLST1
     /tmp/ccGI7nPt.s:3393   .debug_str:000000000000057f .LASF117
     /tmp/ccGI7nPt.s:2785   .debug_loc:000000000000010e .LLST2
     /tmp/ccGI7nPt.s:2807   .debug_loc:000000000000016e .LLST3
     /tmp/ccGI7nPt.s:2829   .debug_loc:00000000000001ce .LLST4
     /tmp/ccGI7nPt.s:2851   .debug_loc:000000000000022e .LLST5
     /tmp/ccGI7nPt.s:2873   .debug_loc:000000000000028e .LLST6
     /tmp/ccGI7nPt.s:2895   .debug_loc:00000000000002f0 .LLST7
     /tmp/ccGI7nPt.s:2917   .debug_loc:0000000000000352 .LLST8
     /tmp/ccGI7nPt.s:2939   .debug_loc:00000000000003b4 .LLST9
     /tmp/ccGI7nPt.s:2961   .debug_loc:0000000000000416 .LLST10
     /tmp/ccGI7nPt.s:160    .text:0000000000000080 .LBB3
     /tmp/ccGI7nPt.s:469    .text:0000000000000208 .LBE3
GAS LISTING /tmp/ccGI7nPt.s 			page 24


     /tmp/ccGI7nPt.s:3367   .debug_str:00000000000004c0 .LASF118
     /tmp/ccGI7nPt.s:3064   .debug_loc:00000000000005df .LLST11
     /tmp/ccGI7nPt.s:256    .text:00000000000000c0 .LBB5
     /tmp/ccGI7nPt.s:448    .text:00000000000001f4 .LBE5
     /tmp/ccGI7nPt.s:3089   .debug_loc:0000000000000651 .LLST12
     /tmp/ccGI7nPt.s:3110   .debug_loc:00000000000006af .LLST13
     /tmp/ccGI7nPt.s:3333   .debug_str:00000000000003f4 .LASF119
     /tmp/ccGI7nPt.s:3122   .debug_loc:00000000000006e7 .LLST14
     /tmp/ccGI7nPt.s:3373   .debug_str:00000000000004e5 .LASF120
     /tmp/ccGI7nPt.s:3134   .debug_loc:000000000000071e .LLST15
     /tmp/ccGI7nPt.s:3146   .debug_loc:0000000000000755 .LLST16
     /tmp/ccGI7nPt.s:3158   .debug_loc:000000000000078d .LLST17
     /tmp/ccGI7nPt.s:275    .text:00000000000000e0 .LVL28
     /tmp/ccGI7nPt.s:298    .text:00000000000000fc .LVL31
     /tmp/ccGI7nPt.s:344    .text:0000000000000138 .LVL40
     /tmp/ccGI7nPt.s:391    .text:0000000000000180 .LVL42
     /tmp/ccGI7nPt.s:395    .text:0000000000000188 .LVL43
     /tmp/ccGI7nPt.s:404    .text:0000000000000194 .LVL45
     /tmp/ccGI7nPt.s:414    .text:00000000000001a8 .LVL47
     /tmp/ccGI7nPt.s:419    .text:00000000000001b4 .LVL48
     /tmp/ccGI7nPt.s:424    .text:00000000000001c4 .LVL49
     /tmp/ccGI7nPt.s:429    .text:00000000000001d0 .LVL50
     /tmp/ccGI7nPt.s:434    .text:00000000000001e0 .LVL51
     /tmp/ccGI7nPt.s:439    .text:00000000000001ec .LVL52
     /tmp/ccGI7nPt.s:487    .text:000000000000022c .LVL59
     /tmp/ccGI7nPt.s:504    .text:0000000000000250 .LVL61
     /tmp/ccGI7nPt.s:515    .text:0000000000000264 .LVL63
     /tmp/ccGI7nPt.s:520    .text:0000000000000274 .LVL64
     /tmp/ccGI7nPt.s:525    .text:0000000000000280 .LVL65
     /tmp/ccGI7nPt.s:530    .text:0000000000000290 .LVL66
     /tmp/ccGI7nPt.s:535    .text:000000000000029c .LVL67
     /tmp/ccGI7nPt.s:591    .text._ZN3TCB11setFinishedEb:0000000000000000 .LFB19
     /tmp/ccGI7nPt.s:613    .text._ZN3TCB11setFinishedEb:000000000000001c .LFE19
     /tmp/ccGI7nPt.s:3245   .debug_str:000000000000010f .LASF139
     /tmp/ccGI7nPt.s:3357   .debug_str:000000000000048c .LASF121
     /tmp/ccGI7nPt.s:558    .text._ZN5Riscv6mc_sipEm:0000000000000000 .LFB10
     /tmp/ccGI7nPt.s:584    .text._ZN5Riscv6mc_sipEm:000000000000001c .LFE10
     /tmp/ccGI7nPt.s:3239   .debug_str:00000000000000f3 .LASF122
     /tmp/ccGI7nPt.s:3255   .debug_str:000000000000015c .LASF123
     /tmp/ccGI7nPt.s:3385   .debug_str:000000000000053d .LASF125
     /tmp/ccGI7nPt.s:3387   .debug_str:0000000000000549 .LASF124
     /tmp/ccGI7nPt.s:3451   .debug_str:00000000000007d2 .LASF126
     /tmp/ccGI7nPt.s:3257   .debug_str:000000000000016f .LASF127
     /tmp/ccGI7nPt.s:3435   .debug_str:000000000000075b .LASF128
     /tmp/ccGI7nPt.s:3383   .debug_str:0000000000000535 .LASF129
     /tmp/ccGI7nPt.s:48     .text:0000000000000018 .LVL0
     /tmp/ccGI7nPt.s:55     .text:000000000000001c .LVL1
     /tmp/ccGI7nPt.s:474    .text:0000000000000210 .LVL57
     /tmp/ccGI7nPt.s:479    .text:0000000000000214 .LVL58
     /tmp/ccGI7nPt.s:545    .text:00000000000002a8 .LVL68
     /tmp/ccGI7nPt.s:548    .text:00000000000002ac .LVL69
     /tmp/ccGI7nPt.s:58     .text:0000000000000020 .LVL2
     /tmp/ccGI7nPt.s:65     .text:0000000000000024 .LVL3
     /tmp/ccGI7nPt.s:457    .text:00000000000001fc .LVL55
     /tmp/ccGI7nPt.s:460    .text:0000000000000200 .LVL56
     /tmp/ccGI7nPt.s:68     .text:0000000000000028 .LVL4
     /tmp/ccGI7nPt.s:76     .text:000000000000002c .LVL5
GAS LISTING /tmp/ccGI7nPt.s 			page 25


     /tmp/ccGI7nPt.s:79     .text:0000000000000030 .LVL6
     /tmp/ccGI7nPt.s:86     .text:0000000000000034 .LVL7
     /tmp/ccGI7nPt.s:89     .text:0000000000000038 .LVL8
     /tmp/ccGI7nPt.s:96     .text:000000000000003c .LVL9
     /tmp/ccGI7nPt.s:99     .text:0000000000000040 .LVL10
     /tmp/ccGI7nPt.s:106    .text:0000000000000044 .LVL11
     /tmp/ccGI7nPt.s:109    .text:0000000000000048 .LVL12
     /tmp/ccGI7nPt.s:116    .text:000000000000004c .LVL13
     /tmp/ccGI7nPt.s:119    .text:0000000000000050 .LVL14
     /tmp/ccGI7nPt.s:126    .text:0000000000000054 .LVL15
     /tmp/ccGI7nPt.s:129    .text:0000000000000058 .LVL16
     /tmp/ccGI7nPt.s:136    .text:000000000000005c .LVL17
     /tmp/ccGI7nPt.s:139    .text:0000000000000060 .LVL18
     /tmp/ccGI7nPt.s:146    .text:0000000000000064 .LVL19
     /tmp/ccGI7nPt.s:149    .text:0000000000000068 .LVL20
     /tmp/ccGI7nPt.s:285    .text:00000000000000e8 .LVL29
     /tmp/ccGI7nPt.s:308    .text:0000000000000104 .LVL32
     /tmp/ccGI7nPt.s:381    .text:0000000000000164 .LVL41
     /tmp/ccGI7nPt.s:398    .text:000000000000018c .LVL44
     /tmp/ccGI7nPt.s:407    .text:0000000000000198 .LVL46
     /tmp/ccGI7nPt.s:442    .text:00000000000001f0 .LVL53
     /tmp/ccGI7nPt.s:446    .text:00000000000001f4 .LVL54
     /tmp/ccGI7nPt.s:491    .text:0000000000000230 .LVL60
     /tmp/ccGI7nPt.s:508    .text:0000000000000254 .LVL62
     /tmp/ccGI7nPt.s:165    .text:0000000000000088 .LVL21
     /tmp/ccGI7nPt.s:169    .text:0000000000000090 .LVL22
     /tmp/ccGI7nPt.s:173    .text:000000000000009c .LVL23
     /tmp/ccGI7nPt.s:175    .text:00000000000000a4 .LVL24
     /tmp/ccGI7nPt.s:263    .text:00000000000000c8 .LVL25
     /tmp/ccGI7nPt.s:268    .text:00000000000000d0 .LVL26
     /tmp/ccGI7nPt.s:270    .text:00000000000000d4 .LVL27
     /tmp/ccGI7nPt.s:293    .text:00000000000000f0 .LVL30
     /tmp/ccGI7nPt.s:316    .text:000000000000010c .LVL33
     /tmp/ccGI7nPt.s:321    .text:0000000000000110 .LVL34
     /tmp/ccGI7nPt.s:323    .text:0000000000000114 .LVL35
     /tmp/ccGI7nPt.s:328    .text:0000000000000118 .LVL36
     /tmp/ccGI7nPt.s:330    .text:000000000000011c .LVL37
     /tmp/ccGI7nPt.s:335    .text:0000000000000120 .LVL38
     /tmp/ccGI7nPt.s:337    .text:0000000000000124 .LVL39
     /tmp/ccGI7nPt.s:623    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccGI7nPt.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccGI7nPt.s:616    .text:00000000000002b0 .Letext0

UNDEFINED SYMBOLS
_ZN15MemoryAllocator7kmallocEm
_ZN15MemoryAllocator5kfreeEPv
_ZN3TCB12createThreadEPFvPvES0_Pm
_ZN3TCB7runningE
_ZN3TCB5yieldEv
_Z11printStringPKc
_Z12printIntegerm
console_handler
_Z7printlnPKc
