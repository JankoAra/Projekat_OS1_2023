GAS LISTING /tmp/ccS5X0wb.s 			page 1


   1              		.file	"interruptRoutine.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	interruptRoutine
   9              	interruptRoutine:
  10              	.LFB45:
  11              		.file 1 "src/interruptRoutine.cpp"
   1:src/interruptRoutine.cpp **** //
   2:src/interruptRoutine.cpp **** // Created by os on 5/22/23.
   3:src/interruptRoutine.cpp **** //
   4:src/interruptRoutine.cpp **** 
   5:src/interruptRoutine.cpp **** #include "../lib/console.h"
   6:src/interruptRoutine.cpp **** #include "../lib/hw.h"
   7:src/interruptRoutine.cpp **** #include "../h/MemoryAllocator.hpp"
   8:src/interruptRoutine.cpp **** #include "../h/helper.hpp"
   9:src/interruptRoutine.cpp **** #include "../h/Riscv.hpp"
  10:src/interruptRoutine.cpp **** #include "../h/syscall_c.hpp"
  11:src/interruptRoutine.cpp **** #include "../h/TCB.hpp"
  12:src/interruptRoutine.cpp **** #include "../h/Scheduler.hpp"
  13:src/interruptRoutine.cpp **** 
  14:src/interruptRoutine.cpp **** #pragma GCC optimize("O0")
  15:src/interruptRoutine.cpp **** extern "C" void interruptRoutine() {
  12              		.loc 1 15 36
  13              		.cfi_startproc
  14 0000 130101F2 		addi	sp,sp,-224
  15              		.cfi_def_cfa_offset 224
  16 0004 233C110C 		sd	ra,216(sp)
  17 0008 2338810C 		sd	s0,208(sp)
  18              		.cfi_offset 1, -8
  19              		.cfi_offset 8, -16
  20 000c 1304010E 		addi	s0,sp,224
  21              		.cfi_def_cfa 8, 0
  16:src/interruptRoutine.cpp **** 	uint64 scause, sepc, sstatus;
  22              		.loc 1 16 2
  17:src/interruptRoutine.cpp **** 	__asm__ volatile("csrr %[scause], scause":[scause] "=r"(scause): : "a5", "a0", "a1", "a2", "a3", "
  23              		.loc 1 17 2
  24              		.loc 1 17 116 is_stmt 0
  25              	#APP
  26              	# 17 "src/interruptRoutine.cpp" 1
  18              		__asm__ volatile("csrr %[sepc], sepc":[sepc] "=r"(sepc): : "a5", "a0", "a1", "a2", "a3", "a4", "a6
  27              		csrr t1, scause
  28              	# 0 "" 2
  29              	#NO_APP
  30 0014 233C64FC 		sd	t1,-40(s0)
  31              	.LVL0:
  32              		.loc 1 18 2 is_stmt 1
  33              		.loc 1 18 108 is_stmt 0
  34              	#APP
  35              	# 18 "src/interruptRoutine.cpp" 1
  19              		__asm__ volatile("csrr %[status], sstatus":[status] "=r"(
  36              		csrr t1, sepc
  37              	# 0 "" 2
  38              	.LVL1:
  39              	#NO_APP
GAS LISTING /tmp/ccS5X0wb.s 			page 2


  40 001c 233864FC 		sd	t1,-48(s0)
  41              	.LVL2:
  42              		.loc 1 19 2 is_stmt 1
  20:src/interruptRoutine.cpp **** 			sstatus): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7");
  43              		.loc 1 20 63 is_stmt 0
  44              	#APP
  45              	# 20 "src/interruptRoutine.cpp" 1
  21              		uint64 a0, a1, a2, a3, a4, a5, a6, a7;
  46              		csrr t1, sstatus
  47              	# 0 "" 2
  48              	.LVL3:
  49              	#NO_APP
  50 0024 233464FC 		sd	t1,-56(s0)
  51              	.LVL4:
  52              		.loc 1 21 2 is_stmt 1
  22:src/interruptRoutine.cpp **** 	__asm__ volatile("mv %[ax], a0":[ax] "=r"(a0): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7");
  53              		.loc 1 22 2
  54              		.loc 1 22 98 is_stmt 0
  55              	#APP
  56              	# 22 "src/interruptRoutine.cpp" 1
  23              		__asm__ volatile("mv %[ax], a1":[ax] "=r"(a1): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7");
  57              		mv t1, a0
  58              	# 0 "" 2
  59              	.LVL5:
  60              	#NO_APP
  61 002c 233064FC 		sd	t1,-64(s0)
  62              	.LVL6:
  63              		.loc 1 23 2 is_stmt 1
  64              		.loc 1 23 98 is_stmt 0
  65              	#APP
  66              	# 23 "src/interruptRoutine.cpp" 1
  24              		__asm__ volatile("mv %[ax], a2":[ax] "=r"(a2): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7");
  67              		mv t1, a1
  68              	# 0 "" 2
  69              	.LVL7:
  70              	#NO_APP
  71 0034 233C64FA 		sd	t1,-72(s0)
  72              	.LVL8:
  73              		.loc 1 24 2 is_stmt 1
  74              		.loc 1 24 98 is_stmt 0
  75              	#APP
  76              	# 24 "src/interruptRoutine.cpp" 1
  25              		__asm__ volatile("mv %[ax], a3":[ax] "=r"(a3): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7");
  77              		mv t1, a2
  78              	# 0 "" 2
  79              	.LVL9:
  80              	#NO_APP
  81 003c 233864FA 		sd	t1,-80(s0)
  82              	.LVL10:
  83              		.loc 1 25 2 is_stmt 1
  84              		.loc 1 25 98 is_stmt 0
  85              	#APP
  86              	# 25 "src/interruptRoutine.cpp" 1
  26              		__asm__ volatile("mv %[ax], a4":[ax] "=r"(a4): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7");
  87              		mv t1, a3
  88              	# 0 "" 2
  89              	.LVL11:
GAS LISTING /tmp/ccS5X0wb.s 			page 3


  90              	#NO_APP
  91 0044 233464FA 		sd	t1,-88(s0)
  92              	.LVL12:
  93              		.loc 1 26 2 is_stmt 1
  94              		.loc 1 26 98 is_stmt 0
  95              	#APP
  96              	# 26 "src/interruptRoutine.cpp" 1
  27              		__asm__ volatile("mv %[ax], a5":[ax] "=r"(a5): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7");
  97              		mv t1, a4
  98              	# 0 "" 2
  99              	.LVL13:
 100              	#NO_APP
 101 004c 233064FA 		sd	t1,-96(s0)
 102              	.LVL14:
 103              		.loc 1 27 2 is_stmt 1
 104              		.loc 1 27 98 is_stmt 0
 105              	#APP
 106              	# 27 "src/interruptRoutine.cpp" 1
  28              		__asm__ volatile("mv %[ax], a6":[ax] "=r"(a6): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7");
 107              		mv t1, a5
 108              	# 0 "" 2
 109              	.LVL15:
 110              	#NO_APP
 111 0054 233C64F8 		sd	t1,-104(s0)
 112              	.LVL16:
 113              		.loc 1 28 2 is_stmt 1
 114              		.loc 1 28 98 is_stmt 0
 115              	#APP
 116              	# 28 "src/interruptRoutine.cpp" 1
  29              		__asm__ volatile("mv %[ax], a7":[ax] "=r"(a7): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7");
 117              		mv t1, a6
 118              	# 0 "" 2
 119              	.LVL17:
 120              	#NO_APP
 121 005c 233864F8 		sd	t1,-112(s0)
 122              	.LVL18:
 123              		.loc 1 29 2 is_stmt 1
 124              		.loc 1 29 98 is_stmt 0
 125              	#APP
 126              	# 29 "src/interruptRoutine.cpp" 1
  30              	
 127              		mv t1, a7
 128              	# 0 "" 2
 129              	.LVL19:
 130              	#NO_APP
 131 0064 233464F8 		sd	t1,-120(s0)
 132              	.LVL20:
  31:src/interruptRoutine.cpp **** 	if (scause == 0x09 || scause == 0x08) {
 133              		.loc 1 31 2 is_stmt 1
 134              	.LBB2:
 135 0068 033784FD 		ld	a4,-40(s0)
 136 006c 93079000 		li	a5,9
 137 0070 6308F700 		beq	a4,a5,.L2
 138              		.loc 1 31 21 is_stmt 0 discriminator 1
 139 0074 033784FD 		ld	a4,-40(s0)
 140 0078 93078000 		li	a5,8
 141 007c 6314F732 		bne	a4,a5,.L3
GAS LISTING /tmp/ccS5X0wb.s 			page 4


 142              	.L2:
 143              	.LBB3:
  32:src/interruptRoutine.cpp **** 		//prekid zbog poziva ecall
  33:src/interruptRoutine.cpp **** 		uint64 opCode = a0;
 144              		.loc 1 33 3 is_stmt 1
 145              		.loc 1 33 10 is_stmt 0
 146 0080 833704FC 		ld	a5,-64(s0)
 147 0084 2330F4F8 		sd	a5,-128(s0)
 148              	.LVL21:
  34:src/interruptRoutine.cpp **** 		switch (opCode) {
 149              		.loc 1 34 3 is_stmt 1
 150              	.LBB4:
 151 0088 033704F8 		ld	a4,-128(s0)
 152 008c 93071009 		li	a5,145
 153              	.LVL22:
 154 0090 630AF71E 		beq	a4,a5,.L4
 155 0094 033704F8 		ld	a4,-128(s0)
 156 0098 93071009 		li	a5,145
 157 009c 63E8E72C 		bgtu	a4,a5,.L38
 158 00a0 033704F8 		ld	a4,-128(s0)
 159 00a4 93072004 		li	a5,66
 160 00a8 63E2E704 		bgtu	a4,a5,.L6
 161 00ac 833704F8 		ld	a5,-128(s0)
 162 00b0 638E072A 		beqz	a5,.L38
 163 00b4 033704F8 		ld	a4,-128(s0)
 164 00b8 93072004 		li	a5,66
 165 00bc 63E8E72A 		bgtu	a4,a5,.L38
 166 00c0 833704F8 		ld	a5,-128(s0)
 167 00c4 13972700 		slli	a4,a5,2
 168              	.LVL23:
 169 00c8 97070000 		lla	a5,.L8
 169      93870700 
 170              	.LVL24:
 171 00d0 B307F700 		add	a5,a4,a5
 172 00d4 83A70700 		lw	a5,0(a5)
 173 00d8 1B870700 		sext.w	a4,a5
 174 00dc 97070000 		lla	a5,.L8
 174      93870700 
 175 00e4 B307F700 		add	a5,a4,a5
 176 00e8 67800700 		jr	a5
 177              		.section	.rodata
 178              		.align	2
 179              		.align	2
 180              	.L8:
 181 0000 00000000 		.word	.L38-.L8
 182 0004 00000000 		.word	.L20-.L8
 183 0008 00000000 		.word	.L19-.L8
 184 000c 00000000 		.word	.L38-.L8
 185 0010 00000000 		.word	.L38-.L8
 186 0014 00000000 		.word	.L38-.L8
 187 0018 00000000 		.word	.L38-.L8
 188 001c 00000000 		.word	.L38-.L8
 189 0020 00000000 		.word	.L38-.L8
 190 0024 00000000 		.word	.L38-.L8
 191 0028 00000000 		.word	.L38-.L8
 192 002c 00000000 		.word	.L38-.L8
 193 0030 00000000 		.word	.L38-.L8
GAS LISTING /tmp/ccS5X0wb.s 			page 5


 194 0034 00000000 		.word	.L38-.L8
 195 0038 00000000 		.word	.L38-.L8
 196 003c 00000000 		.word	.L38-.L8
 197 0040 00000000 		.word	.L38-.L8
 198 0044 00000000 		.word	.L18-.L8
 199 0048 00000000 		.word	.L17-.L8
 200 004c 00000000 		.word	.L16-.L8
 201 0050 00000000 		.word	.L15-.L8
 202 0054 00000000 		.word	.L38-.L8
 203 0058 00000000 		.word	.L38-.L8
 204 005c 00000000 		.word	.L38-.L8
 205 0060 00000000 		.word	.L38-.L8
 206 0064 00000000 		.word	.L38-.L8
 207 0068 00000000 		.word	.L38-.L8
 208 006c 00000000 		.word	.L38-.L8
 209 0070 00000000 		.word	.L38-.L8
 210 0074 00000000 		.word	.L38-.L8
 211 0078 00000000 		.word	.L38-.L8
 212 007c 00000000 		.word	.L38-.L8
 213 0080 00000000 		.word	.L38-.L8
 214 0084 00000000 		.word	.L38-.L8
 215 0088 00000000 		.word	.L38-.L8
 216 008c 00000000 		.word	.L38-.L8
 217 0090 00000000 		.word	.L38-.L8
 218 0094 00000000 		.word	.L38-.L8
 219 0098 00000000 		.word	.L38-.L8
 220 009c 00000000 		.word	.L38-.L8
 221 00a0 00000000 		.word	.L38-.L8
 222 00a4 00000000 		.word	.L38-.L8
 223 00a8 00000000 		.word	.L38-.L8
 224 00ac 00000000 		.word	.L38-.L8
 225 00b0 00000000 		.word	.L38-.L8
 226 00b4 00000000 		.word	.L38-.L8
 227 00b8 00000000 		.word	.L38-.L8
 228 00bc 00000000 		.word	.L38-.L8
 229 00c0 00000000 		.word	.L38-.L8
 230 00c4 00000000 		.word	.L10-.L8
 231 00c8 00000000 		.word	.L38-.L8
 232 00cc 00000000 		.word	.L38-.L8
 233 00d0 00000000 		.word	.L38-.L8
 234 00d4 00000000 		.word	.L38-.L8
 235 00d8 00000000 		.word	.L38-.L8
 236 00dc 00000000 		.word	.L38-.L8
 237 00e0 00000000 		.word	.L38-.L8
 238 00e4 00000000 		.word	.L38-.L8
 239 00e8 00000000 		.word	.L38-.L8
 240 00ec 00000000 		.word	.L38-.L8
 241 00f0 00000000 		.word	.L38-.L8
 242 00f4 00000000 		.word	.L38-.L8
 243 00f8 00000000 		.word	.L38-.L8
 244 00fc 00000000 		.word	.L38-.L8
 245 0100 00000000 		.word	.L38-.L8
 246 0104 00000000 		.word	.L38-.L8
 247 0108 00000000 		.word	.L38-.L8
 248              		.text
 249              	.LVL25:
 250              	.L6:
GAS LISTING /tmp/ccS5X0wb.s 			page 6


 251 00ec 033704F8 		ld	a4,-128(s0)
 252              	.LVL26:
 253 00f0 93070009 		li	a5,144
 254 00f4 630CF714 		beq	a4,a5,.L21
 255              	.LBB5:
  35:src/interruptRoutine.cpp **** 			case 0x01:
  36:src/interruptRoutine.cpp **** 				//mem_alloc
  37:src/interruptRoutine.cpp **** 				size_t size;
  38:src/interruptRoutine.cpp **** 				size = (size_t)a1;
  39:src/interruptRoutine.cpp **** 				//__asm__ volatile("mv %[size], a1":[size] "=r"(size));
  40:src/interruptRoutine.cpp **** 				size = size * MEM_BLOCK_SIZE;
  41:src/interruptRoutine.cpp **** 				MemoryAllocator::kmalloc(size);
  42:src/interruptRoutine.cpp **** 				__asm__ volatile("sd a0, 80(s0)");
  43:src/interruptRoutine.cpp **** 				break;
  44:src/interruptRoutine.cpp **** 			case 0x02:
  45:src/interruptRoutine.cpp **** 				//mem_free
  46:src/interruptRoutine.cpp **** 				void* ptr;
  47:src/interruptRoutine.cpp **** 				ptr = (void*)a1;
  48:src/interruptRoutine.cpp **** 				//__asm__ volatile("mv %[ptr], a1" :[ptr]"=r"(ptr));
  49:src/interruptRoutine.cpp **** 				MemoryAllocator::kfree(ptr);
  50:src/interruptRoutine.cpp **** 				__asm__ volatile("sd a0, 80(s0)");
  51:src/interruptRoutine.cpp **** 				break;
  52:src/interruptRoutine.cpp **** 			case 0x11:
  53:src/interruptRoutine.cpp **** 				//thread_create
  54:src/interruptRoutine.cpp **** 				thread_t* handle;
  55:src/interruptRoutine.cpp **** 				handle = (thread_t*)a1;
  56:src/interruptRoutine.cpp **** 				void (* function)(void*);
  57:src/interruptRoutine.cpp **** 				function = (void (*)(void*))a2;
  58:src/interruptRoutine.cpp **** 				void* args;
  59:src/interruptRoutine.cpp **** 				args = (void*)a3;
  60:src/interruptRoutine.cpp **** 				uint64* sp;
  61:src/interruptRoutine.cpp **** 				sp = (uint64*)a4;
  62:src/interruptRoutine.cpp **** 
  63:src/interruptRoutine.cpp **** 				*handle = TCB::createThread(function, args, sp);
  64:src/interruptRoutine.cpp **** 				if (*handle != nullptr) {
  65:src/interruptRoutine.cpp **** 					__asm__ volatile("li a0, 0");
  66:src/interruptRoutine.cpp **** 				} else {
  67:src/interruptRoutine.cpp **** 					__asm__ volatile("li a0, -1");
  68:src/interruptRoutine.cpp **** 				}
  69:src/interruptRoutine.cpp **** 				__asm__ volatile("sd a0, 80(s0)");
  70:src/interruptRoutine.cpp **** 				break;
  71:src/interruptRoutine.cpp **** 			case 0x12:
  72:src/interruptRoutine.cpp **** 				//thread_exit
  73:src/interruptRoutine.cpp **** 				TCB::running->setFinished(true);
  74:src/interruptRoutine.cpp **** 				TCB::releaseJoined();
  75:src/interruptRoutine.cpp **** 				TCB::yield();
  76:src/interruptRoutine.cpp **** 				break;
  77:src/interruptRoutine.cpp **** 			case 0x13:
  78:src/interruptRoutine.cpp **** 				//thread_dispatch
  79:src/interruptRoutine.cpp **** 				TCB::yield();
  80:src/interruptRoutine.cpp **** 				break;
  81:src/interruptRoutine.cpp **** 			case 0x14:
  82:src/interruptRoutine.cpp **** 				//thread_join
  83:src/interruptRoutine.cpp **** 				thread_t handleToJoin;
  84:src/interruptRoutine.cpp **** 				handleToJoin = (thread_t)a1;
  85:src/interruptRoutine.cpp **** 				TCB::threadJoin(handleToJoin);
  86:src/interruptRoutine.cpp **** 				TCB::yield();
GAS LISTING /tmp/ccS5X0wb.s 			page 7


  87:src/interruptRoutine.cpp **** 				break;
  88:src/interruptRoutine.cpp **** 			case 0x21:
  89:src/interruptRoutine.cpp **** 				//sem_open
  90:src/interruptRoutine.cpp **** 				break;
  91:src/interruptRoutine.cpp **** 			case 0x22:
  92:src/interruptRoutine.cpp **** 				//sem_close
  93:src/interruptRoutine.cpp **** 				break;
  94:src/interruptRoutine.cpp **** 			case 0x23:
  95:src/interruptRoutine.cpp **** 				//sem_wait
  96:src/interruptRoutine.cpp **** 				break;
  97:src/interruptRoutine.cpp **** 			case 0x24:
  98:src/interruptRoutine.cpp **** 				//sem_signal
  99:src/interruptRoutine.cpp **** 				break;
 100:src/interruptRoutine.cpp **** 			case 0x31:
 101:src/interruptRoutine.cpp **** 				//time_sleep
 102:src/interruptRoutine.cpp **** 				time_t timerPeriods;
 103:src/interruptRoutine.cpp **** 				timerPeriods = (time_t)a1;
 104:src/interruptRoutine.cpp **** 				if (timerPeriods>0) {
 105:src/interruptRoutine.cpp **** 					__asm__ volatile("li a0, 0");
 106:src/interruptRoutine.cpp **** 				} else {
 107:src/interruptRoutine.cpp **** 					__asm__ volatile("li a0, -1");
 108:src/interruptRoutine.cpp **** 				}
 109:src/interruptRoutine.cpp **** 				__asm__ volatile("sd a0, 80(s0)");
 110:src/interruptRoutine.cpp **** 				if(timerPeriods>0) {
 111:src/interruptRoutine.cpp **** 					Scheduler::putToSleep(TCB::running, timerPeriods);
 112:src/interruptRoutine.cpp **** 					TCB::yield();
 113:src/interruptRoutine.cpp **** 				}
 114:src/interruptRoutine.cpp **** 				break;
 115:src/interruptRoutine.cpp **** 			case 0x41:
 116:src/interruptRoutine.cpp **** 				//getc
 117:src/interruptRoutine.cpp **** 				break;
 118:src/interruptRoutine.cpp **** 			case 0x42:
 119:src/interruptRoutine.cpp **** 				//putc
 120:src/interruptRoutine.cpp **** 				break;
 121:src/interruptRoutine.cpp **** 			case 0x90:
 122:src/interruptRoutine.cpp **** 				//printString
 123:src/interruptRoutine.cpp **** 				const char* string;
 124:src/interruptRoutine.cpp **** 				string = (const char*)a1;
 125:src/interruptRoutine.cpp **** 				while (*string != '\0') {
 126:src/interruptRoutine.cpp **** 					__putc(*string);
 127:src/interruptRoutine.cpp **** 					string++;
 128:src/interruptRoutine.cpp **** 				}
 129:src/interruptRoutine.cpp **** 				break;
 130:src/interruptRoutine.cpp **** 			case 0x91:
 131:src/interruptRoutine.cpp **** 				//printInteger
 132:src/interruptRoutine.cpp **** 				uint64 integer;
 133:src/interruptRoutine.cpp **** 				integer = a1;
 134:src/interruptRoutine.cpp **** 				static char digits[] = "0123456789";
 135:src/interruptRoutine.cpp **** 				char buf[16];
 136:src/interruptRoutine.cpp **** 				int i, neg;
 137:src/interruptRoutine.cpp **** 				uint x;
 138:src/interruptRoutine.cpp **** 
 139:src/interruptRoutine.cpp **** 				neg = 0;
 140:src/interruptRoutine.cpp **** 				if (integer < 0) {
 141:src/interruptRoutine.cpp **** 					neg = 1;
 142:src/interruptRoutine.cpp **** 					x = -integer;
 143:src/interruptRoutine.cpp **** 				} else {
GAS LISTING /tmp/ccS5X0wb.s 			page 8


 144:src/interruptRoutine.cpp **** 					x = integer;
 145:src/interruptRoutine.cpp **** 				}
 146:src/interruptRoutine.cpp **** 
 147:src/interruptRoutine.cpp **** 				i = 0;
 148:src/interruptRoutine.cpp **** 				do {
 149:src/interruptRoutine.cpp **** 					buf[i++] = digits[x % 10];
 150:src/interruptRoutine.cpp **** 				} while ((x /= 10) != 0);
 151:src/interruptRoutine.cpp **** 				if (neg) buf[i++] = '-';
 152:src/interruptRoutine.cpp **** 
 153:src/interruptRoutine.cpp **** 				while (--i >= 0) {
 154:src/interruptRoutine.cpp **** 					__putc(buf[i]);
 155:src/interruptRoutine.cpp **** 				}
 156:src/interruptRoutine.cpp **** 				break;
 157:src/interruptRoutine.cpp **** 			default:
 158:src/interruptRoutine.cpp **** //				printString("\nNepostojeci op code: ");
 159:src/interruptRoutine.cpp **** //				printInteger(opCode);
 160:src/interruptRoutine.cpp **** //				printString("\nscause: ");
 161:src/interruptRoutine.cpp **** //				printInteger(scause);
 162:src/interruptRoutine.cpp **** //				printString("\nsepc: ");
 163:src/interruptRoutine.cpp **** //				printInteger(sepc);
 164:src/interruptRoutine.cpp **** 				break;
 256              		.loc 1 164 5 is_stmt 0
 257 00f8 6F004027 		j	.L38
 258              	.L20:
  35:src/interruptRoutine.cpp **** 			case 0x01:
 259              		.loc 1 35 4 is_stmt 1
  37:src/interruptRoutine.cpp **** 				size = (size_t)a1;
 260              		.loc 1 37 5
  38:src/interruptRoutine.cpp **** 				//__asm__ volatile("mv %[size], a1":[size] "=r"(size));
 261              		.loc 1 38 5
  38:src/interruptRoutine.cpp **** 				//__asm__ volatile("mv %[size], a1":[size] "=r"(size));
 262              		.loc 1 38 10 is_stmt 0
 263 00fc 833784FB 		ld	a5,-72(s0)
 264 0100 2338F4F2 		sd	a5,-208(s0)
 265              	.LVL27:
  40:src/interruptRoutine.cpp **** 				MemoryAllocator::kmalloc(size);
 266              		.loc 1 40 5 is_stmt 1
  40:src/interruptRoutine.cpp **** 				MemoryAllocator::kmalloc(size);
 267              		.loc 1 40 10 is_stmt 0
 268 0104 833704F3 		ld	a5,-208(s0)
 269 0108 93976700 		slli	a5,a5,6
 270              	.LVL28:
 271 010c 2338F4F2 		sd	a5,-208(s0)
 272              	.LVL29:
  41:src/interruptRoutine.cpp **** 				__asm__ volatile("sd a0, 80(s0)");
 273              		.loc 1 41 5 is_stmt 1
  41:src/interruptRoutine.cpp **** 				__asm__ volatile("sd a0, 80(s0)");
 274              		.loc 1 41 29 is_stmt 0
 275 0110 033504F3 		ld	a0,-208(s0)
 276 0114 97000000 		call	_ZN15MemoryAllocator7kmallocEm@plt
 276      E7800000 
 277              	.LVL30:
  42:src/interruptRoutine.cpp **** 				break;
 278              		.loc 1 42 5 is_stmt 1
  42:src/interruptRoutine.cpp **** 				break;
 279              		.loc 1 42 38 is_stmt 0
 280              	#APP
GAS LISTING /tmp/ccS5X0wb.s 			page 9


 281              	# 42 "src/interruptRoutine.cpp" 1
  43:src/interruptRoutine.cpp **** 			case 0x02:
 282              		sd a0, 80(s0)
 283              	# 0 "" 2
 284              		.loc 1 43 5 is_stmt 1
 285              	#NO_APP
 286 0120 6F008026 		j	.L22
 287              	.LVL31:
 288              	.L19:
  44:src/interruptRoutine.cpp **** 				//mem_free
 289              		.loc 1 44 4
  46:src/interruptRoutine.cpp **** 				ptr = (void*)a1;
 290              		.loc 1 46 5
  47:src/interruptRoutine.cpp **** 				//__asm__ volatile("mv %[ptr], a1" :[ptr]"=r"(ptr));
 291              		.loc 1 47 5
  47:src/interruptRoutine.cpp **** 				//__asm__ volatile("mv %[ptr], a1" :[ptr]"=r"(ptr));
 292              		.loc 1 47 9 is_stmt 0
 293 0124 833784FB 		ld	a5,-72(s0)
 294 0128 233CF4F2 		sd	a5,-200(s0)
 295              	.LVL32:
  49:src/interruptRoutine.cpp **** 				__asm__ volatile("sd a0, 80(s0)");
 296              		.loc 1 49 5 is_stmt 1
  49:src/interruptRoutine.cpp **** 				__asm__ volatile("sd a0, 80(s0)");
 297              		.loc 1 49 27 is_stmt 0
 298 012c 033584F3 		ld	a0,-200(s0)
 299 0130 97000000 		call	_ZN15MemoryAllocator5kfreeEPv@plt
 299      E7800000 
 300              	.LVL33:
  50:src/interruptRoutine.cpp **** 				break;
 301              		.loc 1 50 5 is_stmt 1
  50:src/interruptRoutine.cpp **** 				break;
 302              		.loc 1 50 38 is_stmt 0
 303              	#APP
 304              	# 50 "src/interruptRoutine.cpp" 1
  51:src/interruptRoutine.cpp **** 			case 0x11:
 305              		sd a0, 80(s0)
 306              	# 0 "" 2
 307              		.loc 1 51 5 is_stmt 1
 308              	#NO_APP
 309 013c 6F00C024 		j	.L22
 310              	.LVL34:
 311              	.L18:
  52:src/interruptRoutine.cpp **** 				//thread_create
 312              		.loc 1 52 4
  54:src/interruptRoutine.cpp **** 				handle = (thread_t*)a1;
 313              		.loc 1 54 5
  55:src/interruptRoutine.cpp **** 				void (* function)(void*);
 314              		.loc 1 55 5
  55:src/interruptRoutine.cpp **** 				void (* function)(void*);
 315              		.loc 1 55 12 is_stmt 0
 316 0140 833784FB 		ld	a5,-72(s0)
 317 0144 233CF4F4 		sd	a5,-168(s0)
 318              	.LVL35:
  56:src/interruptRoutine.cpp **** 				function = (void (*)(void*))a2;
 319              		.loc 1 56 5 is_stmt 1
  57:src/interruptRoutine.cpp **** 				void* args;
 320              		.loc 1 57 5
GAS LISTING /tmp/ccS5X0wb.s 			page 10


  57:src/interruptRoutine.cpp **** 				void* args;
 321              		.loc 1 57 14 is_stmt 0
 322 0148 833704FB 		ld	a5,-80(s0)
 323              	.LVL36:
 324 014c 2338F4F4 		sd	a5,-176(s0)
 325              	.LVL37:
  58:src/interruptRoutine.cpp **** 				args = (void*)a3;
 326              		.loc 1 58 5 is_stmt 1
  59:src/interruptRoutine.cpp **** 				uint64* sp;
 327              		.loc 1 59 5
  59:src/interruptRoutine.cpp **** 				uint64* sp;
 328              		.loc 1 59 10 is_stmt 0
 329 0150 833784FA 		ld	a5,-88(s0)
 330              	.LVL38:
 331 0154 2334F4F4 		sd	a5,-184(s0)
 332              	.LVL39:
  60:src/interruptRoutine.cpp **** 				sp = (uint64*)a4;
 333              		.loc 1 60 5 is_stmt 1
  61:src/interruptRoutine.cpp **** 
 334              		.loc 1 61 5
  61:src/interruptRoutine.cpp **** 
 335              		.loc 1 61 8 is_stmt 0
 336 0158 833704FA 		ld	a5,-96(s0)
 337              	.LVL40:
 338 015c 2330F4F4 		sd	a5,-192(s0)
 339              	.LVL41:
  63:src/interruptRoutine.cpp **** 				if (*handle != nullptr) {
 340              		.loc 1 63 5 is_stmt 1
  63:src/interruptRoutine.cpp **** 				if (*handle != nullptr) {
 341              		.loc 1 63 32 is_stmt 0
 342 0160 033604F4 		ld	a2,-192(s0)
 343 0164 833584F4 		ld	a1,-184(s0)
 344 0168 033504F5 		ld	a0,-176(s0)
 345 016c 97000000 		call	_ZN3TCB12createThreadEPFvPvES0_Pm@plt
 345      E7800000 
 346              	.LVL42:
 347 0174 13070500 		mv	a4,a0
  63:src/interruptRoutine.cpp **** 				if (*handle != nullptr) {
 348              		.loc 1 63 13
 349 0178 833784F5 		ld	a5,-168(s0)
 350 017c 23B0E700 		sd	a4,0(a5)
  64:src/interruptRoutine.cpp **** 					__asm__ volatile("li a0, 0");
 351              		.loc 1 64 5 is_stmt 1
  64:src/interruptRoutine.cpp **** 					__asm__ volatile("li a0, 0");
 352              		.loc 1 64 9 is_stmt 0
 353 0180 833784F5 		ld	a5,-168(s0)
 354 0184 83B70700 		ld	a5,0(a5)
  64:src/interruptRoutine.cpp **** 					__asm__ volatile("li a0, 0");
 355              		.loc 1 64 5
 356 0188 63860700 		beqz	a5,.L23
  65:src/interruptRoutine.cpp **** 				} else {
 357              		.loc 1 65 6 is_stmt 1
  65:src/interruptRoutine.cpp **** 				} else {
 358              		.loc 1 65 34 is_stmt 0
 359              	#APP
 360              	# 65 "src/interruptRoutine.cpp" 1
 361              		li a0, 0
GAS LISTING /tmp/ccS5X0wb.s 			page 11


 362              	# 0 "" 2
 363              	#NO_APP
 364 0190 6F008000 		j	.L24
 365              	.L23:
  67:src/interruptRoutine.cpp **** 				}
 366              		.loc 1 67 6 is_stmt 1
  67:src/interruptRoutine.cpp **** 				}
 367              		.loc 1 67 35 is_stmt 0
 368              	#APP
 369              	# 67 "src/interruptRoutine.cpp" 1
 370              		li a0, -1
 371              	# 0 "" 2
 372              	#NO_APP
 373              	.L24:
  69:src/interruptRoutine.cpp **** 				break;
 374              		.loc 1 69 5 is_stmt 1
  69:src/interruptRoutine.cpp **** 				break;
 375              		.loc 1 69 38 is_stmt 0
 376              	#APP
 377              	# 69 "src/interruptRoutine.cpp" 1
  70:src/interruptRoutine.cpp **** 			case 0x12:
 378              		sd a0, 80(s0)
 379              	# 0 "" 2
 380              		.loc 1 70 5 is_stmt 1
 381              	#NO_APP
 382 019c 6F00C01E 		j	.L22
 383              	.LVL43:
 384              	.L17:
  71:src/interruptRoutine.cpp **** 				//thread_exit
 385              		.loc 1 71 4
  73:src/interruptRoutine.cpp **** 				TCB::releaseJoined();
 386              		.loc 1 73 5
  73:src/interruptRoutine.cpp **** 				TCB::releaseJoined();
 387              		.loc 1 73 30 is_stmt 0
 388 01a0 97070000 		la	a5,_ZN3TCB7runningE
 388      83B70700 
 389 01a8 83B70700 		ld	a5,0(a5)
 390 01ac 93051000 		li	a1,1
 391 01b0 13850700 		mv	a0,a5
 392 01b4 97000000 		call	_ZN3TCB11setFinishedEb
 392      E7800000 
 393              	.LVL44:
  74:src/interruptRoutine.cpp **** 				TCB::yield();
 394              		.loc 1 74 5 is_stmt 1
  74:src/interruptRoutine.cpp **** 				TCB::yield();
 395              		.loc 1 74 23 is_stmt 0
 396 01bc 97000000 		call	_ZN3TCB13releaseJoinedEv@plt
 396      E7800000 
 397              	.LVL45:
  75:src/interruptRoutine.cpp **** 				break;
 398              		.loc 1 75 5 is_stmt 1
  75:src/interruptRoutine.cpp **** 				break;
 399              		.loc 1 75 15 is_stmt 0
 400 01c4 97000000 		call	_ZN3TCB5yieldEv@plt
 400      E7800000 
 401              	.LVL46:
  76:src/interruptRoutine.cpp **** 			case 0x13:
GAS LISTING /tmp/ccS5X0wb.s 			page 12


 402              		.loc 1 76 5 is_stmt 1
 403 01cc 6F00C01B 		j	.L22
 404              	.LVL47:
 405              	.L16:
  77:src/interruptRoutine.cpp **** 				//thread_dispatch
 406              		.loc 1 77 4
  79:src/interruptRoutine.cpp **** 				break;
 407              		.loc 1 79 5
  79:src/interruptRoutine.cpp **** 				break;
 408              		.loc 1 79 15 is_stmt 0
 409 01d0 97000000 		call	_ZN3TCB5yieldEv@plt
 409      E7800000 
 410              	.LVL48:
  80:src/interruptRoutine.cpp **** 			case 0x14:
 411              		.loc 1 80 5 is_stmt 1
 412 01d8 6F00001B 		j	.L22
 413              	.LVL49:
 414              	.L15:
  81:src/interruptRoutine.cpp **** 				//thread_join
 415              		.loc 1 81 4
  83:src/interruptRoutine.cpp **** 				handleToJoin = (thread_t)a1;
 416              		.loc 1 83 5
  84:src/interruptRoutine.cpp **** 				TCB::threadJoin(handleToJoin);
 417              		.loc 1 84 5
  84:src/interruptRoutine.cpp **** 				TCB::threadJoin(handleToJoin);
 418              		.loc 1 84 18 is_stmt 0
 419 01dc 833784FB 		ld	a5,-72(s0)
 420 01e0 2330F4F6 		sd	a5,-160(s0)
 421              	.LVL50:
  85:src/interruptRoutine.cpp **** 				TCB::yield();
 422              		.loc 1 85 5 is_stmt 1
  85:src/interruptRoutine.cpp **** 				TCB::yield();
 423              		.loc 1 85 20 is_stmt 0
 424 01e4 033504F6 		ld	a0,-160(s0)
 425 01e8 97000000 		call	_ZN3TCB10threadJoinEPS_@plt
 425      E7800000 
 426              	.LVL51:
  86:src/interruptRoutine.cpp **** 				break;
 427              		.loc 1 86 5 is_stmt 1
  86:src/interruptRoutine.cpp **** 				break;
 428              		.loc 1 86 15 is_stmt 0
 429 01f0 97000000 		call	_ZN3TCB5yieldEv@plt
 429      E7800000 
 430              	.LVL52:
  87:src/interruptRoutine.cpp **** 			case 0x21:
 431              		.loc 1 87 5 is_stmt 1
 432 01f8 6F000019 		j	.L22
 433              	.LVL53:
 434              	.L10:
 100:src/interruptRoutine.cpp **** 				//time_sleep
 435              		.loc 1 100 4
 102:src/interruptRoutine.cpp **** 				timerPeriods = (time_t)a1;
 436              		.loc 1 102 5
 103:src/interruptRoutine.cpp **** 				if (timerPeriods>0) {
 437              		.loc 1 103 5
 103:src/interruptRoutine.cpp **** 				if (timerPeriods>0) {
 438              		.loc 1 103 18 is_stmt 0
GAS LISTING /tmp/ccS5X0wb.s 			page 13


 439 01fc 833784FB 		ld	a5,-72(s0)
 440 0200 2334F4F6 		sd	a5,-152(s0)
 441              	.LVL54:
 104:src/interruptRoutine.cpp **** 					__asm__ volatile("li a0, 0");
 442              		.loc 1 104 5 is_stmt 1
 443 0204 833784F6 		ld	a5,-152(s0)
 444 0208 63860700 		beqz	a5,.L25
 105:src/interruptRoutine.cpp **** 				} else {
 445              		.loc 1 105 6
 105:src/interruptRoutine.cpp **** 				} else {
 446              		.loc 1 105 34 is_stmt 0
 447              	#APP
 448              	# 105 "src/interruptRoutine.cpp" 1
 449              		li a0, 0
 450              	# 0 "" 2
 451              	#NO_APP
 452 0210 6F008000 		j	.L26
 453              	.L25:
 107:src/interruptRoutine.cpp **** 				}
 454              		.loc 1 107 6 is_stmt 1
 107:src/interruptRoutine.cpp **** 				}
 455              		.loc 1 107 35 is_stmt 0
 456              	#APP
 457              	# 107 "src/interruptRoutine.cpp" 1
 458              		li a0, -1
 459              	# 0 "" 2
 460              	#NO_APP
 461              	.L26:
 109:src/interruptRoutine.cpp **** 				if(timerPeriods>0) {
 462              		.loc 1 109 5 is_stmt 1
 109:src/interruptRoutine.cpp **** 				if(timerPeriods>0) {
 463              		.loc 1 109 38 is_stmt 0
 464              	#APP
 465              	# 109 "src/interruptRoutine.cpp" 1
 110:src/interruptRoutine.cpp **** 					Scheduler::putToSleep(TCB::running, timerPeriods);
 466              		sd a0, 80(s0)
 467              	# 0 "" 2
 468              		.loc 1 110 5 is_stmt 1
 469              	#NO_APP
 470 021c 833784F6 		ld	a5,-152(s0)
 471              	.LVL55:
 472 0220 638A0714 		beqz	a5,.L39
 111:src/interruptRoutine.cpp **** 					TCB::yield();
 473              		.loc 1 111 6
 111:src/interruptRoutine.cpp **** 					TCB::yield();
 474              		.loc 1 111 27 is_stmt 0
 475 0224 97070000 		la	a5,_ZN3TCB7runningE
 475      83B70700 
 476 022c 83B70700 		ld	a5,0(a5)
 477 0230 833584F6 		ld	a1,-152(s0)
 478 0234 13850700 		mv	a0,a5
 479 0238 97000000 		call	_ZN9Scheduler10putToSleepEP3TCBm@plt
 479      E7800000 
 480              	.LVL56:
 112:src/interruptRoutine.cpp **** 				}
 481              		.loc 1 112 6 is_stmt 1
 112:src/interruptRoutine.cpp **** 				}
GAS LISTING /tmp/ccS5X0wb.s 			page 14


 482              		.loc 1 112 16 is_stmt 0
 483 0240 97000000 		call	_ZN3TCB5yieldEv@plt
 483      E7800000 
 484              	.LVL57:
 114:src/interruptRoutine.cpp **** 			case 0x41:
 485              		.loc 1 114 5 is_stmt 1
 486 0248 6F00C012 		j	.L39
 487              	.LVL58:
 488              	.L21:
 121:src/interruptRoutine.cpp **** 				//printString
 489              		.loc 1 121 4
 123:src/interruptRoutine.cpp **** 				string = (const char*)a1;
 490              		.loc 1 123 5
 124:src/interruptRoutine.cpp **** 				while (*string != '\0') {
 491              		.loc 1 124 5
 124:src/interruptRoutine.cpp **** 				while (*string != '\0') {
 492              		.loc 1 124 12 is_stmt 0
 493 024c 833784FB 		ld	a5,-72(s0)
 494 0250 2334F4FE 		sd	a5,-24(s0)
 495              	.LVL59:
 496              	.L29:
 125:src/interruptRoutine.cpp **** 					__putc(*string);
 497              		.loc 1 125 5 is_stmt 1
 125:src/interruptRoutine.cpp **** 					__putc(*string);
 498              		.loc 1 125 20
 125:src/interruptRoutine.cpp **** 					__putc(*string);
 499              		.loc 1 125 12 is_stmt 0
 500 0254 833784FE 		ld	a5,-24(s0)
 501 0258 83C70700 		lbu	a5,0(a5)
 125:src/interruptRoutine.cpp **** 					__putc(*string);
 502              		.loc 1 125 20
 503 025c 63800712 		beqz	a5,.L40
 126:src/interruptRoutine.cpp **** 					string++;
 504              		.loc 1 126 6 is_stmt 1
 126:src/interruptRoutine.cpp **** 					string++;
 505              		.loc 1 126 12 is_stmt 0
 506 0260 833784FE 		ld	a5,-24(s0)
 507 0264 83C70700 		lbu	a5,0(a5)
 508 0268 13850700 		mv	a0,a5
 509 026c 97000000 		call	__putc@plt
 509      E7800000 
 510              	.LVL60:
 127:src/interruptRoutine.cpp **** 				}
 511              		.loc 1 127 6 is_stmt 1
 127:src/interruptRoutine.cpp **** 				}
 512              		.loc 1 127 12 is_stmt 0
 513 0274 833784FE 		ld	a5,-24(s0)
 514 0278 93871700 		addi	a5,a5,1
 515 027c 2334F4FE 		sd	a5,-24(s0)
 516              	.LVL61:
 125:src/interruptRoutine.cpp **** 					__putc(*string);
 517              		.loc 1 125 5
 518 0280 6FF05FFD 		j	.L29
 519              	.LVL62:
 520              	.L4:
 130:src/interruptRoutine.cpp **** 				//printInteger
 521              		.loc 1 130 4 is_stmt 1
GAS LISTING /tmp/ccS5X0wb.s 			page 15


 132:src/interruptRoutine.cpp **** 				integer = a1;
 522              		.loc 1 132 5
 133:src/interruptRoutine.cpp **** 				static char digits[] = "0123456789";
 523              		.loc 1 133 5
 133:src/interruptRoutine.cpp **** 				static char digits[] = "0123456789";
 524              		.loc 1 133 13 is_stmt 0
 525 0284 833784FB 		ld	a5,-72(s0)
 526 0288 233CF4F6 		sd	a5,-136(s0)
 527              	.LVL63:
 134:src/interruptRoutine.cpp **** 				char buf[16];
 528              		.loc 1 134 5 is_stmt 1
 135:src/interruptRoutine.cpp **** 				int i, neg;
 529              		.loc 1 135 5
 136:src/interruptRoutine.cpp **** 				uint x;
 530              		.loc 1 136 5
 137:src/interruptRoutine.cpp **** 
 531              		.loc 1 137 5
 139:src/interruptRoutine.cpp **** 				if (integer < 0) {
 532              		.loc 1 139 5
 139:src/interruptRoutine.cpp **** 				if (integer < 0) {
 533              		.loc 1 139 9 is_stmt 0
 534 028c 232A04F6 		sw	zero,-140(s0)
 535              	.LVL64:
 140:src/interruptRoutine.cpp **** 					neg = 1;
 536              		.loc 1 140 5 is_stmt 1
 144:src/interruptRoutine.cpp **** 				}
 537              		.loc 1 144 6
 144:src/interruptRoutine.cpp **** 				}
 538              		.loc 1 144 8 is_stmt 0
 539 0290 833784F7 		ld	a5,-136(s0)
 540 0294 2320F4FE 		sw	a5,-32(s0)
 541              	.LVL65:
 147:src/interruptRoutine.cpp **** 				do {
 542              		.loc 1 147 5 is_stmt 1
 147:src/interruptRoutine.cpp **** 				do {
 543              		.loc 1 147 7 is_stmt 0
 544 0298 232204FE 		sw	zero,-28(s0)
 545              	.LVL66:
 546              	.L31:
 148:src/interruptRoutine.cpp **** 					buf[i++] = digits[x % 10];
 547              		.loc 1 148 5 is_stmt 1
 149:src/interruptRoutine.cpp **** 				} while ((x /= 10) != 0);
 548              		.loc 1 149 6
 149:src/interruptRoutine.cpp **** 				} while ((x /= 10) != 0);
 549              		.loc 1 149 26 is_stmt 0
 550 029c 032704FE 		lw	a4,-32(s0)
 551 02a0 9307A000 		li	a5,10
 552 02a4 BB77F702 		remuw	a5,a4,a5
 553 02a8 1B860700 		sext.w	a2,a5
 149:src/interruptRoutine.cpp **** 				} while ((x /= 10) != 0);
 554              		.loc 1 149 11
 555 02ac 832744FE 		lw	a5,-28(s0)
 556 02b0 1B871700 		addiw	a4,a5,1
 557 02b4 2322E4FE 		sw	a4,-28(s0)
 558              	.LVL67:
 149:src/interruptRoutine.cpp **** 				} while ((x /= 10) != 0);
 559              		.loc 1 149 30
GAS LISTING /tmp/ccS5X0wb.s 			page 16


 560 02b8 97060000 		lla	a3,_ZZ16interruptRoutineE6digits
 560      93860600 
 561 02c0 13170602 		slli	a4,a2,32
 562 02c4 13570702 		srli	a4,a4,32
 563              	.LVL68:
 564 02c8 3387E600 		add	a4,a3,a4
 565 02cc 03470700 		lbu	a4,0(a4)
 149:src/interruptRoutine.cpp **** 				} while ((x /= 10) != 0);
 566              		.loc 1 149 15
 567 02d0 930604FF 		addi	a3,s0,-16
 568 02d4 B387F600 		add	a5,a3,a5
 569 02d8 2388E7F2 		sb	a4,-208(a5)
 150:src/interruptRoutine.cpp **** 				if (neg) buf[i++] = '-';
 570              		.loc 1 150 24 is_stmt 1
 150:src/interruptRoutine.cpp **** 				if (neg) buf[i++] = '-';
 571              		.loc 1 150 17 is_stmt 0
 572 02dc 032704FE 		lw	a4,-32(s0)
 573 02e0 9307A000 		li	a5,10
 574 02e4 BB57F702 		divuw	a5,a4,a5
 575 02e8 2320F4FE 		sw	a5,-32(s0)
 576              	.LVL69:
 150:src/interruptRoutine.cpp **** 				if (neg) buf[i++] = '-';
 577              		.loc 1 150 24
 578 02ec 832704FE 		lw	a5,-32(s0)
 579 02f0 9B870700 		sext.w	a5,a5
 580              	.LVL70:
 581 02f4 B337F000 		snez	a5,a5
 582 02f8 93F7F70F 		andi	a5,a5,0xff
 583 02fc 63840700 		beqz	a5,.L30
 148:src/interruptRoutine.cpp **** 					buf[i++] = digits[x % 10];
 584              		.loc 1 148 5
 585 0300 6FF0DFF9 		j	.L31
 586              	.L30:
 151:src/interruptRoutine.cpp **** 
 587              		.loc 1 151 5 is_stmt 1
 588 0304 832744F7 		lw	a5,-140(s0)
 589 0308 9B870700 		sext.w	a5,a5
 590 030c 63800702 		beqz	a5,.L34
 151:src/interruptRoutine.cpp **** 
 591              		.loc 1 151 14 discriminator 1
 151:src/interruptRoutine.cpp **** 
 592              		.loc 1 151 19 is_stmt 0 discriminator 1
 593 0310 832744FE 		lw	a5,-28(s0)
 594 0314 1B871700 		addiw	a4,a5,1
 595 0318 2322E4FE 		sw	a4,-28(s0)
 596              	.LVL71:
 151:src/interruptRoutine.cpp **** 
 597              		.loc 1 151 23 discriminator 1
 598 031c 130704FF 		addi	a4,s0,-16
 599              	.LVL72:
 600 0320 B307F700 		add	a5,a4,a5
 601 0324 1307D002 		li	a4,45
 602 0328 2388E7F2 		sb	a4,-208(a5)
 603              	.LVL73:
 604              	.L34:
 153:src/interruptRoutine.cpp **** 					__putc(buf[i]);
 605              		.loc 1 153 5 is_stmt 1
GAS LISTING /tmp/ccS5X0wb.s 			page 17


 153:src/interruptRoutine.cpp **** 					__putc(buf[i]);
 606              		.loc 1 153 16
 607 032c 832744FE 		lw	a5,-28(s0)
 608 0330 9B87F7FF 		addiw	a5,a5,-1
 609 0334 2322F4FE 		sw	a5,-28(s0)
 610              	.LVL74:
 611 0338 832744FE 		lw	a5,-28(s0)
 612 033c 93C7F7FF 		not	a5,a5
 613              	.LVL75:
 614 0340 9BD7F701 		srliw	a5,a5,31
 615 0344 93F7F70F 		andi	a5,a5,0xff
 616 0348 638E0702 		beqz	a5,.L41
 154:src/interruptRoutine.cpp **** 				}
 617              		.loc 1 154 6
 154:src/interruptRoutine.cpp **** 				}
 618              		.loc 1 154 12 is_stmt 0
 619 034c 832744FE 		lw	a5,-28(s0)
 620 0350 130704FF 		addi	a4,s0,-16
 621 0354 B307F700 		add	a5,a4,a5
 622 0358 83C707F3 		lbu	a5,-208(a5)
 623 035c 13850700 		mv	a0,a5
 624 0360 97000000 		call	__putc@plt
 624      E7800000 
 625              	.LVL76:
 153:src/interruptRoutine.cpp **** 					__putc(buf[i]);
 626              		.loc 1 153 5
 627 0368 6FF05FFC 		j	.L34
 628              	.LVL77:
 629              	.L38:
 630              		.loc 1 164 5
 631 036c 13000000 		nop
 632 0370 6F008001 		j	.L22
 633              	.LVL78:
 634              	.L39:
 114:src/interruptRoutine.cpp **** 			case 0x41:
 635              		.loc 1 114 5
 636 0374 13000000 		nop
 637 0378 6F000001 		j	.L22
 638              	.LVL79:
 639              	.L40:
 129:src/interruptRoutine.cpp **** 			case 0x91:
 640              		.loc 1 129 5
 641 037c 13000000 		nop
 642 0380 6F008000 		j	.L22
 643              	.LVL80:
 644              	.L41:
 156:src/interruptRoutine.cpp **** 			default:
 645              		.loc 1 156 5
 646 0384 13000000 		nop
 647              	.LVL81:
 648              	.L22:
 649              	.LBE5:
 650              	.LBE4:
 165:src/interruptRoutine.cpp **** 		}
 166:src/interruptRoutine.cpp **** 		//sepc pokazuje na ecall instrukciju, treba preci na sledecu instrukciju
 167:src/interruptRoutine.cpp **** 		//sepc += 4;
 168:src/interruptRoutine.cpp **** 		__asm__ volatile("addi %[dst], %[src], 0x4":[dst]"=r"(sepc):[src]"r"(
GAS LISTING /tmp/ccS5X0wb.s 			page 18


 651              		.loc 1 168 3 is_stmt 1 discriminator 1
 169:src/interruptRoutine.cpp **** 				sepc):"a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7");
 652              		.loc 1 169 58 is_stmt 0 discriminator 1
 653 0388 033304FD 		ld	t1,-48(s0)
 654              	#APP
 655              	# 169 "src/interruptRoutine.cpp" 1
 170              			__asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc):"a5", "a0", "a1", "a2", "a3", "a4", "a6"
 656              		addi t1, t1, 0x4
 657              	# 0 "" 2
 658              	.LVL82:
 659              	#NO_APP
 660 0390 233864FC 		sd	t1,-48(s0)
 661              	.LVL83:
 662              		.loc 1 170 3 is_stmt 1 discriminator 1
 663              		.loc 1 170 107 is_stmt 0 discriminator 1
 664 0394 033304FD 		ld	t1,-48(s0)
 665              	#APP
 666              	# 170 "src/interruptRoutine.cpp" 1
 171              			//Riscv::w_sepc(sepc + 4);
 667              		csrw sepc, t1
 668              	# 0 "" 2
 669              	#NO_APP
 670              	.LBE3:
 671 039c 13000000 		nop
 672              	.LBE2:
 172:src/interruptRoutine.cpp **** 	} else if (scause == (1UL << 63 | 9)) {
 173:src/interruptRoutine.cpp **** 		//spoljasnji hardverski prekid (od konzole)
 174:src/interruptRoutine.cpp **** 		console_handler();
 175:src/interruptRoutine.cpp **** 	} else if (scause == (1UL << 63 | 1)) {
 176:src/interruptRoutine.cpp **** 		//prekid od tajmera
 177:src/interruptRoutine.cpp **** 		//printString("\nPrekid od tajmera\n");
 178:src/interruptRoutine.cpp **** 		Scheduler::wake();
 179:src/interruptRoutine.cpp **** 		TCB::runningTimeSlice++;
 180:src/interruptRoutine.cpp **** 		if (TCB::runningTimeSlice >= TCB::running->getTimeSlice()) {
 181:src/interruptRoutine.cpp **** 			//printString("\nMenjam kontekst\n");
 182:src/interruptRoutine.cpp **** 			TCB::yield();
 183:src/interruptRoutine.cpp **** 			TCB::runningTimeSlice = 0;
 184:src/interruptRoutine.cpp **** 		}
 185:src/interruptRoutine.cpp **** 
 186:src/interruptRoutine.cpp **** 		Riscv::w_sepc(sepc);
 187:src/interruptRoutine.cpp **** 		Riscv::w_sstatus(sstatus);
 188:src/interruptRoutine.cpp **** 		Riscv::mc_sip(Riscv::SIP_SSIP);
 189:src/interruptRoutine.cpp **** 	} else {
 190:src/interruptRoutine.cpp **** //		println("\nGreska u prekidnoj rutini");
 191:src/interruptRoutine.cpp **** //		printString("scause: ");
 192:src/interruptRoutine.cpp **** //		printInteger(scause);
 193:src/interruptRoutine.cpp **** //		printString("\nsepc: ");
 194:src/interruptRoutine.cpp **** //		printInteger(sepc);
 195:src/interruptRoutine.cpp **** 	}
 196:src/interruptRoutine.cpp **** }
 673              		.loc 1 196 1 discriminator 1
 674 03a0 6F00C00C 		j	.L42
 675              	.LVL84:
 676              	.L3:
 677              	.LBB6:
 172:src/interruptRoutine.cpp **** 	} else if (scause == (1UL << 63 | 9)) {
 678              		.loc 1 172 9 is_stmt 1
GAS LISTING /tmp/ccS5X0wb.s 			page 19


 679 03a4 033784FD 		ld	a4,-40(s0)
 680              	.LVL85:
 681 03a8 9307F0FF 		li	a5,-1
 682 03ac 9397F703 		slli	a5,a5,63
 683 03b0 93879700 		addi	a5,a5,9
 684 03b4 6318F700 		bne	a4,a5,.L36
 174:src/interruptRoutine.cpp **** 	} else if (scause == (1UL << 63 | 1)) {
 685              		.loc 1 174 3
 174:src/interruptRoutine.cpp **** 	} else if (scause == (1UL << 63 | 1)) {
 686              		.loc 1 174 18 is_stmt 0
 687 03b8 97000000 		call	console_handler@plt
 687      E7800000 
 688              	.LVL86:
 689              	.LBE6:
 690              		.loc 1 196 1
 691 03c0 6F00C00A 		j	.L42
 692              	.LVL87:
 693              	.L36:
 694              	.LBB7:
 175:src/interruptRoutine.cpp **** 		//prekid od tajmera
 695              		.loc 1 175 9 is_stmt 1
 696 03c4 033784FD 		ld	a4,-40(s0)
 697 03c8 9307F0FF 		li	a5,-1
 698 03cc 9397F703 		slli	a5,a5,63
 699 03d0 93871700 		addi	a5,a5,1
 700 03d4 631CF708 		bne	a4,a5,.L42
 178:src/interruptRoutine.cpp **** 		TCB::runningTimeSlice++;
 701              		.loc 1 178 3
 178:src/interruptRoutine.cpp **** 		TCB::runningTimeSlice++;
 702              		.loc 1 178 18 is_stmt 0
 703 03d8 97000000 		call	_ZN9Scheduler4wakeEv@plt
 703      E7800000 
 704              	.LVL88:
 179:src/interruptRoutine.cpp **** 		if (TCB::runningTimeSlice >= TCB::running->getTimeSlice()) {
 705              		.loc 1 179 3 is_stmt 1
 179:src/interruptRoutine.cpp **** 		if (TCB::runningTimeSlice >= TCB::running->getTimeSlice()) {
 706              		.loc 1 179 24 is_stmt 0
 707 03e0 97070000 		la	a5,_ZN3TCB16runningTimeSliceE
 707      83B70700 
 708 03e8 83B70700 		ld	a5,0(a5)
 709 03ec 13871700 		addi	a4,a5,1
 710 03f0 97070000 		la	a5,_ZN3TCB16runningTimeSliceE
 710      83B70700 
 711 03f8 23B0E700 		sd	a4,0(a5)
 180:src/interruptRoutine.cpp **** 			//printString("\nMenjam kontekst\n");
 712              		.loc 1 180 3 is_stmt 1
 180:src/interruptRoutine.cpp **** 			//printString("\nMenjam kontekst\n");
 713              		.loc 1 180 58 is_stmt 0
 714 03fc 97070000 		la	a5,_ZN3TCB7runningE
 714      83B70700 
 715 0404 83B70700 		ld	a5,0(a5)
 716 0408 13850700 		mv	a0,a5
 717 040c 97000000 		call	_ZN3TCB12getTimeSliceEv
 717      E7800000 
 718              	.LVL89:
 719 0414 13070500 		mv	a4,a0
 180:src/interruptRoutine.cpp **** 			//printString("\nMenjam kontekst\n");
GAS LISTING /tmp/ccS5X0wb.s 			page 20


 720              		.loc 1 180 29
 721 0418 97070000 		la	a5,_ZN3TCB16runningTimeSliceE
 721      83B70700 
 722 0420 83B70700 		ld	a5,0(a5)
 723 0424 B3B7E700 		sgtu	a5,a4,a5
 724 0428 93C71700 		xori	a5,a5,1
 725 042c 93F7F70F 		andi	a5,a5,0xff
 180:src/interruptRoutine.cpp **** 			//printString("\nMenjam kontekst\n");
 726              		.loc 1 180 3
 727 0430 638C0700 		beqz	a5,.L37
 182:src/interruptRoutine.cpp **** 			TCB::runningTimeSlice = 0;
 728              		.loc 1 182 4 is_stmt 1
 182:src/interruptRoutine.cpp **** 			TCB::runningTimeSlice = 0;
 729              		.loc 1 182 14 is_stmt 0
 730 0434 97000000 		call	_ZN3TCB5yieldEv@plt
 730      E7800000 
 731              	.LVL90:
 183:src/interruptRoutine.cpp **** 		}
 732              		.loc 1 183 4 is_stmt 1
 183:src/interruptRoutine.cpp **** 		}
 733              		.loc 1 183 26 is_stmt 0
 734 043c 97070000 		la	a5,_ZN3TCB16runningTimeSliceE
 734      83B70700 
 735 0444 23B00700 		sd	zero,0(a5)
 736              	.L37:
 186:src/interruptRoutine.cpp **** 		Riscv::w_sstatus(sstatus);
 737              		.loc 1 186 3 is_stmt 1
 186:src/interruptRoutine.cpp **** 		Riscv::w_sstatus(sstatus);
 738              		.loc 1 186 16 is_stmt 0
 739 0448 033504FD 		ld	a0,-48(s0)
 740 044c 97000000 		call	_ZN5Riscv6w_sepcEm
 740      E7800000 
 741              	.LVL91:
 187:src/interruptRoutine.cpp **** 		Riscv::mc_sip(Riscv::SIP_SSIP);
 742              		.loc 1 187 3 is_stmt 1
 187:src/interruptRoutine.cpp **** 		Riscv::mc_sip(Riscv::SIP_SSIP);
 743              		.loc 1 187 19 is_stmt 0
 744 0454 033584FC 		ld	a0,-56(s0)
 745 0458 97000000 		call	_ZN5Riscv9w_sstatusEm
 745      E7800000 
 746              	.LVL92:
 188:src/interruptRoutine.cpp **** 	} else {
 747              		.loc 1 188 3 is_stmt 1
 188:src/interruptRoutine.cpp **** 	} else {
 748              		.loc 1 188 16 is_stmt 0
 749 0460 13052000 		li	a0,2
 750 0464 97000000 		call	_ZN5Riscv6mc_sipEm
 750      E7800000 
 751              	.LVL93:
 752              	.L42:
 753              	.LBE7:
 754              		.loc 1 196 1
 755 046c 13000000 		nop
 756 0470 8330810D 		ld	ra,216(sp)
 757              		.cfi_restore 1
 758 0474 0334010D 		ld	s0,208(sp)
 759              		.cfi_restore 8
GAS LISTING /tmp/ccS5X0wb.s 			page 21


 760              		.cfi_def_cfa 2, 224
 761              	.LVL94:
 762 0478 1301010E 		addi	sp,sp,224
 763              		.cfi_def_cfa_offset 0
 764              	.LVL95:
 765 047c 67800000 		jr	ra
 766              		.cfi_endproc
 767              	.LFE45:
 769              		.section	.text._ZN5Riscv6w_sepcEm,"axG",@progbits,_ZN5Riscv6w_sepcEm,comdat
 770              		.align	2
 771              		.weak	_ZN5Riscv6w_sepcEm
 773              	_ZN5Riscv6w_sepcEm:
 774              	.LFB6:
 775              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 5/17/23.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJEKAT2023_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJEKAT2023_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** class Riscv {
  11:src/../h/Riscv.hpp **** public:
  12:src/../h/Riscv.hpp **** 
  13:src/../h/Riscv.hpp **** 	static void popSppSpie();
  14:src/../h/Riscv.hpp **** 
  15:src/../h/Riscv.hpp **** 	//stavljanje registara x3-x31 na stek
  16:src/../h/Riscv.hpp **** 	static void pushRegisters();    //implementacija u asm
  17:src/../h/Riscv.hpp **** 
  18:src/../h/Riscv.hpp **** 	//skidanje registara x3-x31 sa steka
  19:src/../h/Riscv.hpp **** 	static void popRegisters();     //implementacija u asm
  20:src/../h/Riscv.hpp **** 
  21:src/../h/Riscv.hpp **** 	//read scause
  22:src/../h/Riscv.hpp **** 	static uint64 r_scause();
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp **** 	//write scause
  25:src/../h/Riscv.hpp **** 	static void w_scause(uint64 scause);
  26:src/../h/Riscv.hpp **** 
  27:src/../h/Riscv.hpp **** 	//read sepc
  28:src/../h/Riscv.hpp **** 	static uint64 r_sepc();
  29:src/../h/Riscv.hpp **** 
  30:src/../h/Riscv.hpp **** 	//write sepc
  31:src/../h/Riscv.hpp **** 	static void w_sepc(uint64 sepc);
  32:src/../h/Riscv.hpp **** 
  33:src/../h/Riscv.hpp **** 	//read stvec
  34:src/../h/Riscv.hpp **** 	static uint64 r_stvec();
  35:src/../h/Riscv.hpp **** 
  36:src/../h/Riscv.hpp **** 	//write stvec
  37:src/../h/Riscv.hpp **** 	static void w_stvec(uint64 stvec);
  38:src/../h/Riscv.hpp **** 
  39:src/../h/Riscv.hpp **** 	enum BitMaskSip {
  40:src/../h/Riscv.hpp **** 		//postoji zahtev za softverski prekid
  41:src/../h/Riscv.hpp **** 		SIP_SSIP = (1 << 1),
  42:src/../h/Riscv.hpp **** 		//postoji prekid od tajmera
  43:src/../h/Riscv.hpp **** 		SIP_STIP = (1 << 5),
GAS LISTING /tmp/ccS5X0wb.s 			page 22


  44:src/../h/Riscv.hpp **** 		//postoji zahtev za spoljasnji hardverski prekid
  45:src/../h/Riscv.hpp **** 		SIP_SEIP = (1 << 9)
  46:src/../h/Riscv.hpp **** 	};
  47:src/../h/Riscv.hpp **** 
  48:src/../h/Riscv.hpp **** 	//mask set sip
  49:src/../h/Riscv.hpp **** 	static void ms_sip(uint64 mask);
  50:src/../h/Riscv.hpp **** 
  51:src/../h/Riscv.hpp **** 	//mask clear sip
  52:src/../h/Riscv.hpp **** 	static void mc_sip(uint64 mask);
  53:src/../h/Riscv.hpp **** 
  54:src/../h/Riscv.hpp **** 	//read sip
  55:src/../h/Riscv.hpp **** 	static uint64 r_sip();
  56:src/../h/Riscv.hpp **** 
  57:src/../h/Riscv.hpp **** 	//write sip
  58:src/../h/Riscv.hpp **** 	static void w_sip(uint64 sip);
  59:src/../h/Riscv.hpp **** 
  60:src/../h/Riscv.hpp **** 	//kada se pozove sret, SIE dobija vrednost SPIE, SPIE se postavlja na 1,
  61:src/../h/Riscv.hpp **** 	//rezim se postavlja na osnovu SPP bita, SPP se postavlja na 0
  62:src/../h/Riscv.hpp **** 	enum BitMaskSstatus {
  63:src/../h/Riscv.hpp **** 		//1 - dozvoljeni prekidi; 0- nedozvoljeni prekidi; igonrise se u korisnickom rezimu
  64:src/../h/Riscv.hpp **** 		SSTATUS_SIE = (1 << 1),
  65:src/../h/Riscv.hpp **** 		//prethodna vrednost bita SIE
  66:src/../h/Riscv.hpp **** 		SSTATUS_SPIE = (1 << 5),
  67:src/../h/Riscv.hpp **** 		//iz kog rezima se desio skok; 0 - iz korisnickog; 1 - iz sistemskog
  68:src/../h/Riscv.hpp **** 		SSTATUS_SPP = (1 << 8)
  69:src/../h/Riscv.hpp **** 	};
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp **** 	//mask set sstatus
  72:src/../h/Riscv.hpp **** 	static void ms_sstatus(uint64 mask);
  73:src/../h/Riscv.hpp **** 
  74:src/../h/Riscv.hpp **** 	//mask clear sstatus
  75:src/../h/Riscv.hpp **** 	static void mc_sstatus(uint64 mask);
  76:src/../h/Riscv.hpp **** 
  77:src/../h/Riscv.hpp **** 	//read sstatus
  78:src/../h/Riscv.hpp **** 	static uint64 r_sstatus();
  79:src/../h/Riscv.hpp **** 
  80:src/../h/Riscv.hpp **** 	//write sstatus
  81:src/../h/Riscv.hpp **** 	static void w_sstatus(uint64 sstatus);
  82:src/../h/Riscv.hpp **** 
  83:src/../h/Riscv.hpp **** 	//upisuje kod sistemskog poziva u registar a0
  84:src/../h/Riscv.hpp **** 	static void loadOpCode(uint64 opCode);
  85:src/../h/Riscv.hpp **** 
  86:src/../h/Riscv.hpp **** };
  87:src/../h/Riscv.hpp **** 
  88:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause() {
  89:src/../h/Riscv.hpp **** 	uint64 volatile scause;
  90:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[scause], scause": [scause] "=r"(scause));
  91:src/../h/Riscv.hpp **** 	return scause;
  92:src/../h/Riscv.hpp **** }
  93:src/../h/Riscv.hpp **** 
  94:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
  95:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw scause, %[scause]": :[scause] "r"(scause));
  96:src/../h/Riscv.hpp **** }
  97:src/../h/Riscv.hpp **** 
  98:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc() {
  99:src/../h/Riscv.hpp **** 	uint64 volatile sepc;
 100:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[sepc], sepc": [sepc] "=r"(sepc));
GAS LISTING /tmp/ccS5X0wb.s 			page 23


 101:src/../h/Riscv.hpp **** 	return sepc;
 102:src/../h/Riscv.hpp **** }
 103:src/../h/Riscv.hpp **** 
 104:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
 776              		.loc 2 104 40 is_stmt 1
 777              		.cfi_startproc
 778              	.LVL96:
 779 0000 130101FF 		addi	sp,sp,-16
 780              		.cfi_def_cfa_offset 16
 781 0004 23348100 		sd	s0,8(sp)
 782              		.cfi_offset 8, -8
 783 0008 13040101 		addi	s0,sp,16
 784              		.cfi_def_cfa 8, 0
 105:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 785              		.loc 2 105 2
 786              		.loc 2 105 59 is_stmt 0
 787              	#APP
 788              	# 105 "src/../h/Riscv.hpp" 1
 106              	}
 789              		csrw sepc, a0
 790              	# 0 "" 2
 791              		.loc 2 106 1
 792              	#NO_APP
 793 0010 03348100 		ld	s0,8(sp)
 794              		.cfi_restore 8
 795              		.cfi_def_cfa 2, 16
 796 0014 13010101 		addi	sp,sp,16
 797              		.cfi_def_cfa_offset 0
 798 0018 67800000 		jr	ra
 799              		.cfi_endproc
 800              	.LFE6:
 802              		.section	.text._ZN5Riscv6mc_sipEm,"axG",@progbits,_ZN5Riscv6mc_sipEm,comdat
 803              		.align	2
 804              		.weak	_ZN5Riscv6mc_sipEm
 806              	_ZN5Riscv6mc_sipEm:
 807              	.LFB10:
 107:src/../h/Riscv.hpp **** 
 108:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec() {
 109:src/../h/Riscv.hpp **** 	uint64 volatile stvec;
 110:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[stvec], stvec": [stvec] "=r"(stvec));
 111:src/../h/Riscv.hpp **** 	return stvec;
 112:src/../h/Riscv.hpp **** }
 113:src/../h/Riscv.hpp **** 
 114:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 115:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw stvec, %[stvec]": :[stvec] "r"(stvec));
 116:src/../h/Riscv.hpp **** }
 117:src/../h/Riscv.hpp **** 
 118:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 119:src/../h/Riscv.hpp **** 	__asm__ volatile("csrs sip, %[mask]": :[mask] "r"(mask));
 120:src/../h/Riscv.hpp **** }
 121:src/../h/Riscv.hpp **** 
 122:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 808              		.loc 2 122 40 is_stmt 1
 809              		.cfi_startproc
 810              	.LVL97:
 811 0000 130101FF 		addi	sp,sp,-16
 812              		.cfi_def_cfa_offset 16
GAS LISTING /tmp/ccS5X0wb.s 			page 24


 813 0004 23348100 		sd	s0,8(sp)
 814              		.cfi_offset 8, -8
 815 0008 13040101 		addi	s0,sp,16
 816              		.cfi_def_cfa 8, 0
 123:src/../h/Riscv.hpp **** 	__asm__ volatile("csrc sip, %[mask]": :[mask] "r"(mask));
 817              		.loc 2 123 2
 818              		.loc 2 123 58 is_stmt 0
 819              	#APP
 820              	# 123 "src/../h/Riscv.hpp" 1
 124              	}
 821              		csrc sip, a0
 822              	# 0 "" 2
 823              		.loc 2 124 1
 824              	#NO_APP
 825 0010 03348100 		ld	s0,8(sp)
 826              		.cfi_restore 8
 827              		.cfi_def_cfa 2, 16
 828 0014 13010101 		addi	sp,sp,16
 829              		.cfi_def_cfa_offset 0
 830 0018 67800000 		jr	ra
 831              		.cfi_endproc
 832              	.LFE10:
 834              		.section	.text._ZN5Riscv9w_sstatusEm,"axG",@progbits,_ZN5Riscv9w_sstatusEm,comdat
 835              		.align	2
 836              		.weak	_ZN5Riscv9w_sstatusEm
 838              	_ZN5Riscv9w_sstatusEm:
 839              	.LFB16:
 125:src/../h/Riscv.hpp **** 
 126:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip() {
 127:src/../h/Riscv.hpp **** 	uint64 volatile sip;
 128:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[sip], sip": [sip] "=r"(sip));
 129:src/../h/Riscv.hpp **** 	return sip;
 130:src/../h/Riscv.hpp **** }
 131:src/../h/Riscv.hpp **** 
 132:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip) {
 133:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw sip, %[sip]": :[sip] "r"(sip));
 134:src/../h/Riscv.hpp **** }
 135:src/../h/Riscv.hpp **** 
 136:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
 137:src/../h/Riscv.hpp **** 	__asm__ volatile("csrs sstatus, %[mask]": :[mask] "r"(mask));
 138:src/../h/Riscv.hpp **** }
 139:src/../h/Riscv.hpp **** 
 140:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask) {
 141:src/../h/Riscv.hpp **** 	__asm__ volatile("csrc sstatus, %[mask]": :[mask] "r"(mask));
 142:src/../h/Riscv.hpp **** }
 143:src/../h/Riscv.hpp **** 
 144:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sstatus() {
 145:src/../h/Riscv.hpp **** 	uint64 volatile sstatus;
 146:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[sstatus], sstatus": [sstatus] "=r"(sstatus));
 147:src/../h/Riscv.hpp **** 	return sstatus;
 148:src/../h/Riscv.hpp **** }
 149:src/../h/Riscv.hpp **** 
 150:src/../h/Riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus) {
 840              		.loc 2 150 46 is_stmt 1
 841              		.cfi_startproc
 842              	.LVL98:
 843 0000 130101FF 		addi	sp,sp,-16
GAS LISTING /tmp/ccS5X0wb.s 			page 25


 844              		.cfi_def_cfa_offset 16
 845 0004 23348100 		sd	s0,8(sp)
 846              		.cfi_offset 8, -8
 847 0008 13040101 		addi	s0,sp,16
 848              		.cfi_def_cfa 8, 0
 151:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw sstatus, %[sstatus]": :[sstatus] "r"(sstatus));
 849              		.loc 2 151 2
 850              		.loc 2 151 71 is_stmt 0
 851              	#APP
 852              	# 151 "src/../h/Riscv.hpp" 1
 152              	}
 853              		csrw sstatus, a0
 854              	# 0 "" 2
 855              		.loc 2 152 1
 856              	#NO_APP
 857 0010 03348100 		ld	s0,8(sp)
 858              		.cfi_restore 8
 859              		.cfi_def_cfa 2, 16
 860 0014 13010101 		addi	sp,sp,16
 861              		.cfi_def_cfa_offset 0
 862 0018 67800000 		jr	ra
 863              		.cfi_endproc
 864              	.LFE16:
 866              		.section	.text._ZN3TCB11setFinishedEb,"axG",@progbits,_ZN3TCB11setFinishedEb,comdat
 867              		.align	2
 868              		.weak	_ZN3TCB11setFinishedEb
 870              	_ZN3TCB11setFinishedEb:
 871              	.LFB33:
 872              		.file 3 "src/../h/TCB.hpp"
   1:src/../h/TCB.hpp **** //
   2:src/../h/TCB.hpp **** // Created by os on 5/23/23.
   3:src/../h/TCB.hpp **** //
   4:src/../h/TCB.hpp **** 
   5:src/../h/TCB.hpp **** #ifndef PROJEKAT2023_TCB_HPP
   6:src/../h/TCB.hpp **** #define PROJEKAT2023_TCB_HPP
   7:src/../h/TCB.hpp **** 
   8:src/../h/TCB.hpp **** #include "../lib/hw.h"
   9:src/../h/TCB.hpp **** #include "../h/ThreadQueue.hpp"
  10:src/../h/TCB.hpp **** 
  11:src/../h/TCB.hpp **** class TCB {
  12:src/../h/TCB.hpp **** public:
  13:src/../h/TCB.hpp **** 	friend class Scheduler;
  14:src/../h/TCB.hpp **** 
  15:src/../h/TCB.hpp **** 	using Body = void (*)(void*);
  16:src/../h/TCB.hpp **** 
  17:src/../h/TCB.hpp **** 	static TCB* createThread(Body function, void* args, uint64* stack);
  18:src/../h/TCB.hpp **** 
  19:src/../h/TCB.hpp **** 	bool isFinished() { return finished; }
  20:src/../h/TCB.hpp **** 
  21:src/../h/TCB.hpp **** 	void setFinished(bool finish) { this->finished = finish; }
 873              		.loc 3 21 7 is_stmt 1
 874              		.cfi_startproc
 875              	.LVL99:
 876 0000 130101FF 		addi	sp,sp,-16
 877              		.cfi_def_cfa_offset 16
 878 0004 23348100 		sd	s0,8(sp)
 879              		.cfi_offset 8, -8
GAS LISTING /tmp/ccS5X0wb.s 			page 26


 880 0008 13040101 		addi	s0,sp,16
 881              		.cfi_def_cfa 8, 0
 882              		.loc 3 21 34
 883              		.loc 3 21 49 is_stmt 0
 884 000c 2308B502 		sb	a1,48(a0)
 885              		.loc 3 21 59
 886 0010 03348100 		ld	s0,8(sp)
 887              		.cfi_restore 8
 888              		.cfi_def_cfa 2, 16
 889 0014 13010101 		addi	sp,sp,16
 890              		.cfi_def_cfa_offset 0
 891 0018 67800000 		jr	ra
 892              		.cfi_endproc
 893              	.LFE33:
 895              		.section	.text._ZN3TCB12getTimeSliceEv,"axG",@progbits,_ZN3TCB12getTimeSliceEv,comdat
 896              		.align	2
 897              		.weak	_ZN3TCB12getTimeSliceEv
 899              	_ZN3TCB12getTimeSliceEv:
 900              	.LFB36:
  22:src/../h/TCB.hpp **** 
  23:src/../h/TCB.hpp **** 	bool isBlocked() { return blocked; }
  24:src/../h/TCB.hpp **** 
  25:src/../h/TCB.hpp **** 	void setBlocked(bool block) { this->blocked = block; }
  26:src/../h/TCB.hpp **** 
  27:src/../h/TCB.hpp **** 	uint64 getTimeSlice() { return timeSlice; }
 901              		.loc 3 27 9 is_stmt 1
 902              		.cfi_startproc
 903              	.LVL100:
 904 0000 130101FF 		addi	sp,sp,-16
 905              		.cfi_def_cfa_offset 16
 906 0004 23348100 		sd	s0,8(sp)
 907              		.cfi_offset 8, -8
 908 0008 13040101 		addi	s0,sp,16
 909              		.cfi_def_cfa 8, 0
 910              		.loc 3 27 26
 911              		.loc 3 27 44 is_stmt 0
 912 000c 03358502 		ld	a0,40(a0)
 913              	.LVL101:
 914 0010 03348100 		ld	s0,8(sp)
 915              		.cfi_restore 8
 916              		.cfi_def_cfa 2, 16
 917 0014 13010101 		addi	sp,sp,16
 918              		.cfi_def_cfa_offset 0
 919 0018 67800000 		jr	ra
 920              		.cfi_endproc
 921              	.LFE36:
 923              		.data
 924              		.align	3
 927              	_ZZ16interruptRoutineE6digits:
 928 0000 30313233 		.string	"0123456789"
 928      34353637 
 928      383900
 929              		.text
 930              	.Letext0:
 931              		.file 4 "src/../lib/hw.h"
 932              		.file 5 "src/../h/MemoryAllocator.hpp"
 933              		.file 6 "src/../h/syscall_c.hpp"
GAS LISTING /tmp/ccS5X0wb.s 			page 27


 934              		.file 7 "src/../h/../h/ThreadQueue.hpp"
 935              		.file 8 "src/../h/Scheduler.hpp"
 936              		.file 9 "src/../lib/console.h"
GAS LISTING /tmp/ccS5X0wb.s 			page 28


DEFINED SYMBOLS
                            *ABS*:0000000000000000 interruptRoutine.cpp
     /tmp/ccS5X0wb.s:9      .text:0000000000000000 interruptRoutine
     /tmp/ccS5X0wb.s:13     .text:0000000000000000 .L0 
     /tmp/ccS5X0wb.s:14     .text:0000000000000000 .L0 
     /tmp/ccS5X0wb.s:15     .text:0000000000000004 .L0 
     /tmp/ccS5X0wb.s:18     .text:000000000000000c .L0 
     /tmp/ccS5X0wb.s:19     .text:000000000000000c .L0 
     /tmp/ccS5X0wb.s:21     .text:0000000000000010 .L0 
     /tmp/ccS5X0wb.s:23     .text:0000000000000010 .L0 
     /tmp/ccS5X0wb.s:24     .text:0000000000000010 .L0 
src/interruptRoutine.cpp:17     .text:0000000000000010 .L0 
     /tmp/ccS5X0wb.s:33     .text:0000000000000018 .L0 
src/interruptRoutine.cpp:18     .text:0000000000000018 .L0 
     /tmp/ccS5X0wb.s:43     .text:0000000000000020 .L0 
src/interruptRoutine.cpp:20     .text:0000000000000020 .L0 
     /tmp/ccS5X0wb.s:53     .text:0000000000000028 .L0 
     /tmp/ccS5X0wb.s:54     .text:0000000000000028 .L0 
src/interruptRoutine.cpp:22     .text:0000000000000028 .L0 
     /tmp/ccS5X0wb.s:64     .text:0000000000000030 .L0 
src/interruptRoutine.cpp:23     .text:0000000000000030 .L0 
     /tmp/ccS5X0wb.s:74     .text:0000000000000038 .L0 
src/interruptRoutine.cpp:24     .text:0000000000000038 .L0 
     /tmp/ccS5X0wb.s:84     .text:0000000000000040 .L0 
src/interruptRoutine.cpp:25     .text:0000000000000040 .L0 
     /tmp/ccS5X0wb.s:94     .text:0000000000000048 .L0 
src/interruptRoutine.cpp:26     .text:0000000000000048 .L0 
     /tmp/ccS5X0wb.s:104    .text:0000000000000050 .L0 
src/interruptRoutine.cpp:27     .text:0000000000000050 .L0 
     /tmp/ccS5X0wb.s:114    .text:0000000000000058 .L0 
src/interruptRoutine.cpp:28     .text:0000000000000058 .L0 
     /tmp/ccS5X0wb.s:124    .text:0000000000000060 .L0 
src/interruptRoutine.cpp:29     .text:0000000000000060 .L0 
     /tmp/ccS5X0wb.s:135    .text:0000000000000068 .L0 
     /tmp/ccS5X0wb.s:139    .text:0000000000000074 .L0 
     /tmp/ccS5X0wb.s:145    .text:0000000000000080 .L0 
     /tmp/ccS5X0wb.s:146    .text:0000000000000080 .L0 
     /tmp/ccS5X0wb.s:151    .text:0000000000000088 .L0 
     /tmp/ccS5X0wb.s:257    .text:00000000000000f8 .L0 
     /tmp/ccS5X0wb.s:260    .text:00000000000000fc .L0 
     /tmp/ccS5X0wb.s:261    .text:00000000000000fc .L0 
     /tmp/ccS5X0wb.s:262    .text:00000000000000fc .L0 
     /tmp/ccS5X0wb.s:263    .text:00000000000000fc .L0 
     /tmp/ccS5X0wb.s:267    .text:0000000000000104 .L0 
     /tmp/ccS5X0wb.s:268    .text:0000000000000104 .L0 
     /tmp/ccS5X0wb.s:274    .text:0000000000000110 .L0 
     /tmp/ccS5X0wb.s:275    .text:0000000000000110 .L0 
     /tmp/ccS5X0wb.s:279    .text:000000000000011c .L0 
src/interruptRoutine.cpp:42     .text:000000000000011c .L0 
     /tmp/ccS5X0wb.s:286    .text:0000000000000120 .L0 
     /tmp/ccS5X0wb.s:290    .text:0000000000000124 .L0 
     /tmp/ccS5X0wb.s:291    .text:0000000000000124 .L0 
     /tmp/ccS5X0wb.s:292    .text:0000000000000124 .L0 
     /tmp/ccS5X0wb.s:293    .text:0000000000000124 .L0 
     /tmp/ccS5X0wb.s:297    .text:000000000000012c .L0 
     /tmp/ccS5X0wb.s:298    .text:000000000000012c .L0 
     /tmp/ccS5X0wb.s:302    .text:0000000000000138 .L0 
GAS LISTING /tmp/ccS5X0wb.s 			page 29


src/interruptRoutine.cpp:50     .text:0000000000000138 .L0 
     /tmp/ccS5X0wb.s:309    .text:000000000000013c .L0 
     /tmp/ccS5X0wb.s:313    .text:0000000000000140 .L0 
     /tmp/ccS5X0wb.s:314    .text:0000000000000140 .L0 
     /tmp/ccS5X0wb.s:315    .text:0000000000000140 .L0 
     /tmp/ccS5X0wb.s:316    .text:0000000000000140 .L0 
     /tmp/ccS5X0wb.s:320    .text:0000000000000148 .L0 
     /tmp/ccS5X0wb.s:321    .text:0000000000000148 .L0 
     /tmp/ccS5X0wb.s:322    .text:0000000000000148 .L0 
     /tmp/ccS5X0wb.s:327    .text:0000000000000150 .L0 
     /tmp/ccS5X0wb.s:328    .text:0000000000000150 .L0 
     /tmp/ccS5X0wb.s:329    .text:0000000000000150 .L0 
     /tmp/ccS5X0wb.s:334    .text:0000000000000158 .L0 
     /tmp/ccS5X0wb.s:335    .text:0000000000000158 .L0 
     /tmp/ccS5X0wb.s:336    .text:0000000000000158 .L0 
     /tmp/ccS5X0wb.s:341    .text:0000000000000160 .L0 
     /tmp/ccS5X0wb.s:342    .text:0000000000000160 .L0 
     /tmp/ccS5X0wb.s:349    .text:0000000000000178 .L0 
     /tmp/ccS5X0wb.s:352    .text:0000000000000180 .L0 
     /tmp/ccS5X0wb.s:353    .text:0000000000000180 .L0 
     /tmp/ccS5X0wb.s:356    .text:0000000000000188 .L0 
     /tmp/ccS5X0wb.s:358    .text:000000000000018c .L0 
src/interruptRoutine.cpp:65     .text:000000000000018c .L0 
     /tmp/ccS5X0wb.s:367    .text:0000000000000194 .L0 
src/interruptRoutine.cpp:67     .text:0000000000000194 .L0 
     /tmp/ccS5X0wb.s:375    .text:0000000000000198 .L0 
src/interruptRoutine.cpp:69     .text:0000000000000198 .L0 
     /tmp/ccS5X0wb.s:382    .text:000000000000019c .L0 
     /tmp/ccS5X0wb.s:386    .text:00000000000001a0 .L0 
     /tmp/ccS5X0wb.s:387    .text:00000000000001a0 .L0 
     /tmp/ccS5X0wb.s:388    .text:00000000000001a0 .L0 
     /tmp/ccS5X0wb.s:870    .text._ZN3TCB11setFinishedEb:0000000000000000 _ZN3TCB11setFinishedEb
     /tmp/ccS5X0wb.s:395    .text:00000000000001bc .L0 
     /tmp/ccS5X0wb.s:396    .text:00000000000001bc .L0 
     /tmp/ccS5X0wb.s:399    .text:00000000000001c4 .L0 
     /tmp/ccS5X0wb.s:400    .text:00000000000001c4 .L0 
     /tmp/ccS5X0wb.s:403    .text:00000000000001cc .L0 
     /tmp/ccS5X0wb.s:407    .text:00000000000001d0 .L0 
     /tmp/ccS5X0wb.s:408    .text:00000000000001d0 .L0 
     /tmp/ccS5X0wb.s:409    .text:00000000000001d0 .L0 
     /tmp/ccS5X0wb.s:412    .text:00000000000001d8 .L0 
     /tmp/ccS5X0wb.s:416    .text:00000000000001dc .L0 
     /tmp/ccS5X0wb.s:417    .text:00000000000001dc .L0 
     /tmp/ccS5X0wb.s:418    .text:00000000000001dc .L0 
     /tmp/ccS5X0wb.s:419    .text:00000000000001dc .L0 
     /tmp/ccS5X0wb.s:423    .text:00000000000001e4 .L0 
     /tmp/ccS5X0wb.s:424    .text:00000000000001e4 .L0 
     /tmp/ccS5X0wb.s:428    .text:00000000000001f0 .L0 
     /tmp/ccS5X0wb.s:429    .text:00000000000001f0 .L0 
     /tmp/ccS5X0wb.s:432    .text:00000000000001f8 .L0 
     /tmp/ccS5X0wb.s:436    .text:00000000000001fc .L0 
     /tmp/ccS5X0wb.s:437    .text:00000000000001fc .L0 
     /tmp/ccS5X0wb.s:438    .text:00000000000001fc .L0 
     /tmp/ccS5X0wb.s:439    .text:00000000000001fc .L0 
     /tmp/ccS5X0wb.s:443    .text:0000000000000204 .L0 
     /tmp/ccS5X0wb.s:446    .text:000000000000020c .L0 
src/interruptRoutine.cpp:105    .text:000000000000020c .L0 
GAS LISTING /tmp/ccS5X0wb.s 			page 30


     /tmp/ccS5X0wb.s:455    .text:0000000000000214 .L0 
src/interruptRoutine.cpp:107    .text:0000000000000214 .L0 
     /tmp/ccS5X0wb.s:463    .text:0000000000000218 .L0 
src/interruptRoutine.cpp:109    .text:0000000000000218 .L0 
     /tmp/ccS5X0wb.s:470    .text:000000000000021c .L0 
     /tmp/ccS5X0wb.s:474    .text:0000000000000224 .L0 
     /tmp/ccS5X0wb.s:475    .text:0000000000000224 .L0 
     /tmp/ccS5X0wb.s:482    .text:0000000000000240 .L0 
     /tmp/ccS5X0wb.s:483    .text:0000000000000240 .L0 
     /tmp/ccS5X0wb.s:486    .text:0000000000000248 .L0 
     /tmp/ccS5X0wb.s:490    .text:000000000000024c .L0 
     /tmp/ccS5X0wb.s:491    .text:000000000000024c .L0 
     /tmp/ccS5X0wb.s:492    .text:000000000000024c .L0 
     /tmp/ccS5X0wb.s:493    .text:000000000000024c .L0 
     /tmp/ccS5X0wb.s:498    .text:0000000000000254 .L0 
     /tmp/ccS5X0wb.s:499    .text:0000000000000254 .L0 
     /tmp/ccS5X0wb.s:500    .text:0000000000000254 .L0 
     /tmp/ccS5X0wb.s:503    .text:000000000000025c .L0 
     /tmp/ccS5X0wb.s:505    .text:0000000000000260 .L0 
     /tmp/ccS5X0wb.s:506    .text:0000000000000260 .L0 
     /tmp/ccS5X0wb.s:512    .text:0000000000000274 .L0 
     /tmp/ccS5X0wb.s:513    .text:0000000000000274 .L0 
     /tmp/ccS5X0wb.s:518    .text:0000000000000280 .L0 
     /tmp/ccS5X0wb.s:522    .text:0000000000000284 .L0 
     /tmp/ccS5X0wb.s:523    .text:0000000000000284 .L0 
     /tmp/ccS5X0wb.s:524    .text:0000000000000284 .L0 
     /tmp/ccS5X0wb.s:525    .text:0000000000000284 .L0 
     /tmp/ccS5X0wb.s:529    .text:000000000000028c .L0 
     /tmp/ccS5X0wb.s:530    .text:000000000000028c .L0 
     /tmp/ccS5X0wb.s:531    .text:000000000000028c .L0 
     /tmp/ccS5X0wb.s:532    .text:000000000000028c .L0 
     /tmp/ccS5X0wb.s:533    .text:000000000000028c .L0 
     /tmp/ccS5X0wb.s:534    .text:000000000000028c .L0 
     /tmp/ccS5X0wb.s:537    .text:0000000000000290 .L0 
     /tmp/ccS5X0wb.s:538    .text:0000000000000290 .L0 
     /tmp/ccS5X0wb.s:539    .text:0000000000000290 .L0 
     /tmp/ccS5X0wb.s:543    .text:0000000000000298 .L0 
     /tmp/ccS5X0wb.s:544    .text:0000000000000298 .L0 
     /tmp/ccS5X0wb.s:548    .text:000000000000029c .L0 
     /tmp/ccS5X0wb.s:549    .text:000000000000029c .L0 
     /tmp/ccS5X0wb.s:550    .text:000000000000029c .L0 
     /tmp/ccS5X0wb.s:555    .text:00000000000002ac .L0 
     /tmp/ccS5X0wb.s:927    .data:0000000000000000 _ZZ16interruptRoutineE6digits
     /tmp/ccS5X0wb.s:560    .text:00000000000002b8 .L0 
     /tmp/ccS5X0wb.s:567    .text:00000000000002d0 .L0 
     /tmp/ccS5X0wb.s:571    .text:00000000000002dc .L0 
     /tmp/ccS5X0wb.s:572    .text:00000000000002dc .L0 
     /tmp/ccS5X0wb.s:578    .text:00000000000002ec .L0 
     /tmp/ccS5X0wb.s:585    .text:0000000000000300 .L0 
     /tmp/ccS5X0wb.s:588    .text:0000000000000304 .L0 
     /tmp/ccS5X0wb.s:592    .text:0000000000000310 .L0 
     /tmp/ccS5X0wb.s:593    .text:0000000000000310 .L0 
     /tmp/ccS5X0wb.s:598    .text:000000000000031c .L0 
     /tmp/ccS5X0wb.s:606    .text:000000000000032c .L0 
     /tmp/ccS5X0wb.s:607    .text:000000000000032c .L0 
     /tmp/ccS5X0wb.s:618    .text:000000000000034c .L0 
     /tmp/ccS5X0wb.s:619    .text:000000000000034c .L0 
GAS LISTING /tmp/ccS5X0wb.s 			page 31


     /tmp/ccS5X0wb.s:627    .text:0000000000000368 .L0 
     /tmp/ccS5X0wb.s:631    .text:000000000000036c .L0 
     /tmp/ccS5X0wb.s:636    .text:0000000000000374 .L0 
     /tmp/ccS5X0wb.s:641    .text:000000000000037c .L0 
     /tmp/ccS5X0wb.s:646    .text:0000000000000384 .L0 
     /tmp/ccS5X0wb.s:652    .text:0000000000000388 .L0 
     /tmp/ccS5X0wb.s:653    .text:0000000000000388 .L0 
     /tmp/ccS5X0wb.s:663    .text:0000000000000394 .L0 
     /tmp/ccS5X0wb.s:664    .text:0000000000000394 .L0 
     /tmp/ccS5X0wb.s:674    .text:00000000000003a0 .L0 
     /tmp/ccS5X0wb.s:679    .text:00000000000003a4 .L0 
     /tmp/ccS5X0wb.s:686    .text:00000000000003b8 .L0 
     /tmp/ccS5X0wb.s:687    .text:00000000000003b8 .L0 
     /tmp/ccS5X0wb.s:691    .text:00000000000003c0 .L0 
     /tmp/ccS5X0wb.s:696    .text:00000000000003c4 .L0 
     /tmp/ccS5X0wb.s:702    .text:00000000000003d8 .L0 
     /tmp/ccS5X0wb.s:703    .text:00000000000003d8 .L0 
     /tmp/ccS5X0wb.s:706    .text:00000000000003e0 .L0 
     /tmp/ccS5X0wb.s:707    .text:00000000000003e0 .L0 
     /tmp/ccS5X0wb.s:713    .text:00000000000003fc .L0 
     /tmp/ccS5X0wb.s:714    .text:00000000000003fc .L0 
     /tmp/ccS5X0wb.s:899    .text._ZN3TCB12getTimeSliceEv:0000000000000000 _ZN3TCB12getTimeSliceEv
     /tmp/ccS5X0wb.s:721    .text:0000000000000418 .L0 
     /tmp/ccS5X0wb.s:727    .text:0000000000000430 .L0 
     /tmp/ccS5X0wb.s:729    .text:0000000000000434 .L0 
     /tmp/ccS5X0wb.s:730    .text:0000000000000434 .L0 
     /tmp/ccS5X0wb.s:733    .text:000000000000043c .L0 
     /tmp/ccS5X0wb.s:734    .text:000000000000043c .L0 
     /tmp/ccS5X0wb.s:738    .text:0000000000000448 .L0 
     /tmp/ccS5X0wb.s:739    .text:0000000000000448 .L0 
     /tmp/ccS5X0wb.s:773    .text._ZN5Riscv6w_sepcEm:0000000000000000 _ZN5Riscv6w_sepcEm
     /tmp/ccS5X0wb.s:743    .text:0000000000000454 .L0 
     /tmp/ccS5X0wb.s:744    .text:0000000000000454 .L0 
     /tmp/ccS5X0wb.s:838    .text._ZN5Riscv9w_sstatusEm:0000000000000000 _ZN5Riscv9w_sstatusEm
     /tmp/ccS5X0wb.s:748    .text:0000000000000460 .L0 
     /tmp/ccS5X0wb.s:749    .text:0000000000000460 .L0 
     /tmp/ccS5X0wb.s:806    .text._ZN5Riscv6mc_sipEm:0000000000000000 _ZN5Riscv6mc_sipEm
     /tmp/ccS5X0wb.s:755    .text:000000000000046c .L0 
     /tmp/ccS5X0wb.s:757    .text:0000000000000474 .L0 
     /tmp/ccS5X0wb.s:759    .text:0000000000000478 .L0 
     /tmp/ccS5X0wb.s:760    .text:0000000000000478 .L0 
     /tmp/ccS5X0wb.s:763    .text:000000000000047c .L0 
     /tmp/ccS5X0wb.s:766    .text:0000000000000480 .L0 
     /tmp/ccS5X0wb.s:777    .text._ZN5Riscv6w_sepcEm:0000000000000000 .L0 
     /tmp/ccS5X0wb.s:779    .text._ZN5Riscv6w_sepcEm:0000000000000000 .L0 
     /tmp/ccS5X0wb.s:780    .text._ZN5Riscv6w_sepcEm:0000000000000004 .L0 
     /tmp/ccS5X0wb.s:782    .text._ZN5Riscv6w_sepcEm:0000000000000008 .L0 
     /tmp/ccS5X0wb.s:784    .text._ZN5Riscv6w_sepcEm:000000000000000c .L0 
     /tmp/ccS5X0wb.s:786    .text._ZN5Riscv6w_sepcEm:000000000000000c .L0 
  src/../h/Riscv.hpp:105    .text._ZN5Riscv6w_sepcEm:000000000000000c .L0 
     /tmp/ccS5X0wb.s:793    .text._ZN5Riscv6w_sepcEm:0000000000000010 .L0 
     /tmp/ccS5X0wb.s:794    .text._ZN5Riscv6w_sepcEm:0000000000000014 .L0 
     /tmp/ccS5X0wb.s:795    .text._ZN5Riscv6w_sepcEm:0000000000000014 .L0 
     /tmp/ccS5X0wb.s:797    .text._ZN5Riscv6w_sepcEm:0000000000000018 .L0 
     /tmp/ccS5X0wb.s:799    .text._ZN5Riscv6w_sepcEm:000000000000001c .L0 
     /tmp/ccS5X0wb.s:809    .text._ZN5Riscv6mc_sipEm:0000000000000000 .L0 
     /tmp/ccS5X0wb.s:811    .text._ZN5Riscv6mc_sipEm:0000000000000000 .L0 
GAS LISTING /tmp/ccS5X0wb.s 			page 32


     /tmp/ccS5X0wb.s:812    .text._ZN5Riscv6mc_sipEm:0000000000000004 .L0 
     /tmp/ccS5X0wb.s:814    .text._ZN5Riscv6mc_sipEm:0000000000000008 .L0 
     /tmp/ccS5X0wb.s:816    .text._ZN5Riscv6mc_sipEm:000000000000000c .L0 
     /tmp/ccS5X0wb.s:818    .text._ZN5Riscv6mc_sipEm:000000000000000c .L0 
  src/../h/Riscv.hpp:123    .text._ZN5Riscv6mc_sipEm:000000000000000c .L0 
     /tmp/ccS5X0wb.s:825    .text._ZN5Riscv6mc_sipEm:0000000000000010 .L0 
     /tmp/ccS5X0wb.s:826    .text._ZN5Riscv6mc_sipEm:0000000000000014 .L0 
     /tmp/ccS5X0wb.s:827    .text._ZN5Riscv6mc_sipEm:0000000000000014 .L0 
     /tmp/ccS5X0wb.s:829    .text._ZN5Riscv6mc_sipEm:0000000000000018 .L0 
     /tmp/ccS5X0wb.s:831    .text._ZN5Riscv6mc_sipEm:000000000000001c .L0 
     /tmp/ccS5X0wb.s:841    .text._ZN5Riscv9w_sstatusEm:0000000000000000 .L0 
     /tmp/ccS5X0wb.s:843    .text._ZN5Riscv9w_sstatusEm:0000000000000000 .L0 
     /tmp/ccS5X0wb.s:844    .text._ZN5Riscv9w_sstatusEm:0000000000000004 .L0 
     /tmp/ccS5X0wb.s:846    .text._ZN5Riscv9w_sstatusEm:0000000000000008 .L0 
     /tmp/ccS5X0wb.s:848    .text._ZN5Riscv9w_sstatusEm:000000000000000c .L0 
     /tmp/ccS5X0wb.s:850    .text._ZN5Riscv9w_sstatusEm:000000000000000c .L0 
  src/../h/Riscv.hpp:151    .text._ZN5Riscv9w_sstatusEm:000000000000000c .L0 
     /tmp/ccS5X0wb.s:857    .text._ZN5Riscv9w_sstatusEm:0000000000000010 .L0 
     /tmp/ccS5X0wb.s:858    .text._ZN5Riscv9w_sstatusEm:0000000000000014 .L0 
     /tmp/ccS5X0wb.s:859    .text._ZN5Riscv9w_sstatusEm:0000000000000014 .L0 
     /tmp/ccS5X0wb.s:861    .text._ZN5Riscv9w_sstatusEm:0000000000000018 .L0 
     /tmp/ccS5X0wb.s:863    .text._ZN5Riscv9w_sstatusEm:000000000000001c .L0 
     /tmp/ccS5X0wb.s:874    .text._ZN3TCB11setFinishedEb:0000000000000000 .L0 
     /tmp/ccS5X0wb.s:876    .text._ZN3TCB11setFinishedEb:0000000000000000 .L0 
     /tmp/ccS5X0wb.s:877    .text._ZN3TCB11setFinishedEb:0000000000000004 .L0 
     /tmp/ccS5X0wb.s:879    .text._ZN3TCB11setFinishedEb:0000000000000008 .L0 
     /tmp/ccS5X0wb.s:881    .text._ZN3TCB11setFinishedEb:000000000000000c .L0 
     /tmp/ccS5X0wb.s:883    .text._ZN3TCB11setFinishedEb:000000000000000c .L0 
     /tmp/ccS5X0wb.s:884    .text._ZN3TCB11setFinishedEb:000000000000000c .L0 
     /tmp/ccS5X0wb.s:886    .text._ZN3TCB11setFinishedEb:0000000000000010 .L0 
     /tmp/ccS5X0wb.s:887    .text._ZN3TCB11setFinishedEb:0000000000000014 .L0 
     /tmp/ccS5X0wb.s:888    .text._ZN3TCB11setFinishedEb:0000000000000014 .L0 
     /tmp/ccS5X0wb.s:890    .text._ZN3TCB11setFinishedEb:0000000000000018 .L0 
     /tmp/ccS5X0wb.s:892    .text._ZN3TCB11setFinishedEb:000000000000001c .L0 
     /tmp/ccS5X0wb.s:902    .text._ZN3TCB12getTimeSliceEv:0000000000000000 .L0 
     /tmp/ccS5X0wb.s:904    .text._ZN3TCB12getTimeSliceEv:0000000000000000 .L0 
     /tmp/ccS5X0wb.s:905    .text._ZN3TCB12getTimeSliceEv:0000000000000004 .L0 
     /tmp/ccS5X0wb.s:907    .text._ZN3TCB12getTimeSliceEv:0000000000000008 .L0 
     /tmp/ccS5X0wb.s:909    .text._ZN3TCB12getTimeSliceEv:000000000000000c .L0 
     /tmp/ccS5X0wb.s:911    .text._ZN3TCB12getTimeSliceEv:000000000000000c .L0 
     /tmp/ccS5X0wb.s:912    .text._ZN3TCB12getTimeSliceEv:000000000000000c .L0 
     /tmp/ccS5X0wb.s:915    .text._ZN3TCB12getTimeSliceEv:0000000000000014 .L0 
     /tmp/ccS5X0wb.s:916    .text._ZN3TCB12getTimeSliceEv:0000000000000014 .L0 
     /tmp/ccS5X0wb.s:918    .text._ZN3TCB12getTimeSliceEv:0000000000000018 .L0 
     /tmp/ccS5X0wb.s:920    .text._ZN3TCB12getTimeSliceEv:000000000000001c .L0 
     /tmp/ccS5X0wb.s:937    .text:0000000000000480 .L0 
     /tmp/ccS5X0wb.s:802    .text._ZN5Riscv6w_sepcEm:000000000000001c .L0 
     /tmp/ccS5X0wb.s:834    .text._ZN5Riscv6mc_sipEm:000000000000001c .L0 
     /tmp/ccS5X0wb.s:866    .text._ZN5Riscv9w_sstatusEm:000000000000001c .L0 
     /tmp/ccS5X0wb.s:895    .text._ZN3TCB11setFinishedEb:000000000000001c .L0 
     /tmp/ccS5X0wb.s:923    .text._ZN3TCB12getTimeSliceEv:000000000000001c .L0 
     /tmp/ccS5X0wb.s:180    .rodata:0000000000000000 .L8
     /tmp/ccS5X0wb.s:169    .text:00000000000000c8 .L0 
     /tmp/ccS5X0wb.s:174    .text:00000000000000dc .L0 
     /tmp/ccS5X0wb.s:388    .text:00000000000001a0 .L0 
     /tmp/ccS5X0wb.s:475    .text:0000000000000224 .L0 
     /tmp/ccS5X0wb.s:560    .text:00000000000002b8 .L0 
GAS LISTING /tmp/ccS5X0wb.s 			page 33


     /tmp/ccS5X0wb.s:707    .text:00000000000003e0 .L0 
     /tmp/ccS5X0wb.s:710    .text:00000000000003f0 .L0 
     /tmp/ccS5X0wb.s:714    .text:00000000000003fc .L0 
     /tmp/ccS5X0wb.s:721    .text:0000000000000418 .L0 
     /tmp/ccS5X0wb.s:734    .text:000000000000043c .L0 
     /tmp/ccS5X0wb.s:142    .text:0000000000000080 .L2
     /tmp/ccS5X0wb.s:676    .text:00000000000003a4 .L3
     /tmp/ccS5X0wb.s:520    .text:0000000000000284 .L4
     /tmp/ccS5X0wb.s:629    .text:000000000000036c .L38
     /tmp/ccS5X0wb.s:250    .text:00000000000000ec .L6
     /tmp/ccS5X0wb.s:488    .text:000000000000024c .L21
     /tmp/ccS5X0wb.s:648    .text:0000000000000388 .L22
     /tmp/ccS5X0wb.s:365    .text:0000000000000194 .L23
     /tmp/ccS5X0wb.s:373    .text:0000000000000198 .L24
     /tmp/ccS5X0wb.s:453    .text:0000000000000214 .L25
     /tmp/ccS5X0wb.s:461    .text:0000000000000218 .L26
     /tmp/ccS5X0wb.s:634    .text:0000000000000374 .L39
     /tmp/ccS5X0wb.s:639    .text:000000000000037c .L40
     /tmp/ccS5X0wb.s:496    .text:0000000000000254 .L29
     /tmp/ccS5X0wb.s:586    .text:0000000000000304 .L30
     /tmp/ccS5X0wb.s:546    .text:000000000000029c .L31
     /tmp/ccS5X0wb.s:604    .text:000000000000032c .L34
     /tmp/ccS5X0wb.s:644    .text:0000000000000384 .L41
     /tmp/ccS5X0wb.s:752    .text:000000000000046c .L42
     /tmp/ccS5X0wb.s:693    .text:00000000000003c4 .L36
     /tmp/ccS5X0wb.s:736    .text:0000000000000448 .L37
     /tmp/ccS5X0wb.s:258    .text:00000000000000fc .L20
     /tmp/ccS5X0wb.s:288    .text:0000000000000124 .L19
     /tmp/ccS5X0wb.s:311    .text:0000000000000140 .L18
     /tmp/ccS5X0wb.s:384    .text:00000000000001a0 .L17
     /tmp/ccS5X0wb.s:405    .text:00000000000001d0 .L16
     /tmp/ccS5X0wb.s:414    .text:00000000000001dc .L15
     /tmp/ccS5X0wb.s:434    .text:00000000000001fc .L10
     /tmp/ccS5X0wb.s:2556   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccS5X0wb.s:4600   .debug_str:0000000000000830 .LASF173
     /tmp/ccS5X0wb.s:4518   .debug_str:00000000000005cc .LASF174
     /tmp/ccS5X0wb.s:4564   .debug_str:000000000000071e .LASF175
     /tmp/ccS5X0wb.s:4298   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccS5X0wb.s:4314   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccS5X0wb.s:4536   .debug_str:0000000000000651 .LASF3
     /tmp/ccS5X0wb.s:4428   .debug_str:0000000000000394 .LASF0
     /tmp/ccS5X0wb.s:4458   .debug_str:000000000000043c .LASF1
     /tmp/ccS5X0wb.s:4548   .debug_str:00000000000006a7 .LASF2
     /tmp/ccS5X0wb.s:4556   .debug_str:00000000000006ef .LASF4
     /tmp/ccS5X0wb.s:4442   .debug_str:00000000000003de .LASF5
     /tmp/ccS5X0wb.s:4322   .debug_str:0000000000000043 .LASF6
     /tmp/ccS5X0wb.s:4522   .debug_str:00000000000005f6 .LASF7
     /tmp/ccS5X0wb.s:4516   .debug_str:00000000000005b9 .LASF8
     /tmp/ccS5X0wb.s:4448   .debug_str:0000000000000407 .LASF9
     /tmp/ccS5X0wb.s:4408   .debug_str:00000000000002f6 .LASF10
     /tmp/ccS5X0wb.s:4416   .debug_str:000000000000033a .LASF11
     /tmp/ccS5X0wb.s:4352   .debug_str:0000000000000129 .LASF12
     /tmp/ccS5X0wb.s:4398   .debug_str:00000000000002be .LASF13
     /tmp/ccS5X0wb.s:4362   .debug_str:0000000000000181 .LASF14
     /tmp/ccS5X0wb.s:4350   .debug_str:0000000000000119 .LASF15
     /tmp/ccS5X0wb.s:4580   .debug_str:00000000000007aa .LASF16
     /tmp/ccS5X0wb.s:4388   .debug_str:0000000000000255 .LASF17
GAS LISTING /tmp/ccS5X0wb.s 			page 34


     /tmp/ccS5X0wb.s:4568   .debug_str:0000000000000745 .LASF18
     /tmp/ccS5X0wb.s:4514   .debug_str:00000000000005a9 .LASF32
     /tmp/ccS5X0wb.s:4526   .debug_str:0000000000000605 .LASF22
     /tmp/ccS5X0wb.s:4354   .debug_str:0000000000000138 .LASF19
     /tmp/ccS5X0wb.s:4336   .debug_str:00000000000000b8 .LASF20
     /tmp/ccS5X0wb.s:4456   .debug_str:0000000000000437 .LASF21
     /tmp/ccS5X0wb.s:4382   .debug_str:0000000000000233 .LASF23
     /tmp/ccS5X0wb.s:4652   .debug_str:0000000000000a4c .LASF24
     /tmp/ccS5X0wb.s:4478   .debug_str:0000000000000493 .LASF26
     /tmp/ccS5X0wb.s:4404   .debug_str:00000000000002ea .LASF25
     /tmp/ccS5X0wb.s:4506   .debug_str:0000000000000571 .LASF27
     /tmp/ccS5X0wb.s:4334   .debug_str:000000000000009f .LASF44
     /tmp/ccS5X0wb.s:4540   .debug_str:0000000000000677 .LASF28
     /tmp/ccS5X0wb.s:4628   .debug_str:00000000000009a4 .LASF29
     /tmp/ccS5X0wb.s:4426   .debug_str:0000000000000388 .LASF30
     /tmp/ccS5X0wb.s:4438   .debug_str:00000000000003cc .LASF72
     /tmp/ccS5X0wb.s:4578   .debug_str:0000000000000775 .LASF74
     /tmp/ccS5X0wb.s:4472   .debug_str:000000000000047a .LASF31
     /tmp/ccS5X0wb.s:4640   .debug_str:00000000000009e3 .LASF33
     /tmp/ccS5X0wb.s:4534   .debug_str:0000000000000646 .LASF176
     /tmp/ccS5X0wb.s:4464   .debug_str:000000000000045d .LASF34
     /tmp/ccS5X0wb.s:4392   .debug_str:0000000000000286 .LASF35
     /tmp/ccS5X0wb.s:4654   .debug_str:0000000000000a54 .LASF36
     /tmp/ccS5X0wb.s:4418   .debug_str:0000000000000348 .LASF37
     /tmp/ccS5X0wb.s:4494   .debug_str:0000000000000510 .LASF39
     /tmp/ccS5X0wb.s:4562   .debug_str:0000000000000710 .LASF38
     /tmp/ccS5X0wb.s:4390   .debug_str:000000000000026b .LASF40
     /tmp/ccS5X0wb.s:4432   .debug_str:00000000000003b1 .LASF41
     /tmp/ccS5X0wb.s:4650   .debug_str:0000000000000a32 .LASF42
     /tmp/ccS5X0wb.s:4622   .debug_str:0000000000000991 .LASF46
     /tmp/ccS5X0wb.s:4616   .debug_str:000000000000095a .LASF48
     /tmp/ccS5X0wb.s:4544   .debug_str:0000000000000693 .LASF43
     /tmp/ccS5X0wb.s:4504   .debug_str:000000000000055c .LASF45
     /tmp/ccS5X0wb.s:4528   .debug_str:0000000000000614 .LASF47
     /tmp/ccS5X0wb.s:4530   .debug_str:000000000000061b .LASF49
     /tmp/ccS5X0wb.s:4492   .debug_str:0000000000000509 .LASF50
     /tmp/ccS5X0wb.s:4450   .debug_str:000000000000041a .LASF51
     /tmp/ccS5X0wb.s:4484   .debug_str:00000000000004e7 .LASF52
     /tmp/ccS5X0wb.s:4604   .debug_str:0000000000000901 .LASF53
     /tmp/ccS5X0wb.s:4488   .debug_str:00000000000004fc .LASF54
     /tmp/ccS5X0wb.s:4502   .debug_str:0000000000000548 .LASF55
     /tmp/ccS5X0wb.s:4574   .debug_str:0000000000000767 .LASF56
     /tmp/ccS5X0wb.s:4558   .debug_str:00000000000006f6 .LASF57
     /tmp/ccS5X0wb.s:4560   .debug_str:0000000000000709 .LASF58
     /tmp/ccS5X0wb.s:4356   .debug_str:000000000000013d .LASF59
     /tmp/ccS5X0wb.s:4386   .debug_str:000000000000024f .LASF60
     /tmp/ccS5X0wb.s:4424   .debug_str:0000000000000376 .LASF61
     /tmp/ccS5X0wb.s:4434   .debug_str:00000000000003be .LASF62
     /tmp/ccS5X0wb.s:4376   .debug_str:000000000000020b .LASF63
     /tmp/ccS5X0wb.s:4324   .debug_str:000000000000004a .LASF64
     /tmp/ccS5X0wb.s:4552   .debug_str:00000000000006bf .LASF65
     /tmp/ccS5X0wb.s:4546   .debug_str:000000000000069c .LASF66
     /tmp/ccS5X0wb.s:4672   .debug_str:0000000000000aea .LASF67
     /tmp/ccS5X0wb.s:4642   .debug_str:00000000000009e9 .LASF68
     /tmp/ccS5X0wb.s:4658   .debug_str:0000000000000a64 .LASF69
     /tmp/ccS5X0wb.s:4636   .debug_str:00000000000009c3 .LASF70
     /tmp/ccS5X0wb.s:4480   .debug_str:00000000000004b2 .LASF71
GAS LISTING /tmp/ccS5X0wb.s 			page 35


     /tmp/ccS5X0wb.s:4610   .debug_str:000000000000092f .LASF73
     /tmp/ccS5X0wb.s:4368   .debug_str:00000000000001c1 .LASF75
     /tmp/ccS5X0wb.s:4634   .debug_str:00000000000009ba .LASF76
     /tmp/ccS5X0wb.s:4588   .debug_str:00000000000007f5 .LASF120
     /tmp/ccS5X0wb.s:4602   .debug_str:00000000000008f4 .LASF77
     /tmp/ccS5X0wb.s:4648   .debug_str:0000000000000a10 .LASF78
     /tmp/ccS5X0wb.s:4508   .debug_str:000000000000058f .LASF177
     /tmp/ccS5X0wb.s:4590   .debug_str:00000000000007fd .LASF81
     /tmp/ccS5X0wb.s:4584   .debug_str:00000000000007ca .LASF83
     /tmp/ccS5X0wb.s:4340   .debug_str:00000000000000c8 .LASF79
     /tmp/ccS5X0wb.s:4618   .debug_str:000000000000096f .LASF80
     /tmp/ccS5X0wb.s:4550   .debug_str:00000000000006b5 .LASF82
     /tmp/ccS5X0wb.s:4582   .debug_str:00000000000007b6 .LASF84
     /tmp/ccS5X0wb.s:4592   .debug_str:0000000000000808 .LASF85
     /tmp/ccS5X0wb.s:4394   .debug_str:000000000000028f .LASF86
     /tmp/ccS5X0wb.s:4476   .debug_str:0000000000000486 .LASF87
     /tmp/ccS5X0wb.s:4532   .debug_str:000000000000062e .LASF88
     /tmp/ccS5X0wb.s:4378   .debug_str:000000000000021d .LASF89
     /tmp/ccS5X0wb.s:4554   .debug_str:00000000000006d7 .LASF90
     /tmp/ccS5X0wb.s:4620   .debug_str:0000000000000986 .LASF91
     /tmp/ccS5X0wb.s:4400   .debug_str:00000000000002cd .LASF92
     /tmp/ccS5X0wb.s:4676   .debug_str:0000000000000b0f .LASF93
     /tmp/ccS5X0wb.s:4396   .debug_str:00000000000002a5 .LASF94
     /tmp/ccS5X0wb.s:4462   .debug_str:0000000000000457 .LASF95
     /tmp/ccS5X0wb.s:4542   .debug_str:0000000000000683 .LASF96
     /tmp/ccS5X0wb.s:4380   .debug_str:000000000000022a .LASF97
     /tmp/ccS5X0wb.s:4358   .debug_str:0000000000000150 .LASF98
     /tmp/ccS5X0wb.s:4466   .debug_str:0000000000000466 .LASF99
     /tmp/ccS5X0wb.s:4328   .debug_str:0000000000000071 .LASF100
     /tmp/ccS5X0wb.s:4596   .debug_str:0000000000000818 .LASF101
     /tmp/ccS5X0wb.s:4346   .debug_str:00000000000000f9 .LASF102
     /tmp/ccS5X0wb.s:4614   .debug_str:0000000000000952 .LASF103
     /tmp/ccS5X0wb.s:4348   .debug_str:000000000000010a .LASF104
     /tmp/ccS5X0wb.s:4668   .debug_str:0000000000000ac3 .LASF105
     /tmp/ccS5X0wb.s:4624   .debug_str:000000000000099a .LASF106
     /tmp/ccS5X0wb.s:4606   .debug_str:0000000000000915 .LASF107
     /tmp/ccS5X0wb.s:4566   .debug_str:000000000000073c .LASF108
     /tmp/ccS5X0wb.s:4524   .debug_str:00000000000005fd .LASF109
     /tmp/ccS5X0wb.s:4420   .debug_str:0000000000000353 .LASF110
     /tmp/ccS5X0wb.s:4598   .debug_str:0000000000000820 .LASF111
     /tmp/ccS5X0wb.s:4512   .debug_str:000000000000059d .LASF112
     /tmp/ccS5X0wb.s:4316   .debug_str:0000000000000000 .LASF113
     /tmp/ccS5X0wb.s:4318   .debug_str:000000000000000d .LASF114
     /tmp/ccS5X0wb.s:4662   .debug_str:0000000000000a8c .LASF147
     /tmp/ccS5X0wb.s:4370   .debug_str:00000000000001d9 .LASF115
     /tmp/ccS5X0wb.s:4320   .debug_str:000000000000001b .LASF116
     /tmp/ccS5X0wb.s:4674   .debug_str:0000000000000b02 .LASF117
     /tmp/ccS5X0wb.s:4414   .debug_str:000000000000032e .LASF118
     /tmp/ccS5X0wb.s:4430   .debug_str:00000000000003a1 .LASF125
     /tmp/ccS5X0wb.s:4500   .debug_str:000000000000053b .LASF126
     /tmp/ccS5X0wb.s:4496   .debug_str:0000000000000528 .LASF119
     /tmp/ccS5X0wb.s:4632   .debug_str:00000000000009b5 .LASF121
     /tmp/ccS5X0wb.s:4452   .debug_str:000000000000042d .LASF122
     /tmp/ccS5X0wb.s:4360   .debug_str:0000000000000163 .LASF123
     /tmp/ccS5X0wb.s:4372   .debug_str:00000000000001e7 .LASF124
     /tmp/ccS5X0wb.s:4364   .debug_str:0000000000000191 .LASF127
     /tmp/ccS5X0wb.s:4406   .debug_str:00000000000002f0 .LASF128
GAS LISTING /tmp/ccS5X0wb.s 			page 36


     /tmp/ccS5X0wb.s:4454   .debug_str:0000000000000432 .LASF129
     /tmp/ccS5X0wb.s:4330   .debug_str:0000000000000083 .LASF130
     /tmp/ccS5X0wb.s:4412   .debug_str:0000000000000316 .LASF131
     /tmp/ccS5X0wb.s:4374   .debug_str:0000000000000201 .LASF178
     /tmp/ccS5X0wb.s:4612   .debug_str:000000000000093a .LASF179
     /tmp/ccS5X0wb.s:4444   .debug_str:00000000000003f0 .LASF132
     /tmp/ccS5X0wb.s:4644   .debug_str:00000000000009f3 .LASF133
     /tmp/ccS5X0wb.s:4436   .debug_str:00000000000003c4 .LASF134
     /tmp/ccS5X0wb.s:4326   .debug_str:0000000000000055 .LASF135
     /tmp/ccS5X0wb.s:4460   .debug_str:000000000000044f .LASF136
     /tmp/ccS5X0wb.s:4482   .debug_str:00000000000004c8 .LASF137
     /tmp/ccS5X0wb.s:4342   .debug_str:00000000000000d4 .LASF138
     /tmp/ccS5X0wb.s:4344   .debug_str:00000000000000dd .LASF139
     /tmp/ccS5X0wb.s:4366   .debug_str:00000000000001ac .LASF140
     /tmp/ccS5X0wb.s:4638   .debug_str:00000000000009cd .LASF141
     /tmp/ccS5X0wb.s:4446   .debug_str:00000000000003fd .LASF142
     /tmp/ccS5X0wb.s:4572   .debug_str:0000000000000762 .LASF143
     /tmp/ccS5X0wb.s:4490   .debug_str:0000000000000504 .LASF144
     /tmp/ccS5X0wb.s:4666   .debug_str:0000000000000ab6 .LASF145
     /tmp/ccS5X0wb.s:4660   .debug_str:0000000000000a7a .LASF146
     /tmp/ccS5X0wb.s:4422   .debug_str:000000000000035e .LASF148
     /tmp/ccS5X0wb.s:4664   .debug_str:0000000000000aa2 .LASF180
     /tmp/ccS5X0wb.s:4608   .debug_str:000000000000091f .LASF149
     /tmp/ccS5X0wb.s:4538   .debug_str:0000000000000656 .LASF150
     /tmp/ccS5X0wb.s:4338   .debug_str:00000000000000bd .LASF151
     /tmp/ccS5X0wb.s:4670   .debug_str:0000000000000ac9 .LASF152
     /tmp/ccS5X0wb.s:4468   .debug_str:000000000000046e .LASF153
     /tmp/ccS5X0wb.s:4586   .debug_str:00000000000007e0 .LASF154
     /tmp/ccS5X0wb.s:4520   .debug_str:00000000000005e5 .LASF155
     /tmp/ccS5X0wb.s:10     .text:0000000000000000 .LFB45
     /tmp/ccS5X0wb.s:767    .text:0000000000000480 .LFE45
     /tmp/ccS5X0wb.s:4570   .debug_str:000000000000075b .LASF156
     /tmp/ccS5X0wb.s:3616   .debug_loc:0000000000000000 .LLST0
     /tmp/ccS5X0wb.s:4626   .debug_str:000000000000099f .LASF157
     /tmp/ccS5X0wb.s:3647   .debug_loc:0000000000000087 .LLST1
     /tmp/ccS5X0wb.s:4646   .debug_str:0000000000000a08 .LASF158
     /tmp/ccS5X0wb.s:3678   .debug_loc:000000000000010e .LLST2
     /tmp/ccS5X0wb.s:3700   .debug_loc:000000000000016e .LLST3
     /tmp/ccS5X0wb.s:3722   .debug_loc:00000000000001ce .LLST4
     /tmp/ccS5X0wb.s:3744   .debug_loc:0000000000000230 .LLST5
     /tmp/ccS5X0wb.s:3766   .debug_loc:0000000000000292 .LLST6
     /tmp/ccS5X0wb.s:3788   .debug_loc:00000000000002f4 .LLST7
     /tmp/ccS5X0wb.s:3810   .debug_loc:0000000000000356 .LLST8
     /tmp/ccS5X0wb.s:3832   .debug_loc:00000000000003b8 .LLST9
     /tmp/ccS5X0wb.s:3854   .debug_loc:000000000000041a .LLST10
     /tmp/ccS5X0wb.s:143    .text:0000000000000080 .LBB3
     /tmp/ccS5X0wb.s:670    .text:000000000000039c .LBE3
     /tmp/ccS5X0wb.s:4498   .debug_str:0000000000000534 .LASF159
     /tmp/ccS5X0wb.s:3975   .debug_loc:0000000000000634 .LLST11
     /tmp/ccS5X0wb.s:255    .text:00000000000000f8 .LBB5
     /tmp/ccS5X0wb.s:649    .text:0000000000000388 .LBE5
     /tmp/ccS5X0wb.s:4033   .debug_loc:0000000000000732 .LLST12
     /tmp/ccS5X0wb.s:4054   .debug_loc:0000000000000792 .LLST13
     /tmp/ccS5X0wb.s:4656   .debug_str:0000000000000a5d .LASF160
     /tmp/ccS5X0wb.s:4066   .debug_loc:00000000000007ca .LLST14
     /tmp/ccS5X0wb.s:4510   .debug_str:0000000000000594 .LASF161
     /tmp/ccS5X0wb.s:4078   .debug_loc:0000000000000802 .LLST15
GAS LISTING /tmp/ccS5X0wb.s 			page 37


     /tmp/ccS5X0wb.s:4090   .debug_loc:000000000000083a .LLST16
     /tmp/ccS5X0wb.s:4102   .debug_loc:0000000000000872 .LLST17
     /tmp/ccS5X0wb.s:4486   .debug_str:00000000000004ef .LASF162
     /tmp/ccS5X0wb.s:4114   .debug_loc:00000000000008aa .LLST18
     /tmp/ccS5X0wb.s:4384   .debug_str:0000000000000242 .LASF163
     /tmp/ccS5X0wb.s:4126   .debug_loc:00000000000008e2 .LLST19
     /tmp/ccS5X0wb.s:4332   .debug_str:0000000000000098 .LASF164
     /tmp/ccS5X0wb.s:4143   .debug_loc:000000000000092f .LLST20
     /tmp/ccS5X0wb.s:4440   .debug_str:00000000000003d6 .LASF165
     /tmp/ccS5X0wb.s:4160   .debug_loc:000000000000097a .LLST21
     /tmp/ccS5X0wb.s:4576   .debug_str:000000000000076e .LASF166
     /tmp/ccS5X0wb.s:4182   .debug_loc:00000000000009dc .LLST22
     /tmp/ccS5X0wb.s:4222   .debug_loc:0000000000000a89 .LLST23
     /tmp/ccS5X0wb.s:4235   .debug_loc:0000000000000ac3 .LLST24
     /tmp/ccS5X0wb.s:277    .text:000000000000011c .LVL30
     /tmp/ccS5X0wb.s:300    .text:0000000000000138 .LVL33
     /tmp/ccS5X0wb.s:346    .text:0000000000000174 .LVL42
     /tmp/ccS5X0wb.s:393    .text:00000000000001bc .LVL44
     /tmp/ccS5X0wb.s:397    .text:00000000000001c4 .LVL45
     /tmp/ccS5X0wb.s:401    .text:00000000000001cc .LVL46
     /tmp/ccS5X0wb.s:410    .text:00000000000001d8 .LVL48
     /tmp/ccS5X0wb.s:426    .text:00000000000001f0 .LVL51
     /tmp/ccS5X0wb.s:430    .text:00000000000001f8 .LVL52
     /tmp/ccS5X0wb.s:480    .text:0000000000000240 .LVL56
     /tmp/ccS5X0wb.s:484    .text:0000000000000248 .LVL57
     /tmp/ccS5X0wb.s:510    .text:0000000000000274 .LVL60
     /tmp/ccS5X0wb.s:625    .text:0000000000000368 .LVL76
     /tmp/ccS5X0wb.s:688    .text:00000000000003c0 .LVL86
     /tmp/ccS5X0wb.s:704    .text:00000000000003e0 .LVL88
     /tmp/ccS5X0wb.s:718    .text:0000000000000414 .LVL89
     /tmp/ccS5X0wb.s:731    .text:000000000000043c .LVL90
     /tmp/ccS5X0wb.s:741    .text:0000000000000454 .LVL91
     /tmp/ccS5X0wb.s:746    .text:0000000000000460 .LVL92
     /tmp/ccS5X0wb.s:751    .text:000000000000046c .LVL93
     /tmp/ccS5X0wb.s:4594   .debug_str:0000000000000813 .LASF167
     /tmp/ccS5X0wb.s:900    .text._ZN3TCB12getTimeSliceEv:0000000000000000 .LFB36
     /tmp/ccS5X0wb.s:921    .text._ZN3TCB12getTimeSliceEv:000000000000001c .LFE36
     /tmp/ccS5X0wb.s:4402   .debug_str:00000000000002e5 .LASF168
     /tmp/ccS5X0wb.s:4261   .debug_loc:0000000000000b35 .LLST25
     /tmp/ccS5X0wb.s:871    .text._ZN3TCB11setFinishedEb:0000000000000000 .LFB33
     /tmp/ccS5X0wb.s:893    .text._ZN3TCB11setFinishedEb:000000000000001c .LFE33
     /tmp/ccS5X0wb.s:4474   .debug_str:000000000000047f .LASF169
     /tmp/ccS5X0wb.s:839    .text._ZN5Riscv9w_sstatusEm:0000000000000000 .LFB16
     /tmp/ccS5X0wb.s:864    .text._ZN5Riscv9w_sstatusEm:000000000000001c .LFE16
     /tmp/ccS5X0wb.s:807    .text._ZN5Riscv6mc_sipEm:0000000000000000 .LFB10
     /tmp/ccS5X0wb.s:832    .text._ZN5Riscv6mc_sipEm:000000000000001c .LFE10
     /tmp/ccS5X0wb.s:4630   .debug_str:00000000000009b0 .LASF170
     /tmp/ccS5X0wb.s:774    .text._ZN5Riscv6w_sepcEm:0000000000000000 .LFB6
     /tmp/ccS5X0wb.s:800    .text._ZN5Riscv6w_sepcEm:000000000000001c .LFE6
     /tmp/ccS5X0wb.s:4470   .debug_str:0000000000000473 .LASF171
     /tmp/ccS5X0wb.s:4410   .debug_str:0000000000000306 .LASF172
     /tmp/ccS5X0wb.s:31     .text:0000000000000018 .LVL0
     /tmp/ccS5X0wb.s:38     .text:000000000000001c .LVL1
     /tmp/ccS5X0wb.s:675    .text:00000000000003a4 .LVL84
     /tmp/ccS5X0wb.s:680    .text:00000000000003a8 .LVL85
     /tmp/ccS5X0wb.s:761    .text:0000000000000478 .LVL94
     /tmp/ccS5X0wb.s:764    .text:000000000000047c .LVL95
GAS LISTING /tmp/ccS5X0wb.s 			page 38


     /tmp/ccS5X0wb.s:41     .text:0000000000000020 .LVL2
     /tmp/ccS5X0wb.s:48     .text:0000000000000024 .LVL3
     /tmp/ccS5X0wb.s:658    .text:0000000000000390 .LVL82
     /tmp/ccS5X0wb.s:661    .text:0000000000000394 .LVL83
     /tmp/ccS5X0wb.s:51     .text:0000000000000028 .LVL4
     /tmp/ccS5X0wb.s:59     .text:000000000000002c .LVL5
     /tmp/ccS5X0wb.s:62     .text:0000000000000030 .LVL6
     /tmp/ccS5X0wb.s:69     .text:0000000000000034 .LVL7
     /tmp/ccS5X0wb.s:72     .text:0000000000000038 .LVL8
     /tmp/ccS5X0wb.s:79     .text:000000000000003c .LVL9
     /tmp/ccS5X0wb.s:82     .text:0000000000000040 .LVL10
     /tmp/ccS5X0wb.s:89     .text:0000000000000044 .LVL11
     /tmp/ccS5X0wb.s:92     .text:0000000000000048 .LVL12
     /tmp/ccS5X0wb.s:99     .text:000000000000004c .LVL13
     /tmp/ccS5X0wb.s:102    .text:0000000000000050 .LVL14
     /tmp/ccS5X0wb.s:109    .text:0000000000000054 .LVL15
     /tmp/ccS5X0wb.s:112    .text:0000000000000058 .LVL16
     /tmp/ccS5X0wb.s:119    .text:000000000000005c .LVL17
     /tmp/ccS5X0wb.s:122    .text:0000000000000060 .LVL18
     /tmp/ccS5X0wb.s:129    .text:0000000000000064 .LVL19
     /tmp/ccS5X0wb.s:132    .text:0000000000000068 .LVL20
     /tmp/ccS5X0wb.s:287    .text:0000000000000124 .LVL31
     /tmp/ccS5X0wb.s:310    .text:0000000000000140 .LVL34
     /tmp/ccS5X0wb.s:383    .text:00000000000001a0 .LVL43
     /tmp/ccS5X0wb.s:404    .text:00000000000001d0 .LVL47
     /tmp/ccS5X0wb.s:413    .text:00000000000001dc .LVL49
     /tmp/ccS5X0wb.s:433    .text:00000000000001fc .LVL53
     /tmp/ccS5X0wb.s:487    .text:000000000000024c .LVL58
     /tmp/ccS5X0wb.s:495    .text:0000000000000254 .LVL59
     /tmp/ccS5X0wb.s:519    .text:0000000000000284 .LVL62
     /tmp/ccS5X0wb.s:603    .text:000000000000032c .LVL73
     /tmp/ccS5X0wb.s:628    .text:000000000000036c .LVL77
     /tmp/ccS5X0wb.s:633    .text:0000000000000374 .LVL78
     /tmp/ccS5X0wb.s:692    .text:00000000000003c4 .LVL87
     /tmp/ccS5X0wb.s:148    .text:0000000000000088 .LVL21
     /tmp/ccS5X0wb.s:153    .text:0000000000000090 .LVL22
     /tmp/ccS5X0wb.s:168    .text:00000000000000c8 .LVL23
     /tmp/ccS5X0wb.s:170    .text:00000000000000d0 .LVL24
     /tmp/ccS5X0wb.s:249    .text:00000000000000ec .LVL25
     /tmp/ccS5X0wb.s:252    .text:00000000000000f0 .LVL26
     /tmp/ccS5X0wb.s:545    .text:000000000000029c .LVL66
     /tmp/ccS5X0wb.s:265    .text:0000000000000104 .LVL27
     /tmp/ccS5X0wb.s:270    .text:000000000000010c .LVL28
     /tmp/ccS5X0wb.s:272    .text:0000000000000110 .LVL29
     /tmp/ccS5X0wb.s:295    .text:000000000000012c .LVL32
     /tmp/ccS5X0wb.s:318    .text:0000000000000148 .LVL35
     /tmp/ccS5X0wb.s:323    .text:000000000000014c .LVL36
     /tmp/ccS5X0wb.s:325    .text:0000000000000150 .LVL37
     /tmp/ccS5X0wb.s:330    .text:0000000000000154 .LVL38
     /tmp/ccS5X0wb.s:332    .text:0000000000000158 .LVL39
     /tmp/ccS5X0wb.s:337    .text:000000000000015c .LVL40
     /tmp/ccS5X0wb.s:339    .text:0000000000000160 .LVL41
     /tmp/ccS5X0wb.s:421    .text:00000000000001e4 .LVL50
     /tmp/ccS5X0wb.s:441    .text:0000000000000204 .LVL54
     /tmp/ccS5X0wb.s:471    .text:0000000000000220 .LVL55
     /tmp/ccS5X0wb.s:638    .text:000000000000037c .LVL79
     /tmp/ccS5X0wb.s:516    .text:0000000000000280 .LVL61
GAS LISTING /tmp/ccS5X0wb.s 			page 39


     /tmp/ccS5X0wb.s:643    .text:0000000000000384 .LVL80
     /tmp/ccS5X0wb.s:527    .text:000000000000028c .LVL63
     /tmp/ccS5X0wb.s:647    .text:0000000000000388 .LVL81
     /tmp/ccS5X0wb.s:558    .text:00000000000002b8 .LVL67
     /tmp/ccS5X0wb.s:563    .text:00000000000002c8 .LVL68
     /tmp/ccS5X0wb.s:596    .text:000000000000031c .LVL71
     /tmp/ccS5X0wb.s:599    .text:0000000000000320 .LVL72
     /tmp/ccS5X0wb.s:610    .text:0000000000000338 .LVL74
     /tmp/ccS5X0wb.s:613    .text:0000000000000340 .LVL75
     /tmp/ccS5X0wb.s:535    .text:0000000000000290 .LVL64
     /tmp/ccS5X0wb.s:541    .text:0000000000000298 .LVL65
     /tmp/ccS5X0wb.s:576    .text:00000000000002ec .LVL69
     /tmp/ccS5X0wb.s:580    .text:00000000000002f4 .LVL70
     /tmp/ccS5X0wb.s:903    .text._ZN3TCB12getTimeSliceEv:0000000000000000 .LVL100
     /tmp/ccS5X0wb.s:913    .text._ZN3TCB12getTimeSliceEv:0000000000000010 .LVL101
     /tmp/ccS5X0wb.s:938    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccS5X0wb.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccS5X0wb.s:930    .text:0000000000000480 .Letext0

UNDEFINED SYMBOLS
_ZN15MemoryAllocator7kmallocEm
_ZN15MemoryAllocator5kfreeEPv
_ZN3TCB12createThreadEPFvPvES0_Pm
_ZN3TCB7runningE
_ZN3TCB13releaseJoinedEv
_ZN3TCB5yieldEv
_ZN3TCB10threadJoinEPS_
_ZN9Scheduler10putToSleepEP3TCBm
__putc
console_handler
_ZN9Scheduler4wakeEv
_ZN3TCB16runningTimeSliceE
