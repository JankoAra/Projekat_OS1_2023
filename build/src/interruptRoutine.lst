GAS LISTING /tmp/cckK1eNY.s 			page 1


   1              		.file	"interruptRoutine.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.section	.rodata
   7              		.align	3
   8              	.LC0:
   9 0000 0A4E6570 		.string	"\nNepostojeci op code: "
   9      6F73746F 
   9      6A656369 
   9      206F7020 
   9      636F6465 
  10 0017 00       		.align	3
  11              	.LC1:
  12 0018 0A736361 		.string	"\nscause: "
  12      7573653A 
  12      2000
  13 0022 00000000 		.align	3
  13      0000
  14              	.LC2:
  15 0028 0A736570 		.string	"\nsepc: "
  15      633A2000 
  16              		.align	3
  17              	.LC3:
  18 0030 4E656B69 		.string	"Neki drugi prekid\n"
  18      20647275 
  18      67692070 
  18      72656B69 
  18      640A00
  19 0043 00000000 		.align	3
  19      00
  20              	.LC4:
  21 0048 0A477265 		.string	"\nGreska u prekidnoj rutini\n"
  21      736B6120 
  21      75207072 
  21      656B6964 
  21      6E6F6A20 
  22 0064 00000000 		.align	3
  23              	.LC5:
  24 0068 73636175 		.string	"scause: "
  24      73653A20 
  24      00
  25              		.text
  26              		.align	2
  27              		.globl	interruptRoutine
  29              	interruptRoutine:
  30              	.LFB49:
  31              		.file 1 "src/interruptRoutine.cpp"
   1:src/interruptRoutine.cpp **** //
   2:src/interruptRoutine.cpp **** // Created by os on 5/22/23.
   3:src/interruptRoutine.cpp **** //
   4:src/interruptRoutine.cpp **** 
   5:src/interruptRoutine.cpp **** #include "../lib/console.h"
   6:src/interruptRoutine.cpp **** #include "../lib/hw.h"
   7:src/interruptRoutine.cpp **** #include "../h/MemoryAllocator.hpp"
   8:src/interruptRoutine.cpp **** #include "../h/helper.hpp"
GAS LISTING /tmp/cckK1eNY.s 			page 2


   9:src/interruptRoutine.cpp **** #include "../h/Riscv.hpp"
  10:src/interruptRoutine.cpp **** #include "../h/syscall_c.hpp"
  11:src/interruptRoutine.cpp **** #include "../h/TCB.hpp"
  12:src/interruptRoutine.cpp **** #include "../h/Scheduler.hpp"
  13:src/interruptRoutine.cpp **** #include "../h/KSem.hpp"
  14:src/interruptRoutine.cpp **** #include "../h/KConsole.hpp"
  15:src/interruptRoutine.cpp **** #include "../h/KMemory.hpp"
  16:src/interruptRoutine.cpp **** #include "../test/printing.hpp"
  17:src/interruptRoutine.cpp **** 
  18:src/interruptRoutine.cpp **** //void printInteger(int i);
  19:src/interruptRoutine.cpp **** 
  20:src/interruptRoutine.cpp **** #pragma GCC optimize("O0")
  21:src/interruptRoutine.cpp **** extern "C" void interruptRoutine() {
  32              		.loc 1 21 36
  33              		.cfi_startproc
  34 0000 130101F8 		addi	sp,sp,-128
  35              		.cfi_def_cfa_offset 128
  36 0004 233C1106 		sd	ra,120(sp)
  37 0008 23388106 		sd	s0,112(sp)
  38 000c 23349106 		sd	s1,104(sp)
  39              		.cfi_offset 1, -8
  40              		.cfi_offset 8, -16
  41              		.cfi_offset 9, -24
  42 0010 13040108 		addi	s0,sp,128
  43              		.cfi_def_cfa 8, 0
  22:src/interruptRoutine.cpp ****     //bitni sistemski registri
  23:src/interruptRoutine.cpp ****     uint64 scause, sepc, sstatus;
  44              		.loc 1 23 5
  24:src/interruptRoutine.cpp ****     __asm__ volatile("csrr %[scause], scause":[scause] "=r"(scause): : "a5", "a0", "a1", "a2", "a3"
  45              		.loc 1 24 5
  46              		.loc 1 24 119 is_stmt 0
  47              	#APP
  48              	# 24 "src/interruptRoutine.cpp" 1
  25              	    __asm__ volatile("csrr %[sepc], sepc":[sepc] "=r"(sepc): : "a5", "a0", "a1", "a2", "a3", "a4", 
  49              		csrr t1, scause
  50              	# 0 "" 2
  51              	#NO_APP
  52 0018 233C64FC 		sd	t1,-40(s0)
  53              	.LVL0:
  54              		.loc 1 25 5 is_stmt 1
  55              		.loc 1 25 111 is_stmt 0
  56              	#APP
  57              	# 25 "src/interruptRoutine.cpp" 1
  26              	    __asm__ volatile("csrr %[stat], sstatus":[stat] "=r"(sstatus): : "a5", "a0", "a1", "a2", "a3", 
  58              		csrr t1, sepc
  59              	# 0 "" 2
  60              	.LVL1:
  61              	#NO_APP
  62 0020 233864FC 		sd	t1,-48(s0)
  63              	.LVL2:
  64              		.loc 1 26 5 is_stmt 1
  65              		.loc 1 26 117 is_stmt 0
  66              	#APP
  67              	# 26 "src/interruptRoutine.cpp" 1
  27              	
  68              		csrr t1, sstatus
  69              	# 0 "" 2
GAS LISTING /tmp/cckK1eNY.s 			page 3


  70              	.LVL3:
  71              	#NO_APP
  72 0028 233464FC 		sd	t1,-56(s0)
  73              	.LVL4:
  28:src/interruptRoutine.cpp ****     //argumenti preneti sistemskom pozivu
  29:src/interruptRoutine.cpp ****     uint64 a0, a1, a2, a3, a4, a5, a6, a7;
  74              		.loc 1 29 5 is_stmt 1
  30:src/interruptRoutine.cpp ****     __asm__ volatile("mv %[ax], a0":[ax] "=r"(a0): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7"
  75              		.loc 1 30 5
  76              		.loc 1 30 101 is_stmt 0
  77              	#APP
  78              	# 30 "src/interruptRoutine.cpp" 1
  31              	    __asm__ volatile("mv %[ax], a1":[ax] "=r"(a1): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7"
  79              		mv t1, a0
  80              	# 0 "" 2
  81              	.LVL5:
  82              	#NO_APP
  83 0030 233064FC 		sd	t1,-64(s0)
  84              	.LVL6:
  85              		.loc 1 31 5 is_stmt 1
  86              		.loc 1 31 101 is_stmt 0
  87              	#APP
  88              	# 31 "src/interruptRoutine.cpp" 1
  32              	    __asm__ volatile("mv %[ax], a2":[ax] "=r"(a2): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7"
  89              		mv t1, a1
  90              	# 0 "" 2
  91              	.LVL7:
  92              	#NO_APP
  93 0038 233C64FA 		sd	t1,-72(s0)
  94              	.LVL8:
  95              		.loc 1 32 5 is_stmt 1
  96              		.loc 1 32 101 is_stmt 0
  97              	#APP
  98              	# 32 "src/interruptRoutine.cpp" 1
  33              	    __asm__ volatile("mv %[ax], a3":[ax] "=r"(a3): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7"
  99              		mv t1, a2
 100              	# 0 "" 2
 101              	.LVL9:
 102              	#NO_APP
 103 0040 233864FA 		sd	t1,-80(s0)
 104              	.LVL10:
 105              		.loc 1 33 5 is_stmt 1
 106              		.loc 1 33 101 is_stmt 0
 107              	#APP
 108              	# 33 "src/interruptRoutine.cpp" 1
  34              	    __asm__ volatile("mv %[ax], a4":[ax] "=r"(a4): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7"
 109              		mv t1, a3
 110              	# 0 "" 2
 111              	.LVL11:
 112              	#NO_APP
 113 0048 233464FA 		sd	t1,-88(s0)
 114              	.LVL12:
 115              		.loc 1 34 5 is_stmt 1
 116              		.loc 1 34 101 is_stmt 0
 117              	#APP
 118              	# 34 "src/interruptRoutine.cpp" 1
  35              	    __asm__ volatile("mv %[ax], a5":[ax] "=r"(a5): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7"
GAS LISTING /tmp/cckK1eNY.s 			page 4


 119              		mv t1, a4
 120              	# 0 "" 2
 121              	.LVL13:
 122              	#NO_APP
 123 0050 233064FA 		sd	t1,-96(s0)
 124              	.LVL14:
 125              		.loc 1 35 5 is_stmt 1
 126              		.loc 1 35 101 is_stmt 0
 127              	#APP
 128              	# 35 "src/interruptRoutine.cpp" 1
  36              	    __asm__ volatile("mv %[ax], a6":[ax] "=r"(a6): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7"
 129              		mv t1, a5
 130              	# 0 "" 2
 131              	.LVL15:
 132              	#NO_APP
 133 0058 233C64F8 		sd	t1,-104(s0)
 134              	.LVL16:
 135              		.loc 1 36 5 is_stmt 1
 136              		.loc 1 36 101 is_stmt 0
 137              	#APP
 138              	# 36 "src/interruptRoutine.cpp" 1
  37              	    __asm__ volatile("mv %[ax], a7":[ax] "=r"(a7): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7"
 139              		mv t1, a6
 140              	# 0 "" 2
 141              	.LVL17:
 142              	#NO_APP
 143 0060 233864F8 		sd	t1,-112(s0)
 144              	.LVL18:
 145              		.loc 1 37 5 is_stmt 1
 146              		.loc 1 37 101 is_stmt 0
 147              	#APP
 148              	# 37 "src/interruptRoutine.cpp" 1
  38              	
 149              		mv t1, a7
 150              	# 0 "" 2
 151              	.LVL19:
 152              	#NO_APP
 153 0068 233464F8 		sd	t1,-120(s0)
 154              	.LVL20:
  39:src/interruptRoutine.cpp ****     if (scause == 0x9 || scause == 0x8) {
 155              		.loc 1 39 5 is_stmt 1
 156              	.LBB2:
 157 006c 033784FD 		ld	a4,-40(s0)
 158 0070 93079000 		li	a5,9
 159 0074 6308F700 		beq	a4,a5,.L2
 160              		.loc 1 39 23 is_stmt 0 discriminator 1
 161 0078 033784FD 		ld	a4,-40(s0)
 162 007c 93078000 		li	a5,8
 163 0080 631CF734 		bne	a4,a5,.L3
 164              	.L2:
  40:src/interruptRoutine.cpp ****         //prekid zbog poziva ecall
  41:src/interruptRoutine.cpp ****         switch (a0) {
 165              		.loc 1 41 9 is_stmt 1
 166 0084 033704FC 		ld	a4,-64(s0)
 167 0088 93071009 		li	a5,145
 168 008c 6300F72C 		beq	a4,a5,.L4
 169 0090 033704FC 		ld	a4,-64(s0)
GAS LISTING /tmp/cckK1eNY.s 			page 5


 170 0094 93071009 		li	a5,145
 171 0098 63E2E72C 		bgtu	a4,a5,.L5
 172 009c 033704FC 		ld	a4,-64(s0)
 173 00a0 93071008 		li	a5,129
 174 00a4 630AF728 		beq	a4,a5,.L6
 175 00a8 033704FC 		ld	a4,-64(s0)
 176 00ac 93071008 		li	a5,129
 177 00b0 63E6E72A 		bgtu	a4,a5,.L5
 178 00b4 033704FC 		ld	a4,-64(s0)
 179 00b8 93072004 		li	a5,66
 180 00bc 63E2E704 		bgtu	a4,a5,.L7
 181 00c0 833704FC 		ld	a5,-64(s0)
 182 00c4 638C0728 		beqz	a5,.L5
 183 00c8 033704FC 		ld	a4,-64(s0)
 184 00cc 93072004 		li	a5,66
 185 00d0 63E6E728 		bgtu	a4,a5,.L5
 186 00d4 833704FC 		ld	a5,-64(s0)
 187 00d8 13972700 		slli	a4,a5,2
 188 00dc 97070000 		lla	a5,.L9
 188      93870700 
 189 00e4 B307F700 		add	a5,a4,a5
 190 00e8 83A70700 		lw	a5,0(a5)
 191 00ec 1B870700 		sext.w	a4,a5
 192 00f0 97070000 		lla	a5,.L9
 192      93870700 
 193 00f8 B307F700 		add	a5,a4,a5
 194 00fc 67800700 		jr	a5
 195              		.section	.rodata
 196 0071 000000   		.align	2
 197              		.align	2
 198              	.L9:
 199 0074 00000000 		.word	.L5-.L9
 200 0078 00000000 		.word	.L21-.L9
 201 007c 00000000 		.word	.L20-.L9
 202 0080 00000000 		.word	.L5-.L9
 203 0084 00000000 		.word	.L5-.L9
 204 0088 00000000 		.word	.L5-.L9
 205 008c 00000000 		.word	.L5-.L9
 206 0090 00000000 		.word	.L5-.L9
 207 0094 00000000 		.word	.L5-.L9
 208 0098 00000000 		.word	.L5-.L9
 209 009c 00000000 		.word	.L5-.L9
 210 00a0 00000000 		.word	.L5-.L9
 211 00a4 00000000 		.word	.L5-.L9
 212 00a8 00000000 		.word	.L5-.L9
 213 00ac 00000000 		.word	.L5-.L9
 214 00b0 00000000 		.word	.L5-.L9
 215 00b4 00000000 		.word	.L5-.L9
 216 00b8 00000000 		.word	.L19-.L9
 217 00bc 00000000 		.word	.L18-.L9
 218 00c0 00000000 		.word	.L17-.L9
 219 00c4 00000000 		.word	.L16-.L9
 220 00c8 00000000 		.word	.L5-.L9
 221 00cc 00000000 		.word	.L5-.L9
 222 00d0 00000000 		.word	.L5-.L9
 223 00d4 00000000 		.word	.L5-.L9
 224 00d8 00000000 		.word	.L5-.L9
GAS LISTING /tmp/cckK1eNY.s 			page 6


 225 00dc 00000000 		.word	.L5-.L9
 226 00e0 00000000 		.word	.L5-.L9
 227 00e4 00000000 		.word	.L5-.L9
 228 00e8 00000000 		.word	.L5-.L9
 229 00ec 00000000 		.word	.L5-.L9
 230 00f0 00000000 		.word	.L5-.L9
 231 00f4 00000000 		.word	.L5-.L9
 232 00f8 00000000 		.word	.L15-.L9
 233 00fc 00000000 		.word	.L14-.L9
 234 0100 00000000 		.word	.L13-.L9
 235 0104 00000000 		.word	.L12-.L9
 236 0108 00000000 		.word	.L5-.L9
 237 010c 00000000 		.word	.L5-.L9
 238 0110 00000000 		.word	.L5-.L9
 239 0114 00000000 		.word	.L5-.L9
 240 0118 00000000 		.word	.L5-.L9
 241 011c 00000000 		.word	.L5-.L9
 242 0120 00000000 		.word	.L5-.L9
 243 0124 00000000 		.word	.L5-.L9
 244 0128 00000000 		.word	.L5-.L9
 245 012c 00000000 		.word	.L5-.L9
 246 0130 00000000 		.word	.L5-.L9
 247 0134 00000000 		.word	.L5-.L9
 248 0138 00000000 		.word	.L11-.L9
 249 013c 00000000 		.word	.L5-.L9
 250 0140 00000000 		.word	.L5-.L9
 251 0144 00000000 		.word	.L5-.L9
 252 0148 00000000 		.word	.L5-.L9
 253 014c 00000000 		.word	.L5-.L9
 254 0150 00000000 		.word	.L5-.L9
 255 0154 00000000 		.word	.L5-.L9
 256 0158 00000000 		.word	.L5-.L9
 257 015c 00000000 		.word	.L5-.L9
 258 0160 00000000 		.word	.L5-.L9
 259 0164 00000000 		.word	.L5-.L9
 260 0168 00000000 		.word	.L5-.L9
 261 016c 00000000 		.word	.L5-.L9
 262 0170 00000000 		.word	.L5-.L9
 263 0174 00000000 		.word	.L5-.L9
 264 0178 00000000 		.word	.L10-.L9
 265 017c 00000000 		.word	.L8-.L9
 266              		.text
 267              	.L7:
 268 0100 033704FC 		ld	a4,-64(s0)
 269 0104 93070008 		li	a5,128
 270 0108 6302F71E 		beq	a4,a5,.L22
 271 010c 6F000025 		j	.L5
 272              	.L21:
  42:src/interruptRoutine.cpp ****             case 0x01:
 273              		.loc 1 42 13
  43:src/interruptRoutine.cpp ****                 //mem_alloc
  44:src/interruptRoutine.cpp ****                 //a1 = broj blokova koje treba alocirati
  45:src/interruptRoutine.cpp ****                 //MemoryAllocator::kmalloc((size_t)a1 * MEM_BLOCK_SIZE);
  46:src/interruptRoutine.cpp ****                 KMemory::kmalloc((size_t)a1);
 274              		.loc 1 46 17
 275              		.loc 1 46 33 is_stmt 0
 276 0110 033584FB 		ld	a0,-72(s0)
GAS LISTING /tmp/cckK1eNY.s 			page 7


 277 0114 97000000 		call	_ZN7KMemory7kmallocEm@plt
 277      E7800000 
 278              	.LVL21:
  47:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 279              		.loc 1 47 17 is_stmt 1
 280              		.loc 1 47 50 is_stmt 0
 281              	#APP
 282              	# 47 "src/interruptRoutine.cpp" 1
  48              	                break;
 283              		sd a0, 80(s0)
 284              	# 0 "" 2
 285              		.loc 1 48 17 is_stmt 1
 286              	#NO_APP
 287 0120 6F008029 		j	.L23
 288              	.LVL22:
 289              	.L20:
  49:src/interruptRoutine.cpp ****             case 0x02:
 290              		.loc 1 49 13
  50:src/interruptRoutine.cpp ****                 //mem_free
  51:src/interruptRoutine.cpp ****                 //a1 = pokazivac na memoriju koju dealociramo, dobijen sa mem_alloc
  52:src/interruptRoutine.cpp ****                 //MemoryAllocator::kfree((void*)a1);
  53:src/interruptRoutine.cpp ****                 KMemory::kfree((void*)a1);
 291              		.loc 1 53 17
 292              		.loc 1 53 31 is_stmt 0
 293 0124 833784FB 		ld	a5,-72(s0)
 294 0128 13850700 		mv	a0,a5
 295 012c 97000000 		call	_ZN7KMemory5kfreeEPv@plt
 295      E7800000 
 296              	.LVL23:
  54:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 297              		.loc 1 54 17 is_stmt 1
 298              		.loc 1 54 50 is_stmt 0
 299              	#APP
 300              	# 54 "src/interruptRoutine.cpp" 1
  55              	                break;
 301              		sd a0, 80(s0)
 302              	# 0 "" 2
 303              		.loc 1 55 17 is_stmt 1
 304              	#NO_APP
 305 0138 6F000028 		j	.L23
 306              	.LVL24:
 307              	.L19:
  56:src/interruptRoutine.cpp ****             case 0x11:
 308              		.loc 1 56 13
  57:src/interruptRoutine.cpp ****                 //thread_create
  58:src/interruptRoutine.cpp ****                 //a1 = pokazivac na rucku u koju upisujemo identifikator niti(adresa u memoriji)
  59:src/interruptRoutine.cpp ****                 //a2 = pokazivac na funkciju koju nit treba da izvrsava
  60:src/interruptRoutine.cpp ****                 //a3 = argumenti funkcije koju nit treba da izvrsava
  61:src/interruptRoutine.cpp ****                 //a4 = poslednja lokacija alociranog steka(najniza adresa)
  62:src/interruptRoutine.cpp ****                 *((thread_t*)a1) = TCB::createThread((TCB::Body)a2, (void*)a3, (uint64*)a4);
 309              		.loc 1 62 17
 310              		.loc 1 62 53 is_stmt 0
 311 013c 833704FB 		ld	a5,-80(s0)
 312 0140 033784FA 		ld	a4,-88(s0)
 313 0144 833604FA 		ld	a3,-96(s0)
 314              		.loc 1 62 17
 315 0148 833484FB 		ld	s1,-72(s0)
GAS LISTING /tmp/cckK1eNY.s 			page 8


 316              		.loc 1 62 53
 317 014c 13860600 		mv	a2,a3
 318 0150 93050700 		mv	a1,a4
 319 0154 13850700 		mv	a0,a5
 320 0158 97000000 		call	_ZN3TCB12createThreadEPFvPvES0_Pm@plt
 320      E7800000 
 321              	.LVL25:
 322 0160 93070500 		mv	a5,a0
 323              		.loc 1 62 34
 324 0164 23B0F400 		sd	a5,0(s1)
  63:src/interruptRoutine.cpp ****                 TCB::start(*((thread_t*)a1));
 325              		.loc 1 63 17 is_stmt 1
 326              		.loc 1 63 27 is_stmt 0
 327 0168 833784FB 		ld	a5,-72(s0)
 328 016c 83B70700 		ld	a5,0(a5)
 329 0170 13850700 		mv	a0,a5
 330 0174 97000000 		call	_ZN3TCB5startEPS_@plt
 330      E7800000 
 331              	.LVL26:
  64:src/interruptRoutine.cpp ****                 if (*((thread_t*)a1) != nullptr) {
 332              		.loc 1 64 17 is_stmt 1
 333              		.loc 1 64 21 is_stmt 0
 334 017c 833784FB 		ld	a5,-72(s0)
 335 0180 83B70700 		ld	a5,0(a5)
 336              		.loc 1 64 17
 337 0184 63860700 		beqz	a5,.L24
  65:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, 0");
 338              		.loc 1 65 21 is_stmt 1
 339              		.loc 1 65 49 is_stmt 0
 340              	#APP
 341              	# 65 "src/interruptRoutine.cpp" 1
  66              	                } else {
 342              		li a0, 0
 343              	# 0 "" 2
 344              	#NO_APP
 345 018c 6F008000 		j	.L25
 346              	.L24:
  67:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, -1");
 347              		.loc 1 67 21 is_stmt 1
 348              		.loc 1 67 50 is_stmt 0
 349              	#APP
 350              	# 67 "src/interruptRoutine.cpp" 1
  68              	                }
 351              		li a0, -1
 352              	# 0 "" 2
 353              	#NO_APP
 354              	.L25:
  69:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 355              		.loc 1 69 17 is_stmt 1
 356              		.loc 1 69 50 is_stmt 0
 357              	#APP
 358              	# 69 "src/interruptRoutine.cpp" 1
  70              	                break;
 359              		sd a0, 80(s0)
 360              	# 0 "" 2
 361              		.loc 1 70 17 is_stmt 1
 362              	#NO_APP
GAS LISTING /tmp/cckK1eNY.s 			page 9


 363 0198 6F000022 		j	.L23
 364              	.LVL27:
 365              	.L18:
  71:src/interruptRoutine.cpp ****             case 0x12:
 366              		.loc 1 71 13
  72:src/interruptRoutine.cpp ****                 //thread_exit
  73:src/interruptRoutine.cpp ****                 //TCB::running->setFinished(true);
  74:src/interruptRoutine.cpp ****                 TCB::running->setStatus(TCB::FINISHED);
 367              		.loc 1 74 17
 368              		.loc 1 74 40 is_stmt 0
 369 019c 97070000 		la	a5,_ZN3TCB7runningE
 369      83B70700 
 370 01a4 83B70700 		ld	a5,0(a5)
 371 01a8 93055000 		li	a1,5
 372 01ac 13850700 		mv	a0,a5
 373 01b0 97000000 		call	_ZN3TCB9setStatusENS_12ThreadStatusE
 373      E7800000 
 374              	.LVL28:
  75:src/interruptRoutine.cpp ****                 TCB::releaseJoined();
 375              		.loc 1 75 17 is_stmt 1
 376              		.loc 1 75 35 is_stmt 0
 377 01b8 97000000 		call	_ZN3TCB13releaseJoinedEv@plt
 377      E7800000 
 378              	.LVL29:
  76:src/interruptRoutine.cpp ****                 TCB::yield();
 379              		.loc 1 76 17 is_stmt 1
 380              		.loc 1 76 27 is_stmt 0
 381 01c0 97000000 		call	_ZN3TCB5yieldEv@plt
 381      E7800000 
 382              	.LVL30:
  77:src/interruptRoutine.cpp ****                 break;
 383              		.loc 1 77 17 is_stmt 1
 384 01c8 6F00001F 		j	.L23
 385              	.LVL31:
 386              	.L17:
  78:src/interruptRoutine.cpp ****             case 0x13:
 387              		.loc 1 78 13
  79:src/interruptRoutine.cpp ****                 //thread_dispatch
  80:src/interruptRoutine.cpp ****                 TCB::yield();
 388              		.loc 1 80 17
 389              		.loc 1 80 27 is_stmt 0
 390 01cc 97000000 		call	_ZN3TCB5yieldEv@plt
 390      E7800000 
 391              	.LVL32:
  81:src/interruptRoutine.cpp ****                 break;
 392              		.loc 1 81 17 is_stmt 1
 393 01d4 6F00401E 		j	.L23
 394              	.LVL33:
 395              	.L16:
  82:src/interruptRoutine.cpp ****             case 0x14:
 396              		.loc 1 82 13
  83:src/interruptRoutine.cpp ****                 //thread_join
  84:src/interruptRoutine.cpp ****                 //a1 = rucka niti na koju tekuca nit treba da ceka
  85:src/interruptRoutine.cpp ****                 TCB::threadJoin((thread_t)a1);
 397              		.loc 1 85 17
 398              		.loc 1 85 32 is_stmt 0
 399 01d8 833784FB 		ld	a5,-72(s0)
GAS LISTING /tmp/cckK1eNY.s 			page 10


 400 01dc 13850700 		mv	a0,a5
 401 01e0 97000000 		call	_ZN3TCB10threadJoinEPS_@plt
 401      E7800000 
 402              	.LVL34:
  86:src/interruptRoutine.cpp ****                 TCB::yield();
 403              		.loc 1 86 17 is_stmt 1
 404              		.loc 1 86 27 is_stmt 0
 405 01e8 97000000 		call	_ZN3TCB5yieldEv@plt
 405      E7800000 
 406              	.LVL35:
  87:src/interruptRoutine.cpp ****                 break;
 407              		.loc 1 87 17 is_stmt 1
 408 01f0 6F00801C 		j	.L23
 409              	.LVL36:
 410              	.L15:
  88:src/interruptRoutine.cpp ****             case 0x21:
 411              		.loc 1 88 13
  89:src/interruptRoutine.cpp ****                 //sem_open
  90:src/interruptRoutine.cpp ****                 //a1 = pokazivac na rucku semafora, u koju se upisuje adresa semafora u memoriji
  91:src/interruptRoutine.cpp ****                 *((sem_t*)a1) = KSem::initSem((uint)a2);
 412              		.loc 1 91 17
 413              		.loc 1 91 46 is_stmt 0
 414 01f4 833704FB 		ld	a5,-80(s0)
 415 01f8 9B870700 		sext.w	a5,a5
 416              		.loc 1 91 17
 417 01fc 833484FB 		ld	s1,-72(s0)
 418              		.loc 1 91 46
 419 0200 13850700 		mv	a0,a5
 420 0204 97000000 		call	_ZN4KSem7initSemEj@plt
 420      E7800000 
 421              	.LVL37:
 422 020c 93070500 		mv	a5,a0
 423              		.loc 1 91 31
 424 0210 23B0F400 		sd	a5,0(s1)
  92:src/interruptRoutine.cpp ****                 if (*((sem_t*)a1) != nullptr) {
 425              		.loc 1 92 17 is_stmt 1
 426              		.loc 1 92 21 is_stmt 0
 427 0214 833784FB 		ld	a5,-72(s0)
 428 0218 83B70700 		ld	a5,0(a5)
 429              		.loc 1 92 17
 430 021c 63860700 		beqz	a5,.L26
  93:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, 0");
 431              		.loc 1 93 21 is_stmt 1
 432              		.loc 1 93 49 is_stmt 0
 433              	#APP
 434              	# 93 "src/interruptRoutine.cpp" 1
  94              	                } else {
 435              		li a0, 0
 436              	# 0 "" 2
 437              	#NO_APP
 438 0224 6F008000 		j	.L27
 439              	.L26:
  95:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, -1");
 440              		.loc 1 95 21 is_stmt 1
 441              		.loc 1 95 50 is_stmt 0
 442              	#APP
 443              	# 95 "src/interruptRoutine.cpp" 1
GAS LISTING /tmp/cckK1eNY.s 			page 11


  96              	                }
 444              		li a0, -1
 445              	# 0 "" 2
 446              	#NO_APP
 447              	.L27:
  97:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 448              		.loc 1 97 17 is_stmt 1
 449              		.loc 1 97 50 is_stmt 0
 450              	#APP
 451              	# 97 "src/interruptRoutine.cpp" 1
  98              	                break;
 452              		sd a0, 80(s0)
 453              	# 0 "" 2
 454              		.loc 1 98 17 is_stmt 1
 455              	#NO_APP
 456 0230 6F008018 		j	.L23
 457              	.LVL38:
 458              	.L14:
  99:src/interruptRoutine.cpp ****             case 0x22:
 459              		.loc 1 99 13
 100:src/interruptRoutine.cpp ****                 //sem_close
 101:src/interruptRoutine.cpp ****                 //a1 = rucka semafora
 102:src/interruptRoutine.cpp ****                 KSem::closeSem((sem_t)a1);
 460              		.loc 1 102 17
 461              		.loc 1 102 31 is_stmt 0
 462 0234 833784FB 		ld	a5,-72(s0)
 463 0238 13850700 		mv	a0,a5
 464 023c 97000000 		call	_ZN4KSem8closeSemEPS_@plt
 464      E7800000 
 465              	.LVL39:
 103:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 466              		.loc 1 103 17 is_stmt 1
 467              		.loc 1 103 50 is_stmt 0
 468              	#APP
 469              	# 103 "src/interruptRoutine.cpp" 1
 104              	                break;
 470              		sd a0, 80(s0)
 471              	# 0 "" 2
 472              		.loc 1 104 17 is_stmt 1
 473              	#NO_APP
 474 0248 6F000017 		j	.L23
 475              	.LVL40:
 476              	.L13:
 105:src/interruptRoutine.cpp ****             case 0x23:
 477              		.loc 1 105 13
 106:src/interruptRoutine.cpp ****                 //sem_wait
 107:src/interruptRoutine.cpp ****                 //a1 = rucka semafora
 108:src/interruptRoutine.cpp ****                 ((sem_t)a1)->wait();
 478              		.loc 1 108 17
 479              		.loc 1 108 34 is_stmt 0
 480 024c 833784FB 		ld	a5,-72(s0)
 481 0250 13850700 		mv	a0,a5
 482 0254 97000000 		call	_ZN4KSem4waitEv@plt
 482      E7800000 
 483              	.LVL41:
 109:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 484              		.loc 1 109 17 is_stmt 1
GAS LISTING /tmp/cckK1eNY.s 			page 12


 485              		.loc 1 109 50 is_stmt 0
 486              	#APP
 487              	# 109 "src/interruptRoutine.cpp" 1
 110              	                break;
 488              		sd a0, 80(s0)
 489              	# 0 "" 2
 490              		.loc 1 110 17 is_stmt 1
 491              	#NO_APP
 492 0260 6F008015 		j	.L23
 493              	.LVL42:
 494              	.L12:
 111:src/interruptRoutine.cpp ****             case 0x24:
 495              		.loc 1 111 13
 112:src/interruptRoutine.cpp ****                 //sem_signal
 113:src/interruptRoutine.cpp ****                 //a1 = rucka semafora
 114:src/interruptRoutine.cpp ****                 ((sem_t)a1)->signal();
 496              		.loc 1 114 17
 497              		.loc 1 114 36 is_stmt 0
 498 0264 833784FB 		ld	a5,-72(s0)
 499 0268 13850700 		mv	a0,a5
 500 026c 97000000 		call	_ZN4KSem6signalEv@plt
 500      E7800000 
 501              	.LVL43:
 115:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 502              		.loc 1 115 17 is_stmt 1
 503              		.loc 1 115 50 is_stmt 0
 504              	#APP
 505              	# 115 "src/interruptRoutine.cpp" 1
 116              	                break;
 506              		sd a0, 80(s0)
 507              	# 0 "" 2
 508              		.loc 1 116 17 is_stmt 1
 509              	#NO_APP
 510 0278 6F000014 		j	.L23
 511              	.LVL44:
 512              	.L11:
 117:src/interruptRoutine.cpp ****             case 0x31:
 513              		.loc 1 117 13
 118:src/interruptRoutine.cpp ****                 //time_sleep
 119:src/interruptRoutine.cpp ****                 //a1 = broj perioda tajmera na koji se uspavljuje tekuca nit
 120:src/interruptRoutine.cpp ****                 if ((time_t)a1 > 0) {
 514              		.loc 1 120 17
 515 027c 833784FB 		ld	a5,-72(s0)
 516 0280 63860700 		beqz	a5,.L28
 121:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, 0");
 517              		.loc 1 121 21
 518              		.loc 1 121 49 is_stmt 0
 519              	#APP
 520              	# 121 "src/interruptRoutine.cpp" 1
 122              	                } else {
 521              		li a0, 0
 522              	# 0 "" 2
 523              	#NO_APP
 524 0288 6F008000 		j	.L29
 525              	.L28:
 123:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, -1");
 526              		.loc 1 123 21 is_stmt 1
GAS LISTING /tmp/cckK1eNY.s 			page 13


 527              		.loc 1 123 50 is_stmt 0
 528              	#APP
 529              	# 123 "src/interruptRoutine.cpp" 1
 124              	                }
 530              		li a0, -1
 531              	# 0 "" 2
 532              	#NO_APP
 533              	.L29:
 125:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 534              		.loc 1 125 17 is_stmt 1
 535              		.loc 1 125 50 is_stmt 0
 536              	#APP
 537              	# 125 "src/interruptRoutine.cpp" 1
 126              	                if ((time_t)a1 > 0) {
 538              		sd a0, 80(s0)
 539              	# 0 "" 2
 540              		.loc 1 126 17 is_stmt 1
 541              	#NO_APP
 542 0294 833784FB 		ld	a5,-72(s0)
 543 0298 638E0710 		beqz	a5,.L39
 127:src/interruptRoutine.cpp ****                     Scheduler::putToSleep(TCB::running, (time_t)a1);
 544              		.loc 1 127 21
 545              		.loc 1 127 42 is_stmt 0
 546 029c 97070000 		la	a5,_ZN3TCB7runningE
 546      83B70700 
 547 02a4 83B70700 		ld	a5,0(a5)
 548 02a8 833584FB 		ld	a1,-72(s0)
 549 02ac 13850700 		mv	a0,a5
 550 02b0 97000000 		call	_ZN9Scheduler10putToSleepEP3TCBm@plt
 550      E7800000 
 551              	.LVL45:
 128:src/interruptRoutine.cpp ****                     TCB::yield();
 552              		.loc 1 128 21 is_stmt 1
 553              		.loc 1 128 31 is_stmt 0
 554 02b8 97000000 		call	_ZN3TCB5yieldEv@plt
 554      E7800000 
 555              	.LVL46:
 129:src/interruptRoutine.cpp ****                 }
 130:src/interruptRoutine.cpp ****                 break;
 556              		.loc 1 130 17 is_stmt 1
 557 02c0 6F00400F 		j	.L39
 558              	.LVL47:
 559              	.L10:
 131:src/interruptRoutine.cpp ****             case 0x41:
 560              		.loc 1 131 13
 132:src/interruptRoutine.cpp ****                 //getc
 133:src/interruptRoutine.cpp ****                 KConsole::kgetc();
 561              		.loc 1 133 17
 562              		.loc 1 133 32 is_stmt 0
 563 02c4 97000000 		call	_ZN8KConsole5kgetcEv@plt
 563      E7800000 
 564              	.LVL48:
 134:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 565              		.loc 1 134 17 is_stmt 1
 566              		.loc 1 134 50 is_stmt 0
 567              	#APP
 568              	# 134 "src/interruptRoutine.cpp" 1
GAS LISTING /tmp/cckK1eNY.s 			page 14


 135              	                break;
 569              		sd a0, 80(s0)
 570              	# 0 "" 2
 571              		.loc 1 135 17 is_stmt 1
 572              	#NO_APP
 573 02d0 6F00800E 		j	.L23
 574              	.LVL49:
 575              	.L8:
 136:src/interruptRoutine.cpp ****             case 0x42:
 576              		.loc 1 136 13
 137:src/interruptRoutine.cpp ****                 //putc
 138:src/interruptRoutine.cpp ****                 //a1 = karakter koji se upisuje u bafer za ispis na konzolu
 139:src/interruptRoutine.cpp ****                 KConsole::kputc((char)a1);
 577              		.loc 1 139 17
 578              		.loc 1 139 32 is_stmt 0
 579 02d4 833784FB 		ld	a5,-72(s0)
 580 02d8 93F7F70F 		andi	a5,a5,0xff
 581 02dc 13850700 		mv	a0,a5
 582 02e0 97000000 		call	_ZN8KConsole5kputcEc@plt
 582      E7800000 
 583              	.LVL50:
 140:src/interruptRoutine.cpp ****                 break;
 584              		.loc 1 140 17 is_stmt 1
 585 02e8 6F00000D 		j	.L23
 586              	.LVL51:
 587              	.L22:
 141:src/interruptRoutine.cpp ****             case 0x80:
 588              		.loc 1 141 13
 142:src/interruptRoutine.cpp ****                 //alloc thread
 143:src/interruptRoutine.cpp ****                 //a1 = pokazivac na rucku u koju upisujemo identifikator niti(adresa u memoriji)
 144:src/interruptRoutine.cpp ****                 //a2 = pokazivac na funkciju koju nit treba da izvrsava
 145:src/interruptRoutine.cpp ****                 //a3 = argumenti funkcije koju nit treba da izvrsava
 146:src/interruptRoutine.cpp ****                 //a4 = poslednja lokacija alociranog steka(najniza adresa)
 147:src/interruptRoutine.cpp ****                 *((thread_t*)a1) = TCB::createThread((TCB::Body)a2, (void*)a3, (uint64*)a4);
 589              		.loc 1 147 17
 590              		.loc 1 147 53 is_stmt 0
 591 02ec 833704FB 		ld	a5,-80(s0)
 592 02f0 033784FA 		ld	a4,-88(s0)
 593 02f4 833604FA 		ld	a3,-96(s0)
 594              		.loc 1 147 17
 595 02f8 833484FB 		ld	s1,-72(s0)
 596              		.loc 1 147 53
 597 02fc 13860600 		mv	a2,a3
 598 0300 93050700 		mv	a1,a4
 599 0304 13850700 		mv	a0,a5
 600 0308 97000000 		call	_ZN3TCB12createThreadEPFvPvES0_Pm@plt
 600      E7800000 
 601              	.LVL52:
 602 0310 93070500 		mv	a5,a0
 603              		.loc 1 147 34
 604 0314 23B0F400 		sd	a5,0(s1)
 148:src/interruptRoutine.cpp ****                 if (*((thread_t*)a1) != nullptr) {
 605              		.loc 1 148 17 is_stmt 1
 606              		.loc 1 148 21 is_stmt 0
 607 0318 833784FB 		ld	a5,-72(s0)
 608 031c 83B70700 		ld	a5,0(a5)
 609              		.loc 1 148 17
GAS LISTING /tmp/cckK1eNY.s 			page 15


 610 0320 63860700 		beqz	a5,.L31
 149:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, 0");
 611              		.loc 1 149 21 is_stmt 1
 612              		.loc 1 149 49 is_stmt 0
 613              	#APP
 614              	# 149 "src/interruptRoutine.cpp" 1
 150              	                } else {
 615              		li a0, 0
 616              	# 0 "" 2
 617              	#NO_APP
 618 0328 6F008000 		j	.L32
 619              	.L31:
 151:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, -1");
 620              		.loc 1 151 21 is_stmt 1
 621              		.loc 1 151 50 is_stmt 0
 622              	#APP
 623              	# 151 "src/interruptRoutine.cpp" 1
 152              	                }
 624              		li a0, -1
 625              	# 0 "" 2
 626              	#NO_APP
 627              	.L32:
 153:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 628              		.loc 1 153 17 is_stmt 1
 629              		.loc 1 153 50 is_stmt 0
 630              	#APP
 631              	# 153 "src/interruptRoutine.cpp" 1
 154              	                break;
 632              		sd a0, 80(s0)
 633              	# 0 "" 2
 634              		.loc 1 154 17 is_stmt 1
 635              	#NO_APP
 636 0334 6F004008 		j	.L23
 637              	.LVL53:
 638              	.L6:
 155:src/interruptRoutine.cpp ****             case 0x81:
 639              		.loc 1 155 13
 156:src/interruptRoutine.cpp ****                 //start thread
 157:src/interruptRoutine.cpp ****                 //a1 = rucka niti koja se stavlja u scheduler
 158:src/interruptRoutine.cpp ****                 Scheduler::put((thread_t)a1);
 640              		.loc 1 158 17
 641              		.loc 1 158 31 is_stmt 0
 642 0338 833784FB 		ld	a5,-72(s0)
 643 033c 13850700 		mv	a0,a5
 644 0340 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 644      E7800000 
 645              	.LVL54:
 159:src/interruptRoutine.cpp ****                 break;
 646              		.loc 1 159 17 is_stmt 1
 647 0348 6F000007 		j	.L23
 648              	.LVL55:
 649              	.L4:
 160:src/interruptRoutine.cpp ****             case 0x91:
 650              		.loc 1 160 13
 161:src/interruptRoutine.cpp ****                 //printInteger
 162:src/interruptRoutine.cpp ****                 //a1 = integer za ispis
 163:src/interruptRoutine.cpp ****                 kPrintInt(a1);
GAS LISTING /tmp/cckK1eNY.s 			page 16


 651              		.loc 1 163 17
 652              		.loc 1 163 26 is_stmt 0
 653 034c 033584FB 		ld	a0,-72(s0)
 654 0350 97000000 		call	_Z9kPrintIntm@plt
 654      E7800000 
 655              	.LVL56:
 164:src/interruptRoutine.cpp ****                 break;
 656              		.loc 1 164 17 is_stmt 1
 657 0358 6F000006 		j	.L23
 658              	.LVL57:
 659              	.L5:
 165:src/interruptRoutine.cpp ****             default:
 660              		.loc 1 165 13
 166:src/interruptRoutine.cpp ****                 printString("\nNepostojeci op code: ");
 661              		.loc 1 166 17
 662              		.loc 1 166 28 is_stmt 0
 663 035c 17050000 		lla	a0,.LC0
 663      13050500 
 664 0364 97000000 		call	_Z11printStringPKc@plt
 664      E7800000 
 665              	.LVL58:
 167:src/interruptRoutine.cpp ****                 kPrintInt(a0);
 666              		.loc 1 167 17 is_stmt 1
 667              		.loc 1 167 26 is_stmt 0
 668 036c 033504FC 		ld	a0,-64(s0)
 669 0370 97000000 		call	_Z9kPrintIntm@plt
 669      E7800000 
 670              	.LVL59:
 168:src/interruptRoutine.cpp ****                 printString("\nscause: ");
 671              		.loc 1 168 17 is_stmt 1
 672              		.loc 1 168 28 is_stmt 0
 673 0378 17050000 		lla	a0,.LC1
 673      13050500 
 674 0380 97000000 		call	_Z11printStringPKc@plt
 674      E7800000 
 675              	.LVL60:
 169:src/interruptRoutine.cpp ****                 kPrintInt(scause);
 676              		.loc 1 169 17 is_stmt 1
 677              		.loc 1 169 26 is_stmt 0
 678 0388 033584FD 		ld	a0,-40(s0)
 679 038c 97000000 		call	_Z9kPrintIntm@plt
 679      E7800000 
 680              	.LVL61:
 170:src/interruptRoutine.cpp ****                 printString("\nsepc: ");
 681              		.loc 1 170 17 is_stmt 1
 682              		.loc 1 170 28 is_stmt 0
 683 0394 17050000 		lla	a0,.LC2
 683      13050500 
 684 039c 97000000 		call	_Z11printStringPKc@plt
 684      E7800000 
 685              	.LVL62:
 171:src/interruptRoutine.cpp ****                 kPrintInt(sepc);
 686              		.loc 1 171 17 is_stmt 1
 687              		.loc 1 171 26 is_stmt 0
 688 03a4 033504FD 		ld	a0,-48(s0)
 689 03a8 97000000 		call	_Z9kPrintIntm@plt
 689      E7800000 
GAS LISTING /tmp/cckK1eNY.s 			page 17


 690              	.LVL63:
 172:src/interruptRoutine.cpp ****                 break;
 691              		.loc 1 172 17 is_stmt 1
 692 03b0 6F008000 		j	.L23
 693              	.L39:
 130:src/interruptRoutine.cpp ****             case 0x41:
 694              		.loc 1 130 17 is_stmt 0
 695 03b4 13000000 		nop
 696              	.L23:
 173:src/interruptRoutine.cpp ****         }
 174:src/interruptRoutine.cpp ****         //sepc pokazuje na ecall instrukciju, treba preci na sledecu instrukciju
 175:src/interruptRoutine.cpp ****         sepc += 4;
 697              		.loc 1 175 9 is_stmt 1
 698              		.loc 1 175 14 is_stmt 0
 699 03b8 833704FD 		ld	a5,-48(s0)
 700 03bc 93874700 		addi	a5,a5,4
 701 03c0 2338F4FC 		sd	a5,-48(s0)
 702              	.LVL64:
 176:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 703              		.loc 1 176 9 is_stmt 1
 704              		.loc 1 176 66 is_stmt 0
 705 03c4 833704FD 		ld	a5,-48(s0)
 706              	#APP
 707              	# 176 "src/interruptRoutine.cpp" 1
 177              	        __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 708              		csrw sepc, a5
 709              	# 0 "" 2
 710              		.loc 1 177 9 is_stmt 1
 711              		.loc 1 177 71 is_stmt 0
 712              	#NO_APP
 713 03cc 833784FC 		ld	a5,-56(s0)
 714              	.LVL65:
 715              	#APP
 716              	# 177 "src/interruptRoutine.cpp" 1
 178              	    } else if (scause == 0x8000000000000009) {
 717              		csrw sstatus, a5
 718              	# 0 "" 2
 719              	#NO_APP
 720              	.LBE2:
 179:src/interruptRoutine.cpp ****         //spoljasnji hardverski prekid (od konzole)
 180:src/interruptRoutine.cpp ****         uint64 irq = plic_claim();
 181:src/interruptRoutine.cpp ****         if (irq == CONSOLE_IRQ) {
 182:src/interruptRoutine.cpp ****             if (*KConsole::sr & CONSOLE_RX_STATUS_BIT) {
 183:src/interruptRoutine.cpp ****                 KConsole::placeInInput(*KConsole::dr);
 184:src/interruptRoutine.cpp ****             }
 185:src/interruptRoutine.cpp ****             //printString("\nobradjen prekid konzole\n");
 186:src/interruptRoutine.cpp ****         } else {
 187:src/interruptRoutine.cpp ****             printString("Neki drugi prekid\n");
 188:src/interruptRoutine.cpp ****         }
 189:src/interruptRoutine.cpp ****         plic_complete(irq);
 190:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 191:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 192:src/interruptRoutine.cpp ****         Riscv::mc_sip(Riscv::SIP_SEIP);
 193:src/interruptRoutine.cpp ****     } else if (scause == 0x8000000000000001) {
 194:src/interruptRoutine.cpp ****         //prekid od tajmera
 195:src/interruptRoutine.cpp ****         //printString("\nPrekid od tajmera\n");
 196:src/interruptRoutine.cpp ****         Scheduler::wake();
GAS LISTING /tmp/cckK1eNY.s 			page 18


 197:src/interruptRoutine.cpp ****         TCB::runningTimeSlice++;
 198:src/interruptRoutine.cpp ****         if (TCB::runningTimeSlice >= TCB::running->getTimeSlice()) {
 199:src/interruptRoutine.cpp ****             //printString("\nMenjam kontekst\n");
 200:src/interruptRoutine.cpp ****             TCB::yield();
 201:src/interruptRoutine.cpp ****             //TCB::runningTimeSlice = 0;
 202:src/interruptRoutine.cpp ****         }
 203:src/interruptRoutine.cpp **** 
 204:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 205:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 206:src/interruptRoutine.cpp ****         Riscv::mc_sip(Riscv::SIP_SSIP);
 207:src/interruptRoutine.cpp ****     } else {
 208:src/interruptRoutine.cpp ****         printString("\nGreska u prekidnoj rutini\n");
 209:src/interruptRoutine.cpp ****         printString("scause: ");
 210:src/interruptRoutine.cpp ****         kPrintInt(scause);
 211:src/interruptRoutine.cpp ****         printString("\nsepc: ");
 212:src/interruptRoutine.cpp ****         kPrintInt(sepc);
 213:src/interruptRoutine.cpp ****     }
 214:src/interruptRoutine.cpp **** }
 721              		.loc 1 214 1
 722 03d4 6F000019 		j	.L40
 723              	.LVL66:
 724              	.L3:
 725              	.LBB10:
 726              	.LBB3:
 178:src/interruptRoutine.cpp ****         //spoljasnji hardverski prekid (od konzole)
 727              		.loc 1 178 12 is_stmt 1
 728              	.LBB4:
 729 03d8 033784FD 		ld	a4,-40(s0)
 730              	.LVL67:
 731 03dc 9307F0FF 		li	a5,-1
 732 03e0 9397F703 		slli	a5,a5,63
 733 03e4 93879700 		addi	a5,a5,9
 734 03e8 631EF708 		bne	a4,a5,.L34
 735              	.LBB5:
 180:src/interruptRoutine.cpp ****         if (irq == CONSOLE_IRQ) {
 736              		.loc 1 180 9
 180:src/interruptRoutine.cpp ****         if (irq == CONSOLE_IRQ) {
 737              		.loc 1 180 32 is_stmt 0
 738 03ec 97000000 		call	plic_claim@plt
 738      E7800000 
 739              	.LVL68:
 740 03f4 93070500 		mv	a5,a0
 180:src/interruptRoutine.cpp ****         if (irq == CONSOLE_IRQ) {
 741              		.loc 1 180 33
 742 03f8 2330F4F8 		sd	a5,-128(s0)
 743              	.LVL69:
 181:src/interruptRoutine.cpp ****             if (*KConsole::sr & CONSOLE_RX_STATUS_BIT) {
 744              		.loc 1 181 9 is_stmt 1
 745 03fc 033704F8 		ld	a4,-128(s0)
 746 0400 9307A000 		li	a5,10
 747 0404 631EF702 		bne	a4,a5,.L35
 182:src/interruptRoutine.cpp ****                 KConsole::placeInInput(*KConsole::dr);
 748              		.loc 1 182 13
 182:src/interruptRoutine.cpp ****                 KConsole::placeInInput(*KConsole::dr);
 749              		.loc 1 182 17 is_stmt 0
 750 0408 97070000 		la	a5,_ZN8KConsole2srE
 750      83B70700 
GAS LISTING /tmp/cckK1eNY.s 			page 19


 751 0410 83B70700 		ld	a5,0(a5)
 752 0414 83C70700 		lbu	a5,0(a5)
 182:src/interruptRoutine.cpp ****                 KConsole::placeInInput(*KConsole::dr);
 753              		.loc 1 182 31
 754 0418 93F71700 		andi	a5,a5,1
 182:src/interruptRoutine.cpp ****                 KConsole::placeInInput(*KConsole::dr);
 755              		.loc 1 182 13
 756 041c 638A0702 		beqz	a5,.L36
 183:src/interruptRoutine.cpp ****             }
 757              		.loc 1 183 17 is_stmt 1
 183:src/interruptRoutine.cpp ****             }
 758              		.loc 1 183 39 is_stmt 0
 759 0420 97070000 		la	a5,_ZN8KConsole2drE
 759      83B70700 
 760 0428 83B70700 		ld	a5,0(a5)
 761 042c 83C70700 		lbu	a5,0(a5)
 762 0430 13850700 		mv	a0,a5
 763              	.LVL70:
 764 0434 97000000 		call	_ZN8KConsole12placeInInputEc@plt
 764      E7800000 
 765              	.LVL71:
 766 043c 6F004001 		j	.L36
 767              	.LVL72:
 768              	.L35:
 187:src/interruptRoutine.cpp ****         }
 769              		.loc 1 187 13 is_stmt 1
 187:src/interruptRoutine.cpp ****         }
 770              		.loc 1 187 24 is_stmt 0
 771 0440 17050000 		lla	a0,.LC3
 771      13050500 
 772              	.LVL73:
 773 0448 97000000 		call	_Z11printStringPKc@plt
 773      E7800000 
 774              	.LVL74:
 775              	.L36:
 189:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 776              		.loc 1 189 9 is_stmt 1
 189:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 777              		.loc 1 189 22 is_stmt 0
 778 0450 833704F8 		ld	a5,-128(s0)
 779 0454 9B870700 		sext.w	a5,a5
 780 0458 13850700 		mv	a0,a5
 781 045c 97000000 		call	plic_complete@plt
 781      E7800000 
 782              	.LVL75:
 190:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 783              		.loc 1 190 9 is_stmt 1
 190:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 784              		.loc 1 190 66 is_stmt 0
 785 0464 833704FD 		ld	a5,-48(s0)
 786              	#APP
 787              	# 190 "src/interruptRoutine.cpp" 1
 191:src/interruptRoutine.cpp ****         Riscv::mc_sip(Riscv::SIP_SEIP);
 788              		csrw sepc, a5
 789              	# 0 "" 2
 790              		.loc 1 191 9 is_stmt 1
 191:src/interruptRoutine.cpp ****         Riscv::mc_sip(Riscv::SIP_SEIP);
GAS LISTING /tmp/cckK1eNY.s 			page 20


 791              		.loc 1 191 71 is_stmt 0
 792              	#NO_APP
 793 046c 833784FC 		ld	a5,-56(s0)
 794              	#APP
 795              	# 191 "src/interruptRoutine.cpp" 1
 192:src/interruptRoutine.cpp ****     } else if (scause == 0x8000000000000001) {
 796              		csrw sstatus, a5
 797              	# 0 "" 2
 798              		.loc 1 192 9 is_stmt 1
 192:src/interruptRoutine.cpp ****     } else if (scause == 0x8000000000000001) {
 799              		.loc 1 192 22 is_stmt 0
 800              	#NO_APP
 801 0474 13050020 		li	a0,512
 802 0478 97000000 		call	_ZN5Riscv6mc_sipEm
 802      E7800000 
 803              	.LVL76:
 804              	.LBE5:
 805              	.LBE4:
 806              	.LBE3:
 807              	.LBE10:
 808              		.loc 1 214 1
 809 0480 6F00400E 		j	.L40
 810              	.LVL77:
 811              	.L34:
 812              	.LBB11:
 813              	.LBB8:
 814              	.LBB6:
 193:src/interruptRoutine.cpp ****         //prekid od tajmera
 815              		.loc 1 193 12 is_stmt 1
 816 0484 033784FD 		ld	a4,-40(s0)
 817 0488 9307F0FF 		li	a5,-1
 818 048c 9397F703 		slli	a5,a5,63
 819 0490 93871700 		addi	a5,a5,1
 820 0494 6314F708 		bne	a4,a5,.L37
 196:src/interruptRoutine.cpp ****         TCB::runningTimeSlice++;
 821              		.loc 1 196 9
 196:src/interruptRoutine.cpp ****         TCB::runningTimeSlice++;
 822              		.loc 1 196 24 is_stmt 0
 823 0498 97000000 		call	_ZN9Scheduler4wakeEv@plt
 823      E7800000 
 824              	.LVL78:
 197:src/interruptRoutine.cpp ****         if (TCB::runningTimeSlice >= TCB::running->getTimeSlice()) {
 825              		.loc 1 197 9 is_stmt 1
 197:src/interruptRoutine.cpp ****         if (TCB::runningTimeSlice >= TCB::running->getTimeSlice()) {
 826              		.loc 1 197 30 is_stmt 0
 827 04a0 97070000 		la	a5,_ZN3TCB16runningTimeSliceE
 827      83B70700 
 828 04a8 83B70700 		ld	a5,0(a5)
 829 04ac 13871700 		addi	a4,a5,1
 830 04b0 97070000 		la	a5,_ZN3TCB16runningTimeSliceE
 830      83B70700 
 831 04b8 23B0E700 		sd	a4,0(a5)
 198:src/interruptRoutine.cpp ****             //printString("\nMenjam kontekst\n");
 832              		.loc 1 198 9 is_stmt 1
 198:src/interruptRoutine.cpp ****             //printString("\nMenjam kontekst\n");
 833              		.loc 1 198 64 is_stmt 0
 834 04bc 97070000 		la	a5,_ZN3TCB7runningE
GAS LISTING /tmp/cckK1eNY.s 			page 21


 834      83B70700 
 835 04c4 83B70700 		ld	a5,0(a5)
 836 04c8 13850700 		mv	a0,a5
 837 04cc 97000000 		call	_ZN3TCB12getTimeSliceEv
 837      E7800000 
 838              	.LVL79:
 839 04d4 13070500 		mv	a4,a0
 198:src/interruptRoutine.cpp ****             //printString("\nMenjam kontekst\n");
 840              		.loc 1 198 35
 841 04d8 97070000 		la	a5,_ZN3TCB16runningTimeSliceE
 841      83B70700 
 842 04e0 83B70700 		ld	a5,0(a5)
 843 04e4 B3B7E700 		sgtu	a5,a4,a5
 844 04e8 93C71700 		xori	a5,a5,1
 845 04ec 93F7F70F 		andi	a5,a5,0xff
 198:src/interruptRoutine.cpp ****             //printString("\nMenjam kontekst\n");
 846              		.loc 1 198 9
 847 04f0 63860700 		beqz	a5,.L38
 200:src/interruptRoutine.cpp ****             //TCB::runningTimeSlice = 0;
 848              		.loc 1 200 13 is_stmt 1
 200:src/interruptRoutine.cpp ****             //TCB::runningTimeSlice = 0;
 849              		.loc 1 200 23 is_stmt 0
 850 04f4 97000000 		call	_ZN3TCB5yieldEv@plt
 850      E7800000 
 851              	.LVL80:
 852              	.L38:
 204:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 853              		.loc 1 204 9 is_stmt 1
 204:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 854              		.loc 1 204 66 is_stmt 0
 855 04fc 833704FD 		ld	a5,-48(s0)
 856              	#APP
 857              	# 204 "src/interruptRoutine.cpp" 1
 205:src/interruptRoutine.cpp ****         Riscv::mc_sip(Riscv::SIP_SSIP);
 858              		csrw sepc, a5
 859              	# 0 "" 2
 860              		.loc 1 205 9 is_stmt 1
 205:src/interruptRoutine.cpp ****         Riscv::mc_sip(Riscv::SIP_SSIP);
 861              		.loc 1 205 71 is_stmt 0
 862              	#NO_APP
 863 0504 833784FC 		ld	a5,-56(s0)
 864              	#APP
 865              	# 205 "src/interruptRoutine.cpp" 1
 206:src/interruptRoutine.cpp ****     } else {
 866              		csrw sstatus, a5
 867              	# 0 "" 2
 868              		.loc 1 206 9 is_stmt 1
 206:src/interruptRoutine.cpp ****     } else {
 869              		.loc 1 206 22 is_stmt 0
 870              	#NO_APP
 871 050c 13052000 		li	a0,2
 872 0510 97000000 		call	_ZN5Riscv6mc_sipEm
 872      E7800000 
 873              	.LVL81:
 874              	.LBE6:
 875              	.LBE8:
 876              	.LBE11:
GAS LISTING /tmp/cckK1eNY.s 			page 22


 877              		.loc 1 214 1
 878 0518 6F00C004 		j	.L40
 879              	.LVL82:
 880              	.L37:
 881              	.LBB12:
 882              	.LBB9:
 883              	.LBB7:
 208:src/interruptRoutine.cpp ****         printString("scause: ");
 884              		.loc 1 208 9 is_stmt 1
 208:src/interruptRoutine.cpp ****         printString("scause: ");
 885              		.loc 1 208 20 is_stmt 0
 886 051c 17050000 		lla	a0,.LC4
 886      13050500 
 887 0524 97000000 		call	_Z11printStringPKc@plt
 887      E7800000 
 888              	.LVL83:
 209:src/interruptRoutine.cpp ****         kPrintInt(scause);
 889              		.loc 1 209 9 is_stmt 1
 209:src/interruptRoutine.cpp ****         kPrintInt(scause);
 890              		.loc 1 209 20 is_stmt 0
 891 052c 17050000 		lla	a0,.LC5
 891      13050500 
 892 0534 97000000 		call	_Z11printStringPKc@plt
 892      E7800000 
 893              	.LVL84:
 210:src/interruptRoutine.cpp ****         printString("\nsepc: ");
 894              		.loc 1 210 9 is_stmt 1
 210:src/interruptRoutine.cpp ****         printString("\nsepc: ");
 895              		.loc 1 210 18 is_stmt 0
 896 053c 033584FD 		ld	a0,-40(s0)
 897 0540 97000000 		call	_Z9kPrintIntm@plt
 897      E7800000 
 898              	.LVL85:
 211:src/interruptRoutine.cpp ****         kPrintInt(sepc);
 899              		.loc 1 211 9 is_stmt 1
 211:src/interruptRoutine.cpp ****         kPrintInt(sepc);
 900              		.loc 1 211 20 is_stmt 0
 901 0548 17050000 		lla	a0,.LC2
 901      13050500 
 902 0550 97000000 		call	_Z11printStringPKc@plt
 902      E7800000 
 903              	.LVL86:
 212:src/interruptRoutine.cpp ****     }
 904              		.loc 1 212 9 is_stmt 1
 212:src/interruptRoutine.cpp ****     }
 905              		.loc 1 212 18 is_stmt 0
 906 0558 033504FD 		ld	a0,-48(s0)
 907 055c 97000000 		call	_Z9kPrintIntm@plt
 907      E7800000 
 908              	.LVL87:
 909              	.L40:
 910              	.LBE7:
 911              	.LBE9:
 912              	.LBE12:
 913              		.loc 1 214 1
 914 0564 13000000 		nop
 915 0568 83308107 		ld	ra,120(sp)
GAS LISTING /tmp/cckK1eNY.s 			page 23


 916              		.cfi_restore 1
 917 056c 03340107 		ld	s0,112(sp)
 918              		.cfi_restore 8
 919              		.cfi_def_cfa 2, 128
 920              	.LVL88:
 921 0570 83348106 		ld	s1,104(sp)
 922              		.cfi_restore 9
 923 0574 13010108 		addi	sp,sp,128
 924              		.cfi_def_cfa_offset 0
 925              	.LVL89:
 926 0578 67800000 		jr	ra
 927              		.cfi_endproc
 928              	.LFE49:
 930              		.section	.text._ZN5Riscv6mc_sipEm,"axG",@progbits,_ZN5Riscv6mc_sipEm,comdat
 931              		.align	2
 932              		.weak	_ZN5Riscv6mc_sipEm
 934              	_ZN5Riscv6mc_sipEm:
 935              	.LFB10:
 936              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 5/17/23.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJEKAT2023_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJEKAT2023_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** class Riscv {
  11:src/../h/Riscv.hpp **** public:
  12:src/../h/Riscv.hpp **** 
  13:src/../h/Riscv.hpp **** 	static void popSppSpie();
  14:src/../h/Riscv.hpp **** 
  15:src/../h/Riscv.hpp **** 	//stavljanje registara x3-x31 na stek
  16:src/../h/Riscv.hpp **** 	static void pushRegisters();    //implementacija u asm
  17:src/../h/Riscv.hpp **** 
  18:src/../h/Riscv.hpp **** 	//skidanje registara x3-x31 sa steka
  19:src/../h/Riscv.hpp **** 	static void popRegisters();     //implementacija u asm
  20:src/../h/Riscv.hpp **** 
  21:src/../h/Riscv.hpp **** 	//read scause
  22:src/../h/Riscv.hpp **** 	static uint64 r_scause();
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp **** 	//write scause
  25:src/../h/Riscv.hpp **** 	static void w_scause(uint64 scause);
  26:src/../h/Riscv.hpp **** 
  27:src/../h/Riscv.hpp **** 	//read sepc
  28:src/../h/Riscv.hpp **** 	static uint64 r_sepc();
  29:src/../h/Riscv.hpp **** 
  30:src/../h/Riscv.hpp **** 	//write sepc
  31:src/../h/Riscv.hpp **** 	static void w_sepc(uint64 sepc);
  32:src/../h/Riscv.hpp **** 
  33:src/../h/Riscv.hpp **** 	//read stvec
  34:src/../h/Riscv.hpp **** 	static uint64 r_stvec();
  35:src/../h/Riscv.hpp **** 
  36:src/../h/Riscv.hpp **** 	//write stvec
  37:src/../h/Riscv.hpp **** 	static void w_stvec(uint64 stvec);
  38:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/cckK1eNY.s 			page 24


  39:src/../h/Riscv.hpp **** 	enum BitMaskSip {
  40:src/../h/Riscv.hpp **** 		//postoji zahtev za softverski prekid
  41:src/../h/Riscv.hpp **** 		SIP_SSIP = (1 << 1),
  42:src/../h/Riscv.hpp **** 		//postoji prekid od tajmera
  43:src/../h/Riscv.hpp **** 		SIP_STIP = (1 << 5),
  44:src/../h/Riscv.hpp **** 		//postoji zahtev za spoljasnji hardverski prekid
  45:src/../h/Riscv.hpp **** 		SIP_SEIP = (1 << 9)
  46:src/../h/Riscv.hpp **** 	};
  47:src/../h/Riscv.hpp **** 
  48:src/../h/Riscv.hpp **** 	//mask set sip
  49:src/../h/Riscv.hpp **** 	static void ms_sip(uint64 mask);
  50:src/../h/Riscv.hpp **** 
  51:src/../h/Riscv.hpp **** 	//mask clear sip
  52:src/../h/Riscv.hpp **** 	static void mc_sip(uint64 mask);
  53:src/../h/Riscv.hpp **** 
  54:src/../h/Riscv.hpp **** 	//read sip
  55:src/../h/Riscv.hpp **** 	static uint64 r_sip();
  56:src/../h/Riscv.hpp **** 
  57:src/../h/Riscv.hpp **** 	//write sip
  58:src/../h/Riscv.hpp **** 	static void w_sip(uint64 sip);
  59:src/../h/Riscv.hpp **** 
  60:src/../h/Riscv.hpp **** 	//kada se pozove sret, SIE dobija vrednost SPIE, SPIE se postavlja na 1,
  61:src/../h/Riscv.hpp **** 	//rezim se postavlja na osnovu SPP bita, SPP se postavlja na 0
  62:src/../h/Riscv.hpp **** 	enum BitMaskSstatus {
  63:src/../h/Riscv.hpp **** 		//1 - dozvoljeni prekidi; 0- nedozvoljeni prekidi; igonrise se u korisnickom rezimu
  64:src/../h/Riscv.hpp **** 		SSTATUS_SIE = (1 << 1),
  65:src/../h/Riscv.hpp **** 		//prethodna vrednost bita SIE
  66:src/../h/Riscv.hpp **** 		SSTATUS_SPIE = (1 << 5),
  67:src/../h/Riscv.hpp **** 		//iz kog rezima se desio skok; 0 - iz korisnickog; 1 - iz sistemskog
  68:src/../h/Riscv.hpp **** 		SSTATUS_SPP = (1 << 8)
  69:src/../h/Riscv.hpp **** 	};
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp **** 	//mask set sstatus
  72:src/../h/Riscv.hpp **** 	static void ms_sstatus(uint64 mask);
  73:src/../h/Riscv.hpp **** 
  74:src/../h/Riscv.hpp **** 	//mask clear sstatus
  75:src/../h/Riscv.hpp **** 	static void mc_sstatus(uint64 mask);
  76:src/../h/Riscv.hpp **** 
  77:src/../h/Riscv.hpp **** 	//read sstatus
  78:src/../h/Riscv.hpp **** 	static uint64 r_sstatus();
  79:src/../h/Riscv.hpp **** 
  80:src/../h/Riscv.hpp **** 	//write sstatus
  81:src/../h/Riscv.hpp **** 	static void w_sstatus(uint64 sstatus);
  82:src/../h/Riscv.hpp **** 
  83:src/../h/Riscv.hpp **** 	//upisuje kod sistemskog poziva u registar a0
  84:src/../h/Riscv.hpp **** 	static void loadOpCode(uint64 opCode);
  85:src/../h/Riscv.hpp **** 
  86:src/../h/Riscv.hpp **** };
  87:src/../h/Riscv.hpp **** 
  88:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause() {
  89:src/../h/Riscv.hpp **** 	uint64 volatile scause;
  90:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[scause], scause": [scause] "=r"(scause));
  91:src/../h/Riscv.hpp **** 	return scause;
  92:src/../h/Riscv.hpp **** }
  93:src/../h/Riscv.hpp **** 
  94:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
  95:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw scause, %[scause]": :[scause] "r"(scause));
GAS LISTING /tmp/cckK1eNY.s 			page 25


  96:src/../h/Riscv.hpp **** }
  97:src/../h/Riscv.hpp **** 
  98:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc() {
  99:src/../h/Riscv.hpp **** 	uint64 volatile sepc;
 100:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[sepc], sepc": [sepc] "=r"(sepc));
 101:src/../h/Riscv.hpp **** 	return sepc;
 102:src/../h/Riscv.hpp **** }
 103:src/../h/Riscv.hpp **** 
 104:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
 105:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 106:src/../h/Riscv.hpp **** }
 107:src/../h/Riscv.hpp **** 
 108:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec() {
 109:src/../h/Riscv.hpp **** 	uint64 volatile stvec;
 110:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[stvec], stvec": [stvec] "=r"(stvec));
 111:src/../h/Riscv.hpp **** 	return stvec;
 112:src/../h/Riscv.hpp **** }
 113:src/../h/Riscv.hpp **** 
 114:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 115:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw stvec, %[stvec]": :[stvec] "r"(stvec));
 116:src/../h/Riscv.hpp **** }
 117:src/../h/Riscv.hpp **** 
 118:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 119:src/../h/Riscv.hpp **** 	__asm__ volatile("csrs sip, %[mask]": :[mask] "r"(mask));
 120:src/../h/Riscv.hpp **** }
 121:src/../h/Riscv.hpp **** 
 122:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 937              		.loc 2 122 40 is_stmt 1
 938              		.cfi_startproc
 939              	.LVL90:
 940 0000 130101FF 		addi	sp,sp,-16
 941              		.cfi_def_cfa_offset 16
 942 0004 23348100 		sd	s0,8(sp)
 943              		.cfi_offset 8, -8
 944 0008 13040101 		addi	s0,sp,16
 945              		.cfi_def_cfa 8, 0
 123:src/../h/Riscv.hpp **** 	__asm__ volatile("csrc sip, %[mask]": :[mask] "r"(mask));
 946              		.loc 2 123 2
 947              		.loc 2 123 58 is_stmt 0
 948              	#APP
 949              	# 123 "src/../h/Riscv.hpp" 1
 124              	}
 950              		csrc sip, a0
 951              	# 0 "" 2
 952              		.loc 2 124 1
 953              	#NO_APP
 954 0010 03348100 		ld	s0,8(sp)
 955              		.cfi_restore 8
 956              		.cfi_def_cfa 2, 16
 957 0014 13010101 		addi	sp,sp,16
 958              		.cfi_def_cfa_offset 0
 959 0018 67800000 		jr	ra
 960              		.cfi_endproc
 961              	.LFE10:
 963              		.section	.text._ZN3TCB9setStatusENS_12ThreadStatusE,"axG",@progbits,_ZN3TCB9setStatusENS_12ThreadS
 964              		.align	2
 965              		.weak	_ZN3TCB9setStatusENS_12ThreadStatusE
GAS LISTING /tmp/cckK1eNY.s 			page 26


 967              	_ZN3TCB9setStatusENS_12ThreadStatusE:
 968              	.LFB32:
 969              		.file 3 "src/../h/TCB.hpp"
   1:src/../h/TCB.hpp **** //
   2:src/../h/TCB.hpp **** // Created by os on 5/23/23.
   3:src/../h/TCB.hpp **** //
   4:src/../h/TCB.hpp **** 
   5:src/../h/TCB.hpp **** #ifndef PROJEKAT2023_TCB_HPP
   6:src/../h/TCB.hpp **** #define PROJEKAT2023_TCB_HPP
   7:src/../h/TCB.hpp **** 
   8:src/../h/TCB.hpp **** #include "../lib/hw.h"
   9:src/../h/TCB.hpp **** #include "../h/ThreadQueue.hpp"
  10:src/../h/TCB.hpp **** 
  11:src/../h/TCB.hpp **** class TCB {
  12:src/../h/TCB.hpp **** public:
  13:src/../h/TCB.hpp ****     friend class Scheduler;
  14:src/../h/TCB.hpp **** 
  15:src/../h/TCB.hpp ****     using Body = void (*)(void*);
  16:src/../h/TCB.hpp **** 
  17:src/../h/TCB.hpp ****     enum ThreadStatus {
  18:src/../h/TCB.hpp ****         CREATED, ACTIVE, BLOCKED, JOINING, SLEEPING, FINISHED
  19:src/../h/TCB.hpp ****     };
  20:src/../h/TCB.hpp **** 
  21:src/../h/TCB.hpp ****     void setStatus(ThreadStatus stat) { this->status = stat; }
 970              		.loc 3 21 10 is_stmt 1
 971              		.cfi_startproc
 972              	.LVL91:
 973 0000 130101FF 		addi	sp,sp,-16
 974              		.cfi_def_cfa_offset 16
 975 0004 23348100 		sd	s0,8(sp)
 976              		.cfi_offset 8, -8
 977 0008 13040101 		addi	s0,sp,16
 978              		.cfi_def_cfa 8, 0
 979              		.loc 3 21 41
 980              		.loc 3 21 54 is_stmt 0
 981 000c 232CB504 		sw	a1,88(a0)
 982              		.loc 3 21 62
 983 0010 03348100 		ld	s0,8(sp)
 984              		.cfi_restore 8
 985              		.cfi_def_cfa 2, 16
 986 0014 13010101 		addi	sp,sp,16
 987              		.cfi_def_cfa_offset 0
 988 0018 67800000 		jr	ra
 989              		.cfi_endproc
 990              	.LFE32:
 992              		.section	.text._ZN3TCB12getTimeSliceEv,"axG",@progbits,_ZN3TCB12getTimeSliceEv,comdat
 993              		.align	2
 994              		.weak	_ZN3TCB12getTimeSliceEv
 996              	_ZN3TCB12getTimeSliceEv:
 997              	.LFB34:
  22:src/../h/TCB.hpp **** 
  23:src/../h/TCB.hpp ****     ThreadStatus getStatus() { return this->status; }
  24:src/../h/TCB.hpp **** 
  25:src/../h/TCB.hpp ****     static TCB* createThread(Body function, void* args, uint64* stack);
  26:src/../h/TCB.hpp **** 
  27:src/../h/TCB.hpp ****     static void start(TCB* newTcb);
  28:src/../h/TCB.hpp **** 
GAS LISTING /tmp/cckK1eNY.s 			page 27


  29:src/../h/TCB.hpp **** //    bool isFinished() { return finished; }
  30:src/../h/TCB.hpp **** //
  31:src/../h/TCB.hpp **** //    void setFinished(bool finish) { this->finished = finish; }
  32:src/../h/TCB.hpp **** //
  33:src/../h/TCB.hpp **** //    bool isBlocked() { return blocked; }
  34:src/../h/TCB.hpp **** //
  35:src/../h/TCB.hpp **** //    void setBlocked(bool block) { this->blocked = block; }
  36:src/../h/TCB.hpp **** 
  37:src/../h/TCB.hpp ****     uint64 getTimeSlice() { return timeSlice; }
 998              		.loc 3 37 12 is_stmt 1
 999              		.cfi_startproc
 1000              	.LVL92:
 1001 0000 130101FF 		addi	sp,sp,-16
 1002              		.cfi_def_cfa_offset 16
 1003 0004 23348100 		sd	s0,8(sp)
 1004              		.cfi_offset 8, -8
 1005 0008 13040101 		addi	s0,sp,16
 1006              		.cfi_def_cfa 8, 0
 1007              		.loc 3 37 29
 1008              		.loc 3 37 47 is_stmt 0
 1009 000c 03358502 		ld	a0,40(a0)
 1010              	.LVL93:
 1011 0010 03348100 		ld	s0,8(sp)
 1012              		.cfi_restore 8
 1013              		.cfi_def_cfa 2, 16
 1014 0014 13010101 		addi	sp,sp,16
 1015              		.cfi_def_cfa_offset 0
 1016 0018 67800000 		jr	ra
 1017              		.cfi_endproc
 1018              	.LFE34:
 1020              		.text
 1021              	.Letext0:
 1022              		.file 4 "src/../lib/hw.h"
 1023              		.file 5 "src/../h/syscall_c.hpp"
 1024              		.file 6 "src/../h/KSem.hpp"
 1025              		.file 7 "src/../h/../h/ThreadQueue.hpp"
 1026              		.file 8 "src/../h/Scheduler.hpp"
 1027              		.file 9 "src/../h/KConsole.hpp"
 1028              		.file 10 "src/../h/KMemory.hpp"
 1029              		.file 11 "src/../h/../test/printing.hpp"
 1030              		.file 12 "src/../h/helper.hpp"
GAS LISTING /tmp/cckK1eNY.s 			page 28


DEFINED SYMBOLS
                            *ABS*:0000000000000000 interruptRoutine.cpp
     /tmp/cckK1eNY.s:29     .text:0000000000000000 interruptRoutine
     /tmp/cckK1eNY.s:33     .text:0000000000000000 .L0 
     /tmp/cckK1eNY.s:34     .text:0000000000000000 .L0 
     /tmp/cckK1eNY.s:35     .text:0000000000000004 .L0 
     /tmp/cckK1eNY.s:39     .text:0000000000000010 .L0 
     /tmp/cckK1eNY.s:40     .text:0000000000000010 .L0 
     /tmp/cckK1eNY.s:41     .text:0000000000000010 .L0 
     /tmp/cckK1eNY.s:43     .text:0000000000000014 .L0 
     /tmp/cckK1eNY.s:45     .text:0000000000000014 .L0 
     /tmp/cckK1eNY.s:46     .text:0000000000000014 .L0 
src/interruptRoutine.cpp:24     .text:0000000000000014 .L0 
     /tmp/cckK1eNY.s:55     .text:000000000000001c .L0 
src/interruptRoutine.cpp:25     .text:000000000000001c .L0 
     /tmp/cckK1eNY.s:65     .text:0000000000000024 .L0 
src/interruptRoutine.cpp:26     .text:0000000000000024 .L0 
     /tmp/cckK1eNY.s:75     .text:000000000000002c .L0 
     /tmp/cckK1eNY.s:76     .text:000000000000002c .L0 
src/interruptRoutine.cpp:30     .text:000000000000002c .L0 
     /tmp/cckK1eNY.s:86     .text:0000000000000034 .L0 
src/interruptRoutine.cpp:31     .text:0000000000000034 .L0 
     /tmp/cckK1eNY.s:96     .text:000000000000003c .L0 
src/interruptRoutine.cpp:32     .text:000000000000003c .L0 
     /tmp/cckK1eNY.s:106    .text:0000000000000044 .L0 
src/interruptRoutine.cpp:33     .text:0000000000000044 .L0 
     /tmp/cckK1eNY.s:116    .text:000000000000004c .L0 
src/interruptRoutine.cpp:34     .text:000000000000004c .L0 
     /tmp/cckK1eNY.s:126    .text:0000000000000054 .L0 
src/interruptRoutine.cpp:35     .text:0000000000000054 .L0 
     /tmp/cckK1eNY.s:136    .text:000000000000005c .L0 
src/interruptRoutine.cpp:36     .text:000000000000005c .L0 
     /tmp/cckK1eNY.s:146    .text:0000000000000064 .L0 
src/interruptRoutine.cpp:37     .text:0000000000000064 .L0 
     /tmp/cckK1eNY.s:157    .text:000000000000006c .L0 
     /tmp/cckK1eNY.s:161    .text:0000000000000078 .L0 
     /tmp/cckK1eNY.s:166    .text:0000000000000084 .L0 
     /tmp/cckK1eNY.s:274    .text:0000000000000110 .L0 
     /tmp/cckK1eNY.s:275    .text:0000000000000110 .L0 
     /tmp/cckK1eNY.s:276    .text:0000000000000110 .L0 
     /tmp/cckK1eNY.s:280    .text:000000000000011c .L0 
src/interruptRoutine.cpp:47     .text:000000000000011c .L0 
     /tmp/cckK1eNY.s:287    .text:0000000000000120 .L0 
     /tmp/cckK1eNY.s:291    .text:0000000000000124 .L0 
     /tmp/cckK1eNY.s:292    .text:0000000000000124 .L0 
     /tmp/cckK1eNY.s:293    .text:0000000000000124 .L0 
     /tmp/cckK1eNY.s:298    .text:0000000000000134 .L0 
src/interruptRoutine.cpp:54     .text:0000000000000134 .L0 
     /tmp/cckK1eNY.s:305    .text:0000000000000138 .L0 
     /tmp/cckK1eNY.s:309    .text:000000000000013c .L0 
     /tmp/cckK1eNY.s:310    .text:000000000000013c .L0 
     /tmp/cckK1eNY.s:311    .text:000000000000013c .L0 
     /tmp/cckK1eNY.s:315    .text:0000000000000148 .L0 
     /tmp/cckK1eNY.s:317    .text:000000000000014c .L0 
     /tmp/cckK1eNY.s:324    .text:0000000000000164 .L0 
     /tmp/cckK1eNY.s:326    .text:0000000000000168 .L0 
     /tmp/cckK1eNY.s:327    .text:0000000000000168 .L0 
GAS LISTING /tmp/cckK1eNY.s 			page 29


     /tmp/cckK1eNY.s:333    .text:000000000000017c .L0 
     /tmp/cckK1eNY.s:334    .text:000000000000017c .L0 
     /tmp/cckK1eNY.s:337    .text:0000000000000184 .L0 
     /tmp/cckK1eNY.s:339    .text:0000000000000188 .L0 
src/interruptRoutine.cpp:65     .text:0000000000000188 .L0 
     /tmp/cckK1eNY.s:348    .text:0000000000000190 .L0 
src/interruptRoutine.cpp:67     .text:0000000000000190 .L0 
     /tmp/cckK1eNY.s:356    .text:0000000000000194 .L0 
src/interruptRoutine.cpp:69     .text:0000000000000194 .L0 
     /tmp/cckK1eNY.s:363    .text:0000000000000198 .L0 
     /tmp/cckK1eNY.s:367    .text:000000000000019c .L0 
     /tmp/cckK1eNY.s:368    .text:000000000000019c .L0 
     /tmp/cckK1eNY.s:369    .text:000000000000019c .L0 
     /tmp/cckK1eNY.s:967    .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000000 _ZN3TCB9setStatusENS_12ThreadStatusE
     /tmp/cckK1eNY.s:376    .text:00000000000001b8 .L0 
     /tmp/cckK1eNY.s:377    .text:00000000000001b8 .L0 
     /tmp/cckK1eNY.s:380    .text:00000000000001c0 .L0 
     /tmp/cckK1eNY.s:381    .text:00000000000001c0 .L0 
     /tmp/cckK1eNY.s:384    .text:00000000000001c8 .L0 
     /tmp/cckK1eNY.s:388    .text:00000000000001cc .L0 
     /tmp/cckK1eNY.s:389    .text:00000000000001cc .L0 
     /tmp/cckK1eNY.s:390    .text:00000000000001cc .L0 
     /tmp/cckK1eNY.s:393    .text:00000000000001d4 .L0 
     /tmp/cckK1eNY.s:397    .text:00000000000001d8 .L0 
     /tmp/cckK1eNY.s:398    .text:00000000000001d8 .L0 
     /tmp/cckK1eNY.s:399    .text:00000000000001d8 .L0 
     /tmp/cckK1eNY.s:404    .text:00000000000001e8 .L0 
     /tmp/cckK1eNY.s:405    .text:00000000000001e8 .L0 
     /tmp/cckK1eNY.s:408    .text:00000000000001f0 .L0 
     /tmp/cckK1eNY.s:412    .text:00000000000001f4 .L0 
     /tmp/cckK1eNY.s:413    .text:00000000000001f4 .L0 
     /tmp/cckK1eNY.s:414    .text:00000000000001f4 .L0 
     /tmp/cckK1eNY.s:417    .text:00000000000001fc .L0 
     /tmp/cckK1eNY.s:419    .text:0000000000000200 .L0 
     /tmp/cckK1eNY.s:424    .text:0000000000000210 .L0 
     /tmp/cckK1eNY.s:426    .text:0000000000000214 .L0 
     /tmp/cckK1eNY.s:427    .text:0000000000000214 .L0 
     /tmp/cckK1eNY.s:430    .text:000000000000021c .L0 
     /tmp/cckK1eNY.s:432    .text:0000000000000220 .L0 
src/interruptRoutine.cpp:93     .text:0000000000000220 .L0 
     /tmp/cckK1eNY.s:441    .text:0000000000000228 .L0 
src/interruptRoutine.cpp:95     .text:0000000000000228 .L0 
     /tmp/cckK1eNY.s:449    .text:000000000000022c .L0 
src/interruptRoutine.cpp:97     .text:000000000000022c .L0 
     /tmp/cckK1eNY.s:456    .text:0000000000000230 .L0 
     /tmp/cckK1eNY.s:460    .text:0000000000000234 .L0 
     /tmp/cckK1eNY.s:461    .text:0000000000000234 .L0 
     /tmp/cckK1eNY.s:462    .text:0000000000000234 .L0 
     /tmp/cckK1eNY.s:467    .text:0000000000000244 .L0 
src/interruptRoutine.cpp:103    .text:0000000000000244 .L0 
     /tmp/cckK1eNY.s:474    .text:0000000000000248 .L0 
     /tmp/cckK1eNY.s:478    .text:000000000000024c .L0 
     /tmp/cckK1eNY.s:479    .text:000000000000024c .L0 
     /tmp/cckK1eNY.s:480    .text:000000000000024c .L0 
     /tmp/cckK1eNY.s:485    .text:000000000000025c .L0 
src/interruptRoutine.cpp:109    .text:000000000000025c .L0 
     /tmp/cckK1eNY.s:492    .text:0000000000000260 .L0 
GAS LISTING /tmp/cckK1eNY.s 			page 30


     /tmp/cckK1eNY.s:496    .text:0000000000000264 .L0 
     /tmp/cckK1eNY.s:497    .text:0000000000000264 .L0 
     /tmp/cckK1eNY.s:498    .text:0000000000000264 .L0 
     /tmp/cckK1eNY.s:503    .text:0000000000000274 .L0 
src/interruptRoutine.cpp:115    .text:0000000000000274 .L0 
     /tmp/cckK1eNY.s:510    .text:0000000000000278 .L0 
     /tmp/cckK1eNY.s:514    .text:000000000000027c .L0 
     /tmp/cckK1eNY.s:515    .text:000000000000027c .L0 
     /tmp/cckK1eNY.s:518    .text:0000000000000284 .L0 
src/interruptRoutine.cpp:121    .text:0000000000000284 .L0 
     /tmp/cckK1eNY.s:527    .text:000000000000028c .L0 
src/interruptRoutine.cpp:123    .text:000000000000028c .L0 
     /tmp/cckK1eNY.s:535    .text:0000000000000290 .L0 
src/interruptRoutine.cpp:125    .text:0000000000000290 .L0 
     /tmp/cckK1eNY.s:542    .text:0000000000000294 .L0 
     /tmp/cckK1eNY.s:545    .text:000000000000029c .L0 
     /tmp/cckK1eNY.s:546    .text:000000000000029c .L0 
     /tmp/cckK1eNY.s:553    .text:00000000000002b8 .L0 
     /tmp/cckK1eNY.s:554    .text:00000000000002b8 .L0 
     /tmp/cckK1eNY.s:557    .text:00000000000002c0 .L0 
     /tmp/cckK1eNY.s:561    .text:00000000000002c4 .L0 
     /tmp/cckK1eNY.s:562    .text:00000000000002c4 .L0 
     /tmp/cckK1eNY.s:563    .text:00000000000002c4 .L0 
     /tmp/cckK1eNY.s:566    .text:00000000000002cc .L0 
src/interruptRoutine.cpp:134    .text:00000000000002cc .L0 
     /tmp/cckK1eNY.s:573    .text:00000000000002d0 .L0 
     /tmp/cckK1eNY.s:577    .text:00000000000002d4 .L0 
     /tmp/cckK1eNY.s:578    .text:00000000000002d4 .L0 
     /tmp/cckK1eNY.s:579    .text:00000000000002d4 .L0 
     /tmp/cckK1eNY.s:585    .text:00000000000002e8 .L0 
     /tmp/cckK1eNY.s:589    .text:00000000000002ec .L0 
     /tmp/cckK1eNY.s:590    .text:00000000000002ec .L0 
     /tmp/cckK1eNY.s:591    .text:00000000000002ec .L0 
     /tmp/cckK1eNY.s:595    .text:00000000000002f8 .L0 
     /tmp/cckK1eNY.s:597    .text:00000000000002fc .L0 
     /tmp/cckK1eNY.s:604    .text:0000000000000314 .L0 
     /tmp/cckK1eNY.s:606    .text:0000000000000318 .L0 
     /tmp/cckK1eNY.s:607    .text:0000000000000318 .L0 
     /tmp/cckK1eNY.s:610    .text:0000000000000320 .L0 
     /tmp/cckK1eNY.s:612    .text:0000000000000324 .L0 
src/interruptRoutine.cpp:149    .text:0000000000000324 .L0 
     /tmp/cckK1eNY.s:621    .text:000000000000032c .L0 
src/interruptRoutine.cpp:151    .text:000000000000032c .L0 
     /tmp/cckK1eNY.s:629    .text:0000000000000330 .L0 
src/interruptRoutine.cpp:153    .text:0000000000000330 .L0 
     /tmp/cckK1eNY.s:636    .text:0000000000000334 .L0 
     /tmp/cckK1eNY.s:640    .text:0000000000000338 .L0 
     /tmp/cckK1eNY.s:641    .text:0000000000000338 .L0 
     /tmp/cckK1eNY.s:642    .text:0000000000000338 .L0 
     /tmp/cckK1eNY.s:647    .text:0000000000000348 .L0 
     /tmp/cckK1eNY.s:651    .text:000000000000034c .L0 
     /tmp/cckK1eNY.s:652    .text:000000000000034c .L0 
     /tmp/cckK1eNY.s:653    .text:000000000000034c .L0 
     /tmp/cckK1eNY.s:657    .text:0000000000000358 .L0 
     /tmp/cckK1eNY.s:661    .text:000000000000035c .L0 
     /tmp/cckK1eNY.s:662    .text:000000000000035c .L0 
     /tmp/cckK1eNY.s:663    .text:000000000000035c .L0 
GAS LISTING /tmp/cckK1eNY.s 			page 31


     /tmp/cckK1eNY.s:667    .text:000000000000036c .L0 
     /tmp/cckK1eNY.s:668    .text:000000000000036c .L0 
     /tmp/cckK1eNY.s:672    .text:0000000000000378 .L0 
     /tmp/cckK1eNY.s:673    .text:0000000000000378 .L0 
     /tmp/cckK1eNY.s:677    .text:0000000000000388 .L0 
     /tmp/cckK1eNY.s:678    .text:0000000000000388 .L0 
     /tmp/cckK1eNY.s:682    .text:0000000000000394 .L0 
     /tmp/cckK1eNY.s:683    .text:0000000000000394 .L0 
     /tmp/cckK1eNY.s:687    .text:00000000000003a4 .L0 
     /tmp/cckK1eNY.s:688    .text:00000000000003a4 .L0 
     /tmp/cckK1eNY.s:692    .text:00000000000003b0 .L0 
     /tmp/cckK1eNY.s:695    .text:00000000000003b4 .L0 
     /tmp/cckK1eNY.s:698    .text:00000000000003b8 .L0 
     /tmp/cckK1eNY.s:699    .text:00000000000003b8 .L0 
     /tmp/cckK1eNY.s:704    .text:00000000000003c4 .L0 
     /tmp/cckK1eNY.s:705    .text:00000000000003c4 .L0 
     /tmp/cckK1eNY.s:711    .text:00000000000003cc .L0 
     /tmp/cckK1eNY.s:713    .text:00000000000003cc .L0 
     /tmp/cckK1eNY.s:722    .text:00000000000003d4 .L0 
     /tmp/cckK1eNY.s:729    .text:00000000000003d8 .L0 
     /tmp/cckK1eNY.s:737    .text:00000000000003ec .L0 
     /tmp/cckK1eNY.s:738    .text:00000000000003ec .L0 
     /tmp/cckK1eNY.s:742    .text:00000000000003f8 .L0 
     /tmp/cckK1eNY.s:745    .text:00000000000003fc .L0 
     /tmp/cckK1eNY.s:749    .text:0000000000000408 .L0 
     /tmp/cckK1eNY.s:750    .text:0000000000000408 .L0 
     /tmp/cckK1eNY.s:754    .text:0000000000000418 .L0 
     /tmp/cckK1eNY.s:756    .text:000000000000041c .L0 
     /tmp/cckK1eNY.s:758    .text:0000000000000420 .L0 
     /tmp/cckK1eNY.s:759    .text:0000000000000420 .L0 
     /tmp/cckK1eNY.s:770    .text:0000000000000440 .L0 
     /tmp/cckK1eNY.s:771    .text:0000000000000440 .L0 
     /tmp/cckK1eNY.s:777    .text:0000000000000450 .L0 
     /tmp/cckK1eNY.s:778    .text:0000000000000450 .L0 
     /tmp/cckK1eNY.s:784    .text:0000000000000464 .L0 
     /tmp/cckK1eNY.s:785    .text:0000000000000464 .L0 
     /tmp/cckK1eNY.s:791    .text:000000000000046c .L0 
     /tmp/cckK1eNY.s:793    .text:000000000000046c .L0 
     /tmp/cckK1eNY.s:799    .text:0000000000000474 .L0 
     /tmp/cckK1eNY.s:801    .text:0000000000000474 .L0 
     /tmp/cckK1eNY.s:934    .text._ZN5Riscv6mc_sipEm:0000000000000000 _ZN5Riscv6mc_sipEm
     /tmp/cckK1eNY.s:809    .text:0000000000000480 .L0 
     /tmp/cckK1eNY.s:816    .text:0000000000000484 .L0 
     /tmp/cckK1eNY.s:822    .text:0000000000000498 .L0 
     /tmp/cckK1eNY.s:823    .text:0000000000000498 .L0 
     /tmp/cckK1eNY.s:826    .text:00000000000004a0 .L0 
     /tmp/cckK1eNY.s:827    .text:00000000000004a0 .L0 
     /tmp/cckK1eNY.s:833    .text:00000000000004bc .L0 
     /tmp/cckK1eNY.s:834    .text:00000000000004bc .L0 
     /tmp/cckK1eNY.s:996    .text._ZN3TCB12getTimeSliceEv:0000000000000000 _ZN3TCB12getTimeSliceEv
     /tmp/cckK1eNY.s:841    .text:00000000000004d8 .L0 
     /tmp/cckK1eNY.s:847    .text:00000000000004f0 .L0 
     /tmp/cckK1eNY.s:849    .text:00000000000004f4 .L0 
     /tmp/cckK1eNY.s:850    .text:00000000000004f4 .L0 
     /tmp/cckK1eNY.s:854    .text:00000000000004fc .L0 
     /tmp/cckK1eNY.s:855    .text:00000000000004fc .L0 
     /tmp/cckK1eNY.s:861    .text:0000000000000504 .L0 
GAS LISTING /tmp/cckK1eNY.s 			page 32


     /tmp/cckK1eNY.s:863    .text:0000000000000504 .L0 
     /tmp/cckK1eNY.s:869    .text:000000000000050c .L0 
     /tmp/cckK1eNY.s:871    .text:000000000000050c .L0 
     /tmp/cckK1eNY.s:878    .text:0000000000000518 .L0 
     /tmp/cckK1eNY.s:885    .text:000000000000051c .L0 
     /tmp/cckK1eNY.s:886    .text:000000000000051c .L0 
     /tmp/cckK1eNY.s:890    .text:000000000000052c .L0 
     /tmp/cckK1eNY.s:891    .text:000000000000052c .L0 
     /tmp/cckK1eNY.s:895    .text:000000000000053c .L0 
     /tmp/cckK1eNY.s:896    .text:000000000000053c .L0 
     /tmp/cckK1eNY.s:900    .text:0000000000000548 .L0 
     /tmp/cckK1eNY.s:901    .text:0000000000000548 .L0 
     /tmp/cckK1eNY.s:905    .text:0000000000000558 .L0 
     /tmp/cckK1eNY.s:906    .text:0000000000000558 .L0 
     /tmp/cckK1eNY.s:914    .text:0000000000000564 .L0 
     /tmp/cckK1eNY.s:916    .text:000000000000056c .L0 
     /tmp/cckK1eNY.s:918    .text:0000000000000570 .L0 
     /tmp/cckK1eNY.s:919    .text:0000000000000570 .L0 
     /tmp/cckK1eNY.s:922    .text:0000000000000574 .L0 
     /tmp/cckK1eNY.s:924    .text:0000000000000578 .L0 
     /tmp/cckK1eNY.s:927    .text:000000000000057c .L0 
     /tmp/cckK1eNY.s:938    .text._ZN5Riscv6mc_sipEm:0000000000000000 .L0 
     /tmp/cckK1eNY.s:940    .text._ZN5Riscv6mc_sipEm:0000000000000000 .L0 
     /tmp/cckK1eNY.s:941    .text._ZN5Riscv6mc_sipEm:0000000000000004 .L0 
     /tmp/cckK1eNY.s:943    .text._ZN5Riscv6mc_sipEm:0000000000000008 .L0 
     /tmp/cckK1eNY.s:945    .text._ZN5Riscv6mc_sipEm:000000000000000c .L0 
     /tmp/cckK1eNY.s:947    .text._ZN5Riscv6mc_sipEm:000000000000000c .L0 
  src/../h/Riscv.hpp:123    .text._ZN5Riscv6mc_sipEm:000000000000000c .L0 
     /tmp/cckK1eNY.s:954    .text._ZN5Riscv6mc_sipEm:0000000000000010 .L0 
     /tmp/cckK1eNY.s:955    .text._ZN5Riscv6mc_sipEm:0000000000000014 .L0 
     /tmp/cckK1eNY.s:956    .text._ZN5Riscv6mc_sipEm:0000000000000014 .L0 
     /tmp/cckK1eNY.s:958    .text._ZN5Riscv6mc_sipEm:0000000000000018 .L0 
     /tmp/cckK1eNY.s:960    .text._ZN5Riscv6mc_sipEm:000000000000001c .L0 
     /tmp/cckK1eNY.s:971    .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000000 .L0 
     /tmp/cckK1eNY.s:973    .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000000 .L0 
     /tmp/cckK1eNY.s:974    .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000004 .L0 
     /tmp/cckK1eNY.s:976    .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000008 .L0 
     /tmp/cckK1eNY.s:978    .text._ZN3TCB9setStatusENS_12ThreadStatusE:000000000000000c .L0 
     /tmp/cckK1eNY.s:980    .text._ZN3TCB9setStatusENS_12ThreadStatusE:000000000000000c .L0 
     /tmp/cckK1eNY.s:981    .text._ZN3TCB9setStatusENS_12ThreadStatusE:000000000000000c .L0 
     /tmp/cckK1eNY.s:983    .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000010 .L0 
     /tmp/cckK1eNY.s:984    .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000014 .L0 
     /tmp/cckK1eNY.s:985    .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000014 .L0 
     /tmp/cckK1eNY.s:987    .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000018 .L0 
     /tmp/cckK1eNY.s:989    .text._ZN3TCB9setStatusENS_12ThreadStatusE:000000000000001c .L0 
     /tmp/cckK1eNY.s:999    .text._ZN3TCB12getTimeSliceEv:0000000000000000 .L0 
     /tmp/cckK1eNY.s:1001   .text._ZN3TCB12getTimeSliceEv:0000000000000000 .L0 
     /tmp/cckK1eNY.s:1002   .text._ZN3TCB12getTimeSliceEv:0000000000000004 .L0 
     /tmp/cckK1eNY.s:1004   .text._ZN3TCB12getTimeSliceEv:0000000000000008 .L0 
     /tmp/cckK1eNY.s:1006   .text._ZN3TCB12getTimeSliceEv:000000000000000c .L0 
     /tmp/cckK1eNY.s:1008   .text._ZN3TCB12getTimeSliceEv:000000000000000c .L0 
     /tmp/cckK1eNY.s:1009   .text._ZN3TCB12getTimeSliceEv:000000000000000c .L0 
     /tmp/cckK1eNY.s:1012   .text._ZN3TCB12getTimeSliceEv:0000000000000014 .L0 
     /tmp/cckK1eNY.s:1013   .text._ZN3TCB12getTimeSliceEv:0000000000000014 .L0 
     /tmp/cckK1eNY.s:1015   .text._ZN3TCB12getTimeSliceEv:0000000000000018 .L0 
     /tmp/cckK1eNY.s:1017   .text._ZN3TCB12getTimeSliceEv:000000000000001c .L0 
     /tmp/cckK1eNY.s:1031   .text:000000000000057c .L0 
GAS LISTING /tmp/cckK1eNY.s 			page 33


     /tmp/cckK1eNY.s:963    .text._ZN5Riscv6mc_sipEm:000000000000001c .L0 
     /tmp/cckK1eNY.s:992    .text._ZN3TCB9setStatusENS_12ThreadStatusE:000000000000001c .L0 
     /tmp/cckK1eNY.s:1020   .text._ZN3TCB12getTimeSliceEv:000000000000001c .L0 
     /tmp/cckK1eNY.s:198    .rodata:0000000000000074 .L9
     /tmp/cckK1eNY.s:188    .text:00000000000000dc .L0 
     /tmp/cckK1eNY.s:192    .text:00000000000000f0 .L0 
     /tmp/cckK1eNY.s:369    .text:000000000000019c .L0 
     /tmp/cckK1eNY.s:546    .text:000000000000029c .L0 
     /tmp/cckK1eNY.s:8      .rodata:0000000000000000 .LC0
     /tmp/cckK1eNY.s:663    .text:000000000000035c .L0 
     /tmp/cckK1eNY.s:11     .rodata:0000000000000018 .LC1
     /tmp/cckK1eNY.s:673    .text:0000000000000378 .L0 
     /tmp/cckK1eNY.s:14     .rodata:0000000000000028 .LC2
     /tmp/cckK1eNY.s:683    .text:0000000000000394 .L0 
     /tmp/cckK1eNY.s:750    .text:0000000000000408 .L0 
     /tmp/cckK1eNY.s:759    .text:0000000000000420 .L0 
     /tmp/cckK1eNY.s:17     .rodata:0000000000000030 .LC3
     /tmp/cckK1eNY.s:771    .text:0000000000000440 .L0 
     /tmp/cckK1eNY.s:827    .text:00000000000004a0 .L0 
     /tmp/cckK1eNY.s:830    .text:00000000000004b0 .L0 
     /tmp/cckK1eNY.s:834    .text:00000000000004bc .L0 
     /tmp/cckK1eNY.s:841    .text:00000000000004d8 .L0 
     /tmp/cckK1eNY.s:20     .rodata:0000000000000048 .LC4
     /tmp/cckK1eNY.s:886    .text:000000000000051c .L0 
     /tmp/cckK1eNY.s:23     .rodata:0000000000000068 .LC5
     /tmp/cckK1eNY.s:891    .text:000000000000052c .L0 
     /tmp/cckK1eNY.s:901    .text:0000000000000548 .L0 
     /tmp/cckK1eNY.s:164    .text:0000000000000084 .L2
     /tmp/cckK1eNY.s:724    .text:00000000000003d8 .L3
     /tmp/cckK1eNY.s:649    .text:000000000000034c .L4
     /tmp/cckK1eNY.s:659    .text:000000000000035c .L5
     /tmp/cckK1eNY.s:638    .text:0000000000000338 .L6
     /tmp/cckK1eNY.s:267    .text:0000000000000100 .L7
     /tmp/cckK1eNY.s:587    .text:00000000000002ec .L22
     /tmp/cckK1eNY.s:696    .text:00000000000003b8 .L23
     /tmp/cckK1eNY.s:346    .text:0000000000000190 .L24
     /tmp/cckK1eNY.s:354    .text:0000000000000194 .L25
     /tmp/cckK1eNY.s:439    .text:0000000000000228 .L26
     /tmp/cckK1eNY.s:447    .text:000000000000022c .L27
     /tmp/cckK1eNY.s:525    .text:000000000000028c .L28
     /tmp/cckK1eNY.s:533    .text:0000000000000290 .L29
     /tmp/cckK1eNY.s:693    .text:00000000000003b4 .L39
     /tmp/cckK1eNY.s:619    .text:000000000000032c .L31
     /tmp/cckK1eNY.s:627    .text:0000000000000330 .L32
     /tmp/cckK1eNY.s:909    .text:0000000000000564 .L40
     /tmp/cckK1eNY.s:811    .text:0000000000000484 .L34
     /tmp/cckK1eNY.s:768    .text:0000000000000440 .L35
     /tmp/cckK1eNY.s:775    .text:0000000000000450 .L36
     /tmp/cckK1eNY.s:880    .text:000000000000051c .L37
     /tmp/cckK1eNY.s:852    .text:00000000000004fc .L38
     /tmp/cckK1eNY.s:272    .text:0000000000000110 .L21
     /tmp/cckK1eNY.s:289    .text:0000000000000124 .L20
     /tmp/cckK1eNY.s:307    .text:000000000000013c .L19
     /tmp/cckK1eNY.s:365    .text:000000000000019c .L18
     /tmp/cckK1eNY.s:386    .text:00000000000001cc .L17
     /tmp/cckK1eNY.s:395    .text:00000000000001d8 .L16
     /tmp/cckK1eNY.s:410    .text:00000000000001f4 .L15
GAS LISTING /tmp/cckK1eNY.s 			page 34


     /tmp/cckK1eNY.s:458    .text:0000000000000234 .L14
     /tmp/cckK1eNY.s:476    .text:000000000000024c .L13
     /tmp/cckK1eNY.s:494    .text:0000000000000264 .L12
     /tmp/cckK1eNY.s:512    .text:000000000000027c .L11
     /tmp/cckK1eNY.s:559    .text:00000000000002c4 .L10
     /tmp/cckK1eNY.s:575    .text:00000000000002d4 .L8
     /tmp/cckK1eNY.s:3070   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cckK1eNY.s:4987   .debug_str:0000000000000a23 .LASF219
     /tmp/cckK1eNY.s:4877   .debug_str:0000000000000725 .LASF220
     /tmp/cckK1eNY.s:4941   .debug_str:00000000000008fd .LASF221
     /tmp/cckK1eNY.s:4617   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/cckK1eNY.s:4629   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cckK1eNY.s:4909   .debug_str:0000000000000801 .LASF3
     /tmp/cckK1eNY.s:4781   .debug_str:000000000000047e .LASF0
     /tmp/cckK1eNY.s:4809   .debug_str:0000000000000536 .LASF1
     /tmp/cckK1eNY.s:4921   .debug_str:0000000000000868 .LASF2
     /tmp/cckK1eNY.s:4725   .debug_str:00000000000002c8 .LASF4
     /tmp/cckK1eNY.s:4933   .debug_str:00000000000008ce .LASF5
     /tmp/cckK1eNY.s:4793   .debug_str:00000000000004be .LASF6
     /tmp/cckK1eNY.s:4645   .debug_str:000000000000006c .LASF7
     /tmp/cckK1eNY.s:4885   .debug_str:0000000000000763 .LASF8
     /tmp/cckK1eNY.s:4875   .debug_str:0000000000000712 .LASF9
     /tmp/cckK1eNY.s:4797   .debug_str:00000000000004e2 .LASF10
     /tmp/cckK1eNY.s:4747   .debug_str:000000000000035d .LASF11
     /tmp/cckK1eNY.s:4761   .debug_str:00000000000003ca .LASF12
     /tmp/cckK1eNY.s:4673   .debug_str:0000000000000126 .LASF13
     /tmp/cckK1eNY.s:4733   .debug_str:000000000000030b .LASF14
     /tmp/cckK1eNY.s:4689   .debug_str:00000000000001a5 .LASF15
     /tmp/cckK1eNY.s:4671   .debug_str:0000000000000116 .LASF16
     /tmp/cckK1eNY.s:4963   .debug_str:000000000000098d .LASF17
     /tmp/cckK1eNY.s:4719   .debug_str:0000000000000282 .LASF18
     /tmp/cckK1eNY.s:4949   .debug_str:000000000000093e .LASF19
     /tmp/cckK1eNY.s:4829   .debug_str:00000000000005ad .LASF20
     /tmp/cckK1eNY.s:5039   .debug_str:0000000000000c20 .LASF59
     /tmp/cckK1eNY.s:4903   .debug_str:00000000000007e0 .LASF60
     /tmp/cckK1eNY.s:4817   .debug_str:0000000000000562 .LASF21
     /tmp/cckK1eNY.s:4651   .debug_str:0000000000000091 .LASF22
     /tmp/cckK1eNY.s:5055   .debug_str:0000000000000c8e .LASF23
     /tmp/cckK1eNY.s:4771   .debug_str:000000000000042b .LASF24
     /tmp/cckK1eNY.s:4777   .debug_str:0000000000000460 .LASF26
     /tmp/cckK1eNY.s:4939   .debug_str:00000000000008ef .LASF25
     /tmp/cckK1eNY.s:4723   .debug_str:00000000000002ad .LASF27
     /tmp/cckK1eNY.s:4785   .debug_str:0000000000000495 .LASF28
     /tmp/cckK1eNY.s:5049   .debug_str:0000000000000c67 .LASF29
     /tmp/cckK1eNY.s:5013   .debug_str:0000000000000b97 .LASF30
     /tmp/cckK1eNY.s:5005   .debug_str:0000000000000b4a .LASF32
     /tmp/cckK1eNY.s:4917   .debug_str:0000000000000854 .LASF34
     /tmp/cckK1eNY.s:4865   .debug_str:00000000000006c3 .LASF36
     /tmp/cckK1eNY.s:4893   .debug_str:0000000000000784 .LASF31
     /tmp/cckK1eNY.s:4899   .debug_str:00000000000007b5 .LASF33
     /tmp/cckK1eNY.s:4853   .debug_str:0000000000000667 .LASF35
     /tmp/cckK1eNY.s:4799   .debug_str:00000000000004f5 .LASF37
     /tmp/cckK1eNY.s:5051   .debug_str:0000000000000c81 .LASF38
     /tmp/cckK1eNY.s:4991   .debug_str:0000000000000aec .LASF39
     /tmp/cckK1eNY.s:4847   .debug_str:0000000000000644 .LASF40
     /tmp/cckK1eNY.s:4863   .debug_str:00000000000006af .LASF41
     /tmp/cckK1eNY.s:4959   .debug_str:0000000000000979 .LASF42
GAS LISTING /tmp/cckK1eNY.s 			page 35


     /tmp/cckK1eNY.s:4935   .debug_str:00000000000008d5 .LASF43
     /tmp/cckK1eNY.s:4937   .debug_str:00000000000008e8 .LASF44
     /tmp/cckK1eNY.s:4679   .debug_str:0000000000000144 .LASF45
     /tmp/cckK1eNY.s:4715   .debug_str:000000000000026f .LASF46
     /tmp/cckK1eNY.s:4775   .debug_str:000000000000044e .LASF47
     /tmp/cckK1eNY.s:4787   .debug_str:00000000000004a2 .LASF48
     /tmp/cckK1eNY.s:4703   .debug_str:000000000000022c .LASF49
     /tmp/cckK1eNY.s:4647   .debug_str:0000000000000073 .LASF50
     /tmp/cckK1eNY.s:4925   .debug_str:0000000000000880 .LASF51
     /tmp/cckK1eNY.s:4919   .debug_str:000000000000085d .LASF52
     /tmp/cckK1eNY.s:5077   .debug_str:0000000000000d51 .LASF53
     /tmp/cckK1eNY.s:5041   .debug_str:0000000000000c26 .LASF54
     /tmp/cckK1eNY.s:5057   .debug_str:0000000000000c97 .LASF55
     /tmp/cckK1eNY.s:5033   .debug_str:0000000000000bed .LASF56
     /tmp/cckK1eNY.s:4835   .debug_str:00000000000005cb .LASF57
     /tmp/cckK1eNY.s:4997   .debug_str:0000000000000b1a .LASF151
     /tmp/cckK1eNY.s:4695   .debug_str:00000000000001e5 .LASF152
     /tmp/cckK1eNY.s:5031   .debug_str:0000000000000be4 .LASF58
     /tmp/cckK1eNY.s:4947   .debug_str:0000000000000931 .LASF61
     /tmp/cckK1eNY.s:4891   .debug_str:000000000000077c .LASF62
     /tmp/cckK1eNY.s:4701   .debug_str:0000000000000225 .LASF63
     /tmp/cckK1eNY.s:4631   .debug_str:0000000000000000 .LASF64
     /tmp/cckK1eNY.s:4753   .debug_str:0000000000000389 .LASF65
     /tmp/cckK1eNY.s:4805   .debug_str:0000000000000525 .LASF66
     /tmp/cckK1eNY.s:4665   .debug_str:00000000000000ed .LASF67
     /tmp/cckK1eNY.s:4971   .debug_str:00000000000009c2 .LASF129
     /tmp/cckK1eNY.s:4677   .debug_str:000000000000013a .LASF68
     /tmp/cckK1eNY.s:4763   .debug_str:00000000000003d8 .LASF70
     /tmp/cckK1eNY.s:4905   .debug_str:00000000000007eb .LASF74
     /tmp/cckK1eNY.s:4825   .debug_str:000000000000058e .LASF76
     /tmp/cckK1eNY.s:4961   .debug_str:0000000000000980 .LASF69
     /tmp/cckK1eNY.s:5047   .debug_str:0000000000000c45 .LASF71
     /tmp/cckK1eNY.s:4869   .debug_str:00000000000006e3 .LASF222
     /tmp/cckK1eNY.s:5067   .debug_str:0000000000000d03 .LASF72
     /tmp/cckK1eNY.s:4795   .debug_str:00000000000004d0 .LASF73
     /tmp/cckK1eNY.s:4833   .debug_str:00000000000005be .LASF75
     /tmp/cckK1eNY.s:4901   .debug_str:00000000000007c8 .LASF77
     /tmp/cckK1eNY.s:4707   .debug_str:0000000000000247 .LASF78
     /tmp/cckK1eNY.s:4929   .debug_str:00000000000008a8 .LASF79
     /tmp/cckK1eNY.s:5011   .debug_str:0000000000000b8c .LASF80
     /tmp/cckK1eNY.s:4735   .debug_str:000000000000031a .LASF81
     /tmp/cckK1eNY.s:5081   .debug_str:0000000000000d76 .LASF82
     /tmp/cckK1eNY.s:4731   .debug_str:00000000000002f2 .LASF83
     /tmp/cckK1eNY.s:4815   .debug_str:000000000000055c .LASF84
     /tmp/cckK1eNY.s:4915   .debug_str:0000000000000844 .LASF85
     /tmp/cckK1eNY.s:4709   .debug_str:0000000000000254 .LASF86
     /tmp/cckK1eNY.s:4681   .debug_str:0000000000000157 .LASF87
     /tmp/cckK1eNY.s:5023   .debug_str:0000000000000bcb .LASF88
     /tmp/cckK1eNY.s:4653   .debug_str:000000000000009a .LASF89
     /tmp/cckK1eNY.s:4983   .debug_str:0000000000000a0b .LASF90
     /tmp/cckK1eNY.s:4667   .debug_str:00000000000000f6 .LASF91
     /tmp/cckK1eNY.s:5079   .debug_str:0000000000000d69 .LASF92
     /tmp/cckK1eNY.s:4757   .debug_str:00000000000003a9 .LASF93
     /tmp/cckK1eNY.s:4637   .debug_str:000000000000001e .LASF94
     /tmp/cckK1eNY.s:4861   .debug_str:00000000000006a2 .LASF95
     /tmp/cckK1eNY.s:5003   .debug_str:0000000000000b42 .LASF96
     /tmp/cckK1eNY.s:4669   .debug_str:0000000000000107 .LASF97
GAS LISTING /tmp/cckK1eNY.s 			page 36


     /tmp/cckK1eNY.s:5073   .debug_str:0000000000000d2a .LASF98
     /tmp/cckK1eNY.s:5015   .debug_str:0000000000000ba0 .LASF99
     /tmp/cckK1eNY.s:4993   .debug_str:0000000000000b00 .LASF100
     /tmp/cckK1eNY.s:4985   .debug_str:0000000000000a13 .LASF101
     /tmp/cckK1eNY.s:4871   .debug_str:00000000000006e8 .LASF102
     /tmp/cckK1eNY.s:4635   .debug_str:0000000000000011 .LASF103
     /tmp/cckK1eNY.s:4931   .debug_str:00000000000008c0 .LASF104
     /tmp/cckK1eNY.s:5027   .debug_str:0000000000000bd8 .LASF105
     /tmp/cckK1eNY.s:5065   .debug_str:0000000000000ced .LASF159
     /tmp/cckK1eNY.s:4697   .debug_str:00000000000001fd .LASF135
     /tmp/cckK1eNY.s:4641   .debug_str:0000000000000036 .LASF136
     /tmp/cckK1eNY.s:4749   .debug_str:000000000000036d .LASF106
     /tmp/cckK1eNY.s:4951   .debug_str:0000000000000954 .LASF107
     /tmp/cckK1eNY.s:4807   .debug_str:000000000000052e .LASF108
     /tmp/cckK1eNY.s:4859   .debug_str:000000000000068f .LASF109
     /tmp/cckK1eNY.s:4711   .debug_str:000000000000025d .LASF110
     /tmp/cckK1eNY.s:4927   .debug_str:0000000000000898 .LASF111
     /tmp/cckK1eNY.s:4967   .debug_str:00000000000009a6 .LASF112
     /tmp/cckK1eNY.s:4661   .debug_str:00000000000000d2 .LASF113
     /tmp/cckK1eNY.s:4705   .debug_str:000000000000023e .LASF114
     /tmp/cckK1eNY.s:4851   .debug_str:0000000000000651 .LASF115
     /tmp/cckK1eNY.s:4717   .debug_str:0000000000000275 .LASF116
     /tmp/cckK1eNY.s:4643   .debug_str:000000000000005e .LASF117
     /tmp/cckK1eNY.s:4779   .debug_str:0000000000000478 .LASF118
     /tmp/cckK1eNY.s:4979   .debug_str:00000000000009e9 .LASF119
     /tmp/cckK1eNY.s:4639   .debug_str:000000000000002e .LASF120
     /tmp/cckK1eNY.s:4649   .debug_str:000000000000007e .LASF121
     /tmp/cckK1eNY.s:5043   .debug_str:0000000000000c30 .LASF122
     /tmp/cckK1eNY.s:5009   .debug_str:0000000000000b7c .LASF123
     /tmp/cckK1eNY.s:4923   .debug_str:0000000000000876 .LASF124
     /tmp/cckK1eNY.s:4803   .debug_str:0000000000000515 .LASF125
     /tmp/cckK1eNY.s:4887   .debug_str:000000000000076a .LASF126
     /tmp/cckK1eNY.s:5021   .debug_str:0000000000000bc3 .LASF127
     /tmp/cckK1eNY.s:4855   .debug_str:000000000000066e .LASF128
     /tmp/cckK1eNY.s:5029   .debug_str:0000000000000bdf .LASF130
     /tmp/cckK1eNY.s:4999   .debug_str:0000000000000b25 .LASF131
     /tmp/cckK1eNY.s:4675   .debug_str:0000000000000135 .LASF132
     /tmp/cckK1eNY.s:4685   .debug_str:0000000000000174 .LASF133
     /tmp/cckK1eNY.s:4699   .debug_str:000000000000020b .LASF134
     /tmp/cckK1eNY.s:4691   .debug_str:00000000000001b5 .LASF137
     /tmp/cckK1eNY.s:4657   .debug_str:00000000000000c1 .LASF138
     /tmp/cckK1eNY.s:4841   .debug_str:000000000000060b .LASF139
     /tmp/cckK1eNY.s:4655   .debug_str:00000000000000ac .LASF140
     /tmp/cckK1eNY.s:4755   .debug_str:0000000000000391 .LASF141
     /tmp/cckK1eNY.s:5001   .debug_str:0000000000000b2a .LASF223
     /tmp/cckK1eNY.s:4973   .debug_str:00000000000009ca .LASF142
     /tmp/cckK1eNY.s:4819   .debug_str:000000000000056b .LASF143
     /tmp/cckK1eNY.s:4789   .debug_str:00000000000004a8 .LASF144
     /tmp/cckK1eNY.s:4727   .debug_str:00000000000002ce .LASF145
     /tmp/cckK1eNY.s:4813   .debug_str:0000000000000554 .LASF146
     /tmp/cckK1eNY.s:4843   .debug_str:0000000000000610 .LASF147
     /tmp/cckK1eNY.s:4663   .debug_str:00000000000000e4 .LASF148
     /tmp/cckK1eNY.s:4837   .debug_str:00000000000005e1 .LASF149
     /tmp/cckK1eNY.s:4693   .debug_str:00000000000001d0 .LASF150
     /tmp/cckK1eNY.s:5037   .debug_str:0000000000000c0a .LASF153
     /tmp/cckK1eNY.s:4745   .debug_str:0000000000000353 .LASF154
     /tmp/cckK1eNY.s:4957   .debug_str:0000000000000974 .LASF155
GAS LISTING /tmp/cckK1eNY.s 			page 37


     /tmp/cckK1eNY.s:4849   .debug_str:000000000000064c .LASF156
     /tmp/cckK1eNY.s:5071   .debug_str:0000000000000d1d .LASF157
     /tmp/cckK1eNY.s:5063   .debug_str:0000000000000cdb .LASF158
     /tmp/cckK1eNY.s:4773   .debug_str:0000000000000436 .LASF160
     /tmp/cckK1eNY.s:5069   .debug_str:0000000000000d09 .LASF224
     /tmp/cckK1eNY.s:4995   .debug_str:0000000000000b0a .LASF161
     /tmp/cckK1eNY.s:4911   .debug_str:0000000000000806 .LASF162
     /tmp/cckK1eNY.s:4659   .debug_str:00000000000000c7 .LASF163
     /tmp/cckK1eNY.s:5075   .debug_str:0000000000000d30 .LASF164
     /tmp/cckK1eNY.s:4821   .debug_str:0000000000000580 .LASF165
     /tmp/cckK1eNY.s:4969   .debug_str:00000000000009ad .LASF166
     /tmp/cckK1eNY.s:4823   .debug_str:0000000000000585 .LASF167
     /tmp/cckK1eNY.s:4943   .debug_str:000000000000091b .LASF168
     /tmp/cckK1eNY.s:4857   .debug_str:000000000000067a .LASF169
     /tmp/cckK1eNY.s:4879   .debug_str:000000000000073e .LASF170
     /tmp/cckK1eNY.s:4845   .debug_str:000000000000062f .LASF171
     /tmp/cckK1eNY.s:4981   .debug_str:00000000000009fa .LASF172
     /tmp/cckK1eNY.s:4965   .debug_str:0000000000000999 .LASF173
     /tmp/cckK1eNY.s:5007   .debug_str:0000000000000b5f .LASF174
     /tmp/cckK1eNY.s:5019   .debug_str:0000000000000bb1 .LASF175
     /tmp/cckK1eNY.s:5059   .debug_str:0000000000000cad .LASF176
     /tmp/cckK1eNY.s:4791   .debug_str:00000000000004b0 .LASF177
     /tmp/cckK1eNY.s:4873   .debug_str:00000000000006f4 .LASF178
     /tmp/cckK1eNY.s:4769   .debug_str:000000000000041e .LASF179
     /tmp/cckK1eNY.s:4913   .debug_str:0000000000000827 .LASF180
     /tmp/cckK1eNY.s:4955   .debug_str:0000000000000960 .LASF181
     /tmp/cckK1eNY.s:4759   .debug_str:00000000000003b5 .LASF182
     /tmp/cckK1eNY.s:4743   .debug_str:0000000000000345 .LASF183
     /tmp/cckK1eNY.s:4975   .debug_str:00000000000009d7 .LASF184
     /tmp/cckK1eNY.s:4907   .debug_str:00000000000007f5 .LASF185
     /tmp/cckK1eNY.s:4633   .debug_str:0000000000000008 .LASF225
     /tmp/cckK1eNY.s:5017   .debug_str:0000000000000ba5 .LASF186
     /tmp/cckK1eNY.s:4713   .debug_str:0000000000000262 .LASF187
     /tmp/cckK1eNY.s:4783   .debug_str:000000000000048b .LASF188
     /tmp/cckK1eNY.s:4889   .debug_str:0000000000000772 .LASF189
     /tmp/cckK1eNY.s:4811   .debug_str:0000000000000549 .LASF190
     /tmp/cckK1eNY.s:4867   .debug_str:00000000000006d8 .LASF191
     /tmp/cckK1eNY.s:4945   .debug_str:0000000000000921 .LASF192
     /tmp/cckK1eNY.s:4977   .debug_str:00000000000009e4 .LASF193
     /tmp/cckK1eNY.s:4729   .debug_str:00000000000002ea .LASF194
     /tmp/cckK1eNY.s:4765   .debug_str:00000000000003fd .LASF195
     /tmp/cckK1eNY.s:4895   .debug_str:000000000000078b .LASF196
     /tmp/cckK1eNY.s:4737   .debug_str:0000000000000332 .LASF197
     /tmp/cckK1eNY.s:4751   .debug_str:0000000000000373 .LASF198
     /tmp/cckK1eNY.s:4741   .debug_str:000000000000033f .LASF199
     /tmp/cckK1eNY.s:4721   .debug_str:0000000000000298 .LASF200
     /tmp/cckK1eNY.s:4831   .debug_str:00000000000005b2 .LASF201
     /tmp/cckK1eNY.s:5035   .debug_str:0000000000000bf7 .LASF202
     /tmp/cckK1eNY.s:4801   .debug_str:0000000000000508 .LASF203
     /tmp/cckK1eNY.s:4767   .debug_str:000000000000040e .LASF204
     /tmp/cckK1eNY.s:4897   .debug_str:00000000000007ab .LASF205
     /tmp/cckK1eNY.s:4883   .debug_str:0000000000000752 .LASF206
     /tmp/cckK1eNY.s:30     .text:0000000000000000 .LFB49
     /tmp/cckK1eNY.s:928    .text:000000000000057c .LFE49
     /tmp/cckK1eNY.s:4953   .debug_str:0000000000000959 .LASF207
     /tmp/cckK1eNY.s:4124   .debug_loc:0000000000000000 .LLST0
     /tmp/cckK1eNY.s:4989   .debug_str:0000000000000ae7 .LASF208
GAS LISTING /tmp/cckK1eNY.s 			page 38


     /tmp/cckK1eNY.s:4155   .debug_loc:0000000000000087 .LLST1
     /tmp/cckK1eNY.s:5045   .debug_str:0000000000000c3d .LASF209
     /tmp/cckK1eNY.s:4186   .debug_loc:000000000000010e .LLST2
     /tmp/cckK1eNY.s:4208   .debug_loc:000000000000016e .LLST3
     /tmp/cckK1eNY.s:4230   .debug_loc:00000000000001ce .LLST4
     /tmp/cckK1eNY.s:4252   .debug_loc:000000000000022f .LLST5
     /tmp/cckK1eNY.s:4274   .debug_loc:0000000000000290 .LLST6
     /tmp/cckK1eNY.s:4296   .debug_loc:00000000000002f1 .LLST7
     /tmp/cckK1eNY.s:4318   .debug_loc:0000000000000352 .LLST8
     /tmp/cckK1eNY.s:4340   .debug_loc:00000000000003b3 .LLST9
     /tmp/cckK1eNY.s:4362   .debug_loc:0000000000000414 .LLST10
     /tmp/cckK1eNY.s:735    .text:00000000000003ec .LBB5
     /tmp/cckK1eNY.s:804    .text:0000000000000480 .LBE5
     /tmp/cckK1eNY.s:4555   .debug_loc:000000000000076d .LLST11
     /tmp/cckK1eNY.s:739    .text:00000000000003f4 .LVL68
     /tmp/cckK1eNY.s:765    .text:000000000000043c .LVL71
     /tmp/cckK1eNY.s:774    .text:0000000000000450 .LVL74
     /tmp/cckK1eNY.s:782    .text:0000000000000464 .LVL75
     /tmp/cckK1eNY.s:803    .text:0000000000000480 .LVL76
     /tmp/cckK1eNY.s:278    .text:000000000000011c .LVL21
     /tmp/cckK1eNY.s:296    .text:0000000000000134 .LVL23
     /tmp/cckK1eNY.s:321    .text:0000000000000160 .LVL25
     /tmp/cckK1eNY.s:331    .text:000000000000017c .LVL26
     /tmp/cckK1eNY.s:374    .text:00000000000001b8 .LVL28
     /tmp/cckK1eNY.s:378    .text:00000000000001c0 .LVL29
     /tmp/cckK1eNY.s:382    .text:00000000000001c8 .LVL30
     /tmp/cckK1eNY.s:391    .text:00000000000001d4 .LVL32
     /tmp/cckK1eNY.s:402    .text:00000000000001e8 .LVL34
     /tmp/cckK1eNY.s:406    .text:00000000000001f0 .LVL35
     /tmp/cckK1eNY.s:421    .text:000000000000020c .LVL37
     /tmp/cckK1eNY.s:465    .text:0000000000000244 .LVL39
     /tmp/cckK1eNY.s:483    .text:000000000000025c .LVL41
     /tmp/cckK1eNY.s:501    .text:0000000000000274 .LVL43
     /tmp/cckK1eNY.s:551    .text:00000000000002b8 .LVL45
     /tmp/cckK1eNY.s:555    .text:00000000000002c0 .LVL46
     /tmp/cckK1eNY.s:564    .text:00000000000002cc .LVL48
     /tmp/cckK1eNY.s:583    .text:00000000000002e8 .LVL50
     /tmp/cckK1eNY.s:601    .text:0000000000000310 .LVL52
     /tmp/cckK1eNY.s:645    .text:0000000000000348 .LVL54
     /tmp/cckK1eNY.s:655    .text:0000000000000358 .LVL56
     /tmp/cckK1eNY.s:665    .text:000000000000036c .LVL58
     /tmp/cckK1eNY.s:670    .text:0000000000000378 .LVL59
     /tmp/cckK1eNY.s:675    .text:0000000000000388 .LVL60
     /tmp/cckK1eNY.s:680    .text:0000000000000394 .LVL61
     /tmp/cckK1eNY.s:685    .text:00000000000003a4 .LVL62
     /tmp/cckK1eNY.s:690    .text:00000000000003b0 .LVL63
     /tmp/cckK1eNY.s:824    .text:00000000000004a0 .LVL78
     /tmp/cckK1eNY.s:838    .text:00000000000004d4 .LVL79
     /tmp/cckK1eNY.s:851    .text:00000000000004fc .LVL80
     /tmp/cckK1eNY.s:873    .text:0000000000000518 .LVL81
     /tmp/cckK1eNY.s:888    .text:000000000000052c .LVL83
     /tmp/cckK1eNY.s:893    .text:000000000000053c .LVL84
     /tmp/cckK1eNY.s:898    .text:0000000000000548 .LVL85
     /tmp/cckK1eNY.s:903    .text:0000000000000558 .LVL86
     /tmp/cckK1eNY.s:908    .text:0000000000000564 .LVL87
     /tmp/cckK1eNY.s:997    .text._ZN3TCB12getTimeSliceEv:0000000000000000 .LFB34
     /tmp/cckK1eNY.s:1018   .text._ZN3TCB12getTimeSliceEv:000000000000001c .LFE34
GAS LISTING /tmp/cckK1eNY.s 			page 39


     /tmp/cckK1eNY.s:4739   .debug_str:000000000000033a .LASF210
     /tmp/cckK1eNY.s:4584   .debug_loc:00000000000007f1 .LLST12
     /tmp/cckK1eNY.s:968    .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000000 .LFB32
     /tmp/cckK1eNY.s:990    .text._ZN3TCB9setStatusENS_12ThreadStatusE:000000000000001c .LFE32
     /tmp/cckK1eNY.s:5053   .debug_str:0000000000000c89 .LASF211
     /tmp/cckK1eNY.s:935    .text._ZN5Riscv6mc_sipEm:0000000000000000 .LFB10
     /tmp/cckK1eNY.s:961    .text._ZN5Riscv6mc_sipEm:000000000000001c .LFE10
     /tmp/cckK1eNY.s:5025   .debug_str:0000000000000bd3 .LASF212
     /tmp/cckK1eNY.s:4827   .debug_str:00000000000005a2 .LASF213
     /tmp/cckK1eNY.s:4687   .debug_str:0000000000000192 .LASF214
     /tmp/cckK1eNY.s:5061   .debug_str:0000000000000ccf .LASF215
     /tmp/cckK1eNY.s:4881   .debug_str:0000000000000744 .LASF216
     /tmp/cckK1eNY.s:4839   .debug_str:00000000000005fd .LASF217
     /tmp/cckK1eNY.s:4683   .debug_str:000000000000016a .LASF218
     /tmp/cckK1eNY.s:53     .text:000000000000001c .LVL0
     /tmp/cckK1eNY.s:60     .text:0000000000000020 .LVL1
     /tmp/cckK1eNY.s:723    .text:00000000000003d8 .LVL66
     /tmp/cckK1eNY.s:730    .text:00000000000003dc .LVL67
     /tmp/cckK1eNY.s:920    .text:0000000000000570 .LVL88
     /tmp/cckK1eNY.s:925    .text:0000000000000578 .LVL89
     /tmp/cckK1eNY.s:63     .text:0000000000000024 .LVL2
     /tmp/cckK1eNY.s:70     .text:0000000000000028 .LVL3
     /tmp/cckK1eNY.s:702    .text:00000000000003c4 .LVL64
     /tmp/cckK1eNY.s:714    .text:00000000000003d0 .LVL65
     /tmp/cckK1eNY.s:73     .text:000000000000002c .LVL4
     /tmp/cckK1eNY.s:81     .text:0000000000000030 .LVL5
     /tmp/cckK1eNY.s:84     .text:0000000000000034 .LVL6
     /tmp/cckK1eNY.s:91     .text:0000000000000038 .LVL7
     /tmp/cckK1eNY.s:94     .text:000000000000003c .LVL8
     /tmp/cckK1eNY.s:101    .text:0000000000000040 .LVL9
     /tmp/cckK1eNY.s:104    .text:0000000000000044 .LVL10
     /tmp/cckK1eNY.s:111    .text:0000000000000048 .LVL11
     /tmp/cckK1eNY.s:114    .text:000000000000004c .LVL12
     /tmp/cckK1eNY.s:121    .text:0000000000000050 .LVL13
     /tmp/cckK1eNY.s:124    .text:0000000000000054 .LVL14
     /tmp/cckK1eNY.s:131    .text:0000000000000058 .LVL15
     /tmp/cckK1eNY.s:134    .text:000000000000005c .LVL16
     /tmp/cckK1eNY.s:141    .text:0000000000000060 .LVL17
     /tmp/cckK1eNY.s:144    .text:0000000000000064 .LVL18
     /tmp/cckK1eNY.s:151    .text:0000000000000068 .LVL19
     /tmp/cckK1eNY.s:154    .text:000000000000006c .LVL20
     /tmp/cckK1eNY.s:288    .text:0000000000000124 .LVL22
     /tmp/cckK1eNY.s:306    .text:000000000000013c .LVL24
     /tmp/cckK1eNY.s:364    .text:000000000000019c .LVL27
     /tmp/cckK1eNY.s:385    .text:00000000000001cc .LVL31
     /tmp/cckK1eNY.s:394    .text:00000000000001d8 .LVL33
     /tmp/cckK1eNY.s:409    .text:00000000000001f4 .LVL36
     /tmp/cckK1eNY.s:457    .text:0000000000000234 .LVL38
     /tmp/cckK1eNY.s:475    .text:000000000000024c .LVL40
     /tmp/cckK1eNY.s:493    .text:0000000000000264 .LVL42
     /tmp/cckK1eNY.s:511    .text:000000000000027c .LVL44
     /tmp/cckK1eNY.s:558    .text:00000000000002c4 .LVL47
     /tmp/cckK1eNY.s:574    .text:00000000000002d4 .LVL49
     /tmp/cckK1eNY.s:586    .text:00000000000002ec .LVL51
     /tmp/cckK1eNY.s:637    .text:0000000000000338 .LVL53
     /tmp/cckK1eNY.s:648    .text:000000000000034c .LVL55
     /tmp/cckK1eNY.s:658    .text:000000000000035c .LVL57
GAS LISTING /tmp/cckK1eNY.s 			page 40


     /tmp/cckK1eNY.s:810    .text:0000000000000484 .LVL77
     /tmp/cckK1eNY.s:879    .text:000000000000051c .LVL82
     /tmp/cckK1eNY.s:743    .text:00000000000003fc .LVL69
     /tmp/cckK1eNY.s:763    .text:0000000000000434 .LVL70
     /tmp/cckK1eNY.s:767    .text:0000000000000440 .LVL72
     /tmp/cckK1eNY.s:772    .text:0000000000000448 .LVL73
     /tmp/cckK1eNY.s:1000   .text._ZN3TCB12getTimeSliceEv:0000000000000000 .LVL92
     /tmp/cckK1eNY.s:1010   .text._ZN3TCB12getTimeSliceEv:0000000000000010 .LVL93
     /tmp/cckK1eNY.s:1032   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/cckK1eNY.s:5      .text:0000000000000000 .Ltext0
     /tmp/cckK1eNY.s:1021   .text:000000000000057c .Letext0

UNDEFINED SYMBOLS
_ZN7KMemory7kmallocEm
_ZN7KMemory5kfreeEPv
_ZN3TCB12createThreadEPFvPvES0_Pm
_ZN3TCB5startEPS_
_ZN3TCB7runningE
_ZN3TCB13releaseJoinedEv
_ZN3TCB5yieldEv
_ZN3TCB10threadJoinEPS_
_ZN4KSem7initSemEj
_ZN4KSem8closeSemEPS_
_ZN4KSem4waitEv
_ZN4KSem6signalEv
_ZN9Scheduler10putToSleepEP3TCBm
_ZN8KConsole5kgetcEv
_ZN8KConsole5kputcEc
_ZN9Scheduler3putEP3TCB
_Z9kPrintIntm
_Z11printStringPKc
plic_claim
_ZN8KConsole2srE
_ZN8KConsole2drE
_ZN8KConsole12placeInInputEc
plic_complete
_ZN9Scheduler4wakeEv
_ZN3TCB16runningTimeSliceE
