GAS LISTING /tmp/ccyEvixc.s 			page 1


   1              		.file	"interruptRoutine.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.section	.text._ZN4KSemD2Ev,"axG",@progbits,_ZN4KSemD5Ev,comdat
   7              		.align	2
   8              		.weak	_ZN4KSemD2Ev
  10              	_ZN4KSemD2Ev:
  11              	.LFB58:
  12              		.file 1 "src/../h/KSem.hpp"
   1:src/../h/KSem.hpp **** //
   2:src/../h/KSem.hpp **** // Created by os on 6/4/23.
   3:src/../h/KSem.hpp **** //
   4:src/../h/KSem.hpp **** 
   5:src/../h/KSem.hpp **** #ifndef PROJEKAT2023_KSEM_HPP
   6:src/../h/KSem.hpp **** #define PROJEKAT2023_KSEM_HPP
   7:src/../h/KSem.hpp **** 
   8:src/../h/KSem.hpp **** #include "../h/ThreadQueue.hpp"
   9:src/../h/KSem.hpp **** 
  10:src/../h/KSem.hpp **** //klasa napravljena po uzoru na semafor u skolskom jezgru
  11:src/../h/KSem.hpp **** class KSem {
  13              		.loc 1 11 7
  14              		.cfi_startproc
  15              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
  16              		.cfi_lsda 0x1b,.LLSDA58
  17              	.LVL0:
  18 0000 130101FE 		addi	sp,sp,-32
  19              		.cfi_def_cfa_offset 32
  20 0004 233C1100 		sd	ra,24(sp)
  21 0008 23388100 		sd	s0,16(sp)
  22 000c 23349100 		sd	s1,8(sp)
  23              		.cfi_offset 1, -8
  24              		.cfi_offset 8, -16
  25              		.cfi_offset 9, -24
  26 0010 13040102 		addi	s0,sp,32
  27              		.cfi_def_cfa 8, 0
  28 0014 93040500 		mv	s1,a0
  29              	.LVL1:
  30              	.L3:
  31              	.LBB19:
  32              	.LBB20:
  33              		.file 2 "src/../h/../h/ThreadQueue.hpp"
   1:src/../h/../h/ThreadQueue.hpp **** //
   2:src/../h/../h/ThreadQueue.hpp **** // Created by os on 6/4/23.
   3:src/../h/../h/ThreadQueue.hpp **** //
   4:src/../h/../h/ThreadQueue.hpp **** 
   5:src/../h/../h/ThreadQueue.hpp **** #ifndef PROJEKAT2023_THREADQUEUE_HPP
   6:src/../h/../h/ThreadQueue.hpp **** #define PROJEKAT2023_THREADQUEUE_HPP
   7:src/../h/../h/ThreadQueue.hpp **** 
   8:src/../h/../h/ThreadQueue.hpp **** #include "../h/syscall_c.hpp"
   9:src/../h/../h/ThreadQueue.hpp **** 
  10:src/../h/../h/ThreadQueue.hpp **** class TCB;
  11:src/../h/../h/ThreadQueue.hpp **** 
  12:src/../h/../h/ThreadQueue.hpp **** class ThreadQueue {
  13:src/../h/../h/ThreadQueue.hpp **** private:
  14:src/../h/../h/ThreadQueue.hpp ****     struct Node {
GAS LISTING /tmp/ccyEvixc.s 			page 2


  15:src/../h/../h/ThreadQueue.hpp ****         TCB* data;
  16:src/../h/../h/ThreadQueue.hpp ****         Node* next;
  17:src/../h/../h/ThreadQueue.hpp **** 
  18:src/../h/../h/ThreadQueue.hpp ****         Node(TCB* d) : data(d), next(nullptr) {}
  19:src/../h/../h/ThreadQueue.hpp **** 
  20:src/../h/../h/ThreadQueue.hpp ****         static void* operator new(size_t size) {
  21:src/../h/../h/ThreadQueue.hpp ****             return mem_alloc(size);
  22:src/../h/../h/ThreadQueue.hpp ****         }
  23:src/../h/../h/ThreadQueue.hpp **** 
  24:src/../h/../h/ThreadQueue.hpp ****         static void operator delete(void* ptr) {
  25:src/../h/../h/ThreadQueue.hpp ****             mem_free(ptr);
  26:src/../h/../h/ThreadQueue.hpp ****         }
  27:src/../h/../h/ThreadQueue.hpp ****     };
  28:src/../h/../h/ThreadQueue.hpp **** 
  29:src/../h/../h/ThreadQueue.hpp ****     Node* front;
  30:src/../h/../h/ThreadQueue.hpp ****     Node* back;
  31:src/../h/../h/ThreadQueue.hpp **** 
  32:src/../h/../h/ThreadQueue.hpp **** public:
  33:src/../h/../h/ThreadQueue.hpp ****     ThreadQueue() : front(nullptr), back(nullptr) {}
  34:src/../h/../h/ThreadQueue.hpp **** 
  35:src/../h/../h/ThreadQueue.hpp ****     ThreadQueue(const ThreadQueue &) = delete;
  36:src/../h/../h/ThreadQueue.hpp **** 
  37:src/../h/../h/ThreadQueue.hpp ****     ThreadQueue &operator=(const ThreadQueue &) = delete;
  38:src/../h/../h/ThreadQueue.hpp **** 
  39:src/../h/../h/ThreadQueue.hpp ****     ~ThreadQueue() {
  40:src/../h/../h/ThreadQueue.hpp ****         while (!isEmpty()) {
  34              		.loc 2 40 9
  35              		.loc 2 40 16
  36              	.LBB21:
  37              	.LBB22:
  41:src/../h/../h/ThreadQueue.hpp ****             Node* node = front;
  42:src/../h/../h/ThreadQueue.hpp ****             front = front->next;
  43:src/../h/../h/ThreadQueue.hpp ****             delete node;
  44:src/../h/../h/ThreadQueue.hpp ****         }
  45:src/../h/../h/ThreadQueue.hpp ****     }
  46:src/../h/../h/ThreadQueue.hpp **** 
  47:src/../h/../h/ThreadQueue.hpp ****     bool isEmpty() const {
  48:src/../h/../h/ThreadQueue.hpp ****         return front == nullptr;
  38              		.loc 2 48 9
  39              		.loc 2 48 16 is_stmt 0
  40 0018 03B58400 		ld	a0,8(s1)
  41              	.LVL2:
  42              	.LBE22:
  43              	.LBE21:
  40:src/../h/../h/ThreadQueue.hpp ****             Node* node = front;
  44              		.loc 2 40 16
  45 001c 630E0500 		beqz	a0,.L1
  46              	.LBB23:
  41:src/../h/../h/ThreadQueue.hpp ****             Node* node = front;
  47              		.loc 2 41 13 is_stmt 1
  48              	.LVL3:
  42:src/../h/../h/ThreadQueue.hpp ****             delete node;
  49              		.loc 2 42 13
  42:src/../h/../h/ThreadQueue.hpp ****             delete node;
  50              		.loc 2 42 28 is_stmt 0
  51 0020 83378500 		ld	a5,8(a0)
  42:src/../h/../h/ThreadQueue.hpp ****             delete node;
GAS LISTING /tmp/ccyEvixc.s 			page 3


  52              		.loc 2 42 19
  53 0024 23B4F400 		sd	a5,8(s1)
  43:src/../h/../h/ThreadQueue.hpp ****         }
  54              		.loc 2 43 13 is_stmt 1
  43:src/../h/../h/ThreadQueue.hpp ****         }
  55              		.loc 2 43 24 is_stmt 0
  56 0028 E30805FE 		beqz	a0,.L3
  57              	.LVL4:
  58              	.LBB24:
  59              	.LBB25:
  25:src/../h/../h/ThreadQueue.hpp ****         }
  60              		.loc 2 25 13 is_stmt 1
  25:src/../h/../h/ThreadQueue.hpp ****         }
  61              		.loc 2 25 21 is_stmt 0
  62 002c 97000000 		call	_Z8mem_freePv@plt
  62      E7800000 
  63              	.LVL5:
  26:src/../h/../h/ThreadQueue.hpp ****     };
  64              		.loc 2 26 9
  65 0034 6FF05FFE 		j	.L3
  66              	.L1:
  67              	.LBE25:
  68              	.LBE24:
  69              	.LBE23:
  70              	.LBE20:
  71              	.LBE19:
  72              		.loc 1 11 7
  73 0038 83308101 		ld	ra,24(sp)
  74              		.cfi_restore 1
  75 003c 03340101 		ld	s0,16(sp)
  76              		.cfi_restore 8
  77              		.cfi_def_cfa 2, 32
  78 0040 83348100 		ld	s1,8(sp)
  79              		.cfi_restore 9
  80              	.LVL6:
  81 0044 13010102 		addi	sp,sp,32
  82              		.cfi_def_cfa_offset 0
  83 0048 67800000 		jr	ra
  84              		.cfi_endproc
  85              	.LFE58:
  86              		.globl	__gxx_personality_v0
  87              		.section	.gcc_except_table._ZN4KSemD2Ev,"aG",@progbits,_ZN4KSemD5Ev,comdat
  88              	.LLSDA58:
  89 0000 FF       		.byte	0xff
  90 0001 FF       		.byte	0xff
  91 0002 03       		.byte	0x3
  92 0003 00       		.byte	0
  93              		.section	.text._ZN4KSemD2Ev,"axG",@progbits,_ZN4KSemD5Ev,comdat
  95              		.weak	_ZN4KSemD1Ev
  96              		.set	_ZN4KSemD1Ev,_ZN4KSemD2Ev
  97              		.text
  98              		.align	2
  99              		.globl	interruptRoutine
 101              	interruptRoutine:
 102              	.LFB56:
 103              		.file 3 "src/interruptRoutine.cpp"
   1:src/interruptRoutine.cpp **** //
GAS LISTING /tmp/ccyEvixc.s 			page 4


   2:src/interruptRoutine.cpp **** // Created by os on 5/22/23.
   3:src/interruptRoutine.cpp **** //
   4:src/interruptRoutine.cpp **** 
   5:src/interruptRoutine.cpp **** #include "../lib/hw.h"
   6:src/interruptRoutine.cpp **** #include "../h/Riscv.hpp"
   7:src/interruptRoutine.cpp **** #include "../h/KMemory.hpp"
   8:src/interruptRoutine.cpp **** #include "../h/KSem.hpp"
   9:src/interruptRoutine.cpp **** #include "../h/KConsole.hpp"
  10:src/interruptRoutine.cpp **** #include "../h/TCB.hpp"
  11:src/interruptRoutine.cpp **** #include "../h/Scheduler.hpp"
  12:src/interruptRoutine.cpp **** 
  13:src/interruptRoutine.cpp **** //#include "../test/printing.hpp"
  14:src/interruptRoutine.cpp **** 
  15:src/interruptRoutine.cpp **** int main();
  16:src/interruptRoutine.cpp **** 
  17:src/interruptRoutine.cpp **** #pragma GCC optimize("O0")
  18:src/interruptRoutine.cpp **** extern "C" void interruptRoutine() {
 104              		.loc 3 18 36 is_stmt 1
 105              		.cfi_startproc
 106 0000 130101F9 		addi	sp,sp,-112
 107              		.cfi_def_cfa_offset 112
 108 0004 23341106 		sd	ra,104(sp)
 109 0008 23308106 		sd	s0,96(sp)
 110 000c 233C9104 		sd	s1,88(sp)
 111              		.cfi_offset 1, -8
 112              		.cfi_offset 8, -16
 113              		.cfi_offset 9, -24
 114 0010 13040107 		addi	s0,sp,112
 115              		.cfi_def_cfa 8, 0
  19:src/interruptRoutine.cpp ****     //bitni sistemski registri
  20:src/interruptRoutine.cpp ****     uint64 scause, sepc, sstatus;
 116              		.loc 3 20 5
  21:src/interruptRoutine.cpp ****     __asm__ volatile("csrr %[scause], scause":[scause] "=r"(scause): : "a5", "a0", "a1", "a2", "a3"
 117              		.loc 3 21 5
 118              		.loc 3 21 119 is_stmt 0
 119              	#APP
 120              	# 21 "src/interruptRoutine.cpp" 1
  22              	    __asm__ volatile("csrr %[sepc], sepc":[sepc] "=r"(sepc): : "a5", "a0", "a1", "a2", "a3", "a4", 
 121              		csrr t1, scause
 122              	# 0 "" 2
 123              	#NO_APP
 124 0018 233C64FC 		sd	t1,-40(s0)
 125              	.LVL7:
 126              		.loc 3 22 5 is_stmt 1
 127              		.loc 3 22 111 is_stmt 0
 128              	#APP
 129              	# 22 "src/interruptRoutine.cpp" 1
  23              	    __asm__ volatile("csrr %[stat], sstatus":[stat] "=r"(sstatus): : "a5", "a0", "a1", "a2", "a3", 
 130              		csrr t1, sepc
 131              	# 0 "" 2
 132              	.LVL8:
 133              	#NO_APP
 134 0020 233864FC 		sd	t1,-48(s0)
 135              	.LVL9:
 136              		.loc 3 23 5 is_stmt 1
 137              		.loc 3 23 117 is_stmt 0
 138              	#APP
GAS LISTING /tmp/ccyEvixc.s 			page 5


 139              	# 23 "src/interruptRoutine.cpp" 1
  24              	
 140              		csrr t1, sstatus
 141              	# 0 "" 2
 142              	.LVL10:
 143              	#NO_APP
 144 0028 233464FC 		sd	t1,-56(s0)
 145              	.LVL11:
  25:src/interruptRoutine.cpp ****     //argumenti preneti sistemskom pozivu
  26:src/interruptRoutine.cpp ****     uint64 a0, a1, a2, a3, a4;
 146              		.loc 3 26 5 is_stmt 1
  27:src/interruptRoutine.cpp ****     //uint64 a5, a6, a7;
  28:src/interruptRoutine.cpp ****     __asm__ volatile("mv %[ax], a0":[ax] "=r"(a0): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7"
 147              		.loc 3 28 5
 148              		.loc 3 28 101 is_stmt 0
 149              	#APP
 150              	# 28 "src/interruptRoutine.cpp" 1
  29              	    __asm__ volatile("mv %[ax], a1":[ax] "=r"(a1): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7"
 151              		mv t1, a0
 152              	# 0 "" 2
 153              	.LVL12:
 154              	#NO_APP
 155 0030 233064FC 		sd	t1,-64(s0)
 156              	.LVL13:
 157              		.loc 3 29 5 is_stmt 1
 158              		.loc 3 29 101 is_stmt 0
 159              	#APP
 160              	# 29 "src/interruptRoutine.cpp" 1
  30              	    __asm__ volatile("mv %[ax], a2":[ax] "=r"(a2): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7"
 161              		mv t1, a1
 162              	# 0 "" 2
 163              	.LVL14:
 164              	#NO_APP
 165 0038 233C64FA 		sd	t1,-72(s0)
 166              	.LVL15:
 167              		.loc 3 30 5 is_stmt 1
 168              		.loc 3 30 101 is_stmt 0
 169              	#APP
 170              	# 30 "src/interruptRoutine.cpp" 1
  31              	    __asm__ volatile("mv %[ax], a3":[ax] "=r"(a3): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7"
 171              		mv t1, a2
 172              	# 0 "" 2
 173              	.LVL16:
 174              	#NO_APP
 175 0040 233864FA 		sd	t1,-80(s0)
 176              	.LVL17:
 177              		.loc 3 31 5 is_stmt 1
 178              		.loc 3 31 101 is_stmt 0
 179              	#APP
 180              	# 31 "src/interruptRoutine.cpp" 1
  32              	    __asm__ volatile("mv %[ax], a4":[ax] "=r"(a4): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7"
 181              		mv t1, a3
 182              	# 0 "" 2
 183              	.LVL18:
 184              	#NO_APP
 185 0048 233464FA 		sd	t1,-88(s0)
 186              	.LVL19:
GAS LISTING /tmp/ccyEvixc.s 			page 6


 187              		.loc 3 32 5 is_stmt 1
 188              		.loc 3 32 101 is_stmt 0
 189              	#APP
 190              	# 32 "src/interruptRoutine.cpp" 1
  33              	//    __asm__ volatile("mv %[ax], a5":[ax] "=r"(a5): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a
 191              		mv t1, a4
 192              	# 0 "" 2
 193              	.LVL20:
 194              	#NO_APP
 195 0050 233064FA 		sd	t1,-96(s0)
 196              	.LVL21:
  34:src/interruptRoutine.cpp **** //    __asm__ volatile("mv %[ax], a6":[ax] "=r"(a6): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a
  35:src/interruptRoutine.cpp **** //    __asm__ volatile("mv %[ax], a7":[ax] "=r"(a7): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a
  36:src/interruptRoutine.cpp **** 
  37:src/interruptRoutine.cpp ****     if (scause == 0x9 || scause == 0x8) {
 197              		.loc 3 37 5 is_stmt 1
 198              	.LBB26:
 199 0054 033784FD 		ld	a4,-40(s0)
 200 0058 93079000 		li	a5,9
 201 005c 6308F700 		beq	a4,a5,.L7
 202              		.loc 3 37 23 is_stmt 0 discriminator 1
 203 0060 033784FD 		ld	a4,-40(s0)
 204 0064 93078000 		li	a5,8
 205 0068 6312F744 		bne	a4,a5,.L8
 206              	.L7:
 207              	.LBB27:
  38:src/interruptRoutine.cpp ****         //prekid zbog poziva ecall
  39:src/interruptRoutine.cpp ****         switch (a0) {
 208              		.loc 3 39 9 is_stmt 1
 209 006c 033704FC 		ld	a4,-64(s0)
 210 0070 93071008 		li	a5,129
 211 0074 63E8E73E 		bgtu	a4,a5,.L52
 212 0078 833704FC 		ld	a5,-64(s0)
 213 007c 13972700 		slli	a4,a5,2
 214 0080 97070000 		lla	a5,.L11
 214      93870700 
 215 0088 B307F700 		add	a5,a4,a5
 216 008c 83A70700 		lw	a5,0(a5)
 217 0090 1B870700 		sext.w	a4,a5
 218 0094 97070000 		lla	a5,.L11
 218      93870700 
 219 009c B307F700 		add	a5,a4,a5
 220 00a0 67800700 		jr	a5
 221              		.section	.rodata
 222              		.align	2
 223              		.align	2
 224              	.L11:
 225 0000 00000000 		.word	.L52-.L11
 226 0004 00000000 		.word	.L27-.L11
 227 0008 00000000 		.word	.L26-.L11
 228 000c 00000000 		.word	.L52-.L11
 229 0010 00000000 		.word	.L52-.L11
 230 0014 00000000 		.word	.L52-.L11
 231 0018 00000000 		.word	.L52-.L11
 232 001c 00000000 		.word	.L52-.L11
 233 0020 00000000 		.word	.L52-.L11
 234 0024 00000000 		.word	.L52-.L11
GAS LISTING /tmp/ccyEvixc.s 			page 7


 235 0028 00000000 		.word	.L52-.L11
 236 002c 00000000 		.word	.L52-.L11
 237 0030 00000000 		.word	.L52-.L11
 238 0034 00000000 		.word	.L52-.L11
 239 0038 00000000 		.word	.L52-.L11
 240 003c 00000000 		.word	.L52-.L11
 241 0040 00000000 		.word	.L52-.L11
 242 0044 00000000 		.word	.L25-.L11
 243 0048 00000000 		.word	.L24-.L11
 244 004c 00000000 		.word	.L23-.L11
 245 0050 00000000 		.word	.L22-.L11
 246 0054 00000000 		.word	.L21-.L11
 247 0058 00000000 		.word	.L52-.L11
 248 005c 00000000 		.word	.L52-.L11
 249 0060 00000000 		.word	.L52-.L11
 250 0064 00000000 		.word	.L52-.L11
 251 0068 00000000 		.word	.L52-.L11
 252 006c 00000000 		.word	.L52-.L11
 253 0070 00000000 		.word	.L52-.L11
 254 0074 00000000 		.word	.L52-.L11
 255 0078 00000000 		.word	.L52-.L11
 256 007c 00000000 		.word	.L52-.L11
 257 0080 00000000 		.word	.L52-.L11
 258 0084 00000000 		.word	.L20-.L11
 259 0088 00000000 		.word	.L19-.L11
 260 008c 00000000 		.word	.L18-.L11
 261 0090 00000000 		.word	.L17-.L11
 262 0094 00000000 		.word	.L52-.L11
 263 0098 00000000 		.word	.L52-.L11
 264 009c 00000000 		.word	.L52-.L11
 265 00a0 00000000 		.word	.L52-.L11
 266 00a4 00000000 		.word	.L52-.L11
 267 00a8 00000000 		.word	.L52-.L11
 268 00ac 00000000 		.word	.L52-.L11
 269 00b0 00000000 		.word	.L52-.L11
 270 00b4 00000000 		.word	.L52-.L11
 271 00b8 00000000 		.word	.L52-.L11
 272 00bc 00000000 		.word	.L52-.L11
 273 00c0 00000000 		.word	.L52-.L11
 274 00c4 00000000 		.word	.L16-.L11
 275 00c8 00000000 		.word	.L52-.L11
 276 00cc 00000000 		.word	.L52-.L11
 277 00d0 00000000 		.word	.L52-.L11
 278 00d4 00000000 		.word	.L52-.L11
 279 00d8 00000000 		.word	.L52-.L11
 280 00dc 00000000 		.word	.L52-.L11
 281 00e0 00000000 		.word	.L52-.L11
 282 00e4 00000000 		.word	.L52-.L11
 283 00e8 00000000 		.word	.L52-.L11
 284 00ec 00000000 		.word	.L52-.L11
 285 00f0 00000000 		.word	.L52-.L11
 286 00f4 00000000 		.word	.L52-.L11
 287 00f8 00000000 		.word	.L52-.L11
 288 00fc 00000000 		.word	.L52-.L11
 289 0100 00000000 		.word	.L52-.L11
 290 0104 00000000 		.word	.L15-.L11
 291 0108 00000000 		.word	.L14-.L11
GAS LISTING /tmp/ccyEvixc.s 			page 8


 292 010c 00000000 		.word	.L43-.L11
 293 0110 00000000 		.word	.L52-.L11
 294 0114 00000000 		.word	.L52-.L11
 295 0118 00000000 		.word	.L52-.L11
 296 011c 00000000 		.word	.L52-.L11
 297 0120 00000000 		.word	.L52-.L11
 298 0124 00000000 		.word	.L52-.L11
 299 0128 00000000 		.word	.L52-.L11
 300 012c 00000000 		.word	.L52-.L11
 301 0130 00000000 		.word	.L52-.L11
 302 0134 00000000 		.word	.L52-.L11
 303 0138 00000000 		.word	.L52-.L11
 304 013c 00000000 		.word	.L52-.L11
 305 0140 00000000 		.word	.L52-.L11
 306 0144 00000000 		.word	.L52-.L11
 307 0148 00000000 		.word	.L52-.L11
 308 014c 00000000 		.word	.L52-.L11
 309 0150 00000000 		.word	.L52-.L11
 310 0154 00000000 		.word	.L52-.L11
 311 0158 00000000 		.word	.L52-.L11
 312 015c 00000000 		.word	.L52-.L11
 313 0160 00000000 		.word	.L52-.L11
 314 0164 00000000 		.word	.L52-.L11
 315 0168 00000000 		.word	.L52-.L11
 316 016c 00000000 		.word	.L52-.L11
 317 0170 00000000 		.word	.L52-.L11
 318 0174 00000000 		.word	.L52-.L11
 319 0178 00000000 		.word	.L52-.L11
 320 017c 00000000 		.word	.L52-.L11
 321 0180 00000000 		.word	.L52-.L11
 322 0184 00000000 		.word	.L52-.L11
 323 0188 00000000 		.word	.L52-.L11
 324 018c 00000000 		.word	.L52-.L11
 325 0190 00000000 		.word	.L52-.L11
 326 0194 00000000 		.word	.L52-.L11
 327 0198 00000000 		.word	.L52-.L11
 328 019c 00000000 		.word	.L52-.L11
 329 01a0 00000000 		.word	.L52-.L11
 330 01a4 00000000 		.word	.L52-.L11
 331 01a8 00000000 		.word	.L52-.L11
 332 01ac 00000000 		.word	.L52-.L11
 333 01b0 00000000 		.word	.L52-.L11
 334 01b4 00000000 		.word	.L52-.L11
 335 01b8 00000000 		.word	.L52-.L11
 336 01bc 00000000 		.word	.L52-.L11
 337 01c0 00000000 		.word	.L52-.L11
 338 01c4 00000000 		.word	.L52-.L11
 339 01c8 00000000 		.word	.L52-.L11
 340 01cc 00000000 		.word	.L52-.L11
 341 01d0 00000000 		.word	.L52-.L11
 342 01d4 00000000 		.word	.L52-.L11
 343 01d8 00000000 		.word	.L52-.L11
 344 01dc 00000000 		.word	.L52-.L11
 345 01e0 00000000 		.word	.L52-.L11
 346 01e4 00000000 		.word	.L52-.L11
 347 01e8 00000000 		.word	.L52-.L11
 348 01ec 00000000 		.word	.L52-.L11
GAS LISTING /tmp/ccyEvixc.s 			page 9


 349 01f0 00000000 		.word	.L52-.L11
 350 01f4 00000000 		.word	.L52-.L11
 351 01f8 00000000 		.word	.L52-.L11
 352 01fc 00000000 		.word	.L52-.L11
 353 0200 00000000 		.word	.L12-.L11
 354 0204 00000000 		.word	.L10-.L11
 355              		.text
 356              	.L27:
 357              	.LBB28:
 358              	.LBB29:
  40:src/interruptRoutine.cpp ****             case 0x01:
 359              		.loc 3 40 13
  41:src/interruptRoutine.cpp ****                 //mem_alloc
  42:src/interruptRoutine.cpp ****                 //a1 = broj blokova koje treba alocirati
  43:src/interruptRoutine.cpp ****                 KMemory::kmalloc((size_t)a1);
 360              		.loc 3 43 17
 361              		.loc 3 43 33 is_stmt 0
 362 00a4 033584FB 		ld	a0,-72(s0)
 363 00a8 97000000 		call	_ZN7KMemory7kmallocEm@plt
 363      E7800000 
 364              	.LVL22:
  44:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 365              		.loc 3 44 17 is_stmt 1
 366              		.loc 3 44 50 is_stmt 0
 367              	#APP
 368              	# 44 "src/interruptRoutine.cpp" 1
  45              	                break;
 369              		sd a0, 80(s0)
 370              	# 0 "" 2
 371              		.loc 3 45 17 is_stmt 1
 372              	#NO_APP
 373 00b4 6F00403D 		j	.L28
 374              	.LVL23:
 375              	.L26:
  46:src/interruptRoutine.cpp ****             case 0x02:
 376              		.loc 3 46 13
  47:src/interruptRoutine.cpp ****                 //mem_free
  48:src/interruptRoutine.cpp ****                 //a1 = pokazivac na memoriju koju dealociramo, dobijen sa mem_alloc
  49:src/interruptRoutine.cpp ****                 KMemory::kfree((void*)a1);
 377              		.loc 3 49 17
 378              		.loc 3 49 31 is_stmt 0
 379 00b8 833784FB 		ld	a5,-72(s0)
 380 00bc 13850700 		mv	a0,a5
 381 00c0 97000000 		call	_ZN7KMemory5kfreeEPv@plt
 381      E7800000 
 382              	.LVL24:
  50:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 383              		.loc 3 50 17 is_stmt 1
 384              		.loc 3 50 50 is_stmt 0
 385              	#APP
 386              	# 50 "src/interruptRoutine.cpp" 1
  51              	                break;
 387              		sd a0, 80(s0)
 388              	# 0 "" 2
 389              		.loc 3 51 17 is_stmt 1
 390              	#NO_APP
 391 00cc 6F00C03B 		j	.L28
GAS LISTING /tmp/ccyEvixc.s 			page 10


 392              	.LVL25:
 393              	.L25:
  52:src/interruptRoutine.cpp ****             case 0x11:
 394              		.loc 3 52 13
  53:src/interruptRoutine.cpp ****                 //thread_create
  54:src/interruptRoutine.cpp ****                 //a1 = pokazivac na rucku u koju upisujemo identifikator niti(adresa u memoriji)
  55:src/interruptRoutine.cpp ****                 //a2 = pokazivac na funkciju koju nit treba da izvrsava
  56:src/interruptRoutine.cpp ****                 //a3 = argumenti funkcije koju nit treba da izvrsava
  57:src/interruptRoutine.cpp ****                 //a4 = poslednja lokacija alociranog steka(najniza adresa)
  58:src/interruptRoutine.cpp ****                 *((thread_t*)a1) = TCB::createThread((TCB::Body)a2, (void*)a3, (uint64*)a4);
 395              		.loc 3 58 17
 396              		.loc 3 58 53 is_stmt 0
 397 00d0 833704FB 		ld	a5,-80(s0)
 398 00d4 033784FA 		ld	a4,-88(s0)
 399 00d8 833604FA 		ld	a3,-96(s0)
 400              		.loc 3 58 17
 401 00dc 833484FB 		ld	s1,-72(s0)
 402              		.loc 3 58 53
 403 00e0 13860600 		mv	a2,a3
 404 00e4 93050700 		mv	a1,a4
 405 00e8 13850700 		mv	a0,a5
 406 00ec 97000000 		call	_ZN3TCB12createThreadEPFvPvES0_Pm@plt
 406      E7800000 
 407              	.LVL26:
 408 00f4 93070500 		mv	a5,a0
 409              		.loc 3 58 34
 410 00f8 23B0F400 		sd	a5,0(s1)
  59:src/interruptRoutine.cpp ****                 if (*((thread_t*)a1) != nullptr) {
 411              		.loc 3 59 17 is_stmt 1
 412              		.loc 3 59 21 is_stmt 0
 413 00fc 833784FB 		ld	a5,-72(s0)
 414 0100 83B70700 		ld	a5,0(a5)
 415              		.loc 3 59 17
 416 0104 63880702 		beqz	a5,.L29
  60:src/interruptRoutine.cpp ****                     if ((TCB::Body)a2 != (TCB::Body)main) {
 417              		.loc 3 60 21 is_stmt 1
 418              		.loc 3 60 39 is_stmt 0
 419 0108 033704FB 		ld	a4,-80(s0)
 420              		.loc 3 60 21
 421 010c 97070000 		la	a5,main
 421      83B70700 
 422 0114 630CF700 		beq	a4,a5,.L30
  61:src/interruptRoutine.cpp ****                         Scheduler::put(*((thread_t*)a1));
 423              		.loc 3 61 25 is_stmt 1
 424              		.loc 3 61 39 is_stmt 0
 425 0118 833784FB 		ld	a5,-72(s0)
 426 011c 83B70700 		ld	a5,0(a5)
 427 0120 13850700 		mv	a0,a5
 428 0124 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 428      E7800000 
 429              	.LVL27:
 430              	.L30:
  62:src/interruptRoutine.cpp ****                     }
  63:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, 0");
 431              		.loc 3 63 21 is_stmt 1
 432              		.loc 3 63 49 is_stmt 0
 433              	#APP
GAS LISTING /tmp/ccyEvixc.s 			page 11


 434              	# 63 "src/interruptRoutine.cpp" 1
  64              	                } else {
 435              		li a0, 0
 436              	# 0 "" 2
 437              	#NO_APP
 438 0130 6F008000 		j	.L31
 439              	.L29:
  65:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, -1");
 440              		.loc 3 65 21 is_stmt 1
 441              		.loc 3 65 50 is_stmt 0
 442              	#APP
 443              	# 65 "src/interruptRoutine.cpp" 1
  66              	                }
 444              		li a0, -1
 445              	# 0 "" 2
 446              	#NO_APP
 447              	.L31:
  67:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 448              		.loc 3 67 17 is_stmt 1
 449              		.loc 3 67 50 is_stmt 0
 450              	#APP
 451              	# 67 "src/interruptRoutine.cpp" 1
  68              	                break;
 452              		sd a0, 80(s0)
 453              	# 0 "" 2
 454              		.loc 3 68 17 is_stmt 1
 455              	#NO_APP
 456 013c 6F00C034 		j	.L28
 457              	.LVL28:
 458              	.L24:
  69:src/interruptRoutine.cpp ****             case 0x12:
 459              		.loc 3 69 13
  70:src/interruptRoutine.cpp ****                 //thread_exit
  71:src/interruptRoutine.cpp ****                 TCB::getRunning()->setStatus(TCB::FINISHED);
 460              		.loc 3 71 17
 461              		.loc 3 71 45 is_stmt 0
 462 0140 97000000 		call	_ZN3TCB10getRunningEv
 462      E7800000 
 463              	.LVL29:
 464 0148 93070500 		mv	a5,a0
 465 014c 93055000 		li	a1,5
 466 0150 13850700 		mv	a0,a5
 467 0154 97000000 		call	_ZN3TCB9setStatusENS_12ThreadStatusE
 467      E7800000 
 468              	.LVL30:
  72:src/interruptRoutine.cpp ****                 TCB::releaseJoined(TCB::getRunning());
 469              		.loc 3 72 17 is_stmt 1
 470              		.loc 3 72 35 is_stmt 0
 471 015c 97000000 		call	_ZN3TCB10getRunningEv
 471      E7800000 
 472              	.LVL31:
 473 0164 93070500 		mv	a5,a0
 474 0168 13850700 		mv	a0,a5
 475 016c 97000000 		call	_ZN3TCB13releaseJoinedEPS_@plt
 475      E7800000 
 476              	.LVL32:
  73:src/interruptRoutine.cpp ****                 __asm__ volatile("li a0, 0");
GAS LISTING /tmp/ccyEvixc.s 			page 12


 477              		.loc 3 73 17 is_stmt 1
 478              		.loc 3 73 45 is_stmt 0
 479              	#APP
 480              	# 73 "src/interruptRoutine.cpp" 1
  74              	                __asm__ volatile("sd a0, 80(s0)");
 481              		li a0, 0
 482              	# 0 "" 2
 483              		.loc 3 74 17 is_stmt 1
 484              		.loc 3 74 50 is_stmt 0
 485              	# 74 "src/interruptRoutine.cpp" 1
  75              	                TCB::dispatch();
 486              		sd a0, 80(s0)
 487              	# 0 "" 2
 488              		.loc 3 75 17 is_stmt 1
 489              		.loc 3 75 30 is_stmt 0
 490              	#NO_APP
 491 017c 97000000 		call	_ZN3TCB8dispatchEv@plt
 491      E7800000 
 492              	.LVL33:
  76:src/interruptRoutine.cpp ****                 break;
 493              		.loc 3 76 17 is_stmt 1
 494 0184 6F004030 		j	.L28
 495              	.LVL34:
 496              	.L23:
  77:src/interruptRoutine.cpp ****             case 0x13:
 497              		.loc 3 77 13
  78:src/interruptRoutine.cpp ****                 //thread_dispatch
  79:src/interruptRoutine.cpp ****                 TCB::dispatch();
 498              		.loc 3 79 17
 499              		.loc 3 79 30 is_stmt 0
 500 0188 97000000 		call	_ZN3TCB8dispatchEv@plt
 500      E7800000 
 501              	.LVL35:
  80:src/interruptRoutine.cpp ****                 break;
 502              		.loc 3 80 17 is_stmt 1
 503 0190 6F00802F 		j	.L28
 504              	.LVL36:
 505              	.L22:
  81:src/interruptRoutine.cpp ****             case 0x14:
 506              		.loc 3 81 13
  82:src/interruptRoutine.cpp ****                 //thread_join
  83:src/interruptRoutine.cpp ****                 //a1 = rucka niti na koju tekuca nit treba da ceka
  84:src/interruptRoutine.cpp ****                 TCB::threadJoin((thread_t)a1);
 507              		.loc 3 84 17
 508              		.loc 3 84 32 is_stmt 0
 509 0194 833784FB 		ld	a5,-72(s0)
 510 0198 13850700 		mv	a0,a5
 511 019c 97000000 		call	_ZN3TCB10threadJoinEPS_@plt
 511      E7800000 
 512              	.LVL37:
  85:src/interruptRoutine.cpp ****                 TCB::dispatch();
 513              		.loc 3 85 17 is_stmt 1
 514              		.loc 3 85 30 is_stmt 0
 515 01a4 97000000 		call	_ZN3TCB8dispatchEv@plt
 515      E7800000 
 516              	.LVL38:
  86:src/interruptRoutine.cpp ****                 break;
GAS LISTING /tmp/ccyEvixc.s 			page 13


 517              		.loc 3 86 17 is_stmt 1
 518 01ac 6F00C02D 		j	.L28
 519              	.LVL39:
 520              	.L21:
  87:src/interruptRoutine.cpp ****             case 0x15:
 521              		.loc 3 87 13
  88:src/interruptRoutine.cpp ****                 //destruktor klase Thread, brise nit ciji je handle prosledjen
  89:src/interruptRoutine.cpp ****                 //a1 = rucka niti koja se brise
  90:src/interruptRoutine.cpp ****                 if (TCB::getRunning() == (thread_t)a1) {
 522              		.loc 3 90 17
 523              		.loc 3 90 36 is_stmt 0
 524 01b0 97000000 		call	_ZN3TCB10getRunningEv
 524      E7800000 
 525              	.LVL40:
 526 01b8 13070500 		mv	a4,a0
 527              		.loc 3 90 39
 528 01bc 833784FB 		ld	a5,-72(s0)
 529 01c0 B307F740 		sub	a5,a4,a5
 530 01c4 93B71700 		seqz	a5,a5
 531 01c8 93F7F70F 		andi	a5,a5,0xff
 532              		.loc 3 90 17
 533 01cc 63820704 		beqz	a5,.L32
  91:src/interruptRoutine.cpp ****                     TCB::getRunning()->setStatus(TCB::FINISHED);
 534              		.loc 3 91 21 is_stmt 1
 535              		.loc 3 91 49 is_stmt 0
 536 01d0 97000000 		call	_ZN3TCB10getRunningEv
 536      E7800000 
 537              	.LVL41:
 538 01d8 93070500 		mv	a5,a0
 539 01dc 93055000 		li	a1,5
 540 01e0 13850700 		mv	a0,a5
 541 01e4 97000000 		call	_ZN3TCB9setStatusENS_12ThreadStatusE
 541      E7800000 
 542              	.LVL42:
  92:src/interruptRoutine.cpp ****                     TCB::releaseJoined(TCB::getRunning());
 543              		.loc 3 92 21 is_stmt 1
 544              		.loc 3 92 39 is_stmt 0
 545 01ec 97000000 		call	_ZN3TCB10getRunningEv
 545      E7800000 
 546              	.LVL43:
 547 01f4 93070500 		mv	a5,a0
 548 01f8 13850700 		mv	a0,a5
 549 01fc 97000000 		call	_ZN3TCB13releaseJoinedEPS_@plt
 549      E7800000 
 550              	.LVL44:
  93:src/interruptRoutine.cpp ****                     TCB::dispatch();
 551              		.loc 3 93 21 is_stmt 1
 552              		.loc 3 93 34 is_stmt 0
 553 0204 97000000 		call	_ZN3TCB8dispatchEv@plt
 553      E7800000 
 554              	.LVL45:
  94:src/interruptRoutine.cpp ****                 } else {
  95:src/interruptRoutine.cpp ****                     TCB::quitThread((thread_t)a1);
  96:src/interruptRoutine.cpp ****                     TCB::releaseJoined((thread_t)a1);
  97:src/interruptRoutine.cpp ****                 }
  98:src/interruptRoutine.cpp ****                 break;
 555              		.loc 3 98 17
GAS LISTING /tmp/ccyEvixc.s 			page 14


 556 020c 6F00C027 		j	.L28
 557              	.L32:
  95:src/interruptRoutine.cpp ****                     TCB::releaseJoined((thread_t)a1);
 558              		.loc 3 95 21 is_stmt 1
  95:src/interruptRoutine.cpp ****                     TCB::releaseJoined((thread_t)a1);
 559              		.loc 3 95 36 is_stmt 0
 560 0210 833784FB 		ld	a5,-72(s0)
 561 0214 13850700 		mv	a0,a5
 562 0218 97000000 		call	_ZN3TCB10quitThreadEPS_@plt
 562      E7800000 
 563              	.LVL46:
  96:src/interruptRoutine.cpp ****                 }
 564              		.loc 3 96 21 is_stmt 1
  96:src/interruptRoutine.cpp ****                 }
 565              		.loc 3 96 39 is_stmt 0
 566 0220 833784FB 		ld	a5,-72(s0)
 567 0224 13850700 		mv	a0,a5
 568 0228 97000000 		call	_ZN3TCB13releaseJoinedEPS_@plt
 568      E7800000 
 569              	.LVL47:
 570              		.loc 3 98 17 is_stmt 1
 571 0230 6F008025 		j	.L28
 572              	.LVL48:
 573              	.L20:
  99:src/interruptRoutine.cpp ****             case 0x21:
 574              		.loc 3 99 13
 100:src/interruptRoutine.cpp ****                 //sem_open
 101:src/interruptRoutine.cpp ****                 //a1 = pokazivac na rucku semafora, u koju se upisuje adresa semafora u memoriji
 102:src/interruptRoutine.cpp ****                 *((sem_t*)a1) = KSem::initSem((uint)a2);
 575              		.loc 3 102 17
 576              		.loc 3 102 46 is_stmt 0
 577 0234 833704FB 		ld	a5,-80(s0)
 578 0238 9B870700 		sext.w	a5,a5
 579              		.loc 3 102 17
 580 023c 833484FB 		ld	s1,-72(s0)
 581              		.loc 3 102 46
 582 0240 13850700 		mv	a0,a5
 583 0244 97000000 		call	_ZN4KSem7initSemEj@plt
 583      E7800000 
 584              	.LVL49:
 585 024c 93070500 		mv	a5,a0
 586              		.loc 3 102 31
 587 0250 23B0F400 		sd	a5,0(s1)
 103:src/interruptRoutine.cpp ****                 if (*((sem_t*)a1) != nullptr) {
 588              		.loc 3 103 17 is_stmt 1
 589              		.loc 3 103 21 is_stmt 0
 590 0254 833784FB 		ld	a5,-72(s0)
 591 0258 83B70700 		ld	a5,0(a5)
 592              		.loc 3 103 17
 593 025c 63860700 		beqz	a5,.L34
 104:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, 0");
 594              		.loc 3 104 21 is_stmt 1
 595              		.loc 3 104 49 is_stmt 0
 596              	#APP
 597              	# 104 "src/interruptRoutine.cpp" 1
 105              	                } else {
 598              		li a0, 0
GAS LISTING /tmp/ccyEvixc.s 			page 15


 599              	# 0 "" 2
 600              	#NO_APP
 601 0264 6F008000 		j	.L35
 602              	.L34:
 106:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, -1");
 603              		.loc 3 106 21 is_stmt 1
 604              		.loc 3 106 50 is_stmt 0
 605              	#APP
 606              	# 106 "src/interruptRoutine.cpp" 1
 107              	                }
 607              		li a0, -1
 608              	# 0 "" 2
 609              	#NO_APP
 610              	.L35:
 108:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 611              		.loc 3 108 17 is_stmt 1
 612              		.loc 3 108 50 is_stmt 0
 613              	#APP
 614              	# 108 "src/interruptRoutine.cpp" 1
 109              	                break;
 615              		sd a0, 80(s0)
 616              	# 0 "" 2
 617              		.loc 3 109 17 is_stmt 1
 618              	#NO_APP
 619 0270 6F008021 		j	.L28
 620              	.LVL50:
 621              	.L19:
 110:src/interruptRoutine.cpp ****             case 0x22:
 622              		.loc 3 110 13
 111:src/interruptRoutine.cpp ****                 //sem_close
 112:src/interruptRoutine.cpp ****                 //a1 = rucka semafora
 113:src/interruptRoutine.cpp ****                 KSem::closeSem((sem_t)a1);
 623              		.loc 3 113 17
 624              		.loc 3 113 31 is_stmt 0
 625 0274 833784FB 		ld	a5,-72(s0)
 626 0278 13850700 		mv	a0,a5
 627 027c 97000000 		call	_ZN4KSem8closeSemEPS_@plt
 627      E7800000 
 628              	.LVL51:
 114:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 629              		.loc 3 114 17 is_stmt 1
 630              		.loc 3 114 50 is_stmt 0
 631              	#APP
 632              	# 114 "src/interruptRoutine.cpp" 1
 115              	                delete (sem_t)a1;
 633              		sd a0, 80(s0)
 634              	# 0 "" 2
 635              		.loc 3 115 17 is_stmt 1
 636              		.loc 3 115 24 is_stmt 0
 637              	#NO_APP
 638 0288 833484FB 		ld	s1,-72(s0)
 639              		.loc 3 115 33
 640 028c 6380041E 		beqz	s1,.L53
 641              		.loc 3 115 31 discriminator 1
 642 0290 13850400 		mv	a0,s1
 643 0294 97000000 		call	_ZN4KSemD1Ev
 643      E7800000 
GAS LISTING /tmp/ccyEvixc.s 			page 16


 644              	.LVL52:
 645 029c 13850400 		mv	a0,s1
 646 02a0 97000000 		call	_ZN4KSemdlEPv@plt
 646      E7800000 
 647              	.LVL53:
 116:src/interruptRoutine.cpp ****                 break;
 648              		.loc 3 116 17 is_stmt 1 discriminator 1
 649 02a8 6F00401C 		j	.L53
 650              	.LVL54:
 651              	.L18:
 117:src/interruptRoutine.cpp ****             case 0x23:
 652              		.loc 3 117 13
 118:src/interruptRoutine.cpp ****                 //sem_wait
 119:src/interruptRoutine.cpp ****                 //a1 = rucka semafora
 120:src/interruptRoutine.cpp ****                 ((sem_t)a1)->wait();
 653              		.loc 3 120 17
 654              		.loc 3 120 34 is_stmt 0
 655 02ac 833784FB 		ld	a5,-72(s0)
 656 02b0 13850700 		mv	a0,a5
 657 02b4 97000000 		call	_ZN4KSem4waitEv@plt
 657      E7800000 
 658              	.LVL55:
 121:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 659              		.loc 3 121 17 is_stmt 1
 660              		.loc 3 121 50 is_stmt 0
 661              	#APP
 662              	# 121 "src/interruptRoutine.cpp" 1
 122              	                break;
 663              		sd a0, 80(s0)
 664              	# 0 "" 2
 665              		.loc 3 122 17 is_stmt 1
 666              	#NO_APP
 667 02c0 6F00801C 		j	.L28
 668              	.LVL56:
 669              	.L17:
 123:src/interruptRoutine.cpp ****             case 0x24:
 670              		.loc 3 123 13
 124:src/interruptRoutine.cpp ****                 //sem_signal
 125:src/interruptRoutine.cpp ****                 //a1 = rucka semafora
 126:src/interruptRoutine.cpp ****                 ((sem_t)a1)->signal();
 671              		.loc 3 126 17
 672              		.loc 3 126 36 is_stmt 0
 673 02c4 833784FB 		ld	a5,-72(s0)
 674 02c8 13850700 		mv	a0,a5
 675 02cc 97000000 		call	_ZN4KSem6signalEv@plt
 675      E7800000 
 676              	.LVL57:
 127:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 677              		.loc 3 127 17 is_stmt 1
 678              		.loc 3 127 50 is_stmt 0
 679              	#APP
 680              	# 127 "src/interruptRoutine.cpp" 1
 128              	                break;
 681              		sd a0, 80(s0)
 682              	# 0 "" 2
 683              		.loc 3 128 17 is_stmt 1
 684              	#NO_APP
GAS LISTING /tmp/ccyEvixc.s 			page 17


 685 02d8 6F00001B 		j	.L28
 686              	.LVL58:
 687              	.L16:
 129:src/interruptRoutine.cpp ****             case 0x31:
 688              		.loc 3 129 13
 130:src/interruptRoutine.cpp ****                 //time_sleep
 131:src/interruptRoutine.cpp ****                 //a1 = broj perioda tajmera na koji se uspavljuje tekuca nit
 132:src/interruptRoutine.cpp ****                 if ((time_t)a1 > 0) {
 689              		.loc 3 132 17
 690 02dc 833784FB 		ld	a5,-72(s0)
 691 02e0 63860700 		beqz	a5,.L37
 133:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, 0");
 692              		.loc 3 133 21
 693              		.loc 3 133 49 is_stmt 0
 694              	#APP
 695              	# 133 "src/interruptRoutine.cpp" 1
 134              	                } else {
 696              		li a0, 0
 697              	# 0 "" 2
 698              	#NO_APP
 699 02e8 6F008000 		j	.L38
 700              	.L37:
 135:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, -1");
 701              		.loc 3 135 21 is_stmt 1
 702              		.loc 3 135 50 is_stmt 0
 703              	#APP
 704              	# 135 "src/interruptRoutine.cpp" 1
 136              	                }
 705              		li a0, -1
 706              	# 0 "" 2
 707              	#NO_APP
 708              	.L38:
 137:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 709              		.loc 3 137 17 is_stmt 1
 710              		.loc 3 137 50 is_stmt 0
 711              	#APP
 712              	# 137 "src/interruptRoutine.cpp" 1
 138              	                if ((time_t)a1 > 0) {
 713              		sd a0, 80(s0)
 714              	# 0 "" 2
 715              		.loc 3 138 17 is_stmt 1
 716              	#NO_APP
 717 02f4 833784FB 		ld	a5,-72(s0)
 718 02f8 638E0716 		beqz	a5,.L54
 139:src/interruptRoutine.cpp ****                     Scheduler::putToSleep(TCB::getRunning(), (time_t)a1);
 719              		.loc 3 139 21
 720              		.loc 3 139 42 is_stmt 0
 721 02fc 97000000 		call	_ZN3TCB10getRunningEv
 721      E7800000 
 722              	.LVL59:
 723 0304 93070500 		mv	a5,a0
 724 0308 833584FB 		ld	a1,-72(s0)
 725 030c 13850700 		mv	a0,a5
 726 0310 97000000 		call	_ZN9Scheduler10putToSleepEP3TCBm@plt
 726      E7800000 
 727              	.LVL60:
 140:src/interruptRoutine.cpp ****                     TCB::dispatch();
GAS LISTING /tmp/ccyEvixc.s 			page 18


 728              		.loc 3 140 21 is_stmt 1
 729              		.loc 3 140 34 is_stmt 0
 730 0318 97000000 		call	_ZN3TCB8dispatchEv@plt
 730      E7800000 
 731              	.LVL61:
 141:src/interruptRoutine.cpp ****                 }
 142:src/interruptRoutine.cpp ****                 break;
 732              		.loc 3 142 17 is_stmt 1
 733 0320 6F004015 		j	.L54
 734              	.LVL62:
 735              	.L15:
 143:src/interruptRoutine.cpp ****             case 0x41:
 736              		.loc 3 143 13
 144:src/interruptRoutine.cpp ****                 //getc
 145:src/interruptRoutine.cpp ****                 KConsole::kgetc();
 737              		.loc 3 145 17
 738              		.loc 3 145 32 is_stmt 0
 739 0324 97000000 		call	_ZN8KConsole5kgetcEv@plt
 739      E7800000 
 740              	.LVL63:
 146:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 741              		.loc 3 146 17 is_stmt 1
 742              		.loc 3 146 50 is_stmt 0
 743              	#APP
 744              	# 146 "src/interruptRoutine.cpp" 1
 147              	                break;
 745              		sd a0, 80(s0)
 746              	# 0 "" 2
 747              		.loc 3 147 17 is_stmt 1
 748              	#NO_APP
 749 0330 6F008015 		j	.L28
 750              	.LVL64:
 751              	.L14:
 148:src/interruptRoutine.cpp ****             case 0x42:
 752              		.loc 3 148 13
 149:src/interruptRoutine.cpp ****                 //putc
 150:src/interruptRoutine.cpp ****                 //a1 = karakter koji se upisuje u bafer za ispis na konzolu
 151:src/interruptRoutine.cpp ****                 KConsole::kputc((char)a1);
 753              		.loc 3 151 17
 754              		.loc 3 151 32 is_stmt 0
 755 0334 833784FB 		ld	a5,-72(s0)
 756 0338 93F7F70F 		andi	a5,a5,0xff
 757 033c 13850700 		mv	a0,a5
 758 0340 97000000 		call	_ZN8KConsole5kputcEc@plt
 758      E7800000 
 759              	.LVL65:
 152:src/interruptRoutine.cpp ****                 break;
 760              		.loc 3 152 17 is_stmt 1
 761 0348 6F000014 		j	.L28
 762              	.L43:
 153:src/interruptRoutine.cpp ****             case 0x43:
 763              		.loc 3 153 13
 154:src/interruptRoutine.cpp ****                 //flush izlaznog bafera konzole
 155:src/interruptRoutine.cpp ****                 while (KConsole::getOutputHead() != KConsole::getOutputTail()) {
 764              		.loc 3 155 17
 765              		.loc 3 155 50
 766              		.loc 3 155 47 is_stmt 0
GAS LISTING /tmp/ccyEvixc.s 			page 19


 767 034c 97000000 		call	_ZN8KConsole13getOutputHeadEv
 767      E7800000 
 768              	.LVL66:
 769 0354 93070500 		mv	a5,a0
 770 0358 93840700 		mv	s1,a5
 771              		.loc 3 155 76
 772 035c 97000000 		call	_ZN8KConsole13getOutputTailEv
 772      E7800000 
 773              	.LVL67:
 774 0364 93070500 		mv	a5,a0
 775              		.loc 3 155 50
 776 0368 13870400 		mv	a4,s1
 777 036c B307F740 		sub	a5,a4,a5
 778 0370 B337F000 		snez	a5,a5
 779 0374 93F7F70F 		andi	a5,a5,0xff
 780 0378 63820710 		beqz	a5,.L55
 781              	.LBB30:
 156:src/interruptRoutine.cpp ****                     char c = KConsole::getFromOutput();
 782              		.loc 3 156 21 is_stmt 1
 783              		.loc 3 156 53 is_stmt 0
 784 037c 97000000 		call	_ZN8KConsole13getFromOutputEv@plt
 784      E7800000 
 785              	.LVL68:
 786 0384 93070500 		mv	a5,a0
 787 0388 A30BF4F8 		sb	a5,-105(s0)
 788              	.LVL69:
 789              	.L42:
 157:src/interruptRoutine.cpp ****                     while (!(KConsole::getSRvalue() & CONSOLE_TX_STATUS_BIT)) {}
 790              		.loc 3 157 21 is_stmt 1
 791              		.loc 3 157 28
 792              		.loc 3 157 50 is_stmt 0
 793 038c 97000000 		call	_ZN8KConsole10getSRvalueEv
 793      E7800000 
 794              	.LVL70:
 795 0394 93070500 		mv	a5,a0
 796              		.loc 3 157 53
 797 0398 93F70702 		andi	a5,a5,32
 798              		.loc 3 157 28
 799 039c 93B71700 		seqz	a5,a5
 800 03a0 93F7F70F 		andi	a5,a5,0xff
 801 03a4 63840700 		beqz	a5,.L41
 802              		.loc 3 157 21
 803 03a8 6FF05FFE 		j	.L42
 804              	.L41:
 158:src/interruptRoutine.cpp ****                     KConsole::setDRvalue(c);
 805              		.loc 3 158 21 is_stmt 1
 806              		.loc 3 158 41 is_stmt 0
 807 03ac 834774F9 		lbu	a5,-105(s0)
 808 03b0 13850700 		mv	a0,a5
 809 03b4 97000000 		call	_ZN8KConsole10setDRvalueEc
 809      E7800000 
 810              	.LVL71:
 159:src/interruptRoutine.cpp ****                     sem_signal(KConsole::getOutputBufferHasSpace());
 811              		.loc 3 159 21 is_stmt 1
 812              		.loc 3 159 31 is_stmt 0
 813 03bc 97000000 		call	_ZN8KConsole23getOutputBufferHasSpaceEv
 813      E7800000 
GAS LISTING /tmp/ccyEvixc.s 			page 20


 814              	.LVL72:
 815 03c4 93070500 		mv	a5,a0
 816 03c8 13850700 		mv	a0,a5
 817 03cc 97000000 		call	_Z10sem_signalP4KSem@plt
 817      E7800000 
 818              	.LVL73:
 819              	.LBE30:
 155:src/interruptRoutine.cpp ****                     char c = KConsole::getFromOutput();
 820              		.loc 3 155 17
 821 03d4 6FF09FF7 		j	.L43
 822              	.LVL74:
 823              	.L12:
 160:src/interruptRoutine.cpp ****                 }
 161:src/interruptRoutine.cpp ****                 break;
 162:src/interruptRoutine.cpp ****             case 0x80:
 824              		.loc 3 162 13 is_stmt 1
 163:src/interruptRoutine.cpp ****                 //alloc thread
 164:src/interruptRoutine.cpp ****                 //a1 = pokazivac na rucku u koju upisujemo identifikator niti(adresa u memoriji)
 165:src/interruptRoutine.cpp ****                 //a2 = pokazivac na funkciju koju nit treba da izvrsava
 166:src/interruptRoutine.cpp ****                 //a3 = argumenti funkcije koju nit treba da izvrsava
 167:src/interruptRoutine.cpp ****                 //a4 = poslednja lokacija alociranog steka(najniza adresa)
 168:src/interruptRoutine.cpp ****                 *((thread_t*)a1) = TCB::createThread((TCB::Body)a2, (void*)a3, (uint64*)a4);
 825              		.loc 3 168 17
 826              		.loc 3 168 53 is_stmt 0
 827 03d8 833704FB 		ld	a5,-80(s0)
 828 03dc 033784FA 		ld	a4,-88(s0)
 829 03e0 833604FA 		ld	a3,-96(s0)
 830              		.loc 3 168 17
 831 03e4 833484FB 		ld	s1,-72(s0)
 832              		.loc 3 168 53
 833 03e8 13860600 		mv	a2,a3
 834 03ec 93050700 		mv	a1,a4
 835 03f0 13850700 		mv	a0,a5
 836 03f4 97000000 		call	_ZN3TCB12createThreadEPFvPvES0_Pm@plt
 836      E7800000 
 837              	.LVL75:
 838 03fc 93070500 		mv	a5,a0
 839              		.loc 3 168 34
 840 0400 23B0F400 		sd	a5,0(s1)
 169:src/interruptRoutine.cpp ****                 if (*((thread_t*)a1) != nullptr) {
 841              		.loc 3 169 17 is_stmt 1
 842              		.loc 3 169 21 is_stmt 0
 843 0404 833784FB 		ld	a5,-72(s0)
 844 0408 83B70700 		ld	a5,0(a5)
 845              		.loc 3 169 17
 846 040c 63860700 		beqz	a5,.L44
 170:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, 0");
 847              		.loc 3 170 21 is_stmt 1
 848              		.loc 3 170 49 is_stmt 0
 849              	#APP
 850              	# 170 "src/interruptRoutine.cpp" 1
 171              	                } else {
 851              		li a0, 0
 852              	# 0 "" 2
 853              	#NO_APP
 854 0414 6F008000 		j	.L45
 855              	.L44:
GAS LISTING /tmp/ccyEvixc.s 			page 21


 172:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, -1");
 856              		.loc 3 172 21 is_stmt 1
 857              		.loc 3 172 50 is_stmt 0
 858              	#APP
 859              	# 172 "src/interruptRoutine.cpp" 1
 173              	                }
 860              		li a0, -1
 861              	# 0 "" 2
 862              	#NO_APP
 863              	.L45:
 174:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 864              		.loc 3 174 17 is_stmt 1
 865              		.loc 3 174 50 is_stmt 0
 866              	#APP
 867              	# 174 "src/interruptRoutine.cpp" 1
 175              	                break;
 868              		sd a0, 80(s0)
 869              	# 0 "" 2
 870              		.loc 3 175 17 is_stmt 1
 871              	#NO_APP
 872 0420 6F008006 		j	.L28
 873              	.LVL76:
 874              	.L10:
 176:src/interruptRoutine.cpp ****             case 0x81:
 875              		.loc 3 176 13
 177:src/interruptRoutine.cpp ****                 //start thread
 178:src/interruptRoutine.cpp ****                 //a1 = rucka niti koja se stavlja u scheduler
 179:src/interruptRoutine.cpp ****                 if (((thread_t)a1)->getBody() != (TCB::Body)main) {
 876              		.loc 3 179 17
 877              		.loc 3 179 44 is_stmt 0
 878 0424 833784FB 		ld	a5,-72(s0)
 879 0428 13850700 		mv	a0,a5
 880 042c 97000000 		call	_ZN3TCB7getBodyEv
 880      E7800000 
 881              	.LVL77:
 882 0434 13070500 		mv	a4,a0
 883              		.loc 3 179 47
 884 0438 97070000 		la	a5,main
 884      83B70700 
 885 0440 B307F740 		sub	a5,a4,a5
 886 0444 B337F000 		snez	a5,a5
 887 0448 93F7F70F 		andi	a5,a5,0xff
 888              		.loc 3 179 17
 889 044c 638C0702 		beqz	a5,.L56
 180:src/interruptRoutine.cpp ****                     Scheduler::put((thread_t)a1);
 890              		.loc 3 180 21 is_stmt 1
 891              		.loc 3 180 35 is_stmt 0
 892 0450 833784FB 		ld	a5,-72(s0)
 893 0454 13850700 		mv	a0,a5
 894 0458 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 894      E7800000 
 895              	.LVL78:
 181:src/interruptRoutine.cpp ****                 }
 182:src/interruptRoutine.cpp ****                 break;
 896              		.loc 3 182 17 is_stmt 1
 897 0460 6F004002 		j	.L56
 898              	.LVL79:
GAS LISTING /tmp/ccyEvixc.s 			page 22


 899              	.L52:
 183:src/interruptRoutine.cpp ****             default:
 184:src/interruptRoutine.cpp ****                 //potreban printing.hpp
 185:src/interruptRoutine.cpp **** //                printString("\nNepostojeci op code: ");
 186:src/interruptRoutine.cpp **** //                printInt(a0);
 187:src/interruptRoutine.cpp **** //                printString("\nscause: ");
 188:src/interruptRoutine.cpp **** //                printInt(scause);
 189:src/interruptRoutine.cpp **** //                printString("\nsepc: ");
 190:src/interruptRoutine.cpp **** //                printInt(sepc);
 191:src/interruptRoutine.cpp ****                 break;
 900              		.loc 3 191 17 is_stmt 0
 901 0464 13000000 		nop
 902 0468 6F000002 		j	.L28
 903              	.LVL80:
 904              	.L53:
 116:src/interruptRoutine.cpp ****             case 0x23:
 905              		.loc 3 116 17
 906 046c 13000000 		nop
 907 0470 6F008001 		j	.L28
 908              	.L54:
 142:src/interruptRoutine.cpp ****             case 0x41:
 909              		.loc 3 142 17
 910 0474 13000000 		nop
 911 0478 6F000001 		j	.L28
 912              	.L55:
 161:src/interruptRoutine.cpp ****             case 0x80:
 913              		.loc 3 161 17
 914 047c 13000000 		nop
 915 0480 6F008000 		j	.L28
 916              	.L56:
 182:src/interruptRoutine.cpp ****             default:
 917              		.loc 3 182 17
 918 0484 13000000 		nop
 919              	.L28:
 920              	.LBE29:
 921              	.LBE28:
 192:src/interruptRoutine.cpp ****         }
 193:src/interruptRoutine.cpp ****         //sepc pokazuje na ecall instrukciju, treba preci na sledecu instrukciju
 194:src/interruptRoutine.cpp ****         sepc += 4;
 922              		.loc 3 194 9 is_stmt 1
 923              		.loc 3 194 14 is_stmt 0
 924 0488 833704FD 		ld	a5,-48(s0)
 925 048c 93874700 		addi	a5,a5,4
 926 0490 2338F4FC 		sd	a5,-48(s0)
 927              	.LVL81:
 195:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 928              		.loc 3 195 9 is_stmt 1
 929              		.loc 3 195 66 is_stmt 0
 930 0494 833704FD 		ld	a5,-48(s0)
 931              	#APP
 932              	# 195 "src/interruptRoutine.cpp" 1
 196              	        __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 933              		csrw sepc, a5
 934              	# 0 "" 2
 935              		.loc 3 196 9 is_stmt 1
 936              		.loc 3 196 71 is_stmt 0
 937              	#NO_APP
GAS LISTING /tmp/ccyEvixc.s 			page 23


 938 049c 833784FC 		ld	a5,-56(s0)
 939              	.LVL82:
 940              	#APP
 941              	# 196 "src/interruptRoutine.cpp" 1
 197              	    } else if (scause == 0x8000000000000009) {
 942              		csrw sstatus, a5
 943              	# 0 "" 2
 944              	#NO_APP
 945              	.LBE27:
 946 04a4 13000000 		nop
 947              	.LBE26:
 198:src/interruptRoutine.cpp ****         //spoljasnji hardverski prekid (od konzole)
 199:src/interruptRoutine.cpp ****         uint64 irq = plic_claim();
 200:src/interruptRoutine.cpp ****         if (irq == CONSOLE_IRQ) {
 201:src/interruptRoutine.cpp ****             if (KConsole::getSRvalue() & CONSOLE_RX_STATUS_BIT) {
 202:src/interruptRoutine.cpp ****                 //upisuje karakter sa ulaza(otkucani) u ulazni bafer KConsole
 203:src/interruptRoutine.cpp ****                 KConsole::placeInInput(KConsole::getDRvalue());
 204:src/interruptRoutine.cpp ****             }
 205:src/interruptRoutine.cpp ****         }
 206:src/interruptRoutine.cpp ****         plic_complete(irq);
 207:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 208:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 209:src/interruptRoutine.cpp ****         Riscv::mc_sip(Riscv::SIP_SEIP);
 210:src/interruptRoutine.cpp ****     } else if (scause == 0x8000000000000001) {
 211:src/interruptRoutine.cpp ****         //prekid od tajmera
 212:src/interruptRoutine.cpp ****         Scheduler::wake();
 213:src/interruptRoutine.cpp ****         TCB::getRunningTimeSlice()++;
 214:src/interruptRoutine.cpp ****         Riscv::mc_sip(Riscv::SIP_SSIP);
 215:src/interruptRoutine.cpp ****         if (TCB::getRunningTimeSlice() >= TCB::getRunning()->getTimeSlice()) {
 216:src/interruptRoutine.cpp ****             TCB::dispatch();
 217:src/interruptRoutine.cpp ****         }
 218:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 219:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 220:src/interruptRoutine.cpp **** 
 221:src/interruptRoutine.cpp ****     } else {
 222:src/interruptRoutine.cpp ****         //potreban printing.hpp
 223:src/interruptRoutine.cpp **** //        printString("\nGreska u prekidnoj rutini\n");
 224:src/interruptRoutine.cpp **** //        printString("scause: ");
 225:src/interruptRoutine.cpp **** //        printInt(scause);
 226:src/interruptRoutine.cpp **** //        printString("\nsepc: ");
 227:src/interruptRoutine.cpp **** //        printInt(sepc);
 228:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 229:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 230:src/interruptRoutine.cpp ****     }
 231:src/interruptRoutine.cpp **** }...
 948              		.loc 3 231 1
 949 04a8 6F004014 		j	.L57
 950              	.LVL83:
 951              	.L8:
 952              	.LBB38:
 953              	.LBB31:
 197:src/interruptRoutine.cpp ****     } else if (scause == 0x8000000000000009) {
 954              		.loc 3 197 12 is_stmt 1
 955              	.LBB32:
 956 04ac 033784FD 		ld	a4,-40(s0)
 957              	.LVL84:
 958 04b0 9307F0FF 		li	a5,-1
GAS LISTING /tmp/ccyEvixc.s 			page 24


 959 04b4 9397F703 		slli	a5,a5,63
 960 04b8 93879700 		addi	a5,a5,9
 961 04bc 6314F708 		bne	a4,a5,.L48
 962              	.LBB33:
 199:src/interruptRoutine.cpp ****         uint64 irq = plic_claim();
 963              		.loc 3 199 9
 199:src/interruptRoutine.cpp ****         uint64 irq = plic_claim();
 964              		.loc 3 199 32 is_stmt 0
 965 04c0 97000000 		call	plic_claim@plt
 965      E7800000 
 966              	.LVL85:
 967 04c8 93070500 		mv	a5,a0
 199:src/interruptRoutine.cpp ****         uint64 irq = plic_claim();
 968              		.loc 3 199 33
 969 04cc 233CF4F8 		sd	a5,-104(s0)
 970              	.LVL86:
 200:src/interruptRoutine.cpp ****         if (irq == CONSOLE_IRQ) {
 971              		.loc 3 200 9 is_stmt 1
 972 04d0 033784F9 		ld	a4,-104(s0)
 973 04d4 9307A000 		li	a5,10
 974 04d8 631CF702 		bne	a4,a5,.L49
 201:src/interruptRoutine.cpp ****             if (KConsole::getSRvalue() & CONSOLE_RX_STATUS_BIT) {
 975              		.loc 3 201 13
 201:src/interruptRoutine.cpp ****             if (KConsole::getSRvalue() & CONSOLE_RX_STATUS_BIT) {
 976              		.loc 3 201 37 is_stmt 0
 977 04dc 97000000 		call	_ZN8KConsole10getSRvalueEv
 977      E7800000 
 978              	.LVL87:
 979 04e4 93070500 		mv	a5,a0
 201:src/interruptRoutine.cpp ****             if (KConsole::getSRvalue() & CONSOLE_RX_STATUS_BIT) {
 980              		.loc 3 201 40
 981 04e8 93F71700 		andi	a5,a5,1
 201:src/interruptRoutine.cpp ****             if (KConsole::getSRvalue() & CONSOLE_RX_STATUS_BIT) {
 982              		.loc 3 201 63
 983 04ec B337F000 		snez	a5,a5
 984 04f0 93F7F70F 		andi	a5,a5,0xff
 201:src/interruptRoutine.cpp ****             if (KConsole::getSRvalue() & CONSOLE_RX_STATUS_BIT) {
 985              		.loc 3 201 13
 986 04f4 638E0700 		beqz	a5,.L49
 203:src/interruptRoutine.cpp ****                 KConsole::placeInInput(KConsole::getDRvalue());
 987              		.loc 3 203 17 is_stmt 1
 203:src/interruptRoutine.cpp ****                 KConsole::placeInInput(KConsole::getDRvalue());
 988              		.loc 3 203 60 is_stmt 0
 989 04f8 97000000 		call	_ZN8KConsole10getDRvalueEv
 989      E7800000 
 990              	.LVL88:
 991 0500 93070500 		mv	a5,a0
 203:src/interruptRoutine.cpp ****                 KConsole::placeInInput(KConsole::getDRvalue());
 992              		.loc 3 203 39
 993 0504 13850700 		mv	a0,a5
 994 0508 97000000 		call	_ZN8KConsole12placeInInputEc@plt
 994      E7800000 
 995              	.LVL89:
 996              	.L49:
 206:src/interruptRoutine.cpp ****         plic_complete(irq);
 997              		.loc 3 206 9 is_stmt 1
 206:src/interruptRoutine.cpp ****         plic_complete(irq);
GAS LISTING /tmp/ccyEvixc.s 			page 25


 998              		.loc 3 206 22 is_stmt 0
 999 0510 833784F9 		ld	a5,-104(s0)
 1000 0514 9B870700 		sext.w	a5,a5
 1001 0518 13850700 		mv	a0,a5
 1002 051c 97000000 		call	plic_complete@plt
 1002      E7800000 
 1003              	.LVL90:
 207:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 1004              		.loc 3 207 9 is_stmt 1
 207:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 1005              		.loc 3 207 66 is_stmt 0
 1006 0524 833704FD 		ld	a5,-48(s0)
 1007              	#APP
 1008              	# 207 "src/interruptRoutine.cpp" 1
 208:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 1009              		csrw sepc, a5
 1010              	# 0 "" 2
 1011              		.loc 3 208 9 is_stmt 1
 208:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 1012              		.loc 3 208 71 is_stmt 0
 1013              	#NO_APP
 1014 052c 833784FC 		ld	a5,-56(s0)
 1015              	#APP
 1016              	# 208 "src/interruptRoutine.cpp" 1
 209:src/interruptRoutine.cpp ****         Riscv::mc_sip(Riscv::SIP_SEIP);
 1017              		csrw sstatus, a5
 1018              	# 0 "" 2
 1019              		.loc 3 209 9 is_stmt 1
 209:src/interruptRoutine.cpp ****         Riscv::mc_sip(Riscv::SIP_SEIP);
 1020              		.loc 3 209 22 is_stmt 0
 1021              	#NO_APP
 1022 0534 13050020 		li	a0,512
 1023 0538 97000000 		call	_ZN5Riscv6mc_sipEm
 1023      E7800000 
 1024              	.LVL91:
 1025              	.LBE33:
 1026              	.LBE32:
 1027              	.LBE31:
 1028              	.LBE38:
 1029              		.loc 3 231 1
 1030 0540 6F00C00A 		j	.L57
 1031              	.LVL92:
 1032              	.L48:
 1033              	.LBB39:
 1034              	.LBB36:
 1035              	.LBB34:
 210:src/interruptRoutine.cpp ****     } else if (scause == 0x8000000000000001) {
 1036              		.loc 3 210 12 is_stmt 1
 1037 0544 033784FD 		ld	a4,-40(s0)
 1038 0548 9307F0FF 		li	a5,-1
 1039 054c 9397F703 		slli	a5,a5,63
 1040 0550 93871700 		addi	a5,a5,1
 1041 0554 6314F708 		bne	a4,a5,.L50
 212:src/interruptRoutine.cpp ****         Scheduler::wake();
 1042              		.loc 3 212 9
 212:src/interruptRoutine.cpp ****         Scheduler::wake();
 1043              		.loc 3 212 24 is_stmt 0
GAS LISTING /tmp/ccyEvixc.s 			page 26


 1044 0558 97000000 		call	_ZN9Scheduler4wakeEv@plt
 1044      E7800000 
 1045              	.LVL93:
 213:src/interruptRoutine.cpp ****         TCB::getRunningTimeSlice()++;
 1046              		.loc 3 213 9 is_stmt 1
 213:src/interruptRoutine.cpp ****         TCB::getRunningTimeSlice()++;
 1047              		.loc 3 213 34 is_stmt 0
 1048 0560 97000000 		call	_ZN3TCB19getRunningTimeSliceEv
 1048      E7800000 
 1049              	.LVL94:
 1050 0568 93070500 		mv	a5,a0
 213:src/interruptRoutine.cpp ****         TCB::getRunningTimeSlice()++;
 1051              		.loc 3 213 33
 1052 056c 03B70700 		ld	a4,0(a5)
 213:src/interruptRoutine.cpp ****         TCB::getRunningTimeSlice()++;
 1053              		.loc 3 213 35
 1054 0570 13071700 		addi	a4,a4,1
 1055 0574 23B0E700 		sd	a4,0(a5)
 214:src/interruptRoutine.cpp ****         Riscv::mc_sip(Riscv::SIP_SSIP);
 1056              		.loc 3 214 9 is_stmt 1
 214:src/interruptRoutine.cpp ****         Riscv::mc_sip(Riscv::SIP_SSIP);
 1057              		.loc 3 214 22 is_stmt 0
 1058 0578 13052000 		li	a0,2
 1059 057c 97000000 		call	_ZN5Riscv6mc_sipEm
 1059      E7800000 
 1060              	.LVL95:
 215:src/interruptRoutine.cpp ****         if (TCB::getRunningTimeSlice() >= TCB::getRunning()->getTimeSlice()) {
 1061              		.loc 3 215 9 is_stmt 1
 215:src/interruptRoutine.cpp ****         if (TCB::getRunningTimeSlice() >= TCB::getRunning()->getTimeSlice()) {
 1062              		.loc 3 215 38 is_stmt 0
 1063 0584 97000000 		call	_ZN3TCB19getRunningTimeSliceEv
 1063      E7800000 
 1064              	.LVL96:
 1065 058c 93070500 		mv	a5,a0
 215:src/interruptRoutine.cpp ****         if (TCB::getRunningTimeSlice() >= TCB::getRunning()->getTimeSlice()) {
 1066              		.loc 3 215 37
 1067 0590 83B40700 		ld	s1,0(a5)
 215:src/interruptRoutine.cpp ****         if (TCB::getRunningTimeSlice() >= TCB::getRunning()->getTimeSlice()) {
 1068              		.loc 3 215 74
 1069 0594 97000000 		call	_ZN3TCB10getRunningEv
 1069      E7800000 
 1070              	.LVL97:
 1071 059c 93070500 		mv	a5,a0
 1072 05a0 13850700 		mv	a0,a5
 1073 05a4 97000000 		call	_ZN3TCB12getTimeSliceEv
 1073      E7800000 
 1074              	.LVL98:
 1075 05ac 93070500 		mv	a5,a0
 215:src/interruptRoutine.cpp ****         if (TCB::getRunningTimeSlice() >= TCB::getRunning()->getTimeSlice()) {
 1076              		.loc 3 215 40
 1077 05b0 B3B7F400 		sltu	a5,s1,a5
 1078 05b4 93C71700 		xori	a5,a5,1
 1079 05b8 93F7F70F 		andi	a5,a5,0xff
 215:src/interruptRoutine.cpp ****         if (TCB::getRunningTimeSlice() >= TCB::getRunning()->getTimeSlice()) {
 1080              		.loc 3 215 9
 1081 05bc 63860700 		beqz	a5,.L51
 216:src/interruptRoutine.cpp ****             TCB::dispatch();
GAS LISTING /tmp/ccyEvixc.s 			page 27


 1082              		.loc 3 216 13 is_stmt 1
 216:src/interruptRoutine.cpp ****             TCB::dispatch();
 1083              		.loc 3 216 26 is_stmt 0
 1084 05c0 97000000 		call	_ZN3TCB8dispatchEv@plt
 1084      E7800000 
 1085              	.LVL99:
 1086              	.L51:
 218:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 1087              		.loc 3 218 9 is_stmt 1
 218:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 1088              		.loc 3 218 66 is_stmt 0
 1089 05c8 833704FD 		ld	a5,-48(s0)
 1090              	#APP
 1091              	# 218 "src/interruptRoutine.cpp" 1
 219:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 1092              		csrw sepc, a5
 1093              	# 0 "" 2
 1094              		.loc 3 219 9 is_stmt 1
 219:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 1095              		.loc 3 219 71 is_stmt 0
 1096              	#NO_APP
 1097 05d0 833784FC 		ld	a5,-56(s0)
 1098              	#APP
 1099              	# 219 "src/interruptRoutine.cpp" 1
 1100              		csrw sstatus, a5
 1101              	# 0 "" 2
 1102              	#NO_APP
 1103              	.LBE34:
 1104              	.LBE36:
 1105              	.LBE39:
 1106              		.loc 3 231 1
 1107 05d8 6F004001 		j	.L57
 1108              	.LVL100:
 1109              	.L50:
 1110              	.LBB40:
 1111              	.LBB37:
 1112              	.LBB35:
 228:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 1113              		.loc 3 228 9 is_stmt 1
 228:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 1114              		.loc 3 228 66 is_stmt 0
 1115 05dc 833704FD 		ld	a5,-48(s0)
 1116              	#APP
 1117              	# 228 "src/interruptRoutine.cpp" 1
 229:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 1118              		csrw sepc, a5
 1119              	# 0 "" 2
 1120              		.loc 3 229 9 is_stmt 1
 229:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 1121              		.loc 3 229 71 is_stmt 0
 1122              	#NO_APP
 1123 05e4 833784FC 		ld	a5,-56(s0)
 1124              	#APP
 1125              	# 229 "src/interruptRoutine.cpp" 1
 1126              		csrw sstatus, a5
 1127              	# 0 "" 2
 1128              	.LVL101:
GAS LISTING /tmp/ccyEvixc.s 			page 28


 1129              	#NO_APP
 1130              	.L57:
 1131              	.LBE35:
 1132              	.LBE37:
 1133              	.LBE40:
 1134              		.loc 3 231 1
 1135 05ec 13000000 		nop
 1136 05f0 83308106 		ld	ra,104(sp)
 1137              		.cfi_restore 1
 1138 05f4 03340106 		ld	s0,96(sp)
 1139              		.cfi_restore 8
 1140              		.cfi_def_cfa 2, 112
 1141              	.LVL102:
 1142 05f8 83348105 		ld	s1,88(sp)
 1143              		.cfi_restore 9
 1144 05fc 13010107 		addi	sp,sp,112
 1145              		.cfi_def_cfa_offset 0
 1146              	.LVL103:
 1147 0600 67800000 		jr	ra
 1148              		.cfi_endproc
 1149              	.LFE56:
 1151              		.section	.text._ZN5Riscv6mc_sipEm,"axG",@progbits,_ZN5Riscv6mc_sipEm,comdat
 1152              		.align	2
 1153              		.weak	_ZN5Riscv6mc_sipEm
 1155              	_ZN5Riscv6mc_sipEm:
 1156              	.LFB1:
 1157              		.file 4 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 5/17/23.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJEKAT2023_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJEKAT2023_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** class Riscv {
  11:src/../h/Riscv.hpp **** public:
  12:src/../h/Riscv.hpp **** 
  13:src/../h/Riscv.hpp **** 	static void returnFromInterrupt();
  14:src/../h/Riscv.hpp **** 
  15:src/../h/Riscv.hpp **** 	enum BitMaskSip {
  16:src/../h/Riscv.hpp **** 		//postoji zahtev za softverski prekid
  17:src/../h/Riscv.hpp **** 		SIP_SSIP = (1 << 1),
  18:src/../h/Riscv.hpp **** 		//postoji prekid od tajmera
  19:src/../h/Riscv.hpp **** 		SIP_STIP = (1 << 5),
  20:src/../h/Riscv.hpp **** 		//postoji zahtev za spoljasnji hardverski prekid
  21:src/../h/Riscv.hpp **** 		SIP_SEIP = (1 << 9)
  22:src/../h/Riscv.hpp **** 	};
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp **** 	//mask set sip
  25:src/../h/Riscv.hpp **** 	static void ms_sip(uint64 mask);
  26:src/../h/Riscv.hpp **** 
  27:src/../h/Riscv.hpp **** 	//mask clear sip
  28:src/../h/Riscv.hpp **** 	static void mc_sip(uint64 mask);
  29:src/../h/Riscv.hpp **** 
  30:src/../h/Riscv.hpp **** 	//kada se pozove sret, SIE dobija vrednost SPIE, SPIE se postavlja na 1,
GAS LISTING /tmp/ccyEvixc.s 			page 29


  31:src/../h/Riscv.hpp **** 	//rezim se postavlja na osnovu SPP bita, SPP se postavlja na 0
  32:src/../h/Riscv.hpp **** 	enum BitMaskSstatus {
  33:src/../h/Riscv.hpp **** 		//1 - dozvoljeni prekidi; 0- nedozvoljeni prekidi; igonrise se u korisnickom rezimu
  34:src/../h/Riscv.hpp **** 		SSTATUS_SIE = (1 << 1),
  35:src/../h/Riscv.hpp **** 		//prethodna vrednost bita SIE
  36:src/../h/Riscv.hpp **** 		SSTATUS_SPIE = (1 << 5),
  37:src/../h/Riscv.hpp **** 		//iz kog rezima se desio skok; 0 - iz korisnickog; 1 - iz sistemskog
  38:src/../h/Riscv.hpp **** 		SSTATUS_SPP = (1 << 8)
  39:src/../h/Riscv.hpp **** 	};
  40:src/../h/Riscv.hpp **** 
  41:src/../h/Riscv.hpp **** 	//mask set sstatus
  42:src/../h/Riscv.hpp **** 	static void ms_sstatus(uint64 mask);
  43:src/../h/Riscv.hpp **** 
  44:src/../h/Riscv.hpp **** 	//mask clear sstatus
  45:src/../h/Riscv.hpp **** 	static void mc_sstatus(uint64 mask);
  46:src/../h/Riscv.hpp **** 
  47:src/../h/Riscv.hpp **** };
  48:src/../h/Riscv.hpp **** 
  49:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
  50:src/../h/Riscv.hpp **** 	__asm__ volatile("csrs sip, %[mask]": :[mask] "r"(mask));
  51:src/../h/Riscv.hpp **** }
  52:src/../h/Riscv.hpp **** 
  53:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 1158              		.loc 4 53 40 is_stmt 1
 1159              		.cfi_startproc
 1160              	.LVL104:
 1161 0000 130101FF 		addi	sp,sp,-16
 1162              		.cfi_def_cfa_offset 16
 1163 0004 23348100 		sd	s0,8(sp)
 1164              		.cfi_offset 8, -8
 1165 0008 13040101 		addi	s0,sp,16
 1166              		.cfi_def_cfa 8, 0
  54:src/../h/Riscv.hpp **** 	__asm__ volatile("csrc sip, %[mask]": :[mask] "r"(mask));
 1167              		.loc 4 54 2
 1168              		.loc 4 54 58 is_stmt 0
 1169              	#APP
 1170              	# 54 "src/../h/Riscv.hpp" 1
  55              	}
 1171              		csrc sip, a0
 1172              	# 0 "" 2
 1173              		.loc 4 55 1
 1174              	#NO_APP
 1175 0010 03348100 		ld	s0,8(sp)
 1176              		.cfi_restore 8
 1177              		.cfi_def_cfa 2, 16
 1178 0014 13010101 		addi	sp,sp,16
 1179              		.cfi_def_cfa_offset 0
 1180 0018 67800000 		jr	ra
 1181              		.cfi_endproc
 1182              	.LFE1:
 1184              		.section	.text._ZN8KConsole10getSRvalueEv,"axG",@progbits,_ZN8KConsole10getSRvalueEv,comdat
 1185              		.align	2
 1186              		.weak	_ZN8KConsole10getSRvalueEv
 1188              	_ZN8KConsole10getSRvalueEv:
 1189              	.LFB25:
 1190              		.file 5 "src/../h/KConsole.hpp"
   1:src/../h/KConsole.hpp **** //
GAS LISTING /tmp/ccyEvixc.s 			page 30


   2:src/../h/KConsole.hpp **** // Created by os on 6/7/23.
   3:src/../h/KConsole.hpp **** //
   4:src/../h/KConsole.hpp **** 
   5:src/../h/KConsole.hpp **** #ifndef PROJEKAT2023_KCONSOLE_HPP
   6:src/../h/KConsole.hpp **** #define PROJEKAT2023_KCONSOLE_HPP
   7:src/../h/KConsole.hpp **** 
   8:src/../h/KConsole.hpp **** #include "../lib/hw.h"
   9:src/../h/KConsole.hpp **** 
  10:src/../h/KConsole.hpp **** class KSem;
  11:src/../h/KConsole.hpp **** 
  12:src/../h/KConsole.hpp **** typedef KSem* sem_t;
  13:src/../h/KConsole.hpp **** 
  14:src/../h/KConsole.hpp **** class KConsole {
  15:src/../h/KConsole.hpp **** public:
  16:src/../h/KConsole.hpp ****     static void initKConsole();
  17:src/../h/KConsole.hpp **** 
  18:src/../h/KConsole.hpp ****     //stavlja karakter u izlazni bafer konzole
  19:src/../h/KConsole.hpp ****     static void kputc(char c);
  20:src/../h/KConsole.hpp **** 
  21:src/../h/KConsole.hpp ****     //uzima karakter iz ulaznog bafera konzole
  22:src/../h/KConsole.hpp ****     static char kgetc();
  23:src/../h/KConsole.hpp **** 
  24:src/../h/KConsole.hpp ****     //vraca karakter iz izlaznog bafera; ako je bafer prazan, blokira se dok se ne napuni
  25:src/../h/KConsole.hpp ****     static char getFromOutput();
  26:src/../h/KConsole.hpp **** 
  27:src/../h/KConsole.hpp ****     //stavlja karakter u ulazni bafer; ako je bafer pun, ignorise se
  28:src/../h/KConsole.hpp ****     static void placeInInput(char c);
  29:src/../h/KConsole.hpp **** 
  30:src/../h/KConsole.hpp ****     //ispis svih preostalih karaktera u izlaznom baferu
  31:src/../h/KConsole.hpp ****     static void flush() {
  32:src/../h/KConsole.hpp ****         __asm__ volatile("li a0, 0x43");
  33:src/../h/KConsole.hpp ****         __asm__ volatile("ecall");
  34:src/../h/KConsole.hpp ****     }
  35:src/../h/KConsole.hpp **** 
  36:src/../h/KConsole.hpp ****     static uint8 getSRvalue() { return *sr; }
 1191              		.loc 5 36 18 is_stmt 1
 1192              		.cfi_startproc
 1193 0000 130101FF 		addi	sp,sp,-16
 1194              		.cfi_def_cfa_offset 16
 1195 0004 23348100 		sd	s0,8(sp)
 1196              		.cfi_offset 8, -8
 1197 0008 13040101 		addi	s0,sp,16
 1198              		.cfi_def_cfa 8, 0
 1199              		.loc 5 36 33
 1200              		.loc 5 36 40 is_stmt 0
 1201 000c 97070000 		la	a5,_ZN8KConsole2srE
 1201      83B70700 
 1202 0014 83B70700 		ld	a5,0(a5)
 1203              		.loc 5 36 45
 1204 0018 03C50700 		lbu	a0,0(a5)
 1205 001c 03348100 		ld	s0,8(sp)
 1206              		.cfi_restore 8
 1207              		.cfi_def_cfa 2, 16
 1208 0020 13010101 		addi	sp,sp,16
 1209              		.cfi_def_cfa_offset 0
 1210 0024 67800000 		jr	ra
 1211              		.cfi_endproc
GAS LISTING /tmp/ccyEvixc.s 			page 31


 1212              	.LFE25:
 1214              		.section	.text._ZN8KConsole10getDRvalueEv,"axG",@progbits,_ZN8KConsole10getDRvalueEv,comdat
 1215              		.align	2
 1216              		.weak	_ZN8KConsole10getDRvalueEv
 1218              	_ZN8KConsole10getDRvalueEv:
 1219              	.LFB26:
  37:src/../h/KConsole.hpp **** 
  38:src/../h/KConsole.hpp ****     static uint8 getDRvalue() { return *dr; }
 1220              		.loc 5 38 18 is_stmt 1
 1221              		.cfi_startproc
 1222 0000 130101FF 		addi	sp,sp,-16
 1223              		.cfi_def_cfa_offset 16
 1224 0004 23348100 		sd	s0,8(sp)
 1225              		.cfi_offset 8, -8
 1226 0008 13040101 		addi	s0,sp,16
 1227              		.cfi_def_cfa 8, 0
 1228              		.loc 5 38 33
 1229              		.loc 5 38 40 is_stmt 0
 1230 000c 97070000 		la	a5,_ZN8KConsole2drE
 1230      83B70700 
 1231 0014 83B70700 		ld	a5,0(a5)
 1232              		.loc 5 38 45
 1233 0018 03C50700 		lbu	a0,0(a5)
 1234 001c 03348100 		ld	s0,8(sp)
 1235              		.cfi_restore 8
 1236              		.cfi_def_cfa 2, 16
 1237 0020 13010101 		addi	sp,sp,16
 1238              		.cfi_def_cfa_offset 0
 1239 0024 67800000 		jr	ra
 1240              		.cfi_endproc
 1241              	.LFE26:
 1243              		.section	.text._ZN8KConsole10setDRvalueEc,"axG",@progbits,_ZN8KConsole10setDRvalueEc,comdat
 1244              		.align	2
 1245              		.weak	_ZN8KConsole10setDRvalueEc
 1247              	_ZN8KConsole10setDRvalueEc:
 1248              	.LFB27:
  39:src/../h/KConsole.hpp **** 
  40:src/../h/KConsole.hpp ****     static void setDRvalue(char c) { *dr = c; }
 1249              		.loc 5 40 17 is_stmt 1
 1250              		.cfi_startproc
 1251              	.LVL105:
 1252 0000 130101FF 		addi	sp,sp,-16
 1253              		.cfi_def_cfa_offset 16
 1254 0004 23348100 		sd	s0,8(sp)
 1255              		.cfi_offset 8, -8
 1256 0008 13040101 		addi	s0,sp,16
 1257              		.cfi_def_cfa 8, 0
 1258              		.loc 5 40 38
 1259 000c 97070000 		la	a5,_ZN8KConsole2drE
 1259      83B70700 
 1260 0014 83B70700 		ld	a5,0(a5)
 1261              		.loc 5 40 42 is_stmt 0
 1262 0018 2380A700 		sb	a0,0(a5)
 1263              		.loc 5 40 47
 1264 001c 03348100 		ld	s0,8(sp)
 1265              		.cfi_restore 8
 1266              		.cfi_def_cfa 2, 16
GAS LISTING /tmp/ccyEvixc.s 			page 32


 1267 0020 13010101 		addi	sp,sp,16
 1268              		.cfi_def_cfa_offset 0
 1269 0024 67800000 		jr	ra
 1270              		.cfi_endproc
 1271              	.LFE27:
 1273              		.section	.text._ZN8KConsole23getOutputBufferHasSpaceEv,"axG",@progbits,_ZN8KConsole23getOutputBuff
 1274              		.align	2
 1275              		.weak	_ZN8KConsole23getOutputBufferHasSpaceEv
 1277              	_ZN8KConsole23getOutputBufferHasSpaceEv:
 1278              	.LFB28:
  41:src/../h/KConsole.hpp **** 
  42:src/../h/KConsole.hpp ****     static sem_t getOutputBufferHasSpace() { return outputBufferHasSpace; }
 1279              		.loc 5 42 18 is_stmt 1
 1280              		.cfi_startproc
 1281 0000 130101FF 		addi	sp,sp,-16
 1282              		.cfi_def_cfa_offset 16
 1283 0004 23348100 		sd	s0,8(sp)
 1284              		.cfi_offset 8, -8
 1285 0008 13040101 		addi	s0,sp,16
 1286              		.cfi_def_cfa 8, 0
 1287              		.loc 5 42 46
 1288              		.loc 5 42 75 is_stmt 0
 1289 000c 97070000 		la	a5,_ZN8KConsole20outputBufferHasSpaceE
 1289      83B70700 
 1290 0014 03B50700 		ld	a0,0(a5)
 1291 0018 03348100 		ld	s0,8(sp)
 1292              		.cfi_restore 8
 1293              		.cfi_def_cfa 2, 16
 1294 001c 13010101 		addi	sp,sp,16
 1295              		.cfi_def_cfa_offset 0
 1296 0020 67800000 		jr	ra
 1297              		.cfi_endproc
 1298              	.LFE28:
 1300              		.section	.text._ZN8KConsole13getOutputHeadEv,"axG",@progbits,_ZN8KConsole13getOutputHeadEv,comdat
 1301              		.align	2
 1302              		.weak	_ZN8KConsole13getOutputHeadEv
 1304              	_ZN8KConsole13getOutputHeadEv:
 1305              	.LFB29:
  43:src/../h/KConsole.hpp **** 
  44:src/../h/KConsole.hpp ****     static int getOutputHead() { return outputHead; }
 1306              		.loc 5 44 16 is_stmt 1
 1307              		.cfi_startproc
 1308 0000 130101FF 		addi	sp,sp,-16
 1309              		.cfi_def_cfa_offset 16
 1310 0004 23348100 		sd	s0,8(sp)
 1311              		.cfi_offset 8, -8
 1312 0008 13040101 		addi	s0,sp,16
 1313              		.cfi_def_cfa 8, 0
 1314              		.loc 5 44 34
 1315              		.loc 5 44 53 is_stmt 0
 1316 000c 97070000 		la	a5,_ZN8KConsole10outputHeadE
 1316      83B70700 
 1317 0014 03A50700 		lw	a0,0(a5)
 1318 0018 03348100 		ld	s0,8(sp)
 1319              		.cfi_restore 8
 1320              		.cfi_def_cfa 2, 16
 1321 001c 13010101 		addi	sp,sp,16
GAS LISTING /tmp/ccyEvixc.s 			page 33


 1322              		.cfi_def_cfa_offset 0
 1323 0020 67800000 		jr	ra
 1324              		.cfi_endproc
 1325              	.LFE29:
 1327              		.section	.text._ZN8KConsole13getOutputTailEv,"axG",@progbits,_ZN8KConsole13getOutputTailEv,comdat
 1328              		.align	2
 1329              		.weak	_ZN8KConsole13getOutputTailEv
 1331              	_ZN8KConsole13getOutputTailEv:
 1332              	.LFB30:
  45:src/../h/KConsole.hpp **** 
  46:src/../h/KConsole.hpp ****     static int getOutputTail() { return outputTail; }
 1333              		.loc 5 46 16 is_stmt 1
 1334              		.cfi_startproc
 1335 0000 130101FF 		addi	sp,sp,-16
 1336              		.cfi_def_cfa_offset 16
 1337 0004 23348100 		sd	s0,8(sp)
 1338              		.cfi_offset 8, -8
 1339 0008 13040101 		addi	s0,sp,16
 1340              		.cfi_def_cfa 8, 0
 1341              		.loc 5 46 34
 1342              		.loc 5 46 53 is_stmt 0
 1343 000c 97070000 		la	a5,_ZN8KConsole10outputTailE
 1343      83B70700 
 1344 0014 03A50700 		lw	a0,0(a5)
 1345 0018 03348100 		ld	s0,8(sp)
 1346              		.cfi_restore 8
 1347              		.cfi_def_cfa 2, 16
 1348 001c 13010101 		addi	sp,sp,16
 1349              		.cfi_def_cfa_offset 0
 1350 0020 67800000 		jr	ra
 1351              		.cfi_endproc
 1352              	.LFE30:
 1354              		.section	.text._ZN3TCB9setStatusENS_12ThreadStatusE,"axG",@progbits,_ZN3TCB9setStatusENS_12ThreadS
 1355              		.align	2
 1356              		.weak	_ZN3TCB9setStatusENS_12ThreadStatusE
 1358              	_ZN3TCB9setStatusENS_12ThreadStatusE:
 1359              	.LFB34:
 1360              		.file 6 "src/../h/TCB.hpp"
   1:src/../h/TCB.hpp **** //
   2:src/../h/TCB.hpp **** // Created by os on 5/23/23.
   3:src/../h/TCB.hpp **** //
   4:src/../h/TCB.hpp **** 
   5:src/../h/TCB.hpp **** #ifndef PROJEKAT2023_TCB_HPP
   6:src/../h/TCB.hpp **** #define PROJEKAT2023_TCB_HPP
   7:src/../h/TCB.hpp **** 
   8:src/../h/TCB.hpp **** #include "../lib/hw.h"
   9:src/../h/TCB.hpp **** #include "../h/ThreadQueue.hpp"
  10:src/../h/TCB.hpp **** 
  11:src/../h/TCB.hpp **** int main();
  12:src/../h/TCB.hpp **** 
  13:src/../h/TCB.hpp **** class TCB {
  14:src/../h/TCB.hpp **** public:
  15:src/../h/TCB.hpp ****     friend class Scheduler;
  16:src/../h/TCB.hpp **** 
  17:src/../h/TCB.hpp ****     using Body = void (*)(void*);
  18:src/../h/TCB.hpp **** 
  19:src/../h/TCB.hpp ****     enum ThreadStatus {
GAS LISTING /tmp/ccyEvixc.s 			page 34


  20:src/../h/TCB.hpp ****         CREATED, ACTIVE, BLOCKED, JOINING, SLEEPING, FINISHED
  21:src/../h/TCB.hpp ****     };
  22:src/../h/TCB.hpp **** 
  23:src/../h/TCB.hpp ****     static TCB* createThread(Body function, void* args, uint64* stack);
  24:src/../h/TCB.hpp **** 
  25:src/../h/TCB.hpp ****     void setStatus(ThreadStatus stat) { this->status = stat; }
 1361              		.loc 6 25 10 is_stmt 1
 1362              		.cfi_startproc
 1363              	.LVL106:
 1364 0000 130101FF 		addi	sp,sp,-16
 1365              		.cfi_def_cfa_offset 16
 1366 0004 23348100 		sd	s0,8(sp)
 1367              		.cfi_offset 8, -8
 1368 0008 13040101 		addi	s0,sp,16
 1369              		.cfi_def_cfa 8, 0
 1370              		.loc 6 25 41
 1371              		.loc 6 25 54 is_stmt 0
 1372 000c 232CB504 		sw	a1,88(a0)
 1373              		.loc 6 25 62
 1374 0010 03348100 		ld	s0,8(sp)
 1375              		.cfi_restore 8
 1376              		.cfi_def_cfa 2, 16
 1377 0014 13010101 		addi	sp,sp,16
 1378              		.cfi_def_cfa_offset 0
 1379 0018 67800000 		jr	ra
 1380              		.cfi_endproc
 1381              	.LFE34:
 1383              		.section	.text._ZN3TCB12getTimeSliceEv,"axG",@progbits,_ZN3TCB12getTimeSliceEv,comdat
 1384              		.align	2
 1385              		.weak	_ZN3TCB12getTimeSliceEv
 1387              	_ZN3TCB12getTimeSliceEv:
 1388              	.LFB36:
  26:src/../h/TCB.hpp **** 
  27:src/../h/TCB.hpp ****     ThreadStatus getStatus() { return this->status; }
  28:src/../h/TCB.hpp **** 
  29:src/../h/TCB.hpp ****     uint64 getTimeSlice() { return timeSlice; }
 1389              		.loc 6 29 12 is_stmt 1
 1390              		.cfi_startproc
 1391              	.LVL107:
 1392 0000 130101FF 		addi	sp,sp,-16
 1393              		.cfi_def_cfa_offset 16
 1394 0004 23348100 		sd	s0,8(sp)
 1395              		.cfi_offset 8, -8
 1396 0008 13040101 		addi	s0,sp,16
 1397              		.cfi_def_cfa 8, 0
 1398              		.loc 6 29 29
 1399              		.loc 6 29 47 is_stmt 0
 1400 000c 03358502 		ld	a0,40(a0)
 1401              	.LVL108:
 1402 0010 03348100 		ld	s0,8(sp)
 1403              		.cfi_restore 8
 1404              		.cfi_def_cfa 2, 16
 1405 0014 13010101 		addi	sp,sp,16
 1406              		.cfi_def_cfa_offset 0
 1407 0018 67800000 		jr	ra
 1408              		.cfi_endproc
 1409              	.LFE36:
GAS LISTING /tmp/ccyEvixc.s 			page 35


 1411              		.section	.text._ZN3TCB7getBodyEv,"axG",@progbits,_ZN3TCB7getBodyEv,comdat
 1412              		.align	2
 1413              		.weak	_ZN3TCB7getBodyEv
 1415              	_ZN3TCB7getBodyEv:
 1416              	.LFB37:
  30:src/../h/TCB.hpp **** 
  31:src/../h/TCB.hpp ****     Body getBody() { return threadFunction; }
 1417              		.loc 6 31 10 is_stmt 1
 1418              		.cfi_startproc
 1419              	.LVL109:
 1420 0000 130101FF 		addi	sp,sp,-16
 1421              		.cfi_def_cfa_offset 16
 1422 0004 23348100 		sd	s0,8(sp)
 1423              		.cfi_offset 8, -8
 1424 0008 13040101 		addi	s0,sp,16
 1425              		.cfi_def_cfa 8, 0
 1426              		.loc 6 31 22
 1427              		.loc 6 31 45 is_stmt 0
 1428 000c 03350501 		ld	a0,16(a0)
 1429              	.LVL110:
 1430 0010 03348100 		ld	s0,8(sp)
 1431              		.cfi_restore 8
 1432              		.cfi_def_cfa 2, 16
 1433 0014 13010101 		addi	sp,sp,16
 1434              		.cfi_def_cfa_offset 0
 1435 0018 67800000 		jr	ra
 1436              		.cfi_endproc
 1437              	.LFE37:
 1439              		.section	.text._ZN3TCB10getRunningEv,"axG",@progbits,_ZN3TCB10getRunningEv,comdat
 1440              		.align	2
 1441              		.weak	_ZN3TCB10getRunningEv
 1443              	_ZN3TCB10getRunningEv:
 1444              	.LFB41:
  32:src/../h/TCB.hpp **** 
  33:src/../h/TCB.hpp ****     ThreadQueue* getListOfJoiningThreads() { return &waitingToJoin; }
  34:src/../h/TCB.hpp **** 
  35:src/../h/TCB.hpp ****     void setMySemaphore(KSem* sem) { mySemaphore = sem; }
  36:src/../h/TCB.hpp **** 
  37:src/../h/TCB.hpp ****     void setJoiningWithTCB(TCB* tcb) { joiningWithTCB = tcb; }
  38:src/../h/TCB.hpp **** 
  39:src/../h/TCB.hpp ****     static TCB* getRunning() { return running; }
 1445              		.loc 6 39 17 is_stmt 1
 1446              		.cfi_startproc
 1447 0000 130101FF 		addi	sp,sp,-16
 1448              		.cfi_def_cfa_offset 16
 1449 0004 23348100 		sd	s0,8(sp)
 1450              		.cfi_offset 8, -8
 1451 0008 13040101 		addi	s0,sp,16
 1452              		.cfi_def_cfa 8, 0
 1453              		.loc 6 39 32
 1454              		.loc 6 39 48 is_stmt 0
 1455 000c 97070000 		la	a5,_ZN3TCB7runningE
 1455      83B70700 
 1456 0014 03B50700 		ld	a0,0(a5)
 1457 0018 03348100 		ld	s0,8(sp)
 1458              		.cfi_restore 8
 1459              		.cfi_def_cfa 2, 16
GAS LISTING /tmp/ccyEvixc.s 			page 36


 1460 001c 13010101 		addi	sp,sp,16
 1461              		.cfi_def_cfa_offset 0
 1462 0020 67800000 		jr	ra
 1463              		.cfi_endproc
 1464              	.LFE41:
 1466              		.section	.text._ZN3TCB19getRunningTimeSliceEv,"axG",@progbits,_ZN3TCB19getRunningTimeSliceEv,comda
 1467              		.align	2
 1468              		.weak	_ZN3TCB19getRunningTimeSliceEv
 1470              	_ZN3TCB19getRunningTimeSliceEv:
 1471              	.LFB43:
  40:src/../h/TCB.hpp **** 
  41:src/../h/TCB.hpp ****     static void setRunning(TCB* newRunning) { running = newRunning; }
  42:src/../h/TCB.hpp **** 
  43:src/../h/TCB.hpp ****     static uint64 &getRunningTimeSlice() { return runningTimeSlice; }
 1472              		.loc 6 43 20 is_stmt 1
 1473              		.cfi_startproc
 1474 0000 130101FF 		addi	sp,sp,-16
 1475              		.cfi_def_cfa_offset 16
 1476 0004 23348100 		sd	s0,8(sp)
 1477              		.cfi_offset 8, -8
 1478 0008 13040101 		addi	s0,sp,16
 1479              		.cfi_def_cfa 8, 0
 1480              		.loc 6 43 44
 1481              		.loc 6 43 69 is_stmt 0
 1482 000c 17050000 		la	a0,_ZN3TCB16runningTimeSliceE
 1482      03350500 
 1483 0014 03348100 		ld	s0,8(sp)
 1484              		.cfi_restore 8
 1485              		.cfi_def_cfa 2, 16
 1486 0018 13010101 		addi	sp,sp,16
 1487              		.cfi_def_cfa_offset 0
 1488 001c 67800000 		jr	ra
 1489              		.cfi_endproc
 1490              	.LFE43:
 1492              		.text
 1493              	.Letext0:
 1494              		.file 7 "src/../lib/hw.h"
 1495              		.file 8 "src/../h/KMemory.hpp"
 1496              		.file 9 "src/../h/../h/../h/syscall_c.hpp"
 1497              		.file 10 "src/../h/Scheduler.hpp"
 6185              		.align	3
 6188              	DW.ref.__gxx_personality_v0:
 6189 0000 00000000 		.dword	__gxx_personality_v0
 6189      00000000 
 6190              		.ident	"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04) 9.4.0"
 6191              		.section	.note.GNU-stack,"",@progbits
GAS LISTING /tmp/ccyEvixc.s 			page 37


DEFINED SYMBOLS
                            *ABS*:0000000000000000 interruptRoutine.cpp
     /tmp/ccyEvixc.s:10     .text._ZN4KSemD2Ev:0000000000000000 _ZN4KSemD2Ev
     /tmp/ccyEvixc.s:14     .text._ZN4KSemD2Ev:0000000000000000 .L0 
     /tmp/ccyEvixc.s:6188   .data.rel.local.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/ccyEvixc.s:18     .text._ZN4KSemD2Ev:0000000000000000 .L0 
     /tmp/ccyEvixc.s:19     .text._ZN4KSemD2Ev:0000000000000004 .L0 
     /tmp/ccyEvixc.s:23     .text._ZN4KSemD2Ev:0000000000000010 .L0 
     /tmp/ccyEvixc.s:24     .text._ZN4KSemD2Ev:0000000000000010 .L0 
     /tmp/ccyEvixc.s:25     .text._ZN4KSemD2Ev:0000000000000010 .L0 
     /tmp/ccyEvixc.s:27     .text._ZN4KSemD2Ev:0000000000000014 .L0 
     /tmp/ccyEvixc.s:35     .text._ZN4KSemD2Ev:0000000000000018 .L0 
     /tmp/ccyEvixc.s:38     .text._ZN4KSemD2Ev:0000000000000018 .L0 
     /tmp/ccyEvixc.s:39     .text._ZN4KSemD2Ev:0000000000000018 .L0 
     /tmp/ccyEvixc.s:40     .text._ZN4KSemD2Ev:0000000000000018 .L0 
     /tmp/ccyEvixc.s:45     .text._ZN4KSemD2Ev:000000000000001c .L0 
     /tmp/ccyEvixc.s:49     .text._ZN4KSemD2Ev:0000000000000020 .L0 
     /tmp/ccyEvixc.s:50     .text._ZN4KSemD2Ev:0000000000000020 .L0 
     /tmp/ccyEvixc.s:51     .text._ZN4KSemD2Ev:0000000000000020 .L0 
     /tmp/ccyEvixc.s:53     .text._ZN4KSemD2Ev:0000000000000024 .L0 
     /tmp/ccyEvixc.s:55     .text._ZN4KSemD2Ev:0000000000000028 .L0 
     /tmp/ccyEvixc.s:56     .text._ZN4KSemD2Ev:0000000000000028 .L0 
     /tmp/ccyEvixc.s:61     .text._ZN4KSemD2Ev:000000000000002c .L0 
     /tmp/ccyEvixc.s:62     .text._ZN4KSemD2Ev:000000000000002c .L0 
     /tmp/ccyEvixc.s:65     .text._ZN4KSemD2Ev:0000000000000034 .L0 
     /tmp/ccyEvixc.s:73     .text._ZN4KSemD2Ev:0000000000000038 .L0 
     /tmp/ccyEvixc.s:74     .text._ZN4KSemD2Ev:000000000000003c .L0 
     /tmp/ccyEvixc.s:76     .text._ZN4KSemD2Ev:0000000000000040 .L0 
     /tmp/ccyEvixc.s:77     .text._ZN4KSemD2Ev:0000000000000040 .L0 
     /tmp/ccyEvixc.s:79     .text._ZN4KSemD2Ev:0000000000000044 .L0 
     /tmp/ccyEvixc.s:82     .text._ZN4KSemD2Ev:0000000000000048 .L0 
     /tmp/ccyEvixc.s:84     .text._ZN4KSemD2Ev:000000000000004c .L0 
     /tmp/ccyEvixc.s:10     .text._ZN4KSemD2Ev:0000000000000000 _ZN4KSemD1Ev
     /tmp/ccyEvixc.s:101    .text:0000000000000000 interruptRoutine
     /tmp/ccyEvixc.s:105    .text:0000000000000000 .L0 
     /tmp/ccyEvixc.s:106    .text:0000000000000000 .L0 
     /tmp/ccyEvixc.s:107    .text:0000000000000004 .L0 
     /tmp/ccyEvixc.s:111    .text:0000000000000010 .L0 
     /tmp/ccyEvixc.s:112    .text:0000000000000010 .L0 
     /tmp/ccyEvixc.s:113    .text:0000000000000010 .L0 
     /tmp/ccyEvixc.s:115    .text:0000000000000014 .L0 
     /tmp/ccyEvixc.s:117    .text:0000000000000014 .L0 
     /tmp/ccyEvixc.s:118    .text:0000000000000014 .L0 
src/interruptRoutine.cpp:21     .text:0000000000000014 .L0 
     /tmp/ccyEvixc.s:127    .text:000000000000001c .L0 
src/interruptRoutine.cpp:22     .text:000000000000001c .L0 
     /tmp/ccyEvixc.s:137    .text:0000000000000024 .L0 
src/interruptRoutine.cpp:23     .text:0000000000000024 .L0 
     /tmp/ccyEvixc.s:147    .text:000000000000002c .L0 
     /tmp/ccyEvixc.s:148    .text:000000000000002c .L0 
src/interruptRoutine.cpp:28     .text:000000000000002c .L0 
     /tmp/ccyEvixc.s:158    .text:0000000000000034 .L0 
src/interruptRoutine.cpp:29     .text:0000000000000034 .L0 
     /tmp/ccyEvixc.s:168    .text:000000000000003c .L0 
src/interruptRoutine.cpp:30     .text:000000000000003c .L0 
     /tmp/ccyEvixc.s:178    .text:0000000000000044 .L0 
src/interruptRoutine.cpp:31     .text:0000000000000044 .L0 
GAS LISTING /tmp/ccyEvixc.s 			page 38


     /tmp/ccyEvixc.s:188    .text:000000000000004c .L0 
src/interruptRoutine.cpp:32     .text:000000000000004c .L0 
     /tmp/ccyEvixc.s:199    .text:0000000000000054 .L0 
     /tmp/ccyEvixc.s:203    .text:0000000000000060 .L0 
     /tmp/ccyEvixc.s:209    .text:000000000000006c .L0 
     /tmp/ccyEvixc.s:360    .text:00000000000000a4 .L0 
     /tmp/ccyEvixc.s:361    .text:00000000000000a4 .L0 
     /tmp/ccyEvixc.s:362    .text:00000000000000a4 .L0 
     /tmp/ccyEvixc.s:366    .text:00000000000000b0 .L0 
src/interruptRoutine.cpp:44     .text:00000000000000b0 .L0 
     /tmp/ccyEvixc.s:373    .text:00000000000000b4 .L0 
     /tmp/ccyEvixc.s:377    .text:00000000000000b8 .L0 
     /tmp/ccyEvixc.s:378    .text:00000000000000b8 .L0 
     /tmp/ccyEvixc.s:379    .text:00000000000000b8 .L0 
     /tmp/ccyEvixc.s:384    .text:00000000000000c8 .L0 
src/interruptRoutine.cpp:50     .text:00000000000000c8 .L0 
     /tmp/ccyEvixc.s:391    .text:00000000000000cc .L0 
     /tmp/ccyEvixc.s:395    .text:00000000000000d0 .L0 
     /tmp/ccyEvixc.s:396    .text:00000000000000d0 .L0 
     /tmp/ccyEvixc.s:397    .text:00000000000000d0 .L0 
     /tmp/ccyEvixc.s:401    .text:00000000000000dc .L0 
     /tmp/ccyEvixc.s:403    .text:00000000000000e0 .L0 
     /tmp/ccyEvixc.s:410    .text:00000000000000f8 .L0 
     /tmp/ccyEvixc.s:412    .text:00000000000000fc .L0 
     /tmp/ccyEvixc.s:413    .text:00000000000000fc .L0 
     /tmp/ccyEvixc.s:416    .text:0000000000000104 .L0 
     /tmp/ccyEvixc.s:418    .text:0000000000000108 .L0 
     /tmp/ccyEvixc.s:419    .text:0000000000000108 .L0 
     /tmp/ccyEvixc.s:421    .text:000000000000010c .L0 
     /tmp/ccyEvixc.s:424    .text:0000000000000118 .L0 
     /tmp/ccyEvixc.s:425    .text:0000000000000118 .L0 
     /tmp/ccyEvixc.s:432    .text:000000000000012c .L0 
src/interruptRoutine.cpp:63     .text:000000000000012c .L0 
     /tmp/ccyEvixc.s:441    .text:0000000000000134 .L0 
src/interruptRoutine.cpp:65     .text:0000000000000134 .L0 
     /tmp/ccyEvixc.s:449    .text:0000000000000138 .L0 
src/interruptRoutine.cpp:67     .text:0000000000000138 .L0 
     /tmp/ccyEvixc.s:456    .text:000000000000013c .L0 
     /tmp/ccyEvixc.s:460    .text:0000000000000140 .L0 
     /tmp/ccyEvixc.s:461    .text:0000000000000140 .L0 
     /tmp/ccyEvixc.s:1443   .text._ZN3TCB10getRunningEv:0000000000000000 _ZN3TCB10getRunningEv
     /tmp/ccyEvixc.s:462    .text:0000000000000140 .L0 
     /tmp/ccyEvixc.s:1358   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000000 _ZN3TCB9setStatusENS_12ThreadStatusE
     /tmp/ccyEvixc.s:470    .text:000000000000015c .L0 
     /tmp/ccyEvixc.s:471    .text:000000000000015c .L0 
     /tmp/ccyEvixc.s:478    .text:0000000000000174 .L0 
src/interruptRoutine.cpp:73     .text:0000000000000174 .L0 
     /tmp/ccyEvixc.s:484    .text:0000000000000178 .L0 
src/interruptRoutine.cpp:74     .text:0000000000000178 .L0 
     /tmp/ccyEvixc.s:489    .text:000000000000017c .L0 
     /tmp/ccyEvixc.s:491    .text:000000000000017c .L0 
     /tmp/ccyEvixc.s:494    .text:0000000000000184 .L0 
     /tmp/ccyEvixc.s:498    .text:0000000000000188 .L0 
     /tmp/ccyEvixc.s:499    .text:0000000000000188 .L0 
     /tmp/ccyEvixc.s:500    .text:0000000000000188 .L0 
     /tmp/ccyEvixc.s:503    .text:0000000000000190 .L0 
     /tmp/ccyEvixc.s:507    .text:0000000000000194 .L0 
GAS LISTING /tmp/ccyEvixc.s 			page 39


     /tmp/ccyEvixc.s:508    .text:0000000000000194 .L0 
     /tmp/ccyEvixc.s:509    .text:0000000000000194 .L0 
     /tmp/ccyEvixc.s:514    .text:00000000000001a4 .L0 
     /tmp/ccyEvixc.s:515    .text:00000000000001a4 .L0 
     /tmp/ccyEvixc.s:518    .text:00000000000001ac .L0 
     /tmp/ccyEvixc.s:522    .text:00000000000001b0 .L0 
     /tmp/ccyEvixc.s:523    .text:00000000000001b0 .L0 
     /tmp/ccyEvixc.s:524    .text:00000000000001b0 .L0 
     /tmp/ccyEvixc.s:528    .text:00000000000001bc .L0 
     /tmp/ccyEvixc.s:533    .text:00000000000001cc .L0 
     /tmp/ccyEvixc.s:535    .text:00000000000001d0 .L0 
     /tmp/ccyEvixc.s:536    .text:00000000000001d0 .L0 
     /tmp/ccyEvixc.s:544    .text:00000000000001ec .L0 
     /tmp/ccyEvixc.s:545    .text:00000000000001ec .L0 
     /tmp/ccyEvixc.s:552    .text:0000000000000204 .L0 
     /tmp/ccyEvixc.s:553    .text:0000000000000204 .L0 
     /tmp/ccyEvixc.s:556    .text:000000000000020c .L0 
     /tmp/ccyEvixc.s:559    .text:0000000000000210 .L0 
     /tmp/ccyEvixc.s:560    .text:0000000000000210 .L0 
     /tmp/ccyEvixc.s:565    .text:0000000000000220 .L0 
     /tmp/ccyEvixc.s:566    .text:0000000000000220 .L0 
     /tmp/ccyEvixc.s:571    .text:0000000000000230 .L0 
     /tmp/ccyEvixc.s:575    .text:0000000000000234 .L0 
     /tmp/ccyEvixc.s:576    .text:0000000000000234 .L0 
     /tmp/ccyEvixc.s:577    .text:0000000000000234 .L0 
     /tmp/ccyEvixc.s:580    .text:000000000000023c .L0 
     /tmp/ccyEvixc.s:582    .text:0000000000000240 .L0 
     /tmp/ccyEvixc.s:587    .text:0000000000000250 .L0 
     /tmp/ccyEvixc.s:589    .text:0000000000000254 .L0 
     /tmp/ccyEvixc.s:590    .text:0000000000000254 .L0 
     /tmp/ccyEvixc.s:593    .text:000000000000025c .L0 
     /tmp/ccyEvixc.s:595    .text:0000000000000260 .L0 
src/interruptRoutine.cpp:104    .text:0000000000000260 .L0 
     /tmp/ccyEvixc.s:604    .text:0000000000000268 .L0 
src/interruptRoutine.cpp:106    .text:0000000000000268 .L0 
     /tmp/ccyEvixc.s:612    .text:000000000000026c .L0 
src/interruptRoutine.cpp:108    .text:000000000000026c .L0 
     /tmp/ccyEvixc.s:619    .text:0000000000000270 .L0 
     /tmp/ccyEvixc.s:623    .text:0000000000000274 .L0 
     /tmp/ccyEvixc.s:624    .text:0000000000000274 .L0 
     /tmp/ccyEvixc.s:625    .text:0000000000000274 .L0 
     /tmp/ccyEvixc.s:630    .text:0000000000000284 .L0 
src/interruptRoutine.cpp:114    .text:0000000000000284 .L0 
     /tmp/ccyEvixc.s:636    .text:0000000000000288 .L0 
     /tmp/ccyEvixc.s:638    .text:0000000000000288 .L0 
     /tmp/ccyEvixc.s:640    .text:000000000000028c .L0 
     /tmp/ccyEvixc.s:642    .text:0000000000000290 .L0 
     /tmp/ccyEvixc.s:649    .text:00000000000002a8 .L0 
     /tmp/ccyEvixc.s:653    .text:00000000000002ac .L0 
     /tmp/ccyEvixc.s:654    .text:00000000000002ac .L0 
     /tmp/ccyEvixc.s:655    .text:00000000000002ac .L0 
     /tmp/ccyEvixc.s:660    .text:00000000000002bc .L0 
src/interruptRoutine.cpp:121    .text:00000000000002bc .L0 
     /tmp/ccyEvixc.s:667    .text:00000000000002c0 .L0 
     /tmp/ccyEvixc.s:671    .text:00000000000002c4 .L0 
     /tmp/ccyEvixc.s:672    .text:00000000000002c4 .L0 
     /tmp/ccyEvixc.s:673    .text:00000000000002c4 .L0 
GAS LISTING /tmp/ccyEvixc.s 			page 40


     /tmp/ccyEvixc.s:678    .text:00000000000002d4 .L0 
src/interruptRoutine.cpp:127    .text:00000000000002d4 .L0 
     /tmp/ccyEvixc.s:685    .text:00000000000002d8 .L0 
     /tmp/ccyEvixc.s:689    .text:00000000000002dc .L0 
     /tmp/ccyEvixc.s:690    .text:00000000000002dc .L0 
     /tmp/ccyEvixc.s:693    .text:00000000000002e4 .L0 
src/interruptRoutine.cpp:133    .text:00000000000002e4 .L0 
     /tmp/ccyEvixc.s:702    .text:00000000000002ec .L0 
src/interruptRoutine.cpp:135    .text:00000000000002ec .L0 
     /tmp/ccyEvixc.s:710    .text:00000000000002f0 .L0 
src/interruptRoutine.cpp:137    .text:00000000000002f0 .L0 
     /tmp/ccyEvixc.s:717    .text:00000000000002f4 .L0 
     /tmp/ccyEvixc.s:720    .text:00000000000002fc .L0 
     /tmp/ccyEvixc.s:721    .text:00000000000002fc .L0 
     /tmp/ccyEvixc.s:729    .text:0000000000000318 .L0 
     /tmp/ccyEvixc.s:730    .text:0000000000000318 .L0 
     /tmp/ccyEvixc.s:733    .text:0000000000000320 .L0 
     /tmp/ccyEvixc.s:737    .text:0000000000000324 .L0 
     /tmp/ccyEvixc.s:738    .text:0000000000000324 .L0 
     /tmp/ccyEvixc.s:739    .text:0000000000000324 .L0 
     /tmp/ccyEvixc.s:742    .text:000000000000032c .L0 
src/interruptRoutine.cpp:146    .text:000000000000032c .L0 
     /tmp/ccyEvixc.s:749    .text:0000000000000330 .L0 
     /tmp/ccyEvixc.s:753    .text:0000000000000334 .L0 
     /tmp/ccyEvixc.s:754    .text:0000000000000334 .L0 
     /tmp/ccyEvixc.s:755    .text:0000000000000334 .L0 
     /tmp/ccyEvixc.s:761    .text:0000000000000348 .L0 
     /tmp/ccyEvixc.s:764    .text:000000000000034c .L0 
     /tmp/ccyEvixc.s:765    .text:000000000000034c .L0 
     /tmp/ccyEvixc.s:766    .text:000000000000034c .L0 
     /tmp/ccyEvixc.s:1304   .text._ZN8KConsole13getOutputHeadEv:0000000000000000 _ZN8KConsole13getOutputHeadEv
     /tmp/ccyEvixc.s:767    .text:000000000000034c .L0 
     /tmp/ccyEvixc.s:1331   .text._ZN8KConsole13getOutputTailEv:0000000000000000 _ZN8KConsole13getOutputTailEv
     /tmp/ccyEvixc.s:772    .text:000000000000035c .L0 
     /tmp/ccyEvixc.s:776    .text:0000000000000368 .L0 
     /tmp/ccyEvixc.s:783    .text:000000000000037c .L0 
     /tmp/ccyEvixc.s:784    .text:000000000000037c .L0 
     /tmp/ccyEvixc.s:791    .text:000000000000038c .L0 
     /tmp/ccyEvixc.s:792    .text:000000000000038c .L0 
     /tmp/ccyEvixc.s:1188   .text._ZN8KConsole10getSRvalueEv:0000000000000000 _ZN8KConsole10getSRvalueEv
     /tmp/ccyEvixc.s:793    .text:000000000000038c .L0 
     /tmp/ccyEvixc.s:797    .text:0000000000000398 .L0 
     /tmp/ccyEvixc.s:799    .text:000000000000039c .L0 
     /tmp/ccyEvixc.s:803    .text:00000000000003a8 .L0 
     /tmp/ccyEvixc.s:806    .text:00000000000003ac .L0 
     /tmp/ccyEvixc.s:807    .text:00000000000003ac .L0 
     /tmp/ccyEvixc.s:1247   .text._ZN8KConsole10setDRvalueEc:0000000000000000 _ZN8KConsole10setDRvalueEc
     /tmp/ccyEvixc.s:812    .text:00000000000003bc .L0 
     /tmp/ccyEvixc.s:1277   .text._ZN8KConsole23getOutputBufferHasSpaceEv:0000000000000000 _ZN8KConsole23getOutputBufferHasSpaceEv
     /tmp/ccyEvixc.s:813    .text:00000000000003bc .L0 
     /tmp/ccyEvixc.s:821    .text:00000000000003d4 .L0 
     /tmp/ccyEvixc.s:825    .text:00000000000003d8 .L0 
     /tmp/ccyEvixc.s:826    .text:00000000000003d8 .L0 
     /tmp/ccyEvixc.s:827    .text:00000000000003d8 .L0 
     /tmp/ccyEvixc.s:831    .text:00000000000003e4 .L0 
     /tmp/ccyEvixc.s:833    .text:00000000000003e8 .L0 
     /tmp/ccyEvixc.s:840    .text:0000000000000400 .L0 
GAS LISTING /tmp/ccyEvixc.s 			page 41


     /tmp/ccyEvixc.s:842    .text:0000000000000404 .L0 
     /tmp/ccyEvixc.s:843    .text:0000000000000404 .L0 
     /tmp/ccyEvixc.s:846    .text:000000000000040c .L0 
     /tmp/ccyEvixc.s:848    .text:0000000000000410 .L0 
src/interruptRoutine.cpp:170    .text:0000000000000410 .L0 
     /tmp/ccyEvixc.s:857    .text:0000000000000418 .L0 
src/interruptRoutine.cpp:172    .text:0000000000000418 .L0 
     /tmp/ccyEvixc.s:865    .text:000000000000041c .L0 
src/interruptRoutine.cpp:174    .text:000000000000041c .L0 
     /tmp/ccyEvixc.s:872    .text:0000000000000420 .L0 
     /tmp/ccyEvixc.s:876    .text:0000000000000424 .L0 
     /tmp/ccyEvixc.s:877    .text:0000000000000424 .L0 
     /tmp/ccyEvixc.s:878    .text:0000000000000424 .L0 
     /tmp/ccyEvixc.s:1415   .text._ZN3TCB7getBodyEv:0000000000000000 _ZN3TCB7getBodyEv
     /tmp/ccyEvixc.s:884    .text:0000000000000438 .L0 
     /tmp/ccyEvixc.s:889    .text:000000000000044c .L0 
     /tmp/ccyEvixc.s:891    .text:0000000000000450 .L0 
     /tmp/ccyEvixc.s:892    .text:0000000000000450 .L0 
     /tmp/ccyEvixc.s:897    .text:0000000000000460 .L0 
     /tmp/ccyEvixc.s:901    .text:0000000000000464 .L0 
     /tmp/ccyEvixc.s:906    .text:000000000000046c .L0 
     /tmp/ccyEvixc.s:910    .text:0000000000000474 .L0 
     /tmp/ccyEvixc.s:914    .text:000000000000047c .L0 
     /tmp/ccyEvixc.s:918    .text:0000000000000484 .L0 
     /tmp/ccyEvixc.s:923    .text:0000000000000488 .L0 
     /tmp/ccyEvixc.s:924    .text:0000000000000488 .L0 
     /tmp/ccyEvixc.s:929    .text:0000000000000494 .L0 
     /tmp/ccyEvixc.s:930    .text:0000000000000494 .L0 
     /tmp/ccyEvixc.s:936    .text:000000000000049c .L0 
     /tmp/ccyEvixc.s:938    .text:000000000000049c .L0 
     /tmp/ccyEvixc.s:949    .text:00000000000004a8 .L0 
     /tmp/ccyEvixc.s:956    .text:00000000000004ac .L0 
     /tmp/ccyEvixc.s:964    .text:00000000000004c0 .L0 
     /tmp/ccyEvixc.s:965    .text:00000000000004c0 .L0 
     /tmp/ccyEvixc.s:969    .text:00000000000004cc .L0 
     /tmp/ccyEvixc.s:972    .text:00000000000004d0 .L0 
     /tmp/ccyEvixc.s:976    .text:00000000000004dc .L0 
     /tmp/ccyEvixc.s:977    .text:00000000000004dc .L0 
     /tmp/ccyEvixc.s:981    .text:00000000000004e8 .L0 
     /tmp/ccyEvixc.s:983    .text:00000000000004ec .L0 
     /tmp/ccyEvixc.s:986    .text:00000000000004f4 .L0 
     /tmp/ccyEvixc.s:988    .text:00000000000004f8 .L0 
     /tmp/ccyEvixc.s:1218   .text._ZN8KConsole10getDRvalueEv:0000000000000000 _ZN8KConsole10getDRvalueEv
     /tmp/ccyEvixc.s:989    .text:00000000000004f8 .L0 
     /tmp/ccyEvixc.s:993    .text:0000000000000504 .L0 
     /tmp/ccyEvixc.s:998    .text:0000000000000510 .L0 
     /tmp/ccyEvixc.s:999    .text:0000000000000510 .L0 
     /tmp/ccyEvixc.s:1005   .text:0000000000000524 .L0 
     /tmp/ccyEvixc.s:1006   .text:0000000000000524 .L0 
     /tmp/ccyEvixc.s:1012   .text:000000000000052c .L0 
     /tmp/ccyEvixc.s:1014   .text:000000000000052c .L0 
     /tmp/ccyEvixc.s:1020   .text:0000000000000534 .L0 
     /tmp/ccyEvixc.s:1022   .text:0000000000000534 .L0 
     /tmp/ccyEvixc.s:1155   .text._ZN5Riscv6mc_sipEm:0000000000000000 _ZN5Riscv6mc_sipEm
     /tmp/ccyEvixc.s:1030   .text:0000000000000540 .L0 
     /tmp/ccyEvixc.s:1037   .text:0000000000000544 .L0 
     /tmp/ccyEvixc.s:1043   .text:0000000000000558 .L0 
GAS LISTING /tmp/ccyEvixc.s 			page 42


     /tmp/ccyEvixc.s:1044   .text:0000000000000558 .L0 
     /tmp/ccyEvixc.s:1047   .text:0000000000000560 .L0 
     /tmp/ccyEvixc.s:1470   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000000 _ZN3TCB19getRunningTimeSliceEv
     /tmp/ccyEvixc.s:1048   .text:0000000000000560 .L0 
     /tmp/ccyEvixc.s:1052   .text:000000000000056c .L0 
     /tmp/ccyEvixc.s:1054   .text:0000000000000570 .L0 
     /tmp/ccyEvixc.s:1057   .text:0000000000000578 .L0 
     /tmp/ccyEvixc.s:1058   .text:0000000000000578 .L0 
     /tmp/ccyEvixc.s:1062   .text:0000000000000584 .L0 
     /tmp/ccyEvixc.s:1063   .text:0000000000000584 .L0 
     /tmp/ccyEvixc.s:1067   .text:0000000000000590 .L0 
     /tmp/ccyEvixc.s:1069   .text:0000000000000594 .L0 
     /tmp/ccyEvixc.s:1387   .text._ZN3TCB12getTimeSliceEv:0000000000000000 _ZN3TCB12getTimeSliceEv
     /tmp/ccyEvixc.s:1077   .text:00000000000005b0 .L0 
     /tmp/ccyEvixc.s:1081   .text:00000000000005bc .L0 
     /tmp/ccyEvixc.s:1083   .text:00000000000005c0 .L0 
     /tmp/ccyEvixc.s:1084   .text:00000000000005c0 .L0 
     /tmp/ccyEvixc.s:1088   .text:00000000000005c8 .L0 
     /tmp/ccyEvixc.s:1089   .text:00000000000005c8 .L0 
     /tmp/ccyEvixc.s:1095   .text:00000000000005d0 .L0 
     /tmp/ccyEvixc.s:1097   .text:00000000000005d0 .L0 
     /tmp/ccyEvixc.s:1107   .text:00000000000005d8 .L0 
     /tmp/ccyEvixc.s:1114   .text:00000000000005dc .L0 
     /tmp/ccyEvixc.s:1115   .text:00000000000005dc .L0 
     /tmp/ccyEvixc.s:1121   .text:00000000000005e4 .L0 
     /tmp/ccyEvixc.s:1123   .text:00000000000005e4 .L0 
     /tmp/ccyEvixc.s:1135   .text:00000000000005ec .L0 
     /tmp/ccyEvixc.s:1137   .text:00000000000005f4 .L0 
     /tmp/ccyEvixc.s:1139   .text:00000000000005f8 .L0 
     /tmp/ccyEvixc.s:1140   .text:00000000000005f8 .L0 
     /tmp/ccyEvixc.s:1143   .text:00000000000005fc .L0 
     /tmp/ccyEvixc.s:1145   .text:0000000000000600 .L0 
     /tmp/ccyEvixc.s:1148   .text:0000000000000604 .L0 
     /tmp/ccyEvixc.s:1159   .text._ZN5Riscv6mc_sipEm:0000000000000000 .L0 
     /tmp/ccyEvixc.s:1161   .text._ZN5Riscv6mc_sipEm:0000000000000000 .L0 
     /tmp/ccyEvixc.s:1162   .text._ZN5Riscv6mc_sipEm:0000000000000004 .L0 
     /tmp/ccyEvixc.s:1164   .text._ZN5Riscv6mc_sipEm:0000000000000008 .L0 
     /tmp/ccyEvixc.s:1166   .text._ZN5Riscv6mc_sipEm:000000000000000c .L0 
     /tmp/ccyEvixc.s:1168   .text._ZN5Riscv6mc_sipEm:000000000000000c .L0 
  src/../h/Riscv.hpp:54     .text._ZN5Riscv6mc_sipEm:000000000000000c .L0 
     /tmp/ccyEvixc.s:1175   .text._ZN5Riscv6mc_sipEm:0000000000000010 .L0 
     /tmp/ccyEvixc.s:1176   .text._ZN5Riscv6mc_sipEm:0000000000000014 .L0 
     /tmp/ccyEvixc.s:1177   .text._ZN5Riscv6mc_sipEm:0000000000000014 .L0 
     /tmp/ccyEvixc.s:1179   .text._ZN5Riscv6mc_sipEm:0000000000000018 .L0 
     /tmp/ccyEvixc.s:1181   .text._ZN5Riscv6mc_sipEm:000000000000001c .L0 
     /tmp/ccyEvixc.s:1192   .text._ZN8KConsole10getSRvalueEv:0000000000000000 .L0 
     /tmp/ccyEvixc.s:1193   .text._ZN8KConsole10getSRvalueEv:0000000000000000 .L0 
     /tmp/ccyEvixc.s:1194   .text._ZN8KConsole10getSRvalueEv:0000000000000004 .L0 
     /tmp/ccyEvixc.s:1196   .text._ZN8KConsole10getSRvalueEv:0000000000000008 .L0 
     /tmp/ccyEvixc.s:1198   .text._ZN8KConsole10getSRvalueEv:000000000000000c .L0 
     /tmp/ccyEvixc.s:1200   .text._ZN8KConsole10getSRvalueEv:000000000000000c .L0 
     /tmp/ccyEvixc.s:1201   .text._ZN8KConsole10getSRvalueEv:000000000000000c .L0 
     /tmp/ccyEvixc.s:1204   .text._ZN8KConsole10getSRvalueEv:0000000000000018 .L0 
     /tmp/ccyEvixc.s:1206   .text._ZN8KConsole10getSRvalueEv:0000000000000020 .L0 
     /tmp/ccyEvixc.s:1207   .text._ZN8KConsole10getSRvalueEv:0000000000000020 .L0 
     /tmp/ccyEvixc.s:1209   .text._ZN8KConsole10getSRvalueEv:0000000000000024 .L0 
     /tmp/ccyEvixc.s:1211   .text._ZN8KConsole10getSRvalueEv:0000000000000028 .L0 
GAS LISTING /tmp/ccyEvixc.s 			page 43


     /tmp/ccyEvixc.s:1221   .text._ZN8KConsole10getDRvalueEv:0000000000000000 .L0 
     /tmp/ccyEvixc.s:1222   .text._ZN8KConsole10getDRvalueEv:0000000000000000 .L0 
     /tmp/ccyEvixc.s:1223   .text._ZN8KConsole10getDRvalueEv:0000000000000004 .L0 
     /tmp/ccyEvixc.s:1225   .text._ZN8KConsole10getDRvalueEv:0000000000000008 .L0 
     /tmp/ccyEvixc.s:1227   .text._ZN8KConsole10getDRvalueEv:000000000000000c .L0 
     /tmp/ccyEvixc.s:1229   .text._ZN8KConsole10getDRvalueEv:000000000000000c .L0 
     /tmp/ccyEvixc.s:1230   .text._ZN8KConsole10getDRvalueEv:000000000000000c .L0 
     /tmp/ccyEvixc.s:1233   .text._ZN8KConsole10getDRvalueEv:0000000000000018 .L0 
     /tmp/ccyEvixc.s:1235   .text._ZN8KConsole10getDRvalueEv:0000000000000020 .L0 
     /tmp/ccyEvixc.s:1236   .text._ZN8KConsole10getDRvalueEv:0000000000000020 .L0 
     /tmp/ccyEvixc.s:1238   .text._ZN8KConsole10getDRvalueEv:0000000000000024 .L0 
     /tmp/ccyEvixc.s:1240   .text._ZN8KConsole10getDRvalueEv:0000000000000028 .L0 
     /tmp/ccyEvixc.s:1250   .text._ZN8KConsole10setDRvalueEc:0000000000000000 .L0 
     /tmp/ccyEvixc.s:1252   .text._ZN8KConsole10setDRvalueEc:0000000000000000 .L0 
     /tmp/ccyEvixc.s:1253   .text._ZN8KConsole10setDRvalueEc:0000000000000004 .L0 
     /tmp/ccyEvixc.s:1255   .text._ZN8KConsole10setDRvalueEc:0000000000000008 .L0 
     /tmp/ccyEvixc.s:1257   .text._ZN8KConsole10setDRvalueEc:000000000000000c .L0 
     /tmp/ccyEvixc.s:1259   .text._ZN8KConsole10setDRvalueEc:000000000000000c .L0 
     /tmp/ccyEvixc.s:1262   .text._ZN8KConsole10setDRvalueEc:0000000000000018 .L0 
     /tmp/ccyEvixc.s:1264   .text._ZN8KConsole10setDRvalueEc:000000000000001c .L0 
     /tmp/ccyEvixc.s:1265   .text._ZN8KConsole10setDRvalueEc:0000000000000020 .L0 
     /tmp/ccyEvixc.s:1266   .text._ZN8KConsole10setDRvalueEc:0000000000000020 .L0 
     /tmp/ccyEvixc.s:1268   .text._ZN8KConsole10setDRvalueEc:0000000000000024 .L0 
     /tmp/ccyEvixc.s:1270   .text._ZN8KConsole10setDRvalueEc:0000000000000028 .L0 
     /tmp/ccyEvixc.s:1280   .text._ZN8KConsole23getOutputBufferHasSpaceEv:0000000000000000 .L0 
     /tmp/ccyEvixc.s:1281   .text._ZN8KConsole23getOutputBufferHasSpaceEv:0000000000000000 .L0 
     /tmp/ccyEvixc.s:1282   .text._ZN8KConsole23getOutputBufferHasSpaceEv:0000000000000004 .L0 
     /tmp/ccyEvixc.s:1284   .text._ZN8KConsole23getOutputBufferHasSpaceEv:0000000000000008 .L0 
     /tmp/ccyEvixc.s:1286   .text._ZN8KConsole23getOutputBufferHasSpaceEv:000000000000000c .L0 
     /tmp/ccyEvixc.s:1288   .text._ZN8KConsole23getOutputBufferHasSpaceEv:000000000000000c .L0 
     /tmp/ccyEvixc.s:1289   .text._ZN8KConsole23getOutputBufferHasSpaceEv:000000000000000c .L0 
     /tmp/ccyEvixc.s:1292   .text._ZN8KConsole23getOutputBufferHasSpaceEv:000000000000001c .L0 
     /tmp/ccyEvixc.s:1293   .text._ZN8KConsole23getOutputBufferHasSpaceEv:000000000000001c .L0 
     /tmp/ccyEvixc.s:1295   .text._ZN8KConsole23getOutputBufferHasSpaceEv:0000000000000020 .L0 
     /tmp/ccyEvixc.s:1297   .text._ZN8KConsole23getOutputBufferHasSpaceEv:0000000000000024 .L0 
     /tmp/ccyEvixc.s:1307   .text._ZN8KConsole13getOutputHeadEv:0000000000000000 .L0 
     /tmp/ccyEvixc.s:1308   .text._ZN8KConsole13getOutputHeadEv:0000000000000000 .L0 
     /tmp/ccyEvixc.s:1309   .text._ZN8KConsole13getOutputHeadEv:0000000000000004 .L0 
     /tmp/ccyEvixc.s:1311   .text._ZN8KConsole13getOutputHeadEv:0000000000000008 .L0 
     /tmp/ccyEvixc.s:1313   .text._ZN8KConsole13getOutputHeadEv:000000000000000c .L0 
     /tmp/ccyEvixc.s:1315   .text._ZN8KConsole13getOutputHeadEv:000000000000000c .L0 
     /tmp/ccyEvixc.s:1316   .text._ZN8KConsole13getOutputHeadEv:000000000000000c .L0 
     /tmp/ccyEvixc.s:1319   .text._ZN8KConsole13getOutputHeadEv:000000000000001c .L0 
     /tmp/ccyEvixc.s:1320   .text._ZN8KConsole13getOutputHeadEv:000000000000001c .L0 
     /tmp/ccyEvixc.s:1322   .text._ZN8KConsole13getOutputHeadEv:0000000000000020 .L0 
     /tmp/ccyEvixc.s:1324   .text._ZN8KConsole13getOutputHeadEv:0000000000000024 .L0 
     /tmp/ccyEvixc.s:1334   .text._ZN8KConsole13getOutputTailEv:0000000000000000 .L0 
     /tmp/ccyEvixc.s:1335   .text._ZN8KConsole13getOutputTailEv:0000000000000000 .L0 
     /tmp/ccyEvixc.s:1336   .text._ZN8KConsole13getOutputTailEv:0000000000000004 .L0 
     /tmp/ccyEvixc.s:1338   .text._ZN8KConsole13getOutputTailEv:0000000000000008 .L0 
     /tmp/ccyEvixc.s:1340   .text._ZN8KConsole13getOutputTailEv:000000000000000c .L0 
     /tmp/ccyEvixc.s:1342   .text._ZN8KConsole13getOutputTailEv:000000000000000c .L0 
     /tmp/ccyEvixc.s:1343   .text._ZN8KConsole13getOutputTailEv:000000000000000c .L0 
     /tmp/ccyEvixc.s:1346   .text._ZN8KConsole13getOutputTailEv:000000000000001c .L0 
     /tmp/ccyEvixc.s:1347   .text._ZN8KConsole13getOutputTailEv:000000000000001c .L0 
     /tmp/ccyEvixc.s:1349   .text._ZN8KConsole13getOutputTailEv:0000000000000020 .L0 
     /tmp/ccyEvixc.s:1351   .text._ZN8KConsole13getOutputTailEv:0000000000000024 .L0 
GAS LISTING /tmp/ccyEvixc.s 			page 44


     /tmp/ccyEvixc.s:1362   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000000 .L0 
     /tmp/ccyEvixc.s:1364   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000000 .L0 
     /tmp/ccyEvixc.s:1365   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000004 .L0 
     /tmp/ccyEvixc.s:1367   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000008 .L0 
     /tmp/ccyEvixc.s:1369   .text._ZN3TCB9setStatusENS_12ThreadStatusE:000000000000000c .L0 
     /tmp/ccyEvixc.s:1371   .text._ZN3TCB9setStatusENS_12ThreadStatusE:000000000000000c .L0 
     /tmp/ccyEvixc.s:1372   .text._ZN3TCB9setStatusENS_12ThreadStatusE:000000000000000c .L0 
     /tmp/ccyEvixc.s:1374   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000010 .L0 
     /tmp/ccyEvixc.s:1375   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000014 .L0 
     /tmp/ccyEvixc.s:1376   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000014 .L0 
     /tmp/ccyEvixc.s:1378   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000018 .L0 
     /tmp/ccyEvixc.s:1380   .text._ZN3TCB9setStatusENS_12ThreadStatusE:000000000000001c .L0 
     /tmp/ccyEvixc.s:1390   .text._ZN3TCB12getTimeSliceEv:0000000000000000 .L0 
     /tmp/ccyEvixc.s:1392   .text._ZN3TCB12getTimeSliceEv:0000000000000000 .L0 
     /tmp/ccyEvixc.s:1393   .text._ZN3TCB12getTimeSliceEv:0000000000000004 .L0 
     /tmp/ccyEvixc.s:1395   .text._ZN3TCB12getTimeSliceEv:0000000000000008 .L0 
     /tmp/ccyEvixc.s:1397   .text._ZN3TCB12getTimeSliceEv:000000000000000c .L0 
     /tmp/ccyEvixc.s:1399   .text._ZN3TCB12getTimeSliceEv:000000000000000c .L0 
     /tmp/ccyEvixc.s:1400   .text._ZN3TCB12getTimeSliceEv:000000000000000c .L0 
     /tmp/ccyEvixc.s:1403   .text._ZN3TCB12getTimeSliceEv:0000000000000014 .L0 
     /tmp/ccyEvixc.s:1404   .text._ZN3TCB12getTimeSliceEv:0000000000000014 .L0 
     /tmp/ccyEvixc.s:1406   .text._ZN3TCB12getTimeSliceEv:0000000000000018 .L0 
     /tmp/ccyEvixc.s:1408   .text._ZN3TCB12getTimeSliceEv:000000000000001c .L0 
     /tmp/ccyEvixc.s:1418   .text._ZN3TCB7getBodyEv:0000000000000000 .L0 
     /tmp/ccyEvixc.s:1420   .text._ZN3TCB7getBodyEv:0000000000000000 .L0 
     /tmp/ccyEvixc.s:1421   .text._ZN3TCB7getBodyEv:0000000000000004 .L0 
     /tmp/ccyEvixc.s:1423   .text._ZN3TCB7getBodyEv:0000000000000008 .L0 
     /tmp/ccyEvixc.s:1425   .text._ZN3TCB7getBodyEv:000000000000000c .L0 
     /tmp/ccyEvixc.s:1427   .text._ZN3TCB7getBodyEv:000000000000000c .L0 
     /tmp/ccyEvixc.s:1428   .text._ZN3TCB7getBodyEv:000000000000000c .L0 
     /tmp/ccyEvixc.s:1431   .text._ZN3TCB7getBodyEv:0000000000000014 .L0 
     /tmp/ccyEvixc.s:1432   .text._ZN3TCB7getBodyEv:0000000000000014 .L0 
     /tmp/ccyEvixc.s:1434   .text._ZN3TCB7getBodyEv:0000000000000018 .L0 
     /tmp/ccyEvixc.s:1436   .text._ZN3TCB7getBodyEv:000000000000001c .L0 
     /tmp/ccyEvixc.s:1446   .text._ZN3TCB10getRunningEv:0000000000000000 .L0 
     /tmp/ccyEvixc.s:1447   .text._ZN3TCB10getRunningEv:0000000000000000 .L0 
     /tmp/ccyEvixc.s:1448   .text._ZN3TCB10getRunningEv:0000000000000004 .L0 
     /tmp/ccyEvixc.s:1450   .text._ZN3TCB10getRunningEv:0000000000000008 .L0 
     /tmp/ccyEvixc.s:1452   .text._ZN3TCB10getRunningEv:000000000000000c .L0 
     /tmp/ccyEvixc.s:1454   .text._ZN3TCB10getRunningEv:000000000000000c .L0 
     /tmp/ccyEvixc.s:1455   .text._ZN3TCB10getRunningEv:000000000000000c .L0 
     /tmp/ccyEvixc.s:1458   .text._ZN3TCB10getRunningEv:000000000000001c .L0 
     /tmp/ccyEvixc.s:1459   .text._ZN3TCB10getRunningEv:000000000000001c .L0 
     /tmp/ccyEvixc.s:1461   .text._ZN3TCB10getRunningEv:0000000000000020 .L0 
     /tmp/ccyEvixc.s:1463   .text._ZN3TCB10getRunningEv:0000000000000024 .L0 
     /tmp/ccyEvixc.s:1473   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000000 .L0 
     /tmp/ccyEvixc.s:1474   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000000 .L0 
     /tmp/ccyEvixc.s:1475   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000004 .L0 
     /tmp/ccyEvixc.s:1477   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000008 .L0 
     /tmp/ccyEvixc.s:1479   .text._ZN3TCB19getRunningTimeSliceEv:000000000000000c .L0 
     /tmp/ccyEvixc.s:1481   .text._ZN3TCB19getRunningTimeSliceEv:000000000000000c .L0 
     /tmp/ccyEvixc.s:1482   .text._ZN3TCB19getRunningTimeSliceEv:000000000000000c .L0 
     /tmp/ccyEvixc.s:1484   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000018 .L0 
     /tmp/ccyEvixc.s:1485   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000018 .L0 
     /tmp/ccyEvixc.s:1487   .text._ZN3TCB19getRunningTimeSliceEv:000000000000001c .L0 
     /tmp/ccyEvixc.s:1489   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000020 .L0 
     /tmp/ccyEvixc.s:97     .text._ZN4KSemD2Ev:000000000000004c .L0 
GAS LISTING /tmp/ccyEvixc.s 			page 45


     /tmp/ccyEvixc.s:1498   .text:0000000000000604 .L0 
     /tmp/ccyEvixc.s:1184   .text._ZN5Riscv6mc_sipEm:000000000000001c .L0 
     /tmp/ccyEvixc.s:1214   .text._ZN8KConsole10getSRvalueEv:0000000000000028 .L0 
     /tmp/ccyEvixc.s:1243   .text._ZN8KConsole10getDRvalueEv:0000000000000028 .L0 
     /tmp/ccyEvixc.s:1273   .text._ZN8KConsole10setDRvalueEc:0000000000000028 .L0 
     /tmp/ccyEvixc.s:1300   .text._ZN8KConsole23getOutputBufferHasSpaceEv:0000000000000024 .L0 
     /tmp/ccyEvixc.s:1327   .text._ZN8KConsole13getOutputHeadEv:0000000000000024 .L0 
     /tmp/ccyEvixc.s:1354   .text._ZN8KConsole13getOutputTailEv:0000000000000024 .L0 
     /tmp/ccyEvixc.s:1383   .text._ZN3TCB9setStatusENS_12ThreadStatusE:000000000000001c .L0 
     /tmp/ccyEvixc.s:1411   .text._ZN3TCB12getTimeSliceEv:000000000000001c .L0 
     /tmp/ccyEvixc.s:1439   .text._ZN3TCB7getBodyEv:000000000000001c .L0 
     /tmp/ccyEvixc.s:1466   .text._ZN3TCB10getRunningEv:0000000000000024 .L0 
     /tmp/ccyEvixc.s:1492   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000020 .L0 
     /tmp/ccyEvixc.s:224    .rodata:0000000000000000 .L11
     /tmp/ccyEvixc.s:214    .text:0000000000000080 .L0 
     /tmp/ccyEvixc.s:218    .text:0000000000000094 .L0 
     /tmp/ccyEvixc.s:421    .text:000000000000010c .L0 
     /tmp/ccyEvixc.s:884    .text:0000000000000438 .L0 
     /tmp/ccyEvixc.s:206    .text:000000000000006c .L7
     /tmp/ccyEvixc.s:951    .text:00000000000004ac .L8
     /tmp/ccyEvixc.s:899    .text:0000000000000464 .L52
     /tmp/ccyEvixc.s:919    .text:0000000000000488 .L28
     /tmp/ccyEvixc.s:439    .text:0000000000000134 .L29
     /tmp/ccyEvixc.s:430    .text:000000000000012c .L30
     /tmp/ccyEvixc.s:447    .text:0000000000000138 .L31
     /tmp/ccyEvixc.s:557    .text:0000000000000210 .L32
     /tmp/ccyEvixc.s:602    .text:0000000000000268 .L34
     /tmp/ccyEvixc.s:610    .text:000000000000026c .L35
     /tmp/ccyEvixc.s:904    .text:000000000000046c .L53
     /tmp/ccyEvixc.s:700    .text:00000000000002ec .L37
     /tmp/ccyEvixc.s:708    .text:00000000000002f0 .L38
     /tmp/ccyEvixc.s:908    .text:0000000000000474 .L54
     /tmp/ccyEvixc.s:912    .text:000000000000047c .L55
     /tmp/ccyEvixc.s:804    .text:00000000000003ac .L41
     /tmp/ccyEvixc.s:789    .text:000000000000038c .L42
     /tmp/ccyEvixc.s:762    .text:000000000000034c .L43
     /tmp/ccyEvixc.s:855    .text:0000000000000418 .L44
     /tmp/ccyEvixc.s:863    .text:000000000000041c .L45
     /tmp/ccyEvixc.s:916    .text:0000000000000484 .L56
     /tmp/ccyEvixc.s:1130   .text:00000000000005ec .L57
     /tmp/ccyEvixc.s:1032   .text:0000000000000544 .L48
     /tmp/ccyEvixc.s:996    .text:0000000000000510 .L49
     /tmp/ccyEvixc.s:1109   .text:00000000000005dc .L50
     /tmp/ccyEvixc.s:1086   .text:00000000000005c8 .L51
     /tmp/ccyEvixc.s:66     .text._ZN4KSemD2Ev:0000000000000038 .L1
     /tmp/ccyEvixc.s:30     .text._ZN4KSemD2Ev:0000000000000018 .L3
     /tmp/ccyEvixc.s:356    .text:00000000000000a4 .L27
     /tmp/ccyEvixc.s:375    .text:00000000000000b8 .L26
     /tmp/ccyEvixc.s:393    .text:00000000000000d0 .L25
     /tmp/ccyEvixc.s:458    .text:0000000000000140 .L24
     /tmp/ccyEvixc.s:496    .text:0000000000000188 .L23
     /tmp/ccyEvixc.s:505    .text:0000000000000194 .L22
     /tmp/ccyEvixc.s:520    .text:00000000000001b0 .L21
     /tmp/ccyEvixc.s:573    .text:0000000000000234 .L20
     /tmp/ccyEvixc.s:621    .text:0000000000000274 .L19
     /tmp/ccyEvixc.s:651    .text:00000000000002ac .L18
     /tmp/ccyEvixc.s:669    .text:00000000000002c4 .L17
GAS LISTING /tmp/ccyEvixc.s 			page 46


     /tmp/ccyEvixc.s:687    .text:00000000000002dc .L16
     /tmp/ccyEvixc.s:735    .text:0000000000000324 .L15
     /tmp/ccyEvixc.s:751    .text:0000000000000334 .L14
     /tmp/ccyEvixc.s:823    .text:00000000000003d8 .L12
     /tmp/ccyEvixc.s:874    .text:0000000000000424 .L10
     /tmp/ccyEvixc.s:1201   .text._ZN8KConsole10getSRvalueEv:000000000000000c .L0 
     /tmp/ccyEvixc.s:1230   .text._ZN8KConsole10getDRvalueEv:000000000000000c .L0 
     /tmp/ccyEvixc.s:1259   .text._ZN8KConsole10setDRvalueEc:000000000000000c .L0 
     /tmp/ccyEvixc.s:1289   .text._ZN8KConsole23getOutputBufferHasSpaceEv:000000000000000c .L0 
     /tmp/ccyEvixc.s:1316   .text._ZN8KConsole13getOutputHeadEv:000000000000000c .L0 
     /tmp/ccyEvixc.s:1343   .text._ZN8KConsole13getOutputTailEv:000000000000000c .L0 
     /tmp/ccyEvixc.s:1455   .text._ZN3TCB10getRunningEv:000000000000000c .L0 
     /tmp/ccyEvixc.s:1482   .text._ZN3TCB19getRunningTimeSliceEv:000000000000000c .L0 
     /tmp/ccyEvixc.s:3809   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccyEvixc.s:6088   .debug_str:0000000000000bed .LASF235
     /tmp/ccyEvixc.s:5970   .debug_str:0000000000000863 .LASF236
     /tmp/ccyEvixc.s:6036   .debug_str:0000000000000a92 .LASF237
     /tmp/ccyEvixc.s:5656   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccyEvixc.s:5688   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccyEvixc.s:6000   .debug_str:0000000000000953 .LASF3
     /tmp/ccyEvixc.s:5862   .debug_str:0000000000000501 .LASF0
     /tmp/ccyEvixc.s:5892   .debug_str:00000000000005d1 .LASF1
     /tmp/ccyEvixc.s:6014   .debug_str:00000000000009ed .LASF2
     /tmp/ccyEvixc.s:5806   .debug_str:0000000000000350 .LASF4
     /tmp/ccyEvixc.s:6028   .debug_str:0000000000000a56 .LASF5
     /tmp/ccyEvixc.s:5874   .debug_str:000000000000055b .LASF6
     /tmp/ccyEvixc.s:5716   .debug_str:00000000000000c8 .LASF7
     /tmp/ccyEvixc.s:5980   .debug_str:00000000000008c0 .LASF8
     /tmp/ccyEvixc.s:5968   .debug_str:0000000000000850 .LASF9
     /tmp/ccyEvixc.s:5880   .debug_str:0000000000000584 .LASF10
     /tmp/ccyEvixc.s:5830   .debug_str:000000000000040f .LASF11
     /tmp/ccyEvixc.s:5844   .debug_str:000000000000047b .LASF12
     /tmp/ccyEvixc.s:5752   .debug_str:00000000000001c4 .LASF13
     /tmp/ccyEvixc.s:5816   .debug_str:00000000000003af .LASF14
     /tmp/ccyEvixc.s:5770   .debug_str:0000000000000240 .LASF15
     /tmp/ccyEvixc.s:5750   .debug_str:00000000000001b4 .LASF16
     /tmp/ccyEvixc.s:6062   .debug_str:0000000000000b46 .LASF17
     /tmp/ccyEvixc.s:5802   .debug_str:000000000000031c .LASF18
     /tmp/ccyEvixc.s:6048   .debug_str:0000000000000af7 .LASF19
     /tmp/ccyEvixc.s:6142   .debug_str:0000000000000e4c .LASF29
     /tmp/ccyEvixc.s:5996   .debug_str:000000000000093e .LASF50
     /tmp/ccyEvixc.s:5900   .debug_str:00000000000005ff .LASF20
     /tmp/ccyEvixc.s:5722   .debug_str:00000000000000ed .LASF21
     /tmp/ccyEvixc.s:6156   .debug_str:0000000000000eae .LASF22
     /tmp/ccyEvixc.s:5922   .debug_str:000000000000069b .LASF31
     /tmp/ccyEvixc.s:6122   .debug_str:0000000000000dbd .LASF33
     /tmp/ccyEvixc.s:6058   .debug_str:0000000000000b32 .LASF23
     /tmp/ccyEvixc.s:6030   .debug_str:0000000000000a5d .LASF25
     /tmp/ccyEvixc.s:6032   .debug_str:0000000000000a70 .LASF24
     /tmp/ccyEvixc.s:5760   .debug_str:00000000000001f0 .LASF26
     /tmp/ccyEvixc.s:5718   .debug_str:00000000000000cf .LASF27
     /tmp/ccyEvixc.s:6018   .debug_str:0000000000000a05 .LASF28
     /tmp/ccyEvixc.s:6012   .debug_str:00000000000009e2 .LASF44
     /tmp/ccyEvixc.s:6176   .debug_str:0000000000000f59 .LASF46
     /tmp/ccyEvixc.s:5810   .debug_str:0000000000000372 .LASF30
     /tmp/ccyEvixc.s:5884   .debug_str:000000000000059f .LASF32
     /tmp/ccyEvixc.s:5988   .debug_str:00000000000008f4 .LASF34
GAS LISTING /tmp/ccyEvixc.s 			page 47


     /tmp/ccyEvixc.s:6152   .debug_str:0000000000000ea1 .LASF35
     /tmp/ccyEvixc.s:5834   .debug_str:0000000000000431 .LASF37
     /tmp/ccyEvixc.s:5822   .debug_str:00000000000003db .LASF36
     /tmp/ccyEvixc.s:5866   .debug_str:0000000000000518 .LASF38
     /tmp/ccyEvixc.s:5858   .debug_str:00000000000004ef .LASF39
     /tmp/ccyEvixc.s:5918   .debug_str:0000000000000682 .LASF40
     /tmp/ccyEvixc.s:6020   .debug_str:0000000000000a1d .LASF41
     /tmp/ccyEvixc.s:5992   .debug_str:000000000000091c .LASF42
     /tmp/ccyEvixc.s:5974   .debug_str:0000000000000882 .LASF43
     /tmp/ccyEvixc.s:5962   .debug_str:000000000000081e .LASF45
     /tmp/ccyEvixc.s:6124   .debug_str:0000000000000dde .LASF47
     /tmp/ccyEvixc.s:5914   .debug_str:000000000000066b .LASF48
     /tmp/ccyEvixc.s:6136   .debug_str:0000000000000e1f .LASF49
     /tmp/ccyEvixc.s:6042   .debug_str:0000000000000ac6 .LASF51
     /tmp/ccyEvixc.s:5984   .debug_str:00000000000008d1 .LASF52
     /tmp/ccyEvixc.s:5782   .debug_str:00000000000002be .LASF53
     /tmp/ccyEvixc.s:5694   .debug_str:0000000000000026 .LASF54
     /tmp/ccyEvixc.s:5836   .debug_str:0000000000000447 .LASF55
     /tmp/ccyEvixc.s:5888   .debug_str:00000000000005c0 .LASF56
     /tmp/ccyEvixc.s:5740   .debug_str:0000000000000169 .LASF57
     /tmp/ccyEvixc.s:6072   .debug_str:0000000000000b81 .LASF136
     /tmp/ccyEvixc.s:6060   .debug_str:0000000000000b39 .LASF58
     /tmp/ccyEvixc.s:6150   .debug_str:0000000000000e7f .LASF59
     /tmp/ccyEvixc.s:5958   .debug_str:000000000000080e .LASF238
     /tmp/ccyEvixc.s:5756   .debug_str:00000000000001d8 .LASF60
     /tmp/ccyEvixc.s:5846   .debug_str:0000000000000489 .LASF61
     /tmp/ccyEvixc.s:5998   .debug_str:0000000000000949 .LASF62
     /tmp/ccyEvixc.s:5910   .debug_str:000000000000064c .LASF64
     /tmp/ccyEvixc.s:5920   .debug_str:000000000000068e .LASF63
     /tmp/ccyEvixc.s:5994   .debug_str:0000000000000926 .LASF65
     /tmp/ccyEvixc.s:5990   .debug_str:0000000000000914 .LASF66
     /tmp/ccyEvixc.s:5916   .debug_str:0000000000000670 .LASF67
     /tmp/ccyEvixc.s:6148   .debug_str:0000000000000e67 .LASF68
     /tmp/ccyEvixc.s:5924   .debug_str:00000000000006af .LASF69
     /tmp/ccyEvixc.s:5766   .debug_str:000000000000021c .LASF70
     /tmp/ccyEvixc.s:6120   .debug_str:0000000000000d9e .LASF71
     /tmp/ccyEvixc.s:5832   .debug_str:000000000000041f .LASF72
     /tmp/ccyEvixc.s:6010   .debug_str:00000000000009c3 .LASF73
     /tmp/ccyEvixc.s:5794   .debug_str:00000000000002ee .LASF76
     /tmp/ccyEvixc.s:6046   .debug_str:0000000000000ae1 .LASF78
     /tmp/ccyEvixc.s:5698   .debug_str:0000000000000037 .LASF74
     /tmp/ccyEvixc.s:6078   .debug_str:0000000000000b9b .LASF75
     /tmp/ccyEvixc.s:6118   .debug_str:0000000000000d8a .LASF77
     /tmp/ccyEvixc.s:5956   .debug_str:00000000000007ef .LASF79
     /tmp/ccyEvixc.s:6116   .debug_str:0000000000000d7f .LASF80
     /tmp/ccyEvixc.s:5818   .debug_str:00000000000003be .LASF81
     /tmp/ccyEvixc.s:6138   .debug_str:0000000000000e28 .LASF82
     /tmp/ccyEvixc.s:6034   .debug_str:0000000000000a77 .LASF83
     /tmp/ccyEvixc.s:5790   .debug_str:00000000000002e0 .LASF84
     /tmp/ccyEvixc.s:5764   .debug_str:0000000000000209 .LASF85
     /tmp/ccyEvixc.s:6130   .debug_str:0000000000000e0b .LASF86
     /tmp/ccyEvixc.s:5724   .debug_str:00000000000000f6 .LASF87
     /tmp/ccyEvixc.s:5838   .debug_str:000000000000044f .LASF88
     /tmp/ccyEvixc.s:6004   .debug_str:0000000000000979 .LASF89
     /tmp/ccyEvixc.s:6178   .debug_str:0000000000000f71 .LASF90
     /tmp/ccyEvixc.s:5840   .debug_str:000000000000045a .LASF91
     /tmp/ccyEvixc.s:5702   .debug_str:0000000000000049 .LASF92
GAS LISTING /tmp/ccyEvixc.s 			page 48


     /tmp/ccyEvixc.s:5952   .debug_str:00000000000007da .LASF93
     /tmp/ccyEvixc.s:6162   .debug_str:0000000000000ecf .LASF203
     /tmp/ccyEvixc.s:6110   .debug_str:0000000000000d4a .LASF94
     /tmp/ccyEvixc.s:5748   .debug_str:00000000000001a5 .LASF95
     /tmp/ccyEvixc.s:6172   .debug_str:0000000000000f32 .LASF96
     /tmp/ccyEvixc.s:6068   .debug_str:0000000000000b71 .LASF97
     /tmp/ccyEvixc.s:6094   .debug_str:0000000000000cc3 .LASF98
     /tmp/ccyEvixc.s:6086   .debug_str:0000000000000bdd .LASF99
     /tmp/ccyEvixc.s:5964   .debug_str:0000000000000826 .LASF100
     /tmp/ccyEvixc.s:5812   .debug_str:000000000000037a .LASF101
     /tmp/ccyEvixc.s:6026   .debug_str:0000000000000a48 .LASF102
     /tmp/ccyEvixc.s:6134   .debug_str:0000000000000e18 .LASF103
     /tmp/ccyEvixc.s:5934   .debug_str:0000000000000737 .LASF104
     /tmp/ccyEvixc.s:6180   .debug_str:0000000000000f7e .LASF105
     /tmp/ccyEvixc.s:6084   .debug_str:0000000000000bd5 .LASF106
     /tmp/ccyEvixc.s:5744   .debug_str:0000000000000187 .LASF107
     /tmp/ccyEvixc.s:5776   .debug_str:000000000000027a .LASF133
     /tmp/ccyEvixc.s:5708   .debug_str:000000000000007d .LASF142
     /tmp/ccyEvixc.s:6158   .debug_str:0000000000000eb7 .LASF108
     /tmp/ccyEvixc.s:6050   .debug_str:0000000000000b0d .LASF109
     /tmp/ccyEvixc.s:5890   .debug_str:00000000000005c9 .LASF110
     /tmp/ccyEvixc.s:5950   .debug_str:00000000000007c7 .LASF111
     /tmp/ccyEvixc.s:5792   .debug_str:00000000000002e9 .LASF112
     /tmp/ccyEvixc.s:5798   .debug_str:00000000000002ff .LASF113
     /tmp/ccyEvixc.s:6066   .debug_str:0000000000000b6a .LASF114
     /tmp/ccyEvixc.s:5734   .debug_str:0000000000000139 .LASF115
     /tmp/ccyEvixc.s:5786   .debug_str:00000000000002ca .LASF116
     /tmp/ccyEvixc.s:5942   .debug_str:0000000000000778 .LASF117
     /tmp/ccyEvixc.s:5800   .debug_str:000000000000030f .LASF118
     /tmp/ccyEvixc.s:5710   .debug_str:00000000000000a5 .LASF119
     /tmp/ccyEvixc.s:5960   .debug_str:0000000000000813 .LASF120
     /tmp/ccyEvixc.s:6104   .debug_str:0000000000000d0e .LASF121
     /tmp/ccyEvixc.s:6098   .debug_str:0000000000000cdd .LASF122
     /tmp/ccyEvixc.s:5726   .debug_str:0000000000000108 .LASF123
     /tmp/ccyEvixc.s:5860   .debug_str:00000000000004fb .LASF124
     /tmp/ccyEvixc.s:6080   .debug_str:0000000000000bb3 .LASF125
     /tmp/ccyEvixc.s:5704   .debug_str:0000000000000059 .LASF126
     /tmp/ccyEvixc.s:5720   .debug_str:00000000000000da .LASF127
     /tmp/ccyEvixc.s:6144   .debug_str:0000000000000e52 .LASF128
     /tmp/ccyEvixc.s:6114   .debug_str:0000000000000d6f .LASF129
     /tmp/ccyEvixc.s:6016   .debug_str:00000000000009fb .LASF130
     /tmp/ccyEvixc.s:5886   .debug_str:00000000000005b0 .LASF131
     /tmp/ccyEvixc.s:5954   .debug_str:00000000000007e7 .LASF132
     /tmp/ccyEvixc.s:5796   .debug_str:00000000000002f9 .LASF134
     /tmp/ccyEvixc.s:6106   .debug_str:0000000000000d25 .LASF239
     /tmp/ccyEvixc.s:5946   .debug_str:00000000000007a6 .LASF135
     /tmp/ccyEvixc.s:5784   .debug_str:00000000000002c5 .LASF137
     /tmp/ccyEvixc.s:5824   .debug_str:00000000000003e1 .LASF138
     /tmp/ccyEvixc.s:5754   .debug_str:00000000000001d3 .LASF139
     /tmp/ccyEvixc.s:5804   .debug_str:0000000000000332 .LASF140
     /tmp/ccyEvixc.s:5778   .debug_str:0000000000000288 .LASF141
     /tmp/ccyEvixc.s:5986   .debug_str:00000000000008d9 .LASF143
     /tmp/ccyEvixc.s:5730   .debug_str:0000000000000128 .LASF144
     /tmp/ccyEvixc.s:5930   .debug_str:0000000000000713 .LASF145
     /tmp/ccyEvixc.s:5736   .debug_str:000000000000014b .LASF146
     /tmp/ccyEvixc.s:6064   .debug_str:0000000000000b52 .LASF147
     /tmp/ccyEvixc.s:6108   .debug_str:0000000000000d32 .LASF240
GAS LISTING /tmp/ccyEvixc.s 			page 49


     /tmp/ccyEvixc.s:5876   .debug_str:000000000000056d .LASF148
     /tmp/ccyEvixc.s:5774   .debug_str:0000000000000265 .LASF149
     /tmp/ccyEvixc.s:5870   .debug_str:0000000000000545 .LASF150
     /tmp/ccyEvixc.s:5808   .debug_str:0000000000000356 .LASF151
     /tmp/ccyEvixc.s:5896   .debug_str:00000000000005ef .LASF152
     /tmp/ccyEvixc.s:5932   .debug_str:0000000000000718 .LASF153
     /tmp/ccyEvixc.s:5738   .debug_str:0000000000000160 .LASF154
     /tmp/ccyEvixc.s:5926   .debug_str:00000000000006d2 .LASF155
     /tmp/ccyEvixc.s:5700   .debug_str:0000000000000042 .LASF156
     /tmp/ccyEvixc.s:5902   .debug_str:0000000000000608 .LASF157
     /tmp/ccyEvixc.s:5772   .debug_str:0000000000000250 .LASF158
     /tmp/ccyEvixc.s:6140   .debug_str:0000000000000e36 .LASF159
     /tmp/ccyEvixc.s:5908   .debug_str:0000000000000643 .LASF160
     /tmp/ccyEvixc.s:5788   .debug_str:00000000000002d3 .LASF161
     /tmp/ccyEvixc.s:6112   .debug_str:0000000000000d52 .LASF162
     /tmp/ccyEvixc.s:6038   .debug_str:0000000000000ab0 .LASF163
     /tmp/ccyEvixc.s:5948   .debug_str:00000000000007b2 .LASF164
     /tmp/ccyEvixc.s:5972   .debug_str:000000000000087c .LASF165
     /tmp/ccyEvixc.s:5936   .debug_str:0000000000000743 .LASF166
     /tmp/ccyEvixc.s:5872   .debug_str:000000000000054d .LASF167
     /tmp/ccyEvixc.s:5966   .debug_str:0000000000000832 .LASF168
     /tmp/ccyEvixc.s:5850   .debug_str:00000000000004b9 .LASF169
     /tmp/ccyEvixc.s:6008   .debug_str:00000000000009a6 .LASF170
     /tmp/ccyEvixc.s:5762   .debug_str:0000000000000203 .LASF171
     /tmp/ccyEvixc.s:5742   .debug_str:0000000000000172 .LASF172
     /tmp/ccyEvixc.s:5712   .debug_str:00000000000000b3 .LASF173
     /tmp/ccyEvixc.s:5938   .debug_str:0000000000000758 .LASF174
     /tmp/ccyEvixc.s:5692   .debug_str:000000000000001b .LASF175
     /tmp/ccyEvixc.s:5828   .debug_str:00000000000003f4 .LASF176
     /tmp/ccyEvixc.s:6070   .debug_str:0000000000000b76 .LASF177
     /tmp/ccyEvixc.s:5690   .debug_str:0000000000000000 .LASF178
     /tmp/ccyEvixc.s:5906   .debug_str:000000000000062b .LASF179
     /tmp/ccyEvixc.s:5814   .debug_str:0000000000000387 .LASF180
     /tmp/ccyEvixc.s:6024   .debug_str:0000000000000a3a .LASF181
     /tmp/ccyEvixc.s:5978   .debug_str:00000000000008a2 .LASF182
     /tmp/ccyEvixc.s:5758   .debug_str:00000000000001e2 .LASF183
     /tmp/ccyEvixc.s:6166   .debug_str:0000000000000ef3 .LASF184
     /tmp/ccyEvixc.s:6082   .debug_str:0000000000000bc4 .LASF185
     /tmp/ccyEvixc.s:6054   .debug_str:0000000000000b19 .LASF186
     /tmp/ccyEvixc.s:5842   .debug_str:0000000000000466 .LASF187
     /tmp/ccyEvixc.s:6074   .debug_str:0000000000000b89 .LASF188
     /tmp/ccyEvixc.s:5826   .debug_str:00000000000003e6 .LASF189
     /tmp/ccyEvixc.s:5696   .debug_str:000000000000002e .LASF241
     /tmp/ccyEvixc.s:6126   .debug_str:0000000000000df4 .LASF190
     /tmp/ccyEvixc.s:6092   .debug_str:0000000000000cb6 .LASF191
     /tmp/ccyEvixc.s:5864   .debug_str:000000000000050e .LASF192
     /tmp/ccyEvixc.s:5982   .debug_str:00000000000008c7 .LASF193
     /tmp/ccyEvixc.s:5894   .debug_str:00000000000005e4 .LASF194
     /tmp/ccyEvixc.s:6128   .debug_str:0000000000000e00 .LASF195
     /tmp/ccyEvixc.s:6040   .debug_str:0000000000000ab6 .LASF196
     /tmp/ccyEvixc.s:6076   .debug_str:0000000000000b96 .LASF197
     /tmp/ccyEvixc.s:5878   .debug_str:000000000000057a .LASF198
     /tmp/ccyEvixc.s:6056   .debug_str:0000000000000b2d .LASF199
     /tmp/ccyEvixc.s:5940   .debug_str:0000000000000773 .LASF200
     /tmp/ccyEvixc.s:6170   .debug_str:0000000000000f25 .LASF201
     /tmp/ccyEvixc.s:6160   .debug_str:0000000000000ebd .LASF202
     /tmp/ccyEvixc.s:5854   .debug_str:00000000000004ce .LASF204
GAS LISTING /tmp/ccyEvixc.s 			page 50


     /tmp/ccyEvixc.s:6168   .debug_str:0000000000000f11 .LASF242
     /tmp/ccyEvixc.s:5732   .debug_str:000000000000012e .LASF205
     /tmp/ccyEvixc.s:6174   .debug_str:0000000000000f38 .LASF206
     /tmp/ccyEvixc.s:5904   .debug_str:0000000000000626 .LASF207
     /tmp/ccyEvixc.s:5768   .debug_str:000000000000022b .LASF208
     /tmp/ccyEvixc.s:5852   .debug_str:00000000000004c6 .LASF209
     /tmp/ccyEvixc.s:5944   .debug_str:000000000000078e .LASF210
     /tmp/ccyEvixc.s:5898   .debug_str:00000000000005f7 .LASF211
     /tmp/ccyEvixc.s:5706   .debug_str:0000000000000061 .LASF212
     /tmp/ccyEvixc.s:5728   .debug_str:0000000000000120 .LASF213
     /tmp/ccyEvixc.s:5868   .debug_str:000000000000052d .LASF214
     /tmp/ccyEvixc.s:5882   .debug_str:0000000000000597 .LASF215
     /tmp/ccyEvixc.s:5780   .debug_str:00000000000002a2 .LASF216
     /tmp/ccyEvixc.s:6096   .debug_str:0000000000000ccd .LASF217
     /tmp/ccyEvixc.s:6002   .debug_str:0000000000000958 .LASF218
     /tmp/ccyEvixc.s:6102   .debug_str:0000000000000cfe .LASF219
     /tmp/ccyEvixc.s:5928   .debug_str:00000000000006ee .LASF220
     /tmp/ccyEvixc.s:5976   .debug_str:0000000000000891 .LASF221
     /tmp/ccyEvixc.s:102    .text:0000000000000000 .LFB56
     /tmp/ccyEvixc.s:1149   .text:0000000000000604 .LFE56
     /tmp/ccyEvixc.s:6052   .debug_str:0000000000000b12 .LASF222
     /tmp/ccyEvixc.s:5145   .debug_loc:0000000000000000 .LLST5
     /tmp/ccyEvixc.s:6090   .debug_str:0000000000000cb1 .LASF223
     /tmp/ccyEvixc.s:5176   .debug_loc:0000000000000087 .LLST6
     /tmp/ccyEvixc.s:6146   .debug_str:0000000000000e5f .LASF224
     /tmp/ccyEvixc.s:5207   .debug_loc:000000000000010e .LLST7
     /tmp/ccyEvixc.s:5229   .debug_loc:000000000000016d .LLST8
     /tmp/ccyEvixc.s:5251   .debug_loc:00000000000001cc .LLST9
     /tmp/ccyEvixc.s:5273   .debug_loc:000000000000022d .LLST10
     /tmp/ccyEvixc.s:5295   .debug_loc:000000000000028e .LLST11
     /tmp/ccyEvixc.s:5317   .debug_loc:00000000000002ef .LLST12
     /tmp/ccyEvixc.s:781    .text:000000000000037c .LBB30
     /tmp/ccyEvixc.s:819    .text:00000000000003d4 .LBE30
     /tmp/ccyEvixc.s:5510   .debug_loc:0000000000000648 .LLST13
     /tmp/ccyEvixc.s:785    .text:0000000000000384 .LVL68
     /tmp/ccyEvixc.s:794    .text:0000000000000394 .LVL70
     /tmp/ccyEvixc.s:810    .text:00000000000003bc .LVL71
     /tmp/ccyEvixc.s:814    .text:00000000000003c4 .LVL72
     /tmp/ccyEvixc.s:818    .text:00000000000003d4 .LVL73
     /tmp/ccyEvixc.s:962    .text:00000000000004c0 .LBB33
     /tmp/ccyEvixc.s:1025   .text:0000000000000540 .LBE33
     /tmp/ccyEvixc.s:5518   .debug_loc:000000000000066d .LLST14
     /tmp/ccyEvixc.s:966    .text:00000000000004c8 .LVL85
     /tmp/ccyEvixc.s:978    .text:00000000000004e4 .LVL87
     /tmp/ccyEvixc.s:990    .text:0000000000000500 .LVL88
     /tmp/ccyEvixc.s:995    .text:0000000000000510 .LVL89
     /tmp/ccyEvixc.s:1003   .text:0000000000000524 .LVL90
     /tmp/ccyEvixc.s:1024   .text:0000000000000540 .LVL91
     /tmp/ccyEvixc.s:364    .text:00000000000000b0 .LVL22
     /tmp/ccyEvixc.s:382    .text:00000000000000c8 .LVL24
     /tmp/ccyEvixc.s:407    .text:00000000000000f4 .LVL26
     /tmp/ccyEvixc.s:429    .text:000000000000012c .LVL27
     /tmp/ccyEvixc.s:463    .text:0000000000000148 .LVL29
     /tmp/ccyEvixc.s:468    .text:000000000000015c .LVL30
     /tmp/ccyEvixc.s:472    .text:0000000000000164 .LVL31
     /tmp/ccyEvixc.s:476    .text:0000000000000174 .LVL32
     /tmp/ccyEvixc.s:492    .text:0000000000000184 .LVL33
GAS LISTING /tmp/ccyEvixc.s 			page 51


     /tmp/ccyEvixc.s:501    .text:0000000000000190 .LVL35
     /tmp/ccyEvixc.s:512    .text:00000000000001a4 .LVL37
     /tmp/ccyEvixc.s:516    .text:00000000000001ac .LVL38
     /tmp/ccyEvixc.s:525    .text:00000000000001b8 .LVL40
     /tmp/ccyEvixc.s:537    .text:00000000000001d8 .LVL41
     /tmp/ccyEvixc.s:542    .text:00000000000001ec .LVL42
     /tmp/ccyEvixc.s:546    .text:00000000000001f4 .LVL43
     /tmp/ccyEvixc.s:550    .text:0000000000000204 .LVL44
     /tmp/ccyEvixc.s:554    .text:000000000000020c .LVL45
     /tmp/ccyEvixc.s:563    .text:0000000000000220 .LVL46
     /tmp/ccyEvixc.s:569    .text:0000000000000230 .LVL47
     /tmp/ccyEvixc.s:584    .text:000000000000024c .LVL49
     /tmp/ccyEvixc.s:628    .text:0000000000000284 .LVL51
     /tmp/ccyEvixc.s:644    .text:000000000000029c .LVL52
     /tmp/ccyEvixc.s:647    .text:00000000000002a8 .LVL53
     /tmp/ccyEvixc.s:658    .text:00000000000002bc .LVL55
     /tmp/ccyEvixc.s:676    .text:00000000000002d4 .LVL57
     /tmp/ccyEvixc.s:722    .text:0000000000000304 .LVL59
     /tmp/ccyEvixc.s:727    .text:0000000000000318 .LVL60
     /tmp/ccyEvixc.s:731    .text:0000000000000320 .LVL61
     /tmp/ccyEvixc.s:740    .text:000000000000032c .LVL63
     /tmp/ccyEvixc.s:759    .text:0000000000000348 .LVL65
     /tmp/ccyEvixc.s:768    .text:0000000000000354 .LVL66
     /tmp/ccyEvixc.s:773    .text:0000000000000364 .LVL67
     /tmp/ccyEvixc.s:837    .text:00000000000003fc .LVL75
     /tmp/ccyEvixc.s:881    .text:0000000000000434 .LVL77
     /tmp/ccyEvixc.s:895    .text:0000000000000460 .LVL78
     /tmp/ccyEvixc.s:1045   .text:0000000000000560 .LVL93
     /tmp/ccyEvixc.s:1049   .text:0000000000000568 .LVL94
     /tmp/ccyEvixc.s:1060   .text:0000000000000584 .LVL95
     /tmp/ccyEvixc.s:1064   .text:000000000000058c .LVL96
     /tmp/ccyEvixc.s:1070   .text:000000000000059c .LVL97
     /tmp/ccyEvixc.s:1074   .text:00000000000005ac .LVL98
     /tmp/ccyEvixc.s:1085   .text:00000000000005c8 .LVL99
     /tmp/ccyEvixc.s:5820   .debug_str:00000000000003d6 .LASF225
     /tmp/ccyEvixc.s:5714   .debug_str:00000000000000be .LASF226
     /tmp/ccyEvixc.s:5746   .debug_str:0000000000000198 .LASF243
     /tmp/ccyEvixc.s:11     .text._ZN4KSemD2Ev:0000000000000000 .LFB58
     /tmp/ccyEvixc.s:85     .text._ZN4KSemD2Ev:000000000000004c .LFE58
     /tmp/ccyEvixc.s:5530   .debug_loc:00000000000006a5 .LLST0
     /tmp/ccyEvixc.s:31     .text._ZN4KSemD2Ev:0000000000000018 .LBB19
     /tmp/ccyEvixc.s:71     .text._ZN4KSemD2Ev:0000000000000038 .LBE19
     /tmp/ccyEvixc.s:5548   .debug_loc:00000000000006f1 .LLST1
     /tmp/ccyEvixc.s:36     .text._ZN4KSemD2Ev:0000000000000018 .LBB21
     /tmp/ccyEvixc.s:43     .text._ZN4KSemD2Ev:000000000000001c .LBE21
     /tmp/ccyEvixc.s:5566   .debug_loc:000000000000072e .LLST2
     /tmp/ccyEvixc.s:46     .text._ZN4KSemD2Ev:0000000000000020 .LBB23
     /tmp/ccyEvixc.s:69     .text._ZN4KSemD2Ev:0000000000000038 .LBE23
     /tmp/ccyEvixc.s:5575   .debug_loc:0000000000000753 .LLST3
     /tmp/ccyEvixc.s:58     .text._ZN4KSemD2Ev:000000000000002c .LBB24
     /tmp/ccyEvixc.s:68     .text._ZN4KSemD2Ev:0000000000000038 .LBE24
     /tmp/ccyEvixc.s:5582   .debug_loc:0000000000000776 .LLST4
     /tmp/ccyEvixc.s:63     .text._ZN4KSemD2Ev:0000000000000034 .LVL5
     /tmp/ccyEvixc.s:1471   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000000 .LFB43
     /tmp/ccyEvixc.s:1490   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000020 .LFE43
     /tmp/ccyEvixc.s:1444   .text._ZN3TCB10getRunningEv:0000000000000000 .LFB41
     /tmp/ccyEvixc.s:1464   .text._ZN3TCB10getRunningEv:0000000000000024 .LFE41
GAS LISTING /tmp/ccyEvixc.s 			page 52


     /tmp/ccyEvixc.s:1416   .text._ZN3TCB7getBodyEv:0000000000000000 .LFB37
     /tmp/ccyEvixc.s:1437   .text._ZN3TCB7getBodyEv:000000000000001c .LFE37
     /tmp/ccyEvixc.s:5589   .debug_loc:0000000000000799 .LLST16
     /tmp/ccyEvixc.s:1388   .text._ZN3TCB12getTimeSliceEv:0000000000000000 .LFB36
     /tmp/ccyEvixc.s:1409   .text._ZN3TCB12getTimeSliceEv:000000000000001c .LFE36
     /tmp/ccyEvixc.s:5603   .debug_loc:00000000000007d2 .LLST15
     /tmp/ccyEvixc.s:1359   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000000 .LFB34
     /tmp/ccyEvixc.s:1381   .text._ZN3TCB9setStatusENS_12ThreadStatusE:000000000000001c .LFE34
     /tmp/ccyEvixc.s:6154   .debug_str:0000000000000ea9 .LASF227
     /tmp/ccyEvixc.s:1332   .text._ZN8KConsole13getOutputTailEv:0000000000000000 .LFB30
     /tmp/ccyEvixc.s:1352   .text._ZN8KConsole13getOutputTailEv:0000000000000024 .LFE30
     /tmp/ccyEvixc.s:1305   .text._ZN8KConsole13getOutputHeadEv:0000000000000000 .LFB29
     /tmp/ccyEvixc.s:1325   .text._ZN8KConsole13getOutputHeadEv:0000000000000024 .LFE29
     /tmp/ccyEvixc.s:1278   .text._ZN8KConsole23getOutputBufferHasSpaceEv:0000000000000000 .LFB28
     /tmp/ccyEvixc.s:1298   .text._ZN8KConsole23getOutputBufferHasSpaceEv:0000000000000024 .LFE28
     /tmp/ccyEvixc.s:1248   .text._ZN8KConsole10setDRvalueEc:0000000000000000 .LFB27
     /tmp/ccyEvixc.s:1271   .text._ZN8KConsole10setDRvalueEc:0000000000000028 .LFE27
     /tmp/ccyEvixc.s:1219   .text._ZN8KConsole10getDRvalueEv:0000000000000000 .LFB26
     /tmp/ccyEvixc.s:1241   .text._ZN8KConsole10getDRvalueEv:0000000000000028 .LFE26
     /tmp/ccyEvixc.s:1189   .text._ZN8KConsole10getSRvalueEv:0000000000000000 .LFB25
     /tmp/ccyEvixc.s:1212   .text._ZN8KConsole10getSRvalueEv:0000000000000028 .LFE25
     /tmp/ccyEvixc.s:6022   .debug_str:0000000000000a35 .LASF244
     /tmp/ccyEvixc.s:6100   .debug_str:0000000000000ce9 .LASF245
     /tmp/ccyEvixc.s:1156   .text._ZN5Riscv6mc_sipEm:0000000000000000 .LFB1
     /tmp/ccyEvixc.s:1182   .text._ZN5Riscv6mc_sipEm:000000000000001c .LFE1
     /tmp/ccyEvixc.s:6132   .debug_str:0000000000000e13 .LASF228
     /tmp/ccyEvixc.s:6006   .debug_str:0000000000000991 .LASF229
     /tmp/ccyEvixc.s:5848   .debug_str:00000000000004ae .LASF231
     /tmp/ccyEvixc.s:5912   .debug_str:0000000000000660 .LASF230
     /tmp/ccyEvixc.s:6044   .debug_str:0000000000000ad3 .LASF232
     /tmp/ccyEvixc.s:6164   .debug_str:0000000000000ee5 .LASF233
     /tmp/ccyEvixc.s:5856   .debug_str:00000000000004e6 .LASF234
     /tmp/ccyEvixc.s:125    .text:000000000000001c .LVL7
     /tmp/ccyEvixc.s:132    .text:0000000000000020 .LVL8
     /tmp/ccyEvixc.s:950    .text:00000000000004ac .LVL83
     /tmp/ccyEvixc.s:957    .text:00000000000004b0 .LVL84
     /tmp/ccyEvixc.s:1141   .text:00000000000005f8 .LVL102
     /tmp/ccyEvixc.s:1146   .text:0000000000000600 .LVL103
     /tmp/ccyEvixc.s:135    .text:0000000000000024 .LVL9
     /tmp/ccyEvixc.s:142    .text:0000000000000028 .LVL10
     /tmp/ccyEvixc.s:927    .text:0000000000000494 .LVL81
     /tmp/ccyEvixc.s:939    .text:00000000000004a0 .LVL82
     /tmp/ccyEvixc.s:145    .text:000000000000002c .LVL11
     /tmp/ccyEvixc.s:153    .text:0000000000000030 .LVL12
     /tmp/ccyEvixc.s:156    .text:0000000000000034 .LVL13
     /tmp/ccyEvixc.s:163    .text:0000000000000038 .LVL14
     /tmp/ccyEvixc.s:166    .text:000000000000003c .LVL15
     /tmp/ccyEvixc.s:173    .text:0000000000000040 .LVL16
     /tmp/ccyEvixc.s:176    .text:0000000000000044 .LVL17
     /tmp/ccyEvixc.s:183    .text:0000000000000048 .LVL18
     /tmp/ccyEvixc.s:186    .text:000000000000004c .LVL19
     /tmp/ccyEvixc.s:193    .text:0000000000000050 .LVL20
     /tmp/ccyEvixc.s:196    .text:0000000000000054 .LVL21
     /tmp/ccyEvixc.s:374    .text:00000000000000b8 .LVL23
     /tmp/ccyEvixc.s:392    .text:00000000000000d0 .LVL25
     /tmp/ccyEvixc.s:457    .text:0000000000000140 .LVL28
     /tmp/ccyEvixc.s:495    .text:0000000000000188 .LVL34
GAS LISTING /tmp/ccyEvixc.s 			page 53


     /tmp/ccyEvixc.s:504    .text:0000000000000194 .LVL36
     /tmp/ccyEvixc.s:519    .text:00000000000001b0 .LVL39
     /tmp/ccyEvixc.s:572    .text:0000000000000234 .LVL48
     /tmp/ccyEvixc.s:620    .text:0000000000000274 .LVL50
     /tmp/ccyEvixc.s:650    .text:00000000000002ac .LVL54
     /tmp/ccyEvixc.s:668    .text:00000000000002c4 .LVL56
     /tmp/ccyEvixc.s:686    .text:00000000000002dc .LVL58
     /tmp/ccyEvixc.s:734    .text:0000000000000324 .LVL62
     /tmp/ccyEvixc.s:750    .text:0000000000000334 .LVL64
     /tmp/ccyEvixc.s:822    .text:00000000000003d8 .LVL74
     /tmp/ccyEvixc.s:873    .text:0000000000000424 .LVL76
     /tmp/ccyEvixc.s:898    .text:0000000000000464 .LVL79
     /tmp/ccyEvixc.s:903    .text:000000000000046c .LVL80
     /tmp/ccyEvixc.s:1031   .text:0000000000000544 .LVL92
     /tmp/ccyEvixc.s:1108   .text:00000000000005dc .LVL100
     /tmp/ccyEvixc.s:1128   .text:00000000000005ec .LVL101
     /tmp/ccyEvixc.s:788    .text:000000000000038c .LVL69
     /tmp/ccyEvixc.s:970    .text:00000000000004d0 .LVL86
     /tmp/ccyEvixc.s:17     .text._ZN4KSemD2Ev:0000000000000000 .LVL0
     /tmp/ccyEvixc.s:29     .text._ZN4KSemD2Ev:0000000000000018 .LVL1
     /tmp/ccyEvixc.s:80     .text._ZN4KSemD2Ev:0000000000000044 .LVL6
     /tmp/ccyEvixc.s:41     .text._ZN4KSemD2Ev:000000000000001c .LVL2
     /tmp/ccyEvixc.s:48     .text._ZN4KSemD2Ev:0000000000000020 .LVL3
     /tmp/ccyEvixc.s:57     .text._ZN4KSemD2Ev:000000000000002c .LVL4
     /tmp/ccyEvixc.s:1419   .text._ZN3TCB7getBodyEv:0000000000000000 .LVL109
     /tmp/ccyEvixc.s:1429   .text._ZN3TCB7getBodyEv:0000000000000010 .LVL110
     /tmp/ccyEvixc.s:1391   .text._ZN3TCB12getTimeSliceEv:0000000000000000 .LVL107
     /tmp/ccyEvixc.s:1401   .text._ZN3TCB12getTimeSliceEv:0000000000000010 .LVL108
     /tmp/ccyEvixc.s:1499   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccyEvixc.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccyEvixc.s:1493   .text:0000000000000604 .Letext0
     /tmp/ccyEvixc.s:88     .gcc_except_table._ZN4KSemD2Ev:0000000000000000 .LLSDA58
                           .group:0000000000000000 _ZN4KSemD5Ev

UNDEFINED SYMBOLS
_Z8mem_freePv
__gxx_personality_v0
_ZN7KMemory7kmallocEm
_ZN7KMemory5kfreeEPv
_ZN3TCB12createThreadEPFvPvES0_Pm
main
_ZN9Scheduler3putEP3TCB
_ZN3TCB13releaseJoinedEPS_
_ZN3TCB8dispatchEv
_ZN3TCB10threadJoinEPS_
_ZN3TCB10quitThreadEPS_
_ZN4KSem7initSemEj
_ZN4KSem8closeSemEPS_
_ZN4KSemdlEPv
_ZN4KSem4waitEv
_ZN4KSem6signalEv
_ZN9Scheduler10putToSleepEP3TCBm
_ZN8KConsole5kgetcEv
_ZN8KConsole5kputcEc
_ZN8KConsole13getFromOutputEv
_Z10sem_signalP4KSem
plic_claim
GAS LISTING /tmp/ccyEvixc.s 			page 54


_ZN8KConsole12placeInInputEc
plic_complete
_ZN9Scheduler4wakeEv
_ZN8KConsole2srE
_ZN8KConsole2drE
_ZN8KConsole20outputBufferHasSpaceE
_ZN8KConsole10outputHeadE
_ZN8KConsole10outputTailE
_ZN3TCB7runningE
_ZN3TCB16runningTimeSliceE
