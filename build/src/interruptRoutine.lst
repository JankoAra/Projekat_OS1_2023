GAS LISTING /tmp/ccfopqiX.s 			page 1


   1              		.file	"interruptRoutine.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.section	.rodata
   7              		.align	3
   8              	.LC0:
   9 0000 0A4E6570 		.string	"\nNepostojeci op code: "
   9      6F73746F 
   9      6A656369 
   9      206F7020 
   9      636F6465 
  10 0017 00       		.align	3
  11              	.LC1:
  12 0018 0A736361 		.string	"\nscause: "
  12      7573653A 
  12      2000
  13 0022 00000000 		.align	3
  13      0000
  14              	.LC2:
  15 0028 0A736570 		.string	"\nsepc: "
  15      633A2000 
  16              		.align	3
  17              	.LC3:
  18 0030 4E656B69 		.string	"Neki drugi prekid\n"
  18      20647275 
  18      67692070 
  18      72656B69 
  18      640A00
  19 0043 00000000 		.align	3
  19      00
  20              	.LC4:
  21 0048 0A477265 		.string	"\nGreska u prekidnoj rutini\n"
  21      736B6120 
  21      75207072 
  21      656B6964 
  21      6E6F6A20 
  22 0064 00000000 		.align	3
  23              	.LC5:
  24 0068 73636175 		.string	"scause: "
  24      73653A20 
  24      00
  25              		.text
  26              		.align	2
  27              		.globl	interruptRoutine
  29              	interruptRoutine:
  30              	.LFB51:
  31              		.file 1 "src/interruptRoutine.cpp"
   1:src/interruptRoutine.cpp **** //
   2:src/interruptRoutine.cpp **** // Created by os on 5/22/23.
   3:src/interruptRoutine.cpp **** //
   4:src/interruptRoutine.cpp **** 
   5:src/interruptRoutine.cpp **** #include "../lib/console.h"
   6:src/interruptRoutine.cpp **** #include "../lib/hw.h"
   7:src/interruptRoutine.cpp **** #include "../h/MemoryAllocator.hpp"
   8:src/interruptRoutine.cpp **** #include "../h/helper.hpp"
GAS LISTING /tmp/ccfopqiX.s 			page 2


   9:src/interruptRoutine.cpp **** #include "../h/Riscv.hpp"
  10:src/interruptRoutine.cpp **** #include "../h/syscall_c.hpp"
  11:src/interruptRoutine.cpp **** #include "../h/TCB.hpp"
  12:src/interruptRoutine.cpp **** #include "../h/Scheduler.hpp"
  13:src/interruptRoutine.cpp **** #include "../h/KSem.hpp"
  14:src/interruptRoutine.cpp **** #include "../h/KConsole.hpp"
  15:src/interruptRoutine.cpp **** 
  16:src/interruptRoutine.cpp **** #include "../test/printing.hpp"
  17:src/interruptRoutine.cpp **** 
  18:src/interruptRoutine.cpp **** //void printInteger(int i);
  19:src/interruptRoutine.cpp **** 
  20:src/interruptRoutine.cpp **** #pragma GCC optimize("O0")
  21:src/interruptRoutine.cpp **** extern "C" void interruptRoutine() {
  32              		.loc 1 21 36
  33              		.cfi_startproc
  34 0000 130101EC 		addi	sp,sp,-320
  35              		.cfi_def_cfa_offset 320
  36 0004 233C1112 		sd	ra,312(sp)
  37 0008 23388112 		sd	s0,304(sp)
  38              		.cfi_offset 1, -8
  39              		.cfi_offset 8, -16
  40 000c 13040114 		addi	s0,sp,320
  41              		.cfi_def_cfa 8, 0
  22:src/interruptRoutine.cpp **** 	uint64 scause, sepc, sstatus;
  42              		.loc 1 22 2
  23:src/interruptRoutine.cpp **** 	__asm__ volatile("csrr %[scause], scause":[scause] "=r"(scause): : "a5", "a0", "a1", "a2", "a3", "
  43              		.loc 1 23 2
  44              		.loc 1 23 116 is_stmt 0
  45              	#APP
  46              	# 23 "src/interruptRoutine.cpp" 1
  24              		__asm__ volatile("csrr %[sepc], sepc":[sepc] "=r"(sepc): : "a5", "a0", "a1", "a2", "a3", "a4", "a6
  47              		csrr t1, scause
  48              	# 0 "" 2
  49              	#NO_APP
  50 0014 233C64FC 		sd	t1,-40(s0)
  51              	.LVL0:
  52              		.loc 1 24 2 is_stmt 1
  53              		.loc 1 24 108 is_stmt 0
  54              	#APP
  55              	# 24 "src/interruptRoutine.cpp" 1
  25              		__asm__ volatile("csrr %[status], sstatus":[status] "=r"(
  56              		csrr t1, sepc
  57              	# 0 "" 2
  58              	.LVL1:
  59              	#NO_APP
  60 001c 233864FC 		sd	t1,-48(s0)
  61              	.LVL2:
  62              		.loc 1 25 2 is_stmt 1
  26:src/interruptRoutine.cpp **** 			sstatus): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7");
  63              		.loc 1 26 63 is_stmt 0
  64              	#APP
  65              	# 26 "src/interruptRoutine.cpp" 1
  27              		uint64 a0, a1, a2, a3, a4, a5, a6, a7;
  66              		csrr t1, sstatus
  67              	# 0 "" 2
  68              	.LVL3:
  69              	#NO_APP
GAS LISTING /tmp/ccfopqiX.s 			page 3


  70 0024 233464FC 		sd	t1,-56(s0)
  71              	.LVL4:
  72              		.loc 1 27 2 is_stmt 1
  28:src/interruptRoutine.cpp **** 	__asm__ volatile("mv %[ax], a0":[ax] "=r"(a0): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7");
  73              		.loc 1 28 2
  74              		.loc 1 28 98 is_stmt 0
  75              	#APP
  76              	# 28 "src/interruptRoutine.cpp" 1
  29              		__asm__ volatile("mv %[ax], a1":[ax] "=r"(a1): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7");
  77              		mv t1, a0
  78              	# 0 "" 2
  79              	.LVL5:
  80              	#NO_APP
  81 002c 233064FC 		sd	t1,-64(s0)
  82              	.LVL6:
  83              		.loc 1 29 2 is_stmt 1
  84              		.loc 1 29 98 is_stmt 0
  85              	#APP
  86              	# 29 "src/interruptRoutine.cpp" 1
  30              		__asm__ volatile("mv %[ax], a2":[ax] "=r"(a2): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7");
  87              		mv t1, a1
  88              	# 0 "" 2
  89              	.LVL7:
  90              	#NO_APP
  91 0034 233C64FA 		sd	t1,-72(s0)
  92              	.LVL8:
  93              		.loc 1 30 2 is_stmt 1
  94              		.loc 1 30 98 is_stmt 0
  95              	#APP
  96              	# 30 "src/interruptRoutine.cpp" 1
  31              		__asm__ volatile("mv %[ax], a3":[ax] "=r"(a3): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7");
  97              		mv t1, a2
  98              	# 0 "" 2
  99              	.LVL9:
 100              	#NO_APP
 101 003c 233864FA 		sd	t1,-80(s0)
 102              	.LVL10:
 103              		.loc 1 31 2 is_stmt 1
 104              		.loc 1 31 98 is_stmt 0
 105              	#APP
 106              	# 31 "src/interruptRoutine.cpp" 1
  32              		__asm__ volatile("mv %[ax], a4":[ax] "=r"(a4): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7");
 107              		mv t1, a3
 108              	# 0 "" 2
 109              	.LVL11:
 110              	#NO_APP
 111 0044 233464FA 		sd	t1,-88(s0)
 112              	.LVL12:
 113              		.loc 1 32 2 is_stmt 1
 114              		.loc 1 32 98 is_stmt 0
 115              	#APP
 116              	# 32 "src/interruptRoutine.cpp" 1
  33              		__asm__ volatile("mv %[ax], a5":[ax] "=r"(a5): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7");
 117              		mv t1, a4
 118              	# 0 "" 2
 119              	.LVL13:
 120              	#NO_APP
GAS LISTING /tmp/ccfopqiX.s 			page 4


 121 004c 233064FA 		sd	t1,-96(s0)
 122              	.LVL14:
 123              		.loc 1 33 2 is_stmt 1
 124              		.loc 1 33 98 is_stmt 0
 125              	#APP
 126              	# 33 "src/interruptRoutine.cpp" 1
  34              		__asm__ volatile("mv %[ax], a6":[ax] "=r"(a6): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7");
 127              		mv t1, a5
 128              	# 0 "" 2
 129              	.LVL15:
 130              	#NO_APP
 131 0054 233C64F8 		sd	t1,-104(s0)
 132              	.LVL16:
 133              		.loc 1 34 2 is_stmt 1
 134              		.loc 1 34 98 is_stmt 0
 135              	#APP
 136              	# 34 "src/interruptRoutine.cpp" 1
  35              		__asm__ volatile("mv %[ax], a7":[ax] "=r"(a7): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7");
 137              		mv t1, a6
 138              	# 0 "" 2
 139              	.LVL17:
 140              	#NO_APP
 141 005c 233864F8 		sd	t1,-112(s0)
 142              	.LVL18:
 143              		.loc 1 35 2 is_stmt 1
 144              		.loc 1 35 98 is_stmt 0
 145              	#APP
 146              	# 35 "src/interruptRoutine.cpp" 1
  36              	
 147              		mv t1, a7
 148              	# 0 "" 2
 149              	.LVL19:
 150              	#NO_APP
 151 0064 233464F8 		sd	t1,-120(s0)
 152              	.LVL20:
  37:src/interruptRoutine.cpp **** 	if (scause == 0x09 || scause == 0x08) {
 153              		.loc 1 37 2 is_stmt 1
 154              	.LBB2:
 155 0068 033784FD 		ld	a4,-40(s0)
 156 006c 93079000 		li	a5,9
 157 0070 6308F700 		beq	a4,a5,.L2
 158              		.loc 1 37 21 is_stmt 0 discriminator 1
 159 0074 033784FD 		ld	a4,-40(s0)
 160 0078 93078000 		li	a5,8
 161 007c 6316F750 		bne	a4,a5,.L3
 162              	.L2:
 163              	.LBB3:
  38:src/interruptRoutine.cpp **** 		//prekid zbog poziva ecall
  39:src/interruptRoutine.cpp **** 		uint64 opCode = a0;
 164              		.loc 1 39 3 is_stmt 1
 165              		.loc 1 39 10 is_stmt 0
 166 0080 833704FC 		ld	a5,-64(s0)
 167 0084 233CF4F6 		sd	a5,-136(s0)
 168              	.LVL21:
  40:src/interruptRoutine.cpp **** 		switch (opCode) {
 169              		.loc 1 40 3 is_stmt 1
 170              	.LBB4:
GAS LISTING /tmp/ccfopqiX.s 			page 5


 171 0088 033784F7 		ld	a4,-136(s0)
 172 008c 93071009 		li	a5,145
 173              	.LVL22:
 174 0090 6300F738 		beq	a4,a5,.L4
 175 0094 033784F7 		ld	a4,-136(s0)
 176 0098 93071009 		li	a5,145
 177 009c 63EEE744 		bgtu	a4,a5,.L5
 178 00a0 033784F7 		ld	a4,-136(s0)
 179 00a4 93070009 		li	a5,144
 180 00a8 6308F732 		beq	a4,a5,.L6
 181 00ac 033784F7 		ld	a4,-136(s0)
 182 00b0 93070009 		li	a5,144
 183 00b4 63E2E744 		bgtu	a4,a5,.L5
 184 00b8 033784F7 		ld	a4,-136(s0)
 185 00bc 93071008 		li	a5,129
 186 00c0 6300F730 		beq	a4,a5,.L7
 187 00c4 033784F7 		ld	a4,-136(s0)
 188 00c8 93071008 		li	a5,129
 189 00cc 63E6E742 		bgtu	a4,a5,.L5
 190 00d0 033784F7 		ld	a4,-136(s0)
 191 00d4 93072004 		li	a5,66
 192 00d8 63E2E704 		bgtu	a4,a5,.L8
 193 00dc 833784F7 		ld	a5,-136(s0)
 194 00e0 638C0740 		beqz	a5,.L5
 195 00e4 033784F7 		ld	a4,-136(s0)
 196 00e8 93072004 		li	a5,66
 197 00ec 63E6E740 		bgtu	a4,a5,.L5
 198 00f0 833784F7 		ld	a5,-136(s0)
 199 00f4 13972700 		slli	a4,a5,2
 200              	.LVL23:
 201 00f8 97070000 		lla	a5,.L10
 201      93870700 
 202              	.LVL24:
 203 0100 B307F700 		add	a5,a4,a5
 204 0104 83A70700 		lw	a5,0(a5)
 205 0108 1B870700 		sext.w	a4,a5
 206 010c 97070000 		lla	a5,.L10
 206      93870700 
 207 0114 B307F700 		add	a5,a4,a5
 208 0118 67800700 		jr	a5
 209              		.section	.rodata
 210 0071 000000   		.align	2
 211              		.align	2
 212              	.L10:
 213 0074 00000000 		.word	.L5-.L10
 214 0078 00000000 		.word	.L22-.L10
 215 007c 00000000 		.word	.L21-.L10
 216 0080 00000000 		.word	.L5-.L10
 217 0084 00000000 		.word	.L5-.L10
 218 0088 00000000 		.word	.L5-.L10
 219 008c 00000000 		.word	.L5-.L10
 220 0090 00000000 		.word	.L5-.L10
 221 0094 00000000 		.word	.L5-.L10
 222 0098 00000000 		.word	.L5-.L10
 223 009c 00000000 		.word	.L5-.L10
 224 00a0 00000000 		.word	.L5-.L10
 225 00a4 00000000 		.word	.L5-.L10
GAS LISTING /tmp/ccfopqiX.s 			page 6


 226 00a8 00000000 		.word	.L5-.L10
 227 00ac 00000000 		.word	.L5-.L10
 228 00b0 00000000 		.word	.L5-.L10
 229 00b4 00000000 		.word	.L5-.L10
 230 00b8 00000000 		.word	.L20-.L10
 231 00bc 00000000 		.word	.L19-.L10
 232 00c0 00000000 		.word	.L18-.L10
 233 00c4 00000000 		.word	.L17-.L10
 234 00c8 00000000 		.word	.L5-.L10
 235 00cc 00000000 		.word	.L5-.L10
 236 00d0 00000000 		.word	.L5-.L10
 237 00d4 00000000 		.word	.L5-.L10
 238 00d8 00000000 		.word	.L5-.L10
 239 00dc 00000000 		.word	.L5-.L10
 240 00e0 00000000 		.word	.L5-.L10
 241 00e4 00000000 		.word	.L5-.L10
 242 00e8 00000000 		.word	.L5-.L10
 243 00ec 00000000 		.word	.L5-.L10
 244 00f0 00000000 		.word	.L5-.L10
 245 00f4 00000000 		.word	.L5-.L10
 246 00f8 00000000 		.word	.L16-.L10
 247 00fc 00000000 		.word	.L15-.L10
 248 0100 00000000 		.word	.L14-.L10
 249 0104 00000000 		.word	.L13-.L10
 250 0108 00000000 		.word	.L5-.L10
 251 010c 00000000 		.word	.L5-.L10
 252 0110 00000000 		.word	.L5-.L10
 253 0114 00000000 		.word	.L5-.L10
 254 0118 00000000 		.word	.L5-.L10
 255 011c 00000000 		.word	.L5-.L10
 256 0120 00000000 		.word	.L5-.L10
 257 0124 00000000 		.word	.L5-.L10
 258 0128 00000000 		.word	.L5-.L10
 259 012c 00000000 		.word	.L5-.L10
 260 0130 00000000 		.word	.L5-.L10
 261 0134 00000000 		.word	.L5-.L10
 262 0138 00000000 		.word	.L12-.L10
 263 013c 00000000 		.word	.L5-.L10
 264 0140 00000000 		.word	.L5-.L10
 265 0144 00000000 		.word	.L5-.L10
 266 0148 00000000 		.word	.L5-.L10
 267 014c 00000000 		.word	.L5-.L10
 268 0150 00000000 		.word	.L5-.L10
 269 0154 00000000 		.word	.L5-.L10
 270 0158 00000000 		.word	.L5-.L10
 271 015c 00000000 		.word	.L5-.L10
 272 0160 00000000 		.word	.L5-.L10
 273 0164 00000000 		.word	.L5-.L10
 274 0168 00000000 		.word	.L5-.L10
 275 016c 00000000 		.word	.L5-.L10
 276 0170 00000000 		.word	.L5-.L10
 277 0174 00000000 		.word	.L5-.L10
 278 0178 00000000 		.word	.L11-.L10
 279 017c 00000000 		.word	.L9-.L10
 280              		.text
 281              	.LVL25:
 282              	.L8:
GAS LISTING /tmp/ccfopqiX.s 			page 7


 283 011c 033784F7 		ld	a4,-136(s0)
 284              	.LVL26:
 285 0120 93070008 		li	a5,128
 286 0124 630EF722 		beq	a4,a5,.L23
 287 0128 6F00003D 		j	.L5
 288              	.L22:
 289              	.LBB5:
  41:src/interruptRoutine.cpp **** 			case 0x01:
 290              		.loc 1 41 4
  42:src/interruptRoutine.cpp **** 				//mem_alloc
  43:src/interruptRoutine.cpp **** 				size_t size;
 291              		.loc 1 43 5
  44:src/interruptRoutine.cpp **** 				size = (size_t)a1;	//size je broj blokova koje treba alocirati
 292              		.loc 1 44 5
 293              		.loc 1 44 10 is_stmt 0
 294 012c 833784FB 		ld	a5,-72(s0)
 295 0130 2338F4EC 		sd	a5,-304(s0)
 296              	.LVL27:
  45:src/interruptRoutine.cpp **** 				size = size * MEM_BLOCK_SIZE;
 297              		.loc 1 45 5 is_stmt 1
 298              		.loc 1 45 10 is_stmt 0
 299 0134 833704ED 		ld	a5,-304(s0)
 300 0138 93976700 		slli	a5,a5,6
 301              	.LVL28:
 302 013c 2338F4EC 		sd	a5,-304(s0)
 303              	.LVL29:
  46:src/interruptRoutine.cpp **** 				MemoryAllocator::kmalloc(size);
 304              		.loc 1 46 5 is_stmt 1
 305              		.loc 1 46 29 is_stmt 0
 306 0140 93053000 		li	a1,3
 307 0144 033504ED 		ld	a0,-304(s0)
 308 0148 97000000 		call	_ZN15MemoryAllocator7kmallocEmNS_7PurposeE@plt
 308      E7800000 
 309              	.LVL30:
  47:src/interruptRoutine.cpp **** 				__asm__ volatile("sd a0, 80(s0)");
 310              		.loc 1 47 5 is_stmt 1
 311              		.loc 1 47 38 is_stmt 0
 312              	#APP
 313              	# 47 "src/interruptRoutine.cpp" 1
  48              					break;
 314              		sd a0, 80(s0)
 315              	# 0 "" 2
 316              		.loc 1 48 5 is_stmt 1
 317              	#NO_APP
 318 0154 6F000041 		j	.L24
 319              	.LVL31:
 320              	.L21:
  49:src/interruptRoutine.cpp **** 			case 0x02:
 321              		.loc 1 49 4
  50:src/interruptRoutine.cpp **** 				//mem_free
  51:src/interruptRoutine.cpp **** 				void* ptr;
 322              		.loc 1 51 5
  52:src/interruptRoutine.cpp **** 				ptr = (void*)a1;
 323              		.loc 1 52 5
 324              		.loc 1 52 9 is_stmt 0
 325 0158 833784FB 		ld	a5,-72(s0)
 326 015c 233CF4EC 		sd	a5,-296(s0)
GAS LISTING /tmp/ccfopqiX.s 			page 8


 327              	.LVL32:
  53:src/interruptRoutine.cpp **** 				MemoryAllocator::kfree(ptr);
 328              		.loc 1 53 5 is_stmt 1
 329              		.loc 1 53 27 is_stmt 0
 330 0160 033584ED 		ld	a0,-296(s0)
 331 0164 97000000 		call	_ZN15MemoryAllocator5kfreeEPv@plt
 331      E7800000 
 332              	.LVL33:
  54:src/interruptRoutine.cpp **** 				__asm__ volatile("sd a0, 80(s0)");
 333              		.loc 1 54 5 is_stmt 1
 334              		.loc 1 54 38 is_stmt 0
 335              	#APP
 336              	# 54 "src/interruptRoutine.cpp" 1
  55              					break;
 337              		sd a0, 80(s0)
 338              	# 0 "" 2
 339              		.loc 1 55 5 is_stmt 1
 340              	#NO_APP
 341 0170 6F00403F 		j	.L24
 342              	.LVL34:
 343              	.L20:
  56:src/interruptRoutine.cpp **** 			case 0x11:
 344              		.loc 1 56 4
  57:src/interruptRoutine.cpp **** 				//thread_create
  58:src/interruptRoutine.cpp **** 				thread_t* handle;
 345              		.loc 1 58 5
  59:src/interruptRoutine.cpp **** 				handle = (thread_t*)a1;
 346              		.loc 1 59 5
 347              		.loc 1 59 12 is_stmt 0
 348 0174 833784FB 		ld	a5,-72(s0)
 349 0178 233CF4EE 		sd	a5,-264(s0)
 350              	.LVL35:
  60:src/interruptRoutine.cpp **** 				void (* function)(void*);
 351              		.loc 1 60 5 is_stmt 1
  61:src/interruptRoutine.cpp **** 				function = (void (*)(void*))a2;
 352              		.loc 1 61 5
 353              		.loc 1 61 14 is_stmt 0
 354 017c 833704FB 		ld	a5,-80(s0)
 355              	.LVL36:
 356 0180 2338F4EE 		sd	a5,-272(s0)
 357              	.LVL37:
  62:src/interruptRoutine.cpp **** 				void* args;
 358              		.loc 1 62 5 is_stmt 1
  63:src/interruptRoutine.cpp **** 				args = (void*)a3;
 359              		.loc 1 63 5
 360              		.loc 1 63 10 is_stmt 0
 361 0184 833784FA 		ld	a5,-88(s0)
 362              	.LVL38:
 363 0188 2334F4EE 		sd	a5,-280(s0)
 364              	.LVL39:
  64:src/interruptRoutine.cpp **** 				uint64* sp;
 365              		.loc 1 64 5 is_stmt 1
  65:src/interruptRoutine.cpp **** 				sp = (uint64*)a4;
 366              		.loc 1 65 5
 367              		.loc 1 65 8 is_stmt 0
 368 018c 833704FA 		ld	a5,-96(s0)
 369              	.LVL40:
GAS LISTING /tmp/ccfopqiX.s 			page 9


 370 0190 2330F4EE 		sd	a5,-288(s0)
 371              	.LVL41:
  66:src/interruptRoutine.cpp **** 
  67:src/interruptRoutine.cpp **** 				*handle = TCB::createThread(function, args, sp);
 372              		.loc 1 67 5 is_stmt 1
 373              		.loc 1 67 32 is_stmt 0
 374 0194 033604EE 		ld	a2,-288(s0)
 375 0198 833584EE 		ld	a1,-280(s0)
 376 019c 033504EF 		ld	a0,-272(s0)
 377 01a0 97000000 		call	_ZN3TCB12createThreadEPFvPvES0_Pm@plt
 377      E7800000 
 378              	.LVL42:
 379 01a8 13070500 		mv	a4,a0
 380              		.loc 1 67 13
 381 01ac 833784EF 		ld	a5,-264(s0)
 382 01b0 23B0E700 		sd	a4,0(a5)
  68:src/interruptRoutine.cpp **** 				TCB::start(*handle);
 383              		.loc 1 68 5 is_stmt 1
 384              		.loc 1 68 15 is_stmt 0
 385 01b4 833784EF 		ld	a5,-264(s0)
 386 01b8 83B70700 		ld	a5,0(a5)
 387 01bc 13850700 		mv	a0,a5
 388 01c0 97000000 		call	_ZN3TCB5startEPS_@plt
 388      E7800000 
 389              	.LVL43:
  69:src/interruptRoutine.cpp **** 				if (*handle != nullptr) {
 390              		.loc 1 69 5 is_stmt 1
 391              		.loc 1 69 9 is_stmt 0
 392 01c8 833784EF 		ld	a5,-264(s0)
 393 01cc 83B70700 		ld	a5,0(a5)
 394              		.loc 1 69 5
 395 01d0 63860700 		beqz	a5,.L25
  70:src/interruptRoutine.cpp **** 					__asm__ volatile("li a0, 0");
 396              		.loc 1 70 6 is_stmt 1
 397              		.loc 1 70 34 is_stmt 0
 398              	#APP
 399              	# 70 "src/interruptRoutine.cpp" 1
  71              					} else {
 400              		li a0, 0
 401              	# 0 "" 2
 402              	#NO_APP
 403 01d8 6F008000 		j	.L26
 404              	.L25:
  72:src/interruptRoutine.cpp **** 					__asm__ volatile("li a0, -1");
 405              		.loc 1 72 6 is_stmt 1
 406              		.loc 1 72 35 is_stmt 0
 407              	#APP
 408              	# 72 "src/interruptRoutine.cpp" 1
  73              					}
 409              		li a0, -1
 410              	# 0 "" 2
 411              	#NO_APP
 412              	.L26:
  74:src/interruptRoutine.cpp **** 				__asm__ volatile("sd a0, 80(s0)");
 413              		.loc 1 74 5 is_stmt 1
 414              		.loc 1 74 38 is_stmt 0
 415              	#APP
GAS LISTING /tmp/ccfopqiX.s 			page 10


 416              	# 74 "src/interruptRoutine.cpp" 1
  75              					break;
 417              		sd a0, 80(s0)
 418              	# 0 "" 2
 419              		.loc 1 75 5 is_stmt 1
 420              	#NO_APP
 421 01e4 6F000038 		j	.L24
 422              	.LVL44:
 423              	.L19:
  76:src/interruptRoutine.cpp **** 			case 0x12:
 424              		.loc 1 76 4
  77:src/interruptRoutine.cpp **** 				//thread_exit
  78:src/interruptRoutine.cpp **** 				TCB::running->setFinished(true);
 425              		.loc 1 78 5
 426              		.loc 1 78 30 is_stmt 0
 427 01e8 97070000 		la	a5,_ZN3TCB7runningE
 427      83B70700 
 428 01f0 83B70700 		ld	a5,0(a5)
 429 01f4 93051000 		li	a1,1
 430 01f8 13850700 		mv	a0,a5
 431 01fc 97000000 		call	_ZN3TCB11setFinishedEb
 431      E7800000 
 432              	.LVL45:
  79:src/interruptRoutine.cpp **** 				TCB::releaseJoined();
 433              		.loc 1 79 5 is_stmt 1
 434              		.loc 1 79 23 is_stmt 0
 435 0204 97000000 		call	_ZN3TCB13releaseJoinedEv@plt
 435      E7800000 
 436              	.LVL46:
  80:src/interruptRoutine.cpp **** 				TCB::yield();
 437              		.loc 1 80 5 is_stmt 1
 438              		.loc 1 80 15 is_stmt 0
 439 020c 97000000 		call	_ZN3TCB5yieldEv@plt
 439      E7800000 
 440              	.LVL47:
  81:src/interruptRoutine.cpp **** 				break;
 441              		.loc 1 81 5 is_stmt 1
 442 0214 6F000035 		j	.L24
 443              	.LVL48:
 444              	.L18:
  82:src/interruptRoutine.cpp **** 			case 0x13:
 445              		.loc 1 82 4
  83:src/interruptRoutine.cpp **** 				//thread_dispatch
  84:src/interruptRoutine.cpp **** 				TCB::yield();
 446              		.loc 1 84 5
 447              		.loc 1 84 15 is_stmt 0
 448 0218 97000000 		call	_ZN3TCB5yieldEv@plt
 448      E7800000 
 449              	.LVL49:
  85:src/interruptRoutine.cpp **** 				break;
 450              		.loc 1 85 5 is_stmt 1
 451 0220 6F004034 		j	.L24
 452              	.LVL50:
 453              	.L17:
  86:src/interruptRoutine.cpp **** 			case 0x14:
 454              		.loc 1 86 4
  87:src/interruptRoutine.cpp **** 				//thread_join
GAS LISTING /tmp/ccfopqiX.s 			page 11


  88:src/interruptRoutine.cpp **** 				thread_t handleToJoin;
 455              		.loc 1 88 5
  89:src/interruptRoutine.cpp **** 				handleToJoin = (thread_t)a1;
 456              		.loc 1 89 5
 457              		.loc 1 89 18 is_stmt 0
 458 0224 833784FB 		ld	a5,-72(s0)
 459 0228 2330F4F0 		sd	a5,-256(s0)
 460              	.LVL51:
  90:src/interruptRoutine.cpp **** 				TCB::threadJoin(handleToJoin);
 461              		.loc 1 90 5 is_stmt 1
 462              		.loc 1 90 20 is_stmt 0
 463 022c 033504F0 		ld	a0,-256(s0)
 464 0230 97000000 		call	_ZN3TCB10threadJoinEPS_@plt
 464      E7800000 
 465              	.LVL52:
  91:src/interruptRoutine.cpp **** 				TCB::yield();
 466              		.loc 1 91 5 is_stmt 1
 467              		.loc 1 91 15 is_stmt 0
 468 0238 97000000 		call	_ZN3TCB5yieldEv@plt
 468      E7800000 
 469              	.LVL53:
  92:src/interruptRoutine.cpp **** 				break;
 470              		.loc 1 92 5 is_stmt 1
 471 0240 6F004032 		j	.L24
 472              	.LVL54:
 473              	.L16:
  93:src/interruptRoutine.cpp **** 			case 0x21:
 474              		.loc 1 93 4
  94:src/interruptRoutine.cpp **** 				//sem_open
  95:src/interruptRoutine.cpp **** 				sem_t* openHandle;
 475              		.loc 1 95 5
  96:src/interruptRoutine.cpp **** 				openHandle = (sem_t*)a1;
 476              		.loc 1 96 5
 477              		.loc 1 96 16 is_stmt 0
 478 0244 833784FB 		ld	a5,-72(s0)
 479 0248 2338F4F0 		sd	a5,-240(s0)
 480              	.LVL55:
  97:src/interruptRoutine.cpp **** 				uint initVal;
 481              		.loc 1 97 5 is_stmt 1
  98:src/interruptRoutine.cpp **** 				initVal = (uint)a2;
 482              		.loc 1 98 5
 483              		.loc 1 98 13 is_stmt 0
 484 024c 833704FB 		ld	a5,-80(s0)
 485              	.LVL56:
 486 0250 2326F4F0 		sw	a5,-244(s0)
 487              	.LVL57:
  99:src/interruptRoutine.cpp **** 				*openHandle = KSem::initSem(initVal);
 488              		.loc 1 99 5 is_stmt 1
 489              		.loc 1 99 32 is_stmt 0
 490 0254 8327C4F0 		lw	a5,-244(s0)
 491              	.LVL58:
 492 0258 13850700 		mv	a0,a5
 493 025c 97000000 		call	_ZN4KSem7initSemEj@plt
 493      E7800000 
 494              	.LVL59:
 495 0264 13070500 		mv	a4,a0
 496              		.loc 1 99 17
GAS LISTING /tmp/ccfopqiX.s 			page 12


 497 0268 833704F1 		ld	a5,-240(s0)
 498 026c 23B0E700 		sd	a4,0(a5)
 100:src/interruptRoutine.cpp **** 				if (*openHandle != nullptr) {
 499              		.loc 1 100 5 is_stmt 1
 500              		.loc 1 100 9 is_stmt 0
 501 0270 833704F1 		ld	a5,-240(s0)
 502 0274 83B70700 		ld	a5,0(a5)
 503              		.loc 1 100 5
 504 0278 63860700 		beqz	a5,.L27
 101:src/interruptRoutine.cpp **** 					__asm__ volatile("li a0, 0");
 505              		.loc 1 101 6 is_stmt 1
 506              		.loc 1 101 34 is_stmt 0
 507              	#APP
 508              	# 101 "src/interruptRoutine.cpp" 1
 102              					} else {
 509              		li a0, 0
 510              	# 0 "" 2
 511              	#NO_APP
 512 0280 6F008000 		j	.L28
 513              	.L27:
 103:src/interruptRoutine.cpp **** 					__asm__ volatile("li a0, -1");
 514              		.loc 1 103 6 is_stmt 1
 515              		.loc 1 103 35 is_stmt 0
 516              	#APP
 517              	# 103 "src/interruptRoutine.cpp" 1
 104              					}
 518              		li a0, -1
 519              	# 0 "" 2
 520              	#NO_APP
 521              	.L28:
 105:src/interruptRoutine.cpp **** 				__asm__ volatile("sd a0, 80(s0)");
 522              		.loc 1 105 5 is_stmt 1
 523              		.loc 1 105 38 is_stmt 0
 524              	#APP
 525              	# 105 "src/interruptRoutine.cpp" 1
 106              					break;
 526              		sd a0, 80(s0)
 527              	# 0 "" 2
 528              		.loc 1 106 5 is_stmt 1
 529              	#NO_APP
 530 028c 6F00802D 		j	.L24
 531              	.LVL60:
 532              	.L15:
 107:src/interruptRoutine.cpp **** 			case 0x22:
 533              		.loc 1 107 4
 108:src/interruptRoutine.cpp **** 				//sem_close
 109:src/interruptRoutine.cpp **** 				sem_t closeHandle;
 534              		.loc 1 109 5
 110:src/interruptRoutine.cpp **** 				closeHandle = (sem_t)a1;
 535              		.loc 1 110 5
 536              		.loc 1 110 17 is_stmt 0
 537 0290 833784FB 		ld	a5,-72(s0)
 538 0294 233CF4F0 		sd	a5,-232(s0)
 539              	.LVL61:
 111:src/interruptRoutine.cpp **** 				KSem::closeSem(closeHandle);
 540              		.loc 1 111 5 is_stmt 1
 541              		.loc 1 111 19 is_stmt 0
GAS LISTING /tmp/ccfopqiX.s 			page 13


 542 0298 033584F1 		ld	a0,-232(s0)
 543 029c 97000000 		call	_ZN4KSem8closeSemEPS_@plt
 543      E7800000 
 544              	.LVL62:
 112:src/interruptRoutine.cpp **** 				__asm__ volatile("sd a0, 80(s0)");
 545              		.loc 1 112 5 is_stmt 1
 546              		.loc 1 112 38 is_stmt 0
 547              	#APP
 548              	# 112 "src/interruptRoutine.cpp" 1
 113              					break;
 549              		sd a0, 80(s0)
 550              	# 0 "" 2
 551              		.loc 1 113 5 is_stmt 1
 552              	#NO_APP
 553 02a8 6F00C02B 		j	.L24
 554              	.LVL63:
 555              	.L14:
 114:src/interruptRoutine.cpp **** 			case 0x23:
 556              		.loc 1 114 4
 115:src/interruptRoutine.cpp **** 				//sem_wait
 116:src/interruptRoutine.cpp **** 				sem_t waitHandle;
 557              		.loc 1 116 5
 117:src/interruptRoutine.cpp **** 				waitHandle = (sem_t)a1;
 558              		.loc 1 117 5
 559              		.loc 1 117 16 is_stmt 0
 560 02ac 833784FB 		ld	a5,-72(s0)
 561 02b0 2330F4F2 		sd	a5,-224(s0)
 562              	.LVL64:
 118:src/interruptRoutine.cpp **** 				waitHandle->wait();
 563              		.loc 1 118 5 is_stmt 1
 564              		.loc 1 118 21 is_stmt 0
 565 02b4 033504F2 		ld	a0,-224(s0)
 566 02b8 97000000 		call	_ZN4KSem4waitEv@plt
 566      E7800000 
 567              	.LVL65:
 119:src/interruptRoutine.cpp **** 				__asm__ volatile("sd a0, 80(s0)");
 568              		.loc 1 119 5 is_stmt 1
 569              		.loc 1 119 38 is_stmt 0
 570              	#APP
 571              	# 119 "src/interruptRoutine.cpp" 1
 120              					break;
 572              		sd a0, 80(s0)
 573              	# 0 "" 2
 574              		.loc 1 120 5 is_stmt 1
 575              	#NO_APP
 576 02c4 6F00002A 		j	.L24
 577              	.LVL66:
 578              	.L13:
 121:src/interruptRoutine.cpp **** 			case 0x24:
 579              		.loc 1 121 4
 122:src/interruptRoutine.cpp **** 				//sem_signal
 123:src/interruptRoutine.cpp **** 				sem_t signalHandle;
 580              		.loc 1 123 5
 124:src/interruptRoutine.cpp **** 				signalHandle = (sem_t)a1;
 581              		.loc 1 124 5
 582              		.loc 1 124 18 is_stmt 0
 583 02c8 833784FB 		ld	a5,-72(s0)
GAS LISTING /tmp/ccfopqiX.s 			page 14


 584 02cc 2334F4F2 		sd	a5,-216(s0)
 585              	.LVL67:
 125:src/interruptRoutine.cpp **** 				signalHandle->signal();
 586              		.loc 1 125 5 is_stmt 1
 587              		.loc 1 125 25 is_stmt 0
 588 02d0 033584F2 		ld	a0,-216(s0)
 589 02d4 97000000 		call	_ZN4KSem6signalEv@plt
 589      E7800000 
 590              	.LVL68:
 126:src/interruptRoutine.cpp **** 				__asm__ volatile("sd a0, 80(s0)");
 591              		.loc 1 126 5 is_stmt 1
 592              		.loc 1 126 38 is_stmt 0
 593              	#APP
 594              	# 126 "src/interruptRoutine.cpp" 1
 127              					break;
 595              		sd a0, 80(s0)
 596              	# 0 "" 2
 597              		.loc 1 127 5 is_stmt 1
 598              	#NO_APP
 599 02e0 6F004028 		j	.L24
 600              	.LVL69:
 601              	.L12:
 128:src/interruptRoutine.cpp **** 			case 0x31:
 602              		.loc 1 128 4
 129:src/interruptRoutine.cpp **** 				//time_sleep
 130:src/interruptRoutine.cpp **** 				time_t timerPeriods;
 603              		.loc 1 130 5
 131:src/interruptRoutine.cpp **** 				timerPeriods = (time_t)a1;
 604              		.loc 1 131 5
 605              		.loc 1 131 18 is_stmt 0
 606 02e4 833784FB 		ld	a5,-72(s0)
 607 02e8 2338F4F2 		sd	a5,-208(s0)
 608              	.LVL70:
 132:src/interruptRoutine.cpp **** 				if (timerPeriods > 0) {
 609              		.loc 1 132 5 is_stmt 1
 610 02ec 833704F3 		ld	a5,-208(s0)
 611 02f0 63860700 		beqz	a5,.L29
 133:src/interruptRoutine.cpp **** 					__asm__ volatile("li a0, 0");
 612              		.loc 1 133 6
 613              		.loc 1 133 34 is_stmt 0
 614              	#APP
 615              	# 133 "src/interruptRoutine.cpp" 1
 134              					} else {
 616              		li a0, 0
 617              	# 0 "" 2
 618              	#NO_APP
 619 02f8 6F008000 		j	.L30
 620              	.L29:
 135:src/interruptRoutine.cpp **** 					__asm__ volatile("li a0, -1");
 621              		.loc 1 135 6 is_stmt 1
 622              		.loc 1 135 35 is_stmt 0
 623              	#APP
 624              	# 135 "src/interruptRoutine.cpp" 1
 136              					}
 625              		li a0, -1
 626              	# 0 "" 2
 627              	#NO_APP
GAS LISTING /tmp/ccfopqiX.s 			page 15


 628              	.L30:
 137:src/interruptRoutine.cpp **** 				__asm__ volatile("sd a0, 80(s0)");
 629              		.loc 1 137 5 is_stmt 1
 630              		.loc 1 137 38 is_stmt 0
 631              	#APP
 632              	# 137 "src/interruptRoutine.cpp" 1
 138              					if (timerPeriods > 0) {
 633              		sd a0, 80(s0)
 634              	# 0 "" 2
 635              		.loc 1 138 5 is_stmt 1
 636              	#NO_APP
 637 0304 833704F3 		ld	a5,-208(s0)
 638              	.LVL71:
 639 0308 63840724 		beqz	a5,.L48
 139:src/interruptRoutine.cpp **** 					Scheduler::putToSleep(TCB::running, timerPeriods);
 640              		.loc 1 139 6
 641              		.loc 1 139 27 is_stmt 0
 642 030c 97070000 		la	a5,_ZN3TCB7runningE
 642      83B70700 
 643 0314 83B70700 		ld	a5,0(a5)
 644 0318 833504F3 		ld	a1,-208(s0)
 645 031c 13850700 		mv	a0,a5
 646 0320 97000000 		call	_ZN9Scheduler10putToSleepEP3TCBm@plt
 646      E7800000 
 647              	.LVL72:
 140:src/interruptRoutine.cpp **** 					TCB::yield();
 648              		.loc 1 140 6 is_stmt 1
 649              		.loc 1 140 16 is_stmt 0
 650 0328 97000000 		call	_ZN3TCB5yieldEv@plt
 650      E7800000 
 651              	.LVL73:
 141:src/interruptRoutine.cpp **** 				}
 142:src/interruptRoutine.cpp **** 				break;
 652              		.loc 1 142 5 is_stmt 1
 653 0330 6F000022 		j	.L48
 654              	.LVL74:
 655              	.L11:
 143:src/interruptRoutine.cpp **** 			case 0x41:
 656              		.loc 1 143 4
 144:src/interruptRoutine.cpp **** 				//getc
 145:src/interruptRoutine.cpp **** 				KConsole::kgetc();
 657              		.loc 1 145 5
 658              		.loc 1 145 20 is_stmt 0
 659 0334 97000000 		call	_ZN8KConsole5kgetcEv@plt
 659      E7800000 
 660              	.LVL75:
 146:src/interruptRoutine.cpp **** 				__asm__ volatile("sd a0, 80(s0)");
 661              		.loc 1 146 5 is_stmt 1
 662              		.loc 1 146 38 is_stmt 0
 663              	#APP
 664              	# 146 "src/interruptRoutine.cpp" 1
 147              					break;
 665              		sd a0, 80(s0)
 666              	# 0 "" 2
 667              		.loc 1 147 5 is_stmt 1
 668              	#NO_APP
 669 0340 6F004022 		j	.L24
GAS LISTING /tmp/ccfopqiX.s 			page 16


 670              	.LVL76:
 671              	.L9:
 148:src/interruptRoutine.cpp **** 			case 0x42:
 672              		.loc 1 148 4
 149:src/interruptRoutine.cpp **** 				//putc
 150:src/interruptRoutine.cpp **** 				char c;
 673              		.loc 1 150 5
 151:src/interruptRoutine.cpp **** 				c = (char)a1;
 674              		.loc 1 151 5
 675              		.loc 1 151 7 is_stmt 0
 676 0344 833784FB 		ld	a5,-72(s0)
 677 0348 A30FF4F2 		sb	a5,-193(s0)
 678              	.LVL77:
 152:src/interruptRoutine.cpp **** 				KConsole::kputc(c);
 679              		.loc 1 152 5 is_stmt 1
 680              		.loc 1 152 20 is_stmt 0
 681 034c 8347F4F3 		lbu	a5,-193(s0)
 682              	.LVL78:
 683 0350 13850700 		mv	a0,a5
 684 0354 97000000 		call	_ZN8KConsole5kputcEc@plt
 684      E7800000 
 685              	.LVL79:
 153:src/interruptRoutine.cpp **** 				break;
 686              		.loc 1 153 5 is_stmt 1
 687 035c 6F008020 		j	.L24
 688              	.LVL80:
 689              	.L23:
 154:src/interruptRoutine.cpp **** 			case 0x80:
 690              		.loc 1 154 4
 155:src/interruptRoutine.cpp **** 				//alloc thread
 156:src/interruptRoutine.cpp **** 				thread_t* handleAlloc;
 691              		.loc 1 156 5
 157:src/interruptRoutine.cpp **** 				handleAlloc = (thread_t*)a1;
 692              		.loc 1 157 5
 693              		.loc 1 157 17 is_stmt 0
 694 0360 833784FB 		ld	a5,-72(s0)
 695 0364 233CF4F4 		sd	a5,-168(s0)
 696              	.LVL81:
 158:src/interruptRoutine.cpp **** 				void (* foo)(void*);
 697              		.loc 1 158 5 is_stmt 1
 159:src/interruptRoutine.cpp **** 				foo = (void (*)(void*))a2;
 698              		.loc 1 159 5
 699              		.loc 1 159 9 is_stmt 0
 700 0368 833704FB 		ld	a5,-80(s0)
 701              	.LVL82:
 702 036c 2338F4F4 		sd	a5,-176(s0)
 703              	.LVL83:
 160:src/interruptRoutine.cpp **** 				void* argsAlloc;
 704              		.loc 1 160 5 is_stmt 1
 161:src/interruptRoutine.cpp **** 				argsAlloc = (void*)a3;
 705              		.loc 1 161 5
 706              		.loc 1 161 15 is_stmt 0
 707 0370 833784FA 		ld	a5,-88(s0)
 708              	.LVL84:
 709 0374 2334F4F4 		sd	a5,-184(s0)
 710              	.LVL85:
 162:src/interruptRoutine.cpp **** 				uint64* spAlloc;
GAS LISTING /tmp/ccfopqiX.s 			page 17


 711              		.loc 1 162 5 is_stmt 1
 163:src/interruptRoutine.cpp **** 				spAlloc = (uint64*)a4;
 712              		.loc 1 163 5
 713              		.loc 1 163 13 is_stmt 0
 714 0378 833704FA 		ld	a5,-96(s0)
 715              	.LVL86:
 716 037c 2330F4F4 		sd	a5,-192(s0)
 717              	.LVL87:
 164:src/interruptRoutine.cpp **** 
 165:src/interruptRoutine.cpp **** 				*handleAlloc = TCB::createThread(foo, argsAlloc, spAlloc);
 718              		.loc 1 165 5 is_stmt 1
 719              		.loc 1 165 37 is_stmt 0
 720 0380 033604F4 		ld	a2,-192(s0)
 721 0384 833584F4 		ld	a1,-184(s0)
 722 0388 033504F5 		ld	a0,-176(s0)
 723 038c 97000000 		call	_ZN3TCB12createThreadEPFvPvES0_Pm@plt
 723      E7800000 
 724              	.LVL88:
 725 0394 13070500 		mv	a4,a0
 726              		.loc 1 165 18
 727 0398 833784F5 		ld	a5,-168(s0)
 728 039c 23B0E700 		sd	a4,0(a5)
 166:src/interruptRoutine.cpp **** 				if (*handleAlloc != nullptr) {
 729              		.loc 1 166 5 is_stmt 1
 730              		.loc 1 166 9 is_stmt 0
 731 03a0 833784F5 		ld	a5,-168(s0)
 732 03a4 83B70700 		ld	a5,0(a5)
 733              		.loc 1 166 5
 734 03a8 63860700 		beqz	a5,.L32
 167:src/interruptRoutine.cpp **** 					__asm__ volatile("li a0, 0");
 735              		.loc 1 167 6 is_stmt 1
 736              		.loc 1 167 34 is_stmt 0
 737              	#APP
 738              	# 167 "src/interruptRoutine.cpp" 1
 168              					} else {
 739              		li a0, 0
 740              	# 0 "" 2
 741              	#NO_APP
 742 03b0 6F008000 		j	.L33
 743              	.L32:
 169:src/interruptRoutine.cpp **** 					__asm__ volatile("li a0, -1");
 744              		.loc 1 169 6 is_stmt 1
 745              		.loc 1 169 35 is_stmt 0
 746              	#APP
 747              	# 169 "src/interruptRoutine.cpp" 1
 170              					}
 748              		li a0, -1
 749              	# 0 "" 2
 750              	#NO_APP
 751              	.L33:
 171:src/interruptRoutine.cpp **** 				__asm__ volatile("sd a0, 80(s0)");
 752              		.loc 1 171 5 is_stmt 1
 753              		.loc 1 171 38 is_stmt 0
 754              	#APP
 755              	# 171 "src/interruptRoutine.cpp" 1
 172              					break;
 756              		sd a0, 80(s0)
GAS LISTING /tmp/ccfopqiX.s 			page 18


 757              	# 0 "" 2
 758              		.loc 1 172 5 is_stmt 1
 759              	#NO_APP
 760 03bc 6F00801A 		j	.L24
 761              	.LVL89:
 762              	.L7:
 173:src/interruptRoutine.cpp **** 			case 0x81:
 763              		.loc 1 173 4
 174:src/interruptRoutine.cpp **** 				//start thread
 175:src/interruptRoutine.cpp **** 				thread_t threadStartHandle;
 764              		.loc 1 175 5
 176:src/interruptRoutine.cpp **** 				threadStartHandle = (thread_t)a1;
 765              		.loc 1 176 5
 766              		.loc 1 176 23 is_stmt 0
 767 03c0 833784FB 		ld	a5,-72(s0)
 768 03c4 2330F4F6 		sd	a5,-160(s0)
 769              	.LVL90:
 177:src/interruptRoutine.cpp **** 				Scheduler::put(threadStartHandle);
 770              		.loc 1 177 5 is_stmt 1
 771              		.loc 1 177 19 is_stmt 0
 772 03c8 033504F6 		ld	a0,-160(s0)
 773 03cc 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 773      E7800000 
 774              	.LVL91:
 178:src/interruptRoutine.cpp **** 				break;
 775              		.loc 1 178 5 is_stmt 1
 776 03d4 6F000019 		j	.L24
 777              	.LVL92:
 778              	.L6:
 179:src/interruptRoutine.cpp **** 			case 0x90:
 779              		.loc 1 179 4
 180:src/interruptRoutine.cpp **** 				//printString
 181:src/interruptRoutine.cpp **** 				const char* string;
 780              		.loc 1 181 5
 182:src/interruptRoutine.cpp **** 				string = (const char*)a1;
 781              		.loc 1 182 5
 782              		.loc 1 182 12 is_stmt 0
 783 03d8 833784FB 		ld	a5,-72(s0)
 784 03dc 2334F4FE 		sd	a5,-24(s0)
 785              	.LVL93:
 786              	.L35:
 183:src/interruptRoutine.cpp **** 				while (*string != '\0') {
 787              		.loc 1 183 5 is_stmt 1
 788              		.loc 1 183 20
 789              		.loc 1 183 12 is_stmt 0
 790 03e0 833784FE 		ld	a5,-24(s0)
 791 03e4 83C70700 		lbu	a5,0(a5)
 792              		.loc 1 183 20
 793 03e8 63880716 		beqz	a5,.L49
 184:src/interruptRoutine.cpp **** 					putc(*string);
 794              		.loc 1 184 6 is_stmt 1
 795              		.loc 1 184 10 is_stmt 0
 796 03ec 833784FE 		ld	a5,-24(s0)
 797 03f0 83C70700 		lbu	a5,0(a5)
 798 03f4 13850700 		mv	a0,a5
 799 03f8 97000000 		call	_Z4putcc@plt
 799      E7800000 
GAS LISTING /tmp/ccfopqiX.s 			page 19


 800              	.LVL94:
 185:src/interruptRoutine.cpp **** 					string++;
 801              		.loc 1 185 6 is_stmt 1
 802              		.loc 1 185 12 is_stmt 0
 803 0400 833784FE 		ld	a5,-24(s0)
 804 0404 93871700 		addi	a5,a5,1
 805 0408 2334F4FE 		sd	a5,-24(s0)
 806              	.LVL95:
 183:src/interruptRoutine.cpp **** 				while (*string != '\0') {
 807              		.loc 1 183 5
 808 040c 6FF05FFD 		j	.L35
 809              	.LVL96:
 810              	.L4:
 186:src/interruptRoutine.cpp **** 				}
 187:src/interruptRoutine.cpp **** 				break;
 188:src/interruptRoutine.cpp **** 			case 0x91:
 811              		.loc 1 188 4 is_stmt 1
 189:src/interruptRoutine.cpp **** 				//printInteger
 190:src/interruptRoutine.cpp **** 				uint64 integer;
 812              		.loc 1 190 5
 191:src/interruptRoutine.cpp **** 				integer = a1;
 813              		.loc 1 191 5
 814              		.loc 1 191 13 is_stmt 0
 815 0410 833784FB 		ld	a5,-72(s0)
 816 0414 2338F4F6 		sd	a5,-144(s0)
 817              	.LVL97:
 192:src/interruptRoutine.cpp **** 				static char digits[] = "0123456789";
 818              		.loc 1 192 5 is_stmt 1
 193:src/interruptRoutine.cpp **** 				char buf[16];
 819              		.loc 1 193 5
 194:src/interruptRoutine.cpp **** 				int i, neg;
 820              		.loc 1 194 5
 195:src/interruptRoutine.cpp **** 				uint x;
 821              		.loc 1 195 5
 196:src/interruptRoutine.cpp **** 
 197:src/interruptRoutine.cpp **** 				neg = 0;
 822              		.loc 1 197 5
 823              		.loc 1 197 9 is_stmt 0
 824 0418 232604F6 		sw	zero,-148(s0)
 825              	.LVL98:
 198:src/interruptRoutine.cpp **** 				if (integer < 0) {
 826              		.loc 1 198 5 is_stmt 1
 199:src/interruptRoutine.cpp **** 					neg = 1;
 200:src/interruptRoutine.cpp **** 					x = -integer;
 201:src/interruptRoutine.cpp **** 				} else {
 202:src/interruptRoutine.cpp **** 					x = integer;
 827              		.loc 1 202 6
 828              		.loc 1 202 8 is_stmt 0
 829 041c 833704F7 		ld	a5,-144(s0)
 830 0420 2320F4FE 		sw	a5,-32(s0)
 831              	.LVL99:
 203:src/interruptRoutine.cpp **** 				}
 204:src/interruptRoutine.cpp **** 
 205:src/interruptRoutine.cpp **** 				i = 0;
 832              		.loc 1 205 5 is_stmt 1
 833              		.loc 1 205 7 is_stmt 0
 834 0424 232204FE 		sw	zero,-28(s0)
GAS LISTING /tmp/ccfopqiX.s 			page 20


 835              	.LVL100:
 836              	.L37:
 206:src/interruptRoutine.cpp **** 				do {
 837              		.loc 1 206 5 is_stmt 1
 207:src/interruptRoutine.cpp **** 					buf[i++] = digits[x % 10];
 838              		.loc 1 207 6
 839              		.loc 1 207 26 is_stmt 0
 840 0428 032704FE 		lw	a4,-32(s0)
 841 042c 9307A000 		li	a5,10
 842 0430 BB77F702 		remuw	a5,a4,a5
 843 0434 1B860700 		sext.w	a2,a5
 844              		.loc 1 207 11
 845 0438 832744FE 		lw	a5,-28(s0)
 846 043c 1B871700 		addiw	a4,a5,1
 847 0440 2322E4FE 		sw	a4,-28(s0)
 848              	.LVL101:
 849              		.loc 1 207 30
 850 0444 97060000 		lla	a3,_ZZ16interruptRoutineE6digits
 850      93860600 
 851 044c 13170602 		slli	a4,a2,32
 852 0450 13570702 		srli	a4,a4,32
 853              	.LVL102:
 854 0454 3387E600 		add	a4,a3,a4
 855 0458 03470700 		lbu	a4,0(a4)
 856              		.loc 1 207 15
 857 045c 930604FF 		addi	a3,s0,-16
 858 0460 B387F600 		add	a5,a3,a5
 859 0464 2388E7EC 		sb	a4,-304(a5)
 208:src/interruptRoutine.cpp **** 				} while ((x /= 10) != 0);
 860              		.loc 1 208 24 is_stmt 1
 861              		.loc 1 208 17 is_stmt 0
 862 0468 032704FE 		lw	a4,-32(s0)
 863 046c 9307A000 		li	a5,10
 864 0470 BB57F702 		divuw	a5,a4,a5
 865 0474 2320F4FE 		sw	a5,-32(s0)
 866              	.LVL103:
 867              		.loc 1 208 24
 868 0478 832704FE 		lw	a5,-32(s0)
 869 047c 9B870700 		sext.w	a5,a5
 870              	.LVL104:
 871 0480 B337F000 		snez	a5,a5
 872 0484 93F7F70F 		andi	a5,a5,0xff
 873 0488 63840700 		beqz	a5,.L36
 206:src/interruptRoutine.cpp **** 				do {
 874              		.loc 1 206 5
 875 048c 6FF0DFF9 		j	.L37
 876              	.L36:
 209:src/interruptRoutine.cpp **** 				if (neg) buf[i++] = '-';
 877              		.loc 1 209 5 is_stmt 1
 878 0490 8327C4F6 		lw	a5,-148(s0)
 879 0494 9B870700 		sext.w	a5,a5
 880 0498 63800702 		beqz	a5,.L40
 881              		.loc 1 209 14 discriminator 1
 882              		.loc 1 209 19 is_stmt 0 discriminator 1
 883 049c 832744FE 		lw	a5,-28(s0)
 884 04a0 1B871700 		addiw	a4,a5,1
 885 04a4 2322E4FE 		sw	a4,-28(s0)
GAS LISTING /tmp/ccfopqiX.s 			page 21


 886              	.LVL105:
 887              		.loc 1 209 23 discriminator 1
 888 04a8 130704FF 		addi	a4,s0,-16
 889              	.LVL106:
 890 04ac B307F700 		add	a5,a4,a5
 891 04b0 1307D002 		li	a4,45
 892 04b4 2388E7EC 		sb	a4,-304(a5)
 893              	.LVL107:
 894              	.L40:
 210:src/interruptRoutine.cpp **** 
 211:src/interruptRoutine.cpp **** 				while (--i >= 0) {
 895              		.loc 1 211 5 is_stmt 1
 896              		.loc 1 211 16
 897 04b8 832744FE 		lw	a5,-28(s0)
 898 04bc 9B87F7FF 		addiw	a5,a5,-1
 899 04c0 2322F4FE 		sw	a5,-28(s0)
 900              	.LVL108:
 901 04c4 832744FE 		lw	a5,-28(s0)
 902 04c8 93C7F7FF 		not	a5,a5
 903              	.LVL109:
 904 04cc 9BD7F701 		srliw	a5,a5,31
 905 04d0 93F7F70F 		andi	a5,a5,0xff
 906 04d4 63860708 		beqz	a5,.L50
 212:src/interruptRoutine.cpp **** 					putc(buf[i]);
 907              		.loc 1 212 6
 908              		.loc 1 212 10 is_stmt 0
 909 04d8 832744FE 		lw	a5,-28(s0)
 910 04dc 130704FF 		addi	a4,s0,-16
 911 04e0 B307F700 		add	a5,a4,a5
 912 04e4 83C707ED 		lbu	a5,-304(a5)
 913 04e8 13850700 		mv	a0,a5
 914 04ec 97000000 		call	_Z4putcc@plt
 914      E7800000 
 915              	.LVL110:
 211:src/interruptRoutine.cpp **** 					putc(buf[i]);
 916              		.loc 1 211 5
 917 04f4 6FF05FFC 		j	.L40
 918              	.LVL111:
 919              	.L5:
 213:src/interruptRoutine.cpp **** 				}
 214:src/interruptRoutine.cpp **** 				break;
 215:src/interruptRoutine.cpp **** 			default:
 920              		.loc 1 215 4 is_stmt 1
 216:src/interruptRoutine.cpp **** 				printString("\nNepostojeci op code: ");
 921              		.loc 1 216 5
 922              		.loc 1 216 16 is_stmt 0
 923 04f8 17050000 		lla	a0,.LC0
 923      13050500 
 924 0500 97000000 		call	_Z11printStringPKc@plt
 924      E7800000 
 925              	.LVL112:
 217:src/interruptRoutine.cpp **** 				printInteger(opCode);
 926              		.loc 1 217 5 is_stmt 1
 927              		.loc 1 217 17 is_stmt 0
 928 0508 033584F7 		ld	a0,-136(s0)
 929 050c 97000000 		call	_Z12printIntegerm@plt
 929      E7800000 
GAS LISTING /tmp/ccfopqiX.s 			page 22


 930              	.LVL113:
 218:src/interruptRoutine.cpp **** 				printString("\nscause: ");
 931              		.loc 1 218 5 is_stmt 1
 932              		.loc 1 218 16 is_stmt 0
 933 0514 17050000 		lla	a0,.LC1
 933      13050500 
 934 051c 97000000 		call	_Z11printStringPKc@plt
 934      E7800000 
 935              	.LVL114:
 219:src/interruptRoutine.cpp **** 				printInteger(scause);
 936              		.loc 1 219 5 is_stmt 1
 937              		.loc 1 219 17 is_stmt 0
 938 0524 033584FD 		ld	a0,-40(s0)
 939 0528 97000000 		call	_Z12printIntegerm@plt
 939      E7800000 
 940              	.LVL115:
 220:src/interruptRoutine.cpp **** 				printString("\nsepc: ");
 941              		.loc 1 220 5 is_stmt 1
 942              		.loc 1 220 16 is_stmt 0
 943 0530 17050000 		lla	a0,.LC2
 943      13050500 
 944 0538 97000000 		call	_Z11printStringPKc@plt
 944      E7800000 
 945              	.LVL116:
 221:src/interruptRoutine.cpp **** 				printInteger(sepc);
 946              		.loc 1 221 5 is_stmt 1
 947              		.loc 1 221 17 is_stmt 0
 948 0540 033504FD 		ld	a0,-48(s0)
 949 0544 97000000 		call	_Z12printIntegerm@plt
 949      E7800000 
 950              	.LVL117:
 222:src/interruptRoutine.cpp **** 				break;
 951              		.loc 1 222 5 is_stmt 1
 952 054c 6F008001 		j	.L24
 953              	.LVL118:
 954              	.L48:
 142:src/interruptRoutine.cpp **** 			case 0x41:
 955              		.loc 1 142 5 is_stmt 0
 956 0550 13000000 		nop
 957 0554 6F000001 		j	.L24
 958              	.LVL119:
 959              	.L49:
 187:src/interruptRoutine.cpp **** 			case 0x91:
 960              		.loc 1 187 5
 961 0558 13000000 		nop
 962 055c 6F008000 		j	.L24
 963              	.LVL120:
 964              	.L50:
 214:src/interruptRoutine.cpp **** 			default:
 965              		.loc 1 214 5
 966 0560 13000000 		nop
 967              	.LVL121:
 968              	.L24:
 969              	.LBE5:
 970              	.LBE4:
 223:src/interruptRoutine.cpp **** 		}
 224:src/interruptRoutine.cpp **** 		//sepc pokazuje na ecall instrukciju, treba preci na sledecu instrukciju
GAS LISTING /tmp/ccfopqiX.s 			page 23


 225:src/interruptRoutine.cpp **** 		//sepc += 4;
 226:src/interruptRoutine.cpp **** 		__asm__ volatile("addi %[dst], %[src], 0x4":[dst]"=r"(sepc):[src]"r"(
 971              		.loc 1 226 3 is_stmt 1 discriminator 1
 227:src/interruptRoutine.cpp **** 				sepc):"a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7");
 972              		.loc 1 227 58 is_stmt 0 discriminator 1
 973 0564 033304FD 		ld	t1,-48(s0)
 974              	#APP
 975              	# 227 "src/interruptRoutine.cpp" 1
 228              			__asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc):"a5", "a0", "a1", "a2", "a3", "a4", "a6"
 976              		addi t1, t1, 0x4
 977              	# 0 "" 2
 978              	.LVL122:
 979              	#NO_APP
 980 056c 233864FC 		sd	t1,-48(s0)
 981              	.LVL123:
 982              		.loc 1 228 3 is_stmt 1 discriminator 1
 983              		.loc 1 228 107 is_stmt 0 discriminator 1
 984 0570 033304FD 		ld	t1,-48(s0)
 985              	#APP
 986              	# 228 "src/interruptRoutine.cpp" 1
 229              			__asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus):"a5", "a0", "a1", "a2", "a3", "a4",
 987              		csrw sepc, t1
 988              	# 0 "" 2
 989              		.loc 1 229 3 is_stmt 1 discriminator 1
 990              		.loc 1 229 112 is_stmt 0 discriminator 1
 991              	#NO_APP
 992 0578 033384FC 		ld	t1,-56(s0)
 993              	.LVL124:
 994              	#APP
 995              	# 229 "src/interruptRoutine.cpp" 1
 230              			//Riscv::w_sepc(sepc + 4);
 996              		csrw sstatus, t1
 997              	# 0 "" 2
 998              	#NO_APP
 999              	.LBE3:
 1000 0580 13000000 		nop
 1001              	.LBE2:
 231:src/interruptRoutine.cpp **** 	} else if (scause == (1UL << 63 | 9)) {
 232:src/interruptRoutine.cpp **** 		//spoljasnji hardverski prekid (od konzole)
 233:src/interruptRoutine.cpp **** 		uint64 irq = plic_claim();
 234:src/interruptRoutine.cpp **** 		if (irq == CONSOLE_IRQ) {
 235:src/interruptRoutine.cpp **** 			if (*KConsole::sr & CONSOLE_RX_STATUS_BIT) {
 236:src/interruptRoutine.cpp **** 				KConsole::placeInInput(*KConsole::dr);
 237:src/interruptRoutine.cpp **** 			}
 238:src/interruptRoutine.cpp **** 			//printString("\nobradjen prekid konzole\n");
 239:src/interruptRoutine.cpp **** 			plic_complete(irq);
 240:src/interruptRoutine.cpp **** 		} else {
 241:src/interruptRoutine.cpp **** 			printString("Neki drugi prekid\n");
 242:src/interruptRoutine.cpp **** 		}
 243:src/interruptRoutine.cpp **** 		//console_handler();
 244:src/interruptRoutine.cpp **** 		Riscv::w_sepc(sepc);
 245:src/interruptRoutine.cpp **** 		Riscv::w_sstatus(sstatus);
 246:src/interruptRoutine.cpp **** 		Riscv::mc_sip(Riscv::SIP_SEIP);
 247:src/interruptRoutine.cpp **** 	} else if (scause == (1UL << 63 | 1)) {
 248:src/interruptRoutine.cpp **** 		//prekid od tajmera
 249:src/interruptRoutine.cpp **** 		//printString("\nPrekid od tajmera\n");
 250:src/interruptRoutine.cpp **** 		Scheduler::wake();
GAS LISTING /tmp/ccfopqiX.s 			page 24


 251:src/interruptRoutine.cpp **** 		TCB::runningTimeSlice++;
 252:src/interruptRoutine.cpp **** 		if (TCB::runningTimeSlice >= TCB::running->getTimeSlice()) {
 253:src/interruptRoutine.cpp **** 			//printString("\nMenjam kontekst\n");
 254:src/interruptRoutine.cpp **** 			TCB::yield();
 255:src/interruptRoutine.cpp **** 			TCB::runningTimeSlice = 0;
 256:src/interruptRoutine.cpp **** 		}
 257:src/interruptRoutine.cpp **** 
 258:src/interruptRoutine.cpp **** 		Riscv::w_sepc(sepc);
 259:src/interruptRoutine.cpp **** 		Riscv::w_sstatus(sstatus);
 260:src/interruptRoutine.cpp **** 		Riscv::mc_sip(Riscv::SIP_SSIP);
 261:src/interruptRoutine.cpp **** 	} else {
 262:src/interruptRoutine.cpp **** 		printString("\nGreska u prekidnoj rutini\n");
 263:src/interruptRoutine.cpp **** 		printString("scause: ");
 264:src/interruptRoutine.cpp **** 		printInteger(scause);
 265:src/interruptRoutine.cpp **** 		printString("\nsepc: ");
 266:src/interruptRoutine.cpp **** 		printInteger(sepc);
 267:src/interruptRoutine.cpp **** 	}
 268:src/interruptRoutine.cpp **** }
 1002              		.loc 1 268 1 discriminator 1
 1003 0584 6F00C01A 		j	.L51
 1004              	.LVL125:
 1005              	.L3:
 1006              	.LBB13:
 1007              	.LBB6:
 231:src/interruptRoutine.cpp **** 	} else if (scause == (1UL << 63 | 9)) {
 1008              		.loc 1 231 9 is_stmt 1
 1009              	.LBB7:
 1010 0588 033784FD 		ld	a4,-40(s0)
 1011              	.LVL126:
 1012 058c 9307F0FF 		li	a5,-1
 1013 0590 9397F703 		slli	a5,a5,63
 1014 0594 93879700 		addi	a5,a5,9
 1015 0598 6312F70A 		bne	a4,a5,.L42
 1016              	.LBB8:
 233:src/interruptRoutine.cpp **** 		if (irq == CONSOLE_IRQ) {
 1017              		.loc 1 233 3
 233:src/interruptRoutine.cpp **** 		if (irq == CONSOLE_IRQ) {
 1018              		.loc 1 233 26 is_stmt 0
 1019 059c 97000000 		call	plic_claim@plt
 1019      E7800000 
 1020              	.LVL127:
 1021 05a4 93070500 		mv	a5,a0
 233:src/interruptRoutine.cpp **** 		if (irq == CONSOLE_IRQ) {
 1022              		.loc 1 233 27
 1023 05a8 2330F4F8 		sd	a5,-128(s0)
 1024              	.LVL128:
 234:src/interruptRoutine.cpp **** 			if (*KConsole::sr & CONSOLE_RX_STATUS_BIT) {
 1025              		.loc 1 234 3 is_stmt 1
 1026 05ac 033704F8 		ld	a4,-128(s0)
 1027 05b0 9307A000 		li	a5,10
 1028 05b4 6318F704 		bne	a4,a5,.L43
 235:src/interruptRoutine.cpp **** 				KConsole::placeInInput(*KConsole::dr);
 1029              		.loc 1 235 4
 235:src/interruptRoutine.cpp **** 				KConsole::placeInInput(*KConsole::dr);
 1030              		.loc 1 235 8 is_stmt 0
 1031 05b8 97070000 		la	a5,_ZN8KConsole2srE
 1031      83B70700 
GAS LISTING /tmp/ccfopqiX.s 			page 25


 1032 05c0 83B70700 		ld	a5,0(a5)
 1033 05c4 83C70700 		lbu	a5,0(a5)
 235:src/interruptRoutine.cpp **** 				KConsole::placeInInput(*KConsole::dr);
 1034              		.loc 1 235 22
 1035 05c8 93F71700 		andi	a5,a5,1
 235:src/interruptRoutine.cpp **** 				KConsole::placeInInput(*KConsole::dr);
 1036              		.loc 1 235 4
 1037 05cc 63800702 		beqz	a5,.L44
 236:src/interruptRoutine.cpp **** 			}
 1038              		.loc 1 236 5 is_stmt 1
 236:src/interruptRoutine.cpp **** 			}
 1039              		.loc 1 236 27 is_stmt 0
 1040 05d0 97070000 		la	a5,_ZN8KConsole2drE
 1040      83B70700 
 1041 05d8 83B70700 		ld	a5,0(a5)
 1042 05dc 83C70700 		lbu	a5,0(a5)
 1043 05e0 13850700 		mv	a0,a5
 1044              	.LVL129:
 1045 05e4 97000000 		call	_ZN8KConsole12placeInInputEc@plt
 1045      E7800000 
 1046              	.LVL130:
 1047              	.L44:
 239:src/interruptRoutine.cpp **** 		} else {
 1048              		.loc 1 239 4 is_stmt 1
 239:src/interruptRoutine.cpp **** 		} else {
 1049              		.loc 1 239 17 is_stmt 0
 1050 05ec 833704F8 		ld	a5,-128(s0)
 1051 05f0 9B870700 		sext.w	a5,a5
 1052 05f4 13850700 		mv	a0,a5
 1053 05f8 97000000 		call	plic_complete@plt
 1053      E7800000 
 1054              	.LVL131:
 1055 0600 6F004001 		j	.L45
 1056              	.LVL132:
 1057              	.L43:
 241:src/interruptRoutine.cpp **** 		}
 1058              		.loc 1 241 4 is_stmt 1
 241:src/interruptRoutine.cpp **** 		}
 1059              		.loc 1 241 15 is_stmt 0
 1060 0604 17050000 		lla	a0,.LC3
 1060      13050500 
 1061              	.LVL133:
 1062 060c 97000000 		call	_Z11printStringPKc@plt
 1062      E7800000 
 1063              	.LVL134:
 1064              	.L45:
 244:src/interruptRoutine.cpp **** 		Riscv::w_sstatus(sstatus);
 1065              		.loc 1 244 3 is_stmt 1
 244:src/interruptRoutine.cpp **** 		Riscv::w_sstatus(sstatus);
 1066              		.loc 1 244 16 is_stmt 0
 1067 0614 033504FD 		ld	a0,-48(s0)
 1068 0618 97000000 		call	_ZN5Riscv6w_sepcEm
 1068      E7800000 
 1069              	.LVL135:
 245:src/interruptRoutine.cpp **** 		Riscv::mc_sip(Riscv::SIP_SEIP);
 1070              		.loc 1 245 3 is_stmt 1
 245:src/interruptRoutine.cpp **** 		Riscv::mc_sip(Riscv::SIP_SEIP);
GAS LISTING /tmp/ccfopqiX.s 			page 26


 1071              		.loc 1 245 19 is_stmt 0
 1072 0620 033584FC 		ld	a0,-56(s0)
 1073 0624 97000000 		call	_ZN5Riscv9w_sstatusEm
 1073      E7800000 
 1074              	.LVL136:
 246:src/interruptRoutine.cpp **** 	} else if (scause == (1UL << 63 | 1)) {
 1075              		.loc 1 246 3 is_stmt 1
 246:src/interruptRoutine.cpp **** 	} else if (scause == (1UL << 63 | 1)) {
 1076              		.loc 1 246 16 is_stmt 0
 1077 062c 13050020 		li	a0,512
 1078 0630 97000000 		call	_ZN5Riscv6mc_sipEm
 1078      E7800000 
 1079              	.LVL137:
 1080              	.LBE8:
 1081              	.LBE7:
 1082              	.LBE6:
 1083              	.LBE13:
 1084              		.loc 1 268 1
 1085 0638 6F00800F 		j	.L51
 1086              	.LVL138:
 1087              	.L42:
 1088              	.LBB14:
 1089              	.LBB11:
 1090              	.LBB9:
 247:src/interruptRoutine.cpp **** 		//prekid od tajmera
 1091              		.loc 1 247 9 is_stmt 1
 1092 063c 033784FD 		ld	a4,-40(s0)
 1093 0640 9307F0FF 		li	a5,-1
 1094 0644 9397F703 		slli	a5,a5,63
 1095 0648 93871700 		addi	a5,a5,1
 1096 064c 631EF708 		bne	a4,a5,.L46
 250:src/interruptRoutine.cpp **** 		TCB::runningTimeSlice++;
 1097              		.loc 1 250 3
 250:src/interruptRoutine.cpp **** 		TCB::runningTimeSlice++;
 1098              		.loc 1 250 18 is_stmt 0
 1099 0650 97000000 		call	_ZN9Scheduler4wakeEv@plt
 1099      E7800000 
 1100              	.LVL139:
 251:src/interruptRoutine.cpp **** 		if (TCB::runningTimeSlice >= TCB::running->getTimeSlice()) {
 1101              		.loc 1 251 3 is_stmt 1
 251:src/interruptRoutine.cpp **** 		if (TCB::runningTimeSlice >= TCB::running->getTimeSlice()) {
 1102              		.loc 1 251 24 is_stmt 0
 1103 0658 97070000 		la	a5,_ZN3TCB16runningTimeSliceE
 1103      83B70700 
 1104 0660 83B70700 		ld	a5,0(a5)
 1105 0664 13871700 		addi	a4,a5,1
 1106 0668 97070000 		la	a5,_ZN3TCB16runningTimeSliceE
 1106      83B70700 
 1107 0670 23B0E700 		sd	a4,0(a5)
 252:src/interruptRoutine.cpp **** 			//printString("\nMenjam kontekst\n");
 1108              		.loc 1 252 3 is_stmt 1
 252:src/interruptRoutine.cpp **** 			//printString("\nMenjam kontekst\n");
 1109              		.loc 1 252 58 is_stmt 0
 1110 0674 97070000 		la	a5,_ZN3TCB7runningE
 1110      83B70700 
 1111 067c 83B70700 		ld	a5,0(a5)
 1112 0680 13850700 		mv	a0,a5
GAS LISTING /tmp/ccfopqiX.s 			page 27


 1113 0684 97000000 		call	_ZN3TCB12getTimeSliceEv
 1113      E7800000 
 1114              	.LVL140:
 1115 068c 13070500 		mv	a4,a0
 252:src/interruptRoutine.cpp **** 			//printString("\nMenjam kontekst\n");
 1116              		.loc 1 252 29
 1117 0690 97070000 		la	a5,_ZN3TCB16runningTimeSliceE
 1117      83B70700 
 1118 0698 83B70700 		ld	a5,0(a5)
 1119 069c B3B7E700 		sgtu	a5,a4,a5
 1120 06a0 93C71700 		xori	a5,a5,1
 1121 06a4 93F7F70F 		andi	a5,a5,0xff
 252:src/interruptRoutine.cpp **** 			//printString("\nMenjam kontekst\n");
 1122              		.loc 1 252 3
 1123 06a8 638C0700 		beqz	a5,.L47
 254:src/interruptRoutine.cpp **** 			TCB::runningTimeSlice = 0;
 1124              		.loc 1 254 4 is_stmt 1
 254:src/interruptRoutine.cpp **** 			TCB::runningTimeSlice = 0;
 1125              		.loc 1 254 14 is_stmt 0
 1126 06ac 97000000 		call	_ZN3TCB5yieldEv@plt
 1126      E7800000 
 1127              	.LVL141:
 255:src/interruptRoutine.cpp **** 		}
 1128              		.loc 1 255 4 is_stmt 1
 255:src/interruptRoutine.cpp **** 		}
 1129              		.loc 1 255 26 is_stmt 0
 1130 06b4 97070000 		la	a5,_ZN3TCB16runningTimeSliceE
 1130      83B70700 
 1131 06bc 23B00700 		sd	zero,0(a5)
 1132              	.L47:
 258:src/interruptRoutine.cpp **** 		Riscv::w_sstatus(sstatus);
 1133              		.loc 1 258 3 is_stmt 1
 258:src/interruptRoutine.cpp **** 		Riscv::w_sstatus(sstatus);
 1134              		.loc 1 258 16 is_stmt 0
 1135 06c0 033504FD 		ld	a0,-48(s0)
 1136 06c4 97000000 		call	_ZN5Riscv6w_sepcEm
 1136      E7800000 
 1137              	.LVL142:
 259:src/interruptRoutine.cpp **** 		Riscv::mc_sip(Riscv::SIP_SSIP);
 1138              		.loc 1 259 3 is_stmt 1
 259:src/interruptRoutine.cpp **** 		Riscv::mc_sip(Riscv::SIP_SSIP);
 1139              		.loc 1 259 19 is_stmt 0
 1140 06cc 033584FC 		ld	a0,-56(s0)
 1141 06d0 97000000 		call	_ZN5Riscv9w_sstatusEm
 1141      E7800000 
 1142              	.LVL143:
 260:src/interruptRoutine.cpp **** 	} else {
 1143              		.loc 1 260 3 is_stmt 1
 260:src/interruptRoutine.cpp **** 	} else {
 1144              		.loc 1 260 16 is_stmt 0
 1145 06d8 13052000 		li	a0,2
 1146 06dc 97000000 		call	_ZN5Riscv6mc_sipEm
 1146      E7800000 
 1147              	.LVL144:
 1148              	.LBE9:
 1149              	.LBE11:
 1150              	.LBE14:
GAS LISTING /tmp/ccfopqiX.s 			page 28


 1151              		.loc 1 268 1
 1152 06e4 6F00C004 		j	.L51
 1153              	.LVL145:
 1154              	.L46:
 1155              	.LBB15:
 1156              	.LBB12:
 1157              	.LBB10:
 262:src/interruptRoutine.cpp **** 		printString("scause: ");
 1158              		.loc 1 262 3 is_stmt 1
 262:src/interruptRoutine.cpp **** 		printString("scause: ");
 1159              		.loc 1 262 14 is_stmt 0
 1160 06e8 17050000 		lla	a0,.LC4
 1160      13050500 
 1161 06f0 97000000 		call	_Z11printStringPKc@plt
 1161      E7800000 
 1162              	.LVL146:
 263:src/interruptRoutine.cpp **** 		printInteger(scause);
 1163              		.loc 1 263 3 is_stmt 1
 263:src/interruptRoutine.cpp **** 		printInteger(scause);
 1164              		.loc 1 263 14 is_stmt 0
 1165 06f8 17050000 		lla	a0,.LC5
 1165      13050500 
 1166 0700 97000000 		call	_Z11printStringPKc@plt
 1166      E7800000 
 1167              	.LVL147:
 264:src/interruptRoutine.cpp **** 		printString("\nsepc: ");
 1168              		.loc 1 264 3 is_stmt 1
 264:src/interruptRoutine.cpp **** 		printString("\nsepc: ");
 1169              		.loc 1 264 15 is_stmt 0
 1170 0708 033584FD 		ld	a0,-40(s0)
 1171 070c 97000000 		call	_Z12printIntegerm@plt
 1171      E7800000 
 1172              	.LVL148:
 265:src/interruptRoutine.cpp **** 		printInteger(sepc);
 1173              		.loc 1 265 3 is_stmt 1
 265:src/interruptRoutine.cpp **** 		printInteger(sepc);
 1174              		.loc 1 265 14 is_stmt 0
 1175 0714 17050000 		lla	a0,.LC2
 1175      13050500 
 1176 071c 97000000 		call	_Z11printStringPKc@plt
 1176      E7800000 
 1177              	.LVL149:
 266:src/interruptRoutine.cpp **** 	}
 1178              		.loc 1 266 3 is_stmt 1
 266:src/interruptRoutine.cpp **** 	}
 1179              		.loc 1 266 15 is_stmt 0
 1180 0724 033504FD 		ld	a0,-48(s0)
 1181 0728 97000000 		call	_Z12printIntegerm@plt
 1181      E7800000 
 1182              	.LVL150:
 1183              	.L51:
 1184              	.LBE10:
 1185              	.LBE12:
 1186              	.LBE15:
 1187              		.loc 1 268 1
 1188 0730 13000000 		nop
 1189 0734 83308113 		ld	ra,312(sp)
GAS LISTING /tmp/ccfopqiX.s 			page 29


 1190              		.cfi_restore 1
 1191 0738 03340113 		ld	s0,304(sp)
 1192              		.cfi_restore 8
 1193              		.cfi_def_cfa 2, 320
 1194              	.LVL151:
 1195 073c 13010114 		addi	sp,sp,320
 1196              		.cfi_def_cfa_offset 0
 1197              	.LVL152:
 1198 0740 67800000 		jr	ra
 1199              		.cfi_endproc
 1200              	.LFE51:
 1202              		.section	.text._ZN5Riscv6w_sepcEm,"axG",@progbits,_ZN5Riscv6w_sepcEm,comdat
 1203              		.align	2
 1204              		.weak	_ZN5Riscv6w_sepcEm
 1206              	_ZN5Riscv6w_sepcEm:
 1207              	.LFB6:
 1208              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 5/17/23.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJEKAT2023_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJEKAT2023_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** class Riscv {
  11:src/../h/Riscv.hpp **** public:
  12:src/../h/Riscv.hpp **** 
  13:src/../h/Riscv.hpp **** 	static void popSppSpie();
  14:src/../h/Riscv.hpp **** 
  15:src/../h/Riscv.hpp **** 	//stavljanje registara x3-x31 na stek
  16:src/../h/Riscv.hpp **** 	static void pushRegisters();    //implementacija u asm
  17:src/../h/Riscv.hpp **** 
  18:src/../h/Riscv.hpp **** 	//skidanje registara x3-x31 sa steka
  19:src/../h/Riscv.hpp **** 	static void popRegisters();     //implementacija u asm
  20:src/../h/Riscv.hpp **** 
  21:src/../h/Riscv.hpp **** 	//read scause
  22:src/../h/Riscv.hpp **** 	static uint64 r_scause();
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp **** 	//write scause
  25:src/../h/Riscv.hpp **** 	static void w_scause(uint64 scause);
  26:src/../h/Riscv.hpp **** 
  27:src/../h/Riscv.hpp **** 	//read sepc
  28:src/../h/Riscv.hpp **** 	static uint64 r_sepc();
  29:src/../h/Riscv.hpp **** 
  30:src/../h/Riscv.hpp **** 	//write sepc
  31:src/../h/Riscv.hpp **** 	static void w_sepc(uint64 sepc);
  32:src/../h/Riscv.hpp **** 
  33:src/../h/Riscv.hpp **** 	//read stvec
  34:src/../h/Riscv.hpp **** 	static uint64 r_stvec();
  35:src/../h/Riscv.hpp **** 
  36:src/../h/Riscv.hpp **** 	//write stvec
  37:src/../h/Riscv.hpp **** 	static void w_stvec(uint64 stvec);
  38:src/../h/Riscv.hpp **** 
  39:src/../h/Riscv.hpp **** 	enum BitMaskSip {
  40:src/../h/Riscv.hpp **** 		//postoji zahtev za softverski prekid
GAS LISTING /tmp/ccfopqiX.s 			page 30


  41:src/../h/Riscv.hpp **** 		SIP_SSIP = (1 << 1),
  42:src/../h/Riscv.hpp **** 		//postoji prekid od tajmera
  43:src/../h/Riscv.hpp **** 		SIP_STIP = (1 << 5),
  44:src/../h/Riscv.hpp **** 		//postoji zahtev za spoljasnji hardverski prekid
  45:src/../h/Riscv.hpp **** 		SIP_SEIP = (1 << 9)
  46:src/../h/Riscv.hpp **** 	};
  47:src/../h/Riscv.hpp **** 
  48:src/../h/Riscv.hpp **** 	//mask set sip
  49:src/../h/Riscv.hpp **** 	static void ms_sip(uint64 mask);
  50:src/../h/Riscv.hpp **** 
  51:src/../h/Riscv.hpp **** 	//mask clear sip
  52:src/../h/Riscv.hpp **** 	static void mc_sip(uint64 mask);
  53:src/../h/Riscv.hpp **** 
  54:src/../h/Riscv.hpp **** 	//read sip
  55:src/../h/Riscv.hpp **** 	static uint64 r_sip();
  56:src/../h/Riscv.hpp **** 
  57:src/../h/Riscv.hpp **** 	//write sip
  58:src/../h/Riscv.hpp **** 	static void w_sip(uint64 sip);
  59:src/../h/Riscv.hpp **** 
  60:src/../h/Riscv.hpp **** 	//kada se pozove sret, SIE dobija vrednost SPIE, SPIE se postavlja na 1,
  61:src/../h/Riscv.hpp **** 	//rezim se postavlja na osnovu SPP bita, SPP se postavlja na 0
  62:src/../h/Riscv.hpp **** 	enum BitMaskSstatus {
  63:src/../h/Riscv.hpp **** 		//1 - dozvoljeni prekidi; 0- nedozvoljeni prekidi; igonrise se u korisnickom rezimu
  64:src/../h/Riscv.hpp **** 		SSTATUS_SIE = (1 << 1),
  65:src/../h/Riscv.hpp **** 		//prethodna vrednost bita SIE
  66:src/../h/Riscv.hpp **** 		SSTATUS_SPIE = (1 << 5),
  67:src/../h/Riscv.hpp **** 		//iz kog rezima se desio skok; 0 - iz korisnickog; 1 - iz sistemskog
  68:src/../h/Riscv.hpp **** 		SSTATUS_SPP = (1 << 8)
  69:src/../h/Riscv.hpp **** 	};
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp **** 	//mask set sstatus
  72:src/../h/Riscv.hpp **** 	static void ms_sstatus(uint64 mask);
  73:src/../h/Riscv.hpp **** 
  74:src/../h/Riscv.hpp **** 	//mask clear sstatus
  75:src/../h/Riscv.hpp **** 	static void mc_sstatus(uint64 mask);
  76:src/../h/Riscv.hpp **** 
  77:src/../h/Riscv.hpp **** 	//read sstatus
  78:src/../h/Riscv.hpp **** 	static uint64 r_sstatus();
  79:src/../h/Riscv.hpp **** 
  80:src/../h/Riscv.hpp **** 	//write sstatus
  81:src/../h/Riscv.hpp **** 	static void w_sstatus(uint64 sstatus);
  82:src/../h/Riscv.hpp **** 
  83:src/../h/Riscv.hpp **** 	//upisuje kod sistemskog poziva u registar a0
  84:src/../h/Riscv.hpp **** 	static void loadOpCode(uint64 opCode);
  85:src/../h/Riscv.hpp **** 
  86:src/../h/Riscv.hpp **** };
  87:src/../h/Riscv.hpp **** 
  88:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause() {
  89:src/../h/Riscv.hpp **** 	uint64 volatile scause;
  90:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[scause], scause": [scause] "=r"(scause));
  91:src/../h/Riscv.hpp **** 	return scause;
  92:src/../h/Riscv.hpp **** }
  93:src/../h/Riscv.hpp **** 
  94:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
  95:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw scause, %[scause]": :[scause] "r"(scause));
  96:src/../h/Riscv.hpp **** }
  97:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/ccfopqiX.s 			page 31


  98:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc() {
  99:src/../h/Riscv.hpp **** 	uint64 volatile sepc;
 100:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[sepc], sepc": [sepc] "=r"(sepc));
 101:src/../h/Riscv.hpp **** 	return sepc;
 102:src/../h/Riscv.hpp **** }
 103:src/../h/Riscv.hpp **** 
 104:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
 1209              		.loc 2 104 40 is_stmt 1
 1210              		.cfi_startproc
 1211              	.LVL153:
 1212 0000 130101FF 		addi	sp,sp,-16
 1213              		.cfi_def_cfa_offset 16
 1214 0004 23348100 		sd	s0,8(sp)
 1215              		.cfi_offset 8, -8
 1216 0008 13040101 		addi	s0,sp,16
 1217              		.cfi_def_cfa 8, 0
 105:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 1218              		.loc 2 105 2
 1219              		.loc 2 105 59 is_stmt 0
 1220              	#APP
 1221              	# 105 "src/../h/Riscv.hpp" 1
 106              	}
 1222              		csrw sepc, a0
 1223              	# 0 "" 2
 1224              		.loc 2 106 1
 1225              	#NO_APP
 1226 0010 03348100 		ld	s0,8(sp)
 1227              		.cfi_restore 8
 1228              		.cfi_def_cfa 2, 16
 1229 0014 13010101 		addi	sp,sp,16
 1230              		.cfi_def_cfa_offset 0
 1231 0018 67800000 		jr	ra
 1232              		.cfi_endproc
 1233              	.LFE6:
 1235              		.section	.text._ZN5Riscv6mc_sipEm,"axG",@progbits,_ZN5Riscv6mc_sipEm,comdat
 1236              		.align	2
 1237              		.weak	_ZN5Riscv6mc_sipEm
 1239              	_ZN5Riscv6mc_sipEm:
 1240              	.LFB10:
 107:src/../h/Riscv.hpp **** 
 108:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec() {
 109:src/../h/Riscv.hpp **** 	uint64 volatile stvec;
 110:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[stvec], stvec": [stvec] "=r"(stvec));
 111:src/../h/Riscv.hpp **** 	return stvec;
 112:src/../h/Riscv.hpp **** }
 113:src/../h/Riscv.hpp **** 
 114:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 115:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw stvec, %[stvec]": :[stvec] "r"(stvec));
 116:src/../h/Riscv.hpp **** }
 117:src/../h/Riscv.hpp **** 
 118:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 119:src/../h/Riscv.hpp **** 	__asm__ volatile("csrs sip, %[mask]": :[mask] "r"(mask));
 120:src/../h/Riscv.hpp **** }
 121:src/../h/Riscv.hpp **** 
 122:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 1241              		.loc 2 122 40 is_stmt 1
 1242              		.cfi_startproc
GAS LISTING /tmp/ccfopqiX.s 			page 32


 1243              	.LVL154:
 1244 0000 130101FF 		addi	sp,sp,-16
 1245              		.cfi_def_cfa_offset 16
 1246 0004 23348100 		sd	s0,8(sp)
 1247              		.cfi_offset 8, -8
 1248 0008 13040101 		addi	s0,sp,16
 1249              		.cfi_def_cfa 8, 0
 123:src/../h/Riscv.hpp **** 	__asm__ volatile("csrc sip, %[mask]": :[mask] "r"(mask));
 1250              		.loc 2 123 2
 1251              		.loc 2 123 58 is_stmt 0
 1252              	#APP
 1253              	# 123 "src/../h/Riscv.hpp" 1
 124              	}
 1254              		csrc sip, a0
 1255              	# 0 "" 2
 1256              		.loc 2 124 1
 1257              	#NO_APP
 1258 0010 03348100 		ld	s0,8(sp)
 1259              		.cfi_restore 8
 1260              		.cfi_def_cfa 2, 16
 1261 0014 13010101 		addi	sp,sp,16
 1262              		.cfi_def_cfa_offset 0
 1263 0018 67800000 		jr	ra
 1264              		.cfi_endproc
 1265              	.LFE10:
 1267              		.section	.text._ZN5Riscv9w_sstatusEm,"axG",@progbits,_ZN5Riscv9w_sstatusEm,comdat
 1268              		.align	2
 1269              		.weak	_ZN5Riscv9w_sstatusEm
 1271              	_ZN5Riscv9w_sstatusEm:
 1272              	.LFB16:
 125:src/../h/Riscv.hpp **** 
 126:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip() {
 127:src/../h/Riscv.hpp **** 	uint64 volatile sip;
 128:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[sip], sip": [sip] "=r"(sip));
 129:src/../h/Riscv.hpp **** 	return sip;
 130:src/../h/Riscv.hpp **** }
 131:src/../h/Riscv.hpp **** 
 132:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip) {
 133:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw sip, %[sip]": :[sip] "r"(sip));
 134:src/../h/Riscv.hpp **** }
 135:src/../h/Riscv.hpp **** 
 136:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
 137:src/../h/Riscv.hpp **** 	__asm__ volatile("csrs sstatus, %[mask]": :[mask] "r"(mask));
 138:src/../h/Riscv.hpp **** }
 139:src/../h/Riscv.hpp **** 
 140:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask) {
 141:src/../h/Riscv.hpp **** 	__asm__ volatile("csrc sstatus, %[mask]": :[mask] "r"(mask));
 142:src/../h/Riscv.hpp **** }
 143:src/../h/Riscv.hpp **** 
 144:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sstatus() {
 145:src/../h/Riscv.hpp **** 	uint64 volatile sstatus;
 146:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[sstatus], sstatus": [sstatus] "=r"(sstatus));
 147:src/../h/Riscv.hpp **** 	return sstatus;
 148:src/../h/Riscv.hpp **** }
 149:src/../h/Riscv.hpp **** 
 150:src/../h/Riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus) {
 1273              		.loc 2 150 46 is_stmt 1
GAS LISTING /tmp/ccfopqiX.s 			page 33


 1274              		.cfi_startproc
 1275              	.LVL155:
 1276 0000 130101FF 		addi	sp,sp,-16
 1277              		.cfi_def_cfa_offset 16
 1278 0004 23348100 		sd	s0,8(sp)
 1279              		.cfi_offset 8, -8
 1280 0008 13040101 		addi	s0,sp,16
 1281              		.cfi_def_cfa 8, 0
 151:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw sstatus, %[sstatus]": :[sstatus] "r"(sstatus));
 1282              		.loc 2 151 2
 1283              		.loc 2 151 71 is_stmt 0
 1284              	#APP
 1285              	# 151 "src/../h/Riscv.hpp" 1
 152              	}
 1286              		csrw sstatus, a0
 1287              	# 0 "" 2
 1288              		.loc 2 152 1
 1289              	#NO_APP
 1290 0010 03348100 		ld	s0,8(sp)
 1291              		.cfi_restore 8
 1292              		.cfi_def_cfa 2, 16
 1293 0014 13010101 		addi	sp,sp,16
 1294              		.cfi_def_cfa_offset 0
 1295 0018 67800000 		jr	ra
 1296              		.cfi_endproc
 1297              	.LFE16:
 1299              		.section	.text._ZN3TCB11setFinishedEb,"axG",@progbits,_ZN3TCB11setFinishedEb,comdat
 1300              		.align	2
 1301              		.weak	_ZN3TCB11setFinishedEb
 1303              	_ZN3TCB11setFinishedEb:
 1304              	.LFB33:
 1305              		.file 3 "src/../h/TCB.hpp"
   1:src/../h/TCB.hpp **** //
   2:src/../h/TCB.hpp **** // Created by os on 5/23/23.
   3:src/../h/TCB.hpp **** //
   4:src/../h/TCB.hpp **** 
   5:src/../h/TCB.hpp **** #ifndef PROJEKAT2023_TCB_HPP
   6:src/../h/TCB.hpp **** #define PROJEKAT2023_TCB_HPP
   7:src/../h/TCB.hpp **** 
   8:src/../h/TCB.hpp **** #include "../lib/hw.h"
   9:src/../h/TCB.hpp **** #include "../h/ThreadQueue.hpp"
  10:src/../h/TCB.hpp **** 
  11:src/../h/TCB.hpp **** class TCB {
  12:src/../h/TCB.hpp **** public:
  13:src/../h/TCB.hpp **** 	friend class Scheduler;
  14:src/../h/TCB.hpp **** 
  15:src/../h/TCB.hpp **** 	using Body = void (*)(void*);
  16:src/../h/TCB.hpp **** 
  17:src/../h/TCB.hpp **** 	static TCB* createThread(Body function, void* args, uint64* stack);
  18:src/../h/TCB.hpp **** 	static void start(TCB* newTcb);
  19:src/../h/TCB.hpp **** 
  20:src/../h/TCB.hpp **** 	bool isFinished() { return finished; }
  21:src/../h/TCB.hpp **** 
  22:src/../h/TCB.hpp **** 	void setFinished(bool finish) { this->finished = finish; }
 1306              		.loc 3 22 7 is_stmt 1
 1307              		.cfi_startproc
 1308              	.LVL156:
GAS LISTING /tmp/ccfopqiX.s 			page 34


 1309 0000 130101FF 		addi	sp,sp,-16
 1310              		.cfi_def_cfa_offset 16
 1311 0004 23348100 		sd	s0,8(sp)
 1312              		.cfi_offset 8, -8
 1313 0008 13040101 		addi	s0,sp,16
 1314              		.cfi_def_cfa 8, 0
 1315              		.loc 3 22 34
 1316              		.loc 3 22 49 is_stmt 0
 1317 000c 2308B502 		sb	a1,48(a0)
 1318              		.loc 3 22 59
 1319 0010 03348100 		ld	s0,8(sp)
 1320              		.cfi_restore 8
 1321              		.cfi_def_cfa 2, 16
 1322 0014 13010101 		addi	sp,sp,16
 1323              		.cfi_def_cfa_offset 0
 1324 0018 67800000 		jr	ra
 1325              		.cfi_endproc
 1326              	.LFE33:
 1328              		.section	.text._ZN3TCB12getTimeSliceEv,"axG",@progbits,_ZN3TCB12getTimeSliceEv,comdat
 1329              		.align	2
 1330              		.weak	_ZN3TCB12getTimeSliceEv
 1332              	_ZN3TCB12getTimeSliceEv:
 1333              	.LFB36:
  23:src/../h/TCB.hpp **** 
  24:src/../h/TCB.hpp **** 	bool isBlocked() { return blocked; }
  25:src/../h/TCB.hpp **** 
  26:src/../h/TCB.hpp **** 	void setBlocked(bool block) { this->blocked = block; }
  27:src/../h/TCB.hpp **** 
  28:src/../h/TCB.hpp **** 	uint64 getTimeSlice() { return timeSlice; }
 1334              		.loc 3 28 9 is_stmt 1
 1335              		.cfi_startproc
 1336              	.LVL157:
 1337 0000 130101FF 		addi	sp,sp,-16
 1338              		.cfi_def_cfa_offset 16
 1339 0004 23348100 		sd	s0,8(sp)
 1340              		.cfi_offset 8, -8
 1341 0008 13040101 		addi	s0,sp,16
 1342              		.cfi_def_cfa 8, 0
 1343              		.loc 3 28 26
 1344              		.loc 3 28 44 is_stmt 0
 1345 000c 03358502 		ld	a0,40(a0)
 1346              	.LVL158:
 1347 0010 03348100 		ld	s0,8(sp)
 1348              		.cfi_restore 8
 1349              		.cfi_def_cfa 2, 16
 1350 0014 13010101 		addi	sp,sp,16
 1351              		.cfi_def_cfa_offset 0
 1352 0018 67800000 		jr	ra
 1353              		.cfi_endproc
 1354              	.LFE36:
 1356              		.data
 1357              		.align	3
 1360              	_ZZ16interruptRoutineE6digits:
 1361 0000 30313233 		.string	"0123456789"
 1361      34353637 
 1361      383900
 1362              		.text
GAS LISTING /tmp/ccfopqiX.s 			page 35


 1363              	.Letext0:
 1364              		.file 4 "src/../lib/hw.h"
 1365              		.file 5 "src/../h/MemoryAllocator.hpp"
 1366              		.file 6 "src/../h/syscall_c.hpp"
 1367              		.file 7 "src/../h/KSem.hpp"
 1368              		.file 8 "src/../h/../h/ThreadQueue.hpp"
 1369              		.file 9 "src/../h/Scheduler.hpp"
 1370              		.file 10 "src/../h/KConsole.hpp"
 1371              		.file 11 "src/../h/../test/printing.hpp"
 1372              		.file 12 "src/../h/helper.hpp"
GAS LISTING /tmp/ccfopqiX.s 			page 36


DEFINED SYMBOLS
                            *ABS*:0000000000000000 interruptRoutine.cpp
     /tmp/ccfopqiX.s:29     .text:0000000000000000 interruptRoutine
     /tmp/ccfopqiX.s:33     .text:0000000000000000 .L0 
     /tmp/ccfopqiX.s:34     .text:0000000000000000 .L0 
     /tmp/ccfopqiX.s:35     .text:0000000000000004 .L0 
     /tmp/ccfopqiX.s:38     .text:000000000000000c .L0 
     /tmp/ccfopqiX.s:39     .text:000000000000000c .L0 
     /tmp/ccfopqiX.s:41     .text:0000000000000010 .L0 
     /tmp/ccfopqiX.s:43     .text:0000000000000010 .L0 
     /tmp/ccfopqiX.s:44     .text:0000000000000010 .L0 
src/interruptRoutine.cpp:23     .text:0000000000000010 .L0 
     /tmp/ccfopqiX.s:53     .text:0000000000000018 .L0 
src/interruptRoutine.cpp:24     .text:0000000000000018 .L0 
     /tmp/ccfopqiX.s:63     .text:0000000000000020 .L0 
src/interruptRoutine.cpp:26     .text:0000000000000020 .L0 
     /tmp/ccfopqiX.s:73     .text:0000000000000028 .L0 
     /tmp/ccfopqiX.s:74     .text:0000000000000028 .L0 
src/interruptRoutine.cpp:28     .text:0000000000000028 .L0 
     /tmp/ccfopqiX.s:84     .text:0000000000000030 .L0 
src/interruptRoutine.cpp:29     .text:0000000000000030 .L0 
     /tmp/ccfopqiX.s:94     .text:0000000000000038 .L0 
src/interruptRoutine.cpp:30     .text:0000000000000038 .L0 
     /tmp/ccfopqiX.s:104    .text:0000000000000040 .L0 
src/interruptRoutine.cpp:31     .text:0000000000000040 .L0 
     /tmp/ccfopqiX.s:114    .text:0000000000000048 .L0 
src/interruptRoutine.cpp:32     .text:0000000000000048 .L0 
     /tmp/ccfopqiX.s:124    .text:0000000000000050 .L0 
src/interruptRoutine.cpp:33     .text:0000000000000050 .L0 
     /tmp/ccfopqiX.s:134    .text:0000000000000058 .L0 
src/interruptRoutine.cpp:34     .text:0000000000000058 .L0 
     /tmp/ccfopqiX.s:144    .text:0000000000000060 .L0 
src/interruptRoutine.cpp:35     .text:0000000000000060 .L0 
     /tmp/ccfopqiX.s:155    .text:0000000000000068 .L0 
     /tmp/ccfopqiX.s:159    .text:0000000000000074 .L0 
     /tmp/ccfopqiX.s:165    .text:0000000000000080 .L0 
     /tmp/ccfopqiX.s:166    .text:0000000000000080 .L0 
     /tmp/ccfopqiX.s:171    .text:0000000000000088 .L0 
     /tmp/ccfopqiX.s:291    .text:000000000000012c .L0 
     /tmp/ccfopqiX.s:292    .text:000000000000012c .L0 
     /tmp/ccfopqiX.s:293    .text:000000000000012c .L0 
     /tmp/ccfopqiX.s:294    .text:000000000000012c .L0 
     /tmp/ccfopqiX.s:298    .text:0000000000000134 .L0 
     /tmp/ccfopqiX.s:299    .text:0000000000000134 .L0 
     /tmp/ccfopqiX.s:305    .text:0000000000000140 .L0 
     /tmp/ccfopqiX.s:306    .text:0000000000000140 .L0 
     /tmp/ccfopqiX.s:311    .text:0000000000000150 .L0 
src/interruptRoutine.cpp:47     .text:0000000000000150 .L0 
     /tmp/ccfopqiX.s:318    .text:0000000000000154 .L0 
     /tmp/ccfopqiX.s:322    .text:0000000000000158 .L0 
     /tmp/ccfopqiX.s:323    .text:0000000000000158 .L0 
     /tmp/ccfopqiX.s:324    .text:0000000000000158 .L0 
     /tmp/ccfopqiX.s:325    .text:0000000000000158 .L0 
     /tmp/ccfopqiX.s:329    .text:0000000000000160 .L0 
     /tmp/ccfopqiX.s:330    .text:0000000000000160 .L0 
     /tmp/ccfopqiX.s:334    .text:000000000000016c .L0 
src/interruptRoutine.cpp:54     .text:000000000000016c .L0 
GAS LISTING /tmp/ccfopqiX.s 			page 37


     /tmp/ccfopqiX.s:341    .text:0000000000000170 .L0 
     /tmp/ccfopqiX.s:345    .text:0000000000000174 .L0 
     /tmp/ccfopqiX.s:346    .text:0000000000000174 .L0 
     /tmp/ccfopqiX.s:347    .text:0000000000000174 .L0 
     /tmp/ccfopqiX.s:348    .text:0000000000000174 .L0 
     /tmp/ccfopqiX.s:352    .text:000000000000017c .L0 
     /tmp/ccfopqiX.s:353    .text:000000000000017c .L0 
     /tmp/ccfopqiX.s:354    .text:000000000000017c .L0 
     /tmp/ccfopqiX.s:359    .text:0000000000000184 .L0 
     /tmp/ccfopqiX.s:360    .text:0000000000000184 .L0 
     /tmp/ccfopqiX.s:361    .text:0000000000000184 .L0 
     /tmp/ccfopqiX.s:366    .text:000000000000018c .L0 
     /tmp/ccfopqiX.s:367    .text:000000000000018c .L0 
     /tmp/ccfopqiX.s:368    .text:000000000000018c .L0 
     /tmp/ccfopqiX.s:373    .text:0000000000000194 .L0 
     /tmp/ccfopqiX.s:374    .text:0000000000000194 .L0 
     /tmp/ccfopqiX.s:381    .text:00000000000001ac .L0 
     /tmp/ccfopqiX.s:384    .text:00000000000001b4 .L0 
     /tmp/ccfopqiX.s:385    .text:00000000000001b4 .L0 
     /tmp/ccfopqiX.s:391    .text:00000000000001c8 .L0 
     /tmp/ccfopqiX.s:392    .text:00000000000001c8 .L0 
     /tmp/ccfopqiX.s:395    .text:00000000000001d0 .L0 
     /tmp/ccfopqiX.s:397    .text:00000000000001d4 .L0 
src/interruptRoutine.cpp:70     .text:00000000000001d4 .L0 
     /tmp/ccfopqiX.s:406    .text:00000000000001dc .L0 
src/interruptRoutine.cpp:72     .text:00000000000001dc .L0 
     /tmp/ccfopqiX.s:414    .text:00000000000001e0 .L0 
src/interruptRoutine.cpp:74     .text:00000000000001e0 .L0 
     /tmp/ccfopqiX.s:421    .text:00000000000001e4 .L0 
     /tmp/ccfopqiX.s:425    .text:00000000000001e8 .L0 
     /tmp/ccfopqiX.s:426    .text:00000000000001e8 .L0 
     /tmp/ccfopqiX.s:427    .text:00000000000001e8 .L0 
     /tmp/ccfopqiX.s:1303   .text._ZN3TCB11setFinishedEb:0000000000000000 _ZN3TCB11setFinishedEb
     /tmp/ccfopqiX.s:434    .text:0000000000000204 .L0 
     /tmp/ccfopqiX.s:435    .text:0000000000000204 .L0 
     /tmp/ccfopqiX.s:438    .text:000000000000020c .L0 
     /tmp/ccfopqiX.s:439    .text:000000000000020c .L0 
     /tmp/ccfopqiX.s:442    .text:0000000000000214 .L0 
     /tmp/ccfopqiX.s:446    .text:0000000000000218 .L0 
     /tmp/ccfopqiX.s:447    .text:0000000000000218 .L0 
     /tmp/ccfopqiX.s:448    .text:0000000000000218 .L0 
     /tmp/ccfopqiX.s:451    .text:0000000000000220 .L0 
     /tmp/ccfopqiX.s:455    .text:0000000000000224 .L0 
     /tmp/ccfopqiX.s:456    .text:0000000000000224 .L0 
     /tmp/ccfopqiX.s:457    .text:0000000000000224 .L0 
     /tmp/ccfopqiX.s:458    .text:0000000000000224 .L0 
     /tmp/ccfopqiX.s:462    .text:000000000000022c .L0 
     /tmp/ccfopqiX.s:463    .text:000000000000022c .L0 
     /tmp/ccfopqiX.s:467    .text:0000000000000238 .L0 
     /tmp/ccfopqiX.s:468    .text:0000000000000238 .L0 
     /tmp/ccfopqiX.s:471    .text:0000000000000240 .L0 
     /tmp/ccfopqiX.s:475    .text:0000000000000244 .L0 
     /tmp/ccfopqiX.s:476    .text:0000000000000244 .L0 
     /tmp/ccfopqiX.s:477    .text:0000000000000244 .L0 
     /tmp/ccfopqiX.s:478    .text:0000000000000244 .L0 
     /tmp/ccfopqiX.s:482    .text:000000000000024c .L0 
     /tmp/ccfopqiX.s:483    .text:000000000000024c .L0 
GAS LISTING /tmp/ccfopqiX.s 			page 38


     /tmp/ccfopqiX.s:484    .text:000000000000024c .L0 
     /tmp/ccfopqiX.s:489    .text:0000000000000254 .L0 
     /tmp/ccfopqiX.s:490    .text:0000000000000254 .L0 
     /tmp/ccfopqiX.s:497    .text:0000000000000268 .L0 
     /tmp/ccfopqiX.s:500    .text:0000000000000270 .L0 
     /tmp/ccfopqiX.s:501    .text:0000000000000270 .L0 
     /tmp/ccfopqiX.s:504    .text:0000000000000278 .L0 
     /tmp/ccfopqiX.s:506    .text:000000000000027c .L0 
src/interruptRoutine.cpp:101    .text:000000000000027c .L0 
     /tmp/ccfopqiX.s:515    .text:0000000000000284 .L0 
src/interruptRoutine.cpp:103    .text:0000000000000284 .L0 
     /tmp/ccfopqiX.s:523    .text:0000000000000288 .L0 
src/interruptRoutine.cpp:105    .text:0000000000000288 .L0 
     /tmp/ccfopqiX.s:530    .text:000000000000028c .L0 
     /tmp/ccfopqiX.s:534    .text:0000000000000290 .L0 
     /tmp/ccfopqiX.s:535    .text:0000000000000290 .L0 
     /tmp/ccfopqiX.s:536    .text:0000000000000290 .L0 
     /tmp/ccfopqiX.s:537    .text:0000000000000290 .L0 
     /tmp/ccfopqiX.s:541    .text:0000000000000298 .L0 
     /tmp/ccfopqiX.s:542    .text:0000000000000298 .L0 
     /tmp/ccfopqiX.s:546    .text:00000000000002a4 .L0 
src/interruptRoutine.cpp:112    .text:00000000000002a4 .L0 
     /tmp/ccfopqiX.s:553    .text:00000000000002a8 .L0 
     /tmp/ccfopqiX.s:557    .text:00000000000002ac .L0 
     /tmp/ccfopqiX.s:558    .text:00000000000002ac .L0 
     /tmp/ccfopqiX.s:559    .text:00000000000002ac .L0 
     /tmp/ccfopqiX.s:560    .text:00000000000002ac .L0 
     /tmp/ccfopqiX.s:564    .text:00000000000002b4 .L0 
     /tmp/ccfopqiX.s:565    .text:00000000000002b4 .L0 
     /tmp/ccfopqiX.s:569    .text:00000000000002c0 .L0 
src/interruptRoutine.cpp:119    .text:00000000000002c0 .L0 
     /tmp/ccfopqiX.s:576    .text:00000000000002c4 .L0 
     /tmp/ccfopqiX.s:580    .text:00000000000002c8 .L0 
     /tmp/ccfopqiX.s:581    .text:00000000000002c8 .L0 
     /tmp/ccfopqiX.s:582    .text:00000000000002c8 .L0 
     /tmp/ccfopqiX.s:583    .text:00000000000002c8 .L0 
     /tmp/ccfopqiX.s:587    .text:00000000000002d0 .L0 
     /tmp/ccfopqiX.s:588    .text:00000000000002d0 .L0 
     /tmp/ccfopqiX.s:592    .text:00000000000002dc .L0 
src/interruptRoutine.cpp:126    .text:00000000000002dc .L0 
     /tmp/ccfopqiX.s:599    .text:00000000000002e0 .L0 
     /tmp/ccfopqiX.s:603    .text:00000000000002e4 .L0 
     /tmp/ccfopqiX.s:604    .text:00000000000002e4 .L0 
     /tmp/ccfopqiX.s:605    .text:00000000000002e4 .L0 
     /tmp/ccfopqiX.s:606    .text:00000000000002e4 .L0 
     /tmp/ccfopqiX.s:610    .text:00000000000002ec .L0 
     /tmp/ccfopqiX.s:613    .text:00000000000002f4 .L0 
src/interruptRoutine.cpp:133    .text:00000000000002f4 .L0 
     /tmp/ccfopqiX.s:622    .text:00000000000002fc .L0 
src/interruptRoutine.cpp:135    .text:00000000000002fc .L0 
     /tmp/ccfopqiX.s:630    .text:0000000000000300 .L0 
src/interruptRoutine.cpp:137    .text:0000000000000300 .L0 
     /tmp/ccfopqiX.s:637    .text:0000000000000304 .L0 
     /tmp/ccfopqiX.s:641    .text:000000000000030c .L0 
     /tmp/ccfopqiX.s:642    .text:000000000000030c .L0 
     /tmp/ccfopqiX.s:649    .text:0000000000000328 .L0 
     /tmp/ccfopqiX.s:650    .text:0000000000000328 .L0 
GAS LISTING /tmp/ccfopqiX.s 			page 39


     /tmp/ccfopqiX.s:653    .text:0000000000000330 .L0 
     /tmp/ccfopqiX.s:657    .text:0000000000000334 .L0 
     /tmp/ccfopqiX.s:658    .text:0000000000000334 .L0 
     /tmp/ccfopqiX.s:659    .text:0000000000000334 .L0 
     /tmp/ccfopqiX.s:662    .text:000000000000033c .L0 
src/interruptRoutine.cpp:146    .text:000000000000033c .L0 
     /tmp/ccfopqiX.s:669    .text:0000000000000340 .L0 
     /tmp/ccfopqiX.s:673    .text:0000000000000344 .L0 
     /tmp/ccfopqiX.s:674    .text:0000000000000344 .L0 
     /tmp/ccfopqiX.s:675    .text:0000000000000344 .L0 
     /tmp/ccfopqiX.s:676    .text:0000000000000344 .L0 
     /tmp/ccfopqiX.s:680    .text:000000000000034c .L0 
     /tmp/ccfopqiX.s:681    .text:000000000000034c .L0 
     /tmp/ccfopqiX.s:687    .text:000000000000035c .L0 
     /tmp/ccfopqiX.s:691    .text:0000000000000360 .L0 
     /tmp/ccfopqiX.s:692    .text:0000000000000360 .L0 
     /tmp/ccfopqiX.s:693    .text:0000000000000360 .L0 
     /tmp/ccfopqiX.s:694    .text:0000000000000360 .L0 
     /tmp/ccfopqiX.s:698    .text:0000000000000368 .L0 
     /tmp/ccfopqiX.s:699    .text:0000000000000368 .L0 
     /tmp/ccfopqiX.s:700    .text:0000000000000368 .L0 
     /tmp/ccfopqiX.s:705    .text:0000000000000370 .L0 
     /tmp/ccfopqiX.s:706    .text:0000000000000370 .L0 
     /tmp/ccfopqiX.s:707    .text:0000000000000370 .L0 
     /tmp/ccfopqiX.s:712    .text:0000000000000378 .L0 
     /tmp/ccfopqiX.s:713    .text:0000000000000378 .L0 
     /tmp/ccfopqiX.s:714    .text:0000000000000378 .L0 
     /tmp/ccfopqiX.s:719    .text:0000000000000380 .L0 
     /tmp/ccfopqiX.s:720    .text:0000000000000380 .L0 
     /tmp/ccfopqiX.s:727    .text:0000000000000398 .L0 
     /tmp/ccfopqiX.s:730    .text:00000000000003a0 .L0 
     /tmp/ccfopqiX.s:731    .text:00000000000003a0 .L0 
     /tmp/ccfopqiX.s:734    .text:00000000000003a8 .L0 
     /tmp/ccfopqiX.s:736    .text:00000000000003ac .L0 
src/interruptRoutine.cpp:167    .text:00000000000003ac .L0 
     /tmp/ccfopqiX.s:745    .text:00000000000003b4 .L0 
src/interruptRoutine.cpp:169    .text:00000000000003b4 .L0 
     /tmp/ccfopqiX.s:753    .text:00000000000003b8 .L0 
src/interruptRoutine.cpp:171    .text:00000000000003b8 .L0 
     /tmp/ccfopqiX.s:760    .text:00000000000003bc .L0 
     /tmp/ccfopqiX.s:764    .text:00000000000003c0 .L0 
     /tmp/ccfopqiX.s:765    .text:00000000000003c0 .L0 
     /tmp/ccfopqiX.s:766    .text:00000000000003c0 .L0 
     /tmp/ccfopqiX.s:767    .text:00000000000003c0 .L0 
     /tmp/ccfopqiX.s:771    .text:00000000000003c8 .L0 
     /tmp/ccfopqiX.s:772    .text:00000000000003c8 .L0 
     /tmp/ccfopqiX.s:776    .text:00000000000003d4 .L0 
     /tmp/ccfopqiX.s:780    .text:00000000000003d8 .L0 
     /tmp/ccfopqiX.s:781    .text:00000000000003d8 .L0 
     /tmp/ccfopqiX.s:782    .text:00000000000003d8 .L0 
     /tmp/ccfopqiX.s:783    .text:00000000000003d8 .L0 
     /tmp/ccfopqiX.s:788    .text:00000000000003e0 .L0 
     /tmp/ccfopqiX.s:789    .text:00000000000003e0 .L0 
     /tmp/ccfopqiX.s:790    .text:00000000000003e0 .L0 
     /tmp/ccfopqiX.s:793    .text:00000000000003e8 .L0 
     /tmp/ccfopqiX.s:795    .text:00000000000003ec .L0 
     /tmp/ccfopqiX.s:796    .text:00000000000003ec .L0 
GAS LISTING /tmp/ccfopqiX.s 			page 40


     /tmp/ccfopqiX.s:802    .text:0000000000000400 .L0 
     /tmp/ccfopqiX.s:803    .text:0000000000000400 .L0 
     /tmp/ccfopqiX.s:808    .text:000000000000040c .L0 
     /tmp/ccfopqiX.s:812    .text:0000000000000410 .L0 
     /tmp/ccfopqiX.s:813    .text:0000000000000410 .L0 
     /tmp/ccfopqiX.s:814    .text:0000000000000410 .L0 
     /tmp/ccfopqiX.s:815    .text:0000000000000410 .L0 
     /tmp/ccfopqiX.s:819    .text:0000000000000418 .L0 
     /tmp/ccfopqiX.s:820    .text:0000000000000418 .L0 
     /tmp/ccfopqiX.s:821    .text:0000000000000418 .L0 
     /tmp/ccfopqiX.s:822    .text:0000000000000418 .L0 
     /tmp/ccfopqiX.s:823    .text:0000000000000418 .L0 
     /tmp/ccfopqiX.s:824    .text:0000000000000418 .L0 
     /tmp/ccfopqiX.s:827    .text:000000000000041c .L0 
     /tmp/ccfopqiX.s:828    .text:000000000000041c .L0 
     /tmp/ccfopqiX.s:829    .text:000000000000041c .L0 
     /tmp/ccfopqiX.s:833    .text:0000000000000424 .L0 
     /tmp/ccfopqiX.s:834    .text:0000000000000424 .L0 
     /tmp/ccfopqiX.s:838    .text:0000000000000428 .L0 
     /tmp/ccfopqiX.s:839    .text:0000000000000428 .L0 
     /tmp/ccfopqiX.s:840    .text:0000000000000428 .L0 
     /tmp/ccfopqiX.s:845    .text:0000000000000438 .L0 
     /tmp/ccfopqiX.s:1360   .data:0000000000000000 _ZZ16interruptRoutineE6digits
     /tmp/ccfopqiX.s:850    .text:0000000000000444 .L0 
     /tmp/ccfopqiX.s:857    .text:000000000000045c .L0 
     /tmp/ccfopqiX.s:861    .text:0000000000000468 .L0 
     /tmp/ccfopqiX.s:862    .text:0000000000000468 .L0 
     /tmp/ccfopqiX.s:868    .text:0000000000000478 .L0 
     /tmp/ccfopqiX.s:875    .text:000000000000048c .L0 
     /tmp/ccfopqiX.s:878    .text:0000000000000490 .L0 
     /tmp/ccfopqiX.s:882    .text:000000000000049c .L0 
     /tmp/ccfopqiX.s:883    .text:000000000000049c .L0 
     /tmp/ccfopqiX.s:888    .text:00000000000004a8 .L0 
     /tmp/ccfopqiX.s:896    .text:00000000000004b8 .L0 
     /tmp/ccfopqiX.s:897    .text:00000000000004b8 .L0 
     /tmp/ccfopqiX.s:908    .text:00000000000004d8 .L0 
     /tmp/ccfopqiX.s:909    .text:00000000000004d8 .L0 
     /tmp/ccfopqiX.s:917    .text:00000000000004f4 .L0 
     /tmp/ccfopqiX.s:921    .text:00000000000004f8 .L0 
     /tmp/ccfopqiX.s:922    .text:00000000000004f8 .L0 
     /tmp/ccfopqiX.s:923    .text:00000000000004f8 .L0 
     /tmp/ccfopqiX.s:927    .text:0000000000000508 .L0 
     /tmp/ccfopqiX.s:928    .text:0000000000000508 .L0 
     /tmp/ccfopqiX.s:932    .text:0000000000000514 .L0 
     /tmp/ccfopqiX.s:933    .text:0000000000000514 .L0 
     /tmp/ccfopqiX.s:937    .text:0000000000000524 .L0 
     /tmp/ccfopqiX.s:938    .text:0000000000000524 .L0 
     /tmp/ccfopqiX.s:942    .text:0000000000000530 .L0 
     /tmp/ccfopqiX.s:943    .text:0000000000000530 .L0 
     /tmp/ccfopqiX.s:947    .text:0000000000000540 .L0 
     /tmp/ccfopqiX.s:948    .text:0000000000000540 .L0 
     /tmp/ccfopqiX.s:952    .text:000000000000054c .L0 
     /tmp/ccfopqiX.s:956    .text:0000000000000550 .L0 
     /tmp/ccfopqiX.s:961    .text:0000000000000558 .L0 
     /tmp/ccfopqiX.s:966    .text:0000000000000560 .L0 
     /tmp/ccfopqiX.s:972    .text:0000000000000564 .L0 
     /tmp/ccfopqiX.s:973    .text:0000000000000564 .L0 
GAS LISTING /tmp/ccfopqiX.s 			page 41


     /tmp/ccfopqiX.s:983    .text:0000000000000570 .L0 
     /tmp/ccfopqiX.s:984    .text:0000000000000570 .L0 
     /tmp/ccfopqiX.s:990    .text:0000000000000578 .L0 
     /tmp/ccfopqiX.s:992    .text:0000000000000578 .L0 
     /tmp/ccfopqiX.s:1003   .text:0000000000000584 .L0 
     /tmp/ccfopqiX.s:1010   .text:0000000000000588 .L0 
     /tmp/ccfopqiX.s:1018   .text:000000000000059c .L0 
     /tmp/ccfopqiX.s:1019   .text:000000000000059c .L0 
     /tmp/ccfopqiX.s:1023   .text:00000000000005a8 .L0 
     /tmp/ccfopqiX.s:1026   .text:00000000000005ac .L0 
     /tmp/ccfopqiX.s:1030   .text:00000000000005b8 .L0 
     /tmp/ccfopqiX.s:1031   .text:00000000000005b8 .L0 
     /tmp/ccfopqiX.s:1035   .text:00000000000005c8 .L0 
     /tmp/ccfopqiX.s:1037   .text:00000000000005cc .L0 
     /tmp/ccfopqiX.s:1039   .text:00000000000005d0 .L0 
     /tmp/ccfopqiX.s:1040   .text:00000000000005d0 .L0 
     /tmp/ccfopqiX.s:1049   .text:00000000000005ec .L0 
     /tmp/ccfopqiX.s:1050   .text:00000000000005ec .L0 
     /tmp/ccfopqiX.s:1059   .text:0000000000000604 .L0 
     /tmp/ccfopqiX.s:1060   .text:0000000000000604 .L0 
     /tmp/ccfopqiX.s:1066   .text:0000000000000614 .L0 
     /tmp/ccfopqiX.s:1067   .text:0000000000000614 .L0 
     /tmp/ccfopqiX.s:1206   .text._ZN5Riscv6w_sepcEm:0000000000000000 _ZN5Riscv6w_sepcEm
     /tmp/ccfopqiX.s:1071   .text:0000000000000620 .L0 
     /tmp/ccfopqiX.s:1072   .text:0000000000000620 .L0 
     /tmp/ccfopqiX.s:1271   .text._ZN5Riscv9w_sstatusEm:0000000000000000 _ZN5Riscv9w_sstatusEm
     /tmp/ccfopqiX.s:1076   .text:000000000000062c .L0 
     /tmp/ccfopqiX.s:1077   .text:000000000000062c .L0 
     /tmp/ccfopqiX.s:1239   .text._ZN5Riscv6mc_sipEm:0000000000000000 _ZN5Riscv6mc_sipEm
     /tmp/ccfopqiX.s:1085   .text:0000000000000638 .L0 
     /tmp/ccfopqiX.s:1092   .text:000000000000063c .L0 
     /tmp/ccfopqiX.s:1098   .text:0000000000000650 .L0 
     /tmp/ccfopqiX.s:1099   .text:0000000000000650 .L0 
     /tmp/ccfopqiX.s:1102   .text:0000000000000658 .L0 
     /tmp/ccfopqiX.s:1103   .text:0000000000000658 .L0 
     /tmp/ccfopqiX.s:1109   .text:0000000000000674 .L0 
     /tmp/ccfopqiX.s:1110   .text:0000000000000674 .L0 
     /tmp/ccfopqiX.s:1332   .text._ZN3TCB12getTimeSliceEv:0000000000000000 _ZN3TCB12getTimeSliceEv
     /tmp/ccfopqiX.s:1117   .text:0000000000000690 .L0 
     /tmp/ccfopqiX.s:1123   .text:00000000000006a8 .L0 
     /tmp/ccfopqiX.s:1125   .text:00000000000006ac .L0 
     /tmp/ccfopqiX.s:1126   .text:00000000000006ac .L0 
     /tmp/ccfopqiX.s:1129   .text:00000000000006b4 .L0 
     /tmp/ccfopqiX.s:1130   .text:00000000000006b4 .L0 
     /tmp/ccfopqiX.s:1134   .text:00000000000006c0 .L0 
     /tmp/ccfopqiX.s:1135   .text:00000000000006c0 .L0 
     /tmp/ccfopqiX.s:1139   .text:00000000000006cc .L0 
     /tmp/ccfopqiX.s:1140   .text:00000000000006cc .L0 
     /tmp/ccfopqiX.s:1144   .text:00000000000006d8 .L0 
     /tmp/ccfopqiX.s:1145   .text:00000000000006d8 .L0 
     /tmp/ccfopqiX.s:1152   .text:00000000000006e4 .L0 
     /tmp/ccfopqiX.s:1159   .text:00000000000006e8 .L0 
     /tmp/ccfopqiX.s:1160   .text:00000000000006e8 .L0 
     /tmp/ccfopqiX.s:1164   .text:00000000000006f8 .L0 
     /tmp/ccfopqiX.s:1165   .text:00000000000006f8 .L0 
     /tmp/ccfopqiX.s:1169   .text:0000000000000708 .L0 
     /tmp/ccfopqiX.s:1170   .text:0000000000000708 .L0 
GAS LISTING /tmp/ccfopqiX.s 			page 42


     /tmp/ccfopqiX.s:1174   .text:0000000000000714 .L0 
     /tmp/ccfopqiX.s:1175   .text:0000000000000714 .L0 
     /tmp/ccfopqiX.s:1179   .text:0000000000000724 .L0 
     /tmp/ccfopqiX.s:1180   .text:0000000000000724 .L0 
     /tmp/ccfopqiX.s:1188   .text:0000000000000730 .L0 
     /tmp/ccfopqiX.s:1190   .text:0000000000000738 .L0 
     /tmp/ccfopqiX.s:1192   .text:000000000000073c .L0 
     /tmp/ccfopqiX.s:1193   .text:000000000000073c .L0 
     /tmp/ccfopqiX.s:1196   .text:0000000000000740 .L0 
     /tmp/ccfopqiX.s:1199   .text:0000000000000744 .L0 
     /tmp/ccfopqiX.s:1210   .text._ZN5Riscv6w_sepcEm:0000000000000000 .L0 
     /tmp/ccfopqiX.s:1212   .text._ZN5Riscv6w_sepcEm:0000000000000000 .L0 
     /tmp/ccfopqiX.s:1213   .text._ZN5Riscv6w_sepcEm:0000000000000004 .L0 
     /tmp/ccfopqiX.s:1215   .text._ZN5Riscv6w_sepcEm:0000000000000008 .L0 
     /tmp/ccfopqiX.s:1217   .text._ZN5Riscv6w_sepcEm:000000000000000c .L0 
     /tmp/ccfopqiX.s:1219   .text._ZN5Riscv6w_sepcEm:000000000000000c .L0 
  src/../h/Riscv.hpp:105    .text._ZN5Riscv6w_sepcEm:000000000000000c .L0 
     /tmp/ccfopqiX.s:1226   .text._ZN5Riscv6w_sepcEm:0000000000000010 .L0 
     /tmp/ccfopqiX.s:1227   .text._ZN5Riscv6w_sepcEm:0000000000000014 .L0 
     /tmp/ccfopqiX.s:1228   .text._ZN5Riscv6w_sepcEm:0000000000000014 .L0 
     /tmp/ccfopqiX.s:1230   .text._ZN5Riscv6w_sepcEm:0000000000000018 .L0 
     /tmp/ccfopqiX.s:1232   .text._ZN5Riscv6w_sepcEm:000000000000001c .L0 
     /tmp/ccfopqiX.s:1242   .text._ZN5Riscv6mc_sipEm:0000000000000000 .L0 
     /tmp/ccfopqiX.s:1244   .text._ZN5Riscv6mc_sipEm:0000000000000000 .L0 
     /tmp/ccfopqiX.s:1245   .text._ZN5Riscv6mc_sipEm:0000000000000004 .L0 
     /tmp/ccfopqiX.s:1247   .text._ZN5Riscv6mc_sipEm:0000000000000008 .L0 
     /tmp/ccfopqiX.s:1249   .text._ZN5Riscv6mc_sipEm:000000000000000c .L0 
     /tmp/ccfopqiX.s:1251   .text._ZN5Riscv6mc_sipEm:000000000000000c .L0 
  src/../h/Riscv.hpp:123    .text._ZN5Riscv6mc_sipEm:000000000000000c .L0 
     /tmp/ccfopqiX.s:1258   .text._ZN5Riscv6mc_sipEm:0000000000000010 .L0 
     /tmp/ccfopqiX.s:1259   .text._ZN5Riscv6mc_sipEm:0000000000000014 .L0 
     /tmp/ccfopqiX.s:1260   .text._ZN5Riscv6mc_sipEm:0000000000000014 .L0 
     /tmp/ccfopqiX.s:1262   .text._ZN5Riscv6mc_sipEm:0000000000000018 .L0 
     /tmp/ccfopqiX.s:1264   .text._ZN5Riscv6mc_sipEm:000000000000001c .L0 
     /tmp/ccfopqiX.s:1274   .text._ZN5Riscv9w_sstatusEm:0000000000000000 .L0 
     /tmp/ccfopqiX.s:1276   .text._ZN5Riscv9w_sstatusEm:0000000000000000 .L0 
     /tmp/ccfopqiX.s:1277   .text._ZN5Riscv9w_sstatusEm:0000000000000004 .L0 
     /tmp/ccfopqiX.s:1279   .text._ZN5Riscv9w_sstatusEm:0000000000000008 .L0 
     /tmp/ccfopqiX.s:1281   .text._ZN5Riscv9w_sstatusEm:000000000000000c .L0 
     /tmp/ccfopqiX.s:1283   .text._ZN5Riscv9w_sstatusEm:000000000000000c .L0 
  src/../h/Riscv.hpp:151    .text._ZN5Riscv9w_sstatusEm:000000000000000c .L0 
     /tmp/ccfopqiX.s:1290   .text._ZN5Riscv9w_sstatusEm:0000000000000010 .L0 
     /tmp/ccfopqiX.s:1291   .text._ZN5Riscv9w_sstatusEm:0000000000000014 .L0 
     /tmp/ccfopqiX.s:1292   .text._ZN5Riscv9w_sstatusEm:0000000000000014 .L0 
     /tmp/ccfopqiX.s:1294   .text._ZN5Riscv9w_sstatusEm:0000000000000018 .L0 
     /tmp/ccfopqiX.s:1296   .text._ZN5Riscv9w_sstatusEm:000000000000001c .L0 
     /tmp/ccfopqiX.s:1307   .text._ZN3TCB11setFinishedEb:0000000000000000 .L0 
     /tmp/ccfopqiX.s:1309   .text._ZN3TCB11setFinishedEb:0000000000000000 .L0 
     /tmp/ccfopqiX.s:1310   .text._ZN3TCB11setFinishedEb:0000000000000004 .L0 
     /tmp/ccfopqiX.s:1312   .text._ZN3TCB11setFinishedEb:0000000000000008 .L0 
     /tmp/ccfopqiX.s:1314   .text._ZN3TCB11setFinishedEb:000000000000000c .L0 
     /tmp/ccfopqiX.s:1316   .text._ZN3TCB11setFinishedEb:000000000000000c .L0 
     /tmp/ccfopqiX.s:1317   .text._ZN3TCB11setFinishedEb:000000000000000c .L0 
     /tmp/ccfopqiX.s:1319   .text._ZN3TCB11setFinishedEb:0000000000000010 .L0 
     /tmp/ccfopqiX.s:1320   .text._ZN3TCB11setFinishedEb:0000000000000014 .L0 
     /tmp/ccfopqiX.s:1321   .text._ZN3TCB11setFinishedEb:0000000000000014 .L0 
     /tmp/ccfopqiX.s:1323   .text._ZN3TCB11setFinishedEb:0000000000000018 .L0 
GAS LISTING /tmp/ccfopqiX.s 			page 43


     /tmp/ccfopqiX.s:1325   .text._ZN3TCB11setFinishedEb:000000000000001c .L0 
     /tmp/ccfopqiX.s:1335   .text._ZN3TCB12getTimeSliceEv:0000000000000000 .L0 
     /tmp/ccfopqiX.s:1337   .text._ZN3TCB12getTimeSliceEv:0000000000000000 .L0 
     /tmp/ccfopqiX.s:1338   .text._ZN3TCB12getTimeSliceEv:0000000000000004 .L0 
     /tmp/ccfopqiX.s:1340   .text._ZN3TCB12getTimeSliceEv:0000000000000008 .L0 
     /tmp/ccfopqiX.s:1342   .text._ZN3TCB12getTimeSliceEv:000000000000000c .L0 
     /tmp/ccfopqiX.s:1344   .text._ZN3TCB12getTimeSliceEv:000000000000000c .L0 
     /tmp/ccfopqiX.s:1345   .text._ZN3TCB12getTimeSliceEv:000000000000000c .L0 
     /tmp/ccfopqiX.s:1348   .text._ZN3TCB12getTimeSliceEv:0000000000000014 .L0 
     /tmp/ccfopqiX.s:1349   .text._ZN3TCB12getTimeSliceEv:0000000000000014 .L0 
     /tmp/ccfopqiX.s:1351   .text._ZN3TCB12getTimeSliceEv:0000000000000018 .L0 
     /tmp/ccfopqiX.s:1353   .text._ZN3TCB12getTimeSliceEv:000000000000001c .L0 
     /tmp/ccfopqiX.s:1373   .text:0000000000000744 .L0 
     /tmp/ccfopqiX.s:1235   .text._ZN5Riscv6w_sepcEm:000000000000001c .L0 
     /tmp/ccfopqiX.s:1267   .text._ZN5Riscv6mc_sipEm:000000000000001c .L0 
     /tmp/ccfopqiX.s:1299   .text._ZN5Riscv9w_sstatusEm:000000000000001c .L0 
     /tmp/ccfopqiX.s:1328   .text._ZN3TCB11setFinishedEb:000000000000001c .L0 
     /tmp/ccfopqiX.s:1356   .text._ZN3TCB12getTimeSliceEv:000000000000001c .L0 
     /tmp/ccfopqiX.s:212    .rodata:0000000000000074 .L10
     /tmp/ccfopqiX.s:201    .text:00000000000000f8 .L0 
     /tmp/ccfopqiX.s:206    .text:000000000000010c .L0 
     /tmp/ccfopqiX.s:427    .text:00000000000001e8 .L0 
     /tmp/ccfopqiX.s:642    .text:000000000000030c .L0 
     /tmp/ccfopqiX.s:850    .text:0000000000000444 .L0 
     /tmp/ccfopqiX.s:8      .rodata:0000000000000000 .LC0
     /tmp/ccfopqiX.s:923    .text:00000000000004f8 .L0 
     /tmp/ccfopqiX.s:11     .rodata:0000000000000018 .LC1
     /tmp/ccfopqiX.s:933    .text:0000000000000514 .L0 
     /tmp/ccfopqiX.s:14     .rodata:0000000000000028 .LC2
     /tmp/ccfopqiX.s:943    .text:0000000000000530 .L0 
     /tmp/ccfopqiX.s:1031   .text:00000000000005b8 .L0 
     /tmp/ccfopqiX.s:1040   .text:00000000000005d0 .L0 
     /tmp/ccfopqiX.s:17     .rodata:0000000000000030 .LC3
     /tmp/ccfopqiX.s:1060   .text:0000000000000604 .L0 
     /tmp/ccfopqiX.s:1103   .text:0000000000000658 .L0 
     /tmp/ccfopqiX.s:1106   .text:0000000000000668 .L0 
     /tmp/ccfopqiX.s:1110   .text:0000000000000674 .L0 
     /tmp/ccfopqiX.s:1117   .text:0000000000000690 .L0 
     /tmp/ccfopqiX.s:1130   .text:00000000000006b4 .L0 
     /tmp/ccfopqiX.s:20     .rodata:0000000000000048 .LC4
     /tmp/ccfopqiX.s:1160   .text:00000000000006e8 .L0 
     /tmp/ccfopqiX.s:23     .rodata:0000000000000068 .LC5
     /tmp/ccfopqiX.s:1165   .text:00000000000006f8 .L0 
     /tmp/ccfopqiX.s:1175   .text:0000000000000714 .L0 
     /tmp/ccfopqiX.s:162    .text:0000000000000080 .L2
     /tmp/ccfopqiX.s:1005   .text:0000000000000588 .L3
     /tmp/ccfopqiX.s:810    .text:0000000000000410 .L4
     /tmp/ccfopqiX.s:919    .text:00000000000004f8 .L5
     /tmp/ccfopqiX.s:778    .text:00000000000003d8 .L6
     /tmp/ccfopqiX.s:762    .text:00000000000003c0 .L7
     /tmp/ccfopqiX.s:282    .text:000000000000011c .L8
     /tmp/ccfopqiX.s:689    .text:0000000000000360 .L23
     /tmp/ccfopqiX.s:968    .text:0000000000000564 .L24
     /tmp/ccfopqiX.s:404    .text:00000000000001dc .L25
     /tmp/ccfopqiX.s:412    .text:00000000000001e0 .L26
     /tmp/ccfopqiX.s:513    .text:0000000000000284 .L27
     /tmp/ccfopqiX.s:521    .text:0000000000000288 .L28
GAS LISTING /tmp/ccfopqiX.s 			page 44


     /tmp/ccfopqiX.s:620    .text:00000000000002fc .L29
     /tmp/ccfopqiX.s:628    .text:0000000000000300 .L30
     /tmp/ccfopqiX.s:954    .text:0000000000000550 .L48
     /tmp/ccfopqiX.s:743    .text:00000000000003b4 .L32
     /tmp/ccfopqiX.s:751    .text:00000000000003b8 .L33
     /tmp/ccfopqiX.s:959    .text:0000000000000558 .L49
     /tmp/ccfopqiX.s:786    .text:00000000000003e0 .L35
     /tmp/ccfopqiX.s:876    .text:0000000000000490 .L36
     /tmp/ccfopqiX.s:836    .text:0000000000000428 .L37
     /tmp/ccfopqiX.s:894    .text:00000000000004b8 .L40
     /tmp/ccfopqiX.s:964    .text:0000000000000560 .L50
     /tmp/ccfopqiX.s:1183   .text:0000000000000730 .L51
     /tmp/ccfopqiX.s:1087   .text:000000000000063c .L42
     /tmp/ccfopqiX.s:1057   .text:0000000000000604 .L43
     /tmp/ccfopqiX.s:1047   .text:00000000000005ec .L44
     /tmp/ccfopqiX.s:1064   .text:0000000000000614 .L45
     /tmp/ccfopqiX.s:1154   .text:00000000000006e8 .L46
     /tmp/ccfopqiX.s:1132   .text:00000000000006c0 .L47
     /tmp/ccfopqiX.s:288    .text:000000000000012c .L22
     /tmp/ccfopqiX.s:320    .text:0000000000000158 .L21
     /tmp/ccfopqiX.s:343    .text:0000000000000174 .L20
     /tmp/ccfopqiX.s:423    .text:00000000000001e8 .L19
     /tmp/ccfopqiX.s:444    .text:0000000000000218 .L18
     /tmp/ccfopqiX.s:453    .text:0000000000000224 .L17
     /tmp/ccfopqiX.s:473    .text:0000000000000244 .L16
     /tmp/ccfopqiX.s:532    .text:0000000000000290 .L15
     /tmp/ccfopqiX.s:555    .text:00000000000002ac .L14
     /tmp/ccfopqiX.s:578    .text:00000000000002c8 .L13
     /tmp/ccfopqiX.s:601    .text:00000000000002e4 .L12
     /tmp/ccfopqiX.s:655    .text:0000000000000334 .L11
     /tmp/ccfopqiX.s:671    .text:0000000000000344 .L9
     /tmp/ccfopqiX.s:3856   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccfopqiX.s:6366   .debug_str:0000000000000b7a .LASF250
     /tmp/ccfopqiX.s:6240   .debug_str:00000000000007f0 .LASF251
     /tmp/ccfopqiX.s:6306   .debug_str:00000000000009e5 .LASF252
     /tmp/ccfopqiX.s:5946   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccfopqiX.s:5962   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccfopqiX.s:6270   .debug_str:00000000000008cf .LASF3
     /tmp/ccfopqiX.s:6118   .debug_str:0000000000000497 .LASF0
     /tmp/ccfopqiX.s:6154   .debug_str:000000000000058c .LASF1
     /tmp/ccfopqiX.s:6286   .debug_str:0000000000000949 .LASF2
     /tmp/ccfopqiX.s:6066   .debug_str:000000000000031c .LASF4
     /tmp/ccfopqiX.s:6296   .debug_str:00000000000009a1 .LASF5
     /tmp/ccfopqiX.s:6136   .debug_str:0000000000000501 .LASF6
     /tmp/ccfopqiX.s:5978   .debug_str:0000000000000074 .LASF7
     /tmp/ccfopqiX.s:6250   .debug_str:0000000000000830 .LASF8
     /tmp/ccfopqiX.s:6238   .debug_str:00000000000007dd .LASF9
     /tmp/ccfopqiX.s:6144   .debug_str:000000000000054c .LASF10
     /tmp/ccfopqiX.s:6088   .debug_str:00000000000003c0 .LASF11
     /tmp/ccfopqiX.s:6098   .debug_str:000000000000040f .LASF12
     /tmp/ccfopqiX.s:6016   .debug_str:0000000000000183 .LASF13
     /tmp/ccfopqiX.s:6076   .debug_str:000000000000037a .LASF14
     /tmp/ccfopqiX.s:6030   .debug_str:00000000000001fc .LASF15
     /tmp/ccfopqiX.s:6014   .debug_str:0000000000000173 .LASF16
     /tmp/ccfopqiX.s:6332   .debug_str:0000000000000aa8 .LASF17
     /tmp/ccfopqiX.s:6062   .debug_str:00000000000002eb .LASF18
     /tmp/ccfopqiX.s:6314   .debug_str:0000000000000a22 .LASF19
GAS LISTING /tmp/ccfopqiX.s 			page 45


     /tmp/ccfopqiX.s:6234   .debug_str:00000000000007af .LASF42
     /tmp/ccfopqiX.s:6228   .debug_str:0000000000000792 .LASF44
     /tmp/ccfopqiX.s:6248   .debug_str:000000000000082a .LASF20
     /tmp/ccfopqiX.s:6450   .debug_str:0000000000000e7e .LASF21
     /tmp/ccfopqiX.s:6274   .debug_str:00000000000008f5 .LASF22
     /tmp/ccfopqiX.s:6394   .debug_str:0000000000000d13 .LASF23
     /tmp/ccfopqiX.s:6174   .debug_str:00000000000005f6 .LASF24
     /tmp/ccfopqiX.s:6256   .debug_str:0000000000000849 .LASF28
     /tmp/ccfopqiX.s:6018   .debug_str:0000000000000192 .LASF25
     /tmp/ccfopqiX.s:5994   .debug_str:00000000000000e9 .LASF26
     /tmp/ccfopqiX.s:6152   .debug_str:0000000000000587 .LASF27
     /tmp/ccfopqiX.s:6054   .debug_str:00000000000002bc .LASF29
     /tmp/ccfopqiX.s:6268   .debug_str:00000000000008c7 .LASF30
     /tmp/ccfopqiX.s:6192   .debug_str:0000000000000687 .LASF31
     /tmp/ccfopqiX.s:6436   .debug_str:0000000000000e10 .LASF32
     /tmp/ccfopqiX.s:6374   .debug_str:0000000000000c69 .LASF34
     /tmp/ccfopqiX.s:6082   .debug_str:00000000000003a6 .LASF33
     /tmp/ccfopqiX.s:6222   .debug_str:0000000000000765 .LASF35
     /tmp/ccfopqiX.s:5998   .debug_str:00000000000000f9 .LASF36
     /tmp/ccfopqiX.s:6262   .debug_str:0000000000000872 .LASF37
     /tmp/ccfopqiX.s:6432   .debug_str:0000000000000df0 .LASF49
     /tmp/ccfopqiX.s:6186   .debug_str:0000000000000634 .LASF51
     /tmp/ccfopqiX.s:5992   .debug_str:00000000000000d0 .LASF58
     /tmp/ccfopqiX.s:6276   .debug_str:00000000000008fc .LASF38
     /tmp/ccfopqiX.s:6406   .debug_str:0000000000000d48 .LASF39
     /tmp/ccfopqiX.s:6114   .debug_str:0000000000000485 .LASF40
     /tmp/ccfopqiX.s:6130   .debug_str:00000000000004e1 .LASF86
     /tmp/ccfopqiX.s:6330   .debug_str:0000000000000a73 .LASF88
     /tmp/ccfopqiX.s:6176   .debug_str:0000000000000600 .LASF41
     /tmp/ccfopqiX.s:6422   .debug_str:0000000000000da9 .LASF43
     /tmp/ccfopqiX.s:6266   .debug_str:00000000000008bc .LASF45
     /tmp/ccfopqiX.s:6164   .debug_str:00000000000005cc .LASF46
     /tmp/ccfopqiX.s:5984   .debug_str:0000000000000099 .LASF47
     /tmp/ccfopqiX.s:6438   .debug_str:0000000000000e18 .LASF48
     /tmp/ccfopqiX.s:6104   .debug_str:000000000000043a .LASF50
     /tmp/ccfopqiX.s:6204   .debug_str:00000000000006d1 .LASF52
     /tmp/ccfopqiX.s:6304   .debug_str:00000000000009d7 .LASF53
     /tmp/ccfopqiX.s:6064   .debug_str:0000000000000301 .LASF54
     /tmp/ccfopqiX.s:6124   .debug_str:00000000000004c6 .LASF55
     /tmp/ccfopqiX.s:6408   .debug_str:0000000000000d54 .LASF56
     /tmp/ccfopqiX.s:6158   .debug_str:00000000000005aa .LASF60
     /tmp/ccfopqiX.s:6384   .debug_str:0000000000000cc4 .LASF62
     /tmp/ccfopqiX.s:6282   .debug_str:0000000000000935 .LASF57
     /tmp/ccfopqiX.s:6218   .debug_str:0000000000000745 .LASF59
     /tmp/ccfopqiX.s:6258   .debug_str:0000000000000858 .LASF61
     /tmp/ccfopqiX.s:6260   .debug_str:000000000000085f .LASF63
     /tmp/ccfopqiX.s:6202   .debug_str:00000000000006ca .LASF64
     /tmp/ccfopqiX.s:6146   .debug_str:000000000000055f .LASF65
     /tmp/ccfopqiX.s:6190   .debug_str:000000000000067f .LASF66
     /tmp/ccfopqiX.s:6370   .debug_str:0000000000000c4b .LASF67
     /tmp/ccfopqiX.s:6196   .debug_str:00000000000006a7 .LASF68
     /tmp/ccfopqiX.s:6216   .debug_str:0000000000000731 .LASF69
     /tmp/ccfopqiX.s:6326   .debug_str:0000000000000a65 .LASF70
     /tmp/ccfopqiX.s:6300   .debug_str:00000000000009bd .LASF71
     /tmp/ccfopqiX.s:6302   .debug_str:00000000000009d0 .LASF72
     /tmp/ccfopqiX.s:6022   .debug_str:00000000000001a3 .LASF73
     /tmp/ccfopqiX.s:6058   .debug_str:00000000000002d8 .LASF74
GAS LISTING /tmp/ccfopqiX.s 			page 46


     /tmp/ccfopqiX.s:6112   .debug_str:0000000000000473 .LASF75
     /tmp/ccfopqiX.s:6126   .debug_str:00000000000004d3 .LASF76
     /tmp/ccfopqiX.s:6044   .debug_str:0000000000000286 .LASF77
     /tmp/ccfopqiX.s:5980   .debug_str:000000000000007b .LASF78
     /tmp/ccfopqiX.s:6290   .debug_str:0000000000000961 .LASF79
     /tmp/ccfopqiX.s:6284   .debug_str:000000000000093e .LASF80
     /tmp/ccfopqiX.s:6466   .debug_str:0000000000000ef7 .LASF81
     /tmp/ccfopqiX.s:6424   .debug_str:0000000000000daf .LASF82
     /tmp/ccfopqiX.s:6442   .debug_str:0000000000000e28 .LASF83
     /tmp/ccfopqiX.s:6416   .debug_str:0000000000000d81 .LASF84
     /tmp/ccfopqiX.s:6184   .debug_str:000000000000061e .LASF85
     /tmp/ccfopqiX.s:6376   .debug_str:0000000000000c94 .LASF87
     /tmp/ccfopqiX.s:6036   .debug_str:000000000000023c .LASF89
     /tmp/ccfopqiX.s:6414   .debug_str:0000000000000d78 .LASF90
     /tmp/ccfopqiX.s:6346   .debug_str:0000000000000b00 .LASF158
     /tmp/ccfopqiX.s:6368   .debug_str:0000000000000c3e .LASF91
     /tmp/ccfopqiX.s:6430   .debug_str:0000000000000dce .LASF92
     /tmp/ccfopqiX.s:6224   .debug_str:0000000000000783 .LASF253
     /tmp/ccfopqiX.s:6454   .debug_str:0000000000000e9e .LASF93
     /tmp/ccfopqiX.s:6138   .debug_str:0000000000000513 .LASF94
     /tmp/ccfopqiX.s:6348   .debug_str:0000000000000b08 .LASF97
     /tmp/ccfopqiX.s:6340   .debug_str:0000000000000ade .LASF99
     /tmp/ccfopqiX.s:6002   .debug_str:0000000000000118 .LASF95
     /tmp/ccfopqiX.s:6386   .debug_str:0000000000000cd9 .LASF96
     /tmp/ccfopqiX.s:6288   .debug_str:0000000000000957 .LASF98
     /tmp/ccfopqiX.s:6338   .debug_str:0000000000000aca .LASF100
     /tmp/ccfopqiX.s:6352   .debug_str:0000000000000b20 .LASF101
     /tmp/ccfopqiX.s:6070   .debug_str:000000000000033e .LASF102
     /tmp/ccfopqiX.s:6180   .debug_str:000000000000060c .LASF103
     /tmp/ccfopqiX.s:6264   .debug_str:00000000000008a4 .LASF104
     /tmp/ccfopqiX.s:6048   .debug_str:00000000000002a1 .LASF105
     /tmp/ccfopqiX.s:6294   .debug_str:0000000000000989 .LASF106
     /tmp/ccfopqiX.s:6390   .debug_str:0000000000000d00 .LASF107
     /tmp/ccfopqiX.s:6078   .debug_str:0000000000000389 .LASF108
     /tmp/ccfopqiX.s:6470   .debug_str:0000000000000f1c .LASF109
     /tmp/ccfopqiX.s:6072   .debug_str:0000000000000354 .LASF110
     /tmp/ccfopqiX.s:6160   .debug_str:00000000000005b3 .LASF111
     /tmp/ccfopqiX.s:6280   .debug_str:0000000000000925 .LASF112
     /tmp/ccfopqiX.s:6050   .debug_str:00000000000002ae .LASF113
     /tmp/ccfopqiX.s:6024   .debug_str:00000000000001b6 .LASF114
     /tmp/ccfopqiX.s:6166   .debug_str:00000000000005d5 .LASF115
     /tmp/ccfopqiX.s:5986   .debug_str:00000000000000a2 .LASF116
     /tmp/ccfopqiX.s:6362   .debug_str:0000000000000b62 .LASF117
     /tmp/ccfopqiX.s:6010   .debug_str:0000000000000153 .LASF118
     /tmp/ccfopqiX.s:6382   .debug_str:0000000000000cbc .LASF119
     /tmp/ccfopqiX.s:6012   .debug_str:0000000000000164 .LASF120
     /tmp/ccfopqiX.s:6460   .debug_str:0000000000000ec5 .LASF121
     /tmp/ccfopqiX.s:6396   .debug_str:0000000000000d18 .LASF122
     /tmp/ccfopqiX.s:6372   .debug_str:0000000000000c5f .LASF123
     /tmp/ccfopqiX.s:6312   .debug_str:0000000000000a19 .LASF124
     /tmp/ccfopqiX.s:6252   .debug_str:0000000000000837 .LASF125
     /tmp/ccfopqiX.s:6106   .debug_str:0000000000000445 .LASF126
     /tmp/ccfopqiX.s:6364   .debug_str:0000000000000b6a .LASF127
     /tmp/ccfopqiX.s:6232   .debug_str:00000000000007a3 .LASF128
     /tmp/ccfopqiX.s:5968   .debug_str:000000000000001b .LASF129
     /tmp/ccfopqiX.s:5970   .debug_str:0000000000000028 .LASF130
     /tmp/ccfopqiX.s:6452   .debug_str:0000000000000e88 .LASF184
GAS LISTING /tmp/ccfopqiX.s 			page 47


     /tmp/ccfopqiX.s:6038   .debug_str:0000000000000254 .LASF131
     /tmp/ccfopqiX.s:5974   .debug_str:000000000000003e .LASF132
     /tmp/ccfopqiX.s:6468   .debug_str:0000000000000f0f .LASF133
     /tmp/ccfopqiX.s:6094   .debug_str:00000000000003ee .LASF134
     /tmp/ccfopqiX.s:6120   .debug_str:00000000000004a4 .LASF146
     /tmp/ccfopqiX.s:6214   .debug_str:0000000000000724 .LASF163
     /tmp/ccfopqiX.s:6090   .debug_str:00000000000003d0 .LASF135
     /tmp/ccfopqiX.s:6316   .debug_str:0000000000000a38 .LASF136
     /tmp/ccfopqiX.s:6354   .debug_str:0000000000000b2b .LASF137
     /tmp/ccfopqiX.s:6212   .debug_str:0000000000000711 .LASF138
     /tmp/ccfopqiX.s:6052   .debug_str:00000000000002b7 .LASF139
     /tmp/ccfopqiX.s:6292   .debug_str:0000000000000979 .LASF140
     /tmp/ccfopqiX.s:6344   .debug_str:0000000000000af9 .LASF141
     /tmp/ccfopqiX.s:6000   .debug_str:0000000000000106 .LASF142
     /tmp/ccfopqiX.s:6046   .debug_str:0000000000000298 .LASF143
     /tmp/ccfopqiX.s:6200   .debug_str:00000000000006b4 .LASF144
     /tmp/ccfopqiX.s:6060   .debug_str:00000000000002de .LASF145
     /tmp/ccfopqiX.s:5976   .debug_str:0000000000000066 .LASF147
     /tmp/ccfopqiX.s:6116   .debug_str:0000000000000491 .LASF148
     /tmp/ccfopqiX.s:6356   .debug_str:0000000000000b33 .LASF149
     /tmp/ccfopqiX.s:5972   .debug_str:0000000000000036 .LASF150
     /tmp/ccfopqiX.s:5982   .debug_str:0000000000000086 .LASF151
     /tmp/ccfopqiX.s:6426   .debug_str:0000000000000db9 .LASF152
     /tmp/ccfopqiX.s:6388   .debug_str:0000000000000cf0 .LASF153
     /tmp/ccfopqiX.s:6042   .debug_str:000000000000027c .LASF154
     /tmp/ccfopqiX.s:6148   .debug_str:0000000000000572 .LASF155
     /tmp/ccfopqiX.s:6404   .debug_str:0000000000000d40 .LASF156
     /tmp/ccfopqiX.s:6206   .debug_str:00000000000006e9 .LASF157
     /tmp/ccfopqiX.s:6412   .debug_str:0000000000000d73 .LASF159
     /tmp/ccfopqiX.s:6378   .debug_str:0000000000000c9f .LASF160
     /tmp/ccfopqiX.s:6026   .debug_str:00000000000001c9 .LASF161
     /tmp/ccfopqiX.s:6040   .debug_str:0000000000000262 .LASF162
     /tmp/ccfopqiX.s:6032   .debug_str:000000000000020c .LASF164
     /tmp/ccfopqiX.s:6086   .debug_str:00000000000003ba .LASF165
     /tmp/ccfopqiX.s:6150   .debug_str:0000000000000582 .LASF166
     /tmp/ccfopqiX.s:5988   .debug_str:00000000000000b4 .LASF167
     /tmp/ccfopqiX.s:6092   .debug_str:00000000000003d6 .LASF168
     /tmp/ccfopqiX.s:6380   .debug_str:0000000000000ca4 .LASF254
     /tmp/ccfopqiX.s:6350   .debug_str:0000000000000b13 .LASF169
     /tmp/ccfopqiX.s:6298   .debug_str:00000000000009a8 .LASF170
     /tmp/ccfopqiX.s:6128   .debug_str:00000000000004d9 .LASF171
     /tmp/ccfopqiX.s:6068   .debug_str:0000000000000322 .LASF172
     /tmp/ccfopqiX.s:6418   .debug_str:0000000000000d8b .LASF173
     /tmp/ccfopqiX.s:6188   .debug_str:0000000000000660 .LASF174
     /tmp/ccfopqiX.s:6004   .debug_str:0000000000000124 .LASF175
     /tmp/ccfopqiX.s:6008   .debug_str:0000000000000137 .LASF176
     /tmp/ccfopqiX.s:6034   .debug_str:0000000000000227 .LASF177
     /tmp/ccfopqiX.s:6420   .debug_str:0000000000000d93 .LASF178
     /tmp/ccfopqiX.s:6142   .debug_str:0000000000000542 .LASF179
     /tmp/ccfopqiX.s:6324   .debug_str:0000000000000a60 .LASF180
     /tmp/ccfopqiX.s:6198   .debug_str:00000000000006af .LASF181
     /tmp/ccfopqiX.s:6458   .debug_str:0000000000000eb8 .LASF182
     /tmp/ccfopqiX.s:6448   .debug_str:0000000000000e6c .LASF183
     /tmp/ccfopqiX.s:6110   .debug_str:000000000000045b .LASF185
     /tmp/ccfopqiX.s:6456   .debug_str:0000000000000ea4 .LASF255
     /tmp/ccfopqiX.s:6100   .debug_str:000000000000041d .LASF186
     /tmp/ccfopqiX.s:6272   .debug_str:00000000000008d4 .LASF187
GAS LISTING /tmp/ccfopqiX.s 			page 48


     /tmp/ccfopqiX.s:5996   .debug_str:00000000000000ee .LASF188
     /tmp/ccfopqiX.s:6464   .debug_str:0000000000000ed6 .LASF189
     /tmp/ccfopqiX.s:6168   .debug_str:00000000000005dd .LASF190
     /tmp/ccfopqiX.s:6028   .debug_str:00000000000001e7 .LASF191
     /tmp/ccfopqiX.s:6170   .debug_str:00000000000005e2 .LASF192
     /tmp/ccfopqiX.s:6308   .debug_str:0000000000000a03 .LASF193
     /tmp/ccfopqiX.s:6210   .debug_str:00000000000006fc .LASF194
     /tmp/ccfopqiX.s:6242   .debug_str:0000000000000809 .LASF195
     /tmp/ccfopqiX.s:6476   .debug_str:0000000000000f48 .LASF196
     /tmp/ccfopqiX.s:6360   .debug_str:0000000000000b51 .LASF197
     /tmp/ccfopqiX.s:6336   .debug_str:0000000000000abd .LASF198
     /tmp/ccfopqiX.s:6140   .debug_str:0000000000000525 .LASF199
     /tmp/ccfopqiX.s:6400   .debug_str:0000000000000d29 .LASF200
     /tmp/ccfopqiX.s:6444   .debug_str:0000000000000e3e .LASF201
     /tmp/ccfopqiX.s:6132   .debug_str:00000000000004eb .LASF202
     /tmp/ccfopqiX.s:6236   .debug_str:00000000000007bf .LASF203
     /tmp/ccfopqiX.s:6102   .debug_str:000000000000042d .LASF204
     /tmp/ccfopqiX.s:6278   .debug_str:0000000000000908 .LASF205
     /tmp/ccfopqiX.s:6322   .debug_str:0000000000000a4c .LASF206
     /tmp/ccfopqiX.s:6096   .debug_str:00000000000003fa .LASF207
     /tmp/ccfopqiX.s:6084   .debug_str:00000000000003ac .LASF208
     /tmp/ccfopqiX.s:6074   .debug_str:000000000000036d .LASF209
     /tmp/ccfopqiX.s:5964   .debug_str:0000000000000000 .LASF256
     /tmp/ccfopqiX.s:6398   .debug_str:0000000000000d1d .LASF210
     /tmp/ccfopqiX.s:6056   .debug_str:00000000000002cb .LASF211
     /tmp/ccfopqiX.s:6226   .debug_str:0000000000000788 .LASF212
     /tmp/ccfopqiX.s:6254   .debug_str:000000000000083f .LASF213
     /tmp/ccfopqiX.s:6156   .debug_str:000000000000059f .LASF214
     /tmp/ccfopqiX.s:6220   .debug_str:000000000000075a .LASF215
     /tmp/ccfopqiX.s:6310   .debug_str:0000000000000a09 .LASF216
     /tmp/ccfopqiX.s:6342   .debug_str:0000000000000af4 .LASF217
     /tmp/ccfopqiX.s:6474   .debug_str:0000000000000f37 .LASF218
     /tmp/ccfopqiX.s:30     .text:0000000000000000 .LFB51
     /tmp/ccfopqiX.s:1200   .text:0000000000000744 .LFE51
     /tmp/ccfopqiX.s:6318   .debug_str:0000000000000a3d .LASF219
     /tmp/ccfopqiX.s:5014   .debug_loc:0000000000000000 .LLST0
     /tmp/ccfopqiX.s:6402   .debug_str:0000000000000d3b .LASF220
     /tmp/ccfopqiX.s:5045   .debug_loc:0000000000000087 .LLST1
     /tmp/ccfopqiX.s:6428   .debug_str:0000000000000dc6 .LASF221
     /tmp/ccfopqiX.s:5076   .debug_loc:000000000000010e .LLST2
     /tmp/ccfopqiX.s:5098   .debug_loc:000000000000016e .LLST3
     /tmp/ccfopqiX.s:5120   .debug_loc:00000000000001ce .LLST4
     /tmp/ccfopqiX.s:5142   .debug_loc:0000000000000230 .LLST5
     /tmp/ccfopqiX.s:5164   .debug_loc:0000000000000292 .LLST6
     /tmp/ccfopqiX.s:5186   .debug_loc:00000000000002f4 .LLST7
     /tmp/ccfopqiX.s:5208   .debug_loc:0000000000000356 .LLST8
     /tmp/ccfopqiX.s:5230   .debug_loc:00000000000003b8 .LLST9
     /tmp/ccfopqiX.s:5252   .debug_loc:000000000000041a .LLST10
     /tmp/ccfopqiX.s:163    .text:0000000000000080 .LBB3
     /tmp/ccfopqiX.s:999    .text:0000000000000580 .LBE3
     /tmp/ccfopqiX.s:6208   .debug_str:00000000000006f5 .LASF222
     /tmp/ccfopqiX.s:5454   .debug_loc:000000000000079c .LLST11
     /tmp/ccfopqiX.s:289    .text:000000000000012c .LBB5
     /tmp/ccfopqiX.s:969    .text:0000000000000564 .LBE5
     /tmp/ccfopqiX.s:5520   .debug_loc:00000000000008c0 .LLST12
     /tmp/ccfopqiX.s:5541   .debug_loc:0000000000000920 .LLST13
     /tmp/ccfopqiX.s:6440   .debug_str:0000000000000e21 .LASF223
GAS LISTING /tmp/ccfopqiX.s 			page 49


     /tmp/ccfopqiX.s:5553   .debug_loc:0000000000000958 .LLST14
     /tmp/ccfopqiX.s:6230   .debug_str:000000000000079a .LASF224
     /tmp/ccfopqiX.s:5565   .debug_loc:0000000000000990 .LLST15
     /tmp/ccfopqiX.s:5577   .debug_loc:00000000000009c8 .LLST16
     /tmp/ccfopqiX.s:5589   .debug_loc:0000000000000a00 .LLST17
     /tmp/ccfopqiX.s:6194   .debug_str:000000000000069a .LASF225
     /tmp/ccfopqiX.s:5601   .debug_loc:0000000000000a38 .LLST18
     /tmp/ccfopqiX.s:6108   .debug_str:0000000000000450 .LASF226
     /tmp/ccfopqiX.s:5613   .debug_loc:0000000000000a70 .LLST19
     /tmp/ccfopqiX.s:6320   .debug_str:0000000000000a44 .LASF227
     /tmp/ccfopqiX.s:5625   .debug_loc:0000000000000aa8 .LLST20
     /tmp/ccfopqiX.s:6020   .debug_str:0000000000000197 .LASF228
     /tmp/ccfopqiX.s:5637   .debug_loc:0000000000000ae0 .LLST21
     /tmp/ccfopqiX.s:6462   .debug_str:0000000000000ecb .LASF229
     /tmp/ccfopqiX.s:5649   .debug_loc:0000000000000b18 .LLST22
     /tmp/ccfopqiX.s:6472   .debug_str:0000000000000f2a .LASF230
     /tmp/ccfopqiX.s:5661   .debug_loc:0000000000000b50 .LLST23
     /tmp/ccfopqiX.s:6358   .debug_str:0000000000000b44 .LASF231
     /tmp/ccfopqiX.s:5673   .debug_loc:0000000000000b88 .LLST24
     /tmp/ccfopqiX.s:5690   .debug_loc:0000000000000bd5 .LLST25
     /tmp/ccfopqiX.s:6434   .debug_str:0000000000000e04 .LASF232
     /tmp/ccfopqiX.s:5702   .debug_loc:0000000000000c0d .LLST26
     /tmp/ccfopqiX.s:5714   .debug_loc:0000000000000c45 .LLST27
     /tmp/ccfopqiX.s:6006   .debug_str:000000000000012d .LASF233
     /tmp/ccfopqiX.s:5726   .debug_loc:0000000000000c7d .LLST28
     /tmp/ccfopqiX.s:6392   .debug_str:0000000000000d0b .LASF234
     /tmp/ccfopqiX.s:5738   .debug_loc:0000000000000cb5 .LLST29
     /tmp/ccfopqiX.s:6122   .debug_str:00000000000004b4 .LASF235
     /tmp/ccfopqiX.s:5750   .debug_loc:0000000000000ced .LLST30
     /tmp/ccfopqiX.s:5990   .debug_str:00000000000000c9 .LASF236
     /tmp/ccfopqiX.s:5762   .debug_loc:0000000000000d25 .LLST31
     /tmp/ccfopqiX.s:6134   .debug_str:00000000000004f9 .LASF237
     /tmp/ccfopqiX.s:5779   .debug_loc:0000000000000d70 .LLST32
     /tmp/ccfopqiX.s:6328   .debug_str:0000000000000a6c .LASF238
     /tmp/ccfopqiX.s:5801   .debug_loc:0000000000000dd2 .LLST33
     /tmp/ccfopqiX.s:5841   .debug_loc:0000000000000e7f .LLST34
     /tmp/ccfopqiX.s:5854   .debug_loc:0000000000000eb9 .LLST35
     /tmp/ccfopqiX.s:309    .text:0000000000000150 .LVL30
     /tmp/ccfopqiX.s:332    .text:000000000000016c .LVL33
     /tmp/ccfopqiX.s:378    .text:00000000000001a8 .LVL42
     /tmp/ccfopqiX.s:389    .text:00000000000001c8 .LVL43
     /tmp/ccfopqiX.s:432    .text:0000000000000204 .LVL45
     /tmp/ccfopqiX.s:436    .text:000000000000020c .LVL46
     /tmp/ccfopqiX.s:440    .text:0000000000000214 .LVL47
     /tmp/ccfopqiX.s:449    .text:0000000000000220 .LVL49
     /tmp/ccfopqiX.s:465    .text:0000000000000238 .LVL52
     /tmp/ccfopqiX.s:469    .text:0000000000000240 .LVL53
     /tmp/ccfopqiX.s:494    .text:0000000000000264 .LVL59
     /tmp/ccfopqiX.s:544    .text:00000000000002a4 .LVL62
     /tmp/ccfopqiX.s:567    .text:00000000000002c0 .LVL65
     /tmp/ccfopqiX.s:590    .text:00000000000002dc .LVL68
     /tmp/ccfopqiX.s:647    .text:0000000000000328 .LVL72
     /tmp/ccfopqiX.s:651    .text:0000000000000330 .LVL73
     /tmp/ccfopqiX.s:660    .text:000000000000033c .LVL75
     /tmp/ccfopqiX.s:685    .text:000000000000035c .LVL79
     /tmp/ccfopqiX.s:724    .text:0000000000000394 .LVL88
     /tmp/ccfopqiX.s:774    .text:00000000000003d4 .LVL91
GAS LISTING /tmp/ccfopqiX.s 			page 50


     /tmp/ccfopqiX.s:800    .text:0000000000000400 .LVL94
     /tmp/ccfopqiX.s:915    .text:00000000000004f4 .LVL110
     /tmp/ccfopqiX.s:925    .text:0000000000000508 .LVL112
     /tmp/ccfopqiX.s:930    .text:0000000000000514 .LVL113
     /tmp/ccfopqiX.s:935    .text:0000000000000524 .LVL114
     /tmp/ccfopqiX.s:940    .text:0000000000000530 .LVL115
     /tmp/ccfopqiX.s:945    .text:0000000000000540 .LVL116
     /tmp/ccfopqiX.s:950    .text:000000000000054c .LVL117
     /tmp/ccfopqiX.s:1016   .text:000000000000059c .LBB8
     /tmp/ccfopqiX.s:1080   .text:0000000000000638 .LBE8
     /tmp/ccfopqiX.s:5880   .debug_loc:0000000000000f2b .LLST36
     /tmp/ccfopqiX.s:1020   .text:00000000000005a4 .LVL127
     /tmp/ccfopqiX.s:1046   .text:00000000000005ec .LVL130
     /tmp/ccfopqiX.s:1054   .text:0000000000000600 .LVL131
     /tmp/ccfopqiX.s:1063   .text:0000000000000614 .LVL134
     /tmp/ccfopqiX.s:1069   .text:0000000000000620 .LVL135
     /tmp/ccfopqiX.s:1074   .text:000000000000062c .LVL136
     /tmp/ccfopqiX.s:1079   .text:0000000000000638 .LVL137
     /tmp/ccfopqiX.s:1100   .text:0000000000000658 .LVL139
     /tmp/ccfopqiX.s:1114   .text:000000000000068c .LVL140
     /tmp/ccfopqiX.s:1127   .text:00000000000006b4 .LVL141
     /tmp/ccfopqiX.s:1137   .text:00000000000006cc .LVL142
     /tmp/ccfopqiX.s:1142   .text:00000000000006d8 .LVL143
     /tmp/ccfopqiX.s:1147   .text:00000000000006e4 .LVL144
     /tmp/ccfopqiX.s:1162   .text:00000000000006f8 .LVL146
     /tmp/ccfopqiX.s:1167   .text:0000000000000708 .LVL147
     /tmp/ccfopqiX.s:1172   .text:0000000000000714 .LVL148
     /tmp/ccfopqiX.s:1177   .text:0000000000000724 .LVL149
     /tmp/ccfopqiX.s:1182   .text:0000000000000730 .LVL150
     /tmp/ccfopqiX.s:1333   .text._ZN3TCB12getTimeSliceEv:0000000000000000 .LFB36
     /tmp/ccfopqiX.s:1354   .text._ZN3TCB12getTimeSliceEv:000000000000001c .LFE36
     /tmp/ccfopqiX.s:6080   .debug_str:00000000000003a1 .LASF239
     /tmp/ccfopqiX.s:5909   .debug_loc:0000000000000fb1 .LLST37
     /tmp/ccfopqiX.s:1304   .text._ZN3TCB11setFinishedEb:0000000000000000 .LFB33
     /tmp/ccfopqiX.s:1326   .text._ZN3TCB11setFinishedEb:000000000000001c .LFE33
     /tmp/ccfopqiX.s:6178   .debug_str:0000000000000605 .LASF240
     /tmp/ccfopqiX.s:1272   .text._ZN5Riscv9w_sstatusEm:0000000000000000 .LFB16
     /tmp/ccfopqiX.s:1297   .text._ZN5Riscv9w_sstatusEm:000000000000001c .LFE16
     /tmp/ccfopqiX.s:1240   .text._ZN5Riscv6mc_sipEm:0000000000000000 .LFB10
     /tmp/ccfopqiX.s:1265   .text._ZN5Riscv6mc_sipEm:000000000000001c .LFE10
     /tmp/ccfopqiX.s:6410   .debug_str:0000000000000d6e .LASF241
     /tmp/ccfopqiX.s:1207   .text._ZN5Riscv6w_sepcEm:0000000000000000 .LFB6
     /tmp/ccfopqiX.s:1233   .text._ZN5Riscv6w_sepcEm:000000000000001c .LFE6
     /tmp/ccfopqiX.s:6334   .debug_str:0000000000000ab4 .LASF242
     /tmp/ccfopqiX.s:6182   .debug_str:0000000000000619 .LASF244
     /tmp/ccfopqiX.s:6162   .debug_str:00000000000005b9 .LASF243
     /tmp/ccfopqiX.s:6446   .debug_str:0000000000000e60 .LASF245
     /tmp/ccfopqiX.s:5966   .debug_str:0000000000000009 .LASF246
     /tmp/ccfopqiX.s:6246   .debug_str:000000000000081d .LASF247
     /tmp/ccfopqiX.s:6172   .debug_str:00000000000005eb .LASF248
     /tmp/ccfopqiX.s:6244   .debug_str:000000000000080f .LASF249
     /tmp/ccfopqiX.s:51     .text:0000000000000018 .LVL0
     /tmp/ccfopqiX.s:58     .text:000000000000001c .LVL1
     /tmp/ccfopqiX.s:1004   .text:0000000000000588 .LVL125
     /tmp/ccfopqiX.s:1011   .text:000000000000058c .LVL126
     /tmp/ccfopqiX.s:1194   .text:000000000000073c .LVL151
     /tmp/ccfopqiX.s:1197   .text:0000000000000740 .LVL152
GAS LISTING /tmp/ccfopqiX.s 			page 51


     /tmp/ccfopqiX.s:61     .text:0000000000000020 .LVL2
     /tmp/ccfopqiX.s:68     .text:0000000000000024 .LVL3
     /tmp/ccfopqiX.s:978    .text:000000000000056c .LVL122
     /tmp/ccfopqiX.s:981    .text:0000000000000570 .LVL123
     /tmp/ccfopqiX.s:993    .text:000000000000057c .LVL124
     /tmp/ccfopqiX.s:71     .text:0000000000000028 .LVL4
     /tmp/ccfopqiX.s:79     .text:000000000000002c .LVL5
     /tmp/ccfopqiX.s:82     .text:0000000000000030 .LVL6
     /tmp/ccfopqiX.s:89     .text:0000000000000034 .LVL7
     /tmp/ccfopqiX.s:92     .text:0000000000000038 .LVL8
     /tmp/ccfopqiX.s:99     .text:000000000000003c .LVL9
     /tmp/ccfopqiX.s:102    .text:0000000000000040 .LVL10
     /tmp/ccfopqiX.s:109    .text:0000000000000044 .LVL11
     /tmp/ccfopqiX.s:112    .text:0000000000000048 .LVL12
     /tmp/ccfopqiX.s:119    .text:000000000000004c .LVL13
     /tmp/ccfopqiX.s:122    .text:0000000000000050 .LVL14
     /tmp/ccfopqiX.s:129    .text:0000000000000054 .LVL15
     /tmp/ccfopqiX.s:132    .text:0000000000000058 .LVL16
     /tmp/ccfopqiX.s:139    .text:000000000000005c .LVL17
     /tmp/ccfopqiX.s:142    .text:0000000000000060 .LVL18
     /tmp/ccfopqiX.s:149    .text:0000000000000064 .LVL19
     /tmp/ccfopqiX.s:152    .text:0000000000000068 .LVL20
     /tmp/ccfopqiX.s:319    .text:0000000000000158 .LVL31
     /tmp/ccfopqiX.s:342    .text:0000000000000174 .LVL34
     /tmp/ccfopqiX.s:422    .text:00000000000001e8 .LVL44
     /tmp/ccfopqiX.s:443    .text:0000000000000218 .LVL48
     /tmp/ccfopqiX.s:452    .text:0000000000000224 .LVL50
     /tmp/ccfopqiX.s:472    .text:0000000000000244 .LVL54
     /tmp/ccfopqiX.s:531    .text:0000000000000290 .LVL60
     /tmp/ccfopqiX.s:554    .text:00000000000002ac .LVL63
     /tmp/ccfopqiX.s:577    .text:00000000000002c8 .LVL66
     /tmp/ccfopqiX.s:600    .text:00000000000002e4 .LVL69
     /tmp/ccfopqiX.s:654    .text:0000000000000334 .LVL74
     /tmp/ccfopqiX.s:670    .text:0000000000000344 .LVL76
     /tmp/ccfopqiX.s:688    .text:0000000000000360 .LVL80
     /tmp/ccfopqiX.s:761    .text:00000000000003c0 .LVL89
     /tmp/ccfopqiX.s:777    .text:00000000000003d8 .LVL92
     /tmp/ccfopqiX.s:785    .text:00000000000003e0 .LVL93
     /tmp/ccfopqiX.s:809    .text:0000000000000410 .LVL96
     /tmp/ccfopqiX.s:893    .text:00000000000004b8 .LVL107
     /tmp/ccfopqiX.s:918    .text:00000000000004f8 .LVL111
     /tmp/ccfopqiX.s:1086   .text:000000000000063c .LVL138
     /tmp/ccfopqiX.s:1153   .text:00000000000006e8 .LVL145
     /tmp/ccfopqiX.s:168    .text:0000000000000088 .LVL21
     /tmp/ccfopqiX.s:173    .text:0000000000000090 .LVL22
     /tmp/ccfopqiX.s:200    .text:00000000000000f8 .LVL23
     /tmp/ccfopqiX.s:202    .text:0000000000000100 .LVL24
     /tmp/ccfopqiX.s:281    .text:000000000000011c .LVL25
     /tmp/ccfopqiX.s:284    .text:0000000000000120 .LVL26
     /tmp/ccfopqiX.s:835    .text:0000000000000428 .LVL100
     /tmp/ccfopqiX.s:296    .text:0000000000000134 .LVL27
     /tmp/ccfopqiX.s:301    .text:000000000000013c .LVL28
     /tmp/ccfopqiX.s:303    .text:0000000000000140 .LVL29
     /tmp/ccfopqiX.s:327    .text:0000000000000160 .LVL32
     /tmp/ccfopqiX.s:350    .text:000000000000017c .LVL35
     /tmp/ccfopqiX.s:355    .text:0000000000000180 .LVL36
     /tmp/ccfopqiX.s:357    .text:0000000000000184 .LVL37
GAS LISTING /tmp/ccfopqiX.s 			page 52


     /tmp/ccfopqiX.s:362    .text:0000000000000188 .LVL38
     /tmp/ccfopqiX.s:364    .text:000000000000018c .LVL39
     /tmp/ccfopqiX.s:369    .text:0000000000000190 .LVL40
     /tmp/ccfopqiX.s:371    .text:0000000000000194 .LVL41
     /tmp/ccfopqiX.s:460    .text:000000000000022c .LVL51
     /tmp/ccfopqiX.s:480    .text:000000000000024c .LVL55
     /tmp/ccfopqiX.s:485    .text:0000000000000250 .LVL56
     /tmp/ccfopqiX.s:487    .text:0000000000000254 .LVL57
     /tmp/ccfopqiX.s:491    .text:0000000000000258 .LVL58
     /tmp/ccfopqiX.s:539    .text:0000000000000298 .LVL61
     /tmp/ccfopqiX.s:562    .text:00000000000002b4 .LVL64
     /tmp/ccfopqiX.s:585    .text:00000000000002d0 .LVL67
     /tmp/ccfopqiX.s:608    .text:00000000000002ec .LVL70
     /tmp/ccfopqiX.s:638    .text:0000000000000308 .LVL71
     /tmp/ccfopqiX.s:953    .text:0000000000000550 .LVL118
     /tmp/ccfopqiX.s:958    .text:0000000000000558 .LVL119
     /tmp/ccfopqiX.s:678    .text:000000000000034c .LVL77
     /tmp/ccfopqiX.s:682    .text:0000000000000350 .LVL78
     /tmp/ccfopqiX.s:696    .text:0000000000000368 .LVL81
     /tmp/ccfopqiX.s:701    .text:000000000000036c .LVL82
     /tmp/ccfopqiX.s:703    .text:0000000000000370 .LVL83
     /tmp/ccfopqiX.s:708    .text:0000000000000374 .LVL84
     /tmp/ccfopqiX.s:710    .text:0000000000000378 .LVL85
     /tmp/ccfopqiX.s:715    .text:000000000000037c .LVL86
     /tmp/ccfopqiX.s:717    .text:0000000000000380 .LVL87
     /tmp/ccfopqiX.s:769    .text:00000000000003c8 .LVL90
     /tmp/ccfopqiX.s:806    .text:000000000000040c .LVL95
     /tmp/ccfopqiX.s:963    .text:0000000000000560 .LVL120
     /tmp/ccfopqiX.s:817    .text:0000000000000418 .LVL97
     /tmp/ccfopqiX.s:967    .text:0000000000000564 .LVL121
     /tmp/ccfopqiX.s:848    .text:0000000000000444 .LVL101
     /tmp/ccfopqiX.s:853    .text:0000000000000454 .LVL102
     /tmp/ccfopqiX.s:886    .text:00000000000004a8 .LVL105
     /tmp/ccfopqiX.s:889    .text:00000000000004ac .LVL106
     /tmp/ccfopqiX.s:900    .text:00000000000004c4 .LVL108
     /tmp/ccfopqiX.s:903    .text:00000000000004cc .LVL109
     /tmp/ccfopqiX.s:825    .text:000000000000041c .LVL98
     /tmp/ccfopqiX.s:831    .text:0000000000000424 .LVL99
     /tmp/ccfopqiX.s:866    .text:0000000000000478 .LVL103
     /tmp/ccfopqiX.s:870    .text:0000000000000480 .LVL104
     /tmp/ccfopqiX.s:1024   .text:00000000000005ac .LVL128
     /tmp/ccfopqiX.s:1044   .text:00000000000005e4 .LVL129
     /tmp/ccfopqiX.s:1056   .text:0000000000000604 .LVL132
     /tmp/ccfopqiX.s:1061   .text:000000000000060c .LVL133
     /tmp/ccfopqiX.s:1336   .text._ZN3TCB12getTimeSliceEv:0000000000000000 .LVL157
     /tmp/ccfopqiX.s:1346   .text._ZN3TCB12getTimeSliceEv:0000000000000010 .LVL158
     /tmp/ccfopqiX.s:1374   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccfopqiX.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccfopqiX.s:1363   .text:0000000000000744 .Letext0

UNDEFINED SYMBOLS
_ZN15MemoryAllocator7kmallocEmNS_7PurposeE
_ZN15MemoryAllocator5kfreeEPv
_ZN3TCB12createThreadEPFvPvES0_Pm
_ZN3TCB5startEPS_
_ZN3TCB7runningE
_ZN3TCB13releaseJoinedEv
GAS LISTING /tmp/ccfopqiX.s 			page 53


_ZN3TCB5yieldEv
_ZN3TCB10threadJoinEPS_
_ZN4KSem7initSemEj
_ZN4KSem8closeSemEPS_
_ZN4KSem4waitEv
_ZN4KSem6signalEv
_ZN9Scheduler10putToSleepEP3TCBm
_ZN8KConsole5kgetcEv
_ZN8KConsole5kputcEc
_ZN9Scheduler3putEP3TCB
_Z4putcc
_Z11printStringPKc
_Z12printIntegerm
plic_claim
_ZN8KConsole2srE
_ZN8KConsole2drE
_ZN8KConsole12placeInInputEc
plic_complete
_ZN9Scheduler4wakeEv
_ZN3TCB16runningTimeSliceE
