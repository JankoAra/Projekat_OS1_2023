GAS LISTING /tmp/cclBh4wk.s 			page 1


   1              		.file	"interruptRoutine.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.section	.text._ZN4KSemD2Ev,"axG",@progbits,_ZN4KSemD5Ev,comdat
   7              		.align	2
   8              		.weak	_ZN4KSemD2Ev
  10              	_ZN4KSemD2Ev:
  11              	.LFB56:
  12              		.file 1 "src/../h/KSem.hpp"
   1:src/../h/KSem.hpp **** //
   2:src/../h/KSem.hpp **** // Created by os on 6/4/23.
   3:src/../h/KSem.hpp **** //
   4:src/../h/KSem.hpp **** 
   5:src/../h/KSem.hpp **** #ifndef PROJEKAT2023_KSEM_HPP
   6:src/../h/KSem.hpp **** #define PROJEKAT2023_KSEM_HPP
   7:src/../h/KSem.hpp **** 
   8:src/../h/KSem.hpp **** #include "../h/ThreadQueue.hpp"
   9:src/../h/KSem.hpp **** 
  10:src/../h/KSem.hpp **** //klasa napravljena po uzoru na semafor u skolskom jezgru
  11:src/../h/KSem.hpp **** class KSem {
  13              		.loc 1 11 7
  14              		.cfi_startproc
  15              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
  16              		.cfi_lsda 0x1b,.LLSDA56
  17              	.LVL0:
  18 0000 130101FE 		addi	sp,sp,-32
  19              		.cfi_def_cfa_offset 32
  20 0004 233C1100 		sd	ra,24(sp)
  21 0008 23388100 		sd	s0,16(sp)
  22 000c 23349100 		sd	s1,8(sp)
  23              		.cfi_offset 1, -8
  24              		.cfi_offset 8, -16
  25              		.cfi_offset 9, -24
  26 0010 13040102 		addi	s0,sp,32
  27              		.cfi_def_cfa 8, 0
  28 0014 93040500 		mv	s1,a0
  29              	.LVL1:
  30              	.L3:
  31              	.LBB19:
  32              	.LBB20:
  33              		.file 2 "src/../h/../h/ThreadQueue.hpp"
   1:src/../h/../h/ThreadQueue.hpp **** //
   2:src/../h/../h/ThreadQueue.hpp **** // Created by os on 6/4/23.
   3:src/../h/../h/ThreadQueue.hpp **** //
   4:src/../h/../h/ThreadQueue.hpp **** 
   5:src/../h/../h/ThreadQueue.hpp **** #ifndef PROJEKAT2023_THREADQUEUE_HPP
   6:src/../h/../h/ThreadQueue.hpp **** #define PROJEKAT2023_THREADQUEUE_HPP
   7:src/../h/../h/ThreadQueue.hpp **** 
   8:src/../h/../h/ThreadQueue.hpp **** #include "../h/syscall_c.hpp"
   9:src/../h/../h/ThreadQueue.hpp **** 
  10:src/../h/../h/ThreadQueue.hpp **** class TCB;
  11:src/../h/../h/ThreadQueue.hpp **** 
  12:src/../h/../h/ThreadQueue.hpp **** class ThreadQueue {
  13:src/../h/../h/ThreadQueue.hpp **** private:
  14:src/../h/../h/ThreadQueue.hpp ****     struct Node {
GAS LISTING /tmp/cclBh4wk.s 			page 2


  15:src/../h/../h/ThreadQueue.hpp ****         TCB* data;
  16:src/../h/../h/ThreadQueue.hpp ****         Node* next;
  17:src/../h/../h/ThreadQueue.hpp **** 
  18:src/../h/../h/ThreadQueue.hpp ****         Node(TCB* d) : data(d), next(nullptr) {}
  19:src/../h/../h/ThreadQueue.hpp **** 
  20:src/../h/../h/ThreadQueue.hpp ****         static void* operator new(size_t size) {
  21:src/../h/../h/ThreadQueue.hpp ****             return mem_alloc(size);
  22:src/../h/../h/ThreadQueue.hpp ****         }
  23:src/../h/../h/ThreadQueue.hpp **** 
  24:src/../h/../h/ThreadQueue.hpp ****         static void operator delete(void* ptr) {
  25:src/../h/../h/ThreadQueue.hpp ****             mem_free(ptr);
  26:src/../h/../h/ThreadQueue.hpp ****         }
  27:src/../h/../h/ThreadQueue.hpp ****     };
  28:src/../h/../h/ThreadQueue.hpp **** 
  29:src/../h/../h/ThreadQueue.hpp ****     Node* front;
  30:src/../h/../h/ThreadQueue.hpp ****     Node* back;
  31:src/../h/../h/ThreadQueue.hpp **** 
  32:src/../h/../h/ThreadQueue.hpp **** public:
  33:src/../h/../h/ThreadQueue.hpp ****     ThreadQueue() : front(nullptr), back(nullptr) {}
  34:src/../h/../h/ThreadQueue.hpp **** 
  35:src/../h/../h/ThreadQueue.hpp ****     ThreadQueue(const ThreadQueue &) = delete;
  36:src/../h/../h/ThreadQueue.hpp **** 
  37:src/../h/../h/ThreadQueue.hpp ****     ThreadQueue &operator=(const ThreadQueue &) = delete;
  38:src/../h/../h/ThreadQueue.hpp **** 
  39:src/../h/../h/ThreadQueue.hpp ****     ~ThreadQueue() {
  40:src/../h/../h/ThreadQueue.hpp ****         while (!isEmpty()) {
  34              		.loc 2 40 9
  35              		.loc 2 40 16
  36              	.LBB21:
  37              	.LBB22:
  41:src/../h/../h/ThreadQueue.hpp ****             Node* node = front;
  42:src/../h/../h/ThreadQueue.hpp ****             front = front->next;
  43:src/../h/../h/ThreadQueue.hpp ****             delete node;
  44:src/../h/../h/ThreadQueue.hpp ****         }
  45:src/../h/../h/ThreadQueue.hpp ****     }
  46:src/../h/../h/ThreadQueue.hpp **** 
  47:src/../h/../h/ThreadQueue.hpp ****     bool isEmpty() const {
  48:src/../h/../h/ThreadQueue.hpp ****         return front == nullptr;
  38              		.loc 2 48 9
  39              		.loc 2 48 16 is_stmt 0
  40 0018 03B58400 		ld	a0,8(s1)
  41              	.LVL2:
  42              	.LBE22:
  43              	.LBE21:
  40:src/../h/../h/ThreadQueue.hpp ****             Node* node = front;
  44              		.loc 2 40 16
  45 001c 630E0500 		beqz	a0,.L1
  46              	.LBB23:
  41:src/../h/../h/ThreadQueue.hpp ****             Node* node = front;
  47              		.loc 2 41 13 is_stmt 1
  48              	.LVL3:
  42:src/../h/../h/ThreadQueue.hpp ****             delete node;
  49              		.loc 2 42 13
  42:src/../h/../h/ThreadQueue.hpp ****             delete node;
  50              		.loc 2 42 28 is_stmt 0
  51 0020 83378500 		ld	a5,8(a0)
  42:src/../h/../h/ThreadQueue.hpp ****             delete node;
GAS LISTING /tmp/cclBh4wk.s 			page 3


  52              		.loc 2 42 19
  53 0024 23B4F400 		sd	a5,8(s1)
  43:src/../h/../h/ThreadQueue.hpp ****         }
  54              		.loc 2 43 13 is_stmt 1
  43:src/../h/../h/ThreadQueue.hpp ****         }
  55              		.loc 2 43 24 is_stmt 0
  56 0028 E30805FE 		beqz	a0,.L3
  57              	.LVL4:
  58              	.LBB24:
  59              	.LBB25:
  25:src/../h/../h/ThreadQueue.hpp ****         }
  60              		.loc 2 25 13 is_stmt 1
  25:src/../h/../h/ThreadQueue.hpp ****         }
  61              		.loc 2 25 21 is_stmt 0
  62 002c 97000000 		call	_Z8mem_freePv@plt
  62      E7800000 
  63              	.LVL5:
  26:src/../h/../h/ThreadQueue.hpp ****     };
  64              		.loc 2 26 9
  65 0034 6FF05FFE 		j	.L3
  66              	.L1:
  67              	.LBE25:
  68              	.LBE24:
  69              	.LBE23:
  70              	.LBE20:
  71              	.LBE19:
  72              		.loc 1 11 7
  73 0038 83308101 		ld	ra,24(sp)
  74              		.cfi_restore 1
  75 003c 03340101 		ld	s0,16(sp)
  76              		.cfi_restore 8
  77              		.cfi_def_cfa 2, 32
  78 0040 83348100 		ld	s1,8(sp)
  79              		.cfi_restore 9
  80              	.LVL6:
  81 0044 13010102 		addi	sp,sp,32
  82              		.cfi_def_cfa_offset 0
  83 0048 67800000 		jr	ra
  84              		.cfi_endproc
  85              	.LFE56:
  86              		.globl	__gxx_personality_v0
  87              		.section	.gcc_except_table._ZN4KSemD2Ev,"aG",@progbits,_ZN4KSemD5Ev,comdat
  88              	.LLSDA56:
  89 0000 FF       		.byte	0xff
  90 0001 FF       		.byte	0xff
  91 0002 03       		.byte	0x3
  92 0003 00       		.byte	0
  93              		.section	.text._ZN4KSemD2Ev,"axG",@progbits,_ZN4KSemD5Ev,comdat
  95              		.weak	_ZN4KSemD1Ev
  96              		.set	_ZN4KSemD1Ev,_ZN4KSemD2Ev
  97              		.section	.rodata
  98              		.align	3
  99              	.LC0:
 100 0000 0A4E6570 		.string	"\nNepostojeci op code: "
 100      6F73746F 
 100      6A656369 
 100      206F7020 
GAS LISTING /tmp/cclBh4wk.s 			page 4


 100      636F6465 
 101 0017 00       		.align	3
 102              	.LC1:
 103 0018 0A736361 		.string	"\nscause: "
 103      7573653A 
 103      2000
 104 0022 00000000 		.align	3
 104      0000
 105              	.LC2:
 106 0028 0A736570 		.string	"\nsepc: "
 106      633A2000 
 107              		.align	3
 108              	.LC3:
 109 0030 4E656B69 		.string	"Neki drugi prekid\n"
 109      20647275 
 109      67692070 
 109      72656B69 
 109      640A00
 110 0043 00000000 		.align	3
 110      00
 111              	.LC4:
 112 0048 0A477265 		.string	"\nGreska u prekidnoj rutini\n"
 112      736B6120 
 112      75207072 
 112      656B6964 
 112      6E6F6A20 
 113 0064 00000000 		.align	3
 114              	.LC5:
 115 0068 73636175 		.string	"scause: "
 115      73653A20 
 115      00
 116              		.text
 117              		.align	2
 118              		.globl	interruptRoutine
 120              	interruptRoutine:
 121              	.LFB54:
 122              		.file 3 "src/interruptRoutine.cpp"
   1:src/interruptRoutine.cpp **** //
   2:src/interruptRoutine.cpp **** // Created by os on 5/22/23.
   3:src/interruptRoutine.cpp **** //
   4:src/interruptRoutine.cpp **** 
   5:src/interruptRoutine.cpp **** #include "../lib/console.h"
   6:src/interruptRoutine.cpp **** #include "../lib/hw.h"
   7:src/interruptRoutine.cpp **** #include "../visak/MemoryAllocator.hpp"
   8:src/interruptRoutine.cpp **** #include "../h/helper.hpp"
   9:src/interruptRoutine.cpp **** #include "../h/Riscv.hpp"
  10:src/interruptRoutine.cpp **** #include "../h/syscall_c.hpp"
  11:src/interruptRoutine.cpp **** #include "../h/TCB.hpp"
  12:src/interruptRoutine.cpp **** #include "../h/Scheduler.hpp"
  13:src/interruptRoutine.cpp **** #include "../h/KSem.hpp"
  14:src/interruptRoutine.cpp **** #include "../h/KConsole.hpp"
  15:src/interruptRoutine.cpp **** #include "../h/KMemory.hpp"
  16:src/interruptRoutine.cpp **** #include "../test/printing.hpp"
  17:src/interruptRoutine.cpp **** 
  18:src/interruptRoutine.cpp **** int main();
  19:src/interruptRoutine.cpp **** 
  20:src/interruptRoutine.cpp **** #pragma GCC optimize("O0")
GAS LISTING /tmp/cclBh4wk.s 			page 5


  21:src/interruptRoutine.cpp **** extern "C" void interruptRoutine() {
 123              		.loc 3 21 36 is_stmt 1
 124              		.cfi_startproc
 125 0000 130101F8 		addi	sp,sp,-128
 126              		.cfi_def_cfa_offset 128
 127 0004 233C1106 		sd	ra,120(sp)
 128 0008 23388106 		sd	s0,112(sp)
 129 000c 23349106 		sd	s1,104(sp)
 130              		.cfi_offset 1, -8
 131              		.cfi_offset 8, -16
 132              		.cfi_offset 9, -24
 133 0010 13040108 		addi	s0,sp,128
 134              		.cfi_def_cfa 8, 0
  22:src/interruptRoutine.cpp ****     //bitni sistemski registri
  23:src/interruptRoutine.cpp ****     uint64 scause, sepc, sstatus;
 135              		.loc 3 23 5
  24:src/interruptRoutine.cpp ****     __asm__ volatile("csrr %[scause], scause":[scause] "=r"(scause): : "a5", "a0", "a1", "a2", "a3"
 136              		.loc 3 24 5
 137              		.loc 3 24 119 is_stmt 0
 138              	#APP
 139              	# 24 "src/interruptRoutine.cpp" 1
  25              	    __asm__ volatile("csrr %[sepc], sepc":[sepc] "=r"(sepc): : "a5", "a0", "a1", "a2", "a3", "a4", 
 140              		csrr t1, scause
 141              	# 0 "" 2
 142              	#NO_APP
 143 0018 233C64FC 		sd	t1,-40(s0)
 144              	.LVL7:
 145              		.loc 3 25 5 is_stmt 1
 146              		.loc 3 25 111 is_stmt 0
 147              	#APP
 148              	# 25 "src/interruptRoutine.cpp" 1
  26              	    __asm__ volatile("csrr %[stat], sstatus":[stat] "=r"(sstatus): : "a5", "a0", "a1", "a2", "a3", 
 149              		csrr t1, sepc
 150              	# 0 "" 2
 151              	.LVL8:
 152              	#NO_APP
 153 0020 233864FC 		sd	t1,-48(s0)
 154              	.LVL9:
 155              		.loc 3 26 5 is_stmt 1
 156              		.loc 3 26 117 is_stmt 0
 157              	#APP
 158              	# 26 "src/interruptRoutine.cpp" 1
  27              	
 159              		csrr t1, sstatus
 160              	# 0 "" 2
 161              	.LVL10:
 162              	#NO_APP
 163 0028 233464FC 		sd	t1,-56(s0)
 164              	.LVL11:
  28:src/interruptRoutine.cpp ****     //argumenti preneti sistemskom pozivu
  29:src/interruptRoutine.cpp ****     uint64 a0, a1, a2, a3, a4, a5, a6, a7;
 165              		.loc 3 29 5 is_stmt 1
  30:src/interruptRoutine.cpp ****     __asm__ volatile("mv %[ax], a0":[ax] "=r"(a0): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7"
 166              		.loc 3 30 5
 167              		.loc 3 30 101 is_stmt 0
 168              	#APP
 169              	# 30 "src/interruptRoutine.cpp" 1
GAS LISTING /tmp/cclBh4wk.s 			page 6


  31              	    __asm__ volatile("mv %[ax], a1":[ax] "=r"(a1): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7"
 170              		mv t1, a0
 171              	# 0 "" 2
 172              	.LVL12:
 173              	#NO_APP
 174 0030 233064FC 		sd	t1,-64(s0)
 175              	.LVL13:
 176              		.loc 3 31 5 is_stmt 1
 177              		.loc 3 31 101 is_stmt 0
 178              	#APP
 179              	# 31 "src/interruptRoutine.cpp" 1
  32              	    __asm__ volatile("mv %[ax], a2":[ax] "=r"(a2): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7"
 180              		mv t1, a1
 181              	# 0 "" 2
 182              	.LVL14:
 183              	#NO_APP
 184 0038 233C64FA 		sd	t1,-72(s0)
 185              	.LVL15:
 186              		.loc 3 32 5 is_stmt 1
 187              		.loc 3 32 101 is_stmt 0
 188              	#APP
 189              	# 32 "src/interruptRoutine.cpp" 1
  33              	    __asm__ volatile("mv %[ax], a3":[ax] "=r"(a3): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7"
 190              		mv t1, a2
 191              	# 0 "" 2
 192              	.LVL16:
 193              	#NO_APP
 194 0040 233864FA 		sd	t1,-80(s0)
 195              	.LVL17:
 196              		.loc 3 33 5 is_stmt 1
 197              		.loc 3 33 101 is_stmt 0
 198              	#APP
 199              	# 33 "src/interruptRoutine.cpp" 1
  34              	    __asm__ volatile("mv %[ax], a4":[ax] "=r"(a4): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7"
 200              		mv t1, a3
 201              	# 0 "" 2
 202              	.LVL18:
 203              	#NO_APP
 204 0048 233464FA 		sd	t1,-88(s0)
 205              	.LVL19:
 206              		.loc 3 34 5 is_stmt 1
 207              		.loc 3 34 101 is_stmt 0
 208              	#APP
 209              	# 34 "src/interruptRoutine.cpp" 1
  35              	    __asm__ volatile("mv %[ax], a5":[ax] "=r"(a5): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7"
 210              		mv t1, a4
 211              	# 0 "" 2
 212              	.LVL20:
 213              	#NO_APP
 214 0050 233064FA 		sd	t1,-96(s0)
 215              	.LVL21:
 216              		.loc 3 35 5 is_stmt 1
 217              		.loc 3 35 101 is_stmt 0
 218              	#APP
 219              	# 35 "src/interruptRoutine.cpp" 1
  36              	    __asm__ volatile("mv %[ax], a6":[ax] "=r"(a6): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7"
 220              		mv t1, a5
GAS LISTING /tmp/cclBh4wk.s 			page 7


 221              	# 0 "" 2
 222              	.LVL22:
 223              	#NO_APP
 224 0058 233C64F8 		sd	t1,-104(s0)
 225              	.LVL23:
 226              		.loc 3 36 5 is_stmt 1
 227              		.loc 3 36 101 is_stmt 0
 228              	#APP
 229              	# 36 "src/interruptRoutine.cpp" 1
  37              	    __asm__ volatile("mv %[ax], a7":[ax] "=r"(a7): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7"
 230              		mv t1, a6
 231              	# 0 "" 2
 232              	.LVL24:
 233              	#NO_APP
 234 0060 233864F8 		sd	t1,-112(s0)
 235              	.LVL25:
 236              		.loc 3 37 5 is_stmt 1
 237              		.loc 3 37 101 is_stmt 0
 238              	#APP
 239              	# 37 "src/interruptRoutine.cpp" 1
  38              	
 240              		mv t1, a7
 241              	# 0 "" 2
 242              	.LVL26:
 243              	#NO_APP
 244 0068 233464F8 		sd	t1,-120(s0)
 245              	.LVL27:
  39:src/interruptRoutine.cpp ****     if (scause == 0x9 || scause == 0x8) {
 246              		.loc 3 39 5 is_stmt 1
 247              	.LBB26:
 248 006c 033784FD 		ld	a4,-40(s0)
 249 0070 93079000 		li	a5,9
 250 0074 6308F700 		beq	a4,a5,.L7
 251              		.loc 3 39 23 is_stmt 0 discriminator 1
 252 0078 033784FD 		ld	a4,-40(s0)
 253 007c 93078000 		li	a5,8
 254 0080 6316F73C 		bne	a4,a5,.L8
 255              	.L7:
  40:src/interruptRoutine.cpp ****         //prekid zbog poziva ecall
  41:src/interruptRoutine.cpp ****         switch (a0) {
 256              		.loc 3 41 9 is_stmt 1
 257 0084 033704FC 		ld	a4,-64(s0)
 258 0088 93071009 		li	a5,145
 259 008c 6302F732 		beq	a4,a5,.L9
 260 0090 033704FC 		ld	a4,-64(s0)
 261 0094 93071009 		li	a5,145
 262 0098 63E4E732 		bgtu	a4,a5,.L10
 263 009c 033704FC 		ld	a4,-64(s0)
 264 00a0 93071008 		li	a5,129
 265 00a4 6306F72C 		beq	a4,a5,.L11
 266 00a8 033704FC 		ld	a4,-64(s0)
 267 00ac 93071008 		li	a5,129
 268 00b0 63E8E730 		bgtu	a4,a5,.L10
 269 00b4 033704FC 		ld	a4,-64(s0)
 270 00b8 93072004 		li	a5,66
 271 00bc 63E2E704 		bgtu	a4,a5,.L12
 272 00c0 833704FC 		ld	a5,-64(s0)
GAS LISTING /tmp/cclBh4wk.s 			page 8


 273 00c4 638E072E 		beqz	a5,.L10
 274 00c8 033704FC 		ld	a4,-64(s0)
 275 00cc 93072004 		li	a5,66
 276 00d0 63E8E72E 		bgtu	a4,a5,.L10
 277 00d4 833704FC 		ld	a5,-64(s0)
 278 00d8 13972700 		slli	a4,a5,2
 279 00dc 97070000 		lla	a5,.L14
 279      93870700 
 280 00e4 B307F700 		add	a5,a4,a5
 281 00e8 83A70700 		lw	a5,0(a5)
 282 00ec 1B870700 		sext.w	a4,a5
 283 00f0 97070000 		lla	a5,.L14
 283      93870700 
 284 00f8 B307F700 		add	a5,a4,a5
 285 00fc 67800700 		jr	a5
 286              		.section	.rodata
 287 0071 000000   		.align	2
 288              		.align	2
 289              	.L14:
 290 0074 00000000 		.word	.L10-.L14
 291 0078 00000000 		.word	.L26-.L14
 292 007c 00000000 		.word	.L25-.L14
 293 0080 00000000 		.word	.L10-.L14
 294 0084 00000000 		.word	.L10-.L14
 295 0088 00000000 		.word	.L10-.L14
 296 008c 00000000 		.word	.L10-.L14
 297 0090 00000000 		.word	.L10-.L14
 298 0094 00000000 		.word	.L10-.L14
 299 0098 00000000 		.word	.L10-.L14
 300 009c 00000000 		.word	.L10-.L14
 301 00a0 00000000 		.word	.L10-.L14
 302 00a4 00000000 		.word	.L10-.L14
 303 00a8 00000000 		.word	.L10-.L14
 304 00ac 00000000 		.word	.L10-.L14
 305 00b0 00000000 		.word	.L10-.L14
 306 00b4 00000000 		.word	.L10-.L14
 307 00b8 00000000 		.word	.L24-.L14
 308 00bc 00000000 		.word	.L23-.L14
 309 00c0 00000000 		.word	.L22-.L14
 310 00c4 00000000 		.word	.L21-.L14
 311 00c8 00000000 		.word	.L10-.L14
 312 00cc 00000000 		.word	.L10-.L14
 313 00d0 00000000 		.word	.L10-.L14
 314 00d4 00000000 		.word	.L10-.L14
 315 00d8 00000000 		.word	.L10-.L14
 316 00dc 00000000 		.word	.L10-.L14
 317 00e0 00000000 		.word	.L10-.L14
 318 00e4 00000000 		.word	.L10-.L14
 319 00e8 00000000 		.word	.L10-.L14
 320 00ec 00000000 		.word	.L10-.L14
 321 00f0 00000000 		.word	.L10-.L14
 322 00f4 00000000 		.word	.L10-.L14
 323 00f8 00000000 		.word	.L20-.L14
 324 00fc 00000000 		.word	.L19-.L14
 325 0100 00000000 		.word	.L18-.L14
 326 0104 00000000 		.word	.L17-.L14
 327 0108 00000000 		.word	.L10-.L14
GAS LISTING /tmp/cclBh4wk.s 			page 9


 328 010c 00000000 		.word	.L10-.L14
 329 0110 00000000 		.word	.L10-.L14
 330 0114 00000000 		.word	.L10-.L14
 331 0118 00000000 		.word	.L10-.L14
 332 011c 00000000 		.word	.L10-.L14
 333 0120 00000000 		.word	.L10-.L14
 334 0124 00000000 		.word	.L10-.L14
 335 0128 00000000 		.word	.L10-.L14
 336 012c 00000000 		.word	.L10-.L14
 337 0130 00000000 		.word	.L10-.L14
 338 0134 00000000 		.word	.L10-.L14
 339 0138 00000000 		.word	.L16-.L14
 340 013c 00000000 		.word	.L10-.L14
 341 0140 00000000 		.word	.L10-.L14
 342 0144 00000000 		.word	.L10-.L14
 343 0148 00000000 		.word	.L10-.L14
 344 014c 00000000 		.word	.L10-.L14
 345 0150 00000000 		.word	.L10-.L14
 346 0154 00000000 		.word	.L10-.L14
 347 0158 00000000 		.word	.L10-.L14
 348 015c 00000000 		.word	.L10-.L14
 349 0160 00000000 		.word	.L10-.L14
 350 0164 00000000 		.word	.L10-.L14
 351 0168 00000000 		.word	.L10-.L14
 352 016c 00000000 		.word	.L10-.L14
 353 0170 00000000 		.word	.L10-.L14
 354 0174 00000000 		.word	.L10-.L14
 355 0178 00000000 		.word	.L15-.L14
 356 017c 00000000 		.word	.L13-.L14
 357              		.text
 358              	.L12:
 359 0100 033704FC 		ld	a4,-64(s0)
 360 0104 93070008 		li	a5,128
 361 0108 630EF720 		beq	a4,a5,.L27
 362 010c 6F00402B 		j	.L10
 363              	.L26:
  42:src/interruptRoutine.cpp ****             case 0x01:
 364              		.loc 3 42 13
  43:src/interruptRoutine.cpp ****                 //mem_alloc
  44:src/interruptRoutine.cpp ****                 //a1 = broj blokova koje treba alocirati
  45:src/interruptRoutine.cpp ****                 KMemory::kmalloc((size_t)a1);
 365              		.loc 3 45 17
 366              		.loc 3 45 33 is_stmt 0
 367 0110 033584FB 		ld	a0,-72(s0)
 368 0114 97000000 		call	_ZN7KMemory7kmallocEm@plt
 368      E7800000 
 369              	.LVL28:
  46:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 370              		.loc 3 46 17 is_stmt 1
 371              		.loc 3 46 50 is_stmt 0
 372              	#APP
 373              	# 46 "src/interruptRoutine.cpp" 1
  47              	                break;
 374              		sd a0, 80(s0)
 375              	# 0 "" 2
 376              		.loc 3 47 17 is_stmt 1
 377              	#NO_APP
GAS LISTING /tmp/cclBh4wk.s 			page 10


 378 0120 6F00C030 		j	.L28
 379              	.LVL29:
 380              	.L25:
  48:src/interruptRoutine.cpp ****             case 0x02:
 381              		.loc 3 48 13
  49:src/interruptRoutine.cpp ****                 //mem_free
  50:src/interruptRoutine.cpp ****                 //a1 = pokazivac na memoriju koju dealociramo, dobijen sa mem_alloc
  51:src/interruptRoutine.cpp ****                 KMemory::kfree((void*)a1);
 382              		.loc 3 51 17
 383              		.loc 3 51 31 is_stmt 0
 384 0124 833784FB 		ld	a5,-72(s0)
 385 0128 13850700 		mv	a0,a5
 386 012c 97000000 		call	_ZN7KMemory5kfreeEPv@plt
 386      E7800000 
 387              	.LVL30:
  52:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 388              		.loc 3 52 17 is_stmt 1
 389              		.loc 3 52 50 is_stmt 0
 390              	#APP
 391              	# 52 "src/interruptRoutine.cpp" 1
  53              	                break;
 392              		sd a0, 80(s0)
 393              	# 0 "" 2
 394              		.loc 3 53 17 is_stmt 1
 395              	#NO_APP
 396 0138 6F00402F 		j	.L28
 397              	.LVL31:
 398              	.L24:
  54:src/interruptRoutine.cpp ****             case 0x11:
 399              		.loc 3 54 13
  55:src/interruptRoutine.cpp ****                 //thread_create
  56:src/interruptRoutine.cpp ****                 //a1 = pokazivac na rucku u koju upisujemo identifikator niti(adresa u memoriji)
  57:src/interruptRoutine.cpp ****                 //a2 = pokazivac na funkciju koju nit treba da izvrsava
  58:src/interruptRoutine.cpp ****                 //a3 = argumenti funkcije koju nit treba da izvrsava
  59:src/interruptRoutine.cpp ****                 //a4 = poslednja lokacija alociranog steka(najniza adresa)
  60:src/interruptRoutine.cpp ****                 *((thread_t*)a1) = TCB::createThread((TCB::Body)a2, (void*)a3, (uint64*)a4);
 400              		.loc 3 60 17
 401              		.loc 3 60 53 is_stmt 0
 402 013c 833704FB 		ld	a5,-80(s0)
 403 0140 033784FA 		ld	a4,-88(s0)
 404 0144 833604FA 		ld	a3,-96(s0)
 405              		.loc 3 60 17
 406 0148 833484FB 		ld	s1,-72(s0)
 407              		.loc 3 60 53
 408 014c 13860600 		mv	a2,a3
 409 0150 93050700 		mv	a1,a4
 410 0154 13850700 		mv	a0,a5
 411 0158 97000000 		call	_ZN3TCB12createThreadEPFvPvES0_Pm@plt
 411      E7800000 
 412              	.LVL32:
 413 0160 93070500 		mv	a5,a0
 414              		.loc 3 60 34
 415 0164 23B0F400 		sd	a5,0(s1)
  61:src/interruptRoutine.cpp ****                 if (*((thread_t*)a1) != nullptr) {
 416              		.loc 3 61 17 is_stmt 1
 417              		.loc 3 61 21 is_stmt 0
 418 0168 833784FB 		ld	a5,-72(s0)
GAS LISTING /tmp/cclBh4wk.s 			page 11


 419 016c 83B70700 		ld	a5,0(a5)
 420              		.loc 3 61 17
 421 0170 63880702 		beqz	a5,.L29
  62:src/interruptRoutine.cpp ****                     if ((TCB::Body)a2 != (TCB::Body)main) {
 422              		.loc 3 62 21 is_stmt 1
 423              		.loc 3 62 39 is_stmt 0
 424 0174 033704FB 		ld	a4,-80(s0)
 425              		.loc 3 62 21
 426 0178 97070000 		la	a5,main
 426      83B70700 
 427 0180 630CF700 		beq	a4,a5,.L30
  63:src/interruptRoutine.cpp ****                         Scheduler::put(*((thread_t*)a1));
 428              		.loc 3 63 25 is_stmt 1
 429              		.loc 3 63 39 is_stmt 0
 430 0184 833784FB 		ld	a5,-72(s0)
 431 0188 83B70700 		ld	a5,0(a5)
 432 018c 13850700 		mv	a0,a5
 433 0190 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 433      E7800000 
 434              	.LVL33:
 435              	.L30:
  64:src/interruptRoutine.cpp ****                     }
  65:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, 0");
 436              		.loc 3 65 21 is_stmt 1
 437              		.loc 3 65 49 is_stmt 0
 438              	#APP
 439              	# 65 "src/interruptRoutine.cpp" 1
  66              	                } else {
 440              		li a0, 0
 441              	# 0 "" 2
 442              	#NO_APP
 443 019c 6F008000 		j	.L31
 444              	.L29:
  67:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, -1");
 445              		.loc 3 67 21 is_stmt 1
 446              		.loc 3 67 50 is_stmt 0
 447              	#APP
 448              	# 67 "src/interruptRoutine.cpp" 1
  68              	                }
 449              		li a0, -1
 450              	# 0 "" 2
 451              	#NO_APP
 452              	.L31:
  69:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 453              		.loc 3 69 17 is_stmt 1
 454              		.loc 3 69 50 is_stmt 0
 455              	#APP
 456              	# 69 "src/interruptRoutine.cpp" 1
  70              	                break;
 457              		sd a0, 80(s0)
 458              	# 0 "" 2
 459              		.loc 3 70 17 is_stmt 1
 460              	#NO_APP
 461 01a8 6F004028 		j	.L28
 462              	.LVL34:
 463              	.L23:
  71:src/interruptRoutine.cpp ****             case 0x12:
GAS LISTING /tmp/cclBh4wk.s 			page 12


 464              		.loc 3 71 13
  72:src/interruptRoutine.cpp ****                 //thread_exit
  73:src/interruptRoutine.cpp ****                 TCB::getRunning()->setStatus(TCB::FINISHED);
 465              		.loc 3 73 17
 466              		.loc 3 73 45 is_stmt 0
 467 01ac 97000000 		call	_ZN3TCB10getRunningEv
 467      E7800000 
 468              	.LVL35:
 469 01b4 93070500 		mv	a5,a0
 470 01b8 93055000 		li	a1,5
 471 01bc 13850700 		mv	a0,a5
 472 01c0 97000000 		call	_ZN3TCB9setStatusENS_12ThreadStatusE
 472      E7800000 
 473              	.LVL36:
  74:src/interruptRoutine.cpp ****                 TCB::releaseJoined();
 474              		.loc 3 74 17 is_stmt 1
 475              		.loc 3 74 35 is_stmt 0
 476 01c8 97000000 		call	_ZN3TCB13releaseJoinedEv@plt
 476      E7800000 
 477              	.LVL37:
  75:src/interruptRoutine.cpp ****                 __asm__ volatile("li a0, 0");
 478              		.loc 3 75 17 is_stmt 1
 479              		.loc 3 75 45 is_stmt 0
 480              	#APP
 481              	# 75 "src/interruptRoutine.cpp" 1
  76              	                __asm__ volatile("sd a0, 80(s0)");
 482              		li a0, 0
 483              	# 0 "" 2
 484              		.loc 3 76 17 is_stmt 1
 485              		.loc 3 76 50 is_stmt 0
 486              	# 76 "src/interruptRoutine.cpp" 1
  77              	                TCB::dispatch();
 487              		sd a0, 80(s0)
 488              	# 0 "" 2
 489              		.loc 3 77 17 is_stmt 1
 490              		.loc 3 77 30 is_stmt 0
 491              	#NO_APP
 492 01d8 97000000 		call	_ZN3TCB8dispatchEv@plt
 492      E7800000 
 493              	.LVL38:
  78:src/interruptRoutine.cpp ****                 break;
 494              		.loc 3 78 17 is_stmt 1
 495 01e0 6F00C024 		j	.L28
 496              	.LVL39:
 497              	.L22:
  79:src/interruptRoutine.cpp ****             case 0x13:
 498              		.loc 3 79 13
  80:src/interruptRoutine.cpp ****                 //thread_dispatch
  81:src/interruptRoutine.cpp ****                 TCB::dispatch();
 499              		.loc 3 81 17
 500              		.loc 3 81 30 is_stmt 0
 501 01e4 97000000 		call	_ZN3TCB8dispatchEv@plt
 501      E7800000 
 502              	.LVL40:
  82:src/interruptRoutine.cpp ****                 break;
 503              		.loc 3 82 17 is_stmt 1
 504 01ec 6F000024 		j	.L28
GAS LISTING /tmp/cclBh4wk.s 			page 13


 505              	.LVL41:
 506              	.L21:
  83:src/interruptRoutine.cpp ****             case 0x14:
 507              		.loc 3 83 13
  84:src/interruptRoutine.cpp ****                 //thread_join
  85:src/interruptRoutine.cpp ****                 //a1 = rucka niti na koju tekuca nit treba da ceka
  86:src/interruptRoutine.cpp ****                 TCB::threadJoin((thread_t)a1);
 508              		.loc 3 86 17
 509              		.loc 3 86 32 is_stmt 0
 510 01f0 833784FB 		ld	a5,-72(s0)
 511 01f4 13850700 		mv	a0,a5
 512 01f8 97000000 		call	_ZN3TCB10threadJoinEPS_@plt
 512      E7800000 
 513              	.LVL42:
  87:src/interruptRoutine.cpp ****                 TCB::dispatch();
 514              		.loc 3 87 17 is_stmt 1
 515              		.loc 3 87 30 is_stmt 0
 516 0200 97000000 		call	_ZN3TCB8dispatchEv@plt
 516      E7800000 
 517              	.LVL43:
  88:src/interruptRoutine.cpp ****                 break;
 518              		.loc 3 88 17 is_stmt 1
 519 0208 6F004022 		j	.L28
 520              	.LVL44:
 521              	.L20:
  89:src/interruptRoutine.cpp ****             case 0x21:
 522              		.loc 3 89 13
  90:src/interruptRoutine.cpp ****                 //sem_open
  91:src/interruptRoutine.cpp ****                 //a1 = pokazivac na rucku semafora, u koju se upisuje adresa semafora u memoriji
  92:src/interruptRoutine.cpp ****                 *((sem_t*)a1) = KSem::initSem((uint)a2);
 523              		.loc 3 92 17
 524              		.loc 3 92 46 is_stmt 0
 525 020c 833704FB 		ld	a5,-80(s0)
 526 0210 9B870700 		sext.w	a5,a5
 527              		.loc 3 92 17
 528 0214 833484FB 		ld	s1,-72(s0)
 529              		.loc 3 92 46
 530 0218 13850700 		mv	a0,a5
 531 021c 97000000 		call	_ZN4KSem7initSemEj@plt
 531      E7800000 
 532              	.LVL45:
 533 0224 93070500 		mv	a5,a0
 534              		.loc 3 92 31
 535 0228 23B0F400 		sd	a5,0(s1)
  93:src/interruptRoutine.cpp ****                 if (*((sem_t*)a1) != nullptr) {
 536              		.loc 3 93 17 is_stmt 1
 537              		.loc 3 93 21 is_stmt 0
 538 022c 833784FB 		ld	a5,-72(s0)
 539 0230 83B70700 		ld	a5,0(a5)
 540              		.loc 3 93 17
 541 0234 63860700 		beqz	a5,.L32
  94:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, 0");
 542              		.loc 3 94 21 is_stmt 1
 543              		.loc 3 94 49 is_stmt 0
 544              	#APP
 545              	# 94 "src/interruptRoutine.cpp" 1
  95              	                } else {
GAS LISTING /tmp/cclBh4wk.s 			page 14


 546              		li a0, 0
 547              	# 0 "" 2
 548              	#NO_APP
 549 023c 6F008000 		j	.L33
 550              	.L32:
  96:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, -1");
 551              		.loc 3 96 21 is_stmt 1
 552              		.loc 3 96 50 is_stmt 0
 553              	#APP
 554              	# 96 "src/interruptRoutine.cpp" 1
  97              	                }
 555              		li a0, -1
 556              	# 0 "" 2
 557              	#NO_APP
 558              	.L33:
  98:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 559              		.loc 3 98 17 is_stmt 1
 560              		.loc 3 98 50 is_stmt 0
 561              	#APP
 562              	# 98 "src/interruptRoutine.cpp" 1
  99              	                break;
 563              		sd a0, 80(s0)
 564              	# 0 "" 2
 565              		.loc 3 99 17 is_stmt 1
 566              	#NO_APP
 567 0248 6F00401E 		j	.L28
 568              	.LVL46:
 569              	.L19:
 100:src/interruptRoutine.cpp ****             case 0x22:
 570              		.loc 3 100 13
 101:src/interruptRoutine.cpp ****                 //sem_close
 102:src/interruptRoutine.cpp ****                 //a1 = rucka semafora
 103:src/interruptRoutine.cpp ****                 KSem::closeSem((sem_t)a1);
 571              		.loc 3 103 17
 572              		.loc 3 103 31 is_stmt 0
 573 024c 833784FB 		ld	a5,-72(s0)
 574 0250 13850700 		mv	a0,a5
 575 0254 97000000 		call	_ZN4KSem8closeSemEPS_@plt
 575      E7800000 
 576              	.LVL47:
 104:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 577              		.loc 3 104 17 is_stmt 1
 578              		.loc 3 104 50 is_stmt 0
 579              	#APP
 580              	# 104 "src/interruptRoutine.cpp" 1
 105              	                delete (sem_t)a1;
 581              		sd a0, 80(s0)
 582              	# 0 "" 2
 583              		.loc 3 105 17 is_stmt 1
 584              		.loc 3 105 24 is_stmt 0
 585              	#NO_APP
 586 0260 833484FB 		ld	s1,-72(s0)
 587              		.loc 3 105 33
 588 0264 638A041A 		beqz	s1,.L47
 589              		.loc 3 105 31 discriminator 1
 590 0268 13850400 		mv	a0,s1
 591 026c 97000000 		call	_ZN4KSemD1Ev
GAS LISTING /tmp/cclBh4wk.s 			page 15


 591      E7800000 
 592              	.LVL48:
 593 0274 13850400 		mv	a0,s1
 594 0278 97000000 		call	_ZN4KSemdlEPv@plt
 594      E7800000 
 595              	.LVL49:
 106:src/interruptRoutine.cpp ****                 break;
 596              		.loc 3 106 17 is_stmt 1 discriminator 1
 597 0280 6F008019 		j	.L47
 598              	.LVL50:
 599              	.L18:
 107:src/interruptRoutine.cpp ****             case 0x23:
 600              		.loc 3 107 13
 108:src/interruptRoutine.cpp ****                 //sem_wait
 109:src/interruptRoutine.cpp ****                 //a1 = rucka semafora
 110:src/interruptRoutine.cpp ****                 ((sem_t)a1)->wait();
 601              		.loc 3 110 17
 602              		.loc 3 110 34 is_stmt 0
 603 0284 833784FB 		ld	a5,-72(s0)
 604 0288 13850700 		mv	a0,a5
 605 028c 97000000 		call	_ZN4KSem4waitEv@plt
 605      E7800000 
 606              	.LVL51:
 111:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 607              		.loc 3 111 17 is_stmt 1
 608              		.loc 3 111 50 is_stmt 0
 609              	#APP
 610              	# 111 "src/interruptRoutine.cpp" 1
 112              	                break;
 611              		sd a0, 80(s0)
 612              	# 0 "" 2
 613              		.loc 3 112 17 is_stmt 1
 614              	#NO_APP
 615 0298 6F004019 		j	.L28
 616              	.LVL52:
 617              	.L17:
 113:src/interruptRoutine.cpp ****             case 0x24:
 618              		.loc 3 113 13
 114:src/interruptRoutine.cpp ****                 //sem_signal
 115:src/interruptRoutine.cpp ****                 //a1 = rucka semafora
 116:src/interruptRoutine.cpp ****                 ((sem_t)a1)->signal();
 619              		.loc 3 116 17
 620              		.loc 3 116 36 is_stmt 0
 621 029c 833784FB 		ld	a5,-72(s0)
 622 02a0 13850700 		mv	a0,a5
 623 02a4 97000000 		call	_ZN4KSem6signalEv@plt
 623      E7800000 
 624              	.LVL53:
 117:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 625              		.loc 3 117 17 is_stmt 1
 626              		.loc 3 117 50 is_stmt 0
 627              	#APP
 628              	# 117 "src/interruptRoutine.cpp" 1
 118              	                break;
 629              		sd a0, 80(s0)
 630              	# 0 "" 2
 631              		.loc 3 118 17 is_stmt 1
GAS LISTING /tmp/cclBh4wk.s 			page 16


 632              	#NO_APP
 633 02b0 6F00C017 		j	.L28
 634              	.LVL54:
 635              	.L16:
 119:src/interruptRoutine.cpp ****             case 0x31:
 636              		.loc 3 119 13
 120:src/interruptRoutine.cpp ****                 //time_sleep
 121:src/interruptRoutine.cpp ****                 //a1 = broj perioda tajmera na koji se uspavljuje tekuca nit
 122:src/interruptRoutine.cpp ****                 if ((time_t)a1 > 0) {
 637              		.loc 3 122 17
 638 02b4 833784FB 		ld	a5,-72(s0)
 639 02b8 63860700 		beqz	a5,.L35
 123:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, 0");
 640              		.loc 3 123 21
 641              		.loc 3 123 49 is_stmt 0
 642              	#APP
 643              	# 123 "src/interruptRoutine.cpp" 1
 124              	                } else {
 644              		li a0, 0
 645              	# 0 "" 2
 646              	#NO_APP
 647 02c0 6F008000 		j	.L36
 648              	.L35:
 125:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, -1");
 649              		.loc 3 125 21 is_stmt 1
 650              		.loc 3 125 50 is_stmt 0
 651              	#APP
 652              	# 125 "src/interruptRoutine.cpp" 1
 126              	                }
 653              		li a0, -1
 654              	# 0 "" 2
 655              	#NO_APP
 656              	.L36:
 127:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 657              		.loc 3 127 17 is_stmt 1
 658              		.loc 3 127 50 is_stmt 0
 659              	#APP
 660              	# 127 "src/interruptRoutine.cpp" 1
 128              	                if ((time_t)a1 > 0) {
 661              		sd a0, 80(s0)
 662              	# 0 "" 2
 663              		.loc 3 128 17 is_stmt 1
 664              	#NO_APP
 665 02cc 833784FB 		ld	a5,-72(s0)
 666 02d0 63880714 		beqz	a5,.L48
 129:src/interruptRoutine.cpp ****                     Scheduler::putToSleep(TCB::getRunning(), (time_t)a1);
 667              		.loc 3 129 21
 668              		.loc 3 129 42 is_stmt 0
 669 02d4 97000000 		call	_ZN3TCB10getRunningEv
 669      E7800000 
 670              	.LVL55:
 671 02dc 93070500 		mv	a5,a0
 672 02e0 833584FB 		ld	a1,-72(s0)
 673 02e4 13850700 		mv	a0,a5
 674 02e8 97000000 		call	_ZN9Scheduler10putToSleepEP3TCBm@plt
 674      E7800000 
 675              	.LVL56:
GAS LISTING /tmp/cclBh4wk.s 			page 17


 130:src/interruptRoutine.cpp ****                     TCB::dispatch();
 676              		.loc 3 130 21 is_stmt 1
 677              		.loc 3 130 34 is_stmt 0
 678 02f0 97000000 		call	_ZN3TCB8dispatchEv@plt
 678      E7800000 
 679              	.LVL57:
 131:src/interruptRoutine.cpp ****                 }
 132:src/interruptRoutine.cpp ****                 break;
 680              		.loc 3 132 17 is_stmt 1
 681 02f8 6F008012 		j	.L48
 682              	.LVL58:
 683              	.L15:
 133:src/interruptRoutine.cpp ****             case 0x41:
 684              		.loc 3 133 13
 134:src/interruptRoutine.cpp ****                 //getc
 135:src/interruptRoutine.cpp ****                 KConsole::kgetc();
 685              		.loc 3 135 17
 686              		.loc 3 135 32 is_stmt 0
 687 02fc 97000000 		call	_ZN8KConsole5kgetcEv@plt
 687      E7800000 
 688              	.LVL59:
 136:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 689              		.loc 3 136 17 is_stmt 1
 690              		.loc 3 136 50 is_stmt 0
 691              	#APP
 692              	# 136 "src/interruptRoutine.cpp" 1
 137              	                break;
 693              		sd a0, 80(s0)
 694              	# 0 "" 2
 695              		.loc 3 137 17 is_stmt 1
 696              	#NO_APP
 697 0308 6F004012 		j	.L28
 698              	.LVL60:
 699              	.L13:
 138:src/interruptRoutine.cpp ****             case 0x42:
 700              		.loc 3 138 13
 139:src/interruptRoutine.cpp ****                 //putc
 140:src/interruptRoutine.cpp ****                 //a1 = karakter koji se upisuje u bafer za ispis na konzolu
 141:src/interruptRoutine.cpp ****                 KConsole::kputc((char)a1);
 701              		.loc 3 141 17
 702              		.loc 3 141 32 is_stmt 0
 703 030c 833784FB 		ld	a5,-72(s0)
 704 0310 93F7F70F 		andi	a5,a5,0xff
 705 0314 13850700 		mv	a0,a5
 706 0318 97000000 		call	_ZN8KConsole5kputcEc@plt
 706      E7800000 
 707              	.LVL61:
 142:src/interruptRoutine.cpp ****                 break;
 708              		.loc 3 142 17 is_stmt 1
 709 0320 6F00C010 		j	.L28
 710              	.LVL62:
 711              	.L27:
 143:src/interruptRoutine.cpp ****             case 0x80:
 712              		.loc 3 143 13
 144:src/interruptRoutine.cpp ****                 //alloc thread
 145:src/interruptRoutine.cpp ****                 //a1 = pokazivac na rucku u koju upisujemo identifikator niti(adresa u memoriji)
 146:src/interruptRoutine.cpp ****                 //a2 = pokazivac na funkciju koju nit treba da izvrsava
GAS LISTING /tmp/cclBh4wk.s 			page 18


 147:src/interruptRoutine.cpp ****                 //a3 = argumenti funkcije koju nit treba da izvrsava
 148:src/interruptRoutine.cpp ****                 //a4 = poslednja lokacija alociranog steka(najniza adresa)
 149:src/interruptRoutine.cpp ****                 *((thread_t*)a1) = TCB::createThread((TCB::Body)a2, (void*)a3, (uint64*)a4);
 713              		.loc 3 149 17
 714              		.loc 3 149 53 is_stmt 0
 715 0324 833704FB 		ld	a5,-80(s0)
 716 0328 033784FA 		ld	a4,-88(s0)
 717 032c 833604FA 		ld	a3,-96(s0)
 718              		.loc 3 149 17
 719 0330 833484FB 		ld	s1,-72(s0)
 720              		.loc 3 149 53
 721 0334 13860600 		mv	a2,a3
 722 0338 93050700 		mv	a1,a4
 723 033c 13850700 		mv	a0,a5
 724 0340 97000000 		call	_ZN3TCB12createThreadEPFvPvES0_Pm@plt
 724      E7800000 
 725              	.LVL63:
 726 0348 93070500 		mv	a5,a0
 727              		.loc 3 149 34
 728 034c 23B0F400 		sd	a5,0(s1)
 150:src/interruptRoutine.cpp ****                 if (*((thread_t*)a1) != nullptr) {
 729              		.loc 3 150 17 is_stmt 1
 730              		.loc 3 150 21 is_stmt 0
 731 0350 833784FB 		ld	a5,-72(s0)
 732 0354 83B70700 		ld	a5,0(a5)
 733              		.loc 3 150 17
 734 0358 63860700 		beqz	a5,.L38
 151:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, 0");
 735              		.loc 3 151 21 is_stmt 1
 736              		.loc 3 151 49 is_stmt 0
 737              	#APP
 738              	# 151 "src/interruptRoutine.cpp" 1
 152              	                } else {
 739              		li a0, 0
 740              	# 0 "" 2
 741              	#NO_APP
 742 0360 6F008000 		j	.L39
 743              	.L38:
 153:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, -1");
 744              		.loc 3 153 21 is_stmt 1
 745              		.loc 3 153 50 is_stmt 0
 746              	#APP
 747              	# 153 "src/interruptRoutine.cpp" 1
 154              	                }
 748              		li a0, -1
 749              	# 0 "" 2
 750              	#NO_APP
 751              	.L39:
 155:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 752              		.loc 3 155 17 is_stmt 1
 753              		.loc 3 155 50 is_stmt 0
 754              	#APP
 755              	# 155 "src/interruptRoutine.cpp" 1
 156              	                break;
 756              		sd a0, 80(s0)
 757              	# 0 "" 2
 758              		.loc 3 156 17 is_stmt 1
GAS LISTING /tmp/cclBh4wk.s 			page 19


 759              	#NO_APP
 760 036c 6F00000C 		j	.L28
 761              	.LVL64:
 762              	.L11:
 157:src/interruptRoutine.cpp ****             case 0x81:
 763              		.loc 3 157 13
 158:src/interruptRoutine.cpp ****                 //start thread
 159:src/interruptRoutine.cpp ****                 //a1 = rucka niti koja se stavlja u scheduler
 160:src/interruptRoutine.cpp ****                 if (((thread_t)a1)->getBody() != (TCB::Body)main) {
 764              		.loc 3 160 17
 765              		.loc 3 160 44 is_stmt 0
 766 0370 833784FB 		ld	a5,-72(s0)
 767 0374 13850700 		mv	a0,a5
 768 0378 97000000 		call	_ZN3TCB7getBodyEv
 768      E7800000 
 769              	.LVL65:
 770 0380 13070500 		mv	a4,a0
 771              		.loc 3 160 47
 772 0384 97070000 		la	a5,main
 772      83B70700 
 773 038c B307F740 		sub	a5,a4,a5
 774 0390 B337F000 		snez	a5,a5
 775 0394 93F7F70F 		andi	a5,a5,0xff
 776              		.loc 3 160 17
 777 0398 63880708 		beqz	a5,.L49
 161:src/interruptRoutine.cpp ****                     Scheduler::put((thread_t)a1);
 778              		.loc 3 161 21 is_stmt 1
 779              		.loc 3 161 35 is_stmt 0
 780 039c 833784FB 		ld	a5,-72(s0)
 781 03a0 13850700 		mv	a0,a5
 782 03a4 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 782      E7800000 
 783              	.LVL66:
 162:src/interruptRoutine.cpp ****                 }
 163:src/interruptRoutine.cpp ****                 break;
 784              		.loc 3 163 17 is_stmt 1
 785 03ac 6F00C007 		j	.L49
 786              	.LVL67:
 787              	.L9:
 164:src/interruptRoutine.cpp ****             case 0x91:
 788              		.loc 3 164 13
 165:src/interruptRoutine.cpp ****                 //printInteger
 166:src/interruptRoutine.cpp ****                 //a1 = integer za ispis
 167:src/interruptRoutine.cpp ****                 kPrintInt(a1);
 789              		.loc 3 167 17
 790              		.loc 3 167 26 is_stmt 0
 791 03b0 033584FB 		ld	a0,-72(s0)
 792 03b4 97000000 		call	_Z9kPrintIntm@plt
 792      E7800000 
 793              	.LVL68:
 168:src/interruptRoutine.cpp ****                 break;
 794              		.loc 3 168 17 is_stmt 1
 795 03bc 6F000007 		j	.L28
 796              	.LVL69:
 797              	.L10:
 169:src/interruptRoutine.cpp ****             default:
 798              		.loc 3 169 13
GAS LISTING /tmp/cclBh4wk.s 			page 20


 170:src/interruptRoutine.cpp ****                 printString("\nNepostojeci op code: ");
 799              		.loc 3 170 17
 800              		.loc 3 170 28 is_stmt 0
 801 03c0 17050000 		lla	a0,.LC0
 801      13050500 
 802 03c8 97000000 		call	_Z11printStringPKc@plt
 802      E7800000 
 803              	.LVL70:
 171:src/interruptRoutine.cpp ****                 kPrintInt(a0);
 804              		.loc 3 171 17 is_stmt 1
 805              		.loc 3 171 26 is_stmt 0
 806 03d0 033504FC 		ld	a0,-64(s0)
 807 03d4 97000000 		call	_Z9kPrintIntm@plt
 807      E7800000 
 808              	.LVL71:
 172:src/interruptRoutine.cpp ****                 printString("\nscause: ");
 809              		.loc 3 172 17 is_stmt 1
 810              		.loc 3 172 28 is_stmt 0
 811 03dc 17050000 		lla	a0,.LC1
 811      13050500 
 812 03e4 97000000 		call	_Z11printStringPKc@plt
 812      E7800000 
 813              	.LVL72:
 173:src/interruptRoutine.cpp ****                 kPrintInt(scause);
 814              		.loc 3 173 17 is_stmt 1
 815              		.loc 3 173 26 is_stmt 0
 816 03ec 033584FD 		ld	a0,-40(s0)
 817 03f0 97000000 		call	_Z9kPrintIntm@plt
 817      E7800000 
 818              	.LVL73:
 174:src/interruptRoutine.cpp ****                 printString("\nsepc: ");
 819              		.loc 3 174 17 is_stmt 1
 820              		.loc 3 174 28 is_stmt 0
 821 03f8 17050000 		lla	a0,.LC2
 821      13050500 
 822 0400 97000000 		call	_Z11printStringPKc@plt
 822      E7800000 
 823              	.LVL74:
 175:src/interruptRoutine.cpp ****                 kPrintInt(sepc);
 824              		.loc 3 175 17 is_stmt 1
 825              		.loc 3 175 26 is_stmt 0
 826 0408 033504FD 		ld	a0,-48(s0)
 827 040c 97000000 		call	_Z9kPrintIntm@plt
 827      E7800000 
 828              	.LVL75:
 176:src/interruptRoutine.cpp ****                 break;
 829              		.loc 3 176 17 is_stmt 1
 830 0414 6F008001 		j	.L28
 831              	.L47:
 106:src/interruptRoutine.cpp ****             case 0x23:
 832              		.loc 3 106 17 is_stmt 0
 833 0418 13000000 		nop
 834 041c 6F000001 		j	.L28
 835              	.L48:
 132:src/interruptRoutine.cpp ****             case 0x41:
 836              		.loc 3 132 17
 837 0420 13000000 		nop
GAS LISTING /tmp/cclBh4wk.s 			page 21


 838 0424 6F008000 		j	.L28
 839              	.L49:
 163:src/interruptRoutine.cpp ****             case 0x91:
 840              		.loc 3 163 17
 841 0428 13000000 		nop
 842              	.L28:
 177:src/interruptRoutine.cpp ****         }
 178:src/interruptRoutine.cpp ****         //sepc pokazuje na ecall instrukciju, treba preci na sledecu instrukciju
 179:src/interruptRoutine.cpp ****         sepc += 4;
 843              		.loc 3 179 9 is_stmt 1
 844              		.loc 3 179 14 is_stmt 0
 845 042c 833704FD 		ld	a5,-48(s0)
 846 0430 93874700 		addi	a5,a5,4
 847 0434 2338F4FC 		sd	a5,-48(s0)
 848              	.LVL76:
 180:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 849              		.loc 3 180 9 is_stmt 1
 850              		.loc 3 180 66 is_stmt 0
 851 0438 833704FD 		ld	a5,-48(s0)
 852              	#APP
 853              	# 180 "src/interruptRoutine.cpp" 1
 181              	        __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 854              		csrw sepc, a5
 855              	# 0 "" 2
 856              		.loc 3 181 9 is_stmt 1
 857              		.loc 3 181 71 is_stmt 0
 858              	#NO_APP
 859 0440 833784FC 		ld	a5,-56(s0)
 860              	.LVL77:
 861              	#APP
 862              	# 181 "src/interruptRoutine.cpp" 1
 182              	    } else if (scause == 0x8000000000000009) {
 863              		csrw sstatus, a5
 864              	# 0 "" 2
 865              	#NO_APP
 866              	.LBE26:
 183:src/interruptRoutine.cpp ****         //spoljasnji hardverski prekid (od konzole)
 184:src/interruptRoutine.cpp ****         uint64 irq = plic_claim();
 185:src/interruptRoutine.cpp ****         if (irq == CONSOLE_IRQ) {
 186:src/interruptRoutine.cpp ****             if (*KConsole::sr & CONSOLE_RX_STATUS_BIT) {
 187:src/interruptRoutine.cpp ****                 KConsole::placeInInput(*KConsole::dr);
 188:src/interruptRoutine.cpp ****             }
 189:src/interruptRoutine.cpp ****             //printString("\nobradjen prekid konzole\n");
 190:src/interruptRoutine.cpp ****         } else {
 191:src/interruptRoutine.cpp ****             printString("Neki drugi prekid\n");
 192:src/interruptRoutine.cpp ****         }
 193:src/interruptRoutine.cpp ****         plic_complete(irq);
 194:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 195:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 196:src/interruptRoutine.cpp ****         Riscv::mc_sip(Riscv::SIP_SEIP);
 197:src/interruptRoutine.cpp ****     } else if (scause == 0x8000000000000001) {
 198:src/interruptRoutine.cpp ****         //prekid od tajmera
 199:src/interruptRoutine.cpp ****         Scheduler::wake();
 200:src/interruptRoutine.cpp ****         TCB::getRunningTimeSlice()++;
 201:src/interruptRoutine.cpp ****         if (TCB::getRunningTimeSlice() >= TCB::getRunning()->getTimeSlice()) {
 202:src/interruptRoutine.cpp ****             TCB::dispatch();
 203:src/interruptRoutine.cpp ****         }
GAS LISTING /tmp/cclBh4wk.s 			page 22


 204:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 205:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 206:src/interruptRoutine.cpp ****         Riscv::mc_sip(Riscv::SIP_SSIP);
 207:src/interruptRoutine.cpp ****     } else {
 208:src/interruptRoutine.cpp ****         printString("\nGreska u prekidnoj rutini\n");
 209:src/interruptRoutine.cpp ****         printString("scause: ");
 210:src/interruptRoutine.cpp ****         kPrintInt(scause);
 211:src/interruptRoutine.cpp ****         printString("\nsepc: ");
 212:src/interruptRoutine.cpp ****         kPrintInt(sepc);
 213:src/interruptRoutine.cpp **** //        Riscv::mc_sstatus(Riscv::SSTATUS_SPIE);
 214:src/interruptRoutine.cpp **** //        Riscv::mc_sstatus(Riscv::SSTATUS_SIE);
 215:src/interruptRoutine.cpp ****     }
 216:src/interruptRoutine.cpp **** }...
 867              		.loc 3 216 1
 868 0448 6F000019 		j	.L50
 869              	.LVL78:
 870              	.L8:
 871              	.LBB34:
 872              	.LBB27:
 182:src/interruptRoutine.cpp ****     } else if (scause == 0x8000000000000009) {
 873              		.loc 3 182 12 is_stmt 1
 874              	.LBB28:
 875 044c 033784FD 		ld	a4,-40(s0)
 876              	.LVL79:
 877 0450 9307F0FF 		li	a5,-1
 878 0454 9397F703 		slli	a5,a5,63
 879 0458 93879700 		addi	a5,a5,9
 880 045c 631EF708 		bne	a4,a5,.L42
 881              	.LBB29:
 184:src/interruptRoutine.cpp ****         uint64 irq = plic_claim();
 882              		.loc 3 184 9
 184:src/interruptRoutine.cpp ****         uint64 irq = plic_claim();
 883              		.loc 3 184 32 is_stmt 0
 884 0460 97000000 		call	plic_claim@plt
 884      E7800000 
 885              	.LVL80:
 886 0468 93070500 		mv	a5,a0
 184:src/interruptRoutine.cpp ****         uint64 irq = plic_claim();
 887              		.loc 3 184 33
 888 046c 2330F4F8 		sd	a5,-128(s0)
 889              	.LVL81:
 185:src/interruptRoutine.cpp ****         if (irq == CONSOLE_IRQ) {
 890              		.loc 3 185 9 is_stmt 1
 891 0470 033704F8 		ld	a4,-128(s0)
 892 0474 9307A000 		li	a5,10
 893 0478 631EF702 		bne	a4,a5,.L43
 186:src/interruptRoutine.cpp ****             if (*KConsole::sr & CONSOLE_RX_STATUS_BIT) {
 894              		.loc 3 186 13
 186:src/interruptRoutine.cpp ****             if (*KConsole::sr & CONSOLE_RX_STATUS_BIT) {
 895              		.loc 3 186 17 is_stmt 0
 896 047c 97070000 		la	a5,_ZN8KConsole2srE
 896      83B70700 
 897 0484 83B70700 		ld	a5,0(a5)
 898 0488 83C70700 		lbu	a5,0(a5)
 186:src/interruptRoutine.cpp ****             if (*KConsole::sr & CONSOLE_RX_STATUS_BIT) {
 899              		.loc 3 186 31
 900 048c 93F71700 		andi	a5,a5,1
GAS LISTING /tmp/cclBh4wk.s 			page 23


 186:src/interruptRoutine.cpp ****             if (*KConsole::sr & CONSOLE_RX_STATUS_BIT) {
 901              		.loc 3 186 13
 902 0490 638A0702 		beqz	a5,.L44
 187:src/interruptRoutine.cpp ****                 KConsole::placeInInput(*KConsole::dr);
 903              		.loc 3 187 17 is_stmt 1
 187:src/interruptRoutine.cpp ****                 KConsole::placeInInput(*KConsole::dr);
 904              		.loc 3 187 39 is_stmt 0
 905 0494 97070000 		la	a5,_ZN8KConsole2drE
 905      83B70700 
 906 049c 83B70700 		ld	a5,0(a5)
 907 04a0 83C70700 		lbu	a5,0(a5)
 908 04a4 13850700 		mv	a0,a5
 909              	.LVL82:
 910 04a8 97000000 		call	_ZN8KConsole12placeInInputEc@plt
 910      E7800000 
 911              	.LVL83:
 912 04b0 6F004001 		j	.L44
 913              	.LVL84:
 914              	.L43:
 191:src/interruptRoutine.cpp ****             printString("Neki drugi prekid\n");
 915              		.loc 3 191 13 is_stmt 1
 191:src/interruptRoutine.cpp ****             printString("Neki drugi prekid\n");
 916              		.loc 3 191 24 is_stmt 0
 917 04b4 17050000 		lla	a0,.LC3
 917      13050500 
 918              	.LVL85:
 919 04bc 97000000 		call	_Z11printStringPKc@plt
 919      E7800000 
 920              	.LVL86:
 921              	.L44:
 193:src/interruptRoutine.cpp ****         plic_complete(irq);
 922              		.loc 3 193 9 is_stmt 1
 193:src/interruptRoutine.cpp ****         plic_complete(irq);
 923              		.loc 3 193 22 is_stmt 0
 924 04c4 833704F8 		ld	a5,-128(s0)
 925 04c8 9B870700 		sext.w	a5,a5
 926 04cc 13850700 		mv	a0,a5
 927 04d0 97000000 		call	plic_complete@plt
 927      E7800000 
 928              	.LVL87:
 194:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 929              		.loc 3 194 9 is_stmt 1
 194:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 930              		.loc 3 194 66 is_stmt 0
 931 04d8 833704FD 		ld	a5,-48(s0)
 932              	#APP
 933              	# 194 "src/interruptRoutine.cpp" 1
 195:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 934              		csrw sepc, a5
 935              	# 0 "" 2
 936              		.loc 3 195 9 is_stmt 1
 195:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 937              		.loc 3 195 71 is_stmt 0
 938              	#NO_APP
 939 04e0 833784FC 		ld	a5,-56(s0)
 940              	#APP
 941              	# 195 "src/interruptRoutine.cpp" 1
GAS LISTING /tmp/cclBh4wk.s 			page 24


 196:src/interruptRoutine.cpp ****         Riscv::mc_sip(Riscv::SIP_SEIP);
 942              		csrw sstatus, a5
 943              	# 0 "" 2
 944              		.loc 3 196 9 is_stmt 1
 196:src/interruptRoutine.cpp ****         Riscv::mc_sip(Riscv::SIP_SEIP);
 945              		.loc 3 196 22 is_stmt 0
 946              	#NO_APP
 947 04e8 13050020 		li	a0,512
 948 04ec 97000000 		call	_ZN5Riscv6mc_sipEm
 948      E7800000 
 949              	.LVL88:
 950              	.LBE29:
 951              	.LBE28:
 952              	.LBE27:
 953              	.LBE34:
 954              		.loc 3 216 1
 955 04f4 6F00400E 		j	.L50
 956              	.LVL89:
 957              	.L42:
 958              	.LBB35:
 959              	.LBB32:
 960              	.LBB30:
 197:src/interruptRoutine.cpp ****     } else if (scause == 0x8000000000000001) {
 961              		.loc 3 197 12 is_stmt 1
 962 04f8 033784FD 		ld	a4,-40(s0)
 963 04fc 9307F0FF 		li	a5,-1
 964 0500 9397F703 		slli	a5,a5,63
 965 0504 93871700 		addi	a5,a5,1
 966 0508 6314F708 		bne	a4,a5,.L45
 199:src/interruptRoutine.cpp ****         Scheduler::wake();
 967              		.loc 3 199 9
 199:src/interruptRoutine.cpp ****         Scheduler::wake();
 968              		.loc 3 199 24 is_stmt 0
 969 050c 97000000 		call	_ZN9Scheduler4wakeEv@plt
 969      E7800000 
 970              	.LVL90:
 200:src/interruptRoutine.cpp ****         TCB::getRunningTimeSlice()++;
 971              		.loc 3 200 9 is_stmt 1
 200:src/interruptRoutine.cpp ****         TCB::getRunningTimeSlice()++;
 972              		.loc 3 200 34 is_stmt 0
 973 0514 97000000 		call	_ZN3TCB19getRunningTimeSliceEv
 973      E7800000 
 974              	.LVL91:
 975 051c 93070500 		mv	a5,a0
 200:src/interruptRoutine.cpp ****         TCB::getRunningTimeSlice()++;
 976              		.loc 3 200 33
 977 0520 03B70700 		ld	a4,0(a5)
 200:src/interruptRoutine.cpp ****         TCB::getRunningTimeSlice()++;
 978              		.loc 3 200 35
 979 0524 13071700 		addi	a4,a4,1
 980 0528 23B0E700 		sd	a4,0(a5)
 201:src/interruptRoutine.cpp ****         if (TCB::getRunningTimeSlice() >= TCB::getRunning()->getTimeSlice()) {
 981              		.loc 3 201 9 is_stmt 1
 201:src/interruptRoutine.cpp ****         if (TCB::getRunningTimeSlice() >= TCB::getRunning()->getTimeSlice()) {
 982              		.loc 3 201 38 is_stmt 0
 983 052c 97000000 		call	_ZN3TCB19getRunningTimeSliceEv
 983      E7800000 
GAS LISTING /tmp/cclBh4wk.s 			page 25


 984              	.LVL92:
 985 0534 93070500 		mv	a5,a0
 201:src/interruptRoutine.cpp ****         if (TCB::getRunningTimeSlice() >= TCB::getRunning()->getTimeSlice()) {
 986              		.loc 3 201 37
 987 0538 83B40700 		ld	s1,0(a5)
 201:src/interruptRoutine.cpp ****         if (TCB::getRunningTimeSlice() >= TCB::getRunning()->getTimeSlice()) {
 988              		.loc 3 201 74
 989 053c 97000000 		call	_ZN3TCB10getRunningEv
 989      E7800000 
 990              	.LVL93:
 991 0544 93070500 		mv	a5,a0
 992 0548 13850700 		mv	a0,a5
 993 054c 97000000 		call	_ZN3TCB12getTimeSliceEv
 993      E7800000 
 994              	.LVL94:
 995 0554 93070500 		mv	a5,a0
 201:src/interruptRoutine.cpp ****         if (TCB::getRunningTimeSlice() >= TCB::getRunning()->getTimeSlice()) {
 996              		.loc 3 201 40
 997 0558 B3B7F400 		sltu	a5,s1,a5
 998 055c 93C71700 		xori	a5,a5,1
 999 0560 93F7F70F 		andi	a5,a5,0xff
 201:src/interruptRoutine.cpp ****         if (TCB::getRunningTimeSlice() >= TCB::getRunning()->getTimeSlice()) {
 1000              		.loc 3 201 9
 1001 0564 63860700 		beqz	a5,.L46
 202:src/interruptRoutine.cpp ****             TCB::dispatch();
 1002              		.loc 3 202 13 is_stmt 1
 202:src/interruptRoutine.cpp ****             TCB::dispatch();
 1003              		.loc 3 202 26 is_stmt 0
 1004 0568 97000000 		call	_ZN3TCB8dispatchEv@plt
 1004      E7800000 
 1005              	.LVL95:
 1006              	.L46:
 204:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 1007              		.loc 3 204 9 is_stmt 1
 204:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 1008              		.loc 3 204 66 is_stmt 0
 1009 0570 833704FD 		ld	a5,-48(s0)
 1010              	#APP
 1011              	# 204 "src/interruptRoutine.cpp" 1
 205:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 1012              		csrw sepc, a5
 1013              	# 0 "" 2
 1014              		.loc 3 205 9 is_stmt 1
 205:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 1015              		.loc 3 205 71 is_stmt 0
 1016              	#NO_APP
 1017 0578 833784FC 		ld	a5,-56(s0)
 1018              	#APP
 1019              	# 205 "src/interruptRoutine.cpp" 1
 206:src/interruptRoutine.cpp ****         Riscv::mc_sip(Riscv::SIP_SSIP);
 1020              		csrw sstatus, a5
 1021              	# 0 "" 2
 1022              		.loc 3 206 9 is_stmt 1
 206:src/interruptRoutine.cpp ****         Riscv::mc_sip(Riscv::SIP_SSIP);
 1023              		.loc 3 206 22 is_stmt 0
 1024              	#NO_APP
 1025 0580 13052000 		li	a0,2
GAS LISTING /tmp/cclBh4wk.s 			page 26


 1026 0584 97000000 		call	_ZN5Riscv6mc_sipEm
 1026      E7800000 
 1027              	.LVL96:
 1028              	.LBE30:
 1029              	.LBE32:
 1030              	.LBE35:
 1031              		.loc 3 216 1
 1032 058c 6F00C004 		j	.L50
 1033              	.LVL97:
 1034              	.L45:
 1035              	.LBB36:
 1036              	.LBB33:
 1037              	.LBB31:
 208:src/interruptRoutine.cpp ****         printString("\nGreska u prekidnoj rutini\n");
 1038              		.loc 3 208 9 is_stmt 1
 208:src/interruptRoutine.cpp ****         printString("\nGreska u prekidnoj rutini\n");
 1039              		.loc 3 208 20 is_stmt 0
 1040 0590 17050000 		lla	a0,.LC4
 1040      13050500 
 1041 0598 97000000 		call	_Z11printStringPKc@plt
 1041      E7800000 
 1042              	.LVL98:
 209:src/interruptRoutine.cpp ****         printString("scause: ");
 1043              		.loc 3 209 9 is_stmt 1
 209:src/interruptRoutine.cpp ****         printString("scause: ");
 1044              		.loc 3 209 20 is_stmt 0
 1045 05a0 17050000 		lla	a0,.LC5
 1045      13050500 
 1046 05a8 97000000 		call	_Z11printStringPKc@plt
 1046      E7800000 
 1047              	.LVL99:
 210:src/interruptRoutine.cpp ****         kPrintInt(scause);
 1048              		.loc 3 210 9 is_stmt 1
 210:src/interruptRoutine.cpp ****         kPrintInt(scause);
 1049              		.loc 3 210 18 is_stmt 0
 1050 05b0 033584FD 		ld	a0,-40(s0)
 1051 05b4 97000000 		call	_Z9kPrintIntm@plt
 1051      E7800000 
 1052              	.LVL100:
 211:src/interruptRoutine.cpp ****         printString("\nsepc: ");
 1053              		.loc 3 211 9 is_stmt 1
 211:src/interruptRoutine.cpp ****         printString("\nsepc: ");
 1054              		.loc 3 211 20 is_stmt 0
 1055 05bc 17050000 		lla	a0,.LC2
 1055      13050500 
 1056 05c4 97000000 		call	_Z11printStringPKc@plt
 1056      E7800000 
 1057              	.LVL101:
 212:src/interruptRoutine.cpp ****         kPrintInt(sepc);
 1058              		.loc 3 212 9 is_stmt 1
 212:src/interruptRoutine.cpp ****         kPrintInt(sepc);
 1059              		.loc 3 212 18 is_stmt 0
 1060 05cc 033504FD 		ld	a0,-48(s0)
 1061 05d0 97000000 		call	_Z9kPrintIntm@plt
 1061      E7800000 
 1062              	.LVL102:
 1063              	.L50:
GAS LISTING /tmp/cclBh4wk.s 			page 27


 1064              	.LBE31:
 1065              	.LBE33:
 1066              	.LBE36:
 1067              		.loc 3 216 1
 1068 05d8 13000000 		nop
 1069 05dc 83308107 		ld	ra,120(sp)
 1070              		.cfi_restore 1
 1071 05e0 03340107 		ld	s0,112(sp)
 1072              		.cfi_restore 8
 1073              		.cfi_def_cfa 2, 128
 1074              	.LVL103:
 1075 05e4 83348106 		ld	s1,104(sp)
 1076              		.cfi_restore 9
 1077 05e8 13010108 		addi	sp,sp,128
 1078              		.cfi_def_cfa_offset 0
 1079              	.LVL104:
 1080 05ec 67800000 		jr	ra
 1081              		.cfi_endproc
 1082              	.LFE54:
 1084              		.section	.text._ZN5Riscv6mc_sipEm,"axG",@progbits,_ZN5Riscv6mc_sipEm,comdat
 1085              		.align	2
 1086              		.weak	_ZN5Riscv6mc_sipEm
 1088              	_ZN5Riscv6mc_sipEm:
 1089              	.LFB10:
 1090              		.file 4 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 5/17/23.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJEKAT2023_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJEKAT2023_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** class Riscv {
  11:src/../h/Riscv.hpp **** public:
  12:src/../h/Riscv.hpp **** 
  13:src/../h/Riscv.hpp **** 	static void returnFromInterrupt();
  14:src/../h/Riscv.hpp **** 
  15:src/../h/Riscv.hpp **** 	//read scause
  16:src/../h/Riscv.hpp **** 	static uint64 r_scause();
  17:src/../h/Riscv.hpp **** 
  18:src/../h/Riscv.hpp **** 	//write scause
  19:src/../h/Riscv.hpp **** 	static void w_scause(uint64 scause);
  20:src/../h/Riscv.hpp **** 
  21:src/../h/Riscv.hpp **** 	//read sepc
  22:src/../h/Riscv.hpp **** 	static uint64 r_sepc();
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp **** 	//write sepc
  25:src/../h/Riscv.hpp **** 	static void w_sepc(uint64 sepc);
  26:src/../h/Riscv.hpp **** 
  27:src/../h/Riscv.hpp **** 	//read stvec
  28:src/../h/Riscv.hpp **** 	static uint64 r_stvec();
  29:src/../h/Riscv.hpp **** 
  30:src/../h/Riscv.hpp **** 	//write stvec
  31:src/../h/Riscv.hpp **** 	static void w_stvec(uint64 stvec);
  32:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/cclBh4wk.s 			page 28


  33:src/../h/Riscv.hpp **** 	enum BitMaskSip {
  34:src/../h/Riscv.hpp **** 		//postoji zahtev za softverski prekid
  35:src/../h/Riscv.hpp **** 		SIP_SSIP = (1 << 1),
  36:src/../h/Riscv.hpp **** 		//postoji prekid od tajmera
  37:src/../h/Riscv.hpp **** 		SIP_STIP = (1 << 5),
  38:src/../h/Riscv.hpp **** 		//postoji zahtev za spoljasnji hardverski prekid
  39:src/../h/Riscv.hpp **** 		SIP_SEIP = (1 << 9)
  40:src/../h/Riscv.hpp **** 	};
  41:src/../h/Riscv.hpp **** 
  42:src/../h/Riscv.hpp **** 	//mask set sip
  43:src/../h/Riscv.hpp **** 	static void ms_sip(uint64 mask);
  44:src/../h/Riscv.hpp **** 
  45:src/../h/Riscv.hpp **** 	//mask clear sip
  46:src/../h/Riscv.hpp **** 	static void mc_sip(uint64 mask);
  47:src/../h/Riscv.hpp **** 
  48:src/../h/Riscv.hpp **** 	//read sip
  49:src/../h/Riscv.hpp **** 	static uint64 r_sip();
  50:src/../h/Riscv.hpp **** 
  51:src/../h/Riscv.hpp **** 	//write sip
  52:src/../h/Riscv.hpp **** 	static void w_sip(uint64 sip);
  53:src/../h/Riscv.hpp **** 
  54:src/../h/Riscv.hpp **** 	//kada se pozove sret, SIE dobija vrednost SPIE, SPIE se postavlja na 1,
  55:src/../h/Riscv.hpp **** 	//rezim se postavlja na osnovu SPP bita, SPP se postavlja na 0
  56:src/../h/Riscv.hpp **** 	enum BitMaskSstatus {
  57:src/../h/Riscv.hpp **** 		//1 - dozvoljeni prekidi; 0- nedozvoljeni prekidi; igonrise se u korisnickom rezimu
  58:src/../h/Riscv.hpp **** 		SSTATUS_SIE = (1 << 1),
  59:src/../h/Riscv.hpp **** 		//prethodna vrednost bita SIE
  60:src/../h/Riscv.hpp **** 		SSTATUS_SPIE = (1 << 5),
  61:src/../h/Riscv.hpp **** 		//iz kog rezima se desio skok; 0 - iz korisnickog; 1 - iz sistemskog
  62:src/../h/Riscv.hpp **** 		SSTATUS_SPP = (1 << 8)
  63:src/../h/Riscv.hpp **** 	};
  64:src/../h/Riscv.hpp **** 
  65:src/../h/Riscv.hpp **** 	//mask set sstatus
  66:src/../h/Riscv.hpp **** 	static void ms_sstatus(uint64 mask);
  67:src/../h/Riscv.hpp **** 
  68:src/../h/Riscv.hpp **** 	//mask clear sstatus
  69:src/../h/Riscv.hpp **** 	static void mc_sstatus(uint64 mask);
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp **** 	//read sstatus
  72:src/../h/Riscv.hpp **** 	static uint64 r_sstatus();
  73:src/../h/Riscv.hpp **** 
  74:src/../h/Riscv.hpp **** 	//write sstatus
  75:src/../h/Riscv.hpp **** 	static void w_sstatus(uint64 sstatus);
  76:src/../h/Riscv.hpp **** 
  77:src/../h/Riscv.hpp **** 	//upisuje kod sistemskog poziva u registar a0
  78:src/../h/Riscv.hpp **** 	static void loadOpCode(uint64 opCode);
  79:src/../h/Riscv.hpp **** 
  80:src/../h/Riscv.hpp **** };
  81:src/../h/Riscv.hpp **** 
  82:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause() {
  83:src/../h/Riscv.hpp **** 	uint64 volatile scause;
  84:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[scause], scause": [scause] "=r"(scause));
  85:src/../h/Riscv.hpp **** 	return scause;
  86:src/../h/Riscv.hpp **** }
  87:src/../h/Riscv.hpp **** 
  88:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
  89:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw scause, %[scause]": :[scause] "r"(scause));
GAS LISTING /tmp/cclBh4wk.s 			page 29


  90:src/../h/Riscv.hpp **** }
  91:src/../h/Riscv.hpp **** 
  92:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc() {
  93:src/../h/Riscv.hpp **** 	uint64 volatile sepc;
  94:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[sepc], sepc": [sepc] "=r"(sepc));
  95:src/../h/Riscv.hpp **** 	return sepc;
  96:src/../h/Riscv.hpp **** }
  97:src/../h/Riscv.hpp **** 
  98:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
  99:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 100:src/../h/Riscv.hpp **** }
 101:src/../h/Riscv.hpp **** 
 102:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec() {
 103:src/../h/Riscv.hpp **** 	uint64 volatile stvec;
 104:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[stvec], stvec": [stvec] "=r"(stvec));
 105:src/../h/Riscv.hpp **** 	return stvec;
 106:src/../h/Riscv.hpp **** }
 107:src/../h/Riscv.hpp **** 
 108:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 109:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw stvec, %[stvec]": :[stvec] "r"(stvec));
 110:src/../h/Riscv.hpp **** }
 111:src/../h/Riscv.hpp **** 
 112:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 113:src/../h/Riscv.hpp **** 	__asm__ volatile("csrs sip, %[mask]": :[mask] "r"(mask));
 114:src/../h/Riscv.hpp **** }
 115:src/../h/Riscv.hpp **** 
 116:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 1091              		.loc 4 116 40 is_stmt 1
 1092              		.cfi_startproc
 1093              	.LVL105:
 1094 0000 130101FF 		addi	sp,sp,-16
 1095              		.cfi_def_cfa_offset 16
 1096 0004 23348100 		sd	s0,8(sp)
 1097              		.cfi_offset 8, -8
 1098 0008 13040101 		addi	s0,sp,16
 1099              		.cfi_def_cfa 8, 0
 117:src/../h/Riscv.hpp **** 	__asm__ volatile("csrc sip, %[mask]": :[mask] "r"(mask));
 1100              		.loc 4 117 2
 1101              		.loc 4 117 58 is_stmt 0
 1102              	#APP
 1103              	# 117 "src/../h/Riscv.hpp" 1
 118              	}
 1104              		csrc sip, a0
 1105              	# 0 "" 2
 1106              		.loc 4 118 1
 1107              	#NO_APP
 1108 0010 03348100 		ld	s0,8(sp)
 1109              		.cfi_restore 8
 1110              		.cfi_def_cfa 2, 16
 1111 0014 13010101 		addi	sp,sp,16
 1112              		.cfi_def_cfa_offset 0
 1113 0018 67800000 		jr	ra
 1114              		.cfi_endproc
 1115              	.LFE10:
 1117              		.section	.text._ZN3TCB9setStatusENS_12ThreadStatusE,"axG",@progbits,_ZN3TCB9setStatusENS_12ThreadS
 1118              		.align	2
 1119              		.weak	_ZN3TCB9setStatusENS_12ThreadStatusE
GAS LISTING /tmp/cclBh4wk.s 			page 30


 1121              	_ZN3TCB9setStatusENS_12ThreadStatusE:
 1122              	.LFB32:
 1123              		.file 5 "src/../h/TCB.hpp"
   1:src/../h/TCB.hpp **** //
   2:src/../h/TCB.hpp **** // Created by os on 5/23/23.
   3:src/../h/TCB.hpp **** //
   4:src/../h/TCB.hpp **** 
   5:src/../h/TCB.hpp **** #ifndef PROJEKAT2023_TCB_HPP
   6:src/../h/TCB.hpp **** #define PROJEKAT2023_TCB_HPP
   7:src/../h/TCB.hpp **** 
   8:src/../h/TCB.hpp **** #include "../lib/hw.h"
   9:src/../h/TCB.hpp **** #include "../h/ThreadQueue.hpp"
  10:src/../h/TCB.hpp **** 
  11:src/../h/TCB.hpp **** int main();
  12:src/../h/TCB.hpp **** class TCB {
  13:src/../h/TCB.hpp **** public:
  14:src/../h/TCB.hpp ****     friend class Scheduler;
  15:src/../h/TCB.hpp **** 
  16:src/../h/TCB.hpp ****     using Body = void (*)(void*);
  17:src/../h/TCB.hpp **** 
  18:src/../h/TCB.hpp ****     enum ThreadStatus {
  19:src/../h/TCB.hpp ****         CREATED, ACTIVE, BLOCKED, JOINING, SLEEPING, FINISHED
  20:src/../h/TCB.hpp ****     };
  21:src/../h/TCB.hpp **** 
  22:src/../h/TCB.hpp ****     void setStatus(ThreadStatus stat) { this->status = stat; }
 1124              		.loc 5 22 10 is_stmt 1
 1125              		.cfi_startproc
 1126              	.LVL106:
 1127 0000 130101FF 		addi	sp,sp,-16
 1128              		.cfi_def_cfa_offset 16
 1129 0004 23348100 		sd	s0,8(sp)
 1130              		.cfi_offset 8, -8
 1131 0008 13040101 		addi	s0,sp,16
 1132              		.cfi_def_cfa 8, 0
 1133              		.loc 5 22 41
 1134              		.loc 5 22 54 is_stmt 0
 1135 000c 232CB504 		sw	a1,88(a0)
 1136              		.loc 5 22 62
 1137 0010 03348100 		ld	s0,8(sp)
 1138              		.cfi_restore 8
 1139              		.cfi_def_cfa 2, 16
 1140 0014 13010101 		addi	sp,sp,16
 1141              		.cfi_def_cfa_offset 0
 1142 0018 67800000 		jr	ra
 1143              		.cfi_endproc
 1144              	.LFE32:
 1146              		.section	.text._ZN3TCB12getTimeSliceEv,"axG",@progbits,_ZN3TCB12getTimeSliceEv,comdat
 1147              		.align	2
 1148              		.weak	_ZN3TCB12getTimeSliceEv
 1150              	_ZN3TCB12getTimeSliceEv:
 1151              	.LFB34:
  23:src/../h/TCB.hpp **** 
  24:src/../h/TCB.hpp ****     ThreadStatus getStatus() { return this->status; }
  25:src/../h/TCB.hpp **** 
  26:src/../h/TCB.hpp ****     static TCB* createThread(Body function, void* args, uint64* stack);
  27:src/../h/TCB.hpp **** 
  28:src/../h/TCB.hpp ****     static void start(TCB* newTcb);
GAS LISTING /tmp/cclBh4wk.s 			page 31


  29:src/../h/TCB.hpp **** 
  30:src/../h/TCB.hpp ****     uint64 getTimeSlice() { return timeSlice; }
 1152              		.loc 5 30 12 is_stmt 1
 1153              		.cfi_startproc
 1154              	.LVL107:
 1155 0000 130101FF 		addi	sp,sp,-16
 1156              		.cfi_def_cfa_offset 16
 1157 0004 23348100 		sd	s0,8(sp)
 1158              		.cfi_offset 8, -8
 1159 0008 13040101 		addi	s0,sp,16
 1160              		.cfi_def_cfa 8, 0
 1161              		.loc 5 30 29
 1162              		.loc 5 30 47 is_stmt 0
 1163 000c 03358502 		ld	a0,40(a0)
 1164              	.LVL108:
 1165 0010 03348100 		ld	s0,8(sp)
 1166              		.cfi_restore 8
 1167              		.cfi_def_cfa 2, 16
 1168 0014 13010101 		addi	sp,sp,16
 1169              		.cfi_def_cfa_offset 0
 1170 0018 67800000 		jr	ra
 1171              		.cfi_endproc
 1172              	.LFE34:
 1174              		.section	.text._ZN3TCB7getBodyEv,"axG",@progbits,_ZN3TCB7getBodyEv,comdat
 1175              		.align	2
 1176              		.weak	_ZN3TCB7getBodyEv
 1178              	_ZN3TCB7getBodyEv:
 1179              	.LFB36:
  31:src/../h/TCB.hpp **** 
  32:src/../h/TCB.hpp ****     void setTimeSlice(uint64 value) { timeSlice = value; }
  33:src/../h/TCB.hpp **** 
  34:src/../h/TCB.hpp ****     Body getBody() { return threadFunction; }
 1180              		.loc 5 34 10 is_stmt 1
 1181              		.cfi_startproc
 1182              	.LVL109:
 1183 0000 130101FF 		addi	sp,sp,-16
 1184              		.cfi_def_cfa_offset 16
 1185 0004 23348100 		sd	s0,8(sp)
 1186              		.cfi_offset 8, -8
 1187 0008 13040101 		addi	s0,sp,16
 1188              		.cfi_def_cfa 8, 0
 1189              		.loc 5 34 22
 1190              		.loc 5 34 45 is_stmt 0
 1191 000c 03350501 		ld	a0,16(a0)
 1192              	.LVL110:
 1193 0010 03348100 		ld	s0,8(sp)
 1194              		.cfi_restore 8
 1195              		.cfi_def_cfa 2, 16
 1196 0014 13010101 		addi	sp,sp,16
 1197              		.cfi_def_cfa_offset 0
 1198 0018 67800000 		jr	ra
 1199              		.cfi_endproc
 1200              	.LFE36:
 1202              		.section	.text._ZN3TCB10getRunningEv,"axG",@progbits,_ZN3TCB10getRunningEv,comdat
 1203              		.align	2
 1204              		.weak	_ZN3TCB10getRunningEv
 1206              	_ZN3TCB10getRunningEv:
GAS LISTING /tmp/cclBh4wk.s 			page 32


 1207              	.LFB37:
  35:src/../h/TCB.hpp **** 
  36:src/../h/TCB.hpp ****     static TCB* getRunning() { return running; }
 1208              		.loc 5 36 17 is_stmt 1
 1209              		.cfi_startproc
 1210 0000 130101FF 		addi	sp,sp,-16
 1211              		.cfi_def_cfa_offset 16
 1212 0004 23348100 		sd	s0,8(sp)
 1213              		.cfi_offset 8, -8
 1214 0008 13040101 		addi	s0,sp,16
 1215              		.cfi_def_cfa 8, 0
 1216              		.loc 5 36 32
 1217              		.loc 5 36 48 is_stmt 0
 1218 000c 97070000 		la	a5,_ZN3TCB7runningE
 1218      83B70700 
 1219 0014 03B50700 		ld	a0,0(a5)
 1220 0018 03348100 		ld	s0,8(sp)
 1221              		.cfi_restore 8
 1222              		.cfi_def_cfa 2, 16
 1223 001c 13010101 		addi	sp,sp,16
 1224              		.cfi_def_cfa_offset 0
 1225 0020 67800000 		jr	ra
 1226              		.cfi_endproc
 1227              	.LFE37:
 1229              		.section	.text._ZN3TCB19getRunningTimeSliceEv,"axG",@progbits,_ZN3TCB19getRunningTimeSliceEv,comda
 1230              		.align	2
 1231              		.weak	_ZN3TCB19getRunningTimeSliceEv
 1233              	_ZN3TCB19getRunningTimeSliceEv:
 1234              	.LFB39:
  37:src/../h/TCB.hpp **** 
  38:src/../h/TCB.hpp ****     static void setRunning(TCB* newRunning) { running = newRunning; }
  39:src/../h/TCB.hpp **** 
  40:src/../h/TCB.hpp ****     static uint64 &getRunningTimeSlice() { return runningTimeSlice; }
 1235              		.loc 5 40 20 is_stmt 1
 1236              		.cfi_startproc
 1237 0000 130101FF 		addi	sp,sp,-16
 1238              		.cfi_def_cfa_offset 16
 1239 0004 23348100 		sd	s0,8(sp)
 1240              		.cfi_offset 8, -8
 1241 0008 13040101 		addi	s0,sp,16
 1242              		.cfi_def_cfa 8, 0
 1243              		.loc 5 40 44
 1244              		.loc 5 40 69 is_stmt 0
 1245 000c 17050000 		la	a0,_ZN3TCB16runningTimeSliceE
 1245      03350500 
 1246 0014 03348100 		ld	s0,8(sp)
 1247              		.cfi_restore 8
 1248              		.cfi_def_cfa 2, 16
 1249 0018 13010101 		addi	sp,sp,16
 1250              		.cfi_def_cfa_offset 0
 1251 001c 67800000 		jr	ra
 1252              		.cfi_endproc
 1253              	.LFE39:
 1255              		.text
 1256              	.Letext0:
 1257              		.file 6 "src/../lib/hw.h"
 1258              		.file 7 "src/../h/syscall_c.hpp"
GAS LISTING /tmp/cclBh4wk.s 			page 33


 1259              		.file 8 "src/../h/Scheduler.hpp"
 1260              		.file 9 "src/../h/KConsole.hpp"
 1261              		.file 10 "src/../h/KMemory.hpp"
 1262              		.file 11 "src/../h/../test/printing.hpp"
 1263              		.file 12 "src/../h/helper.hpp"
 5938              		.align	3
 5941              	DW.ref.__gxx_personality_v0:
 5942 0000 00000000 		.dword	__gxx_personality_v0
 5942      00000000 
 5943              		.ident	"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04) 9.4.0"
 5944              		.section	.note.GNU-stack,"",@progbits
GAS LISTING /tmp/cclBh4wk.s 			page 34


DEFINED SYMBOLS
                            *ABS*:0000000000000000 interruptRoutine.cpp
     /tmp/cclBh4wk.s:10     .text._ZN4KSemD2Ev:0000000000000000 _ZN4KSemD2Ev
     /tmp/cclBh4wk.s:14     .text._ZN4KSemD2Ev:0000000000000000 .L0 
     /tmp/cclBh4wk.s:5941   .data.rel.local.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/cclBh4wk.s:18     .text._ZN4KSemD2Ev:0000000000000000 .L0 
     /tmp/cclBh4wk.s:19     .text._ZN4KSemD2Ev:0000000000000004 .L0 
     /tmp/cclBh4wk.s:23     .text._ZN4KSemD2Ev:0000000000000010 .L0 
     /tmp/cclBh4wk.s:24     .text._ZN4KSemD2Ev:0000000000000010 .L0 
     /tmp/cclBh4wk.s:25     .text._ZN4KSemD2Ev:0000000000000010 .L0 
     /tmp/cclBh4wk.s:27     .text._ZN4KSemD2Ev:0000000000000014 .L0 
     /tmp/cclBh4wk.s:35     .text._ZN4KSemD2Ev:0000000000000018 .L0 
     /tmp/cclBh4wk.s:38     .text._ZN4KSemD2Ev:0000000000000018 .L0 
     /tmp/cclBh4wk.s:39     .text._ZN4KSemD2Ev:0000000000000018 .L0 
     /tmp/cclBh4wk.s:40     .text._ZN4KSemD2Ev:0000000000000018 .L0 
     /tmp/cclBh4wk.s:45     .text._ZN4KSemD2Ev:000000000000001c .L0 
     /tmp/cclBh4wk.s:49     .text._ZN4KSemD2Ev:0000000000000020 .L0 
     /tmp/cclBh4wk.s:50     .text._ZN4KSemD2Ev:0000000000000020 .L0 
     /tmp/cclBh4wk.s:51     .text._ZN4KSemD2Ev:0000000000000020 .L0 
     /tmp/cclBh4wk.s:53     .text._ZN4KSemD2Ev:0000000000000024 .L0 
     /tmp/cclBh4wk.s:55     .text._ZN4KSemD2Ev:0000000000000028 .L0 
     /tmp/cclBh4wk.s:56     .text._ZN4KSemD2Ev:0000000000000028 .L0 
     /tmp/cclBh4wk.s:61     .text._ZN4KSemD2Ev:000000000000002c .L0 
     /tmp/cclBh4wk.s:62     .text._ZN4KSemD2Ev:000000000000002c .L0 
     /tmp/cclBh4wk.s:65     .text._ZN4KSemD2Ev:0000000000000034 .L0 
     /tmp/cclBh4wk.s:73     .text._ZN4KSemD2Ev:0000000000000038 .L0 
     /tmp/cclBh4wk.s:74     .text._ZN4KSemD2Ev:000000000000003c .L0 
     /tmp/cclBh4wk.s:76     .text._ZN4KSemD2Ev:0000000000000040 .L0 
     /tmp/cclBh4wk.s:77     .text._ZN4KSemD2Ev:0000000000000040 .L0 
     /tmp/cclBh4wk.s:79     .text._ZN4KSemD2Ev:0000000000000044 .L0 
     /tmp/cclBh4wk.s:82     .text._ZN4KSemD2Ev:0000000000000048 .L0 
     /tmp/cclBh4wk.s:84     .text._ZN4KSemD2Ev:000000000000004c .L0 
     /tmp/cclBh4wk.s:10     .text._ZN4KSemD2Ev:0000000000000000 _ZN4KSemD1Ev
     /tmp/cclBh4wk.s:120    .text:0000000000000000 interruptRoutine
     /tmp/cclBh4wk.s:124    .text:0000000000000000 .L0 
     /tmp/cclBh4wk.s:125    .text:0000000000000000 .L0 
     /tmp/cclBh4wk.s:126    .text:0000000000000004 .L0 
     /tmp/cclBh4wk.s:130    .text:0000000000000010 .L0 
     /tmp/cclBh4wk.s:131    .text:0000000000000010 .L0 
     /tmp/cclBh4wk.s:132    .text:0000000000000010 .L0 
     /tmp/cclBh4wk.s:134    .text:0000000000000014 .L0 
     /tmp/cclBh4wk.s:136    .text:0000000000000014 .L0 
     /tmp/cclBh4wk.s:137    .text:0000000000000014 .L0 
src/interruptRoutine.cpp:24     .text:0000000000000014 .L0 
     /tmp/cclBh4wk.s:146    .text:000000000000001c .L0 
src/interruptRoutine.cpp:25     .text:000000000000001c .L0 
     /tmp/cclBh4wk.s:156    .text:0000000000000024 .L0 
src/interruptRoutine.cpp:26     .text:0000000000000024 .L0 
     /tmp/cclBh4wk.s:166    .text:000000000000002c .L0 
     /tmp/cclBh4wk.s:167    .text:000000000000002c .L0 
src/interruptRoutine.cpp:30     .text:000000000000002c .L0 
     /tmp/cclBh4wk.s:177    .text:0000000000000034 .L0 
src/interruptRoutine.cpp:31     .text:0000000000000034 .L0 
     /tmp/cclBh4wk.s:187    .text:000000000000003c .L0 
src/interruptRoutine.cpp:32     .text:000000000000003c .L0 
     /tmp/cclBh4wk.s:197    .text:0000000000000044 .L0 
src/interruptRoutine.cpp:33     .text:0000000000000044 .L0 
GAS LISTING /tmp/cclBh4wk.s 			page 35


     /tmp/cclBh4wk.s:207    .text:000000000000004c .L0 
src/interruptRoutine.cpp:34     .text:000000000000004c .L0 
     /tmp/cclBh4wk.s:217    .text:0000000000000054 .L0 
src/interruptRoutine.cpp:35     .text:0000000000000054 .L0 
     /tmp/cclBh4wk.s:227    .text:000000000000005c .L0 
src/interruptRoutine.cpp:36     .text:000000000000005c .L0 
     /tmp/cclBh4wk.s:237    .text:0000000000000064 .L0 
src/interruptRoutine.cpp:37     .text:0000000000000064 .L0 
     /tmp/cclBh4wk.s:248    .text:000000000000006c .L0 
     /tmp/cclBh4wk.s:252    .text:0000000000000078 .L0 
     /tmp/cclBh4wk.s:257    .text:0000000000000084 .L0 
     /tmp/cclBh4wk.s:365    .text:0000000000000110 .L0 
     /tmp/cclBh4wk.s:366    .text:0000000000000110 .L0 
     /tmp/cclBh4wk.s:367    .text:0000000000000110 .L0 
     /tmp/cclBh4wk.s:371    .text:000000000000011c .L0 
src/interruptRoutine.cpp:46     .text:000000000000011c .L0 
     /tmp/cclBh4wk.s:378    .text:0000000000000120 .L0 
     /tmp/cclBh4wk.s:382    .text:0000000000000124 .L0 
     /tmp/cclBh4wk.s:383    .text:0000000000000124 .L0 
     /tmp/cclBh4wk.s:384    .text:0000000000000124 .L0 
     /tmp/cclBh4wk.s:389    .text:0000000000000134 .L0 
src/interruptRoutine.cpp:52     .text:0000000000000134 .L0 
     /tmp/cclBh4wk.s:396    .text:0000000000000138 .L0 
     /tmp/cclBh4wk.s:400    .text:000000000000013c .L0 
     /tmp/cclBh4wk.s:401    .text:000000000000013c .L0 
     /tmp/cclBh4wk.s:402    .text:000000000000013c .L0 
     /tmp/cclBh4wk.s:406    .text:0000000000000148 .L0 
     /tmp/cclBh4wk.s:408    .text:000000000000014c .L0 
     /tmp/cclBh4wk.s:415    .text:0000000000000164 .L0 
     /tmp/cclBh4wk.s:417    .text:0000000000000168 .L0 
     /tmp/cclBh4wk.s:418    .text:0000000000000168 .L0 
     /tmp/cclBh4wk.s:421    .text:0000000000000170 .L0 
     /tmp/cclBh4wk.s:423    .text:0000000000000174 .L0 
     /tmp/cclBh4wk.s:424    .text:0000000000000174 .L0 
     /tmp/cclBh4wk.s:426    .text:0000000000000178 .L0 
     /tmp/cclBh4wk.s:429    .text:0000000000000184 .L0 
     /tmp/cclBh4wk.s:430    .text:0000000000000184 .L0 
     /tmp/cclBh4wk.s:437    .text:0000000000000198 .L0 
src/interruptRoutine.cpp:65     .text:0000000000000198 .L0 
     /tmp/cclBh4wk.s:446    .text:00000000000001a0 .L0 
src/interruptRoutine.cpp:67     .text:00000000000001a0 .L0 
     /tmp/cclBh4wk.s:454    .text:00000000000001a4 .L0 
src/interruptRoutine.cpp:69     .text:00000000000001a4 .L0 
     /tmp/cclBh4wk.s:461    .text:00000000000001a8 .L0 
     /tmp/cclBh4wk.s:465    .text:00000000000001ac .L0 
     /tmp/cclBh4wk.s:466    .text:00000000000001ac .L0 
     /tmp/cclBh4wk.s:1206   .text._ZN3TCB10getRunningEv:0000000000000000 _ZN3TCB10getRunningEv
     /tmp/cclBh4wk.s:467    .text:00000000000001ac .L0 
     /tmp/cclBh4wk.s:1121   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000000 _ZN3TCB9setStatusENS_12ThreadStatusE
     /tmp/cclBh4wk.s:475    .text:00000000000001c8 .L0 
     /tmp/cclBh4wk.s:476    .text:00000000000001c8 .L0 
     /tmp/cclBh4wk.s:479    .text:00000000000001d0 .L0 
src/interruptRoutine.cpp:75     .text:00000000000001d0 .L0 
     /tmp/cclBh4wk.s:485    .text:00000000000001d4 .L0 
src/interruptRoutine.cpp:76     .text:00000000000001d4 .L0 
     /tmp/cclBh4wk.s:490    .text:00000000000001d8 .L0 
     /tmp/cclBh4wk.s:492    .text:00000000000001d8 .L0 
GAS LISTING /tmp/cclBh4wk.s 			page 36


     /tmp/cclBh4wk.s:495    .text:00000000000001e0 .L0 
     /tmp/cclBh4wk.s:499    .text:00000000000001e4 .L0 
     /tmp/cclBh4wk.s:500    .text:00000000000001e4 .L0 
     /tmp/cclBh4wk.s:501    .text:00000000000001e4 .L0 
     /tmp/cclBh4wk.s:504    .text:00000000000001ec .L0 
     /tmp/cclBh4wk.s:508    .text:00000000000001f0 .L0 
     /tmp/cclBh4wk.s:509    .text:00000000000001f0 .L0 
     /tmp/cclBh4wk.s:510    .text:00000000000001f0 .L0 
     /tmp/cclBh4wk.s:515    .text:0000000000000200 .L0 
     /tmp/cclBh4wk.s:516    .text:0000000000000200 .L0 
     /tmp/cclBh4wk.s:519    .text:0000000000000208 .L0 
     /tmp/cclBh4wk.s:523    .text:000000000000020c .L0 
     /tmp/cclBh4wk.s:524    .text:000000000000020c .L0 
     /tmp/cclBh4wk.s:525    .text:000000000000020c .L0 
     /tmp/cclBh4wk.s:528    .text:0000000000000214 .L0 
     /tmp/cclBh4wk.s:530    .text:0000000000000218 .L0 
     /tmp/cclBh4wk.s:535    .text:0000000000000228 .L0 
     /tmp/cclBh4wk.s:537    .text:000000000000022c .L0 
     /tmp/cclBh4wk.s:538    .text:000000000000022c .L0 
     /tmp/cclBh4wk.s:541    .text:0000000000000234 .L0 
     /tmp/cclBh4wk.s:543    .text:0000000000000238 .L0 
src/interruptRoutine.cpp:94     .text:0000000000000238 .L0 
     /tmp/cclBh4wk.s:552    .text:0000000000000240 .L0 
src/interruptRoutine.cpp:96     .text:0000000000000240 .L0 
     /tmp/cclBh4wk.s:560    .text:0000000000000244 .L0 
src/interruptRoutine.cpp:98     .text:0000000000000244 .L0 
     /tmp/cclBh4wk.s:567    .text:0000000000000248 .L0 
     /tmp/cclBh4wk.s:571    .text:000000000000024c .L0 
     /tmp/cclBh4wk.s:572    .text:000000000000024c .L0 
     /tmp/cclBh4wk.s:573    .text:000000000000024c .L0 
     /tmp/cclBh4wk.s:578    .text:000000000000025c .L0 
src/interruptRoutine.cpp:104    .text:000000000000025c .L0 
     /tmp/cclBh4wk.s:584    .text:0000000000000260 .L0 
     /tmp/cclBh4wk.s:586    .text:0000000000000260 .L0 
     /tmp/cclBh4wk.s:588    .text:0000000000000264 .L0 
     /tmp/cclBh4wk.s:590    .text:0000000000000268 .L0 
     /tmp/cclBh4wk.s:597    .text:0000000000000280 .L0 
     /tmp/cclBh4wk.s:601    .text:0000000000000284 .L0 
     /tmp/cclBh4wk.s:602    .text:0000000000000284 .L0 
     /tmp/cclBh4wk.s:603    .text:0000000000000284 .L0 
     /tmp/cclBh4wk.s:608    .text:0000000000000294 .L0 
src/interruptRoutine.cpp:111    .text:0000000000000294 .L0 
     /tmp/cclBh4wk.s:615    .text:0000000000000298 .L0 
     /tmp/cclBh4wk.s:619    .text:000000000000029c .L0 
     /tmp/cclBh4wk.s:620    .text:000000000000029c .L0 
     /tmp/cclBh4wk.s:621    .text:000000000000029c .L0 
     /tmp/cclBh4wk.s:626    .text:00000000000002ac .L0 
src/interruptRoutine.cpp:117    .text:00000000000002ac .L0 
     /tmp/cclBh4wk.s:633    .text:00000000000002b0 .L0 
     /tmp/cclBh4wk.s:637    .text:00000000000002b4 .L0 
     /tmp/cclBh4wk.s:638    .text:00000000000002b4 .L0 
     /tmp/cclBh4wk.s:641    .text:00000000000002bc .L0 
src/interruptRoutine.cpp:123    .text:00000000000002bc .L0 
     /tmp/cclBh4wk.s:650    .text:00000000000002c4 .L0 
src/interruptRoutine.cpp:125    .text:00000000000002c4 .L0 
     /tmp/cclBh4wk.s:658    .text:00000000000002c8 .L0 
src/interruptRoutine.cpp:127    .text:00000000000002c8 .L0 
GAS LISTING /tmp/cclBh4wk.s 			page 37


     /tmp/cclBh4wk.s:665    .text:00000000000002cc .L0 
     /tmp/cclBh4wk.s:668    .text:00000000000002d4 .L0 
     /tmp/cclBh4wk.s:669    .text:00000000000002d4 .L0 
     /tmp/cclBh4wk.s:677    .text:00000000000002f0 .L0 
     /tmp/cclBh4wk.s:678    .text:00000000000002f0 .L0 
     /tmp/cclBh4wk.s:681    .text:00000000000002f8 .L0 
     /tmp/cclBh4wk.s:685    .text:00000000000002fc .L0 
     /tmp/cclBh4wk.s:686    .text:00000000000002fc .L0 
     /tmp/cclBh4wk.s:687    .text:00000000000002fc .L0 
     /tmp/cclBh4wk.s:690    .text:0000000000000304 .L0 
src/interruptRoutine.cpp:136    .text:0000000000000304 .L0 
     /tmp/cclBh4wk.s:697    .text:0000000000000308 .L0 
     /tmp/cclBh4wk.s:701    .text:000000000000030c .L0 
     /tmp/cclBh4wk.s:702    .text:000000000000030c .L0 
     /tmp/cclBh4wk.s:703    .text:000000000000030c .L0 
     /tmp/cclBh4wk.s:709    .text:0000000000000320 .L0 
     /tmp/cclBh4wk.s:713    .text:0000000000000324 .L0 
     /tmp/cclBh4wk.s:714    .text:0000000000000324 .L0 
     /tmp/cclBh4wk.s:715    .text:0000000000000324 .L0 
     /tmp/cclBh4wk.s:719    .text:0000000000000330 .L0 
     /tmp/cclBh4wk.s:721    .text:0000000000000334 .L0 
     /tmp/cclBh4wk.s:728    .text:000000000000034c .L0 
     /tmp/cclBh4wk.s:730    .text:0000000000000350 .L0 
     /tmp/cclBh4wk.s:731    .text:0000000000000350 .L0 
     /tmp/cclBh4wk.s:734    .text:0000000000000358 .L0 
     /tmp/cclBh4wk.s:736    .text:000000000000035c .L0 
src/interruptRoutine.cpp:151    .text:000000000000035c .L0 
     /tmp/cclBh4wk.s:745    .text:0000000000000364 .L0 
src/interruptRoutine.cpp:153    .text:0000000000000364 .L0 
     /tmp/cclBh4wk.s:753    .text:0000000000000368 .L0 
src/interruptRoutine.cpp:155    .text:0000000000000368 .L0 
     /tmp/cclBh4wk.s:760    .text:000000000000036c .L0 
     /tmp/cclBh4wk.s:764    .text:0000000000000370 .L0 
     /tmp/cclBh4wk.s:765    .text:0000000000000370 .L0 
     /tmp/cclBh4wk.s:766    .text:0000000000000370 .L0 
     /tmp/cclBh4wk.s:1178   .text._ZN3TCB7getBodyEv:0000000000000000 _ZN3TCB7getBodyEv
     /tmp/cclBh4wk.s:772    .text:0000000000000384 .L0 
     /tmp/cclBh4wk.s:777    .text:0000000000000398 .L0 
     /tmp/cclBh4wk.s:779    .text:000000000000039c .L0 
     /tmp/cclBh4wk.s:780    .text:000000000000039c .L0 
     /tmp/cclBh4wk.s:785    .text:00000000000003ac .L0 
     /tmp/cclBh4wk.s:789    .text:00000000000003b0 .L0 
     /tmp/cclBh4wk.s:790    .text:00000000000003b0 .L0 
     /tmp/cclBh4wk.s:791    .text:00000000000003b0 .L0 
     /tmp/cclBh4wk.s:795    .text:00000000000003bc .L0 
     /tmp/cclBh4wk.s:799    .text:00000000000003c0 .L0 
     /tmp/cclBh4wk.s:800    .text:00000000000003c0 .L0 
     /tmp/cclBh4wk.s:801    .text:00000000000003c0 .L0 
     /tmp/cclBh4wk.s:805    .text:00000000000003d0 .L0 
     /tmp/cclBh4wk.s:806    .text:00000000000003d0 .L0 
     /tmp/cclBh4wk.s:810    .text:00000000000003dc .L0 
     /tmp/cclBh4wk.s:811    .text:00000000000003dc .L0 
     /tmp/cclBh4wk.s:815    .text:00000000000003ec .L0 
     /tmp/cclBh4wk.s:816    .text:00000000000003ec .L0 
     /tmp/cclBh4wk.s:820    .text:00000000000003f8 .L0 
     /tmp/cclBh4wk.s:821    .text:00000000000003f8 .L0 
     /tmp/cclBh4wk.s:825    .text:0000000000000408 .L0 
GAS LISTING /tmp/cclBh4wk.s 			page 38


     /tmp/cclBh4wk.s:826    .text:0000000000000408 .L0 
     /tmp/cclBh4wk.s:830    .text:0000000000000414 .L0 
     /tmp/cclBh4wk.s:833    .text:0000000000000418 .L0 
     /tmp/cclBh4wk.s:837    .text:0000000000000420 .L0 
     /tmp/cclBh4wk.s:841    .text:0000000000000428 .L0 
     /tmp/cclBh4wk.s:844    .text:000000000000042c .L0 
     /tmp/cclBh4wk.s:845    .text:000000000000042c .L0 
     /tmp/cclBh4wk.s:850    .text:0000000000000438 .L0 
     /tmp/cclBh4wk.s:851    .text:0000000000000438 .L0 
     /tmp/cclBh4wk.s:857    .text:0000000000000440 .L0 
     /tmp/cclBh4wk.s:859    .text:0000000000000440 .L0 
     /tmp/cclBh4wk.s:868    .text:0000000000000448 .L0 
     /tmp/cclBh4wk.s:875    .text:000000000000044c .L0 
     /tmp/cclBh4wk.s:883    .text:0000000000000460 .L0 
     /tmp/cclBh4wk.s:884    .text:0000000000000460 .L0 
     /tmp/cclBh4wk.s:888    .text:000000000000046c .L0 
     /tmp/cclBh4wk.s:891    .text:0000000000000470 .L0 
     /tmp/cclBh4wk.s:895    .text:000000000000047c .L0 
     /tmp/cclBh4wk.s:896    .text:000000000000047c .L0 
     /tmp/cclBh4wk.s:900    .text:000000000000048c .L0 
     /tmp/cclBh4wk.s:902    .text:0000000000000490 .L0 
     /tmp/cclBh4wk.s:904    .text:0000000000000494 .L0 
     /tmp/cclBh4wk.s:905    .text:0000000000000494 .L0 
     /tmp/cclBh4wk.s:916    .text:00000000000004b4 .L0 
     /tmp/cclBh4wk.s:917    .text:00000000000004b4 .L0 
     /tmp/cclBh4wk.s:923    .text:00000000000004c4 .L0 
     /tmp/cclBh4wk.s:924    .text:00000000000004c4 .L0 
     /tmp/cclBh4wk.s:930    .text:00000000000004d8 .L0 
     /tmp/cclBh4wk.s:931    .text:00000000000004d8 .L0 
     /tmp/cclBh4wk.s:937    .text:00000000000004e0 .L0 
     /tmp/cclBh4wk.s:939    .text:00000000000004e0 .L0 
     /tmp/cclBh4wk.s:945    .text:00000000000004e8 .L0 
     /tmp/cclBh4wk.s:947    .text:00000000000004e8 .L0 
     /tmp/cclBh4wk.s:1088   .text._ZN5Riscv6mc_sipEm:0000000000000000 _ZN5Riscv6mc_sipEm
     /tmp/cclBh4wk.s:955    .text:00000000000004f4 .L0 
     /tmp/cclBh4wk.s:962    .text:00000000000004f8 .L0 
     /tmp/cclBh4wk.s:968    .text:000000000000050c .L0 
     /tmp/cclBh4wk.s:969    .text:000000000000050c .L0 
     /tmp/cclBh4wk.s:972    .text:0000000000000514 .L0 
     /tmp/cclBh4wk.s:1233   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000000 _ZN3TCB19getRunningTimeSliceEv
     /tmp/cclBh4wk.s:973    .text:0000000000000514 .L0 
     /tmp/cclBh4wk.s:977    .text:0000000000000520 .L0 
     /tmp/cclBh4wk.s:979    .text:0000000000000524 .L0 
     /tmp/cclBh4wk.s:982    .text:000000000000052c .L0 
     /tmp/cclBh4wk.s:983    .text:000000000000052c .L0 
     /tmp/cclBh4wk.s:987    .text:0000000000000538 .L0 
     /tmp/cclBh4wk.s:989    .text:000000000000053c .L0 
     /tmp/cclBh4wk.s:1150   .text._ZN3TCB12getTimeSliceEv:0000000000000000 _ZN3TCB12getTimeSliceEv
     /tmp/cclBh4wk.s:997    .text:0000000000000558 .L0 
     /tmp/cclBh4wk.s:1001   .text:0000000000000564 .L0 
     /tmp/cclBh4wk.s:1003   .text:0000000000000568 .L0 
     /tmp/cclBh4wk.s:1004   .text:0000000000000568 .L0 
     /tmp/cclBh4wk.s:1008   .text:0000000000000570 .L0 
     /tmp/cclBh4wk.s:1009   .text:0000000000000570 .L0 
     /tmp/cclBh4wk.s:1015   .text:0000000000000578 .L0 
     /tmp/cclBh4wk.s:1017   .text:0000000000000578 .L0 
     /tmp/cclBh4wk.s:1023   .text:0000000000000580 .L0 
GAS LISTING /tmp/cclBh4wk.s 			page 39


     /tmp/cclBh4wk.s:1025   .text:0000000000000580 .L0 
     /tmp/cclBh4wk.s:1032   .text:000000000000058c .L0 
     /tmp/cclBh4wk.s:1039   .text:0000000000000590 .L0 
     /tmp/cclBh4wk.s:1040   .text:0000000000000590 .L0 
     /tmp/cclBh4wk.s:1044   .text:00000000000005a0 .L0 
     /tmp/cclBh4wk.s:1045   .text:00000000000005a0 .L0 
     /tmp/cclBh4wk.s:1049   .text:00000000000005b0 .L0 
     /tmp/cclBh4wk.s:1050   .text:00000000000005b0 .L0 
     /tmp/cclBh4wk.s:1054   .text:00000000000005bc .L0 
     /tmp/cclBh4wk.s:1055   .text:00000000000005bc .L0 
     /tmp/cclBh4wk.s:1059   .text:00000000000005cc .L0 
     /tmp/cclBh4wk.s:1060   .text:00000000000005cc .L0 
     /tmp/cclBh4wk.s:1068   .text:00000000000005d8 .L0 
     /tmp/cclBh4wk.s:1070   .text:00000000000005e0 .L0 
     /tmp/cclBh4wk.s:1072   .text:00000000000005e4 .L0 
     /tmp/cclBh4wk.s:1073   .text:00000000000005e4 .L0 
     /tmp/cclBh4wk.s:1076   .text:00000000000005e8 .L0 
     /tmp/cclBh4wk.s:1078   .text:00000000000005ec .L0 
     /tmp/cclBh4wk.s:1081   .text:00000000000005f0 .L0 
     /tmp/cclBh4wk.s:1092   .text._ZN5Riscv6mc_sipEm:0000000000000000 .L0 
     /tmp/cclBh4wk.s:1094   .text._ZN5Riscv6mc_sipEm:0000000000000000 .L0 
     /tmp/cclBh4wk.s:1095   .text._ZN5Riscv6mc_sipEm:0000000000000004 .L0 
     /tmp/cclBh4wk.s:1097   .text._ZN5Riscv6mc_sipEm:0000000000000008 .L0 
     /tmp/cclBh4wk.s:1099   .text._ZN5Riscv6mc_sipEm:000000000000000c .L0 
     /tmp/cclBh4wk.s:1101   .text._ZN5Riscv6mc_sipEm:000000000000000c .L0 
  src/../h/Riscv.hpp:117    .text._ZN5Riscv6mc_sipEm:000000000000000c .L0 
     /tmp/cclBh4wk.s:1108   .text._ZN5Riscv6mc_sipEm:0000000000000010 .L0 
     /tmp/cclBh4wk.s:1109   .text._ZN5Riscv6mc_sipEm:0000000000000014 .L0 
     /tmp/cclBh4wk.s:1110   .text._ZN5Riscv6mc_sipEm:0000000000000014 .L0 
     /tmp/cclBh4wk.s:1112   .text._ZN5Riscv6mc_sipEm:0000000000000018 .L0 
     /tmp/cclBh4wk.s:1114   .text._ZN5Riscv6mc_sipEm:000000000000001c .L0 
     /tmp/cclBh4wk.s:1125   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000000 .L0 
     /tmp/cclBh4wk.s:1127   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000000 .L0 
     /tmp/cclBh4wk.s:1128   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000004 .L0 
     /tmp/cclBh4wk.s:1130   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000008 .L0 
     /tmp/cclBh4wk.s:1132   .text._ZN3TCB9setStatusENS_12ThreadStatusE:000000000000000c .L0 
     /tmp/cclBh4wk.s:1134   .text._ZN3TCB9setStatusENS_12ThreadStatusE:000000000000000c .L0 
     /tmp/cclBh4wk.s:1135   .text._ZN3TCB9setStatusENS_12ThreadStatusE:000000000000000c .L0 
     /tmp/cclBh4wk.s:1137   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000010 .L0 
     /tmp/cclBh4wk.s:1138   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000014 .L0 
     /tmp/cclBh4wk.s:1139   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000014 .L0 
     /tmp/cclBh4wk.s:1141   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000018 .L0 
     /tmp/cclBh4wk.s:1143   .text._ZN3TCB9setStatusENS_12ThreadStatusE:000000000000001c .L0 
     /tmp/cclBh4wk.s:1153   .text._ZN3TCB12getTimeSliceEv:0000000000000000 .L0 
     /tmp/cclBh4wk.s:1155   .text._ZN3TCB12getTimeSliceEv:0000000000000000 .L0 
     /tmp/cclBh4wk.s:1156   .text._ZN3TCB12getTimeSliceEv:0000000000000004 .L0 
     /tmp/cclBh4wk.s:1158   .text._ZN3TCB12getTimeSliceEv:0000000000000008 .L0 
     /tmp/cclBh4wk.s:1160   .text._ZN3TCB12getTimeSliceEv:000000000000000c .L0 
     /tmp/cclBh4wk.s:1162   .text._ZN3TCB12getTimeSliceEv:000000000000000c .L0 
     /tmp/cclBh4wk.s:1163   .text._ZN3TCB12getTimeSliceEv:000000000000000c .L0 
     /tmp/cclBh4wk.s:1166   .text._ZN3TCB12getTimeSliceEv:0000000000000014 .L0 
     /tmp/cclBh4wk.s:1167   .text._ZN3TCB12getTimeSliceEv:0000000000000014 .L0 
     /tmp/cclBh4wk.s:1169   .text._ZN3TCB12getTimeSliceEv:0000000000000018 .L0 
     /tmp/cclBh4wk.s:1171   .text._ZN3TCB12getTimeSliceEv:000000000000001c .L0 
     /tmp/cclBh4wk.s:1181   .text._ZN3TCB7getBodyEv:0000000000000000 .L0 
     /tmp/cclBh4wk.s:1183   .text._ZN3TCB7getBodyEv:0000000000000000 .L0 
     /tmp/cclBh4wk.s:1184   .text._ZN3TCB7getBodyEv:0000000000000004 .L0 
GAS LISTING /tmp/cclBh4wk.s 			page 40


     /tmp/cclBh4wk.s:1186   .text._ZN3TCB7getBodyEv:0000000000000008 .L0 
     /tmp/cclBh4wk.s:1188   .text._ZN3TCB7getBodyEv:000000000000000c .L0 
     /tmp/cclBh4wk.s:1190   .text._ZN3TCB7getBodyEv:000000000000000c .L0 
     /tmp/cclBh4wk.s:1191   .text._ZN3TCB7getBodyEv:000000000000000c .L0 
     /tmp/cclBh4wk.s:1194   .text._ZN3TCB7getBodyEv:0000000000000014 .L0 
     /tmp/cclBh4wk.s:1195   .text._ZN3TCB7getBodyEv:0000000000000014 .L0 
     /tmp/cclBh4wk.s:1197   .text._ZN3TCB7getBodyEv:0000000000000018 .L0 
     /tmp/cclBh4wk.s:1199   .text._ZN3TCB7getBodyEv:000000000000001c .L0 
     /tmp/cclBh4wk.s:1209   .text._ZN3TCB10getRunningEv:0000000000000000 .L0 
     /tmp/cclBh4wk.s:1210   .text._ZN3TCB10getRunningEv:0000000000000000 .L0 
     /tmp/cclBh4wk.s:1211   .text._ZN3TCB10getRunningEv:0000000000000004 .L0 
     /tmp/cclBh4wk.s:1213   .text._ZN3TCB10getRunningEv:0000000000000008 .L0 
     /tmp/cclBh4wk.s:1215   .text._ZN3TCB10getRunningEv:000000000000000c .L0 
     /tmp/cclBh4wk.s:1217   .text._ZN3TCB10getRunningEv:000000000000000c .L0 
     /tmp/cclBh4wk.s:1218   .text._ZN3TCB10getRunningEv:000000000000000c .L0 
     /tmp/cclBh4wk.s:1221   .text._ZN3TCB10getRunningEv:000000000000001c .L0 
     /tmp/cclBh4wk.s:1222   .text._ZN3TCB10getRunningEv:000000000000001c .L0 
     /tmp/cclBh4wk.s:1224   .text._ZN3TCB10getRunningEv:0000000000000020 .L0 
     /tmp/cclBh4wk.s:1226   .text._ZN3TCB10getRunningEv:0000000000000024 .L0 
     /tmp/cclBh4wk.s:1236   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000000 .L0 
     /tmp/cclBh4wk.s:1237   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000000 .L0 
     /tmp/cclBh4wk.s:1238   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000004 .L0 
     /tmp/cclBh4wk.s:1240   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000008 .L0 
     /tmp/cclBh4wk.s:1242   .text._ZN3TCB19getRunningTimeSliceEv:000000000000000c .L0 
     /tmp/cclBh4wk.s:1244   .text._ZN3TCB19getRunningTimeSliceEv:000000000000000c .L0 
     /tmp/cclBh4wk.s:1245   .text._ZN3TCB19getRunningTimeSliceEv:000000000000000c .L0 
     /tmp/cclBh4wk.s:1247   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000018 .L0 
     /tmp/cclBh4wk.s:1248   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000018 .L0 
     /tmp/cclBh4wk.s:1250   .text._ZN3TCB19getRunningTimeSliceEv:000000000000001c .L0 
     /tmp/cclBh4wk.s:1252   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000020 .L0 
     /tmp/cclBh4wk.s:97     .text._ZN4KSemD2Ev:000000000000004c .L0 
     /tmp/cclBh4wk.s:1264   .text:00000000000005f0 .L0 
     /tmp/cclBh4wk.s:1117   .text._ZN5Riscv6mc_sipEm:000000000000001c .L0 
     /tmp/cclBh4wk.s:1146   .text._ZN3TCB9setStatusENS_12ThreadStatusE:000000000000001c .L0 
     /tmp/cclBh4wk.s:1174   .text._ZN3TCB12getTimeSliceEv:000000000000001c .L0 
     /tmp/cclBh4wk.s:1202   .text._ZN3TCB7getBodyEv:000000000000001c .L0 
     /tmp/cclBh4wk.s:1229   .text._ZN3TCB10getRunningEv:0000000000000024 .L0 
     /tmp/cclBh4wk.s:1255   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000020 .L0 
     /tmp/cclBh4wk.s:289    .rodata:0000000000000074 .L14
     /tmp/cclBh4wk.s:279    .text:00000000000000dc .L0 
     /tmp/cclBh4wk.s:283    .text:00000000000000f0 .L0 
     /tmp/cclBh4wk.s:426    .text:0000000000000178 .L0 
     /tmp/cclBh4wk.s:772    .text:0000000000000384 .L0 
     /tmp/cclBh4wk.s:99     .rodata:0000000000000000 .LC0
     /tmp/cclBh4wk.s:801    .text:00000000000003c0 .L0 
     /tmp/cclBh4wk.s:102    .rodata:0000000000000018 .LC1
     /tmp/cclBh4wk.s:811    .text:00000000000003dc .L0 
     /tmp/cclBh4wk.s:105    .rodata:0000000000000028 .LC2
     /tmp/cclBh4wk.s:821    .text:00000000000003f8 .L0 
     /tmp/cclBh4wk.s:896    .text:000000000000047c .L0 
     /tmp/cclBh4wk.s:905    .text:0000000000000494 .L0 
     /tmp/cclBh4wk.s:108    .rodata:0000000000000030 .LC3
     /tmp/cclBh4wk.s:917    .text:00000000000004b4 .L0 
     /tmp/cclBh4wk.s:111    .rodata:0000000000000048 .LC4
     /tmp/cclBh4wk.s:1040   .text:0000000000000590 .L0 
     /tmp/cclBh4wk.s:114    .rodata:0000000000000068 .LC5
     /tmp/cclBh4wk.s:1045   .text:00000000000005a0 .L0 
GAS LISTING /tmp/cclBh4wk.s 			page 41


     /tmp/cclBh4wk.s:1055   .text:00000000000005bc .L0 
     /tmp/cclBh4wk.s:255    .text:0000000000000084 .L7
     /tmp/cclBh4wk.s:870    .text:000000000000044c .L8
     /tmp/cclBh4wk.s:787    .text:00000000000003b0 .L9
     /tmp/cclBh4wk.s:797    .text:00000000000003c0 .L10
     /tmp/cclBh4wk.s:762    .text:0000000000000370 .L11
     /tmp/cclBh4wk.s:358    .text:0000000000000100 .L12
     /tmp/cclBh4wk.s:711    .text:0000000000000324 .L27
     /tmp/cclBh4wk.s:842    .text:000000000000042c .L28
     /tmp/cclBh4wk.s:444    .text:00000000000001a0 .L29
     /tmp/cclBh4wk.s:435    .text:0000000000000198 .L30
     /tmp/cclBh4wk.s:452    .text:00000000000001a4 .L31
     /tmp/cclBh4wk.s:550    .text:0000000000000240 .L32
     /tmp/cclBh4wk.s:558    .text:0000000000000244 .L33
     /tmp/cclBh4wk.s:831    .text:0000000000000418 .L47
     /tmp/cclBh4wk.s:648    .text:00000000000002c4 .L35
     /tmp/cclBh4wk.s:656    .text:00000000000002c8 .L36
     /tmp/cclBh4wk.s:835    .text:0000000000000420 .L48
     /tmp/cclBh4wk.s:743    .text:0000000000000364 .L38
     /tmp/cclBh4wk.s:751    .text:0000000000000368 .L39
     /tmp/cclBh4wk.s:839    .text:0000000000000428 .L49
     /tmp/cclBh4wk.s:1063   .text:00000000000005d8 .L50
     /tmp/cclBh4wk.s:957    .text:00000000000004f8 .L42
     /tmp/cclBh4wk.s:914    .text:00000000000004b4 .L43
     /tmp/cclBh4wk.s:921    .text:00000000000004c4 .L44
     /tmp/cclBh4wk.s:1034   .text:0000000000000590 .L45
     /tmp/cclBh4wk.s:1006   .text:0000000000000570 .L46
     /tmp/cclBh4wk.s:66     .text._ZN4KSemD2Ev:0000000000000038 .L1
     /tmp/cclBh4wk.s:30     .text._ZN4KSemD2Ev:0000000000000018 .L3
     /tmp/cclBh4wk.s:363    .text:0000000000000110 .L26
     /tmp/cclBh4wk.s:380    .text:0000000000000124 .L25
     /tmp/cclBh4wk.s:398    .text:000000000000013c .L24
     /tmp/cclBh4wk.s:463    .text:00000000000001ac .L23
     /tmp/cclBh4wk.s:497    .text:00000000000001e4 .L22
     /tmp/cclBh4wk.s:506    .text:00000000000001f0 .L21
     /tmp/cclBh4wk.s:521    .text:000000000000020c .L20
     /tmp/cclBh4wk.s:569    .text:000000000000024c .L19
     /tmp/cclBh4wk.s:599    .text:0000000000000284 .L18
     /tmp/cclBh4wk.s:617    .text:000000000000029c .L17
     /tmp/cclBh4wk.s:635    .text:00000000000002b4 .L16
     /tmp/cclBh4wk.s:683    .text:00000000000002fc .L15
     /tmp/cclBh4wk.s:699    .text:000000000000030c .L13
     /tmp/cclBh4wk.s:1218   .text._ZN3TCB10getRunningEv:000000000000000c .L0 
     /tmp/cclBh4wk.s:1245   .text._ZN3TCB19getRunningTimeSliceEv:000000000000000c .L0 
     /tmp/cclBh4wk.s:3540   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cclBh4wk.s:5839   .debug_str:0000000000000ab4 .LASF225
     /tmp/cclBh4wk.s:5723   .debug_str:0000000000000773 .LASF226
     /tmp/cclBh4wk.s:5787   .debug_str:0000000000000952 .LASF227
     /tmp/cclBh4wk.s:5441   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/cclBh4wk.s:5461   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cclBh4wk.s:5753   .debug_str:000000000000084b .LASF3
     /tmp/cclBh4wk.s:5621   .debug_str:0000000000000488 .LASF0
     /tmp/cclBh4wk.s:5647   .debug_str:0000000000000530 .LASF1
     /tmp/cclBh4wk.s:5765   .debug_str:00000000000008b0 .LASF2
     /tmp/cclBh4wk.s:5565   .debug_str:00000000000002ee .LASF4
     /tmp/cclBh4wk.s:5779   .debug_str:000000000000091b .LASF5
     /tmp/cclBh4wk.s:5633   .debug_str:00000000000004c5 .LASF6
GAS LISTING /tmp/cclBh4wk.s 			page 42


     /tmp/cclBh4wk.s:5479   .debug_str:0000000000000074 .LASF7
     /tmp/cclBh4wk.s:5731   .debug_str:00000000000007bb .LASF8
     /tmp/cclBh4wk.s:5721   .debug_str:0000000000000760 .LASF9
     /tmp/cclBh4wk.s:5637   .debug_str:00000000000004e9 .LASF10
     /tmp/cclBh4wk.s:5589   .debug_str:0000000000000390 .LASF11
     /tmp/cclBh4wk.s:5603   .debug_str:00000000000003f2 .LASF12
     /tmp/cclBh4wk.s:5509   .debug_str:000000000000013b .LASF13
     /tmp/cclBh4wk.s:5575   .debug_str:000000000000033e .LASF14
     /tmp/cclBh4wk.s:5525   .debug_str:00000000000001a1 .LASF15
     /tmp/cclBh4wk.s:5507   .debug_str:000000000000012b .LASF16
     /tmp/cclBh4wk.s:5813   .debug_str:0000000000000a06 .LASF17
     /tmp/cclBh4wk.s:5559   .debug_str:00000000000002a5 .LASF18
     /tmp/cclBh4wk.s:5799   .debug_str:00000000000009b7 .LASF19
     /tmp/cclBh4wk.s:5665   .debug_str:00000000000005a1 .LASF20
     /tmp/cclBh4wk.s:5895   .debug_str:0000000000000cdd .LASF53
     /tmp/cclBh4wk.s:5751   .debug_str:0000000000000840 .LASF54
     /tmp/cclBh4wk.s:5653   .debug_str:0000000000000556 .LASF21
     /tmp/cclBh4wk.s:5485   .debug_str:0000000000000099 .LASF22
     /tmp/cclBh4wk.s:5907   .debug_str:0000000000000d2c .LASF23
     /tmp/cclBh4wk.s:5675   .debug_str:00000000000005e7 .LASF84
     /tmp/cclBh4wk.s:5871   .debug_str:0000000000000c4f .LASF86
     /tmp/cclBh4wk.s:5869   .debug_str:0000000000000c46 .LASF24
     /tmp/cclBh4wk.s:5859   .debug_str:0000000000000be5 .LASF26
     /tmp/cclBh4wk.s:5761   .debug_str:000000000000089c .LASF28
     /tmp/cclBh4wk.s:5707   .debug_str:00000000000006ea .LASF30
     /tmp/cclBh4wk.s:5739   .debug_str:00000000000007dc .LASF25
     /tmp/cclBh4wk.s:5747   .debug_str:0000000000000815 .LASF27
     /tmp/cclBh4wk.s:5695   .debug_str:000000000000068e .LASF29
     /tmp/cclBh4wk.s:5639   .debug_str:00000000000004fc .LASF31
     /tmp/cclBh4wk.s:5905   .debug_str:0000000000000d24 .LASF32
     /tmp/cclBh4wk.s:5843   .debug_str:0000000000000b7d .LASF33
     /tmp/cclBh4wk.s:5689   .debug_str:000000000000066b .LASF34
     /tmp/cclBh4wk.s:5705   .debug_str:00000000000006d6 .LASF35
     /tmp/cclBh4wk.s:5809   .debug_str:00000000000009f2 .LASF36
     /tmp/cclBh4wk.s:5781   .debug_str:0000000000000922 .LASF37
     /tmp/cclBh4wk.s:5783   .debug_str:0000000000000935 .LASF38
     /tmp/cclBh4wk.s:5515   .debug_str:0000000000000159 .LASF39
     /tmp/cclBh4wk.s:5555   .debug_str:0000000000000292 .LASF40
     /tmp/cclBh4wk.s:5613   .debug_str:000000000000045b .LASF41
     /tmp/cclBh4wk.s:5627   .debug_str:00000000000004a9 .LASF42
     /tmp/cclBh4wk.s:5541   .debug_str:0000000000000240 .LASF43
     /tmp/cclBh4wk.s:5481   .debug_str:000000000000007b .LASF44
     /tmp/cclBh4wk.s:5769   .debug_str:00000000000008c8 .LASF45
     /tmp/cclBh4wk.s:5763   .debug_str:00000000000008a5 .LASF46
     /tmp/cclBh4wk.s:5929   .debug_str:0000000000000def .LASF47
     /tmp/cclBh4wk.s:5897   .debug_str:0000000000000ce3 .LASF48
     /tmp/cclBh4wk.s:5909   .debug_str:0000000000000d35 .LASF49
     /tmp/cclBh4wk.s:5891   .debug_str:0000000000000cbd .LASF50
     /tmp/cclBh4wk.s:5673   .debug_str:00000000000005d1 .LASF51
     /tmp/cclBh4wk.s:5851   .debug_str:0000000000000bc0 .LASF154
     /tmp/cclBh4wk.s:5531   .debug_str:00000000000001e1 .LASF155
     /tmp/cclBh4wk.s:5889   .debug_str:0000000000000cb4 .LASF52
     /tmp/cclBh4wk.s:5793   .debug_str:0000000000000986 .LASF55
     /tmp/cclBh4wk.s:5737   .debug_str:00000000000007d4 .LASF56
     /tmp/cclBh4wk.s:5539   .debug_str:0000000000000239 .LASF57
     /tmp/cclBh4wk.s:5463   .debug_str:0000000000000000 .LASF58
     /tmp/cclBh4wk.s:5595   .debug_str:00000000000003b1 .LASF59
GAS LISTING /tmp/cclBh4wk.s 			page 43


     /tmp/cclBh4wk.s:5643   .debug_str:000000000000051f .LASF60
     /tmp/cclBh4wk.s:5499   .debug_str:00000000000000f5 .LASF61
     /tmp/cclBh4wk.s:5821   .debug_str:0000000000000a3b .LASF133
     /tmp/cclBh4wk.s:5513   .debug_str:000000000000014f .LASF62
     /tmp/cclBh4wk.s:5605   .debug_str:0000000000000400 .LASF64
     /tmp/cclBh4wk.s:5625   .debug_str:000000000000049f .LASF68
     /tmp/cclBh4wk.s:5661   .debug_str:0000000000000582 .LASF70
     /tmp/cclBh4wk.s:5811   .debug_str:00000000000009f9 .LASF63
     /tmp/cclBh4wk.s:5903   .debug_str:0000000000000d02 .LASF65
     /tmp/cclBh4wk.s:5713   .debug_str:0000000000000729 .LASF228
     /tmp/cclBh4wk.s:5919   .debug_str:0000000000000da1 .LASF66
     /tmp/cclBh4wk.s:5635   .debug_str:00000000000004d7 .LASF67
     /tmp/cclBh4wk.s:5671   .debug_str:00000000000005c4 .LASF69
     /tmp/cclBh4wk.s:5749   .debug_str:0000000000000828 .LASF71
     /tmp/cclBh4wk.s:5545   .debug_str:000000000000025b .LASF72
     /tmp/cclBh4wk.s:5775   .debug_str:00000000000008f5 .LASF73
     /tmp/cclBh4wk.s:5743   .debug_str:0000000000000803 .LASF74
     /tmp/cclBh4wk.s:5667   .debug_str:00000000000005a6 .LASF75
     /tmp/cclBh4wk.s:5593   .debug_str:00000000000003a6 .LASF76
     /tmp/cclBh4wk.s:5797   .debug_str:00000000000009a1 .LASF77
     /tmp/cclBh4wk.s:5467   .debug_str:0000000000000011 .LASF78
     /tmp/cclBh4wk.s:5829   .debug_str:0000000000000a62 .LASF79
     /tmp/cclBh4wk.s:5867   .debug_str:0000000000000c32 .LASF80
     /tmp/cclBh4wk.s:5709   .debug_str:00000000000006ff .LASF81
     /tmp/cclBh4wk.s:5865   .debug_str:0000000000000c27 .LASF82
     /tmp/cclBh4wk.s:5577   .debug_str:000000000000034d .LASF83
     /tmp/cclBh4wk.s:5933   .debug_str:0000000000000e14 .LASF85
     /tmp/cclBh4wk.s:5573   .debug_str:0000000000000325 .LASF87
     /tmp/cclBh4wk.s:5547   .debug_str:0000000000000268 .LASF88
     /tmp/cclBh4wk.s:5517   .debug_str:000000000000016c .LASF89
     /tmp/cclBh4wk.s:5881   .debug_str:0000000000000c9b .LASF90
     /tmp/cclBh4wk.s:5487   .debug_str:00000000000000a2 .LASF91
     /tmp/cclBh4wk.s:5931   .debug_str:0000000000000e07 .LASF92
     /tmp/cclBh4wk.s:5599   .debug_str:00000000000003d1 .LASF93
     /tmp/cclBh4wk.s:5469   .debug_str:000000000000001c .LASF94
     /tmp/cclBh4wk.s:5703   .debug_str:00000000000006c9 .LASF95
     /tmp/cclBh4wk.s:5917   .debug_str:0000000000000d8b .LASF162
     /tmp/cclBh4wk.s:5857   .debug_str:0000000000000bdd .LASF96
     /tmp/cclBh4wk.s:5505   .debug_str:000000000000011c .LASF97
     /tmp/cclBh4wk.s:5925   .debug_str:0000000000000dc8 .LASF98
     /tmp/cclBh4wk.s:5873   .debug_str:0000000000000c70 .LASF99
     /tmp/cclBh4wk.s:5845   .debug_str:0000000000000b91 .LASF100
     /tmp/cclBh4wk.s:5837   .debug_str:0000000000000aa4 .LASF101
     /tmp/cclBh4wk.s:5717   .debug_str:0000000000000736 .LASF102
     /tmp/cclBh4wk.s:5571   .debug_str:0000000000000318 .LASF103
     /tmp/cclBh4wk.s:5777   .debug_str:000000000000090d .LASF104
     /tmp/cclBh4wk.s:5885   .debug_str:0000000000000ca8 .LASF105
     /tmp/cclBh4wk.s:5835   .debug_str:0000000000000a9c .LASF106
     /tmp/cclBh4wk.s:5501   .debug_str:00000000000000fe .LASF107
     /tmp/cclBh4wk.s:5533   .debug_str:00000000000001f9 .LASF130
     /tmp/cclBh4wk.s:5473   .debug_str:0000000000000034 .LASF139
     /tmp/cclBh4wk.s:5591   .debug_str:00000000000003a0 .LASF108
     /tmp/cclBh4wk.s:5801   .debug_str:00000000000009cd .LASF109
     /tmp/cclBh4wk.s:5645   .debug_str:0000000000000528 .LASF110
     /tmp/cclBh4wk.s:5701   .debug_str:00000000000006b6 .LASF111
     /tmp/cclBh4wk.s:5549   .debug_str:0000000000000271 .LASF112
     /tmp/cclBh4wk.s:5771   .debug_str:00000000000008e0 .LASF113
GAS LISTING /tmp/cclBh4wk.s 			page 44


     /tmp/cclBh4wk.s:5817   .debug_str:0000000000000a1f .LASF114
     /tmp/cclBh4wk.s:5495   .debug_str:00000000000000da .LASF115
     /tmp/cclBh4wk.s:5543   .debug_str:0000000000000252 .LASF116
     /tmp/cclBh4wk.s:5693   .debug_str:0000000000000678 .LASF117
     /tmp/cclBh4wk.s:5557   .debug_str:0000000000000298 .LASF118
     /tmp/cclBh4wk.s:5475   .debug_str:000000000000005c .LASF119
     /tmp/cclBh4wk.s:5619   .debug_str:0000000000000482 .LASF120
     /tmp/cclBh4wk.s:5831   .debug_str:0000000000000a7a .LASF121
     /tmp/cclBh4wk.s:5471   .debug_str:000000000000002c .LASF122
     /tmp/cclBh4wk.s:5483   .debug_str:0000000000000086 .LASF123
     /tmp/cclBh4wk.s:5899   .debug_str:0000000000000ced .LASF124
     /tmp/cclBh4wk.s:5863   .debug_str:0000000000000c17 .LASF125
     /tmp/cclBh4wk.s:5767   .debug_str:00000000000008be .LASF126
     /tmp/cclBh4wk.s:5641   .debug_str:000000000000050f .LASF127
     /tmp/cclBh4wk.s:5733   .debug_str:00000000000007c2 .LASF128
     /tmp/cclBh4wk.s:5879   .debug_str:0000000000000c93 .LASF129
     /tmp/cclBh4wk.s:5551   .debug_str:0000000000000276 .LASF131
     /tmp/cclBh4wk.s:5855   .debug_str:0000000000000bd0 .LASF229
     /tmp/cclBh4wk.s:5697   .debug_str:0000000000000695 .LASF132
     /tmp/cclBh4wk.s:5887   .debug_str:0000000000000caf .LASF134
     /tmp/cclBh4wk.s:5853   .debug_str:0000000000000bcb .LASF135
     /tmp/cclBh4wk.s:5511   .debug_str:000000000000014a .LASF136
     /tmp/cclBh4wk.s:5563   .debug_str:00000000000002d0 .LASF137
     /tmp/cclBh4wk.s:5535   .debug_str:0000000000000207 .LASF138
     /tmp/cclBh4wk.s:5527   .debug_str:00000000000001b1 .LASF140
     /tmp/cclBh4wk.s:5491   .debug_str:00000000000000c9 .LASF141
     /tmp/cclBh4wk.s:5681   .debug_str:0000000000000625 .LASF142
     /tmp/cclBh4wk.s:5489   .debug_str:00000000000000b4 .LASF143
     /tmp/cclBh4wk.s:5597   .debug_str:00000000000003b9 .LASF144
     /tmp/cclBh4wk.s:5727   .debug_str:0000000000000792 .LASF230
     /tmp/cclBh4wk.s:5823   .debug_str:0000000000000a43 .LASF145
     /tmp/cclBh4wk.s:5655   .debug_str:000000000000055f .LASF146
     /tmp/cclBh4wk.s:5629   .debug_str:00000000000004af .LASF147
     /tmp/cclBh4wk.s:5567   .debug_str:00000000000002f4 .LASF148
     /tmp/cclBh4wk.s:5651   .debug_str:000000000000054e .LASF149
     /tmp/cclBh4wk.s:5683   .debug_str:000000000000062a .LASF150
     /tmp/cclBh4wk.s:5497   .debug_str:00000000000000ec .LASF151
     /tmp/cclBh4wk.s:5677   .debug_str:00000000000005fb .LASF152
     /tmp/cclBh4wk.s:5529   .debug_str:00000000000001cc .LASF153
     /tmp/cclBh4wk.s:5893   .debug_str:0000000000000cc7 .LASF156
     /tmp/cclBh4wk.s:5587   .debug_str:0000000000000386 .LASF157
     /tmp/cclBh4wk.s:5807   .debug_str:00000000000009ed .LASF158
     /tmp/cclBh4wk.s:5691   .debug_str:0000000000000673 .LASF159
     /tmp/cclBh4wk.s:5923   .debug_str:0000000000000dbb .LASF160
     /tmp/cclBh4wk.s:5915   .debug_str:0000000000000d79 .LASF161
     /tmp/cclBh4wk.s:5611   .debug_str:0000000000000443 .LASF163
     /tmp/cclBh4wk.s:5921   .debug_str:0000000000000da7 .LASF231
     /tmp/cclBh4wk.s:5847   .debug_str:0000000000000b9b .LASF164
     /tmp/cclBh4wk.s:5755   .debug_str:0000000000000850 .LASF165
     /tmp/cclBh4wk.s:5493   .debug_str:00000000000000cf .LASF166
     /tmp/cclBh4wk.s:5927   .debug_str:0000000000000dce .LASF167
     /tmp/cclBh4wk.s:5657   .debug_str:0000000000000574 .LASF168
     /tmp/cclBh4wk.s:5819   .debug_str:0000000000000a26 .LASF169
     /tmp/cclBh4wk.s:5659   .debug_str:0000000000000579 .LASF170
     /tmp/cclBh4wk.s:5789   .debug_str:0000000000000970 .LASF171
     /tmp/cclBh4wk.s:5699   .debug_str:00000000000006a1 .LASF172
     /tmp/cclBh4wk.s:5725   .debug_str:000000000000078c .LASF173
GAS LISTING /tmp/cclBh4wk.s 			page 45


     /tmp/cclBh4wk.s:5687   .debug_str:0000000000000656 .LASF174
     /tmp/cclBh4wk.s:5833   .debug_str:0000000000000a8b .LASF175
     /tmp/cclBh4wk.s:5815   .debug_str:0000000000000a12 .LASF176
     /tmp/cclBh4wk.s:5861   .debug_str:0000000000000bfa .LASF177
     /tmp/cclBh4wk.s:5877   .debug_str:0000000000000c81 .LASF178
     /tmp/cclBh4wk.s:5911   .debug_str:0000000000000d4b .LASF179
     /tmp/cclBh4wk.s:5631   .debug_str:00000000000004b7 .LASF180
     /tmp/cclBh4wk.s:5719   .debug_str:0000000000000742 .LASF181
     /tmp/cclBh4wk.s:5609   .debug_str:0000000000000436 .LASF182
     /tmp/cclBh4wk.s:5759   .debug_str:000000000000087f .LASF183
     /tmp/cclBh4wk.s:5805   .debug_str:00000000000009d9 .LASF184
     /tmp/cclBh4wk.s:5601   .debug_str:00000000000003dd .LASF185
     /tmp/cclBh4wk.s:5585   .debug_str:0000000000000378 .LASF186
     /tmp/cclBh4wk.s:5825   .debug_str:0000000000000a50 .LASF187
     /tmp/cclBh4wk.s:5617   .debug_str:0000000000000476 .LASF188
     /tmp/cclBh4wk.s:5465   .debug_str:0000000000000008 .LASF232
     /tmp/cclBh4wk.s:5875   .debug_str:0000000000000c75 .LASF189
     /tmp/cclBh4wk.s:5685   .debug_str:0000000000000649 .LASF190
     /tmp/cclBh4wk.s:5623   .debug_str:0000000000000495 .LASF191
     /tmp/cclBh4wk.s:5735   .debug_str:00000000000007ca .LASF192
     /tmp/cclBh4wk.s:5649   .debug_str:0000000000000543 .LASF193
     /tmp/cclBh4wk.s:5711   .debug_str:000000000000071e .LASF194
     /tmp/cclBh4wk.s:5791   .debug_str:0000000000000976 .LASF195
     /tmp/cclBh4wk.s:5827   .debug_str:0000000000000a5d .LASF196
     /tmp/cclBh4wk.s:5569   .debug_str:0000000000000310 .LASF197
     /tmp/cclBh4wk.s:5607   .debug_str:0000000000000425 .LASF198
     /tmp/cclBh4wk.s:5741   .debug_str:00000000000007e3 .LASF199
     /tmp/cclBh4wk.s:5579   .debug_str:0000000000000365 .LASF200
     /tmp/cclBh4wk.s:5553   .debug_str:000000000000027c .LASF201
     /tmp/cclBh4wk.s:5583   .debug_str:0000000000000372 .LASF202
     /tmp/cclBh4wk.s:5561   .debug_str:00000000000002bb .LASF203
     /tmp/cclBh4wk.s:5669   .debug_str:00000000000005b8 .LASF204
     /tmp/cclBh4wk.s:5537   .debug_str:0000000000000221 .LASF205
     /tmp/cclBh4wk.s:5745   .debug_str:000000000000080b .LASF206
     /tmp/cclBh4wk.s:5715   .debug_str:000000000000072e .LASF207
     /tmp/cclBh4wk.s:5785   .debug_str:000000000000093c .LASF208
     /tmp/cclBh4wk.s:5729   .debug_str:00000000000007aa .LASF209
     /tmp/cclBh4wk.s:121    .text:0000000000000000 .LFB54
     /tmp/cclBh4wk.s:1082   .text:00000000000005f0 .LFE54
     /tmp/cclBh4wk.s:5803   .debug_str:00000000000009d2 .LASF210
     /tmp/cclBh4wk.s:4867   .debug_loc:0000000000000000 .LLST5
     /tmp/cclBh4wk.s:5841   .debug_str:0000000000000b78 .LASF211
     /tmp/cclBh4wk.s:4898   .debug_loc:0000000000000087 .LLST6
     /tmp/cclBh4wk.s:5901   .debug_str:0000000000000cfa .LASF212
     /tmp/cclBh4wk.s:4929   .debug_loc:000000000000010e .LLST7
     /tmp/cclBh4wk.s:4951   .debug_loc:000000000000016e .LLST8
     /tmp/cclBh4wk.s:4973   .debug_loc:00000000000001ce .LLST9
     /tmp/cclBh4wk.s:4995   .debug_loc:000000000000022f .LLST10
     /tmp/cclBh4wk.s:5017   .debug_loc:0000000000000290 .LLST11
     /tmp/cclBh4wk.s:5039   .debug_loc:00000000000002f1 .LLST12
     /tmp/cclBh4wk.s:5061   .debug_loc:0000000000000352 .LLST13
     /tmp/cclBh4wk.s:5083   .debug_loc:00000000000003b3 .LLST14
     /tmp/cclBh4wk.s:5105   .debug_loc:0000000000000414 .LLST15
     /tmp/cclBh4wk.s:881    .text:0000000000000460 .LBB29
     /tmp/cclBh4wk.s:950    .text:00000000000004f4 .LBE29
     /tmp/cclBh4wk.s:5298   .debug_loc:000000000000076d .LLST16
     /tmp/cclBh4wk.s:885    .text:0000000000000468 .LVL80
GAS LISTING /tmp/cclBh4wk.s 			page 46


     /tmp/cclBh4wk.s:911    .text:00000000000004b0 .LVL83
     /tmp/cclBh4wk.s:920    .text:00000000000004c4 .LVL86
     /tmp/cclBh4wk.s:928    .text:00000000000004d8 .LVL87
     /tmp/cclBh4wk.s:949    .text:00000000000004f4 .LVL88
     /tmp/cclBh4wk.s:369    .text:000000000000011c .LVL28
     /tmp/cclBh4wk.s:387    .text:0000000000000134 .LVL30
     /tmp/cclBh4wk.s:412    .text:0000000000000160 .LVL32
     /tmp/cclBh4wk.s:434    .text:0000000000000198 .LVL33
     /tmp/cclBh4wk.s:468    .text:00000000000001b4 .LVL35
     /tmp/cclBh4wk.s:473    .text:00000000000001c8 .LVL36
     /tmp/cclBh4wk.s:477    .text:00000000000001d0 .LVL37
     /tmp/cclBh4wk.s:493    .text:00000000000001e0 .LVL38
     /tmp/cclBh4wk.s:502    .text:00000000000001ec .LVL40
     /tmp/cclBh4wk.s:513    .text:0000000000000200 .LVL42
     /tmp/cclBh4wk.s:517    .text:0000000000000208 .LVL43
     /tmp/cclBh4wk.s:532    .text:0000000000000224 .LVL45
     /tmp/cclBh4wk.s:576    .text:000000000000025c .LVL47
     /tmp/cclBh4wk.s:592    .text:0000000000000274 .LVL48
     /tmp/cclBh4wk.s:595    .text:0000000000000280 .LVL49
     /tmp/cclBh4wk.s:606    .text:0000000000000294 .LVL51
     /tmp/cclBh4wk.s:624    .text:00000000000002ac .LVL53
     /tmp/cclBh4wk.s:670    .text:00000000000002dc .LVL55
     /tmp/cclBh4wk.s:675    .text:00000000000002f0 .LVL56
     /tmp/cclBh4wk.s:679    .text:00000000000002f8 .LVL57
     /tmp/cclBh4wk.s:688    .text:0000000000000304 .LVL59
     /tmp/cclBh4wk.s:707    .text:0000000000000320 .LVL61
     /tmp/cclBh4wk.s:725    .text:0000000000000348 .LVL63
     /tmp/cclBh4wk.s:769    .text:0000000000000380 .LVL65
     /tmp/cclBh4wk.s:783    .text:00000000000003ac .LVL66
     /tmp/cclBh4wk.s:793    .text:00000000000003bc .LVL68
     /tmp/cclBh4wk.s:803    .text:00000000000003d0 .LVL70
     /tmp/cclBh4wk.s:808    .text:00000000000003dc .LVL71
     /tmp/cclBh4wk.s:813    .text:00000000000003ec .LVL72
     /tmp/cclBh4wk.s:818    .text:00000000000003f8 .LVL73
     /tmp/cclBh4wk.s:823    .text:0000000000000408 .LVL74
     /tmp/cclBh4wk.s:828    .text:0000000000000414 .LVL75
     /tmp/cclBh4wk.s:970    .text:0000000000000514 .LVL90
     /tmp/cclBh4wk.s:974    .text:000000000000051c .LVL91
     /tmp/cclBh4wk.s:984    .text:0000000000000534 .LVL92
     /tmp/cclBh4wk.s:990    .text:0000000000000544 .LVL93
     /tmp/cclBh4wk.s:994    .text:0000000000000554 .LVL94
     /tmp/cclBh4wk.s:1005   .text:0000000000000570 .LVL95
     /tmp/cclBh4wk.s:1027   .text:000000000000058c .LVL96
     /tmp/cclBh4wk.s:1042   .text:00000000000005a0 .LVL98
     /tmp/cclBh4wk.s:1047   .text:00000000000005b0 .LVL99
     /tmp/cclBh4wk.s:1052   .text:00000000000005bc .LVL100
     /tmp/cclBh4wk.s:1057   .text:00000000000005cc .LVL101
     /tmp/cclBh4wk.s:1062   .text:00000000000005d8 .LVL102
     /tmp/cclBh4wk.s:5581   .debug_str:000000000000036d .LASF213
     /tmp/cclBh4wk.s:5477   .debug_str:000000000000006a .LASF214
     /tmp/cclBh4wk.s:5503   .debug_str:000000000000010f .LASF233
     /tmp/cclBh4wk.s:11     .text._ZN4KSemD2Ev:0000000000000000 .LFB56
     /tmp/cclBh4wk.s:85     .text._ZN4KSemD2Ev:000000000000004c .LFE56
     /tmp/cclBh4wk.s:5327   .debug_loc:00000000000007f1 .LLST0
     /tmp/cclBh4wk.s:31     .text._ZN4KSemD2Ev:0000000000000018 .LBB19
     /tmp/cclBh4wk.s:71     .text._ZN4KSemD2Ev:0000000000000038 .LBE19
     /tmp/cclBh4wk.s:5345   .debug_loc:000000000000083d .LLST1
GAS LISTING /tmp/cclBh4wk.s 			page 47


     /tmp/cclBh4wk.s:36     .text._ZN4KSemD2Ev:0000000000000018 .LBB21
     /tmp/cclBh4wk.s:43     .text._ZN4KSemD2Ev:000000000000001c .LBE21
     /tmp/cclBh4wk.s:5363   .debug_loc:000000000000087a .LLST2
     /tmp/cclBh4wk.s:46     .text._ZN4KSemD2Ev:0000000000000020 .LBB23
     /tmp/cclBh4wk.s:69     .text._ZN4KSemD2Ev:0000000000000038 .LBE23
     /tmp/cclBh4wk.s:5372   .debug_loc:000000000000089f .LLST3
     /tmp/cclBh4wk.s:58     .text._ZN4KSemD2Ev:000000000000002c .LBB24
     /tmp/cclBh4wk.s:68     .text._ZN4KSemD2Ev:0000000000000038 .LBE24
     /tmp/cclBh4wk.s:5379   .debug_loc:00000000000008c2 .LLST4
     /tmp/cclBh4wk.s:63     .text._ZN4KSemD2Ev:0000000000000034 .LVL5
     /tmp/cclBh4wk.s:1234   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000000 .LFB39
     /tmp/cclBh4wk.s:1253   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000020 .LFE39
     /tmp/cclBh4wk.s:1207   .text._ZN3TCB10getRunningEv:0000000000000000 .LFB37
     /tmp/cclBh4wk.s:1227   .text._ZN3TCB10getRunningEv:0000000000000024 .LFE37
     /tmp/cclBh4wk.s:1179   .text._ZN3TCB7getBodyEv:0000000000000000 .LFB36
     /tmp/cclBh4wk.s:1200   .text._ZN3TCB7getBodyEv:000000000000001c .LFE36
     /tmp/cclBh4wk.s:5386   .debug_loc:00000000000008e5 .LLST18
     /tmp/cclBh4wk.s:1151   .text._ZN3TCB12getTimeSliceEv:0000000000000000 .LFB34
     /tmp/cclBh4wk.s:1172   .text._ZN3TCB12getTimeSliceEv:000000000000001c .LFE34
     /tmp/cclBh4wk.s:5400   .debug_loc:000000000000091e .LLST17
     /tmp/cclBh4wk.s:1122   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000000 .LFB32
     /tmp/cclBh4wk.s:1144   .text._ZN3TCB9setStatusENS_12ThreadStatusE:000000000000001c .LFE32
     /tmp/cclBh4wk.s:5521   .debug_str:0000000000000189 .LASF215
     /tmp/cclBh4wk.s:5773   .debug_str:00000000000008f0 .LASF234
     /tmp/cclBh4wk.s:5849   .debug_str:0000000000000bab .LASF235
     /tmp/cclBh4wk.s:1089   .text._ZN5Riscv6mc_sipEm:0000000000000000 .LFB10
     /tmp/cclBh4wk.s:1115   .text._ZN5Riscv6mc_sipEm:000000000000001c .LFE10
     /tmp/cclBh4wk.s:5883   .debug_str:0000000000000ca3 .LASF216
     /tmp/cclBh4wk.s:5663   .debug_str:0000000000000596 .LASF217
     /tmp/cclBh4wk.s:5523   .debug_str:000000000000018e .LASF218
     /tmp/cclBh4wk.s:5913   .debug_str:0000000000000d6d .LASF219
     /tmp/cclBh4wk.s:5795   .debug_str:0000000000000993 .LASF220
     /tmp/cclBh4wk.s:5679   .debug_str:0000000000000617 .LASF221
     /tmp/cclBh4wk.s:5519   .debug_str:000000000000017f .LASF222
     /tmp/cclBh4wk.s:5757   .debug_str:0000000000000871 .LASF223
     /tmp/cclBh4wk.s:5615   .debug_str:000000000000046d .LASF224
     /tmp/cclBh4wk.s:144    .text:000000000000001c .LVL7
     /tmp/cclBh4wk.s:151    .text:0000000000000020 .LVL8
     /tmp/cclBh4wk.s:869    .text:000000000000044c .LVL78
     /tmp/cclBh4wk.s:876    .text:0000000000000450 .LVL79
     /tmp/cclBh4wk.s:1074   .text:00000000000005e4 .LVL103
     /tmp/cclBh4wk.s:1079   .text:00000000000005ec .LVL104
     /tmp/cclBh4wk.s:154    .text:0000000000000024 .LVL9
     /tmp/cclBh4wk.s:161    .text:0000000000000028 .LVL10
     /tmp/cclBh4wk.s:848    .text:0000000000000438 .LVL76
     /tmp/cclBh4wk.s:860    .text:0000000000000444 .LVL77
     /tmp/cclBh4wk.s:164    .text:000000000000002c .LVL11
     /tmp/cclBh4wk.s:172    .text:0000000000000030 .LVL12
     /tmp/cclBh4wk.s:175    .text:0000000000000034 .LVL13
     /tmp/cclBh4wk.s:182    .text:0000000000000038 .LVL14
     /tmp/cclBh4wk.s:185    .text:000000000000003c .LVL15
     /tmp/cclBh4wk.s:192    .text:0000000000000040 .LVL16
     /tmp/cclBh4wk.s:195    .text:0000000000000044 .LVL17
     /tmp/cclBh4wk.s:202    .text:0000000000000048 .LVL18
     /tmp/cclBh4wk.s:205    .text:000000000000004c .LVL19
     /tmp/cclBh4wk.s:212    .text:0000000000000050 .LVL20
     /tmp/cclBh4wk.s:215    .text:0000000000000054 .LVL21
GAS LISTING /tmp/cclBh4wk.s 			page 48


     /tmp/cclBh4wk.s:222    .text:0000000000000058 .LVL22
     /tmp/cclBh4wk.s:225    .text:000000000000005c .LVL23
     /tmp/cclBh4wk.s:232    .text:0000000000000060 .LVL24
     /tmp/cclBh4wk.s:235    .text:0000000000000064 .LVL25
     /tmp/cclBh4wk.s:242    .text:0000000000000068 .LVL26
     /tmp/cclBh4wk.s:245    .text:000000000000006c .LVL27
     /tmp/cclBh4wk.s:379    .text:0000000000000124 .LVL29
     /tmp/cclBh4wk.s:397    .text:000000000000013c .LVL31
     /tmp/cclBh4wk.s:462    .text:00000000000001ac .LVL34
     /tmp/cclBh4wk.s:496    .text:00000000000001e4 .LVL39
     /tmp/cclBh4wk.s:505    .text:00000000000001f0 .LVL41
     /tmp/cclBh4wk.s:520    .text:000000000000020c .LVL44
     /tmp/cclBh4wk.s:568    .text:000000000000024c .LVL46
     /tmp/cclBh4wk.s:598    .text:0000000000000284 .LVL50
     /tmp/cclBh4wk.s:616    .text:000000000000029c .LVL52
     /tmp/cclBh4wk.s:634    .text:00000000000002b4 .LVL54
     /tmp/cclBh4wk.s:682    .text:00000000000002fc .LVL58
     /tmp/cclBh4wk.s:698    .text:000000000000030c .LVL60
     /tmp/cclBh4wk.s:710    .text:0000000000000324 .LVL62
     /tmp/cclBh4wk.s:761    .text:0000000000000370 .LVL64
     /tmp/cclBh4wk.s:786    .text:00000000000003b0 .LVL67
     /tmp/cclBh4wk.s:796    .text:00000000000003c0 .LVL69
     /tmp/cclBh4wk.s:956    .text:00000000000004f8 .LVL89
     /tmp/cclBh4wk.s:1033   .text:0000000000000590 .LVL97
     /tmp/cclBh4wk.s:889    .text:0000000000000470 .LVL81
     /tmp/cclBh4wk.s:909    .text:00000000000004a8 .LVL82
     /tmp/cclBh4wk.s:913    .text:00000000000004b4 .LVL84
     /tmp/cclBh4wk.s:918    .text:00000000000004bc .LVL85
     /tmp/cclBh4wk.s:17     .text._ZN4KSemD2Ev:0000000000000000 .LVL0
     /tmp/cclBh4wk.s:29     .text._ZN4KSemD2Ev:0000000000000018 .LVL1
     /tmp/cclBh4wk.s:80     .text._ZN4KSemD2Ev:0000000000000044 .LVL6
     /tmp/cclBh4wk.s:41     .text._ZN4KSemD2Ev:000000000000001c .LVL2
     /tmp/cclBh4wk.s:48     .text._ZN4KSemD2Ev:0000000000000020 .LVL3
     /tmp/cclBh4wk.s:57     .text._ZN4KSemD2Ev:000000000000002c .LVL4
     /tmp/cclBh4wk.s:1182   .text._ZN3TCB7getBodyEv:0000000000000000 .LVL109
     /tmp/cclBh4wk.s:1192   .text._ZN3TCB7getBodyEv:0000000000000010 .LVL110
     /tmp/cclBh4wk.s:1154   .text._ZN3TCB12getTimeSliceEv:0000000000000000 .LVL107
     /tmp/cclBh4wk.s:1164   .text._ZN3TCB12getTimeSliceEv:0000000000000010 .LVL108
     /tmp/cclBh4wk.s:1265   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/cclBh4wk.s:5      .text:0000000000000000 .Ltext0
     /tmp/cclBh4wk.s:1256   .text:00000000000005f0 .Letext0
     /tmp/cclBh4wk.s:88     .gcc_except_table._ZN4KSemD2Ev:0000000000000000 .LLSDA56
                           .group:0000000000000000 _ZN4KSemD5Ev

UNDEFINED SYMBOLS
_Z8mem_freePv
__gxx_personality_v0
_ZN7KMemory7kmallocEm
_ZN7KMemory5kfreeEPv
_ZN3TCB12createThreadEPFvPvES0_Pm
main
_ZN9Scheduler3putEP3TCB
_ZN3TCB13releaseJoinedEv
_ZN3TCB8dispatchEv
_ZN3TCB10threadJoinEPS_
_ZN4KSem7initSemEj
_ZN4KSem8closeSemEPS_
GAS LISTING /tmp/cclBh4wk.s 			page 49


_ZN4KSemdlEPv
_ZN4KSem4waitEv
_ZN4KSem6signalEv
_ZN9Scheduler10putToSleepEP3TCBm
_ZN8KConsole5kgetcEv
_ZN8KConsole5kputcEc
_Z9kPrintIntm
_Z11printStringPKc
plic_claim
_ZN8KConsole2srE
_ZN8KConsole2drE
_ZN8KConsole12placeInInputEc
plic_complete
_ZN9Scheduler4wakeEv
_ZN3TCB7runningE
_ZN3TCB16runningTimeSliceE
