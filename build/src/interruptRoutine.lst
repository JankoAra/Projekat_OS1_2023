GAS LISTING /tmp/ccNbFOaB.s 			page 1


   1              		.file	"interruptRoutine.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.section	.rodata
   7              		.align	3
   8              	.LC0:
   9 0000 0A4E6570 		.string	"\nNepostojeci op code: "
   9      6F73746F 
   9      6A656369 
   9      206F7020 
   9      636F6465 
  10 0017 00       		.align	3
  11              	.LC1:
  12 0018 0A736361 		.string	"\nscause: "
  12      7573653A 
  12      2000
  13 0022 00000000 		.align	3
  13      0000
  14              	.LC2:
  15 0028 0A736570 		.string	"\nsepc: "
  15      633A2000 
  16              		.align	3
  17              	.LC3:
  18 0030 4E656B69 		.string	"Neki drugi prekid\n"
  18      20647275 
  18      67692070 
  18      72656B69 
  18      640A00
  19 0043 00000000 		.align	3
  19      00
  20              	.LC4:
  21 0048 0A477265 		.string	"\nGreska u prekidnoj rutini\n"
  21      736B6120 
  21      75207072 
  21      656B6964 
  21      6E6F6A20 
  22 0064 00000000 		.align	3
  23              	.LC5:
  24 0068 73636175 		.string	"scause: "
  24      73653A20 
  24      00
  25              		.text
  26              		.align	2
  27              		.globl	interruptRoutine
  29              	interruptRoutine:
  30              	.LFB54:
  31              		.file 1 "src/interruptRoutine.cpp"
   1:src/interruptRoutine.cpp **** //
   2:src/interruptRoutine.cpp **** // Created by os on 5/22/23.
   3:src/interruptRoutine.cpp **** //
   4:src/interruptRoutine.cpp **** 
   5:src/interruptRoutine.cpp **** #include "../lib/console.h"
   6:src/interruptRoutine.cpp **** #include "../lib/hw.h"
   7:src/interruptRoutine.cpp **** #include "../visak/MemoryAllocator.hpp"
   8:src/interruptRoutine.cpp **** #include "../h/helper.hpp"
GAS LISTING /tmp/ccNbFOaB.s 			page 2


   9:src/interruptRoutine.cpp **** #include "../h/Riscv.hpp"
  10:src/interruptRoutine.cpp **** #include "../h/syscall_c.hpp"
  11:src/interruptRoutine.cpp **** #include "../h/TCB.hpp"
  12:src/interruptRoutine.cpp **** #include "../h/Scheduler.hpp"
  13:src/interruptRoutine.cpp **** #include "../h/KSem.hpp"
  14:src/interruptRoutine.cpp **** #include "../h/KConsole.hpp"
  15:src/interruptRoutine.cpp **** #include "../h/KMemory.hpp"
  16:src/interruptRoutine.cpp **** #include "../test/printing.hpp"
  17:src/interruptRoutine.cpp **** 
  18:src/interruptRoutine.cpp **** //void printInteger(int i);
  19:src/interruptRoutine.cpp **** 
  20:src/interruptRoutine.cpp **** #pragma GCC optimize("O0")
  21:src/interruptRoutine.cpp **** extern "C" void interruptRoutine() {
  32              		.loc 1 21 36
  33              		.cfi_startproc
  34 0000 130101F8 		addi	sp,sp,-128
  35              		.cfi_def_cfa_offset 128
  36 0004 233C1106 		sd	ra,120(sp)
  37 0008 23388106 		sd	s0,112(sp)
  38 000c 23349106 		sd	s1,104(sp)
  39              		.cfi_offset 1, -8
  40              		.cfi_offset 8, -16
  41              		.cfi_offset 9, -24
  42 0010 13040108 		addi	s0,sp,128
  43              		.cfi_def_cfa 8, 0
  22:src/interruptRoutine.cpp ****     //bitni sistemski registri
  23:src/interruptRoutine.cpp ****     uint64 scause, sepc, sstatus;
  44              		.loc 1 23 5
  24:src/interruptRoutine.cpp ****     __asm__ volatile("csrr %[scause], scause":[scause] "=r"(scause): : "a5", "a0", "a1", "a2", "a3"
  45              		.loc 1 24 5
  46              		.loc 1 24 119 is_stmt 0
  47              	#APP
  48              	# 24 "src/interruptRoutine.cpp" 1
  25              	    __asm__ volatile("csrr %[sepc], sepc":[sepc] "=r"(sepc): : "a5", "a0", "a1", "a2", "a3", "a4", 
  49              		csrr t1, scause
  50              	# 0 "" 2
  51              	#NO_APP
  52 0018 233C64FC 		sd	t1,-40(s0)
  53              	.LVL0:
  54              		.loc 1 25 5 is_stmt 1
  55              		.loc 1 25 111 is_stmt 0
  56              	#APP
  57              	# 25 "src/interruptRoutine.cpp" 1
  26              	    __asm__ volatile("csrr %[stat], sstatus":[stat] "=r"(sstatus): : "a5", "a0", "a1", "a2", "a3", 
  58              		csrr t1, sepc
  59              	# 0 "" 2
  60              	.LVL1:
  61              	#NO_APP
  62 0020 233864FC 		sd	t1,-48(s0)
  63              	.LVL2:
  64              		.loc 1 26 5 is_stmt 1
  65              		.loc 1 26 117 is_stmt 0
  66              	#APP
  67              	# 26 "src/interruptRoutine.cpp" 1
  27              	
  68              		csrr t1, sstatus
  69              	# 0 "" 2
GAS LISTING /tmp/ccNbFOaB.s 			page 3


  70              	.LVL3:
  71              	#NO_APP
  72 0028 233464FC 		sd	t1,-56(s0)
  73              	.LVL4:
  28:src/interruptRoutine.cpp ****     //argumenti preneti sistemskom pozivu
  29:src/interruptRoutine.cpp ****     uint64 a0, a1, a2, a3, a4, a5, a6, a7;
  74              		.loc 1 29 5 is_stmt 1
  30:src/interruptRoutine.cpp ****     __asm__ volatile("mv %[ax], a0":[ax] "=r"(a0): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7"
  75              		.loc 1 30 5
  76              		.loc 1 30 101 is_stmt 0
  77              	#APP
  78              	# 30 "src/interruptRoutine.cpp" 1
  31              	    __asm__ volatile("mv %[ax], a1":[ax] "=r"(a1): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7"
  79              		mv t1, a0
  80              	# 0 "" 2
  81              	.LVL5:
  82              	#NO_APP
  83 0030 233064FC 		sd	t1,-64(s0)
  84              	.LVL6:
  85              		.loc 1 31 5 is_stmt 1
  86              		.loc 1 31 101 is_stmt 0
  87              	#APP
  88              	# 31 "src/interruptRoutine.cpp" 1
  32              	    __asm__ volatile("mv %[ax], a2":[ax] "=r"(a2): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7"
  89              		mv t1, a1
  90              	# 0 "" 2
  91              	.LVL7:
  92              	#NO_APP
  93 0038 233C64FA 		sd	t1,-72(s0)
  94              	.LVL8:
  95              		.loc 1 32 5 is_stmt 1
  96              		.loc 1 32 101 is_stmt 0
  97              	#APP
  98              	# 32 "src/interruptRoutine.cpp" 1
  33              	    __asm__ volatile("mv %[ax], a3":[ax] "=r"(a3): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7"
  99              		mv t1, a2
 100              	# 0 "" 2
 101              	.LVL9:
 102              	#NO_APP
 103 0040 233864FA 		sd	t1,-80(s0)
 104              	.LVL10:
 105              		.loc 1 33 5 is_stmt 1
 106              		.loc 1 33 101 is_stmt 0
 107              	#APP
 108              	# 33 "src/interruptRoutine.cpp" 1
  34              	    __asm__ volatile("mv %[ax], a4":[ax] "=r"(a4): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7"
 109              		mv t1, a3
 110              	# 0 "" 2
 111              	.LVL11:
 112              	#NO_APP
 113 0048 233464FA 		sd	t1,-88(s0)
 114              	.LVL12:
 115              		.loc 1 34 5 is_stmt 1
 116              		.loc 1 34 101 is_stmt 0
 117              	#APP
 118              	# 34 "src/interruptRoutine.cpp" 1
  35              	    __asm__ volatile("mv %[ax], a5":[ax] "=r"(a5): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7"
GAS LISTING /tmp/ccNbFOaB.s 			page 4


 119              		mv t1, a4
 120              	# 0 "" 2
 121              	.LVL13:
 122              	#NO_APP
 123 0050 233064FA 		sd	t1,-96(s0)
 124              	.LVL14:
 125              		.loc 1 35 5 is_stmt 1
 126              		.loc 1 35 101 is_stmt 0
 127              	#APP
 128              	# 35 "src/interruptRoutine.cpp" 1
  36              	    __asm__ volatile("mv %[ax], a6":[ax] "=r"(a6): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7"
 129              		mv t1, a5
 130              	# 0 "" 2
 131              	.LVL15:
 132              	#NO_APP
 133 0058 233C64F8 		sd	t1,-104(s0)
 134              	.LVL16:
 135              		.loc 1 36 5 is_stmt 1
 136              		.loc 1 36 101 is_stmt 0
 137              	#APP
 138              	# 36 "src/interruptRoutine.cpp" 1
  37              	    __asm__ volatile("mv %[ax], a7":[ax] "=r"(a7): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7"
 139              		mv t1, a6
 140              	# 0 "" 2
 141              	.LVL17:
 142              	#NO_APP
 143 0060 233864F8 		sd	t1,-112(s0)
 144              	.LVL18:
 145              		.loc 1 37 5 is_stmt 1
 146              		.loc 1 37 101 is_stmt 0
 147              	#APP
 148              	# 37 "src/interruptRoutine.cpp" 1
  38              	
 149              		mv t1, a7
 150              	# 0 "" 2
 151              	.LVL19:
 152              	#NO_APP
 153 0068 233464F8 		sd	t1,-120(s0)
 154              	.LVL20:
  39:src/interruptRoutine.cpp ****     if (scause == 0x9 || scause == 0x8) {
 155              		.loc 1 39 5 is_stmt 1
 156              	.LBB2:
 157 006c 033784FD 		ld	a4,-40(s0)
 158 0070 93079000 		li	a5,9
 159 0074 6308F700 		beq	a4,a5,.L2
 160              		.loc 1 39 23 is_stmt 0 discriminator 1
 161 0078 033784FD 		ld	a4,-40(s0)
 162 007c 93078000 		li	a5,8
 163 0080 6314F736 		bne	a4,a5,.L3
 164              	.L2:
  40:src/interruptRoutine.cpp ****         //prekid zbog poziva ecall
  41:src/interruptRoutine.cpp ****         switch (a0) {
 165              		.loc 1 41 9 is_stmt 1
 166 0084 033704FC 		ld	a4,-64(s0)
 167 0088 93071009 		li	a5,145
 168 008c 6308F72C 		beq	a4,a5,.L4
 169 0090 033704FC 		ld	a4,-64(s0)
GAS LISTING /tmp/ccNbFOaB.s 			page 5


 170 0094 93071009 		li	a5,145
 171 0098 63EAE72C 		bgtu	a4,a5,.L5
 172 009c 033704FC 		ld	a4,-64(s0)
 173 00a0 93071008 		li	a5,129
 174 00a4 6302F72A 		beq	a4,a5,.L6
 175 00a8 033704FC 		ld	a4,-64(s0)
 176 00ac 93071008 		li	a5,129
 177 00b0 63EEE72A 		bgtu	a4,a5,.L5
 178 00b4 033704FC 		ld	a4,-64(s0)
 179 00b8 93072004 		li	a5,66
 180 00bc 63E2E704 		bgtu	a4,a5,.L7
 181 00c0 833704FC 		ld	a5,-64(s0)
 182 00c4 6384072A 		beqz	a5,.L5
 183 00c8 033704FC 		ld	a4,-64(s0)
 184 00cc 93072004 		li	a5,66
 185 00d0 63EEE728 		bgtu	a4,a5,.L5
 186 00d4 833704FC 		ld	a5,-64(s0)
 187 00d8 13972700 		slli	a4,a5,2
 188 00dc 97070000 		lla	a5,.L9
 188      93870700 
 189 00e4 B307F700 		add	a5,a4,a5
 190 00e8 83A70700 		lw	a5,0(a5)
 191 00ec 1B870700 		sext.w	a4,a5
 192 00f0 97070000 		lla	a5,.L9
 192      93870700 
 193 00f8 B307F700 		add	a5,a4,a5
 194 00fc 67800700 		jr	a5
 195              		.section	.rodata
 196 0071 000000   		.align	2
 197              		.align	2
 198              	.L9:
 199 0074 00000000 		.word	.L5-.L9
 200 0078 00000000 		.word	.L21-.L9
 201 007c 00000000 		.word	.L20-.L9
 202 0080 00000000 		.word	.L5-.L9
 203 0084 00000000 		.word	.L5-.L9
 204 0088 00000000 		.word	.L5-.L9
 205 008c 00000000 		.word	.L5-.L9
 206 0090 00000000 		.word	.L5-.L9
 207 0094 00000000 		.word	.L5-.L9
 208 0098 00000000 		.word	.L5-.L9
 209 009c 00000000 		.word	.L5-.L9
 210 00a0 00000000 		.word	.L5-.L9
 211 00a4 00000000 		.word	.L5-.L9
 212 00a8 00000000 		.word	.L5-.L9
 213 00ac 00000000 		.word	.L5-.L9
 214 00b0 00000000 		.word	.L5-.L9
 215 00b4 00000000 		.word	.L5-.L9
 216 00b8 00000000 		.word	.L19-.L9
 217 00bc 00000000 		.word	.L18-.L9
 218 00c0 00000000 		.word	.L17-.L9
 219 00c4 00000000 		.word	.L16-.L9
 220 00c8 00000000 		.word	.L5-.L9
 221 00cc 00000000 		.word	.L5-.L9
 222 00d0 00000000 		.word	.L5-.L9
 223 00d4 00000000 		.word	.L5-.L9
 224 00d8 00000000 		.word	.L5-.L9
GAS LISTING /tmp/ccNbFOaB.s 			page 6


 225 00dc 00000000 		.word	.L5-.L9
 226 00e0 00000000 		.word	.L5-.L9
 227 00e4 00000000 		.word	.L5-.L9
 228 00e8 00000000 		.word	.L5-.L9
 229 00ec 00000000 		.word	.L5-.L9
 230 00f0 00000000 		.word	.L5-.L9
 231 00f4 00000000 		.word	.L5-.L9
 232 00f8 00000000 		.word	.L15-.L9
 233 00fc 00000000 		.word	.L14-.L9
 234 0100 00000000 		.word	.L13-.L9
 235 0104 00000000 		.word	.L12-.L9
 236 0108 00000000 		.word	.L5-.L9
 237 010c 00000000 		.word	.L5-.L9
 238 0110 00000000 		.word	.L5-.L9
 239 0114 00000000 		.word	.L5-.L9
 240 0118 00000000 		.word	.L5-.L9
 241 011c 00000000 		.word	.L5-.L9
 242 0120 00000000 		.word	.L5-.L9
 243 0124 00000000 		.word	.L5-.L9
 244 0128 00000000 		.word	.L5-.L9
 245 012c 00000000 		.word	.L5-.L9
 246 0130 00000000 		.word	.L5-.L9
 247 0134 00000000 		.word	.L5-.L9
 248 0138 00000000 		.word	.L11-.L9
 249 013c 00000000 		.word	.L5-.L9
 250 0140 00000000 		.word	.L5-.L9
 251 0144 00000000 		.word	.L5-.L9
 252 0148 00000000 		.word	.L5-.L9
 253 014c 00000000 		.word	.L5-.L9
 254 0150 00000000 		.word	.L5-.L9
 255 0154 00000000 		.word	.L5-.L9
 256 0158 00000000 		.word	.L5-.L9
 257 015c 00000000 		.word	.L5-.L9
 258 0160 00000000 		.word	.L5-.L9
 259 0164 00000000 		.word	.L5-.L9
 260 0168 00000000 		.word	.L5-.L9
 261 016c 00000000 		.word	.L5-.L9
 262 0170 00000000 		.word	.L5-.L9
 263 0174 00000000 		.word	.L5-.L9
 264 0178 00000000 		.word	.L10-.L9
 265 017c 00000000 		.word	.L8-.L9
 266              		.text
 267              	.L7:
 268 0100 033704FC 		ld	a4,-64(s0)
 269 0104 93070008 		li	a5,128
 270 0108 630AF71E 		beq	a4,a5,.L22
 271 010c 6F000026 		j	.L5
 272              	.L21:
  42:src/interruptRoutine.cpp ****             case 0x01:
 273              		.loc 1 42 13
  43:src/interruptRoutine.cpp ****                 //mem_alloc
  44:src/interruptRoutine.cpp ****                 //a1 = broj blokova koje treba alocirati
  45:src/interruptRoutine.cpp ****                 KMemory::kmalloc((size_t)a1);
 274              		.loc 1 45 17
 275              		.loc 1 45 33 is_stmt 0
 276 0110 033584FB 		ld	a0,-72(s0)
 277 0114 97000000 		call	_ZN7KMemory7kmallocEm@plt
GAS LISTING /tmp/ccNbFOaB.s 			page 7


 277      E7800000 
 278              	.LVL21:
  46:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 279              		.loc 1 46 17 is_stmt 1
 280              		.loc 1 46 50 is_stmt 0
 281              	#APP
 282              	# 46 "src/interruptRoutine.cpp" 1
  47              	                break;
 283              		sd a0, 80(s0)
 284              	# 0 "" 2
 285              		.loc 1 47 17 is_stmt 1
 286              	#NO_APP
 287 0120 6F00802A 		j	.L23
 288              	.LVL22:
 289              	.L20:
  48:src/interruptRoutine.cpp ****             case 0x02:
 290              		.loc 1 48 13
  49:src/interruptRoutine.cpp ****                 //mem_free
  50:src/interruptRoutine.cpp ****                 //a1 = pokazivac na memoriju koju dealociramo, dobijen sa mem_alloc
  51:src/interruptRoutine.cpp ****                 KMemory::kfree((void*)a1);
 291              		.loc 1 51 17
 292              		.loc 1 51 31 is_stmt 0
 293 0124 833784FB 		ld	a5,-72(s0)
 294 0128 13850700 		mv	a0,a5
 295 012c 97000000 		call	_ZN7KMemory5kfreeEPv@plt
 295      E7800000 
 296              	.LVL23:
  52:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 297              		.loc 1 52 17 is_stmt 1
 298              		.loc 1 52 50 is_stmt 0
 299              	#APP
 300              	# 52 "src/interruptRoutine.cpp" 1
  53              	                break;
 301              		sd a0, 80(s0)
 302              	# 0 "" 2
 303              		.loc 1 53 17 is_stmt 1
 304              	#NO_APP
 305 0138 6F000029 		j	.L23
 306              	.LVL24:
 307              	.L19:
  54:src/interruptRoutine.cpp ****             case 0x11:
 308              		.loc 1 54 13
  55:src/interruptRoutine.cpp ****                 //thread_create
  56:src/interruptRoutine.cpp ****                 //a1 = pokazivac na rucku u koju upisujemo identifikator niti(adresa u memoriji)
  57:src/interruptRoutine.cpp ****                 //a2 = pokazivac na funkciju koju nit treba da izvrsava
  58:src/interruptRoutine.cpp ****                 //a3 = argumenti funkcije koju nit treba da izvrsava
  59:src/interruptRoutine.cpp ****                 //a4 = poslednja lokacija alociranog steka(najniza adresa)
  60:src/interruptRoutine.cpp ****                 *((thread_t*)a1) = TCB::createThread((TCB::Body)a2, (void*)a3, (uint64*)a4);
 309              		.loc 1 60 17
 310              		.loc 1 60 53 is_stmt 0
 311 013c 833704FB 		ld	a5,-80(s0)
 312 0140 033784FA 		ld	a4,-88(s0)
 313 0144 833604FA 		ld	a3,-96(s0)
 314              		.loc 1 60 17
 315 0148 833484FB 		ld	s1,-72(s0)
 316              		.loc 1 60 53
 317 014c 13860600 		mv	a2,a3
GAS LISTING /tmp/ccNbFOaB.s 			page 8


 318 0150 93050700 		mv	a1,a4
 319 0154 13850700 		mv	a0,a5
 320 0158 97000000 		call	_ZN3TCB12createThreadEPFvPvES0_Pm@plt
 320      E7800000 
 321              	.LVL25:
 322 0160 93070500 		mv	a5,a0
 323              		.loc 1 60 34
 324 0164 23B0F400 		sd	a5,0(s1)
  61:src/interruptRoutine.cpp ****                 if (*((thread_t*)a1) != nullptr) {
 325              		.loc 1 61 17 is_stmt 1
 326              		.loc 1 61 21 is_stmt 0
 327 0168 833784FB 		ld	a5,-72(s0)
 328 016c 83B70700 		ld	a5,0(a5)
 329              		.loc 1 61 17
 330 0170 63840702 		beqz	a5,.L24
  62:src/interruptRoutine.cpp ****                     if ((TCB::Body)a2 != nullptr) {
 331              		.loc 1 62 21 is_stmt 1
 332              		.loc 1 62 39 is_stmt 0
 333 0174 833704FB 		ld	a5,-80(s0)
 334              		.loc 1 62 21
 335 0178 638C0700 		beqz	a5,.L25
  63:src/interruptRoutine.cpp ****                         Scheduler::put(*((thread_t*)a1));
 336              		.loc 1 63 25 is_stmt 1
 337              		.loc 1 63 39 is_stmt 0
 338 017c 833784FB 		ld	a5,-72(s0)
 339 0180 83B70700 		ld	a5,0(a5)
 340 0184 13850700 		mv	a0,a5
 341 0188 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 341      E7800000 
 342              	.LVL26:
 343              	.L25:
  64:src/interruptRoutine.cpp ****                     }
  65:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, 0");
 344              		.loc 1 65 21 is_stmt 1
 345              		.loc 1 65 49 is_stmt 0
 346              	#APP
 347              	# 65 "src/interruptRoutine.cpp" 1
  66              	                } else {
 348              		li a0, 0
 349              	# 0 "" 2
 350              	#NO_APP
 351 0194 6F008000 		j	.L26
 352              	.L24:
  67:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, -1");
 353              		.loc 1 67 21 is_stmt 1
 354              		.loc 1 67 50 is_stmt 0
 355              	#APP
 356              	# 67 "src/interruptRoutine.cpp" 1
  68              	                }
 357              		li a0, -1
 358              	# 0 "" 2
 359              	#NO_APP
 360              	.L26:
  69:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 361              		.loc 1 69 17 is_stmt 1
 362              		.loc 1 69 50 is_stmt 0
 363              	#APP
GAS LISTING /tmp/ccNbFOaB.s 			page 9


 364              	# 69 "src/interruptRoutine.cpp" 1
  70              	                break;
 365              		sd a0, 80(s0)
 366              	# 0 "" 2
 367              		.loc 1 70 17 is_stmt 1
 368              	#NO_APP
 369 01a0 6F008022 		j	.L23
 370              	.LVL27:
 371              	.L18:
  71:src/interruptRoutine.cpp ****             case 0x12:
 372              		.loc 1 71 13
  72:src/interruptRoutine.cpp ****                 //thread_exit
  73:src/interruptRoutine.cpp ****                 TCB::getRunning()->setStatus(TCB::FINISHED);
 373              		.loc 1 73 17
 374              		.loc 1 73 45 is_stmt 0
 375 01a4 97000000 		call	_ZN3TCB10getRunningEv
 375      E7800000 
 376              	.LVL28:
 377 01ac 93070500 		mv	a5,a0
 378 01b0 93055000 		li	a1,5
 379 01b4 13850700 		mv	a0,a5
 380 01b8 97000000 		call	_ZN3TCB9setStatusENS_12ThreadStatusE
 380      E7800000 
 381              	.LVL29:
  74:src/interruptRoutine.cpp ****                 TCB::releaseJoined();
 382              		.loc 1 74 17 is_stmt 1
 383              		.loc 1 74 35 is_stmt 0
 384 01c0 97000000 		call	_ZN3TCB13releaseJoinedEv@plt
 384      E7800000 
 385              	.LVL30:
  75:src/interruptRoutine.cpp ****                 __asm__ volatile("li a0, 0");
 386              		.loc 1 75 17 is_stmt 1
 387              		.loc 1 75 45 is_stmt 0
 388              	#APP
 389              	# 75 "src/interruptRoutine.cpp" 1
  76              	                __asm__ volatile("sd a0, 80(s0)");
 390              		li a0, 0
 391              	# 0 "" 2
 392              		.loc 1 76 17 is_stmt 1
 393              		.loc 1 76 50 is_stmt 0
 394              	# 76 "src/interruptRoutine.cpp" 1
  77              	                TCB::dispatch();
 395              		sd a0, 80(s0)
 396              	# 0 "" 2
 397              		.loc 1 77 17 is_stmt 1
 398              		.loc 1 77 30 is_stmt 0
 399              	#NO_APP
 400 01d0 97000000 		call	_ZN3TCB8dispatchEv@plt
 400      E7800000 
 401              	.LVL31:
  78:src/interruptRoutine.cpp ****                 break;
 402              		.loc 1 78 17 is_stmt 1
 403 01d8 6F00001F 		j	.L23
 404              	.LVL32:
 405              	.L17:
  79:src/interruptRoutine.cpp ****             case 0x13:
 406              		.loc 1 79 13
GAS LISTING /tmp/ccNbFOaB.s 			page 10


  80:src/interruptRoutine.cpp ****                 //thread_dispatch
  81:src/interruptRoutine.cpp ****                 TCB::dispatch();
 407              		.loc 1 81 17
 408              		.loc 1 81 30 is_stmt 0
 409 01dc 97000000 		call	_ZN3TCB8dispatchEv@plt
 409      E7800000 
 410              	.LVL33:
  82:src/interruptRoutine.cpp ****                 break;
 411              		.loc 1 82 17 is_stmt 1
 412 01e4 6F00401E 		j	.L23
 413              	.LVL34:
 414              	.L16:
  83:src/interruptRoutine.cpp ****             case 0x14:
 415              		.loc 1 83 13
  84:src/interruptRoutine.cpp ****                 //thread_join
  85:src/interruptRoutine.cpp ****                 //a1 = rucka niti na koju tekuca nit treba da ceka
  86:src/interruptRoutine.cpp ****                 TCB::threadJoin((thread_t)a1);
 416              		.loc 1 86 17
 417              		.loc 1 86 32 is_stmt 0
 418 01e8 833784FB 		ld	a5,-72(s0)
 419 01ec 13850700 		mv	a0,a5
 420 01f0 97000000 		call	_ZN3TCB10threadJoinEPS_@plt
 420      E7800000 
 421              	.LVL35:
  87:src/interruptRoutine.cpp ****                 TCB::dispatch();
 422              		.loc 1 87 17 is_stmt 1
 423              		.loc 1 87 30 is_stmt 0
 424 01f8 97000000 		call	_ZN3TCB8dispatchEv@plt
 424      E7800000 
 425              	.LVL36:
  88:src/interruptRoutine.cpp ****                 break;
 426              		.loc 1 88 17 is_stmt 1
 427 0200 6F00801C 		j	.L23
 428              	.LVL37:
 429              	.L15:
  89:src/interruptRoutine.cpp ****             case 0x21:
 430              		.loc 1 89 13
  90:src/interruptRoutine.cpp ****                 //sem_open
  91:src/interruptRoutine.cpp ****                 //a1 = pokazivac na rucku semafora, u koju se upisuje adresa semafora u memoriji
  92:src/interruptRoutine.cpp ****                 *((sem_t*)a1) = KSem::initSem((uint)a2);
 431              		.loc 1 92 17
 432              		.loc 1 92 46 is_stmt 0
 433 0204 833704FB 		ld	a5,-80(s0)
 434 0208 9B870700 		sext.w	a5,a5
 435              		.loc 1 92 17
 436 020c 833484FB 		ld	s1,-72(s0)
 437              		.loc 1 92 46
 438 0210 13850700 		mv	a0,a5
 439 0214 97000000 		call	_ZN4KSem7initSemEj@plt
 439      E7800000 
 440              	.LVL38:
 441 021c 93070500 		mv	a5,a0
 442              		.loc 1 92 31
 443 0220 23B0F400 		sd	a5,0(s1)
  93:src/interruptRoutine.cpp ****                 if (*((sem_t*)a1) != nullptr) {
 444              		.loc 1 93 17 is_stmt 1
 445              		.loc 1 93 21 is_stmt 0
GAS LISTING /tmp/ccNbFOaB.s 			page 11


 446 0224 833784FB 		ld	a5,-72(s0)
 447 0228 83B70700 		ld	a5,0(a5)
 448              		.loc 1 93 17
 449 022c 63860700 		beqz	a5,.L27
  94:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, 0");
 450              		.loc 1 94 21 is_stmt 1
 451              		.loc 1 94 49 is_stmt 0
 452              	#APP
 453              	# 94 "src/interruptRoutine.cpp" 1
  95              	                } else {
 454              		li a0, 0
 455              	# 0 "" 2
 456              	#NO_APP
 457 0234 6F008000 		j	.L28
 458              	.L27:
  96:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, -1");
 459              		.loc 1 96 21 is_stmt 1
 460              		.loc 1 96 50 is_stmt 0
 461              	#APP
 462              	# 96 "src/interruptRoutine.cpp" 1
  97              	                }
 463              		li a0, -1
 464              	# 0 "" 2
 465              	#NO_APP
 466              	.L28:
  98:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 467              		.loc 1 98 17 is_stmt 1
 468              		.loc 1 98 50 is_stmt 0
 469              	#APP
 470              	# 98 "src/interruptRoutine.cpp" 1
  99              	                break;
 471              		sd a0, 80(s0)
 472              	# 0 "" 2
 473              		.loc 1 99 17 is_stmt 1
 474              	#NO_APP
 475 0240 6F008018 		j	.L23
 476              	.LVL39:
 477              	.L14:
 100:src/interruptRoutine.cpp ****             case 0x22:
 478              		.loc 1 100 13
 101:src/interruptRoutine.cpp ****                 //sem_close
 102:src/interruptRoutine.cpp ****                 //a1 = rucka semafora
 103:src/interruptRoutine.cpp ****                 KSem::closeSem((sem_t)a1);
 479              		.loc 1 103 17
 480              		.loc 1 103 31 is_stmt 0
 481 0244 833784FB 		ld	a5,-72(s0)
 482 0248 13850700 		mv	a0,a5
 483 024c 97000000 		call	_ZN4KSem8closeSemEPS_@plt
 483      E7800000 
 484              	.LVL40:
 104:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 485              		.loc 1 104 17 is_stmt 1
 486              		.loc 1 104 50 is_stmt 0
 487              	#APP
 488              	# 104 "src/interruptRoutine.cpp" 1
 105              	                break;
 489              		sd a0, 80(s0)
GAS LISTING /tmp/ccNbFOaB.s 			page 12


 490              	# 0 "" 2
 491              		.loc 1 105 17 is_stmt 1
 492              	#NO_APP
 493 0258 6F000017 		j	.L23
 494              	.LVL41:
 495              	.L13:
 106:src/interruptRoutine.cpp ****             case 0x23:
 496              		.loc 1 106 13
 107:src/interruptRoutine.cpp ****                 //sem_wait
 108:src/interruptRoutine.cpp ****                 //a1 = rucka semafora
 109:src/interruptRoutine.cpp ****                 ((sem_t)a1)->wait();
 497              		.loc 1 109 17
 498              		.loc 1 109 34 is_stmt 0
 499 025c 833784FB 		ld	a5,-72(s0)
 500 0260 13850700 		mv	a0,a5
 501 0264 97000000 		call	_ZN4KSem4waitEv@plt
 501      E7800000 
 502              	.LVL42:
 110:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 503              		.loc 1 110 17 is_stmt 1
 504              		.loc 1 110 50 is_stmt 0
 505              	#APP
 506              	# 110 "src/interruptRoutine.cpp" 1
 111              	                break;
 507              		sd a0, 80(s0)
 508              	# 0 "" 2
 509              		.loc 1 111 17 is_stmt 1
 510              	#NO_APP
 511 0270 6F008015 		j	.L23
 512              	.LVL43:
 513              	.L12:
 112:src/interruptRoutine.cpp ****             case 0x24:
 514              		.loc 1 112 13
 113:src/interruptRoutine.cpp ****                 //sem_signal
 114:src/interruptRoutine.cpp ****                 //a1 = rucka semafora
 115:src/interruptRoutine.cpp ****                 ((sem_t)a1)->signal();
 515              		.loc 1 115 17
 516              		.loc 1 115 36 is_stmt 0
 517 0274 833784FB 		ld	a5,-72(s0)
 518 0278 13850700 		mv	a0,a5
 519 027c 97000000 		call	_ZN4KSem6signalEv@plt
 519      E7800000 
 520              	.LVL44:
 116:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 521              		.loc 1 116 17 is_stmt 1
 522              		.loc 1 116 50 is_stmt 0
 523              	#APP
 524              	# 116 "src/interruptRoutine.cpp" 1
 117              	                break;
 525              		sd a0, 80(s0)
 526              	# 0 "" 2
 527              		.loc 1 117 17 is_stmt 1
 528              	#NO_APP
 529 0288 6F000014 		j	.L23
 530              	.LVL45:
 531              	.L11:
 118:src/interruptRoutine.cpp ****             case 0x31:
GAS LISTING /tmp/ccNbFOaB.s 			page 13


 532              		.loc 1 118 13
 119:src/interruptRoutine.cpp ****                 //time_sleep
 120:src/interruptRoutine.cpp ****                 //a1 = broj perioda tajmera na koji se uspavljuje tekuca nit
 121:src/interruptRoutine.cpp ****                 if ((time_t)a1 > 0) {
 533              		.loc 1 121 17
 534 028c 833784FB 		ld	a5,-72(s0)
 535 0290 63860700 		beqz	a5,.L29
 122:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, 0");
 536              		.loc 1 122 21
 537              		.loc 1 122 49 is_stmt 0
 538              	#APP
 539              	# 122 "src/interruptRoutine.cpp" 1
 123              	                } else {
 540              		li a0, 0
 541              	# 0 "" 2
 542              	#NO_APP
 543 0298 6F008000 		j	.L30
 544              	.L29:
 124:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, -1");
 545              		.loc 1 124 21 is_stmt 1
 546              		.loc 1 124 50 is_stmt 0
 547              	#APP
 548              	# 124 "src/interruptRoutine.cpp" 1
 125              	                }
 549              		li a0, -1
 550              	# 0 "" 2
 551              	#NO_APP
 552              	.L30:
 126:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 553              		.loc 1 126 17 is_stmt 1
 554              		.loc 1 126 50 is_stmt 0
 555              	#APP
 556              	# 126 "src/interruptRoutine.cpp" 1
 127              	                if ((time_t)a1 > 0) {
 557              		sd a0, 80(s0)
 558              	# 0 "" 2
 559              		.loc 1 127 17 is_stmt 1
 560              	#NO_APP
 561 02a4 833784FB 		ld	a5,-72(s0)
 562 02a8 638E0710 		beqz	a5,.L40
 128:src/interruptRoutine.cpp ****                     Scheduler::putToSleep(TCB::getRunning(), (time_t)a1);
 563              		.loc 1 128 21
 564              		.loc 1 128 42 is_stmt 0
 565 02ac 97000000 		call	_ZN3TCB10getRunningEv
 565      E7800000 
 566              	.LVL46:
 567 02b4 93070500 		mv	a5,a0
 568 02b8 833584FB 		ld	a1,-72(s0)
 569 02bc 13850700 		mv	a0,a5
 570 02c0 97000000 		call	_ZN9Scheduler10putToSleepEP3TCBm@plt
 570      E7800000 
 571              	.LVL47:
 129:src/interruptRoutine.cpp ****                     TCB::dispatch();
 572              		.loc 1 129 21 is_stmt 1
 573              		.loc 1 129 34 is_stmt 0
 574 02c8 97000000 		call	_ZN3TCB8dispatchEv@plt
 574      E7800000 
GAS LISTING /tmp/ccNbFOaB.s 			page 14


 575              	.LVL48:
 130:src/interruptRoutine.cpp ****                 }
 131:src/interruptRoutine.cpp ****                 break;
 576              		.loc 1 131 17 is_stmt 1
 577 02d0 6F00400F 		j	.L40
 578              	.LVL49:
 579              	.L10:
 132:src/interruptRoutine.cpp ****             case 0x41:
 580              		.loc 1 132 13
 133:src/interruptRoutine.cpp ****                 //getc
 134:src/interruptRoutine.cpp ****                 KConsole::kgetc();
 581              		.loc 1 134 17
 582              		.loc 1 134 32 is_stmt 0
 583 02d4 97000000 		call	_ZN8KConsole5kgetcEv@plt
 583      E7800000 
 584              	.LVL50:
 135:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 585              		.loc 1 135 17 is_stmt 1
 586              		.loc 1 135 50 is_stmt 0
 587              	#APP
 588              	# 135 "src/interruptRoutine.cpp" 1
 136              	                break;
 589              		sd a0, 80(s0)
 590              	# 0 "" 2
 591              		.loc 1 136 17 is_stmt 1
 592              	#NO_APP
 593 02e0 6F00800E 		j	.L23
 594              	.LVL51:
 595              	.L8:
 137:src/interruptRoutine.cpp ****             case 0x42:
 596              		.loc 1 137 13
 138:src/interruptRoutine.cpp ****                 //putc
 139:src/interruptRoutine.cpp ****                 //a1 = karakter koji se upisuje u bafer za ispis na konzolu
 140:src/interruptRoutine.cpp ****                 KConsole::kputc((char)a1);
 597              		.loc 1 140 17
 598              		.loc 1 140 32 is_stmt 0
 599 02e4 833784FB 		ld	a5,-72(s0)
 600 02e8 93F7F70F 		andi	a5,a5,0xff
 601 02ec 13850700 		mv	a0,a5
 602 02f0 97000000 		call	_ZN8KConsole5kputcEc@plt
 602      E7800000 
 603              	.LVL52:
 141:src/interruptRoutine.cpp ****                 break;
 604              		.loc 1 141 17 is_stmt 1
 605 02f8 6F00000D 		j	.L23
 606              	.LVL53:
 607              	.L22:
 142:src/interruptRoutine.cpp ****             case 0x80:
 608              		.loc 1 142 13
 143:src/interruptRoutine.cpp ****                 //alloc thread
 144:src/interruptRoutine.cpp ****                 //a1 = pokazivac na rucku u koju upisujemo identifikator niti(adresa u memoriji)
 145:src/interruptRoutine.cpp ****                 //a2 = pokazivac na funkciju koju nit treba da izvrsava
 146:src/interruptRoutine.cpp ****                 //a3 = argumenti funkcije koju nit treba da izvrsava
 147:src/interruptRoutine.cpp ****                 //a4 = poslednja lokacija alociranog steka(najniza adresa)
 148:src/interruptRoutine.cpp ****                 *((thread_t*)a1) = TCB::createThread((TCB::Body)a2, (void*)a3, (uint64*)a4);
 609              		.loc 1 148 17
 610              		.loc 1 148 53 is_stmt 0
GAS LISTING /tmp/ccNbFOaB.s 			page 15


 611 02fc 833704FB 		ld	a5,-80(s0)
 612 0300 033784FA 		ld	a4,-88(s0)
 613 0304 833604FA 		ld	a3,-96(s0)
 614              		.loc 1 148 17
 615 0308 833484FB 		ld	s1,-72(s0)
 616              		.loc 1 148 53
 617 030c 13860600 		mv	a2,a3
 618 0310 93050700 		mv	a1,a4
 619 0314 13850700 		mv	a0,a5
 620 0318 97000000 		call	_ZN3TCB12createThreadEPFvPvES0_Pm@plt
 620      E7800000 
 621              	.LVL54:
 622 0320 93070500 		mv	a5,a0
 623              		.loc 1 148 34
 624 0324 23B0F400 		sd	a5,0(s1)
 149:src/interruptRoutine.cpp ****                 if (*((thread_t*)a1) != nullptr) {
 625              		.loc 1 149 17 is_stmt 1
 626              		.loc 1 149 21 is_stmt 0
 627 0328 833784FB 		ld	a5,-72(s0)
 628 032c 83B70700 		ld	a5,0(a5)
 629              		.loc 1 149 17
 630 0330 63860700 		beqz	a5,.L32
 150:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, 0");
 631              		.loc 1 150 21 is_stmt 1
 632              		.loc 1 150 49 is_stmt 0
 633              	#APP
 634              	# 150 "src/interruptRoutine.cpp" 1
 151              	                } else {
 635              		li a0, 0
 636              	# 0 "" 2
 637              	#NO_APP
 638 0338 6F008000 		j	.L33
 639              	.L32:
 152:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, -1");
 640              		.loc 1 152 21 is_stmt 1
 641              		.loc 1 152 50 is_stmt 0
 642              	#APP
 643              	# 152 "src/interruptRoutine.cpp" 1
 153              	                }
 644              		li a0, -1
 645              	# 0 "" 2
 646              	#NO_APP
 647              	.L33:
 154:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 648              		.loc 1 154 17 is_stmt 1
 649              		.loc 1 154 50 is_stmt 0
 650              	#APP
 651              	# 154 "src/interruptRoutine.cpp" 1
 155              	                break;
 652              		sd a0, 80(s0)
 653              	# 0 "" 2
 654              		.loc 1 155 17 is_stmt 1
 655              	#NO_APP
 656 0344 6F004008 		j	.L23
 657              	.LVL55:
 658              	.L6:
 156:src/interruptRoutine.cpp ****             case 0x81:
GAS LISTING /tmp/ccNbFOaB.s 			page 16


 659              		.loc 1 156 13
 157:src/interruptRoutine.cpp ****                 //start thread
 158:src/interruptRoutine.cpp ****                 //a1 = rucka niti koja se stavlja u scheduler
 159:src/interruptRoutine.cpp ****                 Scheduler::put((thread_t)a1);
 660              		.loc 1 159 17
 661              		.loc 1 159 31 is_stmt 0
 662 0348 833784FB 		ld	a5,-72(s0)
 663 034c 13850700 		mv	a0,a5
 664 0350 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 664      E7800000 
 665              	.LVL56:
 160:src/interruptRoutine.cpp ****                 break;
 666              		.loc 1 160 17 is_stmt 1
 667 0358 6F000007 		j	.L23
 668              	.LVL57:
 669              	.L4:
 161:src/interruptRoutine.cpp ****             case 0x91:
 670              		.loc 1 161 13
 162:src/interruptRoutine.cpp ****                 //printInteger
 163:src/interruptRoutine.cpp ****                 //a1 = integer za ispis
 164:src/interruptRoutine.cpp ****                 kPrintInt(a1);
 671              		.loc 1 164 17
 672              		.loc 1 164 26 is_stmt 0
 673 035c 033584FB 		ld	a0,-72(s0)
 674 0360 97000000 		call	_Z9kPrintIntm@plt
 674      E7800000 
 675              	.LVL58:
 165:src/interruptRoutine.cpp ****                 break;
 676              		.loc 1 165 17 is_stmt 1
 677 0368 6F000006 		j	.L23
 678              	.LVL59:
 679              	.L5:
 166:src/interruptRoutine.cpp ****             default:
 680              		.loc 1 166 13
 167:src/interruptRoutine.cpp ****                 printString("\nNepostojeci op code: ");
 681              		.loc 1 167 17
 682              		.loc 1 167 28 is_stmt 0
 683 036c 17050000 		lla	a0,.LC0
 683      13050500 
 684 0374 97000000 		call	_Z11printStringPKc@plt
 684      E7800000 
 685              	.LVL60:
 168:src/interruptRoutine.cpp ****                 kPrintInt(a0);
 686              		.loc 1 168 17 is_stmt 1
 687              		.loc 1 168 26 is_stmt 0
 688 037c 033504FC 		ld	a0,-64(s0)
 689 0380 97000000 		call	_Z9kPrintIntm@plt
 689      E7800000 
 690              	.LVL61:
 169:src/interruptRoutine.cpp ****                 printString("\nscause: ");
 691              		.loc 1 169 17 is_stmt 1
 692              		.loc 1 169 28 is_stmt 0
 693 0388 17050000 		lla	a0,.LC1
 693      13050500 
 694 0390 97000000 		call	_Z11printStringPKc@plt
 694      E7800000 
 695              	.LVL62:
GAS LISTING /tmp/ccNbFOaB.s 			page 17


 170:src/interruptRoutine.cpp ****                 kPrintInt(scause);
 696              		.loc 1 170 17 is_stmt 1
 697              		.loc 1 170 26 is_stmt 0
 698 0398 033584FD 		ld	a0,-40(s0)
 699 039c 97000000 		call	_Z9kPrintIntm@plt
 699      E7800000 
 700              	.LVL63:
 171:src/interruptRoutine.cpp ****                 printString("\nsepc: ");
 701              		.loc 1 171 17 is_stmt 1
 702              		.loc 1 171 28 is_stmt 0
 703 03a4 17050000 		lla	a0,.LC2
 703      13050500 
 704 03ac 97000000 		call	_Z11printStringPKc@plt
 704      E7800000 
 705              	.LVL64:
 172:src/interruptRoutine.cpp ****                 kPrintInt(sepc);
 706              		.loc 1 172 17 is_stmt 1
 707              		.loc 1 172 26 is_stmt 0
 708 03b4 033504FD 		ld	a0,-48(s0)
 709 03b8 97000000 		call	_Z9kPrintIntm@plt
 709      E7800000 
 710              	.LVL65:
 173:src/interruptRoutine.cpp ****                 break;
 711              		.loc 1 173 17 is_stmt 1
 712 03c0 6F008000 		j	.L23
 713              	.L40:
 131:src/interruptRoutine.cpp ****             case 0x41:
 714              		.loc 1 131 17 is_stmt 0
 715 03c4 13000000 		nop
 716              	.L23:
 174:src/interruptRoutine.cpp ****         }
 175:src/interruptRoutine.cpp ****         //sepc pokazuje na ecall instrukciju, treba preci na sledecu instrukciju
 176:src/interruptRoutine.cpp ****         sepc += 4;
 717              		.loc 1 176 9 is_stmt 1
 718              		.loc 1 176 14 is_stmt 0
 719 03c8 833704FD 		ld	a5,-48(s0)
 720 03cc 93874700 		addi	a5,a5,4
 721 03d0 2338F4FC 		sd	a5,-48(s0)
 722              	.LVL66:
 177:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 723              		.loc 1 177 9 is_stmt 1
 724              		.loc 1 177 66 is_stmt 0
 725 03d4 833704FD 		ld	a5,-48(s0)
 726              	#APP
 727              	# 177 "src/interruptRoutine.cpp" 1
 178              	        __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 728              		csrw sepc, a5
 729              	# 0 "" 2
 730              		.loc 1 178 9 is_stmt 1
 731              		.loc 1 178 71 is_stmt 0
 732              	#NO_APP
 733 03dc 833784FC 		ld	a5,-56(s0)
 734              	.LVL67:
 735              	#APP
 736              	# 178 "src/interruptRoutine.cpp" 1
 179              	    } else if (scause == 0x8000000000000009) {
 737              		csrw sstatus, a5
GAS LISTING /tmp/ccNbFOaB.s 			page 18


 738              	# 0 "" 2
 739              	#NO_APP
 740              	.LBE2:
 180:src/interruptRoutine.cpp ****         //spoljasnji hardverski prekid (od konzole)
 181:src/interruptRoutine.cpp ****         uint64 irq = plic_claim();
 182:src/interruptRoutine.cpp ****         if (irq == CONSOLE_IRQ) {
 183:src/interruptRoutine.cpp ****             if (*KConsole::sr & CONSOLE_RX_STATUS_BIT) {
 184:src/interruptRoutine.cpp ****                 KConsole::placeInInput(*KConsole::dr);
 185:src/interruptRoutine.cpp ****             }
 186:src/interruptRoutine.cpp ****             //printString("\nobradjen prekid konzole\n");
 187:src/interruptRoutine.cpp ****         } else {
 188:src/interruptRoutine.cpp ****             printString("Neki drugi prekid\n");
 189:src/interruptRoutine.cpp ****         }
 190:src/interruptRoutine.cpp ****         plic_complete(irq);
 191:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 192:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 193:src/interruptRoutine.cpp ****         Riscv::mc_sip(Riscv::SIP_SEIP);
 194:src/interruptRoutine.cpp ****     } else if (scause == 0x8000000000000001) {
 195:src/interruptRoutine.cpp ****         //prekid od tajmera
 196:src/interruptRoutine.cpp ****         Scheduler::wake();
 197:src/interruptRoutine.cpp ****         TCB::getRunningTimeSlice()++;
 198:src/interruptRoutine.cpp ****         if (TCB::getRunningTimeSlice() >= TCB::getRunning()->getTimeSlice()) {
 199:src/interruptRoutine.cpp ****             TCB::dispatch();
 200:src/interruptRoutine.cpp ****         }
 201:src/interruptRoutine.cpp **** 
 202:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 203:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 204:src/interruptRoutine.cpp ****         Riscv::mc_sip(Riscv::SIP_SSIP);
 205:src/interruptRoutine.cpp ****     } else {
 206:src/interruptRoutine.cpp ****         printString("\nGreska u prekidnoj rutini\n");
 207:src/interruptRoutine.cpp ****         printString("scause: ");
 208:src/interruptRoutine.cpp ****         kPrintInt(scause);
 209:src/interruptRoutine.cpp ****         printString("\nsepc: ");
 210:src/interruptRoutine.cpp ****         kPrintInt(sepc);
 211:src/interruptRoutine.cpp ****     }
 212:src/interruptRoutine.cpp **** }...
 741              		.loc 1 212 1
 742 03e4 6F000019 		j	.L41
 743              	.LVL68:
 744              	.L3:
 745              	.LBB10:
 746              	.LBB3:
 179:src/interruptRoutine.cpp ****     } else if (scause == 0x8000000000000009) {
 747              		.loc 1 179 12 is_stmt 1
 748              	.LBB4:
 749 03e8 033784FD 		ld	a4,-40(s0)
 750              	.LVL69:
 751 03ec 9307F0FF 		li	a5,-1
 752 03f0 9397F703 		slli	a5,a5,63
 753 03f4 93879700 		addi	a5,a5,9
 754 03f8 631EF708 		bne	a4,a5,.L35
 755              	.LBB5:
 181:src/interruptRoutine.cpp ****         uint64 irq = plic_claim();
 756              		.loc 1 181 9
 181:src/interruptRoutine.cpp ****         uint64 irq = plic_claim();
 757              		.loc 1 181 32 is_stmt 0
 758 03fc 97000000 		call	plic_claim@plt
GAS LISTING /tmp/ccNbFOaB.s 			page 19


 758      E7800000 
 759              	.LVL70:
 760 0404 93070500 		mv	a5,a0
 181:src/interruptRoutine.cpp ****         uint64 irq = plic_claim();
 761              		.loc 1 181 33
 762 0408 2330F4F8 		sd	a5,-128(s0)
 763              	.LVL71:
 182:src/interruptRoutine.cpp ****         if (irq == CONSOLE_IRQ) {
 764              		.loc 1 182 9 is_stmt 1
 765 040c 033704F8 		ld	a4,-128(s0)
 766 0410 9307A000 		li	a5,10
 767 0414 631EF702 		bne	a4,a5,.L36
 183:src/interruptRoutine.cpp ****             if (*KConsole::sr & CONSOLE_RX_STATUS_BIT) {
 768              		.loc 1 183 13
 183:src/interruptRoutine.cpp ****             if (*KConsole::sr & CONSOLE_RX_STATUS_BIT) {
 769              		.loc 1 183 17 is_stmt 0
 770 0418 97070000 		la	a5,_ZN8KConsole2srE
 770      83B70700 
 771 0420 83B70700 		ld	a5,0(a5)
 772 0424 83C70700 		lbu	a5,0(a5)
 183:src/interruptRoutine.cpp ****             if (*KConsole::sr & CONSOLE_RX_STATUS_BIT) {
 773              		.loc 1 183 31
 774 0428 93F71700 		andi	a5,a5,1
 183:src/interruptRoutine.cpp ****             if (*KConsole::sr & CONSOLE_RX_STATUS_BIT) {
 775              		.loc 1 183 13
 776 042c 638A0702 		beqz	a5,.L37
 184:src/interruptRoutine.cpp ****                 KConsole::placeInInput(*KConsole::dr);
 777              		.loc 1 184 17 is_stmt 1
 184:src/interruptRoutine.cpp ****                 KConsole::placeInInput(*KConsole::dr);
 778              		.loc 1 184 39 is_stmt 0
 779 0430 97070000 		la	a5,_ZN8KConsole2drE
 779      83B70700 
 780 0438 83B70700 		ld	a5,0(a5)
 781 043c 83C70700 		lbu	a5,0(a5)
 782 0440 13850700 		mv	a0,a5
 783              	.LVL72:
 784 0444 97000000 		call	_ZN8KConsole12placeInInputEc@plt
 784      E7800000 
 785              	.LVL73:
 786 044c 6F004001 		j	.L37
 787              	.LVL74:
 788              	.L36:
 188:src/interruptRoutine.cpp ****             printString("Neki drugi prekid\n");
 789              		.loc 1 188 13 is_stmt 1
 188:src/interruptRoutine.cpp ****             printString("Neki drugi prekid\n");
 790              		.loc 1 188 24 is_stmt 0
 791 0450 17050000 		lla	a0,.LC3
 791      13050500 
 792              	.LVL75:
 793 0458 97000000 		call	_Z11printStringPKc@plt
 793      E7800000 
 794              	.LVL76:
 795              	.L37:
 190:src/interruptRoutine.cpp ****         plic_complete(irq);
 796              		.loc 1 190 9 is_stmt 1
 190:src/interruptRoutine.cpp ****         plic_complete(irq);
 797              		.loc 1 190 22 is_stmt 0
GAS LISTING /tmp/ccNbFOaB.s 			page 20


 798 0460 833704F8 		ld	a5,-128(s0)
 799 0464 9B870700 		sext.w	a5,a5
 800 0468 13850700 		mv	a0,a5
 801 046c 97000000 		call	plic_complete@plt
 801      E7800000 
 802              	.LVL77:
 191:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 803              		.loc 1 191 9 is_stmt 1
 191:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 804              		.loc 1 191 66 is_stmt 0
 805 0474 833704FD 		ld	a5,-48(s0)
 806              	#APP
 807              	# 191 "src/interruptRoutine.cpp" 1
 192:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 808              		csrw sepc, a5
 809              	# 0 "" 2
 810              		.loc 1 192 9 is_stmt 1
 192:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 811              		.loc 1 192 71 is_stmt 0
 812              	#NO_APP
 813 047c 833784FC 		ld	a5,-56(s0)
 814              	#APP
 815              	# 192 "src/interruptRoutine.cpp" 1
 193:src/interruptRoutine.cpp ****         Riscv::mc_sip(Riscv::SIP_SEIP);
 816              		csrw sstatus, a5
 817              	# 0 "" 2
 818              		.loc 1 193 9 is_stmt 1
 193:src/interruptRoutine.cpp ****         Riscv::mc_sip(Riscv::SIP_SEIP);
 819              		.loc 1 193 22 is_stmt 0
 820              	#NO_APP
 821 0484 13050020 		li	a0,512
 822 0488 97000000 		call	_ZN5Riscv6mc_sipEm
 822      E7800000 
 823              	.LVL78:
 824              	.LBE5:
 825              	.LBE4:
 826              	.LBE3:
 827              	.LBE10:
 828              		.loc 1 212 1
 829 0490 6F00400E 		j	.L41
 830              	.LVL79:
 831              	.L35:
 832              	.LBB11:
 833              	.LBB8:
 834              	.LBB6:
 194:src/interruptRoutine.cpp ****     } else if (scause == 0x8000000000000001) {
 835              		.loc 1 194 12 is_stmt 1
 836 0494 033784FD 		ld	a4,-40(s0)
 837 0498 9307F0FF 		li	a5,-1
 838 049c 9397F703 		slli	a5,a5,63
 839 04a0 93871700 		addi	a5,a5,1
 840 04a4 6314F708 		bne	a4,a5,.L38
 196:src/interruptRoutine.cpp ****         Scheduler::wake();
 841              		.loc 1 196 9
 196:src/interruptRoutine.cpp ****         Scheduler::wake();
 842              		.loc 1 196 24 is_stmt 0
 843 04a8 97000000 		call	_ZN9Scheduler4wakeEv@plt
GAS LISTING /tmp/ccNbFOaB.s 			page 21


 843      E7800000 
 844              	.LVL80:
 197:src/interruptRoutine.cpp ****         TCB::getRunningTimeSlice()++;
 845              		.loc 1 197 9 is_stmt 1
 197:src/interruptRoutine.cpp ****         TCB::getRunningTimeSlice()++;
 846              		.loc 1 197 34 is_stmt 0
 847 04b0 97000000 		call	_ZN3TCB19getRunningTimeSliceEv
 847      E7800000 
 848              	.LVL81:
 849 04b8 93070500 		mv	a5,a0
 197:src/interruptRoutine.cpp ****         TCB::getRunningTimeSlice()++;
 850              		.loc 1 197 33
 851 04bc 03B70700 		ld	a4,0(a5)
 197:src/interruptRoutine.cpp ****         TCB::getRunningTimeSlice()++;
 852              		.loc 1 197 35
 853 04c0 13071700 		addi	a4,a4,1
 854 04c4 23B0E700 		sd	a4,0(a5)
 198:src/interruptRoutine.cpp ****         if (TCB::getRunningTimeSlice() >= TCB::getRunning()->getTimeSlice()) {
 855              		.loc 1 198 9 is_stmt 1
 198:src/interruptRoutine.cpp ****         if (TCB::getRunningTimeSlice() >= TCB::getRunning()->getTimeSlice()) {
 856              		.loc 1 198 38 is_stmt 0
 857 04c8 97000000 		call	_ZN3TCB19getRunningTimeSliceEv
 857      E7800000 
 858              	.LVL82:
 859 04d0 93070500 		mv	a5,a0
 198:src/interruptRoutine.cpp ****         if (TCB::getRunningTimeSlice() >= TCB::getRunning()->getTimeSlice()) {
 860              		.loc 1 198 37
 861 04d4 83B40700 		ld	s1,0(a5)
 198:src/interruptRoutine.cpp ****         if (TCB::getRunningTimeSlice() >= TCB::getRunning()->getTimeSlice()) {
 862              		.loc 1 198 74
 863 04d8 97000000 		call	_ZN3TCB10getRunningEv
 863      E7800000 
 864              	.LVL83:
 865 04e0 93070500 		mv	a5,a0
 866 04e4 13850700 		mv	a0,a5
 867 04e8 97000000 		call	_ZN3TCB12getTimeSliceEv
 867      E7800000 
 868              	.LVL84:
 869 04f0 93070500 		mv	a5,a0
 198:src/interruptRoutine.cpp ****         if (TCB::getRunningTimeSlice() >= TCB::getRunning()->getTimeSlice()) {
 870              		.loc 1 198 40
 871 04f4 B3B7F400 		sltu	a5,s1,a5
 872 04f8 93C71700 		xori	a5,a5,1
 873 04fc 93F7F70F 		andi	a5,a5,0xff
 198:src/interruptRoutine.cpp ****         if (TCB::getRunningTimeSlice() >= TCB::getRunning()->getTimeSlice()) {
 874              		.loc 1 198 9
 875 0500 63860700 		beqz	a5,.L39
 199:src/interruptRoutine.cpp ****             TCB::dispatch();
 876              		.loc 1 199 13 is_stmt 1
 199:src/interruptRoutine.cpp ****             TCB::dispatch();
 877              		.loc 1 199 26 is_stmt 0
 878 0504 97000000 		call	_ZN3TCB8dispatchEv@plt
 878      E7800000 
 879              	.LVL85:
 880              	.L39:
 202:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 881              		.loc 1 202 9 is_stmt 1
GAS LISTING /tmp/ccNbFOaB.s 			page 22


 202:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 882              		.loc 1 202 66 is_stmt 0
 883 050c 833704FD 		ld	a5,-48(s0)
 884              	#APP
 885              	# 202 "src/interruptRoutine.cpp" 1
 203:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 886              		csrw sepc, a5
 887              	# 0 "" 2
 888              		.loc 1 203 9 is_stmt 1
 203:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 889              		.loc 1 203 71 is_stmt 0
 890              	#NO_APP
 891 0514 833784FC 		ld	a5,-56(s0)
 892              	#APP
 893              	# 203 "src/interruptRoutine.cpp" 1
 204:src/interruptRoutine.cpp ****         Riscv::mc_sip(Riscv::SIP_SSIP);
 894              		csrw sstatus, a5
 895              	# 0 "" 2
 896              		.loc 1 204 9 is_stmt 1
 204:src/interruptRoutine.cpp ****         Riscv::mc_sip(Riscv::SIP_SSIP);
 897              		.loc 1 204 22 is_stmt 0
 898              	#NO_APP
 899 051c 13052000 		li	a0,2
 900 0520 97000000 		call	_ZN5Riscv6mc_sipEm
 900      E7800000 
 901              	.LVL86:
 902              	.LBE6:
 903              	.LBE8:
 904              	.LBE11:
 905              		.loc 1 212 1
 906 0528 6F00C004 		j	.L41
 907              	.LVL87:
 908              	.L38:
 909              	.LBB12:
 910              	.LBB9:
 911              	.LBB7:
 206:src/interruptRoutine.cpp ****         printString("\nGreska u prekidnoj rutini\n");
 912              		.loc 1 206 9 is_stmt 1
 206:src/interruptRoutine.cpp ****         printString("\nGreska u prekidnoj rutini\n");
 913              		.loc 1 206 20 is_stmt 0
 914 052c 17050000 		lla	a0,.LC4
 914      13050500 
 915 0534 97000000 		call	_Z11printStringPKc@plt
 915      E7800000 
 916              	.LVL88:
 207:src/interruptRoutine.cpp ****         printString("scause: ");
 917              		.loc 1 207 9 is_stmt 1
 207:src/interruptRoutine.cpp ****         printString("scause: ");
 918              		.loc 1 207 20 is_stmt 0
 919 053c 17050000 		lla	a0,.LC5
 919      13050500 
 920 0544 97000000 		call	_Z11printStringPKc@plt
 920      E7800000 
 921              	.LVL89:
 208:src/interruptRoutine.cpp ****         kPrintInt(scause);
 922              		.loc 1 208 9 is_stmt 1
 208:src/interruptRoutine.cpp ****         kPrintInt(scause);
GAS LISTING /tmp/ccNbFOaB.s 			page 23


 923              		.loc 1 208 18 is_stmt 0
 924 054c 033584FD 		ld	a0,-40(s0)
 925 0550 97000000 		call	_Z9kPrintIntm@plt
 925      E7800000 
 926              	.LVL90:
 209:src/interruptRoutine.cpp ****         printString("\nsepc: ");
 927              		.loc 1 209 9 is_stmt 1
 209:src/interruptRoutine.cpp ****         printString("\nsepc: ");
 928              		.loc 1 209 20 is_stmt 0
 929 0558 17050000 		lla	a0,.LC2
 929      13050500 
 930 0560 97000000 		call	_Z11printStringPKc@plt
 930      E7800000 
 931              	.LVL91:
 210:src/interruptRoutine.cpp ****         kPrintInt(sepc);
 932              		.loc 1 210 9 is_stmt 1
 210:src/interruptRoutine.cpp ****         kPrintInt(sepc);
 933              		.loc 1 210 18 is_stmt 0
 934 0568 033504FD 		ld	a0,-48(s0)
 935 056c 97000000 		call	_Z9kPrintIntm@plt
 935      E7800000 
 936              	.LVL92:
 937              	.L41:
 938              	.LBE7:
 939              	.LBE9:
 940              	.LBE12:
 941              		.loc 1 212 1
 942 0574 13000000 		nop
 943 0578 83308107 		ld	ra,120(sp)
 944              		.cfi_restore 1
 945 057c 03340107 		ld	s0,112(sp)
 946              		.cfi_restore 8
 947              		.cfi_def_cfa 2, 128
 948              	.LVL93:
 949 0580 83348106 		ld	s1,104(sp)
 950              		.cfi_restore 9
 951 0584 13010108 		addi	sp,sp,128
 952              		.cfi_def_cfa_offset 0
 953              	.LVL94:
 954 0588 67800000 		jr	ra
 955              		.cfi_endproc
 956              	.LFE54:
 958              		.section	.text._ZN5Riscv6mc_sipEm,"axG",@progbits,_ZN5Riscv6mc_sipEm,comdat
 959              		.align	2
 960              		.weak	_ZN5Riscv6mc_sipEm
 962              	_ZN5Riscv6mc_sipEm:
 963              	.LFB10:
 964              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 5/17/23.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJEKAT2023_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJEKAT2023_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/ccNbFOaB.s 			page 24


  10:src/../h/Riscv.hpp **** class Riscv {
  11:src/../h/Riscv.hpp **** public:
  12:src/../h/Riscv.hpp **** 
  13:src/../h/Riscv.hpp **** 	static void returnFromInterrupt();
  14:src/../h/Riscv.hpp **** 
  15:src/../h/Riscv.hpp **** 	//read scause
  16:src/../h/Riscv.hpp **** 	static uint64 r_scause();
  17:src/../h/Riscv.hpp **** 
  18:src/../h/Riscv.hpp **** 	//write scause
  19:src/../h/Riscv.hpp **** 	static void w_scause(uint64 scause);
  20:src/../h/Riscv.hpp **** 
  21:src/../h/Riscv.hpp **** 	//read sepc
  22:src/../h/Riscv.hpp **** 	static uint64 r_sepc();
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp **** 	//write sepc
  25:src/../h/Riscv.hpp **** 	static void w_sepc(uint64 sepc);
  26:src/../h/Riscv.hpp **** 
  27:src/../h/Riscv.hpp **** 	//read stvec
  28:src/../h/Riscv.hpp **** 	static uint64 r_stvec();
  29:src/../h/Riscv.hpp **** 
  30:src/../h/Riscv.hpp **** 	//write stvec
  31:src/../h/Riscv.hpp **** 	static void w_stvec(uint64 stvec);
  32:src/../h/Riscv.hpp **** 
  33:src/../h/Riscv.hpp **** 	enum BitMaskSip {
  34:src/../h/Riscv.hpp **** 		//postoji zahtev za softverski prekid
  35:src/../h/Riscv.hpp **** 		SIP_SSIP = (1 << 1),
  36:src/../h/Riscv.hpp **** 		//postoji prekid od tajmera
  37:src/../h/Riscv.hpp **** 		SIP_STIP = (1 << 5),
  38:src/../h/Riscv.hpp **** 		//postoji zahtev za spoljasnji hardverski prekid
  39:src/../h/Riscv.hpp **** 		SIP_SEIP = (1 << 9)
  40:src/../h/Riscv.hpp **** 	};
  41:src/../h/Riscv.hpp **** 
  42:src/../h/Riscv.hpp **** 	//mask set sip
  43:src/../h/Riscv.hpp **** 	static void ms_sip(uint64 mask);
  44:src/../h/Riscv.hpp **** 
  45:src/../h/Riscv.hpp **** 	//mask clear sip
  46:src/../h/Riscv.hpp **** 	static void mc_sip(uint64 mask);
  47:src/../h/Riscv.hpp **** 
  48:src/../h/Riscv.hpp **** 	//read sip
  49:src/../h/Riscv.hpp **** 	static uint64 r_sip();
  50:src/../h/Riscv.hpp **** 
  51:src/../h/Riscv.hpp **** 	//write sip
  52:src/../h/Riscv.hpp **** 	static void w_sip(uint64 sip);
  53:src/../h/Riscv.hpp **** 
  54:src/../h/Riscv.hpp **** 	//kada se pozove sret, SIE dobija vrednost SPIE, SPIE se postavlja na 1,
  55:src/../h/Riscv.hpp **** 	//rezim se postavlja na osnovu SPP bita, SPP se postavlja na 0
  56:src/../h/Riscv.hpp **** 	enum BitMaskSstatus {
  57:src/../h/Riscv.hpp **** 		//1 - dozvoljeni prekidi; 0- nedozvoljeni prekidi; igonrise se u korisnickom rezimu
  58:src/../h/Riscv.hpp **** 		SSTATUS_SIE = (1 << 1),
  59:src/../h/Riscv.hpp **** 		//prethodna vrednost bita SIE
  60:src/../h/Riscv.hpp **** 		SSTATUS_SPIE = (1 << 5),
  61:src/../h/Riscv.hpp **** 		//iz kog rezima se desio skok; 0 - iz korisnickog; 1 - iz sistemskog
  62:src/../h/Riscv.hpp **** 		SSTATUS_SPP = (1 << 8)
  63:src/../h/Riscv.hpp **** 	};
  64:src/../h/Riscv.hpp **** 
  65:src/../h/Riscv.hpp **** 	//mask set sstatus
  66:src/../h/Riscv.hpp **** 	static void ms_sstatus(uint64 mask);
GAS LISTING /tmp/ccNbFOaB.s 			page 25


  67:src/../h/Riscv.hpp **** 
  68:src/../h/Riscv.hpp **** 	//mask clear sstatus
  69:src/../h/Riscv.hpp **** 	static void mc_sstatus(uint64 mask);
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp **** 	//read sstatus
  72:src/../h/Riscv.hpp **** 	static uint64 r_sstatus();
  73:src/../h/Riscv.hpp **** 
  74:src/../h/Riscv.hpp **** 	//write sstatus
  75:src/../h/Riscv.hpp **** 	static void w_sstatus(uint64 sstatus);
  76:src/../h/Riscv.hpp **** 
  77:src/../h/Riscv.hpp **** 	//upisuje kod sistemskog poziva u registar a0
  78:src/../h/Riscv.hpp **** 	static void loadOpCode(uint64 opCode);
  79:src/../h/Riscv.hpp **** 
  80:src/../h/Riscv.hpp **** };
  81:src/../h/Riscv.hpp **** 
  82:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause() {
  83:src/../h/Riscv.hpp **** 	uint64 volatile scause;
  84:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[scause], scause": [scause] "=r"(scause));
  85:src/../h/Riscv.hpp **** 	return scause;
  86:src/../h/Riscv.hpp **** }
  87:src/../h/Riscv.hpp **** 
  88:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
  89:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw scause, %[scause]": :[scause] "r"(scause));
  90:src/../h/Riscv.hpp **** }
  91:src/../h/Riscv.hpp **** 
  92:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc() {
  93:src/../h/Riscv.hpp **** 	uint64 volatile sepc;
  94:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[sepc], sepc": [sepc] "=r"(sepc));
  95:src/../h/Riscv.hpp **** 	return sepc;
  96:src/../h/Riscv.hpp **** }
  97:src/../h/Riscv.hpp **** 
  98:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
  99:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 100:src/../h/Riscv.hpp **** }
 101:src/../h/Riscv.hpp **** 
 102:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec() {
 103:src/../h/Riscv.hpp **** 	uint64 volatile stvec;
 104:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[stvec], stvec": [stvec] "=r"(stvec));
 105:src/../h/Riscv.hpp **** 	return stvec;
 106:src/../h/Riscv.hpp **** }
 107:src/../h/Riscv.hpp **** 
 108:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 109:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw stvec, %[stvec]": :[stvec] "r"(stvec));
 110:src/../h/Riscv.hpp **** }
 111:src/../h/Riscv.hpp **** 
 112:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 113:src/../h/Riscv.hpp **** 	__asm__ volatile("csrs sip, %[mask]": :[mask] "r"(mask));
 114:src/../h/Riscv.hpp **** }
 115:src/../h/Riscv.hpp **** 
 116:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 965              		.loc 2 116 40 is_stmt 1
 966              		.cfi_startproc
 967              	.LVL95:
 968 0000 130101FF 		addi	sp,sp,-16
 969              		.cfi_def_cfa_offset 16
 970 0004 23348100 		sd	s0,8(sp)
 971              		.cfi_offset 8, -8
GAS LISTING /tmp/ccNbFOaB.s 			page 26


 972 0008 13040101 		addi	s0,sp,16
 973              		.cfi_def_cfa 8, 0
 117:src/../h/Riscv.hpp **** 	__asm__ volatile("csrc sip, %[mask]": :[mask] "r"(mask));
 974              		.loc 2 117 2
 975              		.loc 2 117 58 is_stmt 0
 976              	#APP
 977              	# 117 "src/../h/Riscv.hpp" 1
 118              	}
 978              		csrc sip, a0
 979              	# 0 "" 2
 980              		.loc 2 118 1
 981              	#NO_APP
 982 0010 03348100 		ld	s0,8(sp)
 983              		.cfi_restore 8
 984              		.cfi_def_cfa 2, 16
 985 0014 13010101 		addi	sp,sp,16
 986              		.cfi_def_cfa_offset 0
 987 0018 67800000 		jr	ra
 988              		.cfi_endproc
 989              	.LFE10:
 991              		.section	.text._ZN3TCB9setStatusENS_12ThreadStatusE,"axG",@progbits,_ZN3TCB9setStatusENS_12ThreadS
 992              		.align	2
 993              		.weak	_ZN3TCB9setStatusENS_12ThreadStatusE
 995              	_ZN3TCB9setStatusENS_12ThreadStatusE:
 996              	.LFB32:
 997              		.file 3 "src/../h/TCB.hpp"
   1:src/../h/TCB.hpp **** //
   2:src/../h/TCB.hpp **** // Created by os on 5/23/23.
   3:src/../h/TCB.hpp **** //
   4:src/../h/TCB.hpp **** 
   5:src/../h/TCB.hpp **** #ifndef PROJEKAT2023_TCB_HPP
   6:src/../h/TCB.hpp **** #define PROJEKAT2023_TCB_HPP
   7:src/../h/TCB.hpp **** 
   8:src/../h/TCB.hpp **** #include "../lib/hw.h"
   9:src/../h/TCB.hpp **** #include "../h/ThreadQueue.hpp"
  10:src/../h/TCB.hpp **** 
  11:src/../h/TCB.hpp **** class TCB {
  12:src/../h/TCB.hpp **** public:
  13:src/../h/TCB.hpp ****     friend class Scheduler;
  14:src/../h/TCB.hpp **** 
  15:src/../h/TCB.hpp ****     using Body = void (*)(void*);
  16:src/../h/TCB.hpp **** 
  17:src/../h/TCB.hpp ****     enum ThreadStatus {
  18:src/../h/TCB.hpp ****         CREATED, ACTIVE, BLOCKED, JOINING, SLEEPING, FINISHED
  19:src/../h/TCB.hpp ****     };
  20:src/../h/TCB.hpp **** 
  21:src/../h/TCB.hpp ****     void setStatus(ThreadStatus stat) { this->status = stat; }
 998              		.loc 3 21 10 is_stmt 1
 999              		.cfi_startproc
 1000              	.LVL96:
 1001 0000 130101FF 		addi	sp,sp,-16
 1002              		.cfi_def_cfa_offset 16
 1003 0004 23348100 		sd	s0,8(sp)
 1004              		.cfi_offset 8, -8
 1005 0008 13040101 		addi	s0,sp,16
 1006              		.cfi_def_cfa 8, 0
 1007              		.loc 3 21 41
GAS LISTING /tmp/ccNbFOaB.s 			page 27


 1008              		.loc 3 21 54 is_stmt 0
 1009 000c 232CB504 		sw	a1,88(a0)
 1010              		.loc 3 21 62
 1011 0010 03348100 		ld	s0,8(sp)
 1012              		.cfi_restore 8
 1013              		.cfi_def_cfa 2, 16
 1014 0014 13010101 		addi	sp,sp,16
 1015              		.cfi_def_cfa_offset 0
 1016 0018 67800000 		jr	ra
 1017              		.cfi_endproc
 1018              	.LFE32:
 1020              		.section	.text._ZN3TCB12getTimeSliceEv,"axG",@progbits,_ZN3TCB12getTimeSliceEv,comdat
 1021              		.align	2
 1022              		.weak	_ZN3TCB12getTimeSliceEv
 1024              	_ZN3TCB12getTimeSliceEv:
 1025              	.LFB34:
  22:src/../h/TCB.hpp **** 
  23:src/../h/TCB.hpp ****     ThreadStatus getStatus() { return this->status; }
  24:src/../h/TCB.hpp **** 
  25:src/../h/TCB.hpp ****     static TCB* createThread(Body function, void* args, uint64* stack);
  26:src/../h/TCB.hpp **** 
  27:src/../h/TCB.hpp ****     static void start(TCB* newTcb);
  28:src/../h/TCB.hpp **** 
  29:src/../h/TCB.hpp ****     uint64 getTimeSlice() { return timeSlice; }
 1026              		.loc 3 29 12 is_stmt 1
 1027              		.cfi_startproc
 1028              	.LVL97:
 1029 0000 130101FF 		addi	sp,sp,-16
 1030              		.cfi_def_cfa_offset 16
 1031 0004 23348100 		sd	s0,8(sp)
 1032              		.cfi_offset 8, -8
 1033 0008 13040101 		addi	s0,sp,16
 1034              		.cfi_def_cfa 8, 0
 1035              		.loc 3 29 29
 1036              		.loc 3 29 47 is_stmt 0
 1037 000c 03358502 		ld	a0,40(a0)
 1038              	.LVL98:
 1039 0010 03348100 		ld	s0,8(sp)
 1040              		.cfi_restore 8
 1041              		.cfi_def_cfa 2, 16
 1042 0014 13010101 		addi	sp,sp,16
 1043              		.cfi_def_cfa_offset 0
 1044 0018 67800000 		jr	ra
 1045              		.cfi_endproc
 1046              	.LFE34:
 1048              		.section	.text._ZN3TCB10getRunningEv,"axG",@progbits,_ZN3TCB10getRunningEv,comdat
 1049              		.align	2
 1050              		.weak	_ZN3TCB10getRunningEv
 1052              	_ZN3TCB10getRunningEv:
 1053              	.LFB37:
  30:src/../h/TCB.hpp **** 
  31:src/../h/TCB.hpp ****     void setTimeSlice(uint64 value) { timeSlice = value; }
  32:src/../h/TCB.hpp **** 
  33:src/../h/TCB.hpp ****     Body getBody() { return threadFunction; }
  34:src/../h/TCB.hpp **** 
  35:src/../h/TCB.hpp ****     //static void threadSleep(time_t sleepTime);
  36:src/../h/TCB.hpp **** 
GAS LISTING /tmp/ccNbFOaB.s 			page 28


  37:src/../h/TCB.hpp ****     static TCB* getRunning() { return running; }
 1054              		.loc 3 37 17 is_stmt 1
 1055              		.cfi_startproc
 1056 0000 130101FF 		addi	sp,sp,-16
 1057              		.cfi_def_cfa_offset 16
 1058 0004 23348100 		sd	s0,8(sp)
 1059              		.cfi_offset 8, -8
 1060 0008 13040101 		addi	s0,sp,16
 1061              		.cfi_def_cfa 8, 0
 1062              		.loc 3 37 32
 1063              		.loc 3 37 48 is_stmt 0
 1064 000c 97070000 		la	a5,_ZN3TCB7runningE
 1064      83B70700 
 1065 0014 03B50700 		ld	a0,0(a5)
 1066 0018 03348100 		ld	s0,8(sp)
 1067              		.cfi_restore 8
 1068              		.cfi_def_cfa 2, 16
 1069 001c 13010101 		addi	sp,sp,16
 1070              		.cfi_def_cfa_offset 0
 1071 0020 67800000 		jr	ra
 1072              		.cfi_endproc
 1073              	.LFE37:
 1075              		.section	.text._ZN3TCB19getRunningTimeSliceEv,"axG",@progbits,_ZN3TCB19getRunningTimeSliceEv,comda
 1076              		.align	2
 1077              		.weak	_ZN3TCB19getRunningTimeSliceEv
 1079              	_ZN3TCB19getRunningTimeSliceEv:
 1080              	.LFB39:
  38:src/../h/TCB.hpp **** 
  39:src/../h/TCB.hpp ****     static void setRunning(TCB* newRunning) { running = newRunning; }
  40:src/../h/TCB.hpp **** 
  41:src/../h/TCB.hpp ****     static uint64 &getRunningTimeSlice() { return runningTimeSlice; }
 1081              		.loc 3 41 20 is_stmt 1
 1082              		.cfi_startproc
 1083 0000 130101FF 		addi	sp,sp,-16
 1084              		.cfi_def_cfa_offset 16
 1085 0004 23348100 		sd	s0,8(sp)
 1086              		.cfi_offset 8, -8
 1087 0008 13040101 		addi	s0,sp,16
 1088              		.cfi_def_cfa 8, 0
 1089              		.loc 3 41 44
 1090              		.loc 3 41 69 is_stmt 0
 1091 000c 17050000 		la	a0,_ZN3TCB16runningTimeSliceE
 1091      03350500 
 1092 0014 03348100 		ld	s0,8(sp)
 1093              		.cfi_restore 8
 1094              		.cfi_def_cfa 2, 16
 1095 0018 13010101 		addi	sp,sp,16
 1096              		.cfi_def_cfa_offset 0
 1097 001c 67800000 		jr	ra
 1098              		.cfi_endproc
 1099              	.LFE39:
 1101              		.text
 1102              	.Letext0:
 1103              		.file 4 "src/../lib/hw.h"
 1104              		.file 5 "src/../h/syscall_c.hpp"
 1105              		.file 6 "src/../h/KSem.hpp"
 1106              		.file 7 "src/../h/../h/ThreadQueue.hpp"
GAS LISTING /tmp/ccNbFOaB.s 			page 29


 1107              		.file 8 "src/../h/Scheduler.hpp"
 1108              		.file 9 "src/../h/KConsole.hpp"
 1109              		.file 10 "src/../h/KMemory.hpp"
 1110              		.file 11 "src/../h/../test/printing.hpp"
 1111              		.file 12 "src/../h/helper.hpp"
GAS LISTING /tmp/ccNbFOaB.s 			page 30


DEFINED SYMBOLS
                            *ABS*:0000000000000000 interruptRoutine.cpp
     /tmp/ccNbFOaB.s:29     .text:0000000000000000 interruptRoutine
     /tmp/ccNbFOaB.s:33     .text:0000000000000000 .L0 
     /tmp/ccNbFOaB.s:34     .text:0000000000000000 .L0 
     /tmp/ccNbFOaB.s:35     .text:0000000000000004 .L0 
     /tmp/ccNbFOaB.s:39     .text:0000000000000010 .L0 
     /tmp/ccNbFOaB.s:40     .text:0000000000000010 .L0 
     /tmp/ccNbFOaB.s:41     .text:0000000000000010 .L0 
     /tmp/ccNbFOaB.s:43     .text:0000000000000014 .L0 
     /tmp/ccNbFOaB.s:45     .text:0000000000000014 .L0 
     /tmp/ccNbFOaB.s:46     .text:0000000000000014 .L0 
src/interruptRoutine.cpp:24     .text:0000000000000014 .L0 
     /tmp/ccNbFOaB.s:55     .text:000000000000001c .L0 
src/interruptRoutine.cpp:25     .text:000000000000001c .L0 
     /tmp/ccNbFOaB.s:65     .text:0000000000000024 .L0 
src/interruptRoutine.cpp:26     .text:0000000000000024 .L0 
     /tmp/ccNbFOaB.s:75     .text:000000000000002c .L0 
     /tmp/ccNbFOaB.s:76     .text:000000000000002c .L0 
src/interruptRoutine.cpp:30     .text:000000000000002c .L0 
     /tmp/ccNbFOaB.s:86     .text:0000000000000034 .L0 
src/interruptRoutine.cpp:31     .text:0000000000000034 .L0 
     /tmp/ccNbFOaB.s:96     .text:000000000000003c .L0 
src/interruptRoutine.cpp:32     .text:000000000000003c .L0 
     /tmp/ccNbFOaB.s:106    .text:0000000000000044 .L0 
src/interruptRoutine.cpp:33     .text:0000000000000044 .L0 
     /tmp/ccNbFOaB.s:116    .text:000000000000004c .L0 
src/interruptRoutine.cpp:34     .text:000000000000004c .L0 
     /tmp/ccNbFOaB.s:126    .text:0000000000000054 .L0 
src/interruptRoutine.cpp:35     .text:0000000000000054 .L0 
     /tmp/ccNbFOaB.s:136    .text:000000000000005c .L0 
src/interruptRoutine.cpp:36     .text:000000000000005c .L0 
     /tmp/ccNbFOaB.s:146    .text:0000000000000064 .L0 
src/interruptRoutine.cpp:37     .text:0000000000000064 .L0 
     /tmp/ccNbFOaB.s:157    .text:000000000000006c .L0 
     /tmp/ccNbFOaB.s:161    .text:0000000000000078 .L0 
     /tmp/ccNbFOaB.s:166    .text:0000000000000084 .L0 
     /tmp/ccNbFOaB.s:274    .text:0000000000000110 .L0 
     /tmp/ccNbFOaB.s:275    .text:0000000000000110 .L0 
     /tmp/ccNbFOaB.s:276    .text:0000000000000110 .L0 
     /tmp/ccNbFOaB.s:280    .text:000000000000011c .L0 
src/interruptRoutine.cpp:46     .text:000000000000011c .L0 
     /tmp/ccNbFOaB.s:287    .text:0000000000000120 .L0 
     /tmp/ccNbFOaB.s:291    .text:0000000000000124 .L0 
     /tmp/ccNbFOaB.s:292    .text:0000000000000124 .L0 
     /tmp/ccNbFOaB.s:293    .text:0000000000000124 .L0 
     /tmp/ccNbFOaB.s:298    .text:0000000000000134 .L0 
src/interruptRoutine.cpp:52     .text:0000000000000134 .L0 
     /tmp/ccNbFOaB.s:305    .text:0000000000000138 .L0 
     /tmp/ccNbFOaB.s:309    .text:000000000000013c .L0 
     /tmp/ccNbFOaB.s:310    .text:000000000000013c .L0 
     /tmp/ccNbFOaB.s:311    .text:000000000000013c .L0 
     /tmp/ccNbFOaB.s:315    .text:0000000000000148 .L0 
     /tmp/ccNbFOaB.s:317    .text:000000000000014c .L0 
     /tmp/ccNbFOaB.s:324    .text:0000000000000164 .L0 
     /tmp/ccNbFOaB.s:326    .text:0000000000000168 .L0 
     /tmp/ccNbFOaB.s:327    .text:0000000000000168 .L0 
GAS LISTING /tmp/ccNbFOaB.s 			page 31


     /tmp/ccNbFOaB.s:330    .text:0000000000000170 .L0 
     /tmp/ccNbFOaB.s:332    .text:0000000000000174 .L0 
     /tmp/ccNbFOaB.s:333    .text:0000000000000174 .L0 
     /tmp/ccNbFOaB.s:335    .text:0000000000000178 .L0 
     /tmp/ccNbFOaB.s:337    .text:000000000000017c .L0 
     /tmp/ccNbFOaB.s:338    .text:000000000000017c .L0 
     /tmp/ccNbFOaB.s:345    .text:0000000000000190 .L0 
src/interruptRoutine.cpp:65     .text:0000000000000190 .L0 
     /tmp/ccNbFOaB.s:354    .text:0000000000000198 .L0 
src/interruptRoutine.cpp:67     .text:0000000000000198 .L0 
     /tmp/ccNbFOaB.s:362    .text:000000000000019c .L0 
src/interruptRoutine.cpp:69     .text:000000000000019c .L0 
     /tmp/ccNbFOaB.s:369    .text:00000000000001a0 .L0 
     /tmp/ccNbFOaB.s:373    .text:00000000000001a4 .L0 
     /tmp/ccNbFOaB.s:374    .text:00000000000001a4 .L0 
     /tmp/ccNbFOaB.s:1052   .text._ZN3TCB10getRunningEv:0000000000000000 _ZN3TCB10getRunningEv
     /tmp/ccNbFOaB.s:375    .text:00000000000001a4 .L0 
     /tmp/ccNbFOaB.s:995    .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000000 _ZN3TCB9setStatusENS_12ThreadStatusE
     /tmp/ccNbFOaB.s:383    .text:00000000000001c0 .L0 
     /tmp/ccNbFOaB.s:384    .text:00000000000001c0 .L0 
     /tmp/ccNbFOaB.s:387    .text:00000000000001c8 .L0 
src/interruptRoutine.cpp:75     .text:00000000000001c8 .L0 
     /tmp/ccNbFOaB.s:393    .text:00000000000001cc .L0 
src/interruptRoutine.cpp:76     .text:00000000000001cc .L0 
     /tmp/ccNbFOaB.s:398    .text:00000000000001d0 .L0 
     /tmp/ccNbFOaB.s:400    .text:00000000000001d0 .L0 
     /tmp/ccNbFOaB.s:403    .text:00000000000001d8 .L0 
     /tmp/ccNbFOaB.s:407    .text:00000000000001dc .L0 
     /tmp/ccNbFOaB.s:408    .text:00000000000001dc .L0 
     /tmp/ccNbFOaB.s:409    .text:00000000000001dc .L0 
     /tmp/ccNbFOaB.s:412    .text:00000000000001e4 .L0 
     /tmp/ccNbFOaB.s:416    .text:00000000000001e8 .L0 
     /tmp/ccNbFOaB.s:417    .text:00000000000001e8 .L0 
     /tmp/ccNbFOaB.s:418    .text:00000000000001e8 .L0 
     /tmp/ccNbFOaB.s:423    .text:00000000000001f8 .L0 
     /tmp/ccNbFOaB.s:424    .text:00000000000001f8 .L0 
     /tmp/ccNbFOaB.s:427    .text:0000000000000200 .L0 
     /tmp/ccNbFOaB.s:431    .text:0000000000000204 .L0 
     /tmp/ccNbFOaB.s:432    .text:0000000000000204 .L0 
     /tmp/ccNbFOaB.s:433    .text:0000000000000204 .L0 
     /tmp/ccNbFOaB.s:436    .text:000000000000020c .L0 
     /tmp/ccNbFOaB.s:438    .text:0000000000000210 .L0 
     /tmp/ccNbFOaB.s:443    .text:0000000000000220 .L0 
     /tmp/ccNbFOaB.s:445    .text:0000000000000224 .L0 
     /tmp/ccNbFOaB.s:446    .text:0000000000000224 .L0 
     /tmp/ccNbFOaB.s:449    .text:000000000000022c .L0 
     /tmp/ccNbFOaB.s:451    .text:0000000000000230 .L0 
src/interruptRoutine.cpp:94     .text:0000000000000230 .L0 
     /tmp/ccNbFOaB.s:460    .text:0000000000000238 .L0 
src/interruptRoutine.cpp:96     .text:0000000000000238 .L0 
     /tmp/ccNbFOaB.s:468    .text:000000000000023c .L0 
src/interruptRoutine.cpp:98     .text:000000000000023c .L0 
     /tmp/ccNbFOaB.s:475    .text:0000000000000240 .L0 
     /tmp/ccNbFOaB.s:479    .text:0000000000000244 .L0 
     /tmp/ccNbFOaB.s:480    .text:0000000000000244 .L0 
     /tmp/ccNbFOaB.s:481    .text:0000000000000244 .L0 
     /tmp/ccNbFOaB.s:486    .text:0000000000000254 .L0 
GAS LISTING /tmp/ccNbFOaB.s 			page 32


src/interruptRoutine.cpp:104    .text:0000000000000254 .L0 
     /tmp/ccNbFOaB.s:493    .text:0000000000000258 .L0 
     /tmp/ccNbFOaB.s:497    .text:000000000000025c .L0 
     /tmp/ccNbFOaB.s:498    .text:000000000000025c .L0 
     /tmp/ccNbFOaB.s:499    .text:000000000000025c .L0 
     /tmp/ccNbFOaB.s:504    .text:000000000000026c .L0 
src/interruptRoutine.cpp:110    .text:000000000000026c .L0 
     /tmp/ccNbFOaB.s:511    .text:0000000000000270 .L0 
     /tmp/ccNbFOaB.s:515    .text:0000000000000274 .L0 
     /tmp/ccNbFOaB.s:516    .text:0000000000000274 .L0 
     /tmp/ccNbFOaB.s:517    .text:0000000000000274 .L0 
     /tmp/ccNbFOaB.s:522    .text:0000000000000284 .L0 
src/interruptRoutine.cpp:116    .text:0000000000000284 .L0 
     /tmp/ccNbFOaB.s:529    .text:0000000000000288 .L0 
     /tmp/ccNbFOaB.s:533    .text:000000000000028c .L0 
     /tmp/ccNbFOaB.s:534    .text:000000000000028c .L0 
     /tmp/ccNbFOaB.s:537    .text:0000000000000294 .L0 
src/interruptRoutine.cpp:122    .text:0000000000000294 .L0 
     /tmp/ccNbFOaB.s:546    .text:000000000000029c .L0 
src/interruptRoutine.cpp:124    .text:000000000000029c .L0 
     /tmp/ccNbFOaB.s:554    .text:00000000000002a0 .L0 
src/interruptRoutine.cpp:126    .text:00000000000002a0 .L0 
     /tmp/ccNbFOaB.s:561    .text:00000000000002a4 .L0 
     /tmp/ccNbFOaB.s:564    .text:00000000000002ac .L0 
     /tmp/ccNbFOaB.s:565    .text:00000000000002ac .L0 
     /tmp/ccNbFOaB.s:573    .text:00000000000002c8 .L0 
     /tmp/ccNbFOaB.s:574    .text:00000000000002c8 .L0 
     /tmp/ccNbFOaB.s:577    .text:00000000000002d0 .L0 
     /tmp/ccNbFOaB.s:581    .text:00000000000002d4 .L0 
     /tmp/ccNbFOaB.s:582    .text:00000000000002d4 .L0 
     /tmp/ccNbFOaB.s:583    .text:00000000000002d4 .L0 
     /tmp/ccNbFOaB.s:586    .text:00000000000002dc .L0 
src/interruptRoutine.cpp:135    .text:00000000000002dc .L0 
     /tmp/ccNbFOaB.s:593    .text:00000000000002e0 .L0 
     /tmp/ccNbFOaB.s:597    .text:00000000000002e4 .L0 
     /tmp/ccNbFOaB.s:598    .text:00000000000002e4 .L0 
     /tmp/ccNbFOaB.s:599    .text:00000000000002e4 .L0 
     /tmp/ccNbFOaB.s:605    .text:00000000000002f8 .L0 
     /tmp/ccNbFOaB.s:609    .text:00000000000002fc .L0 
     /tmp/ccNbFOaB.s:610    .text:00000000000002fc .L0 
     /tmp/ccNbFOaB.s:611    .text:00000000000002fc .L0 
     /tmp/ccNbFOaB.s:615    .text:0000000000000308 .L0 
     /tmp/ccNbFOaB.s:617    .text:000000000000030c .L0 
     /tmp/ccNbFOaB.s:624    .text:0000000000000324 .L0 
     /tmp/ccNbFOaB.s:626    .text:0000000000000328 .L0 
     /tmp/ccNbFOaB.s:627    .text:0000000000000328 .L0 
     /tmp/ccNbFOaB.s:630    .text:0000000000000330 .L0 
     /tmp/ccNbFOaB.s:632    .text:0000000000000334 .L0 
src/interruptRoutine.cpp:150    .text:0000000000000334 .L0 
     /tmp/ccNbFOaB.s:641    .text:000000000000033c .L0 
src/interruptRoutine.cpp:152    .text:000000000000033c .L0 
     /tmp/ccNbFOaB.s:649    .text:0000000000000340 .L0 
src/interruptRoutine.cpp:154    .text:0000000000000340 .L0 
     /tmp/ccNbFOaB.s:656    .text:0000000000000344 .L0 
     /tmp/ccNbFOaB.s:660    .text:0000000000000348 .L0 
     /tmp/ccNbFOaB.s:661    .text:0000000000000348 .L0 
     /tmp/ccNbFOaB.s:662    .text:0000000000000348 .L0 
GAS LISTING /tmp/ccNbFOaB.s 			page 33


     /tmp/ccNbFOaB.s:667    .text:0000000000000358 .L0 
     /tmp/ccNbFOaB.s:671    .text:000000000000035c .L0 
     /tmp/ccNbFOaB.s:672    .text:000000000000035c .L0 
     /tmp/ccNbFOaB.s:673    .text:000000000000035c .L0 
     /tmp/ccNbFOaB.s:677    .text:0000000000000368 .L0 
     /tmp/ccNbFOaB.s:681    .text:000000000000036c .L0 
     /tmp/ccNbFOaB.s:682    .text:000000000000036c .L0 
     /tmp/ccNbFOaB.s:683    .text:000000000000036c .L0 
     /tmp/ccNbFOaB.s:687    .text:000000000000037c .L0 
     /tmp/ccNbFOaB.s:688    .text:000000000000037c .L0 
     /tmp/ccNbFOaB.s:692    .text:0000000000000388 .L0 
     /tmp/ccNbFOaB.s:693    .text:0000000000000388 .L0 
     /tmp/ccNbFOaB.s:697    .text:0000000000000398 .L0 
     /tmp/ccNbFOaB.s:698    .text:0000000000000398 .L0 
     /tmp/ccNbFOaB.s:702    .text:00000000000003a4 .L0 
     /tmp/ccNbFOaB.s:703    .text:00000000000003a4 .L0 
     /tmp/ccNbFOaB.s:707    .text:00000000000003b4 .L0 
     /tmp/ccNbFOaB.s:708    .text:00000000000003b4 .L0 
     /tmp/ccNbFOaB.s:712    .text:00000000000003c0 .L0 
     /tmp/ccNbFOaB.s:715    .text:00000000000003c4 .L0 
     /tmp/ccNbFOaB.s:718    .text:00000000000003c8 .L0 
     /tmp/ccNbFOaB.s:719    .text:00000000000003c8 .L0 
     /tmp/ccNbFOaB.s:724    .text:00000000000003d4 .L0 
     /tmp/ccNbFOaB.s:725    .text:00000000000003d4 .L0 
     /tmp/ccNbFOaB.s:731    .text:00000000000003dc .L0 
     /tmp/ccNbFOaB.s:733    .text:00000000000003dc .L0 
     /tmp/ccNbFOaB.s:742    .text:00000000000003e4 .L0 
     /tmp/ccNbFOaB.s:749    .text:00000000000003e8 .L0 
     /tmp/ccNbFOaB.s:757    .text:00000000000003fc .L0 
     /tmp/ccNbFOaB.s:758    .text:00000000000003fc .L0 
     /tmp/ccNbFOaB.s:762    .text:0000000000000408 .L0 
     /tmp/ccNbFOaB.s:765    .text:000000000000040c .L0 
     /tmp/ccNbFOaB.s:769    .text:0000000000000418 .L0 
     /tmp/ccNbFOaB.s:770    .text:0000000000000418 .L0 
     /tmp/ccNbFOaB.s:774    .text:0000000000000428 .L0 
     /tmp/ccNbFOaB.s:776    .text:000000000000042c .L0 
     /tmp/ccNbFOaB.s:778    .text:0000000000000430 .L0 
     /tmp/ccNbFOaB.s:779    .text:0000000000000430 .L0 
     /tmp/ccNbFOaB.s:790    .text:0000000000000450 .L0 
     /tmp/ccNbFOaB.s:791    .text:0000000000000450 .L0 
     /tmp/ccNbFOaB.s:797    .text:0000000000000460 .L0 
     /tmp/ccNbFOaB.s:798    .text:0000000000000460 .L0 
     /tmp/ccNbFOaB.s:804    .text:0000000000000474 .L0 
     /tmp/ccNbFOaB.s:805    .text:0000000000000474 .L0 
     /tmp/ccNbFOaB.s:811    .text:000000000000047c .L0 
     /tmp/ccNbFOaB.s:813    .text:000000000000047c .L0 
     /tmp/ccNbFOaB.s:819    .text:0000000000000484 .L0 
     /tmp/ccNbFOaB.s:821    .text:0000000000000484 .L0 
     /tmp/ccNbFOaB.s:962    .text._ZN5Riscv6mc_sipEm:0000000000000000 _ZN5Riscv6mc_sipEm
     /tmp/ccNbFOaB.s:829    .text:0000000000000490 .L0 
     /tmp/ccNbFOaB.s:836    .text:0000000000000494 .L0 
     /tmp/ccNbFOaB.s:842    .text:00000000000004a8 .L0 
     /tmp/ccNbFOaB.s:843    .text:00000000000004a8 .L0 
     /tmp/ccNbFOaB.s:846    .text:00000000000004b0 .L0 
     /tmp/ccNbFOaB.s:1079   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000000 _ZN3TCB19getRunningTimeSliceEv
     /tmp/ccNbFOaB.s:847    .text:00000000000004b0 .L0 
     /tmp/ccNbFOaB.s:851    .text:00000000000004bc .L0 
GAS LISTING /tmp/ccNbFOaB.s 			page 34


     /tmp/ccNbFOaB.s:853    .text:00000000000004c0 .L0 
     /tmp/ccNbFOaB.s:856    .text:00000000000004c8 .L0 
     /tmp/ccNbFOaB.s:857    .text:00000000000004c8 .L0 
     /tmp/ccNbFOaB.s:861    .text:00000000000004d4 .L0 
     /tmp/ccNbFOaB.s:863    .text:00000000000004d8 .L0 
     /tmp/ccNbFOaB.s:1024   .text._ZN3TCB12getTimeSliceEv:0000000000000000 _ZN3TCB12getTimeSliceEv
     /tmp/ccNbFOaB.s:871    .text:00000000000004f4 .L0 
     /tmp/ccNbFOaB.s:875    .text:0000000000000500 .L0 
     /tmp/ccNbFOaB.s:877    .text:0000000000000504 .L0 
     /tmp/ccNbFOaB.s:878    .text:0000000000000504 .L0 
     /tmp/ccNbFOaB.s:882    .text:000000000000050c .L0 
     /tmp/ccNbFOaB.s:883    .text:000000000000050c .L0 
     /tmp/ccNbFOaB.s:889    .text:0000000000000514 .L0 
     /tmp/ccNbFOaB.s:891    .text:0000000000000514 .L0 
     /tmp/ccNbFOaB.s:897    .text:000000000000051c .L0 
     /tmp/ccNbFOaB.s:899    .text:000000000000051c .L0 
     /tmp/ccNbFOaB.s:906    .text:0000000000000528 .L0 
     /tmp/ccNbFOaB.s:913    .text:000000000000052c .L0 
     /tmp/ccNbFOaB.s:914    .text:000000000000052c .L0 
     /tmp/ccNbFOaB.s:918    .text:000000000000053c .L0 
     /tmp/ccNbFOaB.s:919    .text:000000000000053c .L0 
     /tmp/ccNbFOaB.s:923    .text:000000000000054c .L0 
     /tmp/ccNbFOaB.s:924    .text:000000000000054c .L0 
     /tmp/ccNbFOaB.s:928    .text:0000000000000558 .L0 
     /tmp/ccNbFOaB.s:929    .text:0000000000000558 .L0 
     /tmp/ccNbFOaB.s:933    .text:0000000000000568 .L0 
     /tmp/ccNbFOaB.s:934    .text:0000000000000568 .L0 
     /tmp/ccNbFOaB.s:942    .text:0000000000000574 .L0 
     /tmp/ccNbFOaB.s:944    .text:000000000000057c .L0 
     /tmp/ccNbFOaB.s:946    .text:0000000000000580 .L0 
     /tmp/ccNbFOaB.s:947    .text:0000000000000580 .L0 
     /tmp/ccNbFOaB.s:950    .text:0000000000000584 .L0 
     /tmp/ccNbFOaB.s:952    .text:0000000000000588 .L0 
     /tmp/ccNbFOaB.s:955    .text:000000000000058c .L0 
     /tmp/ccNbFOaB.s:966    .text._ZN5Riscv6mc_sipEm:0000000000000000 .L0 
     /tmp/ccNbFOaB.s:968    .text._ZN5Riscv6mc_sipEm:0000000000000000 .L0 
     /tmp/ccNbFOaB.s:969    .text._ZN5Riscv6mc_sipEm:0000000000000004 .L0 
     /tmp/ccNbFOaB.s:971    .text._ZN5Riscv6mc_sipEm:0000000000000008 .L0 
     /tmp/ccNbFOaB.s:973    .text._ZN5Riscv6mc_sipEm:000000000000000c .L0 
     /tmp/ccNbFOaB.s:975    .text._ZN5Riscv6mc_sipEm:000000000000000c .L0 
  src/../h/Riscv.hpp:117    .text._ZN5Riscv6mc_sipEm:000000000000000c .L0 
     /tmp/ccNbFOaB.s:982    .text._ZN5Riscv6mc_sipEm:0000000000000010 .L0 
     /tmp/ccNbFOaB.s:983    .text._ZN5Riscv6mc_sipEm:0000000000000014 .L0 
     /tmp/ccNbFOaB.s:984    .text._ZN5Riscv6mc_sipEm:0000000000000014 .L0 
     /tmp/ccNbFOaB.s:986    .text._ZN5Riscv6mc_sipEm:0000000000000018 .L0 
     /tmp/ccNbFOaB.s:988    .text._ZN5Riscv6mc_sipEm:000000000000001c .L0 
     /tmp/ccNbFOaB.s:999    .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000000 .L0 
     /tmp/ccNbFOaB.s:1001   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000000 .L0 
     /tmp/ccNbFOaB.s:1002   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000004 .L0 
     /tmp/ccNbFOaB.s:1004   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000008 .L0 
     /tmp/ccNbFOaB.s:1006   .text._ZN3TCB9setStatusENS_12ThreadStatusE:000000000000000c .L0 
     /tmp/ccNbFOaB.s:1008   .text._ZN3TCB9setStatusENS_12ThreadStatusE:000000000000000c .L0 
     /tmp/ccNbFOaB.s:1009   .text._ZN3TCB9setStatusENS_12ThreadStatusE:000000000000000c .L0 
     /tmp/ccNbFOaB.s:1011   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000010 .L0 
     /tmp/ccNbFOaB.s:1012   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000014 .L0 
     /tmp/ccNbFOaB.s:1013   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000014 .L0 
     /tmp/ccNbFOaB.s:1015   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000018 .L0 
GAS LISTING /tmp/ccNbFOaB.s 			page 35


     /tmp/ccNbFOaB.s:1017   .text._ZN3TCB9setStatusENS_12ThreadStatusE:000000000000001c .L0 
     /tmp/ccNbFOaB.s:1027   .text._ZN3TCB12getTimeSliceEv:0000000000000000 .L0 
     /tmp/ccNbFOaB.s:1029   .text._ZN3TCB12getTimeSliceEv:0000000000000000 .L0 
     /tmp/ccNbFOaB.s:1030   .text._ZN3TCB12getTimeSliceEv:0000000000000004 .L0 
     /tmp/ccNbFOaB.s:1032   .text._ZN3TCB12getTimeSliceEv:0000000000000008 .L0 
     /tmp/ccNbFOaB.s:1034   .text._ZN3TCB12getTimeSliceEv:000000000000000c .L0 
     /tmp/ccNbFOaB.s:1036   .text._ZN3TCB12getTimeSliceEv:000000000000000c .L0 
     /tmp/ccNbFOaB.s:1037   .text._ZN3TCB12getTimeSliceEv:000000000000000c .L0 
     /tmp/ccNbFOaB.s:1040   .text._ZN3TCB12getTimeSliceEv:0000000000000014 .L0 
     /tmp/ccNbFOaB.s:1041   .text._ZN3TCB12getTimeSliceEv:0000000000000014 .L0 
     /tmp/ccNbFOaB.s:1043   .text._ZN3TCB12getTimeSliceEv:0000000000000018 .L0 
     /tmp/ccNbFOaB.s:1045   .text._ZN3TCB12getTimeSliceEv:000000000000001c .L0 
     /tmp/ccNbFOaB.s:1055   .text._ZN3TCB10getRunningEv:0000000000000000 .L0 
     /tmp/ccNbFOaB.s:1056   .text._ZN3TCB10getRunningEv:0000000000000000 .L0 
     /tmp/ccNbFOaB.s:1057   .text._ZN3TCB10getRunningEv:0000000000000004 .L0 
     /tmp/ccNbFOaB.s:1059   .text._ZN3TCB10getRunningEv:0000000000000008 .L0 
     /tmp/ccNbFOaB.s:1061   .text._ZN3TCB10getRunningEv:000000000000000c .L0 
     /tmp/ccNbFOaB.s:1063   .text._ZN3TCB10getRunningEv:000000000000000c .L0 
     /tmp/ccNbFOaB.s:1064   .text._ZN3TCB10getRunningEv:000000000000000c .L0 
     /tmp/ccNbFOaB.s:1067   .text._ZN3TCB10getRunningEv:000000000000001c .L0 
     /tmp/ccNbFOaB.s:1068   .text._ZN3TCB10getRunningEv:000000000000001c .L0 
     /tmp/ccNbFOaB.s:1070   .text._ZN3TCB10getRunningEv:0000000000000020 .L0 
     /tmp/ccNbFOaB.s:1072   .text._ZN3TCB10getRunningEv:0000000000000024 .L0 
     /tmp/ccNbFOaB.s:1082   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000000 .L0 
     /tmp/ccNbFOaB.s:1083   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000000 .L0 
     /tmp/ccNbFOaB.s:1084   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000004 .L0 
     /tmp/ccNbFOaB.s:1086   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000008 .L0 
     /tmp/ccNbFOaB.s:1088   .text._ZN3TCB19getRunningTimeSliceEv:000000000000000c .L0 
     /tmp/ccNbFOaB.s:1090   .text._ZN3TCB19getRunningTimeSliceEv:000000000000000c .L0 
     /tmp/ccNbFOaB.s:1091   .text._ZN3TCB19getRunningTimeSliceEv:000000000000000c .L0 
     /tmp/ccNbFOaB.s:1093   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000018 .L0 
     /tmp/ccNbFOaB.s:1094   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000018 .L0 
     /tmp/ccNbFOaB.s:1096   .text._ZN3TCB19getRunningTimeSliceEv:000000000000001c .L0 
     /tmp/ccNbFOaB.s:1098   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000020 .L0 
     /tmp/ccNbFOaB.s:1112   .text:000000000000058c .L0 
     /tmp/ccNbFOaB.s:991    .text._ZN5Riscv6mc_sipEm:000000000000001c .L0 
     /tmp/ccNbFOaB.s:1020   .text._ZN3TCB9setStatusENS_12ThreadStatusE:000000000000001c .L0 
     /tmp/ccNbFOaB.s:1048   .text._ZN3TCB12getTimeSliceEv:000000000000001c .L0 
     /tmp/ccNbFOaB.s:1075   .text._ZN3TCB10getRunningEv:0000000000000024 .L0 
     /tmp/ccNbFOaB.s:1101   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000020 .L0 
     /tmp/ccNbFOaB.s:198    .rodata:0000000000000074 .L9
     /tmp/ccNbFOaB.s:188    .text:00000000000000dc .L0 
     /tmp/ccNbFOaB.s:192    .text:00000000000000f0 .L0 
     /tmp/ccNbFOaB.s:8      .rodata:0000000000000000 .LC0
     /tmp/ccNbFOaB.s:683    .text:000000000000036c .L0 
     /tmp/ccNbFOaB.s:11     .rodata:0000000000000018 .LC1
     /tmp/ccNbFOaB.s:693    .text:0000000000000388 .L0 
     /tmp/ccNbFOaB.s:14     .rodata:0000000000000028 .LC2
     /tmp/ccNbFOaB.s:703    .text:00000000000003a4 .L0 
     /tmp/ccNbFOaB.s:770    .text:0000000000000418 .L0 
     /tmp/ccNbFOaB.s:779    .text:0000000000000430 .L0 
     /tmp/ccNbFOaB.s:17     .rodata:0000000000000030 .LC3
     /tmp/ccNbFOaB.s:791    .text:0000000000000450 .L0 
     /tmp/ccNbFOaB.s:20     .rodata:0000000000000048 .LC4
     /tmp/ccNbFOaB.s:914    .text:000000000000052c .L0 
     /tmp/ccNbFOaB.s:23     .rodata:0000000000000068 .LC5
     /tmp/ccNbFOaB.s:919    .text:000000000000053c .L0 
GAS LISTING /tmp/ccNbFOaB.s 			page 36


     /tmp/ccNbFOaB.s:929    .text:0000000000000558 .L0 
     /tmp/ccNbFOaB.s:164    .text:0000000000000084 .L2
     /tmp/ccNbFOaB.s:744    .text:00000000000003e8 .L3
     /tmp/ccNbFOaB.s:669    .text:000000000000035c .L4
     /tmp/ccNbFOaB.s:679    .text:000000000000036c .L5
     /tmp/ccNbFOaB.s:658    .text:0000000000000348 .L6
     /tmp/ccNbFOaB.s:267    .text:0000000000000100 .L7
     /tmp/ccNbFOaB.s:607    .text:00000000000002fc .L22
     /tmp/ccNbFOaB.s:716    .text:00000000000003c8 .L23
     /tmp/ccNbFOaB.s:352    .text:0000000000000198 .L24
     /tmp/ccNbFOaB.s:343    .text:0000000000000190 .L25
     /tmp/ccNbFOaB.s:360    .text:000000000000019c .L26
     /tmp/ccNbFOaB.s:458    .text:0000000000000238 .L27
     /tmp/ccNbFOaB.s:466    .text:000000000000023c .L28
     /tmp/ccNbFOaB.s:544    .text:000000000000029c .L29
     /tmp/ccNbFOaB.s:552    .text:00000000000002a0 .L30
     /tmp/ccNbFOaB.s:713    .text:00000000000003c4 .L40
     /tmp/ccNbFOaB.s:639    .text:000000000000033c .L32
     /tmp/ccNbFOaB.s:647    .text:0000000000000340 .L33
     /tmp/ccNbFOaB.s:937    .text:0000000000000574 .L41
     /tmp/ccNbFOaB.s:831    .text:0000000000000494 .L35
     /tmp/ccNbFOaB.s:788    .text:0000000000000450 .L36
     /tmp/ccNbFOaB.s:795    .text:0000000000000460 .L37
     /tmp/ccNbFOaB.s:908    .text:000000000000052c .L38
     /tmp/ccNbFOaB.s:880    .text:000000000000050c .L39
     /tmp/ccNbFOaB.s:272    .text:0000000000000110 .L21
     /tmp/ccNbFOaB.s:289    .text:0000000000000124 .L20
     /tmp/ccNbFOaB.s:307    .text:000000000000013c .L19
     /tmp/ccNbFOaB.s:371    .text:00000000000001a4 .L18
     /tmp/ccNbFOaB.s:405    .text:00000000000001dc .L17
     /tmp/ccNbFOaB.s:414    .text:00000000000001e8 .L16
     /tmp/ccNbFOaB.s:429    .text:0000000000000204 .L15
     /tmp/ccNbFOaB.s:477    .text:0000000000000244 .L14
     /tmp/ccNbFOaB.s:495    .text:000000000000025c .L13
     /tmp/ccNbFOaB.s:513    .text:0000000000000274 .L12
     /tmp/ccNbFOaB.s:531    .text:000000000000028c .L11
     /tmp/ccNbFOaB.s:579    .text:00000000000002d4 .L10
     /tmp/ccNbFOaB.s:595    .text:00000000000002e4 .L8
     /tmp/ccNbFOaB.s:1064   .text._ZN3TCB10getRunningEv:000000000000000c .L0 
     /tmp/ccNbFOaB.s:1091   .text._ZN3TCB19getRunningTimeSliceEv:000000000000000c .L0 
     /tmp/ccNbFOaB.s:3194   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccNbFOaB.s:5161   .debug_str:0000000000000a63 .LASF221
     /tmp/ccNbFOaB.s:5051   .debug_str:000000000000074d .LASF222
     /tmp/ccNbFOaB.s:5111   .debug_str:000000000000090f .LASF223
     /tmp/ccNbFOaB.s:4781   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccNbFOaB.s:4797   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccNbFOaB.s:5081   .debug_str:000000000000081b .LASF3
     /tmp/ccNbFOaB.s:4951   .debug_str:000000000000046f .LASF0
     /tmp/ccNbFOaB.s:4977   .debug_str:0000000000000517 .LASF1
     /tmp/ccNbFOaB.s:5091   .debug_str:0000000000000872 .LASF2
     /tmp/ccNbFOaB.s:4897   .debug_str:00000000000002de .LASF4
     /tmp/ccNbFOaB.s:5103   .debug_str:00000000000008d8 .LASF5
     /tmp/ccNbFOaB.s:4963   .debug_str:00000000000004ac .LASF6
     /tmp/ccNbFOaB.s:4813   .debug_str:000000000000006a .LASF7
     /tmp/ccNbFOaB.s:5059   .debug_str:000000000000078b .LASF8
     /tmp/ccNbFOaB.s:5049   .debug_str:000000000000073a .LASF9
     /tmp/ccNbFOaB.s:4967   .debug_str:00000000000004d0 .LASF10
GAS LISTING /tmp/ccNbFOaB.s 			page 37


     /tmp/ccNbFOaB.s:4921   .debug_str:0000000000000380 .LASF11
     /tmp/ccNbFOaB.s:4935   .debug_str:00000000000003e2 .LASF12
     /tmp/ccNbFOaB.s:4841   .debug_str:0000000000000124 .LASF13
     /tmp/ccNbFOaB.s:4907   .debug_str:000000000000032e .LASF14
     /tmp/ccNbFOaB.s:4857   .debug_str:000000000000018a .LASF15
     /tmp/ccNbFOaB.s:4839   .debug_str:0000000000000114 .LASF16
     /tmp/ccNbFOaB.s:5135   .debug_str:00000000000009b5 .LASF17
     /tmp/ccNbFOaB.s:4891   .debug_str:0000000000000295 .LASF18
     /tmp/ccNbFOaB.s:5121   .debug_str:0000000000000966 .LASF19
     /tmp/ccNbFOaB.s:4995   .debug_str:0000000000000588 .LASF20
     /tmp/ccNbFOaB.s:5215   .debug_str:0000000000000c82 .LASF53
     /tmp/ccNbFOaB.s:5079   .debug_str:0000000000000810 .LASF54
     /tmp/ccNbFOaB.s:4983   .debug_str:000000000000053d .LASF21
     /tmp/ccNbFOaB.s:4819   .debug_str:000000000000008f .LASF22
     /tmp/ccNbFOaB.s:5227   .debug_str:0000000000000cd1 .LASF23
     /tmp/ccNbFOaB.s:5005   .debug_str:00000000000005ce .LASF84
     /tmp/ccNbFOaB.s:5191   .debug_str:0000000000000bf4 .LASF86
     /tmp/ccNbFOaB.s:5189   .debug_str:0000000000000beb .LASF24
     /tmp/ccNbFOaB.s:5179   .debug_str:0000000000000b8a .LASF26
     /tmp/ccNbFOaB.s:5087   .debug_str:000000000000085e .LASF28
     /tmp/ccNbFOaB.s:5035   .debug_str:00000000000006c4 .LASF30
     /tmp/ccNbFOaB.s:5067   .debug_str:00000000000007ac .LASF25
     /tmp/ccNbFOaB.s:5075   .debug_str:00000000000007e5 .LASF27
     /tmp/ccNbFOaB.s:5023   .debug_str:0000000000000668 .LASF29
     /tmp/ccNbFOaB.s:4969   .debug_str:00000000000004e3 .LASF31
     /tmp/ccNbFOaB.s:5225   .debug_str:0000000000000cc9 .LASF32
     /tmp/ccNbFOaB.s:5165   .debug_str:0000000000000b2c .LASF33
     /tmp/ccNbFOaB.s:5017   .debug_str:0000000000000645 .LASF34
     /tmp/ccNbFOaB.s:5033   .debug_str:00000000000006b0 .LASF35
     /tmp/ccNbFOaB.s:5131   .debug_str:00000000000009a1 .LASF36
     /tmp/ccNbFOaB.s:5105   .debug_str:00000000000008df .LASF37
     /tmp/ccNbFOaB.s:5107   .debug_str:00000000000008f2 .LASF38
     /tmp/ccNbFOaB.s:4847   .debug_str:0000000000000142 .LASF39
     /tmp/ccNbFOaB.s:4887   .debug_str:0000000000000282 .LASF40
     /tmp/ccNbFOaB.s:4945   .debug_str:000000000000044b .LASF41
     /tmp/ccNbFOaB.s:4957   .debug_str:0000000000000490 .LASF42
     /tmp/ccNbFOaB.s:4873   .debug_str:0000000000000229 .LASF43
     /tmp/ccNbFOaB.s:4815   .debug_str:0000000000000071 .LASF44
     /tmp/ccNbFOaB.s:5095   .debug_str:000000000000088a .LASF45
     /tmp/ccNbFOaB.s:5089   .debug_str:0000000000000867 .LASF46
     /tmp/ccNbFOaB.s:5249   .debug_str:0000000000000d94 .LASF47
     /tmp/ccNbFOaB.s:5217   .debug_str:0000000000000c88 .LASF48
     /tmp/ccNbFOaB.s:5229   .debug_str:0000000000000cda .LASF49
     /tmp/ccNbFOaB.s:5211   .debug_str:0000000000000c62 .LASF50
     /tmp/ccNbFOaB.s:5003   .debug_str:00000000000005b8 .LASF51
     /tmp/ccNbFOaB.s:5171   .debug_str:0000000000000b5a .LASF153
     /tmp/ccNbFOaB.s:4863   .debug_str:00000000000001ca .LASF154
     /tmp/ccNbFOaB.s:5209   .debug_str:0000000000000c59 .LASF52
     /tmp/ccNbFOaB.s:5117   .debug_str:0000000000000943 .LASF55
     /tmp/ccNbFOaB.s:5065   .debug_str:00000000000007a4 .LASF56
     /tmp/ccNbFOaB.s:4871   .debug_str:0000000000000222 .LASF57
     /tmp/ccNbFOaB.s:4799   .debug_str:0000000000000000 .LASF58
     /tmp/ccNbFOaB.s:4927   .debug_str:00000000000003a1 .LASF59
     /tmp/ccNbFOaB.s:4973   .debug_str:0000000000000506 .LASF60
     /tmp/ccNbFOaB.s:4833   .debug_str:00000000000000eb .LASF61
     /tmp/ccNbFOaB.s:5143   .debug_str:00000000000009ea .LASF131
     /tmp/ccNbFOaB.s:4845   .debug_str:0000000000000138 .LASF62
GAS LISTING /tmp/ccNbFOaB.s 			page 38


     /tmp/ccNbFOaB.s:4937   .debug_str:00000000000003f0 .LASF64
     /tmp/ccNbFOaB.s:4955   .debug_str:0000000000000486 .LASF68
     /tmp/ccNbFOaB.s:4991   .debug_str:0000000000000569 .LASF70
     /tmp/ccNbFOaB.s:5133   .debug_str:00000000000009a8 .LASF63
     /tmp/ccNbFOaB.s:5223   .debug_str:0000000000000ca7 .LASF65
     /tmp/ccNbFOaB.s:5041   .debug_str:0000000000000703 .LASF224
     /tmp/ccNbFOaB.s:5239   .debug_str:0000000000000d46 .LASF66
     /tmp/ccNbFOaB.s:4965   .debug_str:00000000000004be .LASF67
     /tmp/ccNbFOaB.s:5001   .debug_str:00000000000005ab .LASF69
     /tmp/ccNbFOaB.s:5077   .debug_str:00000000000007f8 .LASF71
     /tmp/ccNbFOaB.s:4877   .debug_str:0000000000000244 .LASF72
     /tmp/ccNbFOaB.s:5099   .debug_str:00000000000008b2 .LASF73
     /tmp/ccNbFOaB.s:5071   .debug_str:00000000000007d3 .LASF74
     /tmp/ccNbFOaB.s:4997   .debug_str:000000000000058d .LASF75
     /tmp/ccNbFOaB.s:4925   .debug_str:0000000000000396 .LASF76
     /tmp/ccNbFOaB.s:5119   .debug_str:0000000000000950 .LASF77
     /tmp/ccNbFOaB.s:4803   .debug_str:0000000000000011 .LASF78
     /tmp/ccNbFOaB.s:5151   .debug_str:0000000000000a11 .LASF79
     /tmp/ccNbFOaB.s:5187   .debug_str:0000000000000bd7 .LASF80
     /tmp/ccNbFOaB.s:5037   .debug_str:00000000000006d9 .LASF81
     /tmp/ccNbFOaB.s:5185   .debug_str:0000000000000bcc .LASF82
     /tmp/ccNbFOaB.s:4909   .debug_str:000000000000033d .LASF83
     /tmp/ccNbFOaB.s:5253   .debug_str:0000000000000db9 .LASF85
     /tmp/ccNbFOaB.s:4905   .debug_str:0000000000000315 .LASF87
     /tmp/ccNbFOaB.s:4879   .debug_str:0000000000000251 .LASF88
     /tmp/ccNbFOaB.s:4849   .debug_str:0000000000000155 .LASF89
     /tmp/ccNbFOaB.s:5201   .debug_str:0000000000000c40 .LASF90
     /tmp/ccNbFOaB.s:4821   .debug_str:0000000000000098 .LASF91
     /tmp/ccNbFOaB.s:5251   .debug_str:0000000000000dac .LASF92
     /tmp/ccNbFOaB.s:4931   .debug_str:00000000000003c1 .LASF93
     /tmp/ccNbFOaB.s:4805   .debug_str:000000000000001c .LASF94
     /tmp/ccNbFOaB.s:5031   .debug_str:00000000000006a3 .LASF95
     /tmp/ccNbFOaB.s:5237   .debug_str:0000000000000d30 .LASF161
     /tmp/ccNbFOaB.s:5177   .debug_str:0000000000000b82 .LASF96
     /tmp/ccNbFOaB.s:4837   .debug_str:0000000000000105 .LASF97
     /tmp/ccNbFOaB.s:5245   .debug_str:0000000000000d6d .LASF98
     /tmp/ccNbFOaB.s:5193   .debug_str:0000000000000c15 .LASF99
     /tmp/ccNbFOaB.s:5167   .debug_str:0000000000000b40 .LASF100
     /tmp/ccNbFOaB.s:5159   .debug_str:0000000000000a53 .LASF101
     /tmp/ccNbFOaB.s:5045   .debug_str:0000000000000710 .LASF102
     /tmp/ccNbFOaB.s:4903   .debug_str:0000000000000308 .LASF103
     /tmp/ccNbFOaB.s:5101   .debug_str:00000000000008ca .LASF104
     /tmp/ccNbFOaB.s:5205   .debug_str:0000000000000c4d .LASF105
     /tmp/ccNbFOaB.s:5157   .debug_str:0000000000000a4b .LASF106
     /tmp/ccNbFOaB.s:4835   .debug_str:00000000000000f4 .LASF107
     /tmp/ccNbFOaB.s:4865   .debug_str:00000000000001e2 .LASF137
     /tmp/ccNbFOaB.s:4809   .debug_str:0000000000000034 .LASF138
     /tmp/ccNbFOaB.s:4923   .debug_str:0000000000000390 .LASF108
     /tmp/ccNbFOaB.s:5123   .debug_str:000000000000097c .LASF109
     /tmp/ccNbFOaB.s:4975   .debug_str:000000000000050f .LASF110
     /tmp/ccNbFOaB.s:5029   .debug_str:0000000000000690 .LASF111
     /tmp/ccNbFOaB.s:4881   .debug_str:000000000000025a .LASF112
     /tmp/ccNbFOaB.s:5097   .debug_str:00000000000008a2 .LASF113
     /tmp/ccNbFOaB.s:5139   .debug_str:00000000000009ce .LASF114
     /tmp/ccNbFOaB.s:4829   .debug_str:00000000000000d0 .LASF115
     /tmp/ccNbFOaB.s:4875   .debug_str:000000000000023b .LASF116
     /tmp/ccNbFOaB.s:5021   .debug_str:0000000000000652 .LASF117
GAS LISTING /tmp/ccNbFOaB.s 			page 39


     /tmp/ccNbFOaB.s:4889   .debug_str:0000000000000288 .LASF118
     /tmp/ccNbFOaB.s:4811   .debug_str:000000000000005c .LASF119
     /tmp/ccNbFOaB.s:4949   .debug_str:0000000000000469 .LASF120
     /tmp/ccNbFOaB.s:5153   .debug_str:0000000000000a29 .LASF121
     /tmp/ccNbFOaB.s:4807   .debug_str:000000000000002c .LASF122
     /tmp/ccNbFOaB.s:4817   .debug_str:000000000000007c .LASF123
     /tmp/ccNbFOaB.s:5219   .debug_str:0000000000000c92 .LASF124
     /tmp/ccNbFOaB.s:5183   .debug_str:0000000000000bbc .LASF125
     /tmp/ccNbFOaB.s:5093   .debug_str:0000000000000880 .LASF126
     /tmp/ccNbFOaB.s:4971   .debug_str:00000000000004f6 .LASF127
     /tmp/ccNbFOaB.s:5061   .debug_str:0000000000000792 .LASF128
     /tmp/ccNbFOaB.s:5199   .debug_str:0000000000000c38 .LASF129
     /tmp/ccNbFOaB.s:5025   .debug_str:000000000000066f .LASF130
     /tmp/ccNbFOaB.s:5207   .debug_str:0000000000000c54 .LASF132
     /tmp/ccNbFOaB.s:5173   .debug_str:0000000000000b65 .LASF133
     /tmp/ccNbFOaB.s:4843   .debug_str:0000000000000133 .LASF134
     /tmp/ccNbFOaB.s:4895   .debug_str:00000000000002c0 .LASF135
     /tmp/ccNbFOaB.s:4867   .debug_str:00000000000001f0 .LASF136
     /tmp/ccNbFOaB.s:4859   .debug_str:000000000000019a .LASF139
     /tmp/ccNbFOaB.s:4825   .debug_str:00000000000000bf .LASF140
     /tmp/ccNbFOaB.s:5011   .debug_str:000000000000060c .LASF141
     /tmp/ccNbFOaB.s:4823   .debug_str:00000000000000aa .LASF142
     /tmp/ccNbFOaB.s:4929   .debug_str:00000000000003a9 .LASF143
     /tmp/ccNbFOaB.s:5175   .debug_str:0000000000000b6a .LASF225
     /tmp/ccNbFOaB.s:5145   .debug_str:00000000000009f2 .LASF144
     /tmp/ccNbFOaB.s:4985   .debug_str:0000000000000546 .LASF145
     /tmp/ccNbFOaB.s:4959   .debug_str:0000000000000496 .LASF146
     /tmp/ccNbFOaB.s:4899   .debug_str:00000000000002e4 .LASF147
     /tmp/ccNbFOaB.s:4981   .debug_str:0000000000000535 .LASF148
     /tmp/ccNbFOaB.s:5013   .debug_str:0000000000000611 .LASF149
     /tmp/ccNbFOaB.s:4831   .debug_str:00000000000000e2 .LASF150
     /tmp/ccNbFOaB.s:5007   .debug_str:00000000000005e2 .LASF151
     /tmp/ccNbFOaB.s:4861   .debug_str:00000000000001b5 .LASF152
     /tmp/ccNbFOaB.s:5213   .debug_str:0000000000000c6c .LASF155
     /tmp/ccNbFOaB.s:4919   .debug_str:0000000000000376 .LASF156
     /tmp/ccNbFOaB.s:5129   .debug_str:000000000000099c .LASF157
     /tmp/ccNbFOaB.s:5019   .debug_str:000000000000064d .LASF158
     /tmp/ccNbFOaB.s:5243   .debug_str:0000000000000d60 .LASF159
     /tmp/ccNbFOaB.s:5235   .debug_str:0000000000000d1e .LASF160
     /tmp/ccNbFOaB.s:4943   .debug_str:0000000000000433 .LASF162
     /tmp/ccNbFOaB.s:5241   .debug_str:0000000000000d4c .LASF226
     /tmp/ccNbFOaB.s:5169   .debug_str:0000000000000b4a .LASF163
     /tmp/ccNbFOaB.s:5083   .debug_str:0000000000000820 .LASF164
     /tmp/ccNbFOaB.s:4827   .debug_str:00000000000000c5 .LASF165
     /tmp/ccNbFOaB.s:5247   .debug_str:0000000000000d73 .LASF166
     /tmp/ccNbFOaB.s:4987   .debug_str:000000000000055b .LASF167
     /tmp/ccNbFOaB.s:5141   .debug_str:00000000000009d5 .LASF168
     /tmp/ccNbFOaB.s:4989   .debug_str:0000000000000560 .LASF169
     /tmp/ccNbFOaB.s:5113   .debug_str:000000000000092d .LASF170
     /tmp/ccNbFOaB.s:5027   .debug_str:000000000000067b .LASF171
     /tmp/ccNbFOaB.s:5053   .debug_str:0000000000000766 .LASF172
     /tmp/ccNbFOaB.s:5015   .debug_str:0000000000000630 .LASF173
     /tmp/ccNbFOaB.s:5155   .debug_str:0000000000000a3a .LASF174
     /tmp/ccNbFOaB.s:5137   .debug_str:00000000000009c1 .LASF175
     /tmp/ccNbFOaB.s:5181   .debug_str:0000000000000b9f .LASF176
     /tmp/ccNbFOaB.s:5197   .debug_str:0000000000000c26 .LASF177
     /tmp/ccNbFOaB.s:5231   .debug_str:0000000000000cf0 .LASF178
GAS LISTING /tmp/ccNbFOaB.s 			page 40


     /tmp/ccNbFOaB.s:4961   .debug_str:000000000000049e .LASF179
     /tmp/ccNbFOaB.s:5047   .debug_str:000000000000071c .LASF180
     /tmp/ccNbFOaB.s:4941   .debug_str:0000000000000426 .LASF181
     /tmp/ccNbFOaB.s:5085   .debug_str:0000000000000841 .LASF182
     /tmp/ccNbFOaB.s:5127   .debug_str:0000000000000988 .LASF183
     /tmp/ccNbFOaB.s:4933   .debug_str:00000000000003cd .LASF184
     /tmp/ccNbFOaB.s:4917   .debug_str:0000000000000368 .LASF185
     /tmp/ccNbFOaB.s:5147   .debug_str:00000000000009ff .LASF186
     /tmp/ccNbFOaB.s:4947   .debug_str:000000000000045d .LASF187
     /tmp/ccNbFOaB.s:4801   .debug_str:0000000000000008 .LASF227
     /tmp/ccNbFOaB.s:5195   .debug_str:0000000000000c1a .LASF188
     /tmp/ccNbFOaB.s:4883   .debug_str:000000000000025f .LASF189
     /tmp/ccNbFOaB.s:4953   .debug_str:000000000000047c .LASF190
     /tmp/ccNbFOaB.s:5063   .debug_str:000000000000079a .LASF191
     /tmp/ccNbFOaB.s:4979   .debug_str:000000000000052a .LASF192
     /tmp/ccNbFOaB.s:5039   .debug_str:00000000000006f8 .LASF193
     /tmp/ccNbFOaB.s:5115   .debug_str:0000000000000933 .LASF194
     /tmp/ccNbFOaB.s:5149   .debug_str:0000000000000a0c .LASF195
     /tmp/ccNbFOaB.s:4901   .debug_str:0000000000000300 .LASF196
     /tmp/ccNbFOaB.s:4939   .debug_str:0000000000000415 .LASF197
     /tmp/ccNbFOaB.s:5069   .debug_str:00000000000007b3 .LASF198
     /tmp/ccNbFOaB.s:4911   .debug_str:0000000000000355 .LASF199
     /tmp/ccNbFOaB.s:4885   .debug_str:000000000000026c .LASF200
     /tmp/ccNbFOaB.s:4915   .debug_str:0000000000000362 .LASF201
     /tmp/ccNbFOaB.s:4893   .debug_str:00000000000002ab .LASF202
     /tmp/ccNbFOaB.s:4999   .debug_str:000000000000059f .LASF203
     /tmp/ccNbFOaB.s:4869   .debug_str:000000000000020a .LASF204
     /tmp/ccNbFOaB.s:5073   .debug_str:00000000000007db .LASF205
     /tmp/ccNbFOaB.s:5043   .debug_str:0000000000000708 .LASF206
     /tmp/ccNbFOaB.s:5109   .debug_str:00000000000008f9 .LASF207
     /tmp/ccNbFOaB.s:5057   .debug_str:000000000000077a .LASF208
     /tmp/ccNbFOaB.s:30     .text:0000000000000000 .LFB54
     /tmp/ccNbFOaB.s:956    .text:000000000000058c .LFE54
     /tmp/ccNbFOaB.s:5125   .debug_str:0000000000000981 .LASF209
     /tmp/ccNbFOaB.s:4284   .debug_loc:0000000000000000 .LLST0
     /tmp/ccNbFOaB.s:5163   .debug_str:0000000000000b27 .LASF210
     /tmp/ccNbFOaB.s:4315   .debug_loc:0000000000000087 .LLST1
     /tmp/ccNbFOaB.s:5221   .debug_str:0000000000000c9f .LASF211
     /tmp/ccNbFOaB.s:4346   .debug_loc:000000000000010e .LLST2
     /tmp/ccNbFOaB.s:4368   .debug_loc:000000000000016e .LLST3
     /tmp/ccNbFOaB.s:4390   .debug_loc:00000000000001ce .LLST4
     /tmp/ccNbFOaB.s:4412   .debug_loc:000000000000022f .LLST5
     /tmp/ccNbFOaB.s:4434   .debug_loc:0000000000000290 .LLST6
     /tmp/ccNbFOaB.s:4456   .debug_loc:00000000000002f1 .LLST7
     /tmp/ccNbFOaB.s:4478   .debug_loc:0000000000000352 .LLST8
     /tmp/ccNbFOaB.s:4500   .debug_loc:00000000000003b3 .LLST9
     /tmp/ccNbFOaB.s:4522   .debug_loc:0000000000000414 .LLST10
     /tmp/ccNbFOaB.s:755    .text:00000000000003fc .LBB5
     /tmp/ccNbFOaB.s:824    .text:0000000000000490 .LBE5
     /tmp/ccNbFOaB.s:4715   .debug_loc:000000000000076d .LLST11
     /tmp/ccNbFOaB.s:759    .text:0000000000000404 .LVL70
     /tmp/ccNbFOaB.s:785    .text:000000000000044c .LVL73
     /tmp/ccNbFOaB.s:794    .text:0000000000000460 .LVL76
     /tmp/ccNbFOaB.s:802    .text:0000000000000474 .LVL77
     /tmp/ccNbFOaB.s:823    .text:0000000000000490 .LVL78
     /tmp/ccNbFOaB.s:278    .text:000000000000011c .LVL21
     /tmp/ccNbFOaB.s:296    .text:0000000000000134 .LVL23
GAS LISTING /tmp/ccNbFOaB.s 			page 41


     /tmp/ccNbFOaB.s:321    .text:0000000000000160 .LVL25
     /tmp/ccNbFOaB.s:342    .text:0000000000000190 .LVL26
     /tmp/ccNbFOaB.s:376    .text:00000000000001ac .LVL28
     /tmp/ccNbFOaB.s:381    .text:00000000000001c0 .LVL29
     /tmp/ccNbFOaB.s:385    .text:00000000000001c8 .LVL30
     /tmp/ccNbFOaB.s:401    .text:00000000000001d8 .LVL31
     /tmp/ccNbFOaB.s:410    .text:00000000000001e4 .LVL33
     /tmp/ccNbFOaB.s:421    .text:00000000000001f8 .LVL35
     /tmp/ccNbFOaB.s:425    .text:0000000000000200 .LVL36
     /tmp/ccNbFOaB.s:440    .text:000000000000021c .LVL38
     /tmp/ccNbFOaB.s:484    .text:0000000000000254 .LVL40
     /tmp/ccNbFOaB.s:502    .text:000000000000026c .LVL42
     /tmp/ccNbFOaB.s:520    .text:0000000000000284 .LVL44
     /tmp/ccNbFOaB.s:566    .text:00000000000002b4 .LVL46
     /tmp/ccNbFOaB.s:571    .text:00000000000002c8 .LVL47
     /tmp/ccNbFOaB.s:575    .text:00000000000002d0 .LVL48
     /tmp/ccNbFOaB.s:584    .text:00000000000002dc .LVL50
     /tmp/ccNbFOaB.s:603    .text:00000000000002f8 .LVL52
     /tmp/ccNbFOaB.s:621    .text:0000000000000320 .LVL54
     /tmp/ccNbFOaB.s:665    .text:0000000000000358 .LVL56
     /tmp/ccNbFOaB.s:675    .text:0000000000000368 .LVL58
     /tmp/ccNbFOaB.s:685    .text:000000000000037c .LVL60
     /tmp/ccNbFOaB.s:690    .text:0000000000000388 .LVL61
     /tmp/ccNbFOaB.s:695    .text:0000000000000398 .LVL62
     /tmp/ccNbFOaB.s:700    .text:00000000000003a4 .LVL63
     /tmp/ccNbFOaB.s:705    .text:00000000000003b4 .LVL64
     /tmp/ccNbFOaB.s:710    .text:00000000000003c0 .LVL65
     /tmp/ccNbFOaB.s:844    .text:00000000000004b0 .LVL80
     /tmp/ccNbFOaB.s:848    .text:00000000000004b8 .LVL81
     /tmp/ccNbFOaB.s:858    .text:00000000000004d0 .LVL82
     /tmp/ccNbFOaB.s:864    .text:00000000000004e0 .LVL83
     /tmp/ccNbFOaB.s:868    .text:00000000000004f0 .LVL84
     /tmp/ccNbFOaB.s:879    .text:000000000000050c .LVL85
     /tmp/ccNbFOaB.s:901    .text:0000000000000528 .LVL86
     /tmp/ccNbFOaB.s:916    .text:000000000000053c .LVL88
     /tmp/ccNbFOaB.s:921    .text:000000000000054c .LVL89
     /tmp/ccNbFOaB.s:926    .text:0000000000000558 .LVL90
     /tmp/ccNbFOaB.s:931    .text:0000000000000568 .LVL91
     /tmp/ccNbFOaB.s:936    .text:0000000000000574 .LVL92
     /tmp/ccNbFOaB.s:1080   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000000 .LFB39
     /tmp/ccNbFOaB.s:1099   .text._ZN3TCB19getRunningTimeSliceEv:0000000000000020 .LFE39
     /tmp/ccNbFOaB.s:1053   .text._ZN3TCB10getRunningEv:0000000000000000 .LFB37
     /tmp/ccNbFOaB.s:1073   .text._ZN3TCB10getRunningEv:0000000000000024 .LFE37
     /tmp/ccNbFOaB.s:1025   .text._ZN3TCB12getTimeSliceEv:0000000000000000 .LFB34
     /tmp/ccNbFOaB.s:1046   .text._ZN3TCB12getTimeSliceEv:000000000000001c .LFE34
     /tmp/ccNbFOaB.s:4913   .debug_str:000000000000035d .LASF212
     /tmp/ccNbFOaB.s:4744   .debug_loc:00000000000007f1 .LLST12
     /tmp/ccNbFOaB.s:996    .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000000 .LFB32
     /tmp/ccNbFOaB.s:1018   .text._ZN3TCB9setStatusENS_12ThreadStatusE:000000000000001c .LFE32
     /tmp/ccNbFOaB.s:4853   .debug_str:0000000000000172 .LASF213
     /tmp/ccNbFOaB.s:963    .text._ZN5Riscv6mc_sipEm:0000000000000000 .LFB10
     /tmp/ccNbFOaB.s:989    .text._ZN5Riscv6mc_sipEm:000000000000001c .LFE10
     /tmp/ccNbFOaB.s:5203   .debug_str:0000000000000c48 .LASF214
     /tmp/ccNbFOaB.s:4993   .debug_str:000000000000057d .LASF215
     /tmp/ccNbFOaB.s:4855   .debug_str:0000000000000177 .LASF216
     /tmp/ccNbFOaB.s:5233   .debug_str:0000000000000d12 .LASF217
     /tmp/ccNbFOaB.s:5055   .debug_str:000000000000076c .LASF218
GAS LISTING /tmp/ccNbFOaB.s 			page 42


     /tmp/ccNbFOaB.s:5009   .debug_str:00000000000005fe .LASF219
     /tmp/ccNbFOaB.s:4851   .debug_str:0000000000000168 .LASF220
     /tmp/ccNbFOaB.s:53     .text:000000000000001c .LVL0
     /tmp/ccNbFOaB.s:60     .text:0000000000000020 .LVL1
     /tmp/ccNbFOaB.s:743    .text:00000000000003e8 .LVL68
     /tmp/ccNbFOaB.s:750    .text:00000000000003ec .LVL69
     /tmp/ccNbFOaB.s:948    .text:0000000000000580 .LVL93
     /tmp/ccNbFOaB.s:953    .text:0000000000000588 .LVL94
     /tmp/ccNbFOaB.s:63     .text:0000000000000024 .LVL2
     /tmp/ccNbFOaB.s:70     .text:0000000000000028 .LVL3
     /tmp/ccNbFOaB.s:722    .text:00000000000003d4 .LVL66
     /tmp/ccNbFOaB.s:734    .text:00000000000003e0 .LVL67
     /tmp/ccNbFOaB.s:73     .text:000000000000002c .LVL4
     /tmp/ccNbFOaB.s:81     .text:0000000000000030 .LVL5
     /tmp/ccNbFOaB.s:84     .text:0000000000000034 .LVL6
     /tmp/ccNbFOaB.s:91     .text:0000000000000038 .LVL7
     /tmp/ccNbFOaB.s:94     .text:000000000000003c .LVL8
     /tmp/ccNbFOaB.s:101    .text:0000000000000040 .LVL9
     /tmp/ccNbFOaB.s:104    .text:0000000000000044 .LVL10
     /tmp/ccNbFOaB.s:111    .text:0000000000000048 .LVL11
     /tmp/ccNbFOaB.s:114    .text:000000000000004c .LVL12
     /tmp/ccNbFOaB.s:121    .text:0000000000000050 .LVL13
     /tmp/ccNbFOaB.s:124    .text:0000000000000054 .LVL14
     /tmp/ccNbFOaB.s:131    .text:0000000000000058 .LVL15
     /tmp/ccNbFOaB.s:134    .text:000000000000005c .LVL16
     /tmp/ccNbFOaB.s:141    .text:0000000000000060 .LVL17
     /tmp/ccNbFOaB.s:144    .text:0000000000000064 .LVL18
     /tmp/ccNbFOaB.s:151    .text:0000000000000068 .LVL19
     /tmp/ccNbFOaB.s:154    .text:000000000000006c .LVL20
     /tmp/ccNbFOaB.s:288    .text:0000000000000124 .LVL22
     /tmp/ccNbFOaB.s:306    .text:000000000000013c .LVL24
     /tmp/ccNbFOaB.s:370    .text:00000000000001a4 .LVL27
     /tmp/ccNbFOaB.s:404    .text:00000000000001dc .LVL32
     /tmp/ccNbFOaB.s:413    .text:00000000000001e8 .LVL34
     /tmp/ccNbFOaB.s:428    .text:0000000000000204 .LVL37
     /tmp/ccNbFOaB.s:476    .text:0000000000000244 .LVL39
     /tmp/ccNbFOaB.s:494    .text:000000000000025c .LVL41
     /tmp/ccNbFOaB.s:512    .text:0000000000000274 .LVL43
     /tmp/ccNbFOaB.s:530    .text:000000000000028c .LVL45
     /tmp/ccNbFOaB.s:578    .text:00000000000002d4 .LVL49
     /tmp/ccNbFOaB.s:594    .text:00000000000002e4 .LVL51
     /tmp/ccNbFOaB.s:606    .text:00000000000002fc .LVL53
     /tmp/ccNbFOaB.s:657    .text:0000000000000348 .LVL55
     /tmp/ccNbFOaB.s:668    .text:000000000000035c .LVL57
     /tmp/ccNbFOaB.s:678    .text:000000000000036c .LVL59
     /tmp/ccNbFOaB.s:830    .text:0000000000000494 .LVL79
     /tmp/ccNbFOaB.s:907    .text:000000000000052c .LVL87
     /tmp/ccNbFOaB.s:763    .text:000000000000040c .LVL71
     /tmp/ccNbFOaB.s:783    .text:0000000000000444 .LVL72
     /tmp/ccNbFOaB.s:787    .text:0000000000000450 .LVL74
     /tmp/ccNbFOaB.s:792    .text:0000000000000458 .LVL75
     /tmp/ccNbFOaB.s:1028   .text._ZN3TCB12getTimeSliceEv:0000000000000000 .LVL97
     /tmp/ccNbFOaB.s:1038   .text._ZN3TCB12getTimeSliceEv:0000000000000010 .LVL98
     /tmp/ccNbFOaB.s:1113   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccNbFOaB.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccNbFOaB.s:1102   .text:000000000000058c .Letext0

GAS LISTING /tmp/ccNbFOaB.s 			page 43


UNDEFINED SYMBOLS
_ZN7KMemory7kmallocEm
_ZN7KMemory5kfreeEPv
_ZN3TCB12createThreadEPFvPvES0_Pm
_ZN9Scheduler3putEP3TCB
_ZN3TCB13releaseJoinedEv
_ZN3TCB8dispatchEv
_ZN3TCB10threadJoinEPS_
_ZN4KSem7initSemEj
_ZN4KSem8closeSemEPS_
_ZN4KSem4waitEv
_ZN4KSem6signalEv
_ZN9Scheduler10putToSleepEP3TCBm
_ZN8KConsole5kgetcEv
_ZN8KConsole5kputcEc
_Z9kPrintIntm
_Z11printStringPKc
plic_claim
_ZN8KConsole2srE
_ZN8KConsole2drE
_ZN8KConsole12placeInInputEc
plic_complete
_ZN9Scheduler4wakeEv
_ZN3TCB7runningE
_ZN3TCB16runningTimeSliceE
