GAS LISTING /tmp/ccyBqyRg.s 			page 1


   1              		.file	"interruptRoutine.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.section	.rodata
   7              		.align	3
   8              	.LC0:
   9 0000 0A4E6570 		.string	"\nNepostojeci op code: "
   9      6F73746F 
   9      6A656369 
   9      206F7020 
   9      636F6465 
  10 0017 00       		.align	3
  11              	.LC1:
  12 0018 0A736361 		.string	"\nscause: "
  12      7573653A 
  12      2000
  13 0022 00000000 		.align	3
  13      0000
  14              	.LC2:
  15 0028 0A736570 		.string	"\nsepc: "
  15      633A2000 
  16              		.align	3
  17              	.LC3:
  18 0030 4E656B69 		.string	"Neki drugi prekid\n"
  18      20647275 
  18      67692070 
  18      72656B69 
  18      640A00
  19 0043 00000000 		.align	3
  19      00
  20              	.LC4:
  21 0048 0A477265 		.string	"\nGreska u prekidnoj rutini\n"
  21      736B6120 
  21      75207072 
  21      656B6964 
  21      6E6F6A20 
  22 0064 00000000 		.align	3
  23              	.LC5:
  24 0068 73636175 		.string	"scause: "
  24      73653A20 
  24      00
  25              		.text
  26              		.align	2
  27              		.globl	interruptRoutine
  29              	interruptRoutine:
  30              	.LFB50:
  31              		.file 1 "src/interruptRoutine.cpp"
   1:src/interruptRoutine.cpp **** //
   2:src/interruptRoutine.cpp **** // Created by os on 5/22/23.
   3:src/interruptRoutine.cpp **** //
   4:src/interruptRoutine.cpp **** 
   5:src/interruptRoutine.cpp **** #include "../lib/console.h"
   6:src/interruptRoutine.cpp **** #include "../lib/hw.h"
   7:src/interruptRoutine.cpp **** #include "../h/MemoryAllocator.hpp"
   8:src/interruptRoutine.cpp **** #include "../h/helper.hpp"
GAS LISTING /tmp/ccyBqyRg.s 			page 2


   9:src/interruptRoutine.cpp **** #include "../h/Riscv.hpp"
  10:src/interruptRoutine.cpp **** #include "../h/syscall_c.hpp"
  11:src/interruptRoutine.cpp **** #include "../h/TCB.hpp"
  12:src/interruptRoutine.cpp **** #include "../h/Scheduler.hpp"
  13:src/interruptRoutine.cpp **** #include "../h/KSem.hpp"
  14:src/interruptRoutine.cpp **** #include "../h/KConsole.hpp"
  15:src/interruptRoutine.cpp **** #include "../h/KMemory.hpp"
  16:src/interruptRoutine.cpp **** #include "../test/printing.hpp"
  17:src/interruptRoutine.cpp **** 
  18:src/interruptRoutine.cpp **** //void printInteger(int i);
  19:src/interruptRoutine.cpp **** 
  20:src/interruptRoutine.cpp **** #pragma GCC optimize("O0")
  21:src/interruptRoutine.cpp **** extern "C" void interruptRoutine() {
  32              		.loc 1 21 36
  33              		.cfi_startproc
  34 0000 130101F8 		addi	sp,sp,-128
  35              		.cfi_def_cfa_offset 128
  36 0004 233C1106 		sd	ra,120(sp)
  37 0008 23388106 		sd	s0,112(sp)
  38 000c 23349106 		sd	s1,104(sp)
  39              		.cfi_offset 1, -8
  40              		.cfi_offset 8, -16
  41              		.cfi_offset 9, -24
  42 0010 13040108 		addi	s0,sp,128
  43              		.cfi_def_cfa 8, 0
  22:src/interruptRoutine.cpp ****     //bitni sistemski registri
  23:src/interruptRoutine.cpp ****     uint64 scause, sepc, sstatus;
  44              		.loc 1 23 5
  24:src/interruptRoutine.cpp ****     __asm__ volatile("csrr %[scause], scause":[scause] "=r"(scause): : "a5", "a0", "a1", "a2", "a3"
  45              		.loc 1 24 5
  46              		.loc 1 24 119 is_stmt 0
  47              	#APP
  48              	# 24 "src/interruptRoutine.cpp" 1
  25              	    __asm__ volatile("csrr %[sepc], sepc":[sepc] "=r"(sepc): : "a5", "a0", "a1", "a2", "a3", "a4", 
  49              		csrr t1, scause
  50              	# 0 "" 2
  51              	#NO_APP
  52 0018 233C64FC 		sd	t1,-40(s0)
  53              	.LVL0:
  54              		.loc 1 25 5 is_stmt 1
  55              		.loc 1 25 111 is_stmt 0
  56              	#APP
  57              	# 25 "src/interruptRoutine.cpp" 1
  26              	    __asm__ volatile("csrr %[stat], sstatus":[stat] "=r"(sstatus): : "a5", "a0", "a1", "a2", "a3", 
  58              		csrr t1, sepc
  59              	# 0 "" 2
  60              	.LVL1:
  61              	#NO_APP
  62 0020 233864FC 		sd	t1,-48(s0)
  63              	.LVL2:
  64              		.loc 1 26 5 is_stmt 1
  65              		.loc 1 26 117 is_stmt 0
  66              	#APP
  67              	# 26 "src/interruptRoutine.cpp" 1
  27              	
  68              		csrr t1, sstatus
  69              	# 0 "" 2
GAS LISTING /tmp/ccyBqyRg.s 			page 3


  70              	.LVL3:
  71              	#NO_APP
  72 0028 233464FC 		sd	t1,-56(s0)
  73              	.LVL4:
  28:src/interruptRoutine.cpp ****     //argumenti preneti sistemskom pozivu
  29:src/interruptRoutine.cpp ****     uint64 a0, a1, a2, a3, a4, a5, a6, a7;
  74              		.loc 1 29 5 is_stmt 1
  30:src/interruptRoutine.cpp ****     __asm__ volatile("mv %[ax], a0":[ax] "=r"(a0): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7"
  75              		.loc 1 30 5
  76              		.loc 1 30 101 is_stmt 0
  77              	#APP
  78              	# 30 "src/interruptRoutine.cpp" 1
  31              	    __asm__ volatile("mv %[ax], a1":[ax] "=r"(a1): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7"
  79              		mv t1, a0
  80              	# 0 "" 2
  81              	.LVL5:
  82              	#NO_APP
  83 0030 233064FC 		sd	t1,-64(s0)
  84              	.LVL6:
  85              		.loc 1 31 5 is_stmt 1
  86              		.loc 1 31 101 is_stmt 0
  87              	#APP
  88              	# 31 "src/interruptRoutine.cpp" 1
  32              	    __asm__ volatile("mv %[ax], a2":[ax] "=r"(a2): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7"
  89              		mv t1, a1
  90              	# 0 "" 2
  91              	.LVL7:
  92              	#NO_APP
  93 0038 233C64FA 		sd	t1,-72(s0)
  94              	.LVL8:
  95              		.loc 1 32 5 is_stmt 1
  96              		.loc 1 32 101 is_stmt 0
  97              	#APP
  98              	# 32 "src/interruptRoutine.cpp" 1
  33              	    __asm__ volatile("mv %[ax], a3":[ax] "=r"(a3): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7"
  99              		mv t1, a2
 100              	# 0 "" 2
 101              	.LVL9:
 102              	#NO_APP
 103 0040 233864FA 		sd	t1,-80(s0)
 104              	.LVL10:
 105              		.loc 1 33 5 is_stmt 1
 106              		.loc 1 33 101 is_stmt 0
 107              	#APP
 108              	# 33 "src/interruptRoutine.cpp" 1
  34              	    __asm__ volatile("mv %[ax], a4":[ax] "=r"(a4): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7"
 109              		mv t1, a3
 110              	# 0 "" 2
 111              	.LVL11:
 112              	#NO_APP
 113 0048 233464FA 		sd	t1,-88(s0)
 114              	.LVL12:
 115              		.loc 1 34 5 is_stmt 1
 116              		.loc 1 34 101 is_stmt 0
 117              	#APP
 118              	# 34 "src/interruptRoutine.cpp" 1
  35              	    __asm__ volatile("mv %[ax], a5":[ax] "=r"(a5): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7"
GAS LISTING /tmp/ccyBqyRg.s 			page 4


 119              		mv t1, a4
 120              	# 0 "" 2
 121              	.LVL13:
 122              	#NO_APP
 123 0050 233064FA 		sd	t1,-96(s0)
 124              	.LVL14:
 125              		.loc 1 35 5 is_stmt 1
 126              		.loc 1 35 101 is_stmt 0
 127              	#APP
 128              	# 35 "src/interruptRoutine.cpp" 1
  36              	    __asm__ volatile("mv %[ax], a6":[ax] "=r"(a6): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7"
 129              		mv t1, a5
 130              	# 0 "" 2
 131              	.LVL15:
 132              	#NO_APP
 133 0058 233C64F8 		sd	t1,-104(s0)
 134              	.LVL16:
 135              		.loc 1 36 5 is_stmt 1
 136              		.loc 1 36 101 is_stmt 0
 137              	#APP
 138              	# 36 "src/interruptRoutine.cpp" 1
  37              	    __asm__ volatile("mv %[ax], a7":[ax] "=r"(a7): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7"
 139              		mv t1, a6
 140              	# 0 "" 2
 141              	.LVL17:
 142              	#NO_APP
 143 0060 233864F8 		sd	t1,-112(s0)
 144              	.LVL18:
 145              		.loc 1 37 5 is_stmt 1
 146              		.loc 1 37 101 is_stmt 0
 147              	#APP
 148              	# 37 "src/interruptRoutine.cpp" 1
  38              	
 149              		mv t1, a7
 150              	# 0 "" 2
 151              	.LVL19:
 152              	#NO_APP
 153 0068 233464F8 		sd	t1,-120(s0)
 154              	.LVL20:
  39:src/interruptRoutine.cpp ****     if (scause == 0x9 || scause == 0x8) {
 155              		.loc 1 39 5 is_stmt 1
 156              	.LBB2:
 157 006c 033784FD 		ld	a4,-40(s0)
 158 0070 93079000 		li	a5,9
 159 0074 6308F700 		beq	a4,a5,.L2
 160              		.loc 1 39 23 is_stmt 0 discriminator 1
 161 0078 033784FD 		ld	a4,-40(s0)
 162 007c 93078000 		li	a5,8
 163 0080 631CF736 		bne	a4,a5,.L3
 164              	.L2:
  40:src/interruptRoutine.cpp ****         //prekid zbog poziva ecall
  41:src/interruptRoutine.cpp ****         switch (a0) {
 165              		.loc 1 41 9 is_stmt 1
 166 0084 033704FC 		ld	a4,-64(s0)
 167 0088 93071009 		li	a5,145
 168 008c 6300F72E 		beq	a4,a5,.L4
 169 0090 033704FC 		ld	a4,-64(s0)
GAS LISTING /tmp/ccyBqyRg.s 			page 5


 170 0094 93071009 		li	a5,145
 171 0098 63E2E72E 		bgtu	a4,a5,.L5
 172 009c 033704FC 		ld	a4,-64(s0)
 173 00a0 93071008 		li	a5,129
 174 00a4 630AF72A 		beq	a4,a5,.L6
 175 00a8 033704FC 		ld	a4,-64(s0)
 176 00ac 93071008 		li	a5,129
 177 00b0 63E6E72C 		bgtu	a4,a5,.L5
 178 00b4 033704FC 		ld	a4,-64(s0)
 179 00b8 93072004 		li	a5,66
 180 00bc 63E2E704 		bgtu	a4,a5,.L7
 181 00c0 833704FC 		ld	a5,-64(s0)
 182 00c4 638C072A 		beqz	a5,.L5
 183 00c8 033704FC 		ld	a4,-64(s0)
 184 00cc 93072004 		li	a5,66
 185 00d0 63E6E72A 		bgtu	a4,a5,.L5
 186 00d4 833704FC 		ld	a5,-64(s0)
 187 00d8 13972700 		slli	a4,a5,2
 188 00dc 97070000 		lla	a5,.L9
 188      93870700 
 189 00e4 B307F700 		add	a5,a4,a5
 190 00e8 83A70700 		lw	a5,0(a5)
 191 00ec 1B870700 		sext.w	a4,a5
 192 00f0 97070000 		lla	a5,.L9
 192      93870700 
 193 00f8 B307F700 		add	a5,a4,a5
 194 00fc 67800700 		jr	a5
 195              		.section	.rodata
 196 0071 000000   		.align	2
 197              		.align	2
 198              	.L9:
 199 0074 00000000 		.word	.L5-.L9
 200 0078 00000000 		.word	.L21-.L9
 201 007c 00000000 		.word	.L20-.L9
 202 0080 00000000 		.word	.L5-.L9
 203 0084 00000000 		.word	.L5-.L9
 204 0088 00000000 		.word	.L5-.L9
 205 008c 00000000 		.word	.L5-.L9
 206 0090 00000000 		.word	.L5-.L9
 207 0094 00000000 		.word	.L5-.L9
 208 0098 00000000 		.word	.L5-.L9
 209 009c 00000000 		.word	.L5-.L9
 210 00a0 00000000 		.word	.L5-.L9
 211 00a4 00000000 		.word	.L5-.L9
 212 00a8 00000000 		.word	.L5-.L9
 213 00ac 00000000 		.word	.L5-.L9
 214 00b0 00000000 		.word	.L5-.L9
 215 00b4 00000000 		.word	.L5-.L9
 216 00b8 00000000 		.word	.L19-.L9
 217 00bc 00000000 		.word	.L18-.L9
 218 00c0 00000000 		.word	.L17-.L9
 219 00c4 00000000 		.word	.L16-.L9
 220 00c8 00000000 		.word	.L5-.L9
 221 00cc 00000000 		.word	.L5-.L9
 222 00d0 00000000 		.word	.L5-.L9
 223 00d4 00000000 		.word	.L5-.L9
 224 00d8 00000000 		.word	.L5-.L9
GAS LISTING /tmp/ccyBqyRg.s 			page 6


 225 00dc 00000000 		.word	.L5-.L9
 226 00e0 00000000 		.word	.L5-.L9
 227 00e4 00000000 		.word	.L5-.L9
 228 00e8 00000000 		.word	.L5-.L9
 229 00ec 00000000 		.word	.L5-.L9
 230 00f0 00000000 		.word	.L5-.L9
 231 00f4 00000000 		.word	.L5-.L9
 232 00f8 00000000 		.word	.L15-.L9
 233 00fc 00000000 		.word	.L14-.L9
 234 0100 00000000 		.word	.L13-.L9
 235 0104 00000000 		.word	.L12-.L9
 236 0108 00000000 		.word	.L5-.L9
 237 010c 00000000 		.word	.L5-.L9
 238 0110 00000000 		.word	.L5-.L9
 239 0114 00000000 		.word	.L5-.L9
 240 0118 00000000 		.word	.L5-.L9
 241 011c 00000000 		.word	.L5-.L9
 242 0120 00000000 		.word	.L5-.L9
 243 0124 00000000 		.word	.L5-.L9
 244 0128 00000000 		.word	.L5-.L9
 245 012c 00000000 		.word	.L5-.L9
 246 0130 00000000 		.word	.L5-.L9
 247 0134 00000000 		.word	.L5-.L9
 248 0138 00000000 		.word	.L11-.L9
 249 013c 00000000 		.word	.L5-.L9
 250 0140 00000000 		.word	.L5-.L9
 251 0144 00000000 		.word	.L5-.L9
 252 0148 00000000 		.word	.L5-.L9
 253 014c 00000000 		.word	.L5-.L9
 254 0150 00000000 		.word	.L5-.L9
 255 0154 00000000 		.word	.L5-.L9
 256 0158 00000000 		.word	.L5-.L9
 257 015c 00000000 		.word	.L5-.L9
 258 0160 00000000 		.word	.L5-.L9
 259 0164 00000000 		.word	.L5-.L9
 260 0168 00000000 		.word	.L5-.L9
 261 016c 00000000 		.word	.L5-.L9
 262 0170 00000000 		.word	.L5-.L9
 263 0174 00000000 		.word	.L5-.L9
 264 0178 00000000 		.word	.L10-.L9
 265 017c 00000000 		.word	.L8-.L9
 266              		.text
 267              	.L7:
 268 0100 033704FC 		ld	a4,-64(s0)
 269 0104 93070008 		li	a5,128
 270 0108 6302F720 		beq	a4,a5,.L22
 271 010c 6F000027 		j	.L5
 272              	.L21:
  42:src/interruptRoutine.cpp ****             case 0x01:
 273              		.loc 1 42 13
  43:src/interruptRoutine.cpp ****                 //mem_alloc
  44:src/interruptRoutine.cpp ****                 //a1 = broj blokova koje treba alocirati
  45:src/interruptRoutine.cpp ****                 //MemoryAllocator::kmalloc((size_t)a1 * MEM_BLOCK_SIZE);
  46:src/interruptRoutine.cpp ****                 KMemory::kmalloc((size_t)a1);
 274              		.loc 1 46 17
 275              		.loc 1 46 33 is_stmt 0
 276 0110 033584FB 		ld	a0,-72(s0)
GAS LISTING /tmp/ccyBqyRg.s 			page 7


 277 0114 97000000 		call	_ZN7KMemory7kmallocEm@plt
 277      E7800000 
 278              	.LVL21:
  47:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 279              		.loc 1 47 17 is_stmt 1
 280              		.loc 1 47 50 is_stmt 0
 281              	#APP
 282              	# 47 "src/interruptRoutine.cpp" 1
  48              	                break;
 283              		sd a0, 80(s0)
 284              	# 0 "" 2
 285              		.loc 1 48 17 is_stmt 1
 286              	#NO_APP
 287 0120 6F00802B 		j	.L23
 288              	.LVL22:
 289              	.L20:
  49:src/interruptRoutine.cpp ****             case 0x02:
 290              		.loc 1 49 13
  50:src/interruptRoutine.cpp ****                 //mem_free
  51:src/interruptRoutine.cpp ****                 //a1 = pokazivac na memoriju koju dealociramo, dobijen sa mem_alloc
  52:src/interruptRoutine.cpp ****                 //MemoryAllocator::kfree((void*)a1);
  53:src/interruptRoutine.cpp ****                 KMemory::kfree((void*)a1);
 291              		.loc 1 53 17
 292              		.loc 1 53 31 is_stmt 0
 293 0124 833784FB 		ld	a5,-72(s0)
 294 0128 13850700 		mv	a0,a5
 295 012c 97000000 		call	_ZN7KMemory5kfreeEPv@plt
 295      E7800000 
 296              	.LVL23:
  54:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 297              		.loc 1 54 17 is_stmt 1
 298              		.loc 1 54 50 is_stmt 0
 299              	#APP
 300              	# 54 "src/interruptRoutine.cpp" 1
  55              	                break;
 301              		sd a0, 80(s0)
 302              	# 0 "" 2
 303              		.loc 1 55 17 is_stmt 1
 304              	#NO_APP
 305 0138 6F00002A 		j	.L23
 306              	.LVL24:
 307              	.L19:
  56:src/interruptRoutine.cpp ****             case 0x11:
 308              		.loc 1 56 13
  57:src/interruptRoutine.cpp ****                 //thread_create
  58:src/interruptRoutine.cpp ****                 //a1 = pokazivac na rucku u koju upisujemo identifikator niti(adresa u memoriji)
  59:src/interruptRoutine.cpp ****                 //a2 = pokazivac na funkciju koju nit treba da izvrsava
  60:src/interruptRoutine.cpp ****                 //a3 = argumenti funkcije koju nit treba da izvrsava
  61:src/interruptRoutine.cpp ****                 //a4 = poslednja lokacija alociranog steka(najniza adresa)
  62:src/interruptRoutine.cpp ****                 *((thread_t*)a1) = TCB::createThread((TCB::Body)a2, (void*)a3, (uint64*)a4);
 309              		.loc 1 62 17
 310              		.loc 1 62 53 is_stmt 0
 311 013c 833704FB 		ld	a5,-80(s0)
 312 0140 033784FA 		ld	a4,-88(s0)
 313 0144 833604FA 		ld	a3,-96(s0)
 314              		.loc 1 62 17
 315 0148 833484FB 		ld	s1,-72(s0)
GAS LISTING /tmp/ccyBqyRg.s 			page 8


 316              		.loc 1 62 53
 317 014c 13860600 		mv	a2,a3
 318 0150 93050700 		mv	a1,a4
 319 0154 13850700 		mv	a0,a5
 320 0158 97000000 		call	_ZN3TCB12createThreadEPFvPvES0_Pm@plt
 320      E7800000 
 321              	.LVL25:
 322 0160 93070500 		mv	a5,a0
 323              		.loc 1 62 34
 324 0164 23B0F400 		sd	a5,0(s1)
  63:src/interruptRoutine.cpp ****                 if((TCB::Body)a2!=nullptr){
 325              		.loc 1 63 17 is_stmt 1
 326              		.loc 1 63 33 is_stmt 0
 327 0168 833704FB 		ld	a5,-80(s0)
 328              		.loc 1 63 17
 329 016c 63880702 		beqz	a5,.L24
  64:src/interruptRoutine.cpp ****                     Scheduler::put(*((thread_t*)a1));
 330              		.loc 1 64 21 is_stmt 1
 331              		.loc 1 64 35 is_stmt 0
 332 0170 833784FB 		ld	a5,-72(s0)
 333 0174 83B70700 		ld	a5,0(a5)
 334 0178 13850700 		mv	a0,a5
 335 017c 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 335      E7800000 
 336              	.LVL26:
  65:src/interruptRoutine.cpp ****                     (*((thread_t*)a1))->setStatus(TCB::ACTIVE);
 337              		.loc 1 65 21 is_stmt 1
 338              		.loc 1 65 50 is_stmt 0
 339 0184 833784FB 		ld	a5,-72(s0)
 340 0188 83B70700 		ld	a5,0(a5)
 341 018c 93051000 		li	a1,1
 342 0190 13850700 		mv	a0,a5
 343 0194 97000000 		call	_ZN3TCB9setStatusENS_12ThreadStatusE
 343      E7800000 
 344              	.LVL27:
 345              	.L24:
  66:src/interruptRoutine.cpp ****                 }
  67:src/interruptRoutine.cpp ****                 if (*((thread_t*)a1) != nullptr) {
 346              		.loc 1 67 17 is_stmt 1
 347              		.loc 1 67 21 is_stmt 0
 348 019c 833784FB 		ld	a5,-72(s0)
 349 01a0 83B70700 		ld	a5,0(a5)
 350              		.loc 1 67 17
 351 01a4 63860700 		beqz	a5,.L25
  68:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, 0");
 352              		.loc 1 68 21 is_stmt 1
 353              		.loc 1 68 49 is_stmt 0
 354              	#APP
 355              	# 68 "src/interruptRoutine.cpp" 1
  69              	                } else {
 356              		li a0, 0
 357              	# 0 "" 2
 358              	#NO_APP
 359 01ac 6F008000 		j	.L26
 360              	.L25:
  70:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, -1");
 361              		.loc 1 70 21 is_stmt 1
GAS LISTING /tmp/ccyBqyRg.s 			page 9


 362              		.loc 1 70 50 is_stmt 0
 363              	#APP
 364              	# 70 "src/interruptRoutine.cpp" 1
  71              	                }
 365              		li a0, -1
 366              	# 0 "" 2
 367              	#NO_APP
 368              	.L26:
  72:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 369              		.loc 1 72 17 is_stmt 1
 370              		.loc 1 72 50 is_stmt 0
 371              	#APP
 372              	# 72 "src/interruptRoutine.cpp" 1
  73              	                break;
 373              		sd a0, 80(s0)
 374              	# 0 "" 2
 375              		.loc 1 73 17 is_stmt 1
 376              	#NO_APP
 377 01b8 6F000022 		j	.L23
 378              	.LVL28:
 379              	.L18:
  74:src/interruptRoutine.cpp ****             case 0x12:
 380              		.loc 1 74 13
  75:src/interruptRoutine.cpp ****                 //thread_exit
  76:src/interruptRoutine.cpp ****                 //TCB::running->setFinished(true);
  77:src/interruptRoutine.cpp ****                 TCB::running->setStatus(TCB::FINISHED);
 381              		.loc 1 77 17
 382              		.loc 1 77 40 is_stmt 0
 383 01bc 97070000 		la	a5,_ZN3TCB7runningE
 383      83B70700 
 384 01c4 83B70700 		ld	a5,0(a5)
 385 01c8 93055000 		li	a1,5
 386 01cc 13850700 		mv	a0,a5
 387 01d0 97000000 		call	_ZN3TCB9setStatusENS_12ThreadStatusE
 387      E7800000 
 388              	.LVL29:
  78:src/interruptRoutine.cpp ****                 TCB::releaseJoined();
 389              		.loc 1 78 17 is_stmt 1
 390              		.loc 1 78 35 is_stmt 0
 391 01d8 97000000 		call	_ZN3TCB13releaseJoinedEv@plt
 391      E7800000 
 392              	.LVL30:
  79:src/interruptRoutine.cpp ****                 TCB::yield();
 393              		.loc 1 79 17 is_stmt 1
 394              		.loc 1 79 27 is_stmt 0
 395 01e0 97000000 		call	_ZN3TCB5yieldEv@plt
 395      E7800000 
 396              	.LVL31:
  80:src/interruptRoutine.cpp ****                 break;
 397              		.loc 1 80 17 is_stmt 1
 398 01e8 6F00001F 		j	.L23
 399              	.LVL32:
 400              	.L17:
  81:src/interruptRoutine.cpp ****             case 0x13:
 401              		.loc 1 81 13
  82:src/interruptRoutine.cpp ****                 //thread_dispatch
  83:src/interruptRoutine.cpp ****                 TCB::yield();
GAS LISTING /tmp/ccyBqyRg.s 			page 10


 402              		.loc 1 83 17
 403              		.loc 1 83 27 is_stmt 0
 404 01ec 97000000 		call	_ZN3TCB5yieldEv@plt
 404      E7800000 
 405              	.LVL33:
  84:src/interruptRoutine.cpp ****                 //TCB::dispatch();
  85:src/interruptRoutine.cpp ****                 break;
 406              		.loc 1 85 17 is_stmt 1
 407 01f4 6F00401E 		j	.L23
 408              	.LVL34:
 409              	.L16:
  86:src/interruptRoutine.cpp ****             case 0x14:
 410              		.loc 1 86 13
  87:src/interruptRoutine.cpp ****                 //thread_join
  88:src/interruptRoutine.cpp ****                 //a1 = rucka niti na koju tekuca nit treba da ceka
  89:src/interruptRoutine.cpp ****                 TCB::threadJoin((thread_t)a1);
 411              		.loc 1 89 17
 412              		.loc 1 89 32 is_stmt 0
 413 01f8 833784FB 		ld	a5,-72(s0)
 414 01fc 13850700 		mv	a0,a5
 415 0200 97000000 		call	_ZN3TCB10threadJoinEPS_@plt
 415      E7800000 
 416              	.LVL35:
  90:src/interruptRoutine.cpp ****                 TCB::yield();
 417              		.loc 1 90 17 is_stmt 1
 418              		.loc 1 90 27 is_stmt 0
 419 0208 97000000 		call	_ZN3TCB5yieldEv@plt
 419      E7800000 
 420              	.LVL36:
  91:src/interruptRoutine.cpp ****                 break;
 421              		.loc 1 91 17 is_stmt 1
 422 0210 6F00801C 		j	.L23
 423              	.LVL37:
 424              	.L15:
  92:src/interruptRoutine.cpp ****             case 0x21:
 425              		.loc 1 92 13
  93:src/interruptRoutine.cpp ****                 //sem_open
  94:src/interruptRoutine.cpp ****                 //a1 = pokazivac na rucku semafora, u koju se upisuje adresa semafora u memoriji
  95:src/interruptRoutine.cpp ****                 *((sem_t*)a1) = KSem::initSem((uint)a2);
 426              		.loc 1 95 17
 427              		.loc 1 95 46 is_stmt 0
 428 0214 833704FB 		ld	a5,-80(s0)
 429 0218 9B870700 		sext.w	a5,a5
 430              		.loc 1 95 17
 431 021c 833484FB 		ld	s1,-72(s0)
 432              		.loc 1 95 46
 433 0220 13850700 		mv	a0,a5
 434 0224 97000000 		call	_ZN4KSem7initSemEj@plt
 434      E7800000 
 435              	.LVL38:
 436 022c 93070500 		mv	a5,a0
 437              		.loc 1 95 31
 438 0230 23B0F400 		sd	a5,0(s1)
  96:src/interruptRoutine.cpp ****                 if (*((sem_t*)a1) != nullptr) {
 439              		.loc 1 96 17 is_stmt 1
 440              		.loc 1 96 21 is_stmt 0
 441 0234 833784FB 		ld	a5,-72(s0)
GAS LISTING /tmp/ccyBqyRg.s 			page 11


 442 0238 83B70700 		ld	a5,0(a5)
 443              		.loc 1 96 17
 444 023c 63860700 		beqz	a5,.L27
  97:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, 0");
 445              		.loc 1 97 21 is_stmt 1
 446              		.loc 1 97 49 is_stmt 0
 447              	#APP
 448              	# 97 "src/interruptRoutine.cpp" 1
  98              	                } else {
 449              		li a0, 0
 450              	# 0 "" 2
 451              	#NO_APP
 452 0244 6F008000 		j	.L28
 453              	.L27:
  99:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, -1");
 454              		.loc 1 99 21 is_stmt 1
 455              		.loc 1 99 50 is_stmt 0
 456              	#APP
 457              	# 99 "src/interruptRoutine.cpp" 1
 100              	                }
 458              		li a0, -1
 459              	# 0 "" 2
 460              	#NO_APP
 461              	.L28:
 101:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 462              		.loc 1 101 17 is_stmt 1
 463              		.loc 1 101 50 is_stmt 0
 464              	#APP
 465              	# 101 "src/interruptRoutine.cpp" 1
 102              	                break;
 466              		sd a0, 80(s0)
 467              	# 0 "" 2
 468              		.loc 1 102 17 is_stmt 1
 469              	#NO_APP
 470 0250 6F008018 		j	.L23
 471              	.LVL39:
 472              	.L14:
 103:src/interruptRoutine.cpp ****             case 0x22:
 473              		.loc 1 103 13
 104:src/interruptRoutine.cpp ****                 //sem_close
 105:src/interruptRoutine.cpp ****                 //a1 = rucka semafora
 106:src/interruptRoutine.cpp ****                 KSem::closeSem((sem_t)a1);
 474              		.loc 1 106 17
 475              		.loc 1 106 31 is_stmt 0
 476 0254 833784FB 		ld	a5,-72(s0)
 477 0258 13850700 		mv	a0,a5
 478 025c 97000000 		call	_ZN4KSem8closeSemEPS_@plt
 478      E7800000 
 479              	.LVL40:
 107:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 480              		.loc 1 107 17 is_stmt 1
 481              		.loc 1 107 50 is_stmt 0
 482              	#APP
 483              	# 107 "src/interruptRoutine.cpp" 1
 108              	                break;
 484              		sd a0, 80(s0)
 485              	# 0 "" 2
GAS LISTING /tmp/ccyBqyRg.s 			page 12


 486              		.loc 1 108 17 is_stmt 1
 487              	#NO_APP
 488 0268 6F000017 		j	.L23
 489              	.LVL41:
 490              	.L13:
 109:src/interruptRoutine.cpp ****             case 0x23:
 491              		.loc 1 109 13
 110:src/interruptRoutine.cpp ****                 //sem_wait
 111:src/interruptRoutine.cpp ****                 //a1 = rucka semafora
 112:src/interruptRoutine.cpp ****                 ((sem_t)a1)->wait();
 492              		.loc 1 112 17
 493              		.loc 1 112 34 is_stmt 0
 494 026c 833784FB 		ld	a5,-72(s0)
 495 0270 13850700 		mv	a0,a5
 496 0274 97000000 		call	_ZN4KSem4waitEv@plt
 496      E7800000 
 497              	.LVL42:
 113:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 498              		.loc 1 113 17 is_stmt 1
 499              		.loc 1 113 50 is_stmt 0
 500              	#APP
 501              	# 113 "src/interruptRoutine.cpp" 1
 114              	                break;
 502              		sd a0, 80(s0)
 503              	# 0 "" 2
 504              		.loc 1 114 17 is_stmt 1
 505              	#NO_APP
 506 0280 6F008015 		j	.L23
 507              	.LVL43:
 508              	.L12:
 115:src/interruptRoutine.cpp ****             case 0x24:
 509              		.loc 1 115 13
 116:src/interruptRoutine.cpp ****                 //sem_signal
 117:src/interruptRoutine.cpp ****                 //a1 = rucka semafora
 118:src/interruptRoutine.cpp ****                 ((sem_t)a1)->signal();
 510              		.loc 1 118 17
 511              		.loc 1 118 36 is_stmt 0
 512 0284 833784FB 		ld	a5,-72(s0)
 513 0288 13850700 		mv	a0,a5
 514 028c 97000000 		call	_ZN4KSem6signalEv@plt
 514      E7800000 
 515              	.LVL44:
 119:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 516              		.loc 1 119 17 is_stmt 1
 517              		.loc 1 119 50 is_stmt 0
 518              	#APP
 519              	# 119 "src/interruptRoutine.cpp" 1
 120              	                break;
 520              		sd a0, 80(s0)
 521              	# 0 "" 2
 522              		.loc 1 120 17 is_stmt 1
 523              	#NO_APP
 524 0298 6F000014 		j	.L23
 525              	.LVL45:
 526              	.L11:
 121:src/interruptRoutine.cpp ****             case 0x31:
 527              		.loc 1 121 13
GAS LISTING /tmp/ccyBqyRg.s 			page 13


 122:src/interruptRoutine.cpp ****                 //time_sleep
 123:src/interruptRoutine.cpp ****                 //a1 = broj perioda tajmera na koji se uspavljuje tekuca nit
 124:src/interruptRoutine.cpp ****                 if ((time_t)a1 > 0) {
 528              		.loc 1 124 17
 529 029c 833784FB 		ld	a5,-72(s0)
 530 02a0 63860700 		beqz	a5,.L29
 125:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, 0");
 531              		.loc 1 125 21
 532              		.loc 1 125 49 is_stmt 0
 533              	#APP
 534              	# 125 "src/interruptRoutine.cpp" 1
 126              	                } else {
 535              		li a0, 0
 536              	# 0 "" 2
 537              	#NO_APP
 538 02a8 6F008000 		j	.L30
 539              	.L29:
 127:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, -1");
 540              		.loc 1 127 21 is_stmt 1
 541              		.loc 1 127 50 is_stmt 0
 542              	#APP
 543              	# 127 "src/interruptRoutine.cpp" 1
 128              	                }
 544              		li a0, -1
 545              	# 0 "" 2
 546              	#NO_APP
 547              	.L30:
 129:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 548              		.loc 1 129 17 is_stmt 1
 549              		.loc 1 129 50 is_stmt 0
 550              	#APP
 551              	# 129 "src/interruptRoutine.cpp" 1
 130              	                if ((time_t)a1 > 0) {
 552              		sd a0, 80(s0)
 553              	# 0 "" 2
 554              		.loc 1 130 17 is_stmt 1
 555              	#NO_APP
 556 02b4 833784FB 		ld	a5,-72(s0)
 557 02b8 638E0710 		beqz	a5,.L40
 131:src/interruptRoutine.cpp ****                     Scheduler::putToSleep(TCB::running, (time_t)a1);
 558              		.loc 1 131 21
 559              		.loc 1 131 42 is_stmt 0
 560 02bc 97070000 		la	a5,_ZN3TCB7runningE
 560      83B70700 
 561 02c4 83B70700 		ld	a5,0(a5)
 562 02c8 833584FB 		ld	a1,-72(s0)
 563 02cc 13850700 		mv	a0,a5
 564 02d0 97000000 		call	_ZN9Scheduler10putToSleepEP3TCBm@plt
 564      E7800000 
 565              	.LVL46:
 132:src/interruptRoutine.cpp ****                     TCB::yield();
 566              		.loc 1 132 21 is_stmt 1
 567              		.loc 1 132 31 is_stmt 0
 568 02d8 97000000 		call	_ZN3TCB5yieldEv@plt
 568      E7800000 
 569              	.LVL47:
 133:src/interruptRoutine.cpp ****                 }
GAS LISTING /tmp/ccyBqyRg.s 			page 14


 134:src/interruptRoutine.cpp ****                 break;
 570              		.loc 1 134 17 is_stmt 1
 571 02e0 6F00400F 		j	.L40
 572              	.LVL48:
 573              	.L10:
 135:src/interruptRoutine.cpp ****             case 0x41:
 574              		.loc 1 135 13
 136:src/interruptRoutine.cpp ****                 //getc
 137:src/interruptRoutine.cpp ****                 KConsole::kgetc();
 575              		.loc 1 137 17
 576              		.loc 1 137 32 is_stmt 0
 577 02e4 97000000 		call	_ZN8KConsole5kgetcEv@plt
 577      E7800000 
 578              	.LVL49:
 138:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 579              		.loc 1 138 17 is_stmt 1
 580              		.loc 1 138 50 is_stmt 0
 581              	#APP
 582              	# 138 "src/interruptRoutine.cpp" 1
 139              	                break;
 583              		sd a0, 80(s0)
 584              	# 0 "" 2
 585              		.loc 1 139 17 is_stmt 1
 586              	#NO_APP
 587 02f0 6F00800E 		j	.L23
 588              	.LVL50:
 589              	.L8:
 140:src/interruptRoutine.cpp ****             case 0x42:
 590              		.loc 1 140 13
 141:src/interruptRoutine.cpp ****                 //putc
 142:src/interruptRoutine.cpp ****                 //a1 = karakter koji se upisuje u bafer za ispis na konzolu
 143:src/interruptRoutine.cpp ****                 KConsole::kputc((char)a1);
 591              		.loc 1 143 17
 592              		.loc 1 143 32 is_stmt 0
 593 02f4 833784FB 		ld	a5,-72(s0)
 594 02f8 93F7F70F 		andi	a5,a5,0xff
 595 02fc 13850700 		mv	a0,a5
 596 0300 97000000 		call	_ZN8KConsole5kputcEc@plt
 596      E7800000 
 597              	.LVL51:
 144:src/interruptRoutine.cpp ****                 break;
 598              		.loc 1 144 17 is_stmt 1
 599 0308 6F00000D 		j	.L23
 600              	.LVL52:
 601              	.L22:
 145:src/interruptRoutine.cpp ****             case 0x80:
 602              		.loc 1 145 13
 146:src/interruptRoutine.cpp ****                 //alloc thread
 147:src/interruptRoutine.cpp ****                 //a1 = pokazivac na rucku u koju upisujemo identifikator niti(adresa u memoriji)
 148:src/interruptRoutine.cpp ****                 //a2 = pokazivac na funkciju koju nit treba da izvrsava
 149:src/interruptRoutine.cpp ****                 //a3 = argumenti funkcije koju nit treba da izvrsava
 150:src/interruptRoutine.cpp ****                 //a4 = poslednja lokacija alociranog steka(najniza adresa)
 151:src/interruptRoutine.cpp ****                 *((thread_t*)a1) = TCB::createThread((TCB::Body)a2, (void*)a3, (uint64*)a4);
 603              		.loc 1 151 17
 604              		.loc 1 151 53 is_stmt 0
 605 030c 833704FB 		ld	a5,-80(s0)
 606 0310 033784FA 		ld	a4,-88(s0)
GAS LISTING /tmp/ccyBqyRg.s 			page 15


 607 0314 833604FA 		ld	a3,-96(s0)
 608              		.loc 1 151 17
 609 0318 833484FB 		ld	s1,-72(s0)
 610              		.loc 1 151 53
 611 031c 13860600 		mv	a2,a3
 612 0320 93050700 		mv	a1,a4
 613 0324 13850700 		mv	a0,a5
 614 0328 97000000 		call	_ZN3TCB12createThreadEPFvPvES0_Pm@plt
 614      E7800000 
 615              	.LVL53:
 616 0330 93070500 		mv	a5,a0
 617              		.loc 1 151 34
 618 0334 23B0F400 		sd	a5,0(s1)
 152:src/interruptRoutine.cpp ****                 if (*((thread_t*)a1) != nullptr) {
 619              		.loc 1 152 17 is_stmt 1
 620              		.loc 1 152 21 is_stmt 0
 621 0338 833784FB 		ld	a5,-72(s0)
 622 033c 83B70700 		ld	a5,0(a5)
 623              		.loc 1 152 17
 624 0340 63860700 		beqz	a5,.L32
 153:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, 0");
 625              		.loc 1 153 21 is_stmt 1
 626              		.loc 1 153 49 is_stmt 0
 627              	#APP
 628              	# 153 "src/interruptRoutine.cpp" 1
 154              	                } else {
 629              		li a0, 0
 630              	# 0 "" 2
 631              	#NO_APP
 632 0348 6F008000 		j	.L33
 633              	.L32:
 155:src/interruptRoutine.cpp ****                     __asm__ volatile("li a0, -1");
 634              		.loc 1 155 21 is_stmt 1
 635              		.loc 1 155 50 is_stmt 0
 636              	#APP
 637              	# 155 "src/interruptRoutine.cpp" 1
 156              	                }
 638              		li a0, -1
 639              	# 0 "" 2
 640              	#NO_APP
 641              	.L33:
 157:src/interruptRoutine.cpp ****                 __asm__ volatile("sd a0, 80(s0)");
 642              		.loc 1 157 17 is_stmt 1
 643              		.loc 1 157 50 is_stmt 0
 644              	#APP
 645              	# 157 "src/interruptRoutine.cpp" 1
 158              	                break;
 646              		sd a0, 80(s0)
 647              	# 0 "" 2
 648              		.loc 1 158 17 is_stmt 1
 649              	#NO_APP
 650 0354 6F004008 		j	.L23
 651              	.LVL54:
 652              	.L6:
 159:src/interruptRoutine.cpp ****             case 0x81:
 653              		.loc 1 159 13
 160:src/interruptRoutine.cpp ****                 //start thread
GAS LISTING /tmp/ccyBqyRg.s 			page 16


 161:src/interruptRoutine.cpp ****                 //a1 = rucka niti koja se stavlja u scheduler
 162:src/interruptRoutine.cpp ****                 Scheduler::put((thread_t)a1);
 654              		.loc 1 162 17
 655              		.loc 1 162 31 is_stmt 0
 656 0358 833784FB 		ld	a5,-72(s0)
 657 035c 13850700 		mv	a0,a5
 658 0360 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 658      E7800000 
 659              	.LVL55:
 163:src/interruptRoutine.cpp ****                 break;
 660              		.loc 1 163 17 is_stmt 1
 661 0368 6F000007 		j	.L23
 662              	.LVL56:
 663              	.L4:
 164:src/interruptRoutine.cpp ****             case 0x91:
 664              		.loc 1 164 13
 165:src/interruptRoutine.cpp ****                 //printInteger
 166:src/interruptRoutine.cpp ****                 //a1 = integer za ispis
 167:src/interruptRoutine.cpp ****                 kPrintInt(a1);
 665              		.loc 1 167 17
 666              		.loc 1 167 26 is_stmt 0
 667 036c 033584FB 		ld	a0,-72(s0)
 668 0370 97000000 		call	_Z9kPrintIntm@plt
 668      E7800000 
 669              	.LVL57:
 168:src/interruptRoutine.cpp ****                 break;
 670              		.loc 1 168 17 is_stmt 1
 671 0378 6F000006 		j	.L23
 672              	.LVL58:
 673              	.L5:
 169:src/interruptRoutine.cpp ****             default:
 674              		.loc 1 169 13
 170:src/interruptRoutine.cpp ****                 printString("\nNepostojeci op code: ");
 675              		.loc 1 170 17
 676              		.loc 1 170 28 is_stmt 0
 677 037c 17050000 		lla	a0,.LC0
 677      13050500 
 678 0384 97000000 		call	_Z11printStringPKc@plt
 678      E7800000 
 679              	.LVL59:
 171:src/interruptRoutine.cpp ****                 kPrintInt(a0);
 680              		.loc 1 171 17 is_stmt 1
 681              		.loc 1 171 26 is_stmt 0
 682 038c 033504FC 		ld	a0,-64(s0)
 683 0390 97000000 		call	_Z9kPrintIntm@plt
 683      E7800000 
 684              	.LVL60:
 172:src/interruptRoutine.cpp ****                 printString("\nscause: ");
 685              		.loc 1 172 17 is_stmt 1
 686              		.loc 1 172 28 is_stmt 0
 687 0398 17050000 		lla	a0,.LC1
 687      13050500 
 688 03a0 97000000 		call	_Z11printStringPKc@plt
 688      E7800000 
 689              	.LVL61:
 173:src/interruptRoutine.cpp ****                 kPrintInt(scause);
 690              		.loc 1 173 17 is_stmt 1
GAS LISTING /tmp/ccyBqyRg.s 			page 17


 691              		.loc 1 173 26 is_stmt 0
 692 03a8 033584FD 		ld	a0,-40(s0)
 693 03ac 97000000 		call	_Z9kPrintIntm@plt
 693      E7800000 
 694              	.LVL62:
 174:src/interruptRoutine.cpp ****                 printString("\nsepc: ");
 695              		.loc 1 174 17 is_stmt 1
 696              		.loc 1 174 28 is_stmt 0
 697 03b4 17050000 		lla	a0,.LC2
 697      13050500 
 698 03bc 97000000 		call	_Z11printStringPKc@plt
 698      E7800000 
 699              	.LVL63:
 175:src/interruptRoutine.cpp ****                 kPrintInt(sepc);
 700              		.loc 1 175 17 is_stmt 1
 701              		.loc 1 175 26 is_stmt 0
 702 03c4 033504FD 		ld	a0,-48(s0)
 703 03c8 97000000 		call	_Z9kPrintIntm@plt
 703      E7800000 
 704              	.LVL64:
 176:src/interruptRoutine.cpp ****                 break;
 705              		.loc 1 176 17 is_stmt 1
 706 03d0 6F008000 		j	.L23
 707              	.L40:
 134:src/interruptRoutine.cpp ****             case 0x41:
 708              		.loc 1 134 17 is_stmt 0
 709 03d4 13000000 		nop
 710              	.L23:
 177:src/interruptRoutine.cpp ****         }
 178:src/interruptRoutine.cpp ****         //sepc pokazuje na ecall instrukciju, treba preci na sledecu instrukciju
 179:src/interruptRoutine.cpp ****         sepc += 4;
 711              		.loc 1 179 9 is_stmt 1
 712              		.loc 1 179 14 is_stmt 0
 713 03d8 833704FD 		ld	a5,-48(s0)
 714 03dc 93874700 		addi	a5,a5,4
 715 03e0 2338F4FC 		sd	a5,-48(s0)
 716              	.LVL65:
 180:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 717              		.loc 1 180 9 is_stmt 1
 718              		.loc 1 180 66 is_stmt 0
 719 03e4 833704FD 		ld	a5,-48(s0)
 720              	#APP
 721              	# 180 "src/interruptRoutine.cpp" 1
 181              	        __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 722              		csrw sepc, a5
 723              	# 0 "" 2
 724              		.loc 1 181 9 is_stmt 1
 725              		.loc 1 181 71 is_stmt 0
 726              	#NO_APP
 727 03ec 833784FC 		ld	a5,-56(s0)
 728              	.LVL66:
 729              	#APP
 730              	# 181 "src/interruptRoutine.cpp" 1
 182              	    } else if (scause == 0x8000000000000009) {
 731              		csrw sstatus, a5
 732              	# 0 "" 2
 733              	#NO_APP
GAS LISTING /tmp/ccyBqyRg.s 			page 18


 734              	.LBE2:
 183:src/interruptRoutine.cpp ****         //spoljasnji hardverski prekid (od konzole)
 184:src/interruptRoutine.cpp ****         uint64 irq = plic_claim();
 185:src/interruptRoutine.cpp ****         if (irq == CONSOLE_IRQ) {
 186:src/interruptRoutine.cpp ****             if (*KConsole::sr & CONSOLE_RX_STATUS_BIT) {
 187:src/interruptRoutine.cpp ****                 KConsole::placeInInput(*KConsole::dr);
 188:src/interruptRoutine.cpp ****             }
 189:src/interruptRoutine.cpp ****             //printString("\nobradjen prekid konzole\n");
 190:src/interruptRoutine.cpp ****         } else {
 191:src/interruptRoutine.cpp ****             printString("Neki drugi prekid\n");
 192:src/interruptRoutine.cpp ****         }
 193:src/interruptRoutine.cpp ****         plic_complete(irq);
 194:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 195:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 196:src/interruptRoutine.cpp ****         Riscv::mc_sip(Riscv::SIP_SEIP);
 197:src/interruptRoutine.cpp ****     } else if (scause == 0x8000000000000001) {
 198:src/interruptRoutine.cpp ****         //prekid od tajmera
 199:src/interruptRoutine.cpp ****         //printString("\nPrekid od tajmera\n");
 200:src/interruptRoutine.cpp ****         Scheduler::wake();
 201:src/interruptRoutine.cpp ****         TCB::runningTimeSlice++;
 202:src/interruptRoutine.cpp ****         if (TCB::runningTimeSlice >= TCB::running->getTimeSlice()) {
 203:src/interruptRoutine.cpp ****             //printString("\nMenjam kontekst\n");
 204:src/interruptRoutine.cpp ****             //TCB::yield();
 205:src/interruptRoutine.cpp ****             TCB::dispatch();
 206:src/interruptRoutine.cpp ****             //TCB::runningTimeSlice = 0;
 207:src/interruptRoutine.cpp ****         }
 208:src/interruptRoutine.cpp **** 
 209:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 210:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 211:src/interruptRoutine.cpp ****         Riscv::mc_sip(Riscv::SIP_SSIP);
 212:src/interruptRoutine.cpp ****     } else {
 213:src/interruptRoutine.cpp ****         printString("\nGreska u prekidnoj rutini\n");
 214:src/interruptRoutine.cpp ****         printString("scause: ");
 215:src/interruptRoutine.cpp ****         kPrintInt(scause);
 216:src/interruptRoutine.cpp ****         printString("\nsepc: ");
 217:src/interruptRoutine.cpp ****         kPrintInt(sepc);
 218:src/interruptRoutine.cpp ****     }
 219:src/interruptRoutine.cpp **** }
 735              		.loc 1 219 1
 736 03f4 6F000019 		j	.L41
 737              	.LVL67:
 738              	.L3:
 739              	.LBB10:
 740              	.LBB3:
 182:src/interruptRoutine.cpp ****         //spoljasnji hardverski prekid (od konzole)
 741              		.loc 1 182 12 is_stmt 1
 742              	.LBB4:
 743 03f8 033784FD 		ld	a4,-40(s0)
 744              	.LVL68:
 745 03fc 9307F0FF 		li	a5,-1
 746 0400 9397F703 		slli	a5,a5,63
 747 0404 93879700 		addi	a5,a5,9
 748 0408 631EF708 		bne	a4,a5,.L35
 749              	.LBB5:
 184:src/interruptRoutine.cpp ****         if (irq == CONSOLE_IRQ) {
 750              		.loc 1 184 9
 184:src/interruptRoutine.cpp ****         if (irq == CONSOLE_IRQ) {
GAS LISTING /tmp/ccyBqyRg.s 			page 19


 751              		.loc 1 184 32 is_stmt 0
 752 040c 97000000 		call	plic_claim@plt
 752      E7800000 
 753              	.LVL69:
 754 0414 93070500 		mv	a5,a0
 184:src/interruptRoutine.cpp ****         if (irq == CONSOLE_IRQ) {
 755              		.loc 1 184 33
 756 0418 2330F4F8 		sd	a5,-128(s0)
 757              	.LVL70:
 185:src/interruptRoutine.cpp ****             if (*KConsole::sr & CONSOLE_RX_STATUS_BIT) {
 758              		.loc 1 185 9 is_stmt 1
 759 041c 033704F8 		ld	a4,-128(s0)
 760 0420 9307A000 		li	a5,10
 761 0424 631EF702 		bne	a4,a5,.L36
 186:src/interruptRoutine.cpp ****                 KConsole::placeInInput(*KConsole::dr);
 762              		.loc 1 186 13
 186:src/interruptRoutine.cpp ****                 KConsole::placeInInput(*KConsole::dr);
 763              		.loc 1 186 17 is_stmt 0
 764 0428 97070000 		la	a5,_ZN8KConsole2srE
 764      83B70700 
 765 0430 83B70700 		ld	a5,0(a5)
 766 0434 83C70700 		lbu	a5,0(a5)
 186:src/interruptRoutine.cpp ****                 KConsole::placeInInput(*KConsole::dr);
 767              		.loc 1 186 31
 768 0438 93F71700 		andi	a5,a5,1
 186:src/interruptRoutine.cpp ****                 KConsole::placeInInput(*KConsole::dr);
 769              		.loc 1 186 13
 770 043c 638A0702 		beqz	a5,.L37
 187:src/interruptRoutine.cpp ****             }
 771              		.loc 1 187 17 is_stmt 1
 187:src/interruptRoutine.cpp ****             }
 772              		.loc 1 187 39 is_stmt 0
 773 0440 97070000 		la	a5,_ZN8KConsole2drE
 773      83B70700 
 774 0448 83B70700 		ld	a5,0(a5)
 775 044c 83C70700 		lbu	a5,0(a5)
 776 0450 13850700 		mv	a0,a5
 777              	.LVL71:
 778 0454 97000000 		call	_ZN8KConsole12placeInInputEc@plt
 778      E7800000 
 779              	.LVL72:
 780 045c 6F004001 		j	.L37
 781              	.LVL73:
 782              	.L36:
 191:src/interruptRoutine.cpp ****         }
 783              		.loc 1 191 13 is_stmt 1
 191:src/interruptRoutine.cpp ****         }
 784              		.loc 1 191 24 is_stmt 0
 785 0460 17050000 		lla	a0,.LC3
 785      13050500 
 786              	.LVL74:
 787 0468 97000000 		call	_Z11printStringPKc@plt
 787      E7800000 
 788              	.LVL75:
 789              	.L37:
 193:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 790              		.loc 1 193 9 is_stmt 1
GAS LISTING /tmp/ccyBqyRg.s 			page 20


 193:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 791              		.loc 1 193 22 is_stmt 0
 792 0470 833704F8 		ld	a5,-128(s0)
 793 0474 9B870700 		sext.w	a5,a5
 794 0478 13850700 		mv	a0,a5
 795 047c 97000000 		call	plic_complete@plt
 795      E7800000 
 796              	.LVL76:
 194:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 797              		.loc 1 194 9 is_stmt 1
 194:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 798              		.loc 1 194 66 is_stmt 0
 799 0484 833704FD 		ld	a5,-48(s0)
 800              	#APP
 801              	# 194 "src/interruptRoutine.cpp" 1
 195:src/interruptRoutine.cpp ****         Riscv::mc_sip(Riscv::SIP_SEIP);
 802              		csrw sepc, a5
 803              	# 0 "" 2
 804              		.loc 1 195 9 is_stmt 1
 195:src/interruptRoutine.cpp ****         Riscv::mc_sip(Riscv::SIP_SEIP);
 805              		.loc 1 195 71 is_stmt 0
 806              	#NO_APP
 807 048c 833784FC 		ld	a5,-56(s0)
 808              	#APP
 809              	# 195 "src/interruptRoutine.cpp" 1
 196:src/interruptRoutine.cpp ****     } else if (scause == 0x8000000000000001) {
 810              		csrw sstatus, a5
 811              	# 0 "" 2
 812              		.loc 1 196 9 is_stmt 1
 196:src/interruptRoutine.cpp ****     } else if (scause == 0x8000000000000001) {
 813              		.loc 1 196 22 is_stmt 0
 814              	#NO_APP
 815 0494 13050020 		li	a0,512
 816 0498 97000000 		call	_ZN5Riscv6mc_sipEm
 816      E7800000 
 817              	.LVL77:
 818              	.LBE5:
 819              	.LBE4:
 820              	.LBE3:
 821              	.LBE10:
 822              		.loc 1 219 1
 823 04a0 6F00400E 		j	.L41
 824              	.LVL78:
 825              	.L35:
 826              	.LBB11:
 827              	.LBB8:
 828              	.LBB6:
 197:src/interruptRoutine.cpp ****         //prekid od tajmera
 829              		.loc 1 197 12 is_stmt 1
 830 04a4 033784FD 		ld	a4,-40(s0)
 831 04a8 9307F0FF 		li	a5,-1
 832 04ac 9397F703 		slli	a5,a5,63
 833 04b0 93871700 		addi	a5,a5,1
 834 04b4 6314F708 		bne	a4,a5,.L38
 200:src/interruptRoutine.cpp ****         TCB::runningTimeSlice++;
 835              		.loc 1 200 9
 200:src/interruptRoutine.cpp ****         TCB::runningTimeSlice++;
GAS LISTING /tmp/ccyBqyRg.s 			page 21


 836              		.loc 1 200 24 is_stmt 0
 837 04b8 97000000 		call	_ZN9Scheduler4wakeEv@plt
 837      E7800000 
 838              	.LVL79:
 201:src/interruptRoutine.cpp ****         if (TCB::runningTimeSlice >= TCB::running->getTimeSlice()) {
 839              		.loc 1 201 9 is_stmt 1
 201:src/interruptRoutine.cpp ****         if (TCB::runningTimeSlice >= TCB::running->getTimeSlice()) {
 840              		.loc 1 201 30 is_stmt 0
 841 04c0 97070000 		la	a5,_ZN3TCB16runningTimeSliceE
 841      83B70700 
 842 04c8 83B70700 		ld	a5,0(a5)
 843 04cc 13871700 		addi	a4,a5,1
 844 04d0 97070000 		la	a5,_ZN3TCB16runningTimeSliceE
 844      83B70700 
 845 04d8 23B0E700 		sd	a4,0(a5)
 202:src/interruptRoutine.cpp ****             //printString("\nMenjam kontekst\n");
 846              		.loc 1 202 9 is_stmt 1
 202:src/interruptRoutine.cpp ****             //printString("\nMenjam kontekst\n");
 847              		.loc 1 202 64 is_stmt 0
 848 04dc 97070000 		la	a5,_ZN3TCB7runningE
 848      83B70700 
 849 04e4 83B70700 		ld	a5,0(a5)
 850 04e8 13850700 		mv	a0,a5
 851 04ec 97000000 		call	_ZN3TCB12getTimeSliceEv
 851      E7800000 
 852              	.LVL80:
 853 04f4 13070500 		mv	a4,a0
 202:src/interruptRoutine.cpp ****             //printString("\nMenjam kontekst\n");
 854              		.loc 1 202 35
 855 04f8 97070000 		la	a5,_ZN3TCB16runningTimeSliceE
 855      83B70700 
 856 0500 83B70700 		ld	a5,0(a5)
 857 0504 B3B7E700 		sgtu	a5,a4,a5
 858 0508 93C71700 		xori	a5,a5,1
 859 050c 93F7F70F 		andi	a5,a5,0xff
 202:src/interruptRoutine.cpp ****             //printString("\nMenjam kontekst\n");
 860              		.loc 1 202 9
 861 0510 63860700 		beqz	a5,.L39
 205:src/interruptRoutine.cpp ****             //TCB::runningTimeSlice = 0;
 862              		.loc 1 205 13 is_stmt 1
 205:src/interruptRoutine.cpp ****             //TCB::runningTimeSlice = 0;
 863              		.loc 1 205 26 is_stmt 0
 864 0514 97000000 		call	_ZN3TCB8dispatchEv@plt
 864      E7800000 
 865              	.LVL81:
 866              	.L39:
 209:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 867              		.loc 1 209 9 is_stmt 1
 209:src/interruptRoutine.cpp ****         __asm__ volatile("csrw sstatus, %[stat]": :[stat]"r"(sstatus));
 868              		.loc 1 209 66 is_stmt 0
 869 051c 833704FD 		ld	a5,-48(s0)
 870              	#APP
 871              	# 209 "src/interruptRoutine.cpp" 1
 210:src/interruptRoutine.cpp ****         Riscv::mc_sip(Riscv::SIP_SSIP);
 872              		csrw sepc, a5
 873              	# 0 "" 2
 874              		.loc 1 210 9 is_stmt 1
GAS LISTING /tmp/ccyBqyRg.s 			page 22


 210:src/interruptRoutine.cpp ****         Riscv::mc_sip(Riscv::SIP_SSIP);
 875              		.loc 1 210 71 is_stmt 0
 876              	#NO_APP
 877 0524 833784FC 		ld	a5,-56(s0)
 878              	#APP
 879              	# 210 "src/interruptRoutine.cpp" 1
 211:src/interruptRoutine.cpp ****     } else {
 880              		csrw sstatus, a5
 881              	# 0 "" 2
 882              		.loc 1 211 9 is_stmt 1
 211:src/interruptRoutine.cpp ****     } else {
 883              		.loc 1 211 22 is_stmt 0
 884              	#NO_APP
 885 052c 13052000 		li	a0,2
 886 0530 97000000 		call	_ZN5Riscv6mc_sipEm
 886      E7800000 
 887              	.LVL82:
 888              	.LBE6:
 889              	.LBE8:
 890              	.LBE11:
 891              		.loc 1 219 1
 892 0538 6F00C004 		j	.L41
 893              	.LVL83:
 894              	.L38:
 895              	.LBB12:
 896              	.LBB9:
 897              	.LBB7:
 213:src/interruptRoutine.cpp ****         printString("scause: ");
 898              		.loc 1 213 9 is_stmt 1
 213:src/interruptRoutine.cpp ****         printString("scause: ");
 899              		.loc 1 213 20 is_stmt 0
 900 053c 17050000 		lla	a0,.LC4
 900      13050500 
 901 0544 97000000 		call	_Z11printStringPKc@plt
 901      E7800000 
 902              	.LVL84:
 214:src/interruptRoutine.cpp ****         kPrintInt(scause);
 903              		.loc 1 214 9 is_stmt 1
 214:src/interruptRoutine.cpp ****         kPrintInt(scause);
 904              		.loc 1 214 20 is_stmt 0
 905 054c 17050000 		lla	a0,.LC5
 905      13050500 
 906 0554 97000000 		call	_Z11printStringPKc@plt
 906      E7800000 
 907              	.LVL85:
 215:src/interruptRoutine.cpp ****         printString("\nsepc: ");
 908              		.loc 1 215 9 is_stmt 1
 215:src/interruptRoutine.cpp ****         printString("\nsepc: ");
 909              		.loc 1 215 18 is_stmt 0
 910 055c 033584FD 		ld	a0,-40(s0)
 911 0560 97000000 		call	_Z9kPrintIntm@plt
 911      E7800000 
 912              	.LVL86:
 216:src/interruptRoutine.cpp ****         kPrintInt(sepc);
 913              		.loc 1 216 9 is_stmt 1
 216:src/interruptRoutine.cpp ****         kPrintInt(sepc);
 914              		.loc 1 216 20 is_stmt 0
GAS LISTING /tmp/ccyBqyRg.s 			page 23


 915 0568 17050000 		lla	a0,.LC2
 915      13050500 
 916 0570 97000000 		call	_Z11printStringPKc@plt
 916      E7800000 
 917              	.LVL87:
 217:src/interruptRoutine.cpp ****     }
 918              		.loc 1 217 9 is_stmt 1
 217:src/interruptRoutine.cpp ****     }
 919              		.loc 1 217 18 is_stmt 0
 920 0578 033504FD 		ld	a0,-48(s0)
 921 057c 97000000 		call	_Z9kPrintIntm@plt
 921      E7800000 
 922              	.LVL88:
 923              	.L41:
 924              	.LBE7:
 925              	.LBE9:
 926              	.LBE12:
 927              		.loc 1 219 1
 928 0584 13000000 		nop
 929 0588 83308107 		ld	ra,120(sp)
 930              		.cfi_restore 1
 931 058c 03340107 		ld	s0,112(sp)
 932              		.cfi_restore 8
 933              		.cfi_def_cfa 2, 128
 934              	.LVL89:
 935 0590 83348106 		ld	s1,104(sp)
 936              		.cfi_restore 9
 937 0594 13010108 		addi	sp,sp,128
 938              		.cfi_def_cfa_offset 0
 939              	.LVL90:
 940 0598 67800000 		jr	ra
 941              		.cfi_endproc
 942              	.LFE50:
 944              		.section	.text._ZN5Riscv6mc_sipEm,"axG",@progbits,_ZN5Riscv6mc_sipEm,comdat
 945              		.align	2
 946              		.weak	_ZN5Riscv6mc_sipEm
 948              	_ZN5Riscv6mc_sipEm:
 949              	.LFB10:
 950              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 5/17/23.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJEKAT2023_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJEKAT2023_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** class Riscv {
  11:src/../h/Riscv.hpp **** public:
  12:src/../h/Riscv.hpp **** 
  13:src/../h/Riscv.hpp **** 	static void popSppSpie();
  14:src/../h/Riscv.hpp **** 
  15:src/../h/Riscv.hpp **** 	//stavljanje registara x3-x31 na stek
  16:src/../h/Riscv.hpp **** 	static void pushRegisters();    //implementacija u asm
  17:src/../h/Riscv.hpp **** 
  18:src/../h/Riscv.hpp **** 	//skidanje registara x3-x31 sa steka
GAS LISTING /tmp/ccyBqyRg.s 			page 24


  19:src/../h/Riscv.hpp **** 	static void popRegisters();     //implementacija u asm
  20:src/../h/Riscv.hpp **** 
  21:src/../h/Riscv.hpp **** 	//read scause
  22:src/../h/Riscv.hpp **** 	static uint64 r_scause();
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp **** 	//write scause
  25:src/../h/Riscv.hpp **** 	static void w_scause(uint64 scause);
  26:src/../h/Riscv.hpp **** 
  27:src/../h/Riscv.hpp **** 	//read sepc
  28:src/../h/Riscv.hpp **** 	static uint64 r_sepc();
  29:src/../h/Riscv.hpp **** 
  30:src/../h/Riscv.hpp **** 	//write sepc
  31:src/../h/Riscv.hpp **** 	static void w_sepc(uint64 sepc);
  32:src/../h/Riscv.hpp **** 
  33:src/../h/Riscv.hpp **** 	//read stvec
  34:src/../h/Riscv.hpp **** 	static uint64 r_stvec();
  35:src/../h/Riscv.hpp **** 
  36:src/../h/Riscv.hpp **** 	//write stvec
  37:src/../h/Riscv.hpp **** 	static void w_stvec(uint64 stvec);
  38:src/../h/Riscv.hpp **** 
  39:src/../h/Riscv.hpp **** 	enum BitMaskSip {
  40:src/../h/Riscv.hpp **** 		//postoji zahtev za softverski prekid
  41:src/../h/Riscv.hpp **** 		SIP_SSIP = (1 << 1),
  42:src/../h/Riscv.hpp **** 		//postoji prekid od tajmera
  43:src/../h/Riscv.hpp **** 		SIP_STIP = (1 << 5),
  44:src/../h/Riscv.hpp **** 		//postoji zahtev za spoljasnji hardverski prekid
  45:src/../h/Riscv.hpp **** 		SIP_SEIP = (1 << 9)
  46:src/../h/Riscv.hpp **** 	};
  47:src/../h/Riscv.hpp **** 
  48:src/../h/Riscv.hpp **** 	//mask set sip
  49:src/../h/Riscv.hpp **** 	static void ms_sip(uint64 mask);
  50:src/../h/Riscv.hpp **** 
  51:src/../h/Riscv.hpp **** 	//mask clear sip
  52:src/../h/Riscv.hpp **** 	static void mc_sip(uint64 mask);
  53:src/../h/Riscv.hpp **** 
  54:src/../h/Riscv.hpp **** 	//read sip
  55:src/../h/Riscv.hpp **** 	static uint64 r_sip();
  56:src/../h/Riscv.hpp **** 
  57:src/../h/Riscv.hpp **** 	//write sip
  58:src/../h/Riscv.hpp **** 	static void w_sip(uint64 sip);
  59:src/../h/Riscv.hpp **** 
  60:src/../h/Riscv.hpp **** 	//kada se pozove sret, SIE dobija vrednost SPIE, SPIE se postavlja na 1,
  61:src/../h/Riscv.hpp **** 	//rezim se postavlja na osnovu SPP bita, SPP se postavlja na 0
  62:src/../h/Riscv.hpp **** 	enum BitMaskSstatus {
  63:src/../h/Riscv.hpp **** 		//1 - dozvoljeni prekidi; 0- nedozvoljeni prekidi; igonrise se u korisnickom rezimu
  64:src/../h/Riscv.hpp **** 		SSTATUS_SIE = (1 << 1),
  65:src/../h/Riscv.hpp **** 		//prethodna vrednost bita SIE
  66:src/../h/Riscv.hpp **** 		SSTATUS_SPIE = (1 << 5),
  67:src/../h/Riscv.hpp **** 		//iz kog rezima se desio skok; 0 - iz korisnickog; 1 - iz sistemskog
  68:src/../h/Riscv.hpp **** 		SSTATUS_SPP = (1 << 8)
  69:src/../h/Riscv.hpp **** 	};
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp **** 	//mask set sstatus
  72:src/../h/Riscv.hpp **** 	static void ms_sstatus(uint64 mask);
  73:src/../h/Riscv.hpp **** 
  74:src/../h/Riscv.hpp **** 	//mask clear sstatus
  75:src/../h/Riscv.hpp **** 	static void mc_sstatus(uint64 mask);
GAS LISTING /tmp/ccyBqyRg.s 			page 25


  76:src/../h/Riscv.hpp **** 
  77:src/../h/Riscv.hpp **** 	//read sstatus
  78:src/../h/Riscv.hpp **** 	static uint64 r_sstatus();
  79:src/../h/Riscv.hpp **** 
  80:src/../h/Riscv.hpp **** 	//write sstatus
  81:src/../h/Riscv.hpp **** 	static void w_sstatus(uint64 sstatus);
  82:src/../h/Riscv.hpp **** 
  83:src/../h/Riscv.hpp **** 	//upisuje kod sistemskog poziva u registar a0
  84:src/../h/Riscv.hpp **** 	static void loadOpCode(uint64 opCode);
  85:src/../h/Riscv.hpp **** 
  86:src/../h/Riscv.hpp **** };
  87:src/../h/Riscv.hpp **** 
  88:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause() {
  89:src/../h/Riscv.hpp **** 	uint64 volatile scause;
  90:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[scause], scause": [scause] "=r"(scause));
  91:src/../h/Riscv.hpp **** 	return scause;
  92:src/../h/Riscv.hpp **** }
  93:src/../h/Riscv.hpp **** 
  94:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
  95:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw scause, %[scause]": :[scause] "r"(scause));
  96:src/../h/Riscv.hpp **** }
  97:src/../h/Riscv.hpp **** 
  98:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc() {
  99:src/../h/Riscv.hpp **** 	uint64 volatile sepc;
 100:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[sepc], sepc": [sepc] "=r"(sepc));
 101:src/../h/Riscv.hpp **** 	return sepc;
 102:src/../h/Riscv.hpp **** }
 103:src/../h/Riscv.hpp **** 
 104:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
 105:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 106:src/../h/Riscv.hpp **** }
 107:src/../h/Riscv.hpp **** 
 108:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec() {
 109:src/../h/Riscv.hpp **** 	uint64 volatile stvec;
 110:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[stvec], stvec": [stvec] "=r"(stvec));
 111:src/../h/Riscv.hpp **** 	return stvec;
 112:src/../h/Riscv.hpp **** }
 113:src/../h/Riscv.hpp **** 
 114:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 115:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw stvec, %[stvec]": :[stvec] "r"(stvec));
 116:src/../h/Riscv.hpp **** }
 117:src/../h/Riscv.hpp **** 
 118:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 119:src/../h/Riscv.hpp **** 	__asm__ volatile("csrs sip, %[mask]": :[mask] "r"(mask));
 120:src/../h/Riscv.hpp **** }
 121:src/../h/Riscv.hpp **** 
 122:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 951              		.loc 2 122 40 is_stmt 1
 952              		.cfi_startproc
 953              	.LVL91:
 954 0000 130101FF 		addi	sp,sp,-16
 955              		.cfi_def_cfa_offset 16
 956 0004 23348100 		sd	s0,8(sp)
 957              		.cfi_offset 8, -8
 958 0008 13040101 		addi	s0,sp,16
 959              		.cfi_def_cfa 8, 0
 123:src/../h/Riscv.hpp **** 	__asm__ volatile("csrc sip, %[mask]": :[mask] "r"(mask));
GAS LISTING /tmp/ccyBqyRg.s 			page 26


 960              		.loc 2 123 2
 961              		.loc 2 123 58 is_stmt 0
 962              	#APP
 963              	# 123 "src/../h/Riscv.hpp" 1
 124              	}
 964              		csrc sip, a0
 965              	# 0 "" 2
 966              		.loc 2 124 1
 967              	#NO_APP
 968 0010 03348100 		ld	s0,8(sp)
 969              		.cfi_restore 8
 970              		.cfi_def_cfa 2, 16
 971 0014 13010101 		addi	sp,sp,16
 972              		.cfi_def_cfa_offset 0
 973 0018 67800000 		jr	ra
 974              		.cfi_endproc
 975              	.LFE10:
 977              		.section	.text._ZN3TCB9setStatusENS_12ThreadStatusE,"axG",@progbits,_ZN3TCB9setStatusENS_12ThreadS
 978              		.align	2
 979              		.weak	_ZN3TCB9setStatusENS_12ThreadStatusE
 981              	_ZN3TCB9setStatusENS_12ThreadStatusE:
 982              	.LFB32:
 983              		.file 3 "src/../h/TCB.hpp"
   1:src/../h/TCB.hpp **** //
   2:src/../h/TCB.hpp **** // Created by os on 5/23/23.
   3:src/../h/TCB.hpp **** //
   4:src/../h/TCB.hpp **** 
   5:src/../h/TCB.hpp **** #ifndef PROJEKAT2023_TCB_HPP
   6:src/../h/TCB.hpp **** #define PROJEKAT2023_TCB_HPP
   7:src/../h/TCB.hpp **** 
   8:src/../h/TCB.hpp **** #include "../lib/hw.h"
   9:src/../h/TCB.hpp **** #include "../h/ThreadQueue.hpp"
  10:src/../h/TCB.hpp **** 
  11:src/../h/TCB.hpp **** class TCB {
  12:src/../h/TCB.hpp **** public:
  13:src/../h/TCB.hpp ****     friend class Scheduler;
  14:src/../h/TCB.hpp **** 
  15:src/../h/TCB.hpp ****     using Body = void (*)(void*);
  16:src/../h/TCB.hpp **** 
  17:src/../h/TCB.hpp ****     enum ThreadStatus {
  18:src/../h/TCB.hpp ****         CREATED, ACTIVE, BLOCKED, JOINING, SLEEPING, FINISHED
  19:src/../h/TCB.hpp ****     };
  20:src/../h/TCB.hpp **** 
  21:src/../h/TCB.hpp ****     void setStatus(ThreadStatus stat) { this->status = stat; }
 984              		.loc 3 21 10 is_stmt 1
 985              		.cfi_startproc
 986              	.LVL92:
 987 0000 130101FF 		addi	sp,sp,-16
 988              		.cfi_def_cfa_offset 16
 989 0004 23348100 		sd	s0,8(sp)
 990              		.cfi_offset 8, -8
 991 0008 13040101 		addi	s0,sp,16
 992              		.cfi_def_cfa 8, 0
 993              		.loc 3 21 41
 994              		.loc 3 21 54 is_stmt 0
 995 000c 232CB504 		sw	a1,88(a0)
 996              		.loc 3 21 62
GAS LISTING /tmp/ccyBqyRg.s 			page 27


 997 0010 03348100 		ld	s0,8(sp)
 998              		.cfi_restore 8
 999              		.cfi_def_cfa 2, 16
 1000 0014 13010101 		addi	sp,sp,16
 1001              		.cfi_def_cfa_offset 0
 1002 0018 67800000 		jr	ra
 1003              		.cfi_endproc
 1004              	.LFE32:
 1006              		.section	.text._ZN3TCB12getTimeSliceEv,"axG",@progbits,_ZN3TCB12getTimeSliceEv,comdat
 1007              		.align	2
 1008              		.weak	_ZN3TCB12getTimeSliceEv
 1010              	_ZN3TCB12getTimeSliceEv:
 1011              	.LFB34:
  22:src/../h/TCB.hpp **** 
  23:src/../h/TCB.hpp ****     ThreadStatus getStatus() { return this->status; }
  24:src/../h/TCB.hpp **** 
  25:src/../h/TCB.hpp ****     static TCB* createThread(Body function, void* args, uint64* stack);
  26:src/../h/TCB.hpp **** 
  27:src/../h/TCB.hpp ****     static void start(TCB* newTcb);
  28:src/../h/TCB.hpp **** 
  29:src/../h/TCB.hpp **** //    bool isFinished() { return finished; }
  30:src/../h/TCB.hpp **** //
  31:src/../h/TCB.hpp **** //    void setFinished(bool finish) { this->finished = finish; }
  32:src/../h/TCB.hpp **** //
  33:src/../h/TCB.hpp **** //    bool isBlocked() { return blocked; }
  34:src/../h/TCB.hpp **** //
  35:src/../h/TCB.hpp **** //    void setBlocked(bool block) { this->blocked = block; }
  36:src/../h/TCB.hpp **** 
  37:src/../h/TCB.hpp ****     uint64 getTimeSlice() { return timeSlice; }
 1012              		.loc 3 37 12 is_stmt 1
 1013              		.cfi_startproc
 1014              	.LVL93:
 1015 0000 130101FF 		addi	sp,sp,-16
 1016              		.cfi_def_cfa_offset 16
 1017 0004 23348100 		sd	s0,8(sp)
 1018              		.cfi_offset 8, -8
 1019 0008 13040101 		addi	s0,sp,16
 1020              		.cfi_def_cfa 8, 0
 1021              		.loc 3 37 29
 1022              		.loc 3 37 47 is_stmt 0
 1023 000c 03358502 		ld	a0,40(a0)
 1024              	.LVL94:
 1025 0010 03348100 		ld	s0,8(sp)
 1026              		.cfi_restore 8
 1027              		.cfi_def_cfa 2, 16
 1028 0014 13010101 		addi	sp,sp,16
 1029              		.cfi_def_cfa_offset 0
 1030 0018 67800000 		jr	ra
 1031              		.cfi_endproc
 1032              	.LFE34:
 1034              		.text
 1035              	.Letext0:
 1036              		.file 4 "src/../lib/hw.h"
 1037              		.file 5 "src/../h/syscall_c.hpp"
 1038              		.file 6 "src/../h/KSem.hpp"
 1039              		.file 7 "src/../h/../h/ThreadQueue.hpp"
 1040              		.file 8 "src/../h/Scheduler.hpp"
GAS LISTING /tmp/ccyBqyRg.s 			page 28


 1041              		.file 9 "src/../h/KConsole.hpp"
 1042              		.file 10 "src/../h/KMemory.hpp"
 1043              		.file 11 "src/../h/../test/printing.hpp"
 1044              		.file 12 "src/../h/helper.hpp"
GAS LISTING /tmp/ccyBqyRg.s 			page 29


DEFINED SYMBOLS
                            *ABS*:0000000000000000 interruptRoutine.cpp
     /tmp/ccyBqyRg.s:29     .text:0000000000000000 interruptRoutine
     /tmp/ccyBqyRg.s:33     .text:0000000000000000 .L0 
     /tmp/ccyBqyRg.s:34     .text:0000000000000000 .L0 
     /tmp/ccyBqyRg.s:35     .text:0000000000000004 .L0 
     /tmp/ccyBqyRg.s:39     .text:0000000000000010 .L0 
     /tmp/ccyBqyRg.s:40     .text:0000000000000010 .L0 
     /tmp/ccyBqyRg.s:41     .text:0000000000000010 .L0 
     /tmp/ccyBqyRg.s:43     .text:0000000000000014 .L0 
     /tmp/ccyBqyRg.s:45     .text:0000000000000014 .L0 
     /tmp/ccyBqyRg.s:46     .text:0000000000000014 .L0 
src/interruptRoutine.cpp:24     .text:0000000000000014 .L0 
     /tmp/ccyBqyRg.s:55     .text:000000000000001c .L0 
src/interruptRoutine.cpp:25     .text:000000000000001c .L0 
     /tmp/ccyBqyRg.s:65     .text:0000000000000024 .L0 
src/interruptRoutine.cpp:26     .text:0000000000000024 .L0 
     /tmp/ccyBqyRg.s:75     .text:000000000000002c .L0 
     /tmp/ccyBqyRg.s:76     .text:000000000000002c .L0 
src/interruptRoutine.cpp:30     .text:000000000000002c .L0 
     /tmp/ccyBqyRg.s:86     .text:0000000000000034 .L0 
src/interruptRoutine.cpp:31     .text:0000000000000034 .L0 
     /tmp/ccyBqyRg.s:96     .text:000000000000003c .L0 
src/interruptRoutine.cpp:32     .text:000000000000003c .L0 
     /tmp/ccyBqyRg.s:106    .text:0000000000000044 .L0 
src/interruptRoutine.cpp:33     .text:0000000000000044 .L0 
     /tmp/ccyBqyRg.s:116    .text:000000000000004c .L0 
src/interruptRoutine.cpp:34     .text:000000000000004c .L0 
     /tmp/ccyBqyRg.s:126    .text:0000000000000054 .L0 
src/interruptRoutine.cpp:35     .text:0000000000000054 .L0 
     /tmp/ccyBqyRg.s:136    .text:000000000000005c .L0 
src/interruptRoutine.cpp:36     .text:000000000000005c .L0 
     /tmp/ccyBqyRg.s:146    .text:0000000000000064 .L0 
src/interruptRoutine.cpp:37     .text:0000000000000064 .L0 
     /tmp/ccyBqyRg.s:157    .text:000000000000006c .L0 
     /tmp/ccyBqyRg.s:161    .text:0000000000000078 .L0 
     /tmp/ccyBqyRg.s:166    .text:0000000000000084 .L0 
     /tmp/ccyBqyRg.s:274    .text:0000000000000110 .L0 
     /tmp/ccyBqyRg.s:275    .text:0000000000000110 .L0 
     /tmp/ccyBqyRg.s:276    .text:0000000000000110 .L0 
     /tmp/ccyBqyRg.s:280    .text:000000000000011c .L0 
src/interruptRoutine.cpp:47     .text:000000000000011c .L0 
     /tmp/ccyBqyRg.s:287    .text:0000000000000120 .L0 
     /tmp/ccyBqyRg.s:291    .text:0000000000000124 .L0 
     /tmp/ccyBqyRg.s:292    .text:0000000000000124 .L0 
     /tmp/ccyBqyRg.s:293    .text:0000000000000124 .L0 
     /tmp/ccyBqyRg.s:298    .text:0000000000000134 .L0 
src/interruptRoutine.cpp:54     .text:0000000000000134 .L0 
     /tmp/ccyBqyRg.s:305    .text:0000000000000138 .L0 
     /tmp/ccyBqyRg.s:309    .text:000000000000013c .L0 
     /tmp/ccyBqyRg.s:310    .text:000000000000013c .L0 
     /tmp/ccyBqyRg.s:311    .text:000000000000013c .L0 
     /tmp/ccyBqyRg.s:315    .text:0000000000000148 .L0 
     /tmp/ccyBqyRg.s:317    .text:000000000000014c .L0 
     /tmp/ccyBqyRg.s:324    .text:0000000000000164 .L0 
     /tmp/ccyBqyRg.s:326    .text:0000000000000168 .L0 
     /tmp/ccyBqyRg.s:327    .text:0000000000000168 .L0 
GAS LISTING /tmp/ccyBqyRg.s 			page 30


     /tmp/ccyBqyRg.s:329    .text:000000000000016c .L0 
     /tmp/ccyBqyRg.s:331    .text:0000000000000170 .L0 
     /tmp/ccyBqyRg.s:332    .text:0000000000000170 .L0 
     /tmp/ccyBqyRg.s:338    .text:0000000000000184 .L0 
     /tmp/ccyBqyRg.s:339    .text:0000000000000184 .L0 
     /tmp/ccyBqyRg.s:981    .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000000 _ZN3TCB9setStatusENS_12ThreadStatusE
     /tmp/ccyBqyRg.s:347    .text:000000000000019c .L0 
     /tmp/ccyBqyRg.s:348    .text:000000000000019c .L0 
     /tmp/ccyBqyRg.s:351    .text:00000000000001a4 .L0 
     /tmp/ccyBqyRg.s:353    .text:00000000000001a8 .L0 
src/interruptRoutine.cpp:68     .text:00000000000001a8 .L0 
     /tmp/ccyBqyRg.s:362    .text:00000000000001b0 .L0 
src/interruptRoutine.cpp:70     .text:00000000000001b0 .L0 
     /tmp/ccyBqyRg.s:370    .text:00000000000001b4 .L0 
src/interruptRoutine.cpp:72     .text:00000000000001b4 .L0 
     /tmp/ccyBqyRg.s:377    .text:00000000000001b8 .L0 
     /tmp/ccyBqyRg.s:381    .text:00000000000001bc .L0 
     /tmp/ccyBqyRg.s:382    .text:00000000000001bc .L0 
     /tmp/ccyBqyRg.s:383    .text:00000000000001bc .L0 
     /tmp/ccyBqyRg.s:390    .text:00000000000001d8 .L0 
     /tmp/ccyBqyRg.s:391    .text:00000000000001d8 .L0 
     /tmp/ccyBqyRg.s:394    .text:00000000000001e0 .L0 
     /tmp/ccyBqyRg.s:395    .text:00000000000001e0 .L0 
     /tmp/ccyBqyRg.s:398    .text:00000000000001e8 .L0 
     /tmp/ccyBqyRg.s:402    .text:00000000000001ec .L0 
     /tmp/ccyBqyRg.s:403    .text:00000000000001ec .L0 
     /tmp/ccyBqyRg.s:404    .text:00000000000001ec .L0 
     /tmp/ccyBqyRg.s:407    .text:00000000000001f4 .L0 
     /tmp/ccyBqyRg.s:411    .text:00000000000001f8 .L0 
     /tmp/ccyBqyRg.s:412    .text:00000000000001f8 .L0 
     /tmp/ccyBqyRg.s:413    .text:00000000000001f8 .L0 
     /tmp/ccyBqyRg.s:418    .text:0000000000000208 .L0 
     /tmp/ccyBqyRg.s:419    .text:0000000000000208 .L0 
     /tmp/ccyBqyRg.s:422    .text:0000000000000210 .L0 
     /tmp/ccyBqyRg.s:426    .text:0000000000000214 .L0 
     /tmp/ccyBqyRg.s:427    .text:0000000000000214 .L0 
     /tmp/ccyBqyRg.s:428    .text:0000000000000214 .L0 
     /tmp/ccyBqyRg.s:431    .text:000000000000021c .L0 
     /tmp/ccyBqyRg.s:433    .text:0000000000000220 .L0 
     /tmp/ccyBqyRg.s:438    .text:0000000000000230 .L0 
     /tmp/ccyBqyRg.s:440    .text:0000000000000234 .L0 
     /tmp/ccyBqyRg.s:441    .text:0000000000000234 .L0 
     /tmp/ccyBqyRg.s:444    .text:000000000000023c .L0 
     /tmp/ccyBqyRg.s:446    .text:0000000000000240 .L0 
src/interruptRoutine.cpp:97     .text:0000000000000240 .L0 
     /tmp/ccyBqyRg.s:455    .text:0000000000000248 .L0 
src/interruptRoutine.cpp:99     .text:0000000000000248 .L0 
     /tmp/ccyBqyRg.s:463    .text:000000000000024c .L0 
src/interruptRoutine.cpp:101    .text:000000000000024c .L0 
     /tmp/ccyBqyRg.s:470    .text:0000000000000250 .L0 
     /tmp/ccyBqyRg.s:474    .text:0000000000000254 .L0 
     /tmp/ccyBqyRg.s:475    .text:0000000000000254 .L0 
     /tmp/ccyBqyRg.s:476    .text:0000000000000254 .L0 
     /tmp/ccyBqyRg.s:481    .text:0000000000000264 .L0 
src/interruptRoutine.cpp:107    .text:0000000000000264 .L0 
     /tmp/ccyBqyRg.s:488    .text:0000000000000268 .L0 
     /tmp/ccyBqyRg.s:492    .text:000000000000026c .L0 
GAS LISTING /tmp/ccyBqyRg.s 			page 31


     /tmp/ccyBqyRg.s:493    .text:000000000000026c .L0 
     /tmp/ccyBqyRg.s:494    .text:000000000000026c .L0 
     /tmp/ccyBqyRg.s:499    .text:000000000000027c .L0 
src/interruptRoutine.cpp:113    .text:000000000000027c .L0 
     /tmp/ccyBqyRg.s:506    .text:0000000000000280 .L0 
     /tmp/ccyBqyRg.s:510    .text:0000000000000284 .L0 
     /tmp/ccyBqyRg.s:511    .text:0000000000000284 .L0 
     /tmp/ccyBqyRg.s:512    .text:0000000000000284 .L0 
     /tmp/ccyBqyRg.s:517    .text:0000000000000294 .L0 
src/interruptRoutine.cpp:119    .text:0000000000000294 .L0 
     /tmp/ccyBqyRg.s:524    .text:0000000000000298 .L0 
     /tmp/ccyBqyRg.s:528    .text:000000000000029c .L0 
     /tmp/ccyBqyRg.s:529    .text:000000000000029c .L0 
     /tmp/ccyBqyRg.s:532    .text:00000000000002a4 .L0 
src/interruptRoutine.cpp:125    .text:00000000000002a4 .L0 
     /tmp/ccyBqyRg.s:541    .text:00000000000002ac .L0 
src/interruptRoutine.cpp:127    .text:00000000000002ac .L0 
     /tmp/ccyBqyRg.s:549    .text:00000000000002b0 .L0 
src/interruptRoutine.cpp:129    .text:00000000000002b0 .L0 
     /tmp/ccyBqyRg.s:556    .text:00000000000002b4 .L0 
     /tmp/ccyBqyRg.s:559    .text:00000000000002bc .L0 
     /tmp/ccyBqyRg.s:560    .text:00000000000002bc .L0 
     /tmp/ccyBqyRg.s:567    .text:00000000000002d8 .L0 
     /tmp/ccyBqyRg.s:568    .text:00000000000002d8 .L0 
     /tmp/ccyBqyRg.s:571    .text:00000000000002e0 .L0 
     /tmp/ccyBqyRg.s:575    .text:00000000000002e4 .L0 
     /tmp/ccyBqyRg.s:576    .text:00000000000002e4 .L0 
     /tmp/ccyBqyRg.s:577    .text:00000000000002e4 .L0 
     /tmp/ccyBqyRg.s:580    .text:00000000000002ec .L0 
src/interruptRoutine.cpp:138    .text:00000000000002ec .L0 
     /tmp/ccyBqyRg.s:587    .text:00000000000002f0 .L0 
     /tmp/ccyBqyRg.s:591    .text:00000000000002f4 .L0 
     /tmp/ccyBqyRg.s:592    .text:00000000000002f4 .L0 
     /tmp/ccyBqyRg.s:593    .text:00000000000002f4 .L0 
     /tmp/ccyBqyRg.s:599    .text:0000000000000308 .L0 
     /tmp/ccyBqyRg.s:603    .text:000000000000030c .L0 
     /tmp/ccyBqyRg.s:604    .text:000000000000030c .L0 
     /tmp/ccyBqyRg.s:605    .text:000000000000030c .L0 
     /tmp/ccyBqyRg.s:609    .text:0000000000000318 .L0 
     /tmp/ccyBqyRg.s:611    .text:000000000000031c .L0 
     /tmp/ccyBqyRg.s:618    .text:0000000000000334 .L0 
     /tmp/ccyBqyRg.s:620    .text:0000000000000338 .L0 
     /tmp/ccyBqyRg.s:621    .text:0000000000000338 .L0 
     /tmp/ccyBqyRg.s:624    .text:0000000000000340 .L0 
     /tmp/ccyBqyRg.s:626    .text:0000000000000344 .L0 
src/interruptRoutine.cpp:153    .text:0000000000000344 .L0 
     /tmp/ccyBqyRg.s:635    .text:000000000000034c .L0 
src/interruptRoutine.cpp:155    .text:000000000000034c .L0 
     /tmp/ccyBqyRg.s:643    .text:0000000000000350 .L0 
src/interruptRoutine.cpp:157    .text:0000000000000350 .L0 
     /tmp/ccyBqyRg.s:650    .text:0000000000000354 .L0 
     /tmp/ccyBqyRg.s:654    .text:0000000000000358 .L0 
     /tmp/ccyBqyRg.s:655    .text:0000000000000358 .L0 
     /tmp/ccyBqyRg.s:656    .text:0000000000000358 .L0 
     /tmp/ccyBqyRg.s:661    .text:0000000000000368 .L0 
     /tmp/ccyBqyRg.s:665    .text:000000000000036c .L0 
     /tmp/ccyBqyRg.s:666    .text:000000000000036c .L0 
GAS LISTING /tmp/ccyBqyRg.s 			page 32


     /tmp/ccyBqyRg.s:667    .text:000000000000036c .L0 
     /tmp/ccyBqyRg.s:671    .text:0000000000000378 .L0 
     /tmp/ccyBqyRg.s:675    .text:000000000000037c .L0 
     /tmp/ccyBqyRg.s:676    .text:000000000000037c .L0 
     /tmp/ccyBqyRg.s:677    .text:000000000000037c .L0 
     /tmp/ccyBqyRg.s:681    .text:000000000000038c .L0 
     /tmp/ccyBqyRg.s:682    .text:000000000000038c .L0 
     /tmp/ccyBqyRg.s:686    .text:0000000000000398 .L0 
     /tmp/ccyBqyRg.s:687    .text:0000000000000398 .L0 
     /tmp/ccyBqyRg.s:691    .text:00000000000003a8 .L0 
     /tmp/ccyBqyRg.s:692    .text:00000000000003a8 .L0 
     /tmp/ccyBqyRg.s:696    .text:00000000000003b4 .L0 
     /tmp/ccyBqyRg.s:697    .text:00000000000003b4 .L0 
     /tmp/ccyBqyRg.s:701    .text:00000000000003c4 .L0 
     /tmp/ccyBqyRg.s:702    .text:00000000000003c4 .L0 
     /tmp/ccyBqyRg.s:706    .text:00000000000003d0 .L0 
     /tmp/ccyBqyRg.s:709    .text:00000000000003d4 .L0 
     /tmp/ccyBqyRg.s:712    .text:00000000000003d8 .L0 
     /tmp/ccyBqyRg.s:713    .text:00000000000003d8 .L0 
     /tmp/ccyBqyRg.s:718    .text:00000000000003e4 .L0 
     /tmp/ccyBqyRg.s:719    .text:00000000000003e4 .L0 
     /tmp/ccyBqyRg.s:725    .text:00000000000003ec .L0 
     /tmp/ccyBqyRg.s:727    .text:00000000000003ec .L0 
     /tmp/ccyBqyRg.s:736    .text:00000000000003f4 .L0 
     /tmp/ccyBqyRg.s:743    .text:00000000000003f8 .L0 
     /tmp/ccyBqyRg.s:751    .text:000000000000040c .L0 
     /tmp/ccyBqyRg.s:752    .text:000000000000040c .L0 
     /tmp/ccyBqyRg.s:756    .text:0000000000000418 .L0 
     /tmp/ccyBqyRg.s:759    .text:000000000000041c .L0 
     /tmp/ccyBqyRg.s:763    .text:0000000000000428 .L0 
     /tmp/ccyBqyRg.s:764    .text:0000000000000428 .L0 
     /tmp/ccyBqyRg.s:768    .text:0000000000000438 .L0 
     /tmp/ccyBqyRg.s:770    .text:000000000000043c .L0 
     /tmp/ccyBqyRg.s:772    .text:0000000000000440 .L0 
     /tmp/ccyBqyRg.s:773    .text:0000000000000440 .L0 
     /tmp/ccyBqyRg.s:784    .text:0000000000000460 .L0 
     /tmp/ccyBqyRg.s:785    .text:0000000000000460 .L0 
     /tmp/ccyBqyRg.s:791    .text:0000000000000470 .L0 
     /tmp/ccyBqyRg.s:792    .text:0000000000000470 .L0 
     /tmp/ccyBqyRg.s:798    .text:0000000000000484 .L0 
     /tmp/ccyBqyRg.s:799    .text:0000000000000484 .L0 
     /tmp/ccyBqyRg.s:805    .text:000000000000048c .L0 
     /tmp/ccyBqyRg.s:807    .text:000000000000048c .L0 
     /tmp/ccyBqyRg.s:813    .text:0000000000000494 .L0 
     /tmp/ccyBqyRg.s:815    .text:0000000000000494 .L0 
     /tmp/ccyBqyRg.s:948    .text._ZN5Riscv6mc_sipEm:0000000000000000 _ZN5Riscv6mc_sipEm
     /tmp/ccyBqyRg.s:823    .text:00000000000004a0 .L0 
     /tmp/ccyBqyRg.s:830    .text:00000000000004a4 .L0 
     /tmp/ccyBqyRg.s:836    .text:00000000000004b8 .L0 
     /tmp/ccyBqyRg.s:837    .text:00000000000004b8 .L0 
     /tmp/ccyBqyRg.s:840    .text:00000000000004c0 .L0 
     /tmp/ccyBqyRg.s:841    .text:00000000000004c0 .L0 
     /tmp/ccyBqyRg.s:847    .text:00000000000004dc .L0 
     /tmp/ccyBqyRg.s:848    .text:00000000000004dc .L0 
     /tmp/ccyBqyRg.s:1010   .text._ZN3TCB12getTimeSliceEv:0000000000000000 _ZN3TCB12getTimeSliceEv
     /tmp/ccyBqyRg.s:855    .text:00000000000004f8 .L0 
     /tmp/ccyBqyRg.s:861    .text:0000000000000510 .L0 
GAS LISTING /tmp/ccyBqyRg.s 			page 33


     /tmp/ccyBqyRg.s:863    .text:0000000000000514 .L0 
     /tmp/ccyBqyRg.s:864    .text:0000000000000514 .L0 
     /tmp/ccyBqyRg.s:868    .text:000000000000051c .L0 
     /tmp/ccyBqyRg.s:869    .text:000000000000051c .L0 
     /tmp/ccyBqyRg.s:875    .text:0000000000000524 .L0 
     /tmp/ccyBqyRg.s:877    .text:0000000000000524 .L0 
     /tmp/ccyBqyRg.s:883    .text:000000000000052c .L0 
     /tmp/ccyBqyRg.s:885    .text:000000000000052c .L0 
     /tmp/ccyBqyRg.s:892    .text:0000000000000538 .L0 
     /tmp/ccyBqyRg.s:899    .text:000000000000053c .L0 
     /tmp/ccyBqyRg.s:900    .text:000000000000053c .L0 
     /tmp/ccyBqyRg.s:904    .text:000000000000054c .L0 
     /tmp/ccyBqyRg.s:905    .text:000000000000054c .L0 
     /tmp/ccyBqyRg.s:909    .text:000000000000055c .L0 
     /tmp/ccyBqyRg.s:910    .text:000000000000055c .L0 
     /tmp/ccyBqyRg.s:914    .text:0000000000000568 .L0 
     /tmp/ccyBqyRg.s:915    .text:0000000000000568 .L0 
     /tmp/ccyBqyRg.s:919    .text:0000000000000578 .L0 
     /tmp/ccyBqyRg.s:920    .text:0000000000000578 .L0 
     /tmp/ccyBqyRg.s:928    .text:0000000000000584 .L0 
     /tmp/ccyBqyRg.s:930    .text:000000000000058c .L0 
     /tmp/ccyBqyRg.s:932    .text:0000000000000590 .L0 
     /tmp/ccyBqyRg.s:933    .text:0000000000000590 .L0 
     /tmp/ccyBqyRg.s:936    .text:0000000000000594 .L0 
     /tmp/ccyBqyRg.s:938    .text:0000000000000598 .L0 
     /tmp/ccyBqyRg.s:941    .text:000000000000059c .L0 
     /tmp/ccyBqyRg.s:952    .text._ZN5Riscv6mc_sipEm:0000000000000000 .L0 
     /tmp/ccyBqyRg.s:954    .text._ZN5Riscv6mc_sipEm:0000000000000000 .L0 
     /tmp/ccyBqyRg.s:955    .text._ZN5Riscv6mc_sipEm:0000000000000004 .L0 
     /tmp/ccyBqyRg.s:957    .text._ZN5Riscv6mc_sipEm:0000000000000008 .L0 
     /tmp/ccyBqyRg.s:959    .text._ZN5Riscv6mc_sipEm:000000000000000c .L0 
     /tmp/ccyBqyRg.s:961    .text._ZN5Riscv6mc_sipEm:000000000000000c .L0 
  src/../h/Riscv.hpp:123    .text._ZN5Riscv6mc_sipEm:000000000000000c .L0 
     /tmp/ccyBqyRg.s:968    .text._ZN5Riscv6mc_sipEm:0000000000000010 .L0 
     /tmp/ccyBqyRg.s:969    .text._ZN5Riscv6mc_sipEm:0000000000000014 .L0 
     /tmp/ccyBqyRg.s:970    .text._ZN5Riscv6mc_sipEm:0000000000000014 .L0 
     /tmp/ccyBqyRg.s:972    .text._ZN5Riscv6mc_sipEm:0000000000000018 .L0 
     /tmp/ccyBqyRg.s:974    .text._ZN5Riscv6mc_sipEm:000000000000001c .L0 
     /tmp/ccyBqyRg.s:985    .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000000 .L0 
     /tmp/ccyBqyRg.s:987    .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000000 .L0 
     /tmp/ccyBqyRg.s:988    .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000004 .L0 
     /tmp/ccyBqyRg.s:990    .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000008 .L0 
     /tmp/ccyBqyRg.s:992    .text._ZN3TCB9setStatusENS_12ThreadStatusE:000000000000000c .L0 
     /tmp/ccyBqyRg.s:994    .text._ZN3TCB9setStatusENS_12ThreadStatusE:000000000000000c .L0 
     /tmp/ccyBqyRg.s:995    .text._ZN3TCB9setStatusENS_12ThreadStatusE:000000000000000c .L0 
     /tmp/ccyBqyRg.s:997    .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000010 .L0 
     /tmp/ccyBqyRg.s:998    .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000014 .L0 
     /tmp/ccyBqyRg.s:999    .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000014 .L0 
     /tmp/ccyBqyRg.s:1001   .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000018 .L0 
     /tmp/ccyBqyRg.s:1003   .text._ZN3TCB9setStatusENS_12ThreadStatusE:000000000000001c .L0 
     /tmp/ccyBqyRg.s:1013   .text._ZN3TCB12getTimeSliceEv:0000000000000000 .L0 
     /tmp/ccyBqyRg.s:1015   .text._ZN3TCB12getTimeSliceEv:0000000000000000 .L0 
     /tmp/ccyBqyRg.s:1016   .text._ZN3TCB12getTimeSliceEv:0000000000000004 .L0 
     /tmp/ccyBqyRg.s:1018   .text._ZN3TCB12getTimeSliceEv:0000000000000008 .L0 
     /tmp/ccyBqyRg.s:1020   .text._ZN3TCB12getTimeSliceEv:000000000000000c .L0 
     /tmp/ccyBqyRg.s:1022   .text._ZN3TCB12getTimeSliceEv:000000000000000c .L0 
     /tmp/ccyBqyRg.s:1023   .text._ZN3TCB12getTimeSliceEv:000000000000000c .L0 
GAS LISTING /tmp/ccyBqyRg.s 			page 34


     /tmp/ccyBqyRg.s:1026   .text._ZN3TCB12getTimeSliceEv:0000000000000014 .L0 
     /tmp/ccyBqyRg.s:1027   .text._ZN3TCB12getTimeSliceEv:0000000000000014 .L0 
     /tmp/ccyBqyRg.s:1029   .text._ZN3TCB12getTimeSliceEv:0000000000000018 .L0 
     /tmp/ccyBqyRg.s:1031   .text._ZN3TCB12getTimeSliceEv:000000000000001c .L0 
     /tmp/ccyBqyRg.s:1045   .text:000000000000059c .L0 
     /tmp/ccyBqyRg.s:977    .text._ZN5Riscv6mc_sipEm:000000000000001c .L0 
     /tmp/ccyBqyRg.s:1006   .text._ZN3TCB9setStatusENS_12ThreadStatusE:000000000000001c .L0 
     /tmp/ccyBqyRg.s:1034   .text._ZN3TCB12getTimeSliceEv:000000000000001c .L0 
     /tmp/ccyBqyRg.s:198    .rodata:0000000000000074 .L9
     /tmp/ccyBqyRg.s:188    .text:00000000000000dc .L0 
     /tmp/ccyBqyRg.s:192    .text:00000000000000f0 .L0 
     /tmp/ccyBqyRg.s:383    .text:00000000000001bc .L0 
     /tmp/ccyBqyRg.s:560    .text:00000000000002bc .L0 
     /tmp/ccyBqyRg.s:8      .rodata:0000000000000000 .LC0
     /tmp/ccyBqyRg.s:677    .text:000000000000037c .L0 
     /tmp/ccyBqyRg.s:11     .rodata:0000000000000018 .LC1
     /tmp/ccyBqyRg.s:687    .text:0000000000000398 .L0 
     /tmp/ccyBqyRg.s:14     .rodata:0000000000000028 .LC2
     /tmp/ccyBqyRg.s:697    .text:00000000000003b4 .L0 
     /tmp/ccyBqyRg.s:764    .text:0000000000000428 .L0 
     /tmp/ccyBqyRg.s:773    .text:0000000000000440 .L0 
     /tmp/ccyBqyRg.s:17     .rodata:0000000000000030 .LC3
     /tmp/ccyBqyRg.s:785    .text:0000000000000460 .L0 
     /tmp/ccyBqyRg.s:841    .text:00000000000004c0 .L0 
     /tmp/ccyBqyRg.s:844    .text:00000000000004d0 .L0 
     /tmp/ccyBqyRg.s:848    .text:00000000000004dc .L0 
     /tmp/ccyBqyRg.s:855    .text:00000000000004f8 .L0 
     /tmp/ccyBqyRg.s:20     .rodata:0000000000000048 .LC4
     /tmp/ccyBqyRg.s:900    .text:000000000000053c .L0 
     /tmp/ccyBqyRg.s:23     .rodata:0000000000000068 .LC5
     /tmp/ccyBqyRg.s:905    .text:000000000000054c .L0 
     /tmp/ccyBqyRg.s:915    .text:0000000000000568 .L0 
     /tmp/ccyBqyRg.s:164    .text:0000000000000084 .L2
     /tmp/ccyBqyRg.s:738    .text:00000000000003f8 .L3
     /tmp/ccyBqyRg.s:663    .text:000000000000036c .L4
     /tmp/ccyBqyRg.s:673    .text:000000000000037c .L5
     /tmp/ccyBqyRg.s:652    .text:0000000000000358 .L6
     /tmp/ccyBqyRg.s:267    .text:0000000000000100 .L7
     /tmp/ccyBqyRg.s:601    .text:000000000000030c .L22
     /tmp/ccyBqyRg.s:710    .text:00000000000003d8 .L23
     /tmp/ccyBqyRg.s:345    .text:000000000000019c .L24
     /tmp/ccyBqyRg.s:360    .text:00000000000001b0 .L25
     /tmp/ccyBqyRg.s:368    .text:00000000000001b4 .L26
     /tmp/ccyBqyRg.s:453    .text:0000000000000248 .L27
     /tmp/ccyBqyRg.s:461    .text:000000000000024c .L28
     /tmp/ccyBqyRg.s:539    .text:00000000000002ac .L29
     /tmp/ccyBqyRg.s:547    .text:00000000000002b0 .L30
     /tmp/ccyBqyRg.s:707    .text:00000000000003d4 .L40
     /tmp/ccyBqyRg.s:633    .text:000000000000034c .L32
     /tmp/ccyBqyRg.s:641    .text:0000000000000350 .L33
     /tmp/ccyBqyRg.s:923    .text:0000000000000584 .L41
     /tmp/ccyBqyRg.s:825    .text:00000000000004a4 .L35
     /tmp/ccyBqyRg.s:782    .text:0000000000000460 .L36
     /tmp/ccyBqyRg.s:789    .text:0000000000000470 .L37
     /tmp/ccyBqyRg.s:894    .text:000000000000053c .L38
     /tmp/ccyBqyRg.s:866    .text:000000000000051c .L39
     /tmp/ccyBqyRg.s:272    .text:0000000000000110 .L21
GAS LISTING /tmp/ccyBqyRg.s 			page 35


     /tmp/ccyBqyRg.s:289    .text:0000000000000124 .L20
     /tmp/ccyBqyRg.s:307    .text:000000000000013c .L19
     /tmp/ccyBqyRg.s:379    .text:00000000000001bc .L18
     /tmp/ccyBqyRg.s:400    .text:00000000000001ec .L17
     /tmp/ccyBqyRg.s:409    .text:00000000000001f8 .L16
     /tmp/ccyBqyRg.s:424    .text:0000000000000214 .L15
     /tmp/ccyBqyRg.s:472    .text:0000000000000254 .L14
     /tmp/ccyBqyRg.s:490    .text:000000000000026c .L13
     /tmp/ccyBqyRg.s:508    .text:0000000000000284 .L12
     /tmp/ccyBqyRg.s:526    .text:000000000000029c .L11
     /tmp/ccyBqyRg.s:573    .text:00000000000002e4 .L10
     /tmp/ccyBqyRg.s:589    .text:00000000000002f4 .L8
     /tmp/ccyBqyRg.s:3108   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccyBqyRg.s:5052   .debug_str:0000000000000a5a .LASF222
     /tmp/ccyBqyRg.s:4938   .debug_str:0000000000000737 .LASF223
     /tmp/ccyBqyRg.s:5004   .debug_str:0000000000000926 .LASF224
     /tmp/ccyBqyRg.s:4676   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccyBqyRg.s:4688   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccyBqyRg.s:4970   .debug_str:0000000000000814 .LASF3
     /tmp/ccyBqyRg.s:4842   .debug_str:0000000000000495 .LASF0
     /tmp/ccyBqyRg.s:4868   .debug_str:0000000000000540 .LASF1
     /tmp/ccyBqyRg.s:4982   .debug_str:000000000000087b .LASF2
     /tmp/ccyBqyRg.s:4786   .debug_str:00000000000002e0 .LASF4
     /tmp/ccyBqyRg.s:4994   .debug_str:00000000000008e1 .LASF5
     /tmp/ccyBqyRg.s:4854   .debug_str:00000000000004d5 .LASF6
     /tmp/ccyBqyRg.s:4704   .debug_str:000000000000006c .LASF7
     /tmp/ccyBqyRg.s:4946   .debug_str:0000000000000776 .LASF8
     /tmp/ccyBqyRg.s:4936   .debug_str:0000000000000724 .LASF9
     /tmp/ccyBqyRg.s:4858   .debug_str:00000000000004f9 .LASF10
     /tmp/ccyBqyRg.s:4808   .debug_str:0000000000000375 .LASF11
     /tmp/ccyBqyRg.s:4822   .debug_str:00000000000003e2 .LASF12
     /tmp/ccyBqyRg.s:4732   .debug_str:0000000000000126 .LASF13
     /tmp/ccyBqyRg.s:4794   .debug_str:0000000000000323 .LASF14
     /tmp/ccyBqyRg.s:4748   .debug_str:00000000000001a5 .LASF15
     /tmp/ccyBqyRg.s:4730   .debug_str:0000000000000116 .LASF16
     /tmp/ccyBqyRg.s:5028   .debug_str:00000000000009c4 .LASF17
     /tmp/ccyBqyRg.s:4780   .debug_str:000000000000029a .LASF18
     /tmp/ccyBqyRg.s:5014   .debug_str:0000000000000975 .LASF19
     /tmp/ccyBqyRg.s:4888   .debug_str:00000000000005b7 .LASF20
     /tmp/ccyBqyRg.s:5104   .debug_str:0000000000000c57 .LASF59
     /tmp/ccyBqyRg.s:4964   .debug_str:00000000000007f3 .LASF60
     /tmp/ccyBqyRg.s:4876   .debug_str:000000000000056c .LASF21
     /tmp/ccyBqyRg.s:4710   .debug_str:0000000000000091 .LASF22
     /tmp/ccyBqyRg.s:5120   .debug_str:0000000000000cc5 .LASF23
     /tmp/ccyBqyRg.s:4830   .debug_str:0000000000000433 .LASF24
     /tmp/ccyBqyRg.s:4838   .debug_str:0000000000000477 .LASF26
     /tmp/ccyBqyRg.s:5002   .debug_str:0000000000000918 .LASF25
     /tmp/ccyBqyRg.s:4784   .debug_str:00000000000002c5 .LASF27
     /tmp/ccyBqyRg.s:4846   .debug_str:00000000000004ac .LASF28
     /tmp/ccyBqyRg.s:5114   .debug_str:0000000000000c9e .LASF29
     /tmp/ccyBqyRg.s:5078   .debug_str:0000000000000bce .LASF30
     /tmp/ccyBqyRg.s:5070   .debug_str:0000000000000b81 .LASF32
     /tmp/ccyBqyRg.s:4978   .debug_str:0000000000000867 .LASF34
     /tmp/ccyBqyRg.s:4924   .debug_str:00000000000006cd .LASF36
     /tmp/ccyBqyRg.s:4954   .debug_str:0000000000000797 .LASF31
     /tmp/ccyBqyRg.s:4960   .debug_str:00000000000007c8 .LASF33
     /tmp/ccyBqyRg.s:4912   .debug_str:0000000000000671 .LASF35
GAS LISTING /tmp/ccyBqyRg.s 			page 36


     /tmp/ccyBqyRg.s:4860   .debug_str:000000000000050c .LASF37
     /tmp/ccyBqyRg.s:5116   .debug_str:0000000000000cb8 .LASF38
     /tmp/ccyBqyRg.s:5056   .debug_str:0000000000000b23 .LASF39
     /tmp/ccyBqyRg.s:4906   .debug_str:000000000000064e .LASF40
     /tmp/ccyBqyRg.s:4922   .debug_str:00000000000006b9 .LASF41
     /tmp/ccyBqyRg.s:5024   .debug_str:00000000000009b0 .LASF42
     /tmp/ccyBqyRg.s:4996   .debug_str:00000000000008e8 .LASF43
     /tmp/ccyBqyRg.s:4998   .debug_str:00000000000008fb .LASF44
     /tmp/ccyBqyRg.s:4738   .debug_str:0000000000000144 .LASF45
     /tmp/ccyBqyRg.s:4776   .debug_str:0000000000000287 .LASF46
     /tmp/ccyBqyRg.s:4836   .debug_str:0000000000000465 .LASF47
     /tmp/ccyBqyRg.s:4848   .debug_str:00000000000004b9 .LASF48
     /tmp/ccyBqyRg.s:4764   .debug_str:0000000000000244 .LASF49
     /tmp/ccyBqyRg.s:4706   .debug_str:0000000000000073 .LASF50
     /tmp/ccyBqyRg.s:4986   .debug_str:0000000000000893 .LASF51
     /tmp/ccyBqyRg.s:4980   .debug_str:0000000000000870 .LASF52
     /tmp/ccyBqyRg.s:5142   .debug_str:0000000000000d88 .LASF53
     /tmp/ccyBqyRg.s:5106   .debug_str:0000000000000c5d .LASF54
     /tmp/ccyBqyRg.s:5122   .debug_str:0000000000000cce .LASF55
     /tmp/ccyBqyRg.s:5098   .debug_str:0000000000000c24 .LASF56
     /tmp/ccyBqyRg.s:4894   .debug_str:00000000000005d5 .LASF57
     /tmp/ccyBqyRg.s:5062   .debug_str:0000000000000b51 .LASF151
     /tmp/ccyBqyRg.s:4754   .debug_str:00000000000001e5 .LASF152
     /tmp/ccyBqyRg.s:5096   .debug_str:0000000000000c1b .LASF58
     /tmp/ccyBqyRg.s:5010   .debug_str:000000000000095a .LASF61
     /tmp/ccyBqyRg.s:4952   .debug_str:000000000000078f .LASF62
     /tmp/ccyBqyRg.s:4762   .debug_str:000000000000023d .LASF63
     /tmp/ccyBqyRg.s:4690   .debug_str:0000000000000000 .LASF64
     /tmp/ccyBqyRg.s:4814   .debug_str:00000000000003a1 .LASF65
     /tmp/ccyBqyRg.s:4864   .debug_str:000000000000052f .LASF66
     /tmp/ccyBqyRg.s:4724   .debug_str:00000000000000ed .LASF67
     /tmp/ccyBqyRg.s:5036   .debug_str:00000000000009f9 .LASF129
     /tmp/ccyBqyRg.s:4736   .debug_str:000000000000013a .LASF68
     /tmp/ccyBqyRg.s:4824   .debug_str:00000000000003f0 .LASF70
     /tmp/ccyBqyRg.s:4966   .debug_str:00000000000007fe .LASF74
     /tmp/ccyBqyRg.s:4884   .debug_str:0000000000000598 .LASF76
     /tmp/ccyBqyRg.s:5026   .debug_str:00000000000009b7 .LASF69
     /tmp/ccyBqyRg.s:5112   .debug_str:0000000000000c7c .LASF71
     /tmp/ccyBqyRg.s:4928   .debug_str:00000000000006ed .LASF225
     /tmp/ccyBqyRg.s:5132   .debug_str:0000000000000d3a .LASF72
     /tmp/ccyBqyRg.s:4856   .debug_str:00000000000004e7 .LASF73
     /tmp/ccyBqyRg.s:4892   .debug_str:00000000000005c8 .LASF75
     /tmp/ccyBqyRg.s:4962   .debug_str:00000000000007db .LASF77
     /tmp/ccyBqyRg.s:4768   .debug_str:000000000000025f .LASF78
     /tmp/ccyBqyRg.s:4990   .debug_str:00000000000008bb .LASF79
     /tmp/ccyBqyRg.s:5076   .debug_str:0000000000000bc3 .LASF80
     /tmp/ccyBqyRg.s:4796   .debug_str:0000000000000332 .LASF81
     /tmp/ccyBqyRg.s:5146   .debug_str:0000000000000dad .LASF82
     /tmp/ccyBqyRg.s:4792   .debug_str:000000000000030a .LASF83
     /tmp/ccyBqyRg.s:4874   .debug_str:0000000000000566 .LASF84
     /tmp/ccyBqyRg.s:4976   .debug_str:0000000000000857 .LASF85
     /tmp/ccyBqyRg.s:4770   .debug_str:000000000000026c .LASF86
     /tmp/ccyBqyRg.s:4740   .debug_str:0000000000000157 .LASF87
     /tmp/ccyBqyRg.s:5088   .debug_str:0000000000000c02 .LASF88
     /tmp/ccyBqyRg.s:4712   .debug_str:000000000000009a .LASF89
     /tmp/ccyBqyRg.s:5048   .debug_str:0000000000000a42 .LASF90
     /tmp/ccyBqyRg.s:4726   .debug_str:00000000000000f6 .LASF91
GAS LISTING /tmp/ccyBqyRg.s 			page 37


     /tmp/ccyBqyRg.s:5144   .debug_str:0000000000000da0 .LASF92
     /tmp/ccyBqyRg.s:4818   .debug_str:00000000000003c1 .LASF93
     /tmp/ccyBqyRg.s:4696   .debug_str:000000000000001e .LASF94
     /tmp/ccyBqyRg.s:4920   .debug_str:00000000000006ac .LASF95
     /tmp/ccyBqyRg.s:5068   .debug_str:0000000000000b79 .LASF96
     /tmp/ccyBqyRg.s:4728   .debug_str:0000000000000107 .LASF97
     /tmp/ccyBqyRg.s:5138   .debug_str:0000000000000d61 .LASF98
     /tmp/ccyBqyRg.s:5080   .debug_str:0000000000000bd7 .LASF99
     /tmp/ccyBqyRg.s:5058   .debug_str:0000000000000b37 .LASF100
     /tmp/ccyBqyRg.s:5050   .debug_str:0000000000000a4a .LASF101
     /tmp/ccyBqyRg.s:4932   .debug_str:00000000000006fa .LASF102
     /tmp/ccyBqyRg.s:4694   .debug_str:0000000000000011 .LASF103
     /tmp/ccyBqyRg.s:4992   .debug_str:00000000000008d3 .LASF104
     /tmp/ccyBqyRg.s:5092   .debug_str:0000000000000c0f .LASF105
     /tmp/ccyBqyRg.s:5130   .debug_str:0000000000000d24 .LASF159
     /tmp/ccyBqyRg.s:4756   .debug_str:00000000000001fd .LASF135
     /tmp/ccyBqyRg.s:4700   .debug_str:0000000000000036 .LASF136
     /tmp/ccyBqyRg.s:4810   .debug_str:0000000000000385 .LASF106
     /tmp/ccyBqyRg.s:5016   .debug_str:000000000000098b .LASF107
     /tmp/ccyBqyRg.s:4866   .debug_str:0000000000000538 .LASF108
     /tmp/ccyBqyRg.s:4918   .debug_str:0000000000000699 .LASF109
     /tmp/ccyBqyRg.s:4772   .debug_str:0000000000000275 .LASF110
     /tmp/ccyBqyRg.s:4988   .debug_str:00000000000008ab .LASF111
     /tmp/ccyBqyRg.s:5032   .debug_str:00000000000009dd .LASF112
     /tmp/ccyBqyRg.s:4720   .debug_str:00000000000000d2 .LASF113
     /tmp/ccyBqyRg.s:4766   .debug_str:0000000000000256 .LASF114
     /tmp/ccyBqyRg.s:4910   .debug_str:000000000000065b .LASF115
     /tmp/ccyBqyRg.s:4778   .debug_str:000000000000028d .LASF116
     /tmp/ccyBqyRg.s:4702   .debug_str:000000000000005e .LASF117
     /tmp/ccyBqyRg.s:4840   .debug_str:000000000000048f .LASF118
     /tmp/ccyBqyRg.s:5044   .debug_str:0000000000000a20 .LASF119
     /tmp/ccyBqyRg.s:4698   .debug_str:000000000000002e .LASF120
     /tmp/ccyBqyRg.s:4708   .debug_str:000000000000007e .LASF121
     /tmp/ccyBqyRg.s:5108   .debug_str:0000000000000c67 .LASF122
     /tmp/ccyBqyRg.s:5074   .debug_str:0000000000000bb3 .LASF123
     /tmp/ccyBqyRg.s:4984   .debug_str:0000000000000889 .LASF124
     /tmp/ccyBqyRg.s:4862   .debug_str:000000000000051f .LASF125
     /tmp/ccyBqyRg.s:4948   .debug_str:000000000000077d .LASF126
     /tmp/ccyBqyRg.s:5086   .debug_str:0000000000000bfa .LASF127
     /tmp/ccyBqyRg.s:4914   .debug_str:0000000000000678 .LASF128
     /tmp/ccyBqyRg.s:5094   .debug_str:0000000000000c16 .LASF130
     /tmp/ccyBqyRg.s:5064   .debug_str:0000000000000b5c .LASF131
     /tmp/ccyBqyRg.s:4734   .debug_str:0000000000000135 .LASF132
     /tmp/ccyBqyRg.s:4744   .debug_str:0000000000000174 .LASF133
     /tmp/ccyBqyRg.s:4758   .debug_str:000000000000020b .LASF134
     /tmp/ccyBqyRg.s:4750   .debug_str:00000000000001b5 .LASF137
     /tmp/ccyBqyRg.s:4716   .debug_str:00000000000000c1 .LASF138
     /tmp/ccyBqyRg.s:4900   .debug_str:0000000000000615 .LASF139
     /tmp/ccyBqyRg.s:4714   .debug_str:00000000000000ac .LASF140
     /tmp/ccyBqyRg.s:4816   .debug_str:00000000000003a9 .LASF141
     /tmp/ccyBqyRg.s:5066   .debug_str:0000000000000b61 .LASF226
     /tmp/ccyBqyRg.s:5038   .debug_str:0000000000000a01 .LASF142
     /tmp/ccyBqyRg.s:4878   .debug_str:0000000000000575 .LASF143
     /tmp/ccyBqyRg.s:4850   .debug_str:00000000000004bf .LASF144
     /tmp/ccyBqyRg.s:4788   .debug_str:00000000000002e6 .LASF145
     /tmp/ccyBqyRg.s:4872   .debug_str:000000000000055e .LASF146
     /tmp/ccyBqyRg.s:4902   .debug_str:000000000000061a .LASF147
GAS LISTING /tmp/ccyBqyRg.s 			page 38


     /tmp/ccyBqyRg.s:4722   .debug_str:00000000000000e4 .LASF148
     /tmp/ccyBqyRg.s:4896   .debug_str:00000000000005eb .LASF149
     /tmp/ccyBqyRg.s:4752   .debug_str:00000000000001d0 .LASF150
     /tmp/ccyBqyRg.s:5102   .debug_str:0000000000000c41 .LASF153
     /tmp/ccyBqyRg.s:4806   .debug_str:000000000000036b .LASF154
     /tmp/ccyBqyRg.s:5022   .debug_str:00000000000009ab .LASF155
     /tmp/ccyBqyRg.s:4908   .debug_str:0000000000000656 .LASF156
     /tmp/ccyBqyRg.s:5136   .debug_str:0000000000000d54 .LASF157
     /tmp/ccyBqyRg.s:5128   .debug_str:0000000000000d12 .LASF158
     /tmp/ccyBqyRg.s:4834   .debug_str:000000000000044d .LASF160
     /tmp/ccyBqyRg.s:5134   .debug_str:0000000000000d40 .LASF227
     /tmp/ccyBqyRg.s:5060   .debug_str:0000000000000b41 .LASF161
     /tmp/ccyBqyRg.s:4972   .debug_str:0000000000000819 .LASF162
     /tmp/ccyBqyRg.s:4718   .debug_str:00000000000000c7 .LASF163
     /tmp/ccyBqyRg.s:5140   .debug_str:0000000000000d67 .LASF164
     /tmp/ccyBqyRg.s:4880   .debug_str:000000000000058a .LASF165
     /tmp/ccyBqyRg.s:5034   .debug_str:00000000000009e4 .LASF166
     /tmp/ccyBqyRg.s:4882   .debug_str:000000000000058f .LASF167
     /tmp/ccyBqyRg.s:5006   .debug_str:0000000000000944 .LASF168
     /tmp/ccyBqyRg.s:4916   .debug_str:0000000000000684 .LASF169
     /tmp/ccyBqyRg.s:4940   .debug_str:0000000000000750 .LASF170
     /tmp/ccyBqyRg.s:4904   .debug_str:0000000000000639 .LASF171
     /tmp/ccyBqyRg.s:5046   .debug_str:0000000000000a31 .LASF172
     /tmp/ccyBqyRg.s:5030   .debug_str:00000000000009d0 .LASF173
     /tmp/ccyBqyRg.s:5072   .debug_str:0000000000000b96 .LASF174
     /tmp/ccyBqyRg.s:5084   .debug_str:0000000000000be8 .LASF175
     /tmp/ccyBqyRg.s:5124   .debug_str:0000000000000ce4 .LASF176
     /tmp/ccyBqyRg.s:4852   .debug_str:00000000000004c7 .LASF177
     /tmp/ccyBqyRg.s:4934   .debug_str:0000000000000706 .LASF178
     /tmp/ccyBqyRg.s:4828   .debug_str:0000000000000426 .LASF179
     /tmp/ccyBqyRg.s:4974   .debug_str:000000000000083a .LASF180
     /tmp/ccyBqyRg.s:5020   .debug_str:0000000000000997 .LASF181
     /tmp/ccyBqyRg.s:4820   .debug_str:00000000000003cd .LASF182
     /tmp/ccyBqyRg.s:4804   .debug_str:000000000000035d .LASF183
     /tmp/ccyBqyRg.s:5040   .debug_str:0000000000000a0e .LASF184
     /tmp/ccyBqyRg.s:4968   .debug_str:0000000000000808 .LASF185
     /tmp/ccyBqyRg.s:4692   .debug_str:0000000000000008 .LASF228
     /tmp/ccyBqyRg.s:5082   .debug_str:0000000000000bdc .LASF186
     /tmp/ccyBqyRg.s:4774   .debug_str:000000000000027a .LASF187
     /tmp/ccyBqyRg.s:4844   .debug_str:00000000000004a2 .LASF188
     /tmp/ccyBqyRg.s:4950   .debug_str:0000000000000785 .LASF189
     /tmp/ccyBqyRg.s:4870   .debug_str:0000000000000553 .LASF190
     /tmp/ccyBqyRg.s:4926   .debug_str:00000000000006e2 .LASF191
     /tmp/ccyBqyRg.s:5008   .debug_str:000000000000094a .LASF192
     /tmp/ccyBqyRg.s:5042   .debug_str:0000000000000a1b .LASF193
     /tmp/ccyBqyRg.s:4790   .debug_str:0000000000000302 .LASF194
     /tmp/ccyBqyRg.s:4826   .debug_str:0000000000000415 .LASF195
     /tmp/ccyBqyRg.s:4956   .debug_str:000000000000079e .LASF196
     /tmp/ccyBqyRg.s:4798   .debug_str:000000000000034a .LASF197
     /tmp/ccyBqyRg.s:4812   .debug_str:000000000000038b .LASF198
     /tmp/ccyBqyRg.s:4802   .debug_str:0000000000000357 .LASF199
     /tmp/ccyBqyRg.s:4782   .debug_str:00000000000002b0 .LASF200
     /tmp/ccyBqyRg.s:4890   .debug_str:00000000000005bc .LASF201
     /tmp/ccyBqyRg.s:5100   .debug_str:0000000000000c2e .LASF202
     /tmp/ccyBqyRg.s:4942   .debug_str:0000000000000756 .LASF203
     /tmp/ccyBqyRg.s:4832   .debug_str:000000000000043e .LASF204
     /tmp/ccyBqyRg.s:4760   .debug_str:0000000000000225 .LASF205
GAS LISTING /tmp/ccyBqyRg.s 			page 39


     /tmp/ccyBqyRg.s:4958   .debug_str:00000000000007be .LASF206
     /tmp/ccyBqyRg.s:4930   .debug_str:00000000000006f2 .LASF207
     /tmp/ccyBqyRg.s:5000   .debug_str:0000000000000902 .LASF208
     /tmp/ccyBqyRg.s:4944   .debug_str:0000000000000765 .LASF209
     /tmp/ccyBqyRg.s:30     .text:0000000000000000 .LFB50
     /tmp/ccyBqyRg.s:942    .text:000000000000059c .LFE50
     /tmp/ccyBqyRg.s:5018   .debug_str:0000000000000990 .LASF210
     /tmp/ccyBqyRg.s:4183   .debug_loc:0000000000000000 .LLST0
     /tmp/ccyBqyRg.s:5054   .debug_str:0000000000000b1e .LASF211
     /tmp/ccyBqyRg.s:4214   .debug_loc:0000000000000087 .LLST1
     /tmp/ccyBqyRg.s:5110   .debug_str:0000000000000c74 .LASF212
     /tmp/ccyBqyRg.s:4245   .debug_loc:000000000000010e .LLST2
     /tmp/ccyBqyRg.s:4267   .debug_loc:000000000000016e .LLST3
     /tmp/ccyBqyRg.s:4289   .debug_loc:00000000000001ce .LLST4
     /tmp/ccyBqyRg.s:4311   .debug_loc:000000000000022f .LLST5
     /tmp/ccyBqyRg.s:4333   .debug_loc:0000000000000290 .LLST6
     /tmp/ccyBqyRg.s:4355   .debug_loc:00000000000002f1 .LLST7
     /tmp/ccyBqyRg.s:4377   .debug_loc:0000000000000352 .LLST8
     /tmp/ccyBqyRg.s:4399   .debug_loc:00000000000003b3 .LLST9
     /tmp/ccyBqyRg.s:4421   .debug_loc:0000000000000414 .LLST10
     /tmp/ccyBqyRg.s:749    .text:000000000000040c .LBB5
     /tmp/ccyBqyRg.s:818    .text:00000000000004a0 .LBE5
     /tmp/ccyBqyRg.s:4614   .debug_loc:000000000000076d .LLST11
     /tmp/ccyBqyRg.s:753    .text:0000000000000414 .LVL69
     /tmp/ccyBqyRg.s:779    .text:000000000000045c .LVL72
     /tmp/ccyBqyRg.s:788    .text:0000000000000470 .LVL75
     /tmp/ccyBqyRg.s:796    .text:0000000000000484 .LVL76
     /tmp/ccyBqyRg.s:817    .text:00000000000004a0 .LVL77
     /tmp/ccyBqyRg.s:278    .text:000000000000011c .LVL21
     /tmp/ccyBqyRg.s:296    .text:0000000000000134 .LVL23
     /tmp/ccyBqyRg.s:321    .text:0000000000000160 .LVL25
     /tmp/ccyBqyRg.s:336    .text:0000000000000184 .LVL26
     /tmp/ccyBqyRg.s:344    .text:000000000000019c .LVL27
     /tmp/ccyBqyRg.s:388    .text:00000000000001d8 .LVL29
     /tmp/ccyBqyRg.s:392    .text:00000000000001e0 .LVL30
     /tmp/ccyBqyRg.s:396    .text:00000000000001e8 .LVL31
     /tmp/ccyBqyRg.s:405    .text:00000000000001f4 .LVL33
     /tmp/ccyBqyRg.s:416    .text:0000000000000208 .LVL35
     /tmp/ccyBqyRg.s:420    .text:0000000000000210 .LVL36
     /tmp/ccyBqyRg.s:435    .text:000000000000022c .LVL38
     /tmp/ccyBqyRg.s:479    .text:0000000000000264 .LVL40
     /tmp/ccyBqyRg.s:497    .text:000000000000027c .LVL42
     /tmp/ccyBqyRg.s:515    .text:0000000000000294 .LVL44
     /tmp/ccyBqyRg.s:565    .text:00000000000002d8 .LVL46
     /tmp/ccyBqyRg.s:569    .text:00000000000002e0 .LVL47
     /tmp/ccyBqyRg.s:578    .text:00000000000002ec .LVL49
     /tmp/ccyBqyRg.s:597    .text:0000000000000308 .LVL51
     /tmp/ccyBqyRg.s:615    .text:0000000000000330 .LVL53
     /tmp/ccyBqyRg.s:659    .text:0000000000000368 .LVL55
     /tmp/ccyBqyRg.s:669    .text:0000000000000378 .LVL57
     /tmp/ccyBqyRg.s:679    .text:000000000000038c .LVL59
     /tmp/ccyBqyRg.s:684    .text:0000000000000398 .LVL60
     /tmp/ccyBqyRg.s:689    .text:00000000000003a8 .LVL61
     /tmp/ccyBqyRg.s:694    .text:00000000000003b4 .LVL62
     /tmp/ccyBqyRg.s:699    .text:00000000000003c4 .LVL63
     /tmp/ccyBqyRg.s:704    .text:00000000000003d0 .LVL64
     /tmp/ccyBqyRg.s:838    .text:00000000000004c0 .LVL79
GAS LISTING /tmp/ccyBqyRg.s 			page 40


     /tmp/ccyBqyRg.s:852    .text:00000000000004f4 .LVL80
     /tmp/ccyBqyRg.s:865    .text:000000000000051c .LVL81
     /tmp/ccyBqyRg.s:887    .text:0000000000000538 .LVL82
     /tmp/ccyBqyRg.s:902    .text:000000000000054c .LVL84
     /tmp/ccyBqyRg.s:907    .text:000000000000055c .LVL85
     /tmp/ccyBqyRg.s:912    .text:0000000000000568 .LVL86
     /tmp/ccyBqyRg.s:917    .text:0000000000000578 .LVL87
     /tmp/ccyBqyRg.s:922    .text:0000000000000584 .LVL88
     /tmp/ccyBqyRg.s:1011   .text._ZN3TCB12getTimeSliceEv:0000000000000000 .LFB34
     /tmp/ccyBqyRg.s:1032   .text._ZN3TCB12getTimeSliceEv:000000000000001c .LFE34
     /tmp/ccyBqyRg.s:4800   .debug_str:0000000000000352 .LASF213
     /tmp/ccyBqyRg.s:4643   .debug_loc:00000000000007f1 .LLST12
     /tmp/ccyBqyRg.s:982    .text._ZN3TCB9setStatusENS_12ThreadStatusE:0000000000000000 .LFB32
     /tmp/ccyBqyRg.s:1004   .text._ZN3TCB9setStatusENS_12ThreadStatusE:000000000000001c .LFE32
     /tmp/ccyBqyRg.s:5118   .debug_str:0000000000000cc0 .LASF214
     /tmp/ccyBqyRg.s:949    .text._ZN5Riscv6mc_sipEm:0000000000000000 .LFB10
     /tmp/ccyBqyRg.s:975    .text._ZN5Riscv6mc_sipEm:000000000000001c .LFE10
     /tmp/ccyBqyRg.s:5090   .debug_str:0000000000000c0a .LASF215
     /tmp/ccyBqyRg.s:4886   .debug_str:00000000000005ac .LASF216
     /tmp/ccyBqyRg.s:4746   .debug_str:0000000000000192 .LASF217
     /tmp/ccyBqyRg.s:5126   .debug_str:0000000000000d06 .LASF218
     /tmp/ccyBqyRg.s:5012   .debug_str:0000000000000967 .LASF219
     /tmp/ccyBqyRg.s:4898   .debug_str:0000000000000607 .LASF220
     /tmp/ccyBqyRg.s:4742   .debug_str:000000000000016a .LASF221
     /tmp/ccyBqyRg.s:53     .text:000000000000001c .LVL0
     /tmp/ccyBqyRg.s:60     .text:0000000000000020 .LVL1
     /tmp/ccyBqyRg.s:737    .text:00000000000003f8 .LVL67
     /tmp/ccyBqyRg.s:744    .text:00000000000003fc .LVL68
     /tmp/ccyBqyRg.s:934    .text:0000000000000590 .LVL89
     /tmp/ccyBqyRg.s:939    .text:0000000000000598 .LVL90
     /tmp/ccyBqyRg.s:63     .text:0000000000000024 .LVL2
     /tmp/ccyBqyRg.s:70     .text:0000000000000028 .LVL3
     /tmp/ccyBqyRg.s:716    .text:00000000000003e4 .LVL65
     /tmp/ccyBqyRg.s:728    .text:00000000000003f0 .LVL66
     /tmp/ccyBqyRg.s:73     .text:000000000000002c .LVL4
     /tmp/ccyBqyRg.s:81     .text:0000000000000030 .LVL5
     /tmp/ccyBqyRg.s:84     .text:0000000000000034 .LVL6
     /tmp/ccyBqyRg.s:91     .text:0000000000000038 .LVL7
     /tmp/ccyBqyRg.s:94     .text:000000000000003c .LVL8
     /tmp/ccyBqyRg.s:101    .text:0000000000000040 .LVL9
     /tmp/ccyBqyRg.s:104    .text:0000000000000044 .LVL10
     /tmp/ccyBqyRg.s:111    .text:0000000000000048 .LVL11
     /tmp/ccyBqyRg.s:114    .text:000000000000004c .LVL12
     /tmp/ccyBqyRg.s:121    .text:0000000000000050 .LVL13
     /tmp/ccyBqyRg.s:124    .text:0000000000000054 .LVL14
     /tmp/ccyBqyRg.s:131    .text:0000000000000058 .LVL15
     /tmp/ccyBqyRg.s:134    .text:000000000000005c .LVL16
     /tmp/ccyBqyRg.s:141    .text:0000000000000060 .LVL17
     /tmp/ccyBqyRg.s:144    .text:0000000000000064 .LVL18
     /tmp/ccyBqyRg.s:151    .text:0000000000000068 .LVL19
     /tmp/ccyBqyRg.s:154    .text:000000000000006c .LVL20
     /tmp/ccyBqyRg.s:288    .text:0000000000000124 .LVL22
     /tmp/ccyBqyRg.s:306    .text:000000000000013c .LVL24
     /tmp/ccyBqyRg.s:378    .text:00000000000001bc .LVL28
     /tmp/ccyBqyRg.s:399    .text:00000000000001ec .LVL32
     /tmp/ccyBqyRg.s:408    .text:00000000000001f8 .LVL34
     /tmp/ccyBqyRg.s:423    .text:0000000000000214 .LVL37
GAS LISTING /tmp/ccyBqyRg.s 			page 41


     /tmp/ccyBqyRg.s:471    .text:0000000000000254 .LVL39
     /tmp/ccyBqyRg.s:489    .text:000000000000026c .LVL41
     /tmp/ccyBqyRg.s:507    .text:0000000000000284 .LVL43
     /tmp/ccyBqyRg.s:525    .text:000000000000029c .LVL45
     /tmp/ccyBqyRg.s:572    .text:00000000000002e4 .LVL48
     /tmp/ccyBqyRg.s:588    .text:00000000000002f4 .LVL50
     /tmp/ccyBqyRg.s:600    .text:000000000000030c .LVL52
     /tmp/ccyBqyRg.s:651    .text:0000000000000358 .LVL54
     /tmp/ccyBqyRg.s:662    .text:000000000000036c .LVL56
     /tmp/ccyBqyRg.s:672    .text:000000000000037c .LVL58
     /tmp/ccyBqyRg.s:824    .text:00000000000004a4 .LVL78
     /tmp/ccyBqyRg.s:893    .text:000000000000053c .LVL83
     /tmp/ccyBqyRg.s:757    .text:000000000000041c .LVL70
     /tmp/ccyBqyRg.s:777    .text:0000000000000454 .LVL71
     /tmp/ccyBqyRg.s:781    .text:0000000000000460 .LVL73
     /tmp/ccyBqyRg.s:786    .text:0000000000000468 .LVL74
     /tmp/ccyBqyRg.s:1014   .text._ZN3TCB12getTimeSliceEv:0000000000000000 .LVL93
     /tmp/ccyBqyRg.s:1024   .text._ZN3TCB12getTimeSliceEv:0000000000000010 .LVL94
     /tmp/ccyBqyRg.s:1046   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccyBqyRg.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccyBqyRg.s:1035   .text:000000000000059c .Letext0

UNDEFINED SYMBOLS
_ZN7KMemory7kmallocEm
_ZN7KMemory5kfreeEPv
_ZN3TCB12createThreadEPFvPvES0_Pm
_ZN9Scheduler3putEP3TCB
_ZN3TCB7runningE
_ZN3TCB13releaseJoinedEv
_ZN3TCB5yieldEv
_ZN3TCB10threadJoinEPS_
_ZN4KSem7initSemEj
_ZN4KSem8closeSemEPS_
_ZN4KSem4waitEv
_ZN4KSem6signalEv
_ZN9Scheduler10putToSleepEP3TCBm
_ZN8KConsole5kgetcEv
_ZN8KConsole5kputcEc
_Z9kPrintIntm
_Z11printStringPKc
plic_claim
_ZN8KConsole2srE
_ZN8KConsole2drE
_ZN8KConsole12placeInInputEc
plic_complete
_ZN9Scheduler4wakeEv
_ZN3TCB16runningTimeSliceE
_ZN3TCB8dispatchEv
