GAS LISTING /tmp/ccwLvrbH.s 			page 1


   1              		.file	"main.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.section	.rodata.str1.8,"aMS",@progbits,1
   7              		.align	3
   8              	.LC0:
   9 0000 7573616F 		.string	"usao u nit 1"
   9      2075206E 
   9      69742031 
   9      00
  10 000d 000000   		.align	3
  11              	.LC1:
  12 0010 6F706574 		.string	"opet u niti 1"
  12      2075206E 
  12      69746920 
  12      3100
  13              		.text
  14              		.align	2
  15              		.globl	_Z5nit1fPv
  17              	_Z5nit1fPv:
  18              	.LFB40:
  19              		.file 1 "src/main.cpp"
   1:src/main.cpp  **** #include "../lib/console.h"
   2:src/main.cpp  **** #include "../lib/hw.h"
   3:src/main.cpp  **** #include "../h/helper.hpp"
   4:src/main.cpp  **** #include "../h/Riscv.hpp"
   5:src/main.cpp  **** #include "../h/syscall_c.hpp"
   6:src/main.cpp  **** #include "../h/syscall_cpp.hpp"
   7:src/main.cpp  **** #include "../h/List.hpp"
   8:src/main.cpp  **** //#include "../h/MemoryAllocator.hpp"
   9:src/main.cpp  **** #include "../h/TCB.hpp"
  10:src/main.cpp  **** 
  11:src/main.cpp  **** //#pragma GCC optimize("O0")
  12:src/main.cpp  **** 
  13:src/main.cpp  **** extern "C" void interruptHandler();
  14:src/main.cpp  **** 
  15:src/main.cpp  **** void testMemory();
  16:src/main.cpp  **** 
  17:src/main.cpp  **** 
  18:src/main.cpp  **** 
  19:src/main.cpp  **** //uint64 temp;
  20:src/main.cpp  **** //
  21:src/main.cpp  **** //void f() {
  22:src/main.cpp  **** //	__putc('a');
  23:src/main.cpp  **** //	__putc('\n');
  24:src/main.cpp  **** //	uint64 var = temp;
  25:src/main.cpp  **** //	__asm__ volatile ("mv ra, %[savedPC]": : [savedPC] "r"(var));
  26:src/main.cpp  **** //
  27:src/main.cpp  **** //	__asm__ volatile ("sd ra, 8(sp)");
  28:src/main.cpp  **** //}
  29:src/main.cpp  **** //
  30:src/main.cpp  **** //void dispatch() {
  31:src/main.cpp  **** //	__asm__ volatile ("mv %[savedPC], ra":[savedPC] "=r"(temp));
  32:src/main.cpp  **** //	__asm__ volatile("mv ra, %[fAddress]": : [fAddress] "r"(&f));
  33:src/main.cpp  **** //}
GAS LISTING /tmp/ccwLvrbH.s 			page 2


  34:src/main.cpp  **** 
  35:src/main.cpp  **** void nit1f(void*) {
  20              		.loc 1 35 19
  21              		.cfi_startproc
  22 0000 130101FF 		addi	sp,sp,-16
  23              		.cfi_def_cfa_offset 16
  24 0004 23341100 		sd	ra,8(sp)
  25 0008 23308100 		sd	s0,0(sp)
  26              		.cfi_offset 1, -8
  27              		.cfi_offset 8, -16
  28 000c 13040101 		addi	s0,sp,16
  29              		.cfi_def_cfa 8, 0
  36:src/main.cpp  **** 	println("usao u nit 1");
  30              		.loc 1 36 2
  31              		.loc 1 36 9 is_stmt 0
  32 0010 17050000 		lla	a0,.LC0
  32      13050500 
  33 0018 97000000 		call	_Z7printlnPKc@plt
  33      E7800000 
  34              	.LVL0:
  37:src/main.cpp  **** 	TCB::dispatch();
  35              		.loc 1 37 2 is_stmt 1
  36              		.loc 1 37 15 is_stmt 0
  37 0020 97000000 		call	_ZN3TCB8dispatchEv@plt
  37      E7800000 
  38              	.LVL1:
  38:src/main.cpp  **** 	println("opet u niti 1");
  39              		.loc 1 38 2 is_stmt 1
  40              		.loc 1 38 9 is_stmt 0
  41 0028 17050000 		lla	a0,.LC1
  41      13050500 
  42 0030 97000000 		call	_Z7printlnPKc@plt
  42      E7800000 
  43              	.LVL2:
  39:src/main.cpp  **** }
  44              		.loc 1 39 1
  45 0038 83308100 		ld	ra,8(sp)
  46              		.cfi_restore 1
  47 003c 03340100 		ld	s0,0(sp)
  48              		.cfi_restore 8
  49              		.cfi_def_cfa 2, 16
  50 0040 13010101 		addi	sp,sp,16
  51              		.cfi_def_cfa_offset 0
  52 0044 67800000 		jr	ra
  53              		.cfi_endproc
  54              	.LFE40:
  56              		.section	.rodata.str1.8
  57 001e 0000     		.align	3
  58              	.LC2:
  59 0020 00       		.string	""
  60              		.text
  61              		.align	2
  62              		.globl	main
  64              	main:
  65              	.LFB41:
  40:src/main.cpp  **** 
  41:src/main.cpp  **** int main() {
GAS LISTING /tmp/ccwLvrbH.s 			page 3


  66              		.loc 1 41 12 is_stmt 1
  67              		.cfi_startproc
  68 0048 130101FE 		addi	sp,sp,-32
  69              		.cfi_def_cfa_offset 32
  70 004c 233C1100 		sd	ra,24(sp)
  71 0050 23388100 		sd	s0,16(sp)
  72              		.cfi_offset 1, -8
  73              		.cfi_offset 8, -16
  74 0054 13040102 		addi	s0,sp,32
  75              		.cfi_def_cfa 8, 0
  42:src/main.cpp  **** 	//zabrani prekide
  43:src/main.cpp  **** 	Riscv::mc_sstatus(Riscv::SSTATUS_SIE);
  76              		.loc 1 43 2
  77              	.LVL3:
  78              	.LBB10:
  79              	.LBB11:
  80              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 5/17/23.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJEKAT2023_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJEKAT2023_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** class Riscv {
  11:src/../h/Riscv.hpp **** public:
  12:src/../h/Riscv.hpp **** 
  13:src/../h/Riscv.hpp **** 	//stavljanje registara x3-x31 na stek
  14:src/../h/Riscv.hpp **** 	static void pushRegisters();    //implementacija u asm
  15:src/../h/Riscv.hpp **** 
  16:src/../h/Riscv.hpp **** 	//skidanje registara x3-x31 sa steka
  17:src/../h/Riscv.hpp **** 	static void popRegisters();     //implementacija u asm
  18:src/../h/Riscv.hpp **** 
  19:src/../h/Riscv.hpp **** 	//read scause
  20:src/../h/Riscv.hpp **** 	static uint64 r_scause();
  21:src/../h/Riscv.hpp **** 
  22:src/../h/Riscv.hpp **** 	//write scause
  23:src/../h/Riscv.hpp **** 	static void w_scause(uint64 scause);
  24:src/../h/Riscv.hpp **** 
  25:src/../h/Riscv.hpp **** 	//read sepc
  26:src/../h/Riscv.hpp **** 	static uint64 r_sepc();
  27:src/../h/Riscv.hpp **** 
  28:src/../h/Riscv.hpp **** 	//write sepc
  29:src/../h/Riscv.hpp **** 	static void w_sepc(uint64 sepc);
  30:src/../h/Riscv.hpp **** 
  31:src/../h/Riscv.hpp **** 	//read stvec
  32:src/../h/Riscv.hpp **** 	static uint64 r_stvec();
  33:src/../h/Riscv.hpp **** 
  34:src/../h/Riscv.hpp **** 	//write stvec
  35:src/../h/Riscv.hpp **** 	static void w_stvec(uint64 stvec);
  36:src/../h/Riscv.hpp **** 
  37:src/../h/Riscv.hpp **** 	enum BitMaskSip {
  38:src/../h/Riscv.hpp **** 		SIP_SSIP = (1 << 1),    //postoji zahtev za softverski prekid
  39:src/../h/Riscv.hpp **** 		SIP_STIP = (1 << 5),    //postoji prekid od tajmera
  40:src/../h/Riscv.hpp **** 		SIP_SEIP = (1 << 9)        //postoji zahtev za spoljasnji hardverski prekid
GAS LISTING /tmp/ccwLvrbH.s 			page 4


  41:src/../h/Riscv.hpp **** 	};
  42:src/../h/Riscv.hpp **** 
  43:src/../h/Riscv.hpp **** 	//mask set sip
  44:src/../h/Riscv.hpp **** 	static void ms_sip(uint64 mask);
  45:src/../h/Riscv.hpp **** 
  46:src/../h/Riscv.hpp **** 	//mask clear sip
  47:src/../h/Riscv.hpp **** 	static void mc_sip(uint64 mask);
  48:src/../h/Riscv.hpp **** 
  49:src/../h/Riscv.hpp **** 	//read sip
  50:src/../h/Riscv.hpp **** 	static uint64 r_sip();
  51:src/../h/Riscv.hpp **** 
  52:src/../h/Riscv.hpp **** 	//write sip
  53:src/../h/Riscv.hpp **** 	static void w_sip(uint64 sip);
  54:src/../h/Riscv.hpp **** 
  55:src/../h/Riscv.hpp **** 	enum BitMaskSstatus {
  56:src/../h/Riscv.hpp **** 		SSTATUS_SIE = (1 << 1),
  57:src/../h/Riscv.hpp **** 		SSTATUS_SPIE = (1 << 5),
  58:src/../h/Riscv.hpp **** 		SSTATUS_SPP = (1 << 8)
  59:src/../h/Riscv.hpp **** 	};
  60:src/../h/Riscv.hpp **** 
  61:src/../h/Riscv.hpp **** 	//mask set sstatus
  62:src/../h/Riscv.hpp **** 	static void ms_sstatus(uint64 mask);
  63:src/../h/Riscv.hpp **** 
  64:src/../h/Riscv.hpp **** 	//mask clear sstatus
  65:src/../h/Riscv.hpp **** 	static void mc_sstatus(uint64 mask);
  66:src/../h/Riscv.hpp **** 
  67:src/../h/Riscv.hpp **** 	//read sstatus
  68:src/../h/Riscv.hpp **** 	static uint64 r_sstatus();
  69:src/../h/Riscv.hpp **** 
  70:src/../h/Riscv.hpp **** 	//write sstatus
  71:src/../h/Riscv.hpp **** 	static void w_sstatus(uint64 sstatus);
  72:src/../h/Riscv.hpp **** 
  73:src/../h/Riscv.hpp **** 	//upisuje kod sistemskog poziva u registar a0
  74:src/../h/Riscv.hpp **** 	static void loadOpCode(uint64 opCode);
  75:src/../h/Riscv.hpp **** 
  76:src/../h/Riscv.hpp **** };
  77:src/../h/Riscv.hpp **** 
  78:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause() {
  79:src/../h/Riscv.hpp **** 	uint64 volatile scause;
  80:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[scause], scause": [scause] "=r"(scause));
  81:src/../h/Riscv.hpp **** 	return scause;
  82:src/../h/Riscv.hpp **** }
  83:src/../h/Riscv.hpp **** 
  84:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
  85:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw scause, %[scause]": :[scause] "r"(scause));
  86:src/../h/Riscv.hpp **** }
  87:src/../h/Riscv.hpp **** 
  88:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc() {
  89:src/../h/Riscv.hpp **** 	uint64 volatile sepc;
  90:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[sepc], sepc": [sepc] "=r"(sepc));
  91:src/../h/Riscv.hpp **** 	return sepc;
  92:src/../h/Riscv.hpp **** }
  93:src/../h/Riscv.hpp **** 
  94:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
  95:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
  96:src/../h/Riscv.hpp **** }
  97:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/ccwLvrbH.s 			page 5


  98:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec() {
  99:src/../h/Riscv.hpp **** 	uint64 volatile stvec;
 100:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[stvec], stvec": [stvec] "=r"(stvec));
 101:src/../h/Riscv.hpp **** 	return stvec;
 102:src/../h/Riscv.hpp **** }
 103:src/../h/Riscv.hpp **** 
 104:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 105:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw stvec, %[stvec]": :[stvec] "r"(stvec));
 106:src/../h/Riscv.hpp **** }
 107:src/../h/Riscv.hpp **** 
 108:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 109:src/../h/Riscv.hpp **** 	__asm__ volatile("csrs sip, %[mask]": :[mask] "r"(mask));
 110:src/../h/Riscv.hpp **** }
 111:src/../h/Riscv.hpp **** 
 112:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 113:src/../h/Riscv.hpp **** 	__asm__ volatile("csrc sip, %[mask]": :[mask] "r"(mask));
 114:src/../h/Riscv.hpp **** }
 115:src/../h/Riscv.hpp **** 
 116:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip() {
 117:src/../h/Riscv.hpp **** 	uint64 volatile sip;
 118:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[sip], sip": [sip] "=r"(sip));
 119:src/../h/Riscv.hpp **** 	return sip;
 120:src/../h/Riscv.hpp **** }
 121:src/../h/Riscv.hpp **** 
 122:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip) {
 123:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw sip, %[sip]": :[sip] "r"(sip));
 124:src/../h/Riscv.hpp **** }
 125:src/../h/Riscv.hpp **** 
 126:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
 127:src/../h/Riscv.hpp **** 	__asm__ volatile("csrs sstatus, %[mask]": :[mask] "r"(mask));
 128:src/../h/Riscv.hpp **** }
 129:src/../h/Riscv.hpp **** 
 130:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask) {
 131:src/../h/Riscv.hpp **** 	__asm__ volatile("csrc sstatus, %[mask]": :[mask] "r"(mask));
  81              		.loc 2 131 2
  82              		.loc 2 131 62 is_stmt 0
  83 0058 93072000 		li	a5,2
  84              	#APP
  85              	# 131 "src/../h/Riscv.hpp" 1
 132              	}
  86              		csrc sstatus, a5
  87              	# 0 "" 2
  88              	.LVL4:
  89              	#NO_APP
  90              	.LBE11:
  91              	.LBE10:
  44:src/main.cpp  **** 	//postavi adresu prekidne rutine u stvec
  45:src/main.cpp  **** 	Riscv::w_stvec((uint64)&interruptHandler);
  92              		.loc 1 45 2 is_stmt 1
  93              		.loc 1 45 16 is_stmt 0
  94 0060 17070000 		la	a4,interruptHandler
  94      03370700 
  95              	.LVL5:
  96              	.LBB12:
  97              	.LBB13:
 105:src/../h/Riscv.hpp **** }
  98              		.loc 2 105 2 is_stmt 1
GAS LISTING /tmp/ccwLvrbH.s 			page 6


 105:src/../h/Riscv.hpp **** }
  99              		.loc 2 105 63 is_stmt 0
 100              	#APP
 101              	# 105 "src/../h/Riscv.hpp" 1
 102              		csrw stvec, a4
 103              	# 0 "" 2
 104              	.LVL6:
 105              	#NO_APP
 106              	.LBE13:
 107              	.LBE12:
  46:src/main.cpp  **** 	//omoguci prekide
  47:src/main.cpp  **** 	Riscv::ms_sstatus(Riscv::SSTATUS_SIE);
 108              		.loc 1 47 2 is_stmt 1
 109              	.LBB14:
 110              	.LBB15:
 127:src/../h/Riscv.hpp **** }
 111              		.loc 2 127 2
 127:src/../h/Riscv.hpp **** }
 112              		.loc 2 127 62 is_stmt 0
 113              	#APP
 114              	# 127 "src/../h/Riscv.hpp" 1
 115              		csrs sstatus, a5
 116              	# 0 "" 2
 117              	.LVL7:
 118              	#NO_APP
 119              	.LBE15:
 120              	.LBE14:
  48:src/main.cpp  **** 
  49:src/main.cpp  **** 	//testiranje alociranja memorije
  50:src/main.cpp  **** 	//testMemory();
  51:src/main.cpp  **** //	uint64* ptr = new uint64;
  52:src/main.cpp  **** //	*ptr = 6;
  53:src/main.cpp  **** //	printInteger(*ptr);
  54:src/main.cpp  **** 
  55:src/main.cpp  **** 	//testiranje liste
  56:src/main.cpp  **** //	List<uint64>* lista = new List<uint64>();
  57:src/main.cpp  **** //	uint64 num = 10;
  58:src/main.cpp  **** //	lista->addFirst(&num);
  59:src/main.cpp  **** //	println("");
  60:src/main.cpp  **** //	printInteger(*(lista->peekFirst()));
  61:src/main.cpp  **** //	delete lista;
  62:src/main.cpp  **** //	println("");
  63:src/main.cpp  **** 
  64:src/main.cpp  **** 	//testiranje kreiranja niti
  65:src/main.cpp  **** 	thread_t glavnaNit;
 121              		.loc 1 65 2 is_stmt 1
  66:src/main.cpp  **** 	thread_t nit1;
 122              		.loc 1 66 2
  67:src/main.cpp  **** 	thread_create(&glavnaNit, nullptr, nullptr);
 123              		.loc 1 67 2
 124              		.loc 1 67 15 is_stmt 0
 125 0070 13060000 		li	a2,0
 126 0074 93050000 		li	a1,0
 127 0078 130584FE 		addi	a0,s0,-24
 128 007c 97000000 		call	_Z13thread_createPP3TCBPFvPvES2_@plt
 128      E7800000 
 129              	.LVL8:
GAS LISTING /tmp/ccwLvrbH.s 			page 7


  68:src/main.cpp  **** 	TCB::running = glavnaNit;
 130              		.loc 1 68 2 is_stmt 1
 131              		.loc 1 68 15 is_stmt 0
 132 0084 97070000 		la	a5,_ZN3TCB7runningE
 132      83B70700 
 133 008c 033784FE 		ld	a4,-24(s0)
 134 0090 23B0E700 		sd	a4,0(a5)
  69:src/main.cpp  **** 	thread_create(&nit1, nit1f, nullptr);
 135              		.loc 1 69 2 is_stmt 1
 136              		.loc 1 69 15 is_stmt 0
 137 0094 13060000 		li	a2,0
 138 0098 97050000 		lla	a1,_Z5nit1fPv
 138      93850500 
 139 00a0 130504FE 		addi	a0,s0,-32
 140 00a4 97000000 		call	_Z13thread_createPP3TCBPFvPvES2_@plt
 140      E7800000 
 141              	.LVL9:
 142              	.L5:
  70:src/main.cpp  **** 	while(!nit1->isFinished()){
 143              		.loc 1 70 2 is_stmt 1
 144              		.loc 1 70 8
 145              		.loc 1 70 25 is_stmt 0
 146 00ac 833704FE 		ld	a5,-32(s0)
 147              	.LVL10:
 148              	.LBB16:
 149              	.LBB17:
 150              		.file 3 "src/../h/TCB.hpp"
   1:src/../h/TCB.hpp **** //
   2:src/../h/TCB.hpp **** // Created by os on 5/23/23.
   3:src/../h/TCB.hpp **** //
   4:src/../h/TCB.hpp **** 
   5:src/../h/TCB.hpp **** #ifndef PROJEKAT2023_TCB_HPP
   6:src/../h/TCB.hpp **** #define PROJEKAT2023_TCB_HPP
   7:src/../h/TCB.hpp **** 
   8:src/../h/TCB.hpp **** #include "../lib/hw.h"
   9:src/../h/TCB.hpp **** //#include "../h/Scheduler.hpp"
  10:src/../h/TCB.hpp **** 
  11:src/../h/TCB.hpp **** class TCB {
  12:src/../h/TCB.hpp **** public:
  13:src/../h/TCB.hpp **** 	using Body = void (*)(void*);
  14:src/../h/TCB.hpp **** 
  15:src/../h/TCB.hpp **** 	static TCB* createThread(Body function, void* args, uint64* stack);
  16:src/../h/TCB.hpp **** 
  17:src/../h/TCB.hpp **** 	bool isFinished() { return finished; }
 151              		.loc 3 17 22 is_stmt 1
 152              		.loc 3 17 29 is_stmt 0
 153 00b0 83C70703 		lbu	a5,48(a5)
 154              	.LVL11:
 155              	.LBE17:
 156              	.LBE16:
 157              		.loc 1 70 8
 158 00b4 63980700 		bnez	a5,.L4
  71:src/main.cpp  **** 		glavnaNit->dispatch();
 159              		.loc 1 71 3 is_stmt 1
 160              		.loc 1 71 22 is_stmt 0
 161 00b8 97000000 		call	_ZN3TCB8dispatchEv@plt
 161      E7800000 
GAS LISTING /tmp/ccwLvrbH.s 			page 8


 162              	.LVL12:
 163 00c0 6FF0DFFE 		j	.L5
 164              	.L4:
  72:src/main.cpp  **** 	}
  73:src/main.cpp  **** 	println("");
 165              		.loc 1 73 2 is_stmt 1
 166              		.loc 1 73 9 is_stmt 0
 167 00c4 17050000 		lla	a0,.LC2
 167      13050500 
 168 00cc 97000000 		call	_Z7printlnPKc@plt
 168      E7800000 
 169              	.LVL13:
  74:src/main.cpp  **** 	return 0;
 170              		.loc 1 74 2 is_stmt 1
  75:src/main.cpp  **** }...
 171              		.loc 1 75 1 is_stmt 0
 172 00d4 13050000 		li	a0,0
 173 00d8 83308101 		ld	ra,24(sp)
 174              		.cfi_restore 1
 175 00dc 03340101 		ld	s0,16(sp)
 176              		.cfi_restore 8
 177              		.cfi_def_cfa 2, 32
 178 00e0 13010102 		addi	sp,sp,32
 179              		.cfi_def_cfa_offset 0
 180 00e4 67800000 		jr	ra
 181              		.cfi_endproc
 182              	.LFE41:
 184              	.Letext0:
 185              		.file 4 "src/../lib/hw.h"
 186              		.file 5 "src/../h/syscall_c.hpp"
 187              		.file 6 "src/../h/helper.hpp"
GAS LISTING /tmp/ccwLvrbH.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/ccwLvrbH.s:17     .text:0000000000000000 _Z5nit1fPv
     /tmp/ccwLvrbH.s:21     .text:0000000000000000 .L0 
     /tmp/ccwLvrbH.s:22     .text:0000000000000000 .L0 
     /tmp/ccwLvrbH.s:23     .text:0000000000000004 .L0 
     /tmp/ccwLvrbH.s:26     .text:000000000000000c .L0 
     /tmp/ccwLvrbH.s:27     .text:000000000000000c .L0 
     /tmp/ccwLvrbH.s:29     .text:0000000000000010 .L0 
     /tmp/ccwLvrbH.s:31     .text:0000000000000010 .L0 
     /tmp/ccwLvrbH.s:32     .text:0000000000000010 .L0 
     /tmp/ccwLvrbH.s:36     .text:0000000000000020 .L0 
     /tmp/ccwLvrbH.s:37     .text:0000000000000020 .L0 
     /tmp/ccwLvrbH.s:40     .text:0000000000000028 .L0 
     /tmp/ccwLvrbH.s:41     .text:0000000000000028 .L0 
     /tmp/ccwLvrbH.s:45     .text:0000000000000038 .L0 
     /tmp/ccwLvrbH.s:46     .text:000000000000003c .L0 
     /tmp/ccwLvrbH.s:48     .text:0000000000000040 .L0 
     /tmp/ccwLvrbH.s:49     .text:0000000000000040 .L0 
     /tmp/ccwLvrbH.s:51     .text:0000000000000044 .L0 
     /tmp/ccwLvrbH.s:53     .text:0000000000000048 .L0 
     /tmp/ccwLvrbH.s:64     .text:0000000000000048 main
     /tmp/ccwLvrbH.s:67     .text:0000000000000048 .L0 
     /tmp/ccwLvrbH.s:68     .text:0000000000000048 .L0 
     /tmp/ccwLvrbH.s:69     .text:000000000000004c .L0 
     /tmp/ccwLvrbH.s:72     .text:0000000000000054 .L0 
     /tmp/ccwLvrbH.s:73     .text:0000000000000054 .L0 
     /tmp/ccwLvrbH.s:75     .text:0000000000000058 .L0 
     /tmp/ccwLvrbH.s:81     .text:0000000000000058 .L0 
     /tmp/ccwLvrbH.s:82     .text:0000000000000058 .L0 
     /tmp/ccwLvrbH.s:83     .text:0000000000000058 .L0 
     /tmp/ccwLvrbH.s:93     .text:0000000000000060 .L0 
     /tmp/ccwLvrbH.s:94     .text:0000000000000060 .L0 
     /tmp/ccwLvrbH.s:99     .text:0000000000000068 .L0 
  src/../h/Riscv.hpp:105    .text:0000000000000068 .L0 
     /tmp/ccwLvrbH.s:111    .text:000000000000006c .L0 
     /tmp/ccwLvrbH.s:112    .text:000000000000006c .L0 
  src/../h/Riscv.hpp:127    .text:000000000000006c .L0 
     /tmp/ccwLvrbH.s:122    .text:0000000000000070 .L0 
     /tmp/ccwLvrbH.s:123    .text:0000000000000070 .L0 
     /tmp/ccwLvrbH.s:124    .text:0000000000000070 .L0 
     /tmp/ccwLvrbH.s:125    .text:0000000000000070 .L0 
     /tmp/ccwLvrbH.s:131    .text:0000000000000084 .L0 
     /tmp/ccwLvrbH.s:132    .text:0000000000000084 .L0 
     /tmp/ccwLvrbH.s:136    .text:0000000000000094 .L0 
     /tmp/ccwLvrbH.s:137    .text:0000000000000094 .L0 
     /tmp/ccwLvrbH.s:144    .text:00000000000000ac .L0 
     /tmp/ccwLvrbH.s:145    .text:00000000000000ac .L0 
     /tmp/ccwLvrbH.s:146    .text:00000000000000ac .L0 
     /tmp/ccwLvrbH.s:152    .text:00000000000000b0 .L0 
     /tmp/ccwLvrbH.s:153    .text:00000000000000b0 .L0 
     /tmp/ccwLvrbH.s:158    .text:00000000000000b4 .L0 
     /tmp/ccwLvrbH.s:160    .text:00000000000000b8 .L0 
     /tmp/ccwLvrbH.s:161    .text:00000000000000b8 .L0 
     /tmp/ccwLvrbH.s:166    .text:00000000000000c4 .L0 
     /tmp/ccwLvrbH.s:167    .text:00000000000000c4 .L0 
     /tmp/ccwLvrbH.s:171    .text:00000000000000d4 .L0 
GAS LISTING /tmp/ccwLvrbH.s 			page 10


     /tmp/ccwLvrbH.s:172    .text:00000000000000d4 .L0 
     /tmp/ccwLvrbH.s:174    .text:00000000000000dc .L0 
     /tmp/ccwLvrbH.s:176    .text:00000000000000e0 .L0 
     /tmp/ccwLvrbH.s:177    .text:00000000000000e0 .L0 
     /tmp/ccwLvrbH.s:179    .text:00000000000000e4 .L0 
     /tmp/ccwLvrbH.s:181    .text:00000000000000e8 .L0 
     /tmp/ccwLvrbH.s:188    .text:00000000000000e8 .L0 
     /tmp/ccwLvrbH.s:8      .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccwLvrbH.s:32     .text:0000000000000010 .L0 
     /tmp/ccwLvrbH.s:11     .rodata.str1.8:0000000000000010 .LC1
     /tmp/ccwLvrbH.s:41     .text:0000000000000028 .L0 
     /tmp/ccwLvrbH.s:94     .text:0000000000000060 .L0 
     /tmp/ccwLvrbH.s:132    .text:0000000000000084 .L0 
     /tmp/ccwLvrbH.s:138    .text:0000000000000098 .L0 
     /tmp/ccwLvrbH.s:58     .rodata.str1.8:0000000000000020 .LC2
     /tmp/ccwLvrbH.s:167    .text:00000000000000c4 .L0 
     /tmp/ccwLvrbH.s:164    .text:00000000000000c4 .L4
     /tmp/ccwLvrbH.s:142    .text:00000000000000ac .L5
     /tmp/ccwLvrbH.s:1058   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccwLvrbH.s:2064   .debug_str:0000000000000530 .LASF101
     /tmp/ccwLvrbH.s:1976   .debug_str:00000000000002c6 .LASF102
     /tmp/ccwLvrbH.s:1952   .debug_str:00000000000001ee .LASF103
     /tmp/ccwLvrbH.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccwLvrbH.s:184    .text:00000000000000e8 .Letext0
     /tmp/ccwLvrbH.s:1872   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccwLvrbH.s:2000   .debug_str:0000000000000376 .LASF0
     /tmp/ccwLvrbH.s:2014   .debug_str:00000000000003ae .LASF1
     /tmp/ccwLvrbH.s:1990   .debug_str:000000000000032f .LASF2
     /tmp/ccwLvrbH.s:1964   .debug_str:000000000000028b .LASF4
     /tmp/ccwLvrbH.s:2048   .debug_str:00000000000004b2 .LASF3
     /tmp/ccwLvrbH.s:1896   .debug_str:0000000000000079 .LASF5
     /tmp/ccwLvrbH.s:1924   .debug_str:000000000000012e .LASF6
     /tmp/ccwLvrbH.s:2018   .debug_str:00000000000003e2 .LASF7
     /tmp/ccwLvrbH.s:1998   .debug_str:0000000000000363 .LASF8
     /tmp/ccwLvrbH.s:2074   .debug_str:0000000000000634 .LASF9
     /tmp/ccwLvrbH.s:1950   .debug_str:00000000000001e0 .LASF10
     /tmp/ccwLvrbH.s:2030   .debug_str:0000000000000437 .LASF11
     /tmp/ccwLvrbH.s:2066   .debug_str:00000000000005f4 .LASF12
     /tmp/ccwLvrbH.s:1900   .debug_str:000000000000008c .LASF13
     /tmp/ccwLvrbH.s:1882   .debug_str:0000000000000033 .LASF14
     /tmp/ccwLvrbH.s:1906   .debug_str:00000000000000ab .LASF15
     /tmp/ccwLvrbH.s:2042   .debug_str:000000000000047e .LASF16
     /tmp/ccwLvrbH.s:1916   .debug_str:00000000000000de .LASF17
     /tmp/ccwLvrbH.s:2012   .debug_str:00000000000003a8 .LASF54
     /tmp/ccwLvrbH.s:1920   .debug_str:0000000000000108 .LASF104
     /tmp/ccwLvrbH.s:1912   .debug_str:00000000000000c7 .LASF18
     /tmp/ccwLvrbH.s:1978   .debug_str:00000000000002d3 .LASF19
     /tmp/ccwLvrbH.s:1898   .debug_str:0000000000000080 .LASF20
     /tmp/ccwLvrbH.s:1894   .debug_str:000000000000006b .LASF21
     /tmp/ccwLvrbH.s:1932   .debug_str:0000000000000161 .LASF23
     /tmp/ccwLvrbH.s:2058   .debug_str:00000000000004fe .LASF22
     /tmp/ccwLvrbH.s:1880   .debug_str:0000000000000019 .LASF24
     /tmp/ccwLvrbH.s:1884   .debug_str:0000000000000043 .LASF25
     /tmp/ccwLvrbH.s:2056   .debug_str:00000000000004e9 .LASF27
     /tmp/ccwLvrbH.s:1930   .debug_str:0000000000000158 .LASF29
     /tmp/ccwLvrbH.s:1928   .debug_str:0000000000000143 .LASF31
     /tmp/ccwLvrbH.s:2050   .debug_str:00000000000004c4 .LASF26
GAS LISTING /tmp/ccwLvrbH.s 			page 11


     /tmp/ccwLvrbH.s:2034   .debug_str:000000000000044e .LASF28
     /tmp/ccwLvrbH.s:2040   .debug_str:0000000000000477 .LASF30
     /tmp/ccwLvrbH.s:2060   .debug_str:000000000000050b .LASF32
     /tmp/ccwLvrbH.s:1942   .debug_str:00000000000001af .LASF33
     /tmp/ccwLvrbH.s:1918   .debug_str:00000000000000f4 .LASF34
     /tmp/ccwLvrbH.s:1878   .debug_str:0000000000000011 .LASF35
     /tmp/ccwLvrbH.s:1956   .debug_str:0000000000000222 .LASF36
     /tmp/ccwLvrbH.s:2002   .debug_str:0000000000000383 .LASF37
     /tmp/ccwLvrbH.s:2084   .debug_str:000000000000067a .LASF38
     /tmp/ccwLvrbH.s:1892   .debug_str:0000000000000064 .LASF39
     /tmp/ccwLvrbH.s:1940   .debug_str:000000000000019c .LASF40
     /tmp/ccwLvrbH.s:1946   .debug_str:00000000000001cf .LASF41
     /tmp/ccwLvrbH.s:2062   .debug_str:000000000000051e .LASF42
     /tmp/ccwLvrbH.s:1890   .debug_str:000000000000005e .LASF43
     /tmp/ccwLvrbH.s:2098   .debug_str:00000000000006f5 .LASF44
     /tmp/ccwLvrbH.s:2090   .debug_str:00000000000006c5 .LASF45
     /tmp/ccwLvrbH.s:2046   .debug_str:000000000000049a .LASF46
     /tmp/ccwLvrbH.s:1970   .debug_str:00000000000002a6 .LASF47
     /tmp/ccwLvrbH.s:1980   .debug_str:00000000000002e0 .LASF48
     /tmp/ccwLvrbH.s:1904   .debug_str:00000000000000a1 .LASF49
     /tmp/ccwLvrbH.s:1960   .debug_str:000000000000024d .LASF50
     /tmp/ccwLvrbH.s:1994   .debug_str:0000000000000349 .LASF51
     /tmp/ccwLvrbH.s:1954   .debug_str:000000000000020c .LASF52
     /tmp/ccwLvrbH.s:1908   .debug_str:00000000000000b7 .LASF105
     /tmp/ccwLvrbH.s:2092   .debug_str:00000000000006d0 .LASF106
     /tmp/ccwLvrbH.s:1874   .debug_str:0000000000000000 .LASF53
     /tmp/ccwLvrbH.s:1888   .debug_str:0000000000000056 .LASF107
     /tmp/ccwLvrbH.s:1974   .debug_str:00000000000002b9 .LASF55
     /tmp/ccwLvrbH.s:2086   .debug_str:000000000000068d .LASF57
     /tmp/ccwLvrbH.s:2038   .debug_str:0000000000000472 .LASF108
     /tmp/ccwLvrbH.s:2020   .debug_str:00000000000003f5 .LASF59
     /tmp/ccwLvrbH.s:1982   .debug_str:00000000000002f8 .LASF61
     /tmp/ccwLvrbH.s:1992   .debug_str:000000000000033d .LASF56
     /tmp/ccwLvrbH.s:1922   .debug_str:0000000000000117 .LASF58
     /tmp/ccwLvrbH.s:1886   .debug_str:000000000000004c .LASF60
     /tmp/ccwLvrbH.s:2026   .debug_str:000000000000040b .LASF62
     /tmp/ccwLvrbH.s:1966   .debug_str:0000000000000292 .LASF63
     /tmp/ccwLvrbH.s:2070   .debug_str:0000000000000611 .LASF64
     /tmp/ccwLvrbH.s:1986   .debug_str:0000000000000313 .LASF65
     /tmp/ccwLvrbH.s:2028   .debug_str:000000000000041f .LASF66
     /tmp/ccwLvrbH.s:2072   .debug_str:0000000000000627 .LASF67
     /tmp/ccwLvrbH.s:2076   .debug_str:0000000000000644 .LASF68
     /tmp/ccwLvrbH.s:2054   .debug_str:00000000000004dd .LASF69
     /tmp/ccwLvrbH.s:1958   .debug_str:0000000000000236 .LASF70
     /tmp/ccwLvrbH.s:1948   .debug_str:00000000000001d5 .LASF71
     /tmp/ccwLvrbH.s:1944   .debug_str:00000000000001b7 .LASF72
     /tmp/ccwLvrbH.s:2044   .debug_str:0000000000000494 .LASF73
     /tmp/ccwLvrbH.s:1996   .debug_str:0000000000000353 .LASF74
     /tmp/ccwLvrbH.s:2004   .debug_str:000000000000038a .LASF75
     /tmp/ccwLvrbH.s:1936   .debug_str:0000000000000184 .LASF76
     /tmp/ccwLvrbH.s:2096   .debug_str:00000000000006ed .LASF77
     /tmp/ccwLvrbH.s:2052   .debug_str:00000000000004cb .LASF78
     /tmp/ccwLvrbH.s:1934   .debug_str:000000000000017c .LASF79
     /tmp/ccwLvrbH.s:2036   .debug_str:0000000000000461 .LASF80
     /tmp/ccwLvrbH.s:1972   .debug_str:00000000000002b1 .LASF81
     /tmp/ccwLvrbH.s:1988   .debug_str:0000000000000320 .LASF82
     /tmp/ccwLvrbH.s:2006   .debug_str:0000000000000393 .LASF83
GAS LISTING /tmp/ccwLvrbH.s 			page 12


     /tmp/ccwLvrbH.s:2008   .debug_str:0000000000000399 .LASF84
     /tmp/ccwLvrbH.s:2010   .debug_str:000000000000039e .LASF85
     /tmp/ccwLvrbH.s:1968   .debug_str:000000000000029d .LASF86
     /tmp/ccwLvrbH.s:1876   .debug_str:0000000000000009 .LASF87
     /tmp/ccwLvrbH.s:2088   .debug_str:00000000000006af .LASF109
     /tmp/ccwLvrbH.s:2080   .debug_str:0000000000000662 .LASF110
     /tmp/ccwLvrbH.s:1962   .debug_str:0000000000000263 .LASF111
     /tmp/ccwLvrbH.s:2022   .debug_str:0000000000000400 .LASF88
     /tmp/ccwLvrbH.s:1938   .debug_str:0000000000000197 .LASF89
     /tmp/ccwLvrbH.s:1902   .debug_str:000000000000009c .LASF90
     /tmp/ccwLvrbH.s:65     .text:0000000000000048 .LFB41
     /tmp/ccwLvrbH.s:182    .text:00000000000000e8 .LFE41
     /tmp/ccwLvrbH.s:2082   .debug_str:0000000000000670 .LASF91
     /tmp/ccwLvrbH.s:1910   .debug_str:00000000000000c2 .LASF92
     /tmp/ccwLvrbH.s:78     .text:0000000000000058 .LBB10
     /tmp/ccwLvrbH.s:91     .text:0000000000000060 .LBE10
     /tmp/ccwLvrbH.s:1836   .debug_loc:0000000000000000 .LLST0
     /tmp/ccwLvrbH.s:96     .text:0000000000000068 .LBB12
     /tmp/ccwLvrbH.s:107    .text:000000000000006c .LBE12
     /tmp/ccwLvrbH.s:109    .text:000000000000006c .LBB14
     /tmp/ccwLvrbH.s:120    .text:0000000000000070 .LBE14
     /tmp/ccwLvrbH.s:1844   .debug_loc:0000000000000024 .LLST1
     /tmp/ccwLvrbH.s:148    .text:00000000000000b0 .LBB16
     /tmp/ccwLvrbH.s:156    .text:00000000000000b4 .LBE16
     /tmp/ccwLvrbH.s:1852   .debug_loc:0000000000000048 .LLST2
     /tmp/ccwLvrbH.s:129    .text:0000000000000084 .LVL8
     /tmp/ccwLvrbH.s:141    .text:00000000000000ac .LVL9
     /tmp/ccwLvrbH.s:162    .text:00000000000000c0 .LVL12
     /tmp/ccwLvrbH.s:169    .text:00000000000000d4 .LVL13
     /tmp/ccwLvrbH.s:2078   .debug_str:000000000000065c .LASF93
     /tmp/ccwLvrbH.s:1914   .debug_str:00000000000000d3 .LASF94
     /tmp/ccwLvrbH.s:18     .text:0000000000000000 .LFB40
     /tmp/ccwLvrbH.s:54     .text:0000000000000048 .LFE40
     /tmp/ccwLvrbH.s:34     .text:0000000000000020 .LVL0
     /tmp/ccwLvrbH.s:38     .text:0000000000000028 .LVL1
     /tmp/ccwLvrbH.s:43     .text:0000000000000038 .LVL2
     /tmp/ccwLvrbH.s:1984   .debug_str:000000000000030e .LASF112
     /tmp/ccwLvrbH.s:2094   .debug_str:00000000000006e8 .LASF95
     /tmp/ccwLvrbH.s:2024   .debug_str:0000000000000405 .LASF96
     /tmp/ccwLvrbH.s:2016   .debug_str:00000000000003c1 .LASF97
     /tmp/ccwLvrbH.s:1926   .debug_str:0000000000000135 .LASF99
     /tmp/ccwLvrbH.s:2068   .debug_str:0000000000000603 .LASF98
     /tmp/ccwLvrbH.s:2032   .debug_str:0000000000000446 .LASF100
     /tmp/ccwLvrbH.s:77     .text:0000000000000058 .LVL3
     /tmp/ccwLvrbH.s:88     .text:0000000000000060 .LVL4
     /tmp/ccwLvrbH.s:104    .text:000000000000006c .LVL6
     /tmp/ccwLvrbH.s:117    .text:0000000000000070 .LVL7
     /tmp/ccwLvrbH.s:147    .text:00000000000000b0 .LVL10
     /tmp/ccwLvrbH.s:154    .text:00000000000000b4 .LVL11
     /tmp/ccwLvrbH.s:189    .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
_Z7printlnPKc
_ZN3TCB8dispatchEv
interruptHandler
_Z13thread_createPP3TCBPFvPvES2_
_ZN3TCB7runningE
GAS LISTING /tmp/ccwLvrbH.s 			page 13


