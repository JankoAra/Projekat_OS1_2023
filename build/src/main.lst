GAS LISTING /tmp/cc1cxfAL.s 			page 1


   1              		.file	"main.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	main
   9              	main:
  10              	.LFB44:
  11              		.file 1 "src/main.cpp"
   1:src/main.cpp  **** #include "../lib/console.h"
   2:src/main.cpp  **** #include "../lib/hw.h"
   3:src/main.cpp  **** #include "../h/helper.hpp"
   4:src/main.cpp  **** #include "../h/Riscv.hpp"
   5:src/main.cpp  **** #include "../h/syscall_c.hpp"
   6:src/main.cpp  **** #include "../h/syscall_cpp.hpp"
   7:src/main.cpp  **** #include "../h/List.hpp"
   8:src/main.cpp  **** //#include "../h/MemoryAllocator.hpp"
   9:src/main.cpp  **** #include "../h/TCB.hpp"
  10:src/main.cpp  **** #include "../h/ThreadQueue.hpp"
  11:src/main.cpp  **** //#include "../h/KSem.hpp"
  12:src/main.cpp  **** 
  13:src/main.cpp  **** #include "../test/printing.hpp"
  14:src/main.cpp  **** 
  15:src/main.cpp  **** 
  16:src/main.cpp  **** extern "C" void interruptHandler();
  17:src/main.cpp  **** void userMain();
  18:src/main.cpp  **** 
  19:src/main.cpp  **** void testMemory();
  20:src/main.cpp  **** 
  21:src/main.cpp  **** void nit1f(void*);
  22:src/main.cpp  **** 
  23:src/main.cpp  **** void nit2f(void* arg2);
  24:src/main.cpp  **** 
  25:src/main.cpp  **** void nit3f(void*);
  26:src/main.cpp  **** 
  27:src/main.cpp  **** Semaphore* semA;
  28:src/main.cpp  **** 
  29:src/main.cpp  **** void idle(void*) {
  30:src/main.cpp  **** 	while (1) {}
  31:src/main.cpp  **** }
  32:src/main.cpp  **** 
  33:src/main.cpp  **** #pragma GCC optimize("O0")
  34:src/main.cpp  **** 
  35:src/main.cpp  **** int main() {
  12              		.loc 1 35 12
  13              		.cfi_startproc
  14              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
  15              		.cfi_lsda 0x1b,.LLSDA44
  16 0000 130101FD 		addi	sp,sp,-48
  17              		.cfi_def_cfa_offset 48
  18 0004 23341102 		sd	ra,40(sp)
  19 0008 23308102 		sd	s0,32(sp)
  20 000c 233C9100 		sd	s1,24(sp)
  21 0010 23382101 		sd	s2,16(sp)
  22              		.cfi_offset 1, -8
  23              		.cfi_offset 8, -16
GAS LISTING /tmp/cc1cxfAL.s 			page 2


  24              		.cfi_offset 9, -24
  25              		.cfi_offset 18, -32
  26 0014 13040103 		addi	s0,sp,48
  27              		.cfi_def_cfa 8, 0
  36:src/main.cpp  **** 	//postavi adresu prekidne rutine u stvec
  37:src/main.cpp  **** 	Riscv::w_stvec((uint64)&interruptHandler);
  28              		.loc 1 37 2
  29              		.loc 1 37 16 is_stmt 0
  30 0018 97070000 		la	a5,interruptHandler
  30      83B70700 
  31 0020 13850700 		mv	a0,a5
  32 0024 97000000 		call	_ZN5Riscv7w_stvecEm
  32      E7800000 
  33              	.LVL0:
  38:src/main.cpp  **** 
  39:src/main.cpp  **** 	//sem_open(&semA, 0);
  40:src/main.cpp  **** 	semA = new Semaphore(1);
  34              		.loc 1 40 2 is_stmt 1
  35              		.loc 1 40 24 is_stmt 0
  36 002c 13050001 		li	a0,16
  37              	.LEHB0:
  38 0030 97000000 		call	_Znwm@plt
  38      E7800000 
  39              	.LVL1:
  40              	.LEHE0:
  41 0038 93070500 		mv	a5,a0
  42 003c 93840700 		mv	s1,a5
  43 0040 93051000 		li	a1,1
  44 0044 13850400 		mv	a0,s1
  45              	.LEHB1:
  46 0048 97000000 		call	_ZN9SemaphoreC1Ej@plt
  46      E7800000 
  47              	.LVL2:
  48              	.LEHE1:
  49              		.loc 1 40 7 discriminator 3
  50 0050 97070000 		lla	a5,semA
  50      93870700 
  51 0058 23B09700 		sd	s1,0(a5)
  41:src/main.cpp  **** 
  42:src/main.cpp  **** 
  43:src/main.cpp  **** 
  44:src/main.cpp  **** 
  45:src/main.cpp  **** 	//testiranje alociranja memorije
  46:src/main.cpp  **** 	//testMemory();
  47:src/main.cpp  **** //	uint64* ptr = new uint64;
  48:src/main.cpp  **** //	*ptr = 6;
  49:src/main.cpp  **** //	printInteger(*ptr);
  50:src/main.cpp  **** 
  51:src/main.cpp  **** 	//testiranje liste
  52:src/main.cpp  **** //	List<uint64>* lista = new List<uint64>();
  53:src/main.cpp  **** //	uint64 num = 10;
  54:src/main.cpp  **** //	lista->addFirst(&num);
  55:src/main.cpp  **** //	println("");
  56:src/main.cpp  **** //	printInteger(*(lista->peekFirst()));
  57:src/main.cpp  **** //	delete lista;
  58:src/main.cpp  **** //	println("");
  59:src/main.cpp  **** 
GAS LISTING /tmp/cc1cxfAL.s 			page 3


  60:src/main.cpp  **** 	//testiranje kreiranja niti
  61:src/main.cpp  **** //	thread_t glavnaNit = nullptr;
  62:src/main.cpp  **** //	thread_t nit1 = nullptr;
  63:src/main.cpp  **** //	thread_t nit2 = nullptr;
  64:src/main.cpp  **** //	thread_t nit3 = nullptr;
  65:src/main.cpp  **** //	thread_t idleNit = nullptr;
  66:src/main.cpp  **** //	thread_create(&glavnaNit, nullptr, nullptr);
  67:src/main.cpp  **** //	TCB::running = glavnaNit;
  68:src/main.cpp  **** //	uint64* arg = new uint64;
  69:src/main.cpp  **** //	*arg = 666;
  70:src/main.cpp  **** //	ThreadQueue* q = new ThreadQueue();
  71:src/main.cpp  **** //	q->putLast(nit3);
  72:src/main.cpp  **** //	q->putLast(nit2);
  73:src/main.cpp  **** //	q->putLast(nit1);
  74:src/main.cpp  **** //	thread_t nitred3 = q->getFirst();
  75:src/main.cpp  **** //	thread_t nitred2 = q->getFirst();
  76:src/main.cpp  **** //	thread_t nitred1 = q->getFirst();
  77:src/main.cpp  **** //	thread_create(&idleNit, idle, nullptr);
  78:src/main.cpp  **** //	thread_create(&nitred1, nit1f, nullptr);
  79:src/main.cpp  **** //	thread_create(&nitred2, nit2f, arg);
  80:src/main.cpp  **** //	thread_create(&nitred3, nit3f, nullptr);
  81:src/main.cpp  **** //
  82:src/main.cpp  **** //	//omoguci prekide
  83:src/main.cpp  **** //	Riscv::ms_sstatus(Riscv::SSTATUS_SIE);
  84:src/main.cpp  **** //
  85:src/main.cpp  **** ////	while (!nitred1->isFinished() || !nitred2->isFinished()) {
  86:src/main.cpp  **** ////		thread_dispatch();
  87:src/main.cpp  **** ////	}
  88:src/main.cpp  **** //	thread_join(nitred1);
  89:src/main.cpp  **** //	thread_join(nitred2);
  90:src/main.cpp  **** //	thread_join(nitred3);
  91:src/main.cpp  **** //
  92:src/main.cpp  **** //	printString("\nGotove user niti\n");
  93:src/main.cpp  **** //	delete q;
  94:src/main.cpp  **** //	//zabrani prekide
  95:src/main.cpp  **** //	Riscv::mc_sstatus(Riscv::SSTATUS_SIE);
  96:src/main.cpp  **** //	printString("\nSad cu da izadjem\n");
  97:src/main.cpp  **** 
  98:src/main.cpp  **** //testiranje svega
  99:src/main.cpp  **** 	thread_t mainHandle;
  52              		.loc 1 99 2 is_stmt 1 discriminator 3
 100:src/main.cpp  **** 	thread_t userHandle;
  53              		.loc 1 100 2 discriminator 3
 101:src/main.cpp  **** 	thread_create(&mainHandle, nullptr, nullptr);
  54              		.loc 1 101 2 discriminator 3
  55              		.loc 1 101 15 is_stmt 0 discriminator 3
  56 005c 930784FD 		addi	a5,s0,-40
  57 0060 13060000 		li	a2,0
  58 0064 93050000 		li	a1,0
  59 0068 13850700 		mv	a0,a5
  60              	.LEHB2:
  61 006c 97000000 		call	_Z13thread_createPP3TCBPFvPvES2_@plt
  61      E7800000 
  62              	.LVL3:
 102:src/main.cpp  **** 	TCB::running = mainHandle;
  63              		.loc 1 102 2 is_stmt 1 discriminator 3
  64              		.loc 1 102 15 is_stmt 0 discriminator 3
GAS LISTING /tmp/cc1cxfAL.s 			page 4


  65 0074 033784FD 		ld	a4,-40(s0)
  66 0078 97070000 		la	a5,_ZN3TCB7runningE
  66      83B70700 
  67 0080 23B0E700 		sd	a4,0(a5)
 103:src/main.cpp  **** 	thread_create(&userHandle, (TCB::Body)userMain, nullptr);
  68              		.loc 1 103 2 is_stmt 1 discriminator 3
  69              		.loc 1 103 15 is_stmt 0 discriminator 3
  70 0084 930704FD 		addi	a5,s0,-48
  71 0088 13060000 		li	a2,0
  72 008c 97050000 		la	a1,_Z8userMainv
  72      83B50500 
  73 0094 13850700 		mv	a0,a5
  74 0098 97000000 		call	_Z13thread_createPP3TCBPFvPvES2_@plt
  74      E7800000 
  75              	.LVL4:
  76              	.L3:
 104:src/main.cpp  **** 	while (!userHandle->isFinished()) {
  77              		.loc 1 104 2 is_stmt 1
  78              		.loc 1 104 9
  79              		.loc 1 104 32 is_stmt 0
  80 00a0 833704FD 		ld	a5,-48(s0)
  81 00a4 13850700 		mv	a0,a5
  82 00a8 97000000 		call	_ZN3TCB10isFinishedEv
  82      E7800000 
  83              	.LVL5:
  84 00b0 93070500 		mv	a5,a0
  85              		.loc 1 104 9
  86 00b4 93C71700 		xori	a5,a5,1
  87 00b8 93F7F70F 		andi	a5,a5,0xff
  88 00bc 63880700 		beqz	a5,.L2
 105:src/main.cpp  **** 		thread_dispatch();
  89              		.loc 1 105 3 is_stmt 1
  90              		.loc 1 105 18 is_stmt 0
  91 00c0 97000000 		call	_Z15thread_dispatchv@plt
  91      E7800000 
  92              	.LVL6:
 104:src/main.cpp  **** 	while (!userHandle->isFinished()) {
  93              		.loc 1 104 2
  94 00c8 6FF09FFD 		j	.L3
  95              	.L2:
 106:src/main.cpp  **** 	}
 107:src/main.cpp  **** 	Riscv::mc_sstatus(Riscv::SSTATUS_SIE);
  96              		.loc 1 107 2 is_stmt 1
  97              		.loc 1 107 19 is_stmt 0
  98 00cc 13052000 		li	a0,2
  99 00d0 97000000 		call	_ZN5Riscv10mc_sstatusEm
  99      E7800000 
 100              	.LVL7:
 108:src/main.cpp  **** 	return 0;
 101              		.loc 1 108 2 is_stmt 1
 102              		.loc 1 108 9 is_stmt 0
 103 00d8 93070000 		li	a5,0
 104 00dc 6F004002 		j	.L7
 105              	.L6:
 106 00e0 13090500 		mv	s2,a0
  40:src/main.cpp  **** 
 107              		.loc 1 40 24
GAS LISTING /tmp/cc1cxfAL.s 			page 5


 108 00e4 13850400 		mv	a0,s1
 109 00e8 97000000 		call	_ZdlPv@plt
 109      E7800000 
 110              	.LVL8:
 111 00f0 93070900 		mv	a5,s2
 112 00f4 13850700 		mv	a0,a5
 113 00f8 97000000 		call	_Unwind_Resume@plt
 113      E7800000 
 114              	.LVL9:
 115              	.LEHE2:
 116              	.L7:
 109:src/main.cpp  **** }...
 117              		.loc 1 109 1
 118 0100 13850700 		mv	a0,a5
 119 0104 83308102 		ld	ra,40(sp)
 120              		.cfi_restore 1
 121 0108 03340102 		ld	s0,32(sp)
 122              		.cfi_restore 8
 123              		.cfi_def_cfa 2, 48
 124 010c 83348101 		ld	s1,24(sp)
 125              		.cfi_restore 9
 126 0110 03390101 		ld	s2,16(sp)
 127              		.cfi_restore 18
 128 0114 13010103 		addi	sp,sp,48
 129              		.cfi_def_cfa_offset 0
 130 0118 67800000 		jr	ra
 131              		.cfi_endproc
 132              	.LFE44:
 133              		.globl	__gxx_personality_v0
 134              		.section	.gcc_except_table,"a",@progbits
 135              	.LLSDA44:
 136 0000 FF       		.byte	0xff
 137 0001 FF       		.byte	0xff
 138 0002 03       		.byte	0x3
 139 0003 27       		.byte	0x27
 140 0004 00000000 		.4byte	.LEHB0-.LFB44
 141 0008 00000000 		.4byte	.LEHE0-.LEHB0
 142 000c 00000000 		.4byte	0
 143 0010 00       		.byte	0
 144 0011 00000000 		.4byte	.LEHB1-.LFB44
 145 0015 00000000 		.4byte	.LEHE1-.LEHB1
 146 0019 00000000 		.4byte	.L6-.LFB44
 147 001d 00       		.byte	0
 148 001e 00000000 		.4byte	.LEHB2-.LFB44
 149 0022 00000000 		.4byte	.LEHE2-.LEHB2
 150 0026 00000000 		.4byte	0
 151 002a 00       		.byte	0
 152              		.text
 154              		.section	.text._ZN5Riscv7w_stvecEm,"axG",@progbits,_ZN5Riscv7w_stvecEm,comdat
 155              		.align	2
 156              		.weak	_ZN5Riscv7w_stvecEm
 158              	_ZN5Riscv7w_stvecEm:
 159              	.LFB5:
 160              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 5/17/23.
   3:src/../h/Riscv.hpp **** //
GAS LISTING /tmp/cc1cxfAL.s 			page 6


   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJEKAT2023_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJEKAT2023_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** class Riscv {
  11:src/../h/Riscv.hpp **** public:
  12:src/../h/Riscv.hpp **** 
  13:src/../h/Riscv.hpp **** 	static void popSppSpie();
  14:src/../h/Riscv.hpp **** 
  15:src/../h/Riscv.hpp **** 	//stavljanje registara x3-x31 na stek
  16:src/../h/Riscv.hpp **** 	static void pushRegisters();    //implementacija u asm
  17:src/../h/Riscv.hpp **** 
  18:src/../h/Riscv.hpp **** 	//skidanje registara x3-x31 sa steka
  19:src/../h/Riscv.hpp **** 	static void popRegisters();     //implementacija u asm
  20:src/../h/Riscv.hpp **** 
  21:src/../h/Riscv.hpp **** 	//read scause
  22:src/../h/Riscv.hpp **** 	static uint64 r_scause();
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp **** 	//write scause
  25:src/../h/Riscv.hpp **** 	static void w_scause(uint64 scause);
  26:src/../h/Riscv.hpp **** 
  27:src/../h/Riscv.hpp **** 	//read sepc
  28:src/../h/Riscv.hpp **** 	static uint64 r_sepc();
  29:src/../h/Riscv.hpp **** 
  30:src/../h/Riscv.hpp **** 	//write sepc
  31:src/../h/Riscv.hpp **** 	static void w_sepc(uint64 sepc);
  32:src/../h/Riscv.hpp **** 
  33:src/../h/Riscv.hpp **** 	//read stvec
  34:src/../h/Riscv.hpp **** 	static uint64 r_stvec();
  35:src/../h/Riscv.hpp **** 
  36:src/../h/Riscv.hpp **** 	//write stvec
  37:src/../h/Riscv.hpp **** 	static void w_stvec(uint64 stvec);
  38:src/../h/Riscv.hpp **** 
  39:src/../h/Riscv.hpp **** 	enum BitMaskSip {
  40:src/../h/Riscv.hpp **** 		//postoji zahtev za softverski prekid
  41:src/../h/Riscv.hpp **** 		SIP_SSIP = (1 << 1),
  42:src/../h/Riscv.hpp **** 		//postoji prekid od tajmera
  43:src/../h/Riscv.hpp **** 		SIP_STIP = (1 << 5),
  44:src/../h/Riscv.hpp **** 		//postoji zahtev za spoljasnji hardverski prekid
  45:src/../h/Riscv.hpp **** 		SIP_SEIP = (1 << 9)
  46:src/../h/Riscv.hpp **** 	};
  47:src/../h/Riscv.hpp **** 
  48:src/../h/Riscv.hpp **** 	//mask set sip
  49:src/../h/Riscv.hpp **** 	static void ms_sip(uint64 mask);
  50:src/../h/Riscv.hpp **** 
  51:src/../h/Riscv.hpp **** 	//mask clear sip
  52:src/../h/Riscv.hpp **** 	static void mc_sip(uint64 mask);
  53:src/../h/Riscv.hpp **** 
  54:src/../h/Riscv.hpp **** 	//read sip
  55:src/../h/Riscv.hpp **** 	static uint64 r_sip();
  56:src/../h/Riscv.hpp **** 
  57:src/../h/Riscv.hpp **** 	//write sip
  58:src/../h/Riscv.hpp **** 	static void w_sip(uint64 sip);
  59:src/../h/Riscv.hpp **** 
  60:src/../h/Riscv.hpp **** 	//kada se pozove sret, SIE dobija vrednost SPIE, SPIE se postavlja na 1,
GAS LISTING /tmp/cc1cxfAL.s 			page 7


  61:src/../h/Riscv.hpp **** 	//rezim se postavlja na osnovu SPP bita, SPP se postavlja na 0
  62:src/../h/Riscv.hpp **** 	enum BitMaskSstatus {
  63:src/../h/Riscv.hpp **** 		//1 - dozvoljeni prekidi; 0- nedozvoljeni prekidi; igonrise se u korisnickom rezimu
  64:src/../h/Riscv.hpp **** 		SSTATUS_SIE = (1 << 1),
  65:src/../h/Riscv.hpp **** 		//prethodna vrednost bita SIE
  66:src/../h/Riscv.hpp **** 		SSTATUS_SPIE = (1 << 5),
  67:src/../h/Riscv.hpp **** 		//iz kog rezima se desio skok; 0 - iz korisnickog; 1 - iz sistemskog
  68:src/../h/Riscv.hpp **** 		SSTATUS_SPP = (1 << 8)
  69:src/../h/Riscv.hpp **** 	};
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp **** 	//mask set sstatus
  72:src/../h/Riscv.hpp **** 	static void ms_sstatus(uint64 mask);
  73:src/../h/Riscv.hpp **** 
  74:src/../h/Riscv.hpp **** 	//mask clear sstatus
  75:src/../h/Riscv.hpp **** 	static void mc_sstatus(uint64 mask);
  76:src/../h/Riscv.hpp **** 
  77:src/../h/Riscv.hpp **** 	//read sstatus
  78:src/../h/Riscv.hpp **** 	static uint64 r_sstatus();
  79:src/../h/Riscv.hpp **** 
  80:src/../h/Riscv.hpp **** 	//write sstatus
  81:src/../h/Riscv.hpp **** 	static void w_sstatus(uint64 sstatus);
  82:src/../h/Riscv.hpp **** 
  83:src/../h/Riscv.hpp **** 	//upisuje kod sistemskog poziva u registar a0
  84:src/../h/Riscv.hpp **** 	static void loadOpCode(uint64 opCode);
  85:src/../h/Riscv.hpp **** 
  86:src/../h/Riscv.hpp **** };
  87:src/../h/Riscv.hpp **** 
  88:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause() {
  89:src/../h/Riscv.hpp **** 	uint64 volatile scause;
  90:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[scause], scause": [scause] "=r"(scause));
  91:src/../h/Riscv.hpp **** 	return scause;
  92:src/../h/Riscv.hpp **** }
  93:src/../h/Riscv.hpp **** 
  94:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
  95:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw scause, %[scause]": :[scause] "r"(scause));
  96:src/../h/Riscv.hpp **** }
  97:src/../h/Riscv.hpp **** 
  98:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc() {
  99:src/../h/Riscv.hpp **** 	uint64 volatile sepc;
 100:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[sepc], sepc": [sepc] "=r"(sepc));
 101:src/../h/Riscv.hpp **** 	return sepc;
 102:src/../h/Riscv.hpp **** }
 103:src/../h/Riscv.hpp **** 
 104:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
 105:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 106:src/../h/Riscv.hpp **** }
 107:src/../h/Riscv.hpp **** 
 108:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec() {
 109:src/../h/Riscv.hpp **** 	uint64 volatile stvec;
 110:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[stvec], stvec": [stvec] "=r"(stvec));
 111:src/../h/Riscv.hpp **** 	return stvec;
 112:src/../h/Riscv.hpp **** }
 113:src/../h/Riscv.hpp **** 
 114:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 161              		.loc 2 114 42 is_stmt 1
 162              		.cfi_startproc
 163              	.LVL10:
GAS LISTING /tmp/cc1cxfAL.s 			page 8


 164 0000 130101FF 		addi	sp,sp,-16
 165              		.cfi_def_cfa_offset 16
 166 0004 23348100 		sd	s0,8(sp)
 167              		.cfi_offset 8, -8
 168 0008 13040101 		addi	s0,sp,16
 169              		.cfi_def_cfa 8, 0
 115:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw stvec, %[stvec]": :[stvec] "r"(stvec));
 170              		.loc 2 115 2
 171              		.loc 2 115 63 is_stmt 0
 172              	#APP
 173              	# 115 "src/../h/Riscv.hpp" 1
 116              	}
 174              		csrw stvec, a0
 175              	# 0 "" 2
 176              		.loc 2 116 1
 177              	#NO_APP
 178 0010 03348100 		ld	s0,8(sp)
 179              		.cfi_restore 8
 180              		.cfi_def_cfa 2, 16
 181 0014 13010101 		addi	sp,sp,16
 182              		.cfi_def_cfa_offset 0
 183 0018 67800000 		jr	ra
 184              		.cfi_endproc
 185              	.LFE5:
 187              		.section	.text._ZN5Riscv10mc_sstatusEm,"axG",@progbits,_ZN5Riscv10mc_sstatusEm,comdat
 188              		.align	2
 189              		.weak	_ZN5Riscv10mc_sstatusEm
 191              	_ZN5Riscv10mc_sstatusEm:
 192              	.LFB11:
 117:src/../h/Riscv.hpp **** 
 118:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 119:src/../h/Riscv.hpp **** 	__asm__ volatile("csrs sip, %[mask]": :[mask] "r"(mask));
 120:src/../h/Riscv.hpp **** }
 121:src/../h/Riscv.hpp **** 
 122:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 123:src/../h/Riscv.hpp **** 	__asm__ volatile("csrc sip, %[mask]": :[mask] "r"(mask));
 124:src/../h/Riscv.hpp **** }
 125:src/../h/Riscv.hpp **** 
 126:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip() {
 127:src/../h/Riscv.hpp **** 	uint64 volatile sip;
 128:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[sip], sip": [sip] "=r"(sip));
 129:src/../h/Riscv.hpp **** 	return sip;
 130:src/../h/Riscv.hpp **** }
 131:src/../h/Riscv.hpp **** 
 132:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip) {
 133:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw sip, %[sip]": :[sip] "r"(sip));
 134:src/../h/Riscv.hpp **** }
 135:src/../h/Riscv.hpp **** 
 136:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
 137:src/../h/Riscv.hpp **** 	__asm__ volatile("csrs sstatus, %[mask]": :[mask] "r"(mask));
 138:src/../h/Riscv.hpp **** }
 139:src/../h/Riscv.hpp **** 
 140:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask) {
 193              		.loc 2 140 44 is_stmt 1
 194              		.cfi_startproc
 195              	.LVL11:
 196 0000 130101FF 		addi	sp,sp,-16
GAS LISTING /tmp/cc1cxfAL.s 			page 9


 197              		.cfi_def_cfa_offset 16
 198 0004 23348100 		sd	s0,8(sp)
 199              		.cfi_offset 8, -8
 200 0008 13040101 		addi	s0,sp,16
 201              		.cfi_def_cfa 8, 0
 141:src/../h/Riscv.hpp **** 	__asm__ volatile("csrc sstatus, %[mask]": :[mask] "r"(mask));
 202              		.loc 2 141 2
 203              		.loc 2 141 62 is_stmt 0
 204              	#APP
 205              	# 141 "src/../h/Riscv.hpp" 1
 142              	}
 206              		csrc sstatus, a0
 207              	# 0 "" 2
 208              		.loc 2 142 1
 209              	#NO_APP
 210 0010 03348100 		ld	s0,8(sp)
 211              		.cfi_restore 8
 212              		.cfi_def_cfa 2, 16
 213 0014 13010101 		addi	sp,sp,16
 214              		.cfi_def_cfa_offset 0
 215 0018 67800000 		jr	ra
 216              		.cfi_endproc
 217              	.LFE11:
 219              		.section	.text._ZN3TCB10isFinishedEv,"axG",@progbits,_ZN3TCB10isFinishedEv,comdat
 220              		.align	2
 221              		.weak	_ZN3TCB10isFinishedEv
 223              	_ZN3TCB10isFinishedEv:
 224              	.LFB34:
 225              		.file 3 "src/../h/TCB.hpp"
   1:src/../h/TCB.hpp **** //
   2:src/../h/TCB.hpp **** // Created by os on 5/23/23.
   3:src/../h/TCB.hpp **** //
   4:src/../h/TCB.hpp **** 
   5:src/../h/TCB.hpp **** #ifndef PROJEKAT2023_TCB_HPP
   6:src/../h/TCB.hpp **** #define PROJEKAT2023_TCB_HPP
   7:src/../h/TCB.hpp **** 
   8:src/../h/TCB.hpp **** #include "../lib/hw.h"
   9:src/../h/TCB.hpp **** #include "../h/ThreadQueue.hpp"
  10:src/../h/TCB.hpp **** 
  11:src/../h/TCB.hpp **** class TCB {
  12:src/../h/TCB.hpp **** public:
  13:src/../h/TCB.hpp **** 	friend class Scheduler;
  14:src/../h/TCB.hpp **** 
  15:src/../h/TCB.hpp **** 	using Body = void (*)(void*);
  16:src/../h/TCB.hpp **** 
  17:src/../h/TCB.hpp **** 	static TCB* createThread(Body function, void* args, uint64* stack);
  18:src/../h/TCB.hpp **** 	static void start(TCB* newTcb);
  19:src/../h/TCB.hpp **** 
  20:src/../h/TCB.hpp **** 	bool isFinished() { return finished; }
 226              		.loc 3 20 7 is_stmt 1
 227              		.cfi_startproc
 228              	.LVL12:
 229 0000 130101FF 		addi	sp,sp,-16
 230              		.cfi_def_cfa_offset 16
 231 0004 23348100 		sd	s0,8(sp)
 232              		.cfi_offset 8, -8
 233 0008 13040101 		addi	s0,sp,16
GAS LISTING /tmp/cc1cxfAL.s 			page 10


 234              		.cfi_def_cfa 8, 0
 235              		.loc 3 20 22
 236              		.loc 3 20 39 is_stmt 0
 237 000c 03450503 		lbu	a0,48(a0)
 238              	.LVL13:
 239 0010 03348100 		ld	s0,8(sp)
 240              		.cfi_restore 8
 241              		.cfi_def_cfa 2, 16
 242 0014 13010101 		addi	sp,sp,16
 243              		.cfi_def_cfa_offset 0
 244 0018 67800000 		jr	ra
 245              		.cfi_endproc
 246              	.LFE34:
 248              		.text
 249              		.align	2
 250              		.globl	_Z4idlePv
 252              	_Z4idlePv:
 253              	.LFB43:
  29:src/main.cpp  **** void idle(void*) {
 254              		.loc 1 29 18 is_stmt 1
 255              		.cfi_startproc
 256 011c 130101FF 		addi	sp,sp,-16
 257              		.cfi_def_cfa_offset 16
 258 0120 23348100 		sd	s0,8(sp)
 259              		.cfi_offset 8, -8
 260 0124 13040101 		addi	s0,sp,16
 261              		.cfi_def_cfa 8, 0
 262              	.L15:
  30:src/main.cpp  **** 	while (1) {}
 263              		.loc 1 30 2 discriminator 1
  30:src/main.cpp  **** 	while (1) {}
 264              		.loc 1 30 2 discriminator 1
 265 0128 6F000000 		j	.L15
 266              		.cfi_endproc
 267              	.LFE43:
 269              		.globl	semA
 270              		.bss
 271              		.align	3
 274              	semA:
 275 0000 00000000 		.zero	8
 275      00000000 
 276              		.text
 277              	.Letext0:
 278              		.file 4 "src/../lib/hw.h"
 279              		.file 5 "src/../h/syscall_c.hpp"
 280              		.file 6 "src/../h/../h/ThreadQueue.hpp"
 281              		.file 7 "src/../h/syscall_cpp.hpp"
 2739              		.align	3
 2742              	DW.ref.__gxx_personality_v0:
 2743 0000 00000000 		.dword	__gxx_personality_v0
 2743      00000000 
 2744              		.ident	"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04) 9.4.0"
 2745              		.section	.note.GNU-stack,"",@progbits
GAS LISTING /tmp/cc1cxfAL.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/cc1cxfAL.s:9      .text:0000000000000000 main
     /tmp/cc1cxfAL.s:13     .text:0000000000000000 .L0 
     /tmp/cc1cxfAL.s:2742   .data.rel.local.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/cc1cxfAL.s:16     .text:0000000000000000 .L0 
     /tmp/cc1cxfAL.s:17     .text:0000000000000004 .L0 
     /tmp/cc1cxfAL.s:22     .text:0000000000000014 .L0 
     /tmp/cc1cxfAL.s:23     .text:0000000000000014 .L0 
     /tmp/cc1cxfAL.s:24     .text:0000000000000014 .L0 
     /tmp/cc1cxfAL.s:25     .text:0000000000000014 .L0 
     /tmp/cc1cxfAL.s:27     .text:0000000000000018 .L0 
     /tmp/cc1cxfAL.s:29     .text:0000000000000018 .L0 
     /tmp/cc1cxfAL.s:30     .text:0000000000000018 .L0 
     /tmp/cc1cxfAL.s:158    .text._ZN5Riscv7w_stvecEm:0000000000000000 _ZN5Riscv7w_stvecEm
     /tmp/cc1cxfAL.s:35     .text:000000000000002c .L0 
     /tmp/cc1cxfAL.s:36     .text:000000000000002c .L0 
     /tmp/cc1cxfAL.s:274    .bss:0000000000000000 semA
     /tmp/cc1cxfAL.s:50     .text:0000000000000050 .L0 
     /tmp/cc1cxfAL.s:53     .text:000000000000005c .L0 
     /tmp/cc1cxfAL.s:54     .text:000000000000005c .L0 
     /tmp/cc1cxfAL.s:55     .text:000000000000005c .L0 
     /tmp/cc1cxfAL.s:56     .text:000000000000005c .L0 
     /tmp/cc1cxfAL.s:64     .text:0000000000000074 .L0 
     /tmp/cc1cxfAL.s:65     .text:0000000000000074 .L0 
     /tmp/cc1cxfAL.s:69     .text:0000000000000084 .L0 
     /tmp/cc1cxfAL.s:70     .text:0000000000000084 .L0 
     /tmp/cc1cxfAL.s:78     .text:00000000000000a0 .L0 
     /tmp/cc1cxfAL.s:79     .text:00000000000000a0 .L0 
     /tmp/cc1cxfAL.s:80     .text:00000000000000a0 .L0 
     /tmp/cc1cxfAL.s:223    .text._ZN3TCB10isFinishedEv:0000000000000000 _ZN3TCB10isFinishedEv
     /tmp/cc1cxfAL.s:86     .text:00000000000000b4 .L0 
     /tmp/cc1cxfAL.s:90     .text:00000000000000c0 .L0 
     /tmp/cc1cxfAL.s:91     .text:00000000000000c0 .L0 
     /tmp/cc1cxfAL.s:94     .text:00000000000000c8 .L0 
     /tmp/cc1cxfAL.s:97     .text:00000000000000cc .L0 
     /tmp/cc1cxfAL.s:98     .text:00000000000000cc .L0 
     /tmp/cc1cxfAL.s:191    .text._ZN5Riscv10mc_sstatusEm:0000000000000000 _ZN5Riscv10mc_sstatusEm
     /tmp/cc1cxfAL.s:102    .text:00000000000000d8 .L0 
     /tmp/cc1cxfAL.s:103    .text:00000000000000d8 .L0 
     /tmp/cc1cxfAL.s:108    .text:00000000000000e4 .L0 
     /tmp/cc1cxfAL.s:118    .text:0000000000000100 .L0 
     /tmp/cc1cxfAL.s:120    .text:0000000000000108 .L0 
     /tmp/cc1cxfAL.s:122    .text:000000000000010c .L0 
     /tmp/cc1cxfAL.s:123    .text:000000000000010c .L0 
     /tmp/cc1cxfAL.s:125    .text:0000000000000110 .L0 
     /tmp/cc1cxfAL.s:127    .text:0000000000000114 .L0 
     /tmp/cc1cxfAL.s:129    .text:0000000000000118 .L0 
     /tmp/cc1cxfAL.s:131    .text:000000000000011c .L0 
     /tmp/cc1cxfAL.s:162    .text._ZN5Riscv7w_stvecEm:0000000000000000 .L0 
     /tmp/cc1cxfAL.s:164    .text._ZN5Riscv7w_stvecEm:0000000000000000 .L0 
     /tmp/cc1cxfAL.s:165    .text._ZN5Riscv7w_stvecEm:0000000000000004 .L0 
     /tmp/cc1cxfAL.s:167    .text._ZN5Riscv7w_stvecEm:0000000000000008 .L0 
     /tmp/cc1cxfAL.s:169    .text._ZN5Riscv7w_stvecEm:000000000000000c .L0 
     /tmp/cc1cxfAL.s:171    .text._ZN5Riscv7w_stvecEm:000000000000000c .L0 
  src/../h/Riscv.hpp:115    .text._ZN5Riscv7w_stvecEm:000000000000000c .L0 
     /tmp/cc1cxfAL.s:178    .text._ZN5Riscv7w_stvecEm:0000000000000010 .L0 
GAS LISTING /tmp/cc1cxfAL.s 			page 12


     /tmp/cc1cxfAL.s:179    .text._ZN5Riscv7w_stvecEm:0000000000000014 .L0 
     /tmp/cc1cxfAL.s:180    .text._ZN5Riscv7w_stvecEm:0000000000000014 .L0 
     /tmp/cc1cxfAL.s:182    .text._ZN5Riscv7w_stvecEm:0000000000000018 .L0 
     /tmp/cc1cxfAL.s:184    .text._ZN5Riscv7w_stvecEm:000000000000001c .L0 
     /tmp/cc1cxfAL.s:194    .text._ZN5Riscv10mc_sstatusEm:0000000000000000 .L0 
     /tmp/cc1cxfAL.s:196    .text._ZN5Riscv10mc_sstatusEm:0000000000000000 .L0 
     /tmp/cc1cxfAL.s:197    .text._ZN5Riscv10mc_sstatusEm:0000000000000004 .L0 
     /tmp/cc1cxfAL.s:199    .text._ZN5Riscv10mc_sstatusEm:0000000000000008 .L0 
     /tmp/cc1cxfAL.s:201    .text._ZN5Riscv10mc_sstatusEm:000000000000000c .L0 
     /tmp/cc1cxfAL.s:203    .text._ZN5Riscv10mc_sstatusEm:000000000000000c .L0 
  src/../h/Riscv.hpp:141    .text._ZN5Riscv10mc_sstatusEm:000000000000000c .L0 
     /tmp/cc1cxfAL.s:210    .text._ZN5Riscv10mc_sstatusEm:0000000000000010 .L0 
     /tmp/cc1cxfAL.s:211    .text._ZN5Riscv10mc_sstatusEm:0000000000000014 .L0 
     /tmp/cc1cxfAL.s:212    .text._ZN5Riscv10mc_sstatusEm:0000000000000014 .L0 
     /tmp/cc1cxfAL.s:214    .text._ZN5Riscv10mc_sstatusEm:0000000000000018 .L0 
     /tmp/cc1cxfAL.s:216    .text._ZN5Riscv10mc_sstatusEm:000000000000001c .L0 
     /tmp/cc1cxfAL.s:227    .text._ZN3TCB10isFinishedEv:0000000000000000 .L0 
     /tmp/cc1cxfAL.s:229    .text._ZN3TCB10isFinishedEv:0000000000000000 .L0 
     /tmp/cc1cxfAL.s:230    .text._ZN3TCB10isFinishedEv:0000000000000004 .L0 
     /tmp/cc1cxfAL.s:232    .text._ZN3TCB10isFinishedEv:0000000000000008 .L0 
     /tmp/cc1cxfAL.s:234    .text._ZN3TCB10isFinishedEv:000000000000000c .L0 
     /tmp/cc1cxfAL.s:236    .text._ZN3TCB10isFinishedEv:000000000000000c .L0 
     /tmp/cc1cxfAL.s:237    .text._ZN3TCB10isFinishedEv:000000000000000c .L0 
     /tmp/cc1cxfAL.s:240    .text._ZN3TCB10isFinishedEv:0000000000000014 .L0 
     /tmp/cc1cxfAL.s:241    .text._ZN3TCB10isFinishedEv:0000000000000014 .L0 
     /tmp/cc1cxfAL.s:243    .text._ZN3TCB10isFinishedEv:0000000000000018 .L0 
     /tmp/cc1cxfAL.s:245    .text._ZN3TCB10isFinishedEv:000000000000001c .L0 
     /tmp/cc1cxfAL.s:252    .text:000000000000011c _Z4idlePv
     /tmp/cc1cxfAL.s:255    .text:000000000000011c .L0 
     /tmp/cc1cxfAL.s:256    .text:000000000000011c .L0 
     /tmp/cc1cxfAL.s:257    .text:0000000000000120 .L0 
     /tmp/cc1cxfAL.s:259    .text:0000000000000124 .L0 
     /tmp/cc1cxfAL.s:261    .text:0000000000000128 .L0 
     /tmp/cc1cxfAL.s:264    .text:0000000000000128 .L0 
     /tmp/cc1cxfAL.s:265    .text:0000000000000128 .L0 
     /tmp/cc1cxfAL.s:266    .text:000000000000012c .L0 
     /tmp/cc1cxfAL.s:282    .text:000000000000012c .L0 
     /tmp/cc1cxfAL.s:187    .text._ZN5Riscv7w_stvecEm:000000000000001c .L0 
     /tmp/cc1cxfAL.s:219    .text._ZN5Riscv10mc_sstatusEm:000000000000001c .L0 
     /tmp/cc1cxfAL.s:248    .text._ZN3TCB10isFinishedEv:000000000000001c .L0 
     /tmp/cc1cxfAL.s:30     .text:0000000000000018 .L0 
     /tmp/cc1cxfAL.s:50     .text:0000000000000050 .L0 
     /tmp/cc1cxfAL.s:66     .text:0000000000000078 .L0 
     /tmp/cc1cxfAL.s:72     .text:000000000000008c .L0 
     /tmp/cc1cxfAL.s:95     .text:00000000000000cc .L2
     /tmp/cc1cxfAL.s:76     .text:00000000000000a0 .L3
     /tmp/cc1cxfAL.s:116    .text:0000000000000100 .L7
     /tmp/cc1cxfAL.s:262    .text:0000000000000128 .L15
     /tmp/cc1cxfAL.s:37     .text:0000000000000030 .LEHB0
     /tmp/cc1cxfAL.s:10     .text:0000000000000000 .LFB44
     /tmp/cc1cxfAL.s:40     .text:0000000000000038 .LEHE0
     /tmp/cc1cxfAL.s:45     .text:0000000000000048 .LEHB1
     /tmp/cc1cxfAL.s:48     .text:0000000000000050 .LEHE1
     /tmp/cc1cxfAL.s:105    .text:00000000000000e0 .L6
     /tmp/cc1cxfAL.s:60     .text:000000000000006c .LEHB2
     /tmp/cc1cxfAL.s:115    .text:0000000000000100 .LEHE2
     /tmp/cc1cxfAL.s:1438   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
GAS LISTING /tmp/cc1cxfAL.s 			page 13


     /tmp/cc1cxfAL.s:2664   .debug_str:00000000000006f3 .LASF143
     /tmp/cc1cxfAL.s:2506   .debug_str:00000000000002b8 .LASF144
     /tmp/cc1cxfAL.s:2632   .debug_str:0000000000000617 .LASF145
     /tmp/cc1cxfAL.s:2412   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/cc1cxfAL.s:2424   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cc1cxfAL.s:2534   .debug_str:0000000000000379 .LASF0
     /tmp/cc1cxfAL.s:2556   .debug_str:0000000000000405 .LASF1
     /tmp/cc1cxfAL.s:2616   .debug_str:00000000000005a0 .LASF2
     /tmp/cc1cxfAL.s:2624   .debug_str:00000000000005e8 .LASF4
     /tmp/cc1cxfAL.s:2544   .debug_str:00000000000003b1 .LASF3
     /tmp/cc1cxfAL.s:2432   .debug_str:0000000000000043 .LASF5
     /tmp/cc1cxfAL.s:2596   .debug_str:0000000000000526 .LASF6
     /tmp/cc1cxfAL.s:2594   .debug_str:0000000000000513 .LASF7
     /tmp/cc1cxfAL.s:2548   .debug_str:00000000000003d5 .LASF8
     /tmp/cc1cxfAL.s:2514   .debug_str:00000000000002d4 .LASF9
     /tmp/cc1cxfAL.s:2522   .debug_str:0000000000000320 .LASF10
     /tmp/cc1cxfAL.s:2458   .debug_str:0000000000000109 .LASF11
     /tmp/cc1cxfAL.s:2504   .debug_str:00000000000002a9 .LASF12
     /tmp/cc1cxfAL.s:2468   .debug_str:0000000000000161 .LASF13
     /tmp/cc1cxfAL.s:2456   .debug_str:00000000000000f9 .LASF14
     /tmp/cc1cxfAL.s:2644   .debug_str:0000000000000678 .LASF15
     /tmp/cc1cxfAL.s:2494   .debug_str:000000000000023d .LASF16
     /tmp/cc1cxfAL.s:2638   .debug_str:000000000000064e .LASF17
     /tmp/cc1cxfAL.s:2708   .debug_str:00000000000008b7 .LASF56
     /tmp/cc1cxfAL.s:2692   .debug_str:0000000000000863 .LASF146
     /tmp/cc1cxfAL.s:2498   .debug_str:000000000000026e .LASF18
     /tmp/cc1cxfAL.s:2662   .debug_str:00000000000006e6 .LASF19
     /tmp/cc1cxfAL.s:2482   .debug_str:00000000000001eb .LASF20
     /tmp/cc1cxfAL.s:2524   .debug_str:000000000000032e .LASF21
     /tmp/cc1cxfAL.s:2532   .debug_str:0000000000000361 .LASF23
     /tmp/cc1cxfAL.s:2630   .debug_str:0000000000000609 .LASF22
     /tmp/cc1cxfAL.s:2496   .debug_str:0000000000000253 .LASF24
     /tmp/cc1cxfAL.s:2538   .debug_str:0000000000000396 .LASF25
     /tmp/cc1cxfAL.s:2716   .debug_str:00000000000008fe .LASF26
     /tmp/cc1cxfAL.s:2682   .debug_str:0000000000000837 .LASF27
     /tmp/cc1cxfAL.s:2676   .debug_str:0000000000000800 .LASF29
     /tmp/cc1cxfAL.s:2612   .debug_str:000000000000058c .LASF31
     /tmp/cc1cxfAL.s:2586   .debug_str:00000000000004cc .LASF33
     /tmp/cc1cxfAL.s:2600   .debug_str:0000000000000535 .LASF28
     /tmp/cc1cxfAL.s:2602   .debug_str:000000000000053c .LASF30
     /tmp/cc1cxfAL.s:2580   .debug_str:00000000000004a5 .LASF32
     /tmp/cc1cxfAL.s:2550   .debug_str:00000000000003e8 .LASF34
     /tmp/cc1cxfAL.s:2718   .debug_str:0000000000000918 .LASF35
     /tmp/cc1cxfAL.s:2666   .debug_str:00000000000007b7 .LASF36
     /tmp/cc1cxfAL.s:2578   .debug_str:000000000000049d .LASF37
     /tmp/cc1cxfAL.s:2584   .debug_str:00000000000004b8 .LASF38
     /tmp/cc1cxfAL.s:2640   .debug_str:0000000000000664 .LASF39
     /tmp/cc1cxfAL.s:2626   .debug_str:00000000000005ef .LASF40
     /tmp/cc1cxfAL.s:2628   .debug_str:0000000000000602 .LASF41
     /tmp/cc1cxfAL.s:2462   .debug_str:000000000000011d .LASF42
     /tmp/cc1cxfAL.s:2492   .debug_str:0000000000000237 .LASF43
     /tmp/cc1cxfAL.s:2528   .debug_str:0000000000000344 .LASF44
     /tmp/cc1cxfAL.s:2540   .debug_str:00000000000003a3 .LASF45
     /tmp/cc1cxfAL.s:2484   .debug_str:00000000000001f7 .LASF46
     /tmp/cc1cxfAL.s:2434   .debug_str:000000000000004a .LASF47
     /tmp/cc1cxfAL.s:2620   .debug_str:00000000000005b8 .LASF48
     /tmp/cc1cxfAL.s:2614   .debug_str:0000000000000595 .LASF49
GAS LISTING /tmp/cc1cxfAL.s 			page 14


     /tmp/cc1cxfAL.s:2730   .debug_str:0000000000000967 .LASF50
     /tmp/cc1cxfAL.s:2710   .debug_str:00000000000008bd .LASF51
     /tmp/cc1cxfAL.s:2720   .debug_str:0000000000000920 .LASF52
     /tmp/cc1cxfAL.s:2704   .debug_str:0000000000000897 .LASF53
     /tmp/cc1cxfAL.s:2570   .debug_str:000000000000044e .LASF54
     /tmp/cc1cxfAL.s:2670   .debug_str:00000000000007d5 .LASF97
     /tmp/cc1cxfAL.s:2474   .debug_str:00000000000001a1 .LASF99
     /tmp/cc1cxfAL.s:2702   .debug_str:000000000000088e .LASF55
     /tmp/cc1cxfAL.s:2650   .debug_str:00000000000006ae .LASF106
     /tmp/cc1cxfAL.s:2642   .debug_str:000000000000066b .LASF59
     /tmp/cc1cxfAL.s:2714   .debug_str:00000000000008dc .LASF61
     /tmp/cc1cxfAL.s:2590   .debug_str:0000000000000502 .LASF147
     /tmp/cc1cxfAL.s:2726   .debug_str:000000000000095b .LASF57
     /tmp/cc1cxfAL.s:2546   .debug_str:00000000000003c3 .LASF58
     /tmp/cc1cxfAL.s:2652   .debug_str:00000000000006b6 .LASF63
     /tmp/cc1cxfAL.s:2648   .debug_str:0000000000000698 .LASF65
     /tmp/cc1cxfAL.s:2444   .debug_str:000000000000009e .LASF60
     /tmp/cc1cxfAL.s:2678   .debug_str:0000000000000815 .LASF62
     /tmp/cc1cxfAL.s:2618   .debug_str:00000000000005ae .LASF64
     /tmp/cc1cxfAL.s:2646   .debug_str:0000000000000684 .LASF66
     /tmp/cc1cxfAL.s:2656   .debug_str:00000000000006ce .LASF67
     /tmp/cc1cxfAL.s:2500   .debug_str:000000000000027a .LASF68
     /tmp/cc1cxfAL.s:2562   .debug_str:0000000000000426 .LASF69
     /tmp/cc1cxfAL.s:2604   .debug_str:000000000000054f .LASF70
     /tmp/cc1cxfAL.s:2488   .debug_str:0000000000000221 .LASF71
     /tmp/cc1cxfAL.s:2622   .debug_str:00000000000005d0 .LASF72
     /tmp/cc1cxfAL.s:2680   .debug_str:000000000000082c .LASF73
     /tmp/cc1cxfAL.s:2486   .debug_str:0000000000000209 .LASF74
     /tmp/cc1cxfAL.s:2734   .debug_str:000000000000098c .LASF75
     /tmp/cc1cxfAL.s:2502   .debug_str:0000000000000290 .LASF76
     /tmp/cc1cxfAL.s:2560   .debug_str:0000000000000420 .LASF77
     /tmp/cc1cxfAL.s:2610   .debug_str:000000000000057c .LASF78
     /tmp/cc1cxfAL.s:2490   .debug_str:000000000000022e .LASF79
     /tmp/cc1cxfAL.s:2464   .debug_str:0000000000000130 .LASF80
     /tmp/cc1cxfAL.s:2564   .debug_str:0000000000000433 .LASF81
     /tmp/cc1cxfAL.s:2438   .debug_str:0000000000000071 .LASF82
     /tmp/cc1cxfAL.s:2660   .debug_str:00000000000006de .LASF83
     /tmp/cc1cxfAL.s:2452   .debug_str:00000000000000d9 .LASF84
     /tmp/cc1cxfAL.s:2674   .debug_str:00000000000007f8 .LASF85
     /tmp/cc1cxfAL.s:2454   .debug_str:00000000000000ea .LASF86
     /tmp/cc1cxfAL.s:2728   .debug_str:0000000000000961 .LASF87
     /tmp/cc1cxfAL.s:2686   .debug_str:0000000000000846 .LASF88
     /tmp/cc1cxfAL.s:2668   .debug_str:00000000000007cb .LASF89
     /tmp/cc1cxfAL.s:2636   .debug_str:0000000000000645 .LASF90
     /tmp/cc1cxfAL.s:2598   .debug_str:000000000000052d .LASF91
     /tmp/cc1cxfAL.s:2526   .debug_str:0000000000000339 .LASF92
     /tmp/cc1cxfAL.s:2634   .debug_str:0000000000000635 .LASF93
     /tmp/cc1cxfAL.s:2592   .debug_str:0000000000000507 .LASF94
     /tmp/cc1cxfAL.s:2426   .debug_str:0000000000000000 .LASF95
     /tmp/cc1cxfAL.s:2428   .debug_str:000000000000000d .LASF96
     /tmp/cc1cxfAL.s:2722   .debug_str:0000000000000936 .LASF148
     /tmp/cc1cxfAL.s:2476   .debug_str:00000000000001b9 .LASF98
     /tmp/cc1cxfAL.s:2430   .debug_str:000000000000001b .LASF100
     /tmp/cc1cxfAL.s:2732   .debug_str:000000000000097f .LASF101
     /tmp/cc1cxfAL.s:2518   .debug_str:00000000000002fc .LASF102
     /tmp/cc1cxfAL.s:2536   .debug_str:0000000000000386 .LASF112
     /tmp/cc1cxfAL.s:2568   .debug_str:0000000000000441 .LASF113
GAS LISTING /tmp/cc1cxfAL.s 			page 15


     /tmp/cc1cxfAL.s:2658   .debug_str:00000000000006d9 .LASF103
     /tmp/cc1cxfAL.s:2608   .debug_str:0000000000000577 .LASF104
     /tmp/cc1cxfAL.s:2582   .debug_str:00000000000004ac .LASF105
     /tmp/cc1cxfAL.s:2700   .debug_str:0000000000000889 .LASF107
     /tmp/cc1cxfAL.s:2552   .debug_str:00000000000003fb .LASF108
     /tmp/cc1cxfAL.s:2460   .debug_str:0000000000000118 .LASF109
     /tmp/cc1cxfAL.s:2466   .debug_str:0000000000000143 .LASF110
     /tmp/cc1cxfAL.s:2478   .debug_str:00000000000001c7 .LASF111
     /tmp/cc1cxfAL.s:2470   .debug_str:0000000000000171 .LASF114
     /tmp/cc1cxfAL.s:2442   .debug_str:0000000000000098 .LASF115
     /tmp/cc1cxfAL.s:2554   .debug_str:0000000000000400 .LASF116
     /tmp/cc1cxfAL.s:2440   .debug_str:0000000000000083 .LASF117
     /tmp/cc1cxfAL.s:2516   .debug_str:00000000000002e4 .LASF118
     /tmp/cc1cxfAL.s:2480   .debug_str:00000000000001e1 .LASF149
     /tmp/cc1cxfAL.s:2672   .debug_str:00000000000007e0 .LASF150
     /tmp/cc1cxfAL.s:2654   .debug_str:00000000000006c1 .LASF119
     /tmp/cc1cxfAL.s:2712   .debug_str:00000000000008c7 .LASF120
     /tmp/cc1cxfAL.s:2542   .debug_str:00000000000003a9 .LASF121
     /tmp/cc1cxfAL.s:2436   .debug_str:0000000000000055 .LASF122
     /tmp/cc1cxfAL.s:2558   .debug_str:0000000000000418 .LASF123
     /tmp/cc1cxfAL.s:2576   .debug_str:000000000000047e .LASF124
     /tmp/cc1cxfAL.s:2448   .debug_str:00000000000000b4 .LASF125
     /tmp/cc1cxfAL.s:2450   .debug_str:00000000000000bd .LASF126
     /tmp/cc1cxfAL.s:2472   .debug_str:000000000000018c .LASF127
     /tmp/cc1cxfAL.s:2706   .debug_str:00000000000008a1 .LASF128
     /tmp/cc1cxfAL.s:2688   .debug_str:000000000000084b .LASF151
     /tmp/cc1cxfAL.s:2572   .debug_str:0000000000000464 .LASF129
     /tmp/cc1cxfAL.s:2512   .debug_str:00000000000002cf .LASF130
     /tmp/cc1cxfAL.s:132    .text:000000000000011c .LFE44
     /tmp/cc1cxfAL.s:2530   .debug_str:0000000000000356 .LASF131
     /tmp/cc1cxfAL.s:2694   .debug_str:0000000000000872 .LASF132
     /tmp/cc1cxfAL.s:33     .text:000000000000002c .LVL0
     /tmp/cc1cxfAL.s:39     .text:0000000000000038 .LVL1
     /tmp/cc1cxfAL.s:47     .text:0000000000000050 .LVL2
     /tmp/cc1cxfAL.s:62     .text:0000000000000074 .LVL3
     /tmp/cc1cxfAL.s:75     .text:00000000000000a0 .LVL4
     /tmp/cc1cxfAL.s:83     .text:00000000000000b0 .LVL5
     /tmp/cc1cxfAL.s:92     .text:00000000000000c8 .LVL6
     /tmp/cc1cxfAL.s:100    .text:00000000000000d8 .LVL7
     /tmp/cc1cxfAL.s:110    .text:00000000000000f0 .LVL8
     /tmp/cc1cxfAL.s:114    .text:0000000000000100 .LVL9
     /tmp/cc1cxfAL.s:2508   .debug_str:00000000000002c5 .LASF133
     /tmp/cc1cxfAL.s:2446   .debug_str:00000000000000aa .LASF134
     /tmp/cc1cxfAL.s:253    .text:000000000000011c .LFB43
     /tmp/cc1cxfAL.s:267    .text:000000000000012c .LFE43
     /tmp/cc1cxfAL.s:224    .text._ZN3TCB10isFinishedEv:0000000000000000 .LFB34
     /tmp/cc1cxfAL.s:246    .text._ZN3TCB10isFinishedEv:000000000000001c .LFE34
     /tmp/cc1cxfAL.s:2510   .debug_str:00000000000002ca .LASF152
     /tmp/cc1cxfAL.s:2379   .debug_loc:0000000000000000 .LLST0
     /tmp/cc1cxfAL.s:192    .text._ZN5Riscv10mc_sstatusEm:0000000000000000 .LFB11
     /tmp/cc1cxfAL.s:217    .text._ZN5Riscv10mc_sstatusEm:000000000000001c .LFE11
     /tmp/cc1cxfAL.s:2696   .debug_str:000000000000087d .LASF135
     /tmp/cc1cxfAL.s:159    .text._ZN5Riscv7w_stvecEm:0000000000000000 .LFB5
     /tmp/cc1cxfAL.s:185    .text._ZN5Riscv7w_stvecEm:000000000000001c .LFE5
     /tmp/cc1cxfAL.s:2566   .debug_str:000000000000043b .LASF136
     /tmp/cc1cxfAL.s:2684   .debug_str:0000000000000840 .LASF137
     /tmp/cc1cxfAL.s:2588   .debug_str:00000000000004e1 .LASF138
GAS LISTING /tmp/cc1cxfAL.s 			page 16


     /tmp/cc1cxfAL.s:2690   .debug_str:0000000000000855 .LASF139
     /tmp/cc1cxfAL.s:2574   .debug_str:0000000000000469 .LASF140
     /tmp/cc1cxfAL.s:2606   .debug_str:0000000000000567 .LASF141
     /tmp/cc1cxfAL.s:2698   .debug_str:0000000000000882 .LASF142
     /tmp/cc1cxfAL.s:2724   .debug_str:000000000000094c .LASF153
     /tmp/cc1cxfAL.s:2520   .debug_str:0000000000000308 .LASF154
     /tmp/cc1cxfAL.s:228    .text._ZN3TCB10isFinishedEv:0000000000000000 .LVL12
     /tmp/cc1cxfAL.s:238    .text._ZN3TCB10isFinishedEv:0000000000000010 .LVL13
     /tmp/cc1cxfAL.s:283    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/cc1cxfAL.s:5      .text:0000000000000000 .Ltext0
     /tmp/cc1cxfAL.s:277    .text:000000000000012c .Letext0
     /tmp/cc1cxfAL.s:135    .gcc_except_table:0000000000000000 .LLSDA44

UNDEFINED SYMBOLS
interruptHandler
_Znwm
_ZN9SemaphoreC1Ej
_Z13thread_createPP3TCBPFvPvES2_
_ZN3TCB7runningE
_Z8userMainv
_Z15thread_dispatchv
_ZdlPv
_Unwind_Resume
__gxx_personality_v0
