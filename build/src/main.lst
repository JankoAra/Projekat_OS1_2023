GAS LISTING /tmp/ccRvmN9S.s 			page 1


   1              		.file	"main.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_Z4idlePv
   9              	_Z4idlePv:
  10              	.LFB46:
  11              		.file 1 "src/main.cpp"
   1:src/main.cpp  **** #include "../lib/hw.h"
   2:src/main.cpp  **** #include "../h/Riscv.hpp"
   3:src/main.cpp  **** #include "../h/KMemory.hpp"
   4:src/main.cpp  **** #include "../h/KConsole.hpp"
   5:src/main.cpp  **** #include "../h/TCB.hpp"
   6:src/main.cpp  **** #include "../h/syscall_c.hpp"
   7:src/main.cpp  **** #include "../h/syscall_cpp.hpp"
   8:src/main.cpp  **** 
   9:src/main.cpp  **** extern "C" void interruptHandler();
  10:src/main.cpp  **** 
  11:src/main.cpp  **** void userMain();
  12:src/main.cpp  **** 
  13:src/main.cpp  **** void idle(void*) {
  12              		.loc 1 13 18
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23341100 		sd	ra,8(sp)
  17 0008 23308100 		sd	s0,0(sp)
  18              		.cfi_offset 1, -8
  19              		.cfi_offset 8, -16
  20 000c 13040101 		addi	s0,sp,16
  21              		.cfi_def_cfa 8, 0
  22              	.L2:
  14:src/main.cpp  ****     while (1) { thread_dispatch(); }
  23              		.loc 1 14 5 discriminator 1
  24              		.loc 1 14 17 discriminator 1
  25              		.loc 1 14 32 is_stmt 0 discriminator 1
  26 0010 97000000 		call	_Z15thread_dispatchv@plt
  26      E7800000 
  27              	.LVL0:
  28              		.loc 1 14 5 is_stmt 1 discriminator 1
  29 0018 6FF09FFF 		j	.L2
  30              		.cfi_endproc
  31              	.LFE46:
  33              		.align	2
  34              		.globl	_Z22kernelConsumerFunctionPv
  36              	_Z22kernelConsumerFunctionPv:
  37              	.LFB47:
  15:src/main.cpp  **** }
  16:src/main.cpp  **** 
  17:src/main.cpp  **** void kernelConsumerFunction(void*) {
  38              		.loc 1 17 36
  39              		.cfi_startproc
  40 001c 130101FF 		addi	sp,sp,-16
  41              		.cfi_def_cfa_offset 16
  42 0020 23341100 		sd	ra,8(sp)
GAS LISTING /tmp/ccRvmN9S.s 			page 2


  43 0024 23308100 		sd	s0,0(sp)
  44              		.cfi_offset 1, -8
  45              		.cfi_offset 8, -16
  46 0028 13040101 		addi	s0,sp,16
  47              		.cfi_def_cfa 8, 0
  48 002c 6F008002 		j	.L6
  49              	.LVL1:
  50              	.L8:
  51              	.LBB10:
  18:src/main.cpp  ****     while (1) {
  19:src/main.cpp  ****         char c = KConsole::getFromOutput();
  20:src/main.cpp  ****         while (!(*KConsole::sr & CONSOLE_TX_STATUS_BIT)) {}
  21:src/main.cpp  ****         *KConsole::dr = c;
  52              		.loc 1 21 9
  53 0030 97070000 		la	a5,_ZN8KConsole2drE
  53      83B70700 
  54 0038 83B70700 		ld	a5,0(a5)
  55              		.loc 1 21 23 is_stmt 0
  56 003c 2380A700 		sb	a0,0(a5)
  22:src/main.cpp  ****         sem_signal(KConsole::outputBufferHasSpace);
  57              		.loc 1 22 9 is_stmt 1
  58              		.loc 1 22 19 is_stmt 0
  59 0040 97070000 		la	a5,_ZN8KConsole20outputBufferHasSpaceE
  59      83B70700 
  60 0048 03B50700 		ld	a0,0(a5)
  61              	.LVL2:
  62 004c 97000000 		call	_Z10sem_signalP4KSem@plt
  62      E7800000 
  63              	.LVL3:
  64              	.LBE10:
  18:src/main.cpp  ****     while (1) {
  65              		.loc 1 18 5 is_stmt 1
  66              	.L6:
  18:src/main.cpp  ****     while (1) {
  67              		.loc 1 18 5
  68              	.LBB11:
  19:src/main.cpp  ****         while (!(*KConsole::sr & CONSOLE_TX_STATUS_BIT)) {}
  69              		.loc 1 19 9
  19:src/main.cpp  ****         while (!(*KConsole::sr & CONSOLE_TX_STATUS_BIT)) {}
  70              		.loc 1 19 41 is_stmt 0
  71 0054 97000000 		call	_ZN8KConsole13getFromOutputEv@plt
  71      E7800000 
  72              	.LVL4:
  73              	.L5:
  20:src/main.cpp  ****         *KConsole::dr = c;
  74              		.loc 1 20 9 is_stmt 1
  20:src/main.cpp  ****         *KConsole::dr = c;
  75              		.loc 1 20 16
  20:src/main.cpp  ****         *KConsole::dr = c;
  76              		.loc 1 20 18 is_stmt 0
  77 005c 97070000 		la	a5,_ZN8KConsole2srE
  77      83B70700 
  78 0064 83B70700 		ld	a5,0(a5)
  79 0068 83C70700 		lbu	a5,0(a5)
  20:src/main.cpp  ****         *KConsole::dr = c;
  80              		.loc 1 20 16
  81 006c 93F70702 		andi	a5,a5,32
GAS LISTING /tmp/ccRvmN9S.s 			page 3


  82 0070 E38607FE 		beqz	a5,.L5
  83 0074 6FF0DFFB 		j	.L8
  84              	.LBE11:
  85              		.cfi_endproc
  86              	.LFE47:
  88              		.align	2
  89              		.globl	_Z5main2v
  91              	_Z5main2v:
  92              	.LFB48:
  23:src/main.cpp  ****     }
  24:src/main.cpp  **** }
  25:src/main.cpp  **** 
  26:src/main.cpp  **** int main2() {
  93              		.loc 1 26 13 is_stmt 1
  94              		.cfi_startproc
  95 0078 130101FD 		addi	sp,sp,-48
  96              		.cfi_def_cfa_offset 48
  97 007c 23341102 		sd	ra,40(sp)
  98 0080 23308102 		sd	s0,32(sp)
  99              		.cfi_offset 1, -8
 100              		.cfi_offset 8, -16
 101 0084 13040103 		addi	s0,sp,48
 102              		.cfi_def_cfa 8, 0
  27:src/main.cpp  ****     //postavljanje adrese prekidne rutine u stvec
  28:src/main.cpp  ****     __asm__ volatile("csrw stvec, %[handler]": :[handler] "r"(&interruptHandler));
 103              		.loc 1 28 5
 104              		.loc 1 28 82 is_stmt 0
 105 0088 97070000 		la	a5,interruptHandler
 105      83B70700 
 106              	#APP
 107              	# 28 "src/main.cpp" 1
  29              	
  30:src/main.cpp  ****     //inicijalizacija alokatora memorije
  31:src/main.cpp  ****     KMemory::initializeMemory();
 108              		csrw stvec, a5
 109              	# 0 "" 2
 110              		.loc 1 31 5 is_stmt 1
 111              		.loc 1 31 30 is_stmt 0
 112              	#NO_APP
 113 0094 97000000 		call	_ZN7KMemory16initializeMemoryEv@plt
 113      E7800000 
 114              	.LVL5:
  32:src/main.cpp  **** 
  33:src/main.cpp  ****     //inicijalizacija komunikacije sa konzolom
  34:src/main.cpp  ****     KConsole::initKConsole();
 115              		.loc 1 34 5 is_stmt 1
 116              		.loc 1 34 27 is_stmt 0
 117 009c 97000000 		call	_ZN8KConsole12initKConsoleEv@plt
 117      E7800000 
 118              	.LVL6:
  35:src/main.cpp  **** 
  36:src/main.cpp  ****     //pravljenje niti
  37:src/main.cpp  ****     thread_t mainHandle;
 119              		.loc 1 37 5 is_stmt 1
  38:src/main.cpp  ****     thread_t userHandle;
 120              		.loc 1 38 5
  39:src/main.cpp  ****     thread_t idleHandle;
GAS LISTING /tmp/ccRvmN9S.s 			page 4


 121              		.loc 1 39 5
  40:src/main.cpp  ****     thread_t consoleOutputHandle;
 122              		.loc 1 40 5
  41:src/main.cpp  ****     thread_create(&mainHandle, (TCB::Body)main, nullptr);
 123              		.loc 1 41 5
 124              		.loc 1 41 18 is_stmt 0
 125 00a4 13060000 		li	a2,0
 126 00a8 97050000 		la	a1,main
 126      83B50500 
 127 00b0 130584FE 		addi	a0,s0,-24
 128 00b4 97000000 		call	_Z13thread_createPP3TCBPFvPvES2_@plt
 128      E7800000 
 129              	.LVL7:
  42:src/main.cpp  ****     TCB::setRunning(mainHandle);
 130              		.loc 1 42 5 is_stmt 1
 131              		.loc 1 42 20 is_stmt 0
 132 00bc 833784FE 		ld	a5,-24(s0)
 133              	.LVL8:
 134              	.LBB12:
 135              	.LBB13:
 136              		.file 2 "src/../h/TCB.hpp"
   1:src/../h/TCB.hpp **** //
   2:src/../h/TCB.hpp **** // Created by os on 5/23/23.
   3:src/../h/TCB.hpp **** //
   4:src/../h/TCB.hpp **** 
   5:src/../h/TCB.hpp **** #ifndef PROJEKAT2023_TCB_HPP
   6:src/../h/TCB.hpp **** #define PROJEKAT2023_TCB_HPP
   7:src/../h/TCB.hpp **** 
   8:src/../h/TCB.hpp **** #include "../lib/hw.h"
   9:src/../h/TCB.hpp **** #include "../h/ThreadQueue.hpp"
  10:src/../h/TCB.hpp **** 
  11:src/../h/TCB.hpp **** int main();
  12:src/../h/TCB.hpp **** class TCB {
  13:src/../h/TCB.hpp **** public:
  14:src/../h/TCB.hpp ****     friend class Scheduler;
  15:src/../h/TCB.hpp **** 
  16:src/../h/TCB.hpp ****     using Body = void (*)(void*);
  17:src/../h/TCB.hpp **** 
  18:src/../h/TCB.hpp ****     enum ThreadStatus {
  19:src/../h/TCB.hpp ****         CREATED, ACTIVE, BLOCKED, JOINING, SLEEPING, FINISHED
  20:src/../h/TCB.hpp ****     };
  21:src/../h/TCB.hpp **** 
  22:src/../h/TCB.hpp ****     void setStatus(ThreadStatus stat) { this->status = stat; }
  23:src/../h/TCB.hpp **** 
  24:src/../h/TCB.hpp ****     ThreadStatus getStatus() { return this->status; }
  25:src/../h/TCB.hpp **** 
  26:src/../h/TCB.hpp ****     static TCB* createThread(Body function, void* args, uint64* stack);
  27:src/../h/TCB.hpp **** 
  28:src/../h/TCB.hpp ****     static void start(TCB* newTcb);
  29:src/../h/TCB.hpp **** 
  30:src/../h/TCB.hpp ****     uint64 getTimeSlice() { return timeSlice; }
  31:src/../h/TCB.hpp **** 
  32:src/../h/TCB.hpp ****     void setTimeSlice(uint64 value) { timeSlice = value; }
  33:src/../h/TCB.hpp **** 
  34:src/../h/TCB.hpp ****     Body getBody() { return threadFunction; }
  35:src/../h/TCB.hpp **** 
  36:src/../h/TCB.hpp ****     static TCB* getRunning() { return running; }
GAS LISTING /tmp/ccRvmN9S.s 			page 5


  37:src/../h/TCB.hpp **** 
  38:src/../h/TCB.hpp ****     static void setRunning(TCB* newRunning) { running = newRunning; }
 137              		.loc 2 38 47 is_stmt 1
 138              		.loc 2 38 55 is_stmt 0
 139 00c0 17070000 		la	a4,_ZN3TCB7runningE
 139      03370700 
 140 00c8 2330F700 		sd	a5,0(a4)
 141              	.LVL9:
 142              	.LBE13:
 143              	.LBE12:
  43:src/main.cpp  ****     mainHandle->setStatus(TCB::ACTIVE);
 144              		.loc 1 43 5 is_stmt 1
 145              	.LBB14:
 146              	.LBB15:
  22:src/../h/TCB.hpp **** 
 147              		.loc 2 22 41
  22:src/../h/TCB.hpp **** 
 148              		.loc 2 22 54 is_stmt 0
 149 00cc 13071000 		li	a4,1
 150 00d0 23ACE704 		sw	a4,88(a5)
 151              	.LVL10:
 152              	.LBE15:
 153              	.LBE14:
  44:src/main.cpp  ****     thread_create(&userHandle, (TCB::Body)userMain, nullptr);
 154              		.loc 1 44 5 is_stmt 1
 155              		.loc 1 44 18 is_stmt 0
 156 00d4 13060000 		li	a2,0
 157 00d8 97050000 		la	a1,_Z8userMainv
 157      83B50500 
 158 00e0 130504FE 		addi	a0,s0,-32
 159 00e4 97000000 		call	_Z13thread_createPP3TCBPFvPvES2_@plt
 159      E7800000 
 160              	.LVL11:
  45:src/main.cpp  ****     thread_create(&consoleOutputHandle, kernelConsumerFunction, nullptr);
 161              		.loc 1 45 5 is_stmt 1
 162              		.loc 1 45 18 is_stmt 0
 163 00ec 13060000 		li	a2,0
 164 00f0 97050000 		lla	a1,_Z22kernelConsumerFunctionPv
 164      93850500 
 165 00f8 130504FD 		addi	a0,s0,-48
 166 00fc 97000000 		call	_Z13thread_createPP3TCBPFvPvES2_@plt
 166      E7800000 
 167              	.LVL12:
  46:src/main.cpp  ****     thread_create(&idleHandle, idle, nullptr);
 168              		.loc 1 46 5 is_stmt 1
 169              		.loc 1 46 18 is_stmt 0
 170 0104 13060000 		li	a2,0
 171 0108 97050000 		lla	a1,_Z4idlePv
 171      93850500 
 172 0110 130584FD 		addi	a0,s0,-40
 173 0114 97000000 		call	_Z13thread_createPP3TCBPFvPvES2_@plt
 173      E7800000 
 174              	.LVL13:
  47:src/main.cpp  **** 
  48:src/main.cpp  ****     //omogucavanje prekida
  49:src/main.cpp  ****     Riscv::ms_sstatus(Riscv::SSTATUS_SIE);
 175              		.loc 1 49 5 is_stmt 1
GAS LISTING /tmp/ccRvmN9S.s 			page 6


 176              	.LBB16:
 177              	.LBB17:
 178              		.file 3 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 5/17/23.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJEKAT2023_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJEKAT2023_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** class Riscv {
  11:src/../h/Riscv.hpp **** public:
  12:src/../h/Riscv.hpp **** 
  13:src/../h/Riscv.hpp **** 	static void returnFromInterrupt();
  14:src/../h/Riscv.hpp **** 
  15:src/../h/Riscv.hpp **** 	//read scause
  16:src/../h/Riscv.hpp **** 	static uint64 r_scause();
  17:src/../h/Riscv.hpp **** 
  18:src/../h/Riscv.hpp **** 	//write scause
  19:src/../h/Riscv.hpp **** 	static void w_scause(uint64 scause);
  20:src/../h/Riscv.hpp **** 
  21:src/../h/Riscv.hpp **** 	//read sepc
  22:src/../h/Riscv.hpp **** 	static uint64 r_sepc();
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp **** 	//write sepc
  25:src/../h/Riscv.hpp **** 	static void w_sepc(uint64 sepc);
  26:src/../h/Riscv.hpp **** 
  27:src/../h/Riscv.hpp **** 	//read stvec
  28:src/../h/Riscv.hpp **** 	static uint64 r_stvec();
  29:src/../h/Riscv.hpp **** 
  30:src/../h/Riscv.hpp **** 	//write stvec
  31:src/../h/Riscv.hpp **** 	static void w_stvec(uint64 stvec);
  32:src/../h/Riscv.hpp **** 
  33:src/../h/Riscv.hpp **** 	enum BitMaskSip {
  34:src/../h/Riscv.hpp **** 		//postoji zahtev za softverski prekid
  35:src/../h/Riscv.hpp **** 		SIP_SSIP = (1 << 1),
  36:src/../h/Riscv.hpp **** 		//postoji prekid od tajmera
  37:src/../h/Riscv.hpp **** 		SIP_STIP = (1 << 5),
  38:src/../h/Riscv.hpp **** 		//postoji zahtev za spoljasnji hardverski prekid
  39:src/../h/Riscv.hpp **** 		SIP_SEIP = (1 << 9)
  40:src/../h/Riscv.hpp **** 	};
  41:src/../h/Riscv.hpp **** 
  42:src/../h/Riscv.hpp **** 	//mask set sip
  43:src/../h/Riscv.hpp **** 	static void ms_sip(uint64 mask);
  44:src/../h/Riscv.hpp **** 
  45:src/../h/Riscv.hpp **** 	//mask clear sip
  46:src/../h/Riscv.hpp **** 	static void mc_sip(uint64 mask);
  47:src/../h/Riscv.hpp **** 
  48:src/../h/Riscv.hpp **** 	//read sip
  49:src/../h/Riscv.hpp **** 	static uint64 r_sip();
  50:src/../h/Riscv.hpp **** 
  51:src/../h/Riscv.hpp **** 	//write sip
  52:src/../h/Riscv.hpp **** 	static void w_sip(uint64 sip);
  53:src/../h/Riscv.hpp **** 
  54:src/../h/Riscv.hpp **** 	//kada se pozove sret, SIE dobija vrednost SPIE, SPIE se postavlja na 1,
GAS LISTING /tmp/ccRvmN9S.s 			page 7


  55:src/../h/Riscv.hpp **** 	//rezim se postavlja na osnovu SPP bita, SPP se postavlja na 0
  56:src/../h/Riscv.hpp **** 	enum BitMaskSstatus {
  57:src/../h/Riscv.hpp **** 		//1 - dozvoljeni prekidi; 0- nedozvoljeni prekidi; igonrise se u korisnickom rezimu
  58:src/../h/Riscv.hpp **** 		SSTATUS_SIE = (1 << 1),
  59:src/../h/Riscv.hpp **** 		//prethodna vrednost bita SIE
  60:src/../h/Riscv.hpp **** 		SSTATUS_SPIE = (1 << 5),
  61:src/../h/Riscv.hpp **** 		//iz kog rezima se desio skok; 0 - iz korisnickog; 1 - iz sistemskog
  62:src/../h/Riscv.hpp **** 		SSTATUS_SPP = (1 << 8)
  63:src/../h/Riscv.hpp **** 	};
  64:src/../h/Riscv.hpp **** 
  65:src/../h/Riscv.hpp **** 	//mask set sstatus
  66:src/../h/Riscv.hpp **** 	static void ms_sstatus(uint64 mask);
  67:src/../h/Riscv.hpp **** 
  68:src/../h/Riscv.hpp **** 	//mask clear sstatus
  69:src/../h/Riscv.hpp **** 	static void mc_sstatus(uint64 mask);
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp **** 	//read sstatus
  72:src/../h/Riscv.hpp **** 	static uint64 r_sstatus();
  73:src/../h/Riscv.hpp **** 
  74:src/../h/Riscv.hpp **** 	//write sstatus
  75:src/../h/Riscv.hpp **** 	static void w_sstatus(uint64 sstatus);
  76:src/../h/Riscv.hpp **** 
  77:src/../h/Riscv.hpp **** 	//upisuje kod sistemskog poziva u registar a0
  78:src/../h/Riscv.hpp **** 	static void loadOpCode(uint64 opCode);
  79:src/../h/Riscv.hpp **** 
  80:src/../h/Riscv.hpp **** };
  81:src/../h/Riscv.hpp **** 
  82:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause() {
  83:src/../h/Riscv.hpp **** 	uint64 volatile scause;
  84:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[scause], scause": [scause] "=r"(scause));
  85:src/../h/Riscv.hpp **** 	return scause;
  86:src/../h/Riscv.hpp **** }
  87:src/../h/Riscv.hpp **** 
  88:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
  89:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw scause, %[scause]": :[scause] "r"(scause));
  90:src/../h/Riscv.hpp **** }
  91:src/../h/Riscv.hpp **** 
  92:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc() {
  93:src/../h/Riscv.hpp **** 	uint64 volatile sepc;
  94:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[sepc], sepc": [sepc] "=r"(sepc));
  95:src/../h/Riscv.hpp **** 	return sepc;
  96:src/../h/Riscv.hpp **** }
  97:src/../h/Riscv.hpp **** 
  98:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
  99:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 100:src/../h/Riscv.hpp **** }
 101:src/../h/Riscv.hpp **** 
 102:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec() {
 103:src/../h/Riscv.hpp **** 	uint64 volatile stvec;
 104:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[stvec], stvec": [stvec] "=r"(stvec));
 105:src/../h/Riscv.hpp **** 	return stvec;
 106:src/../h/Riscv.hpp **** }
 107:src/../h/Riscv.hpp **** 
 108:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 109:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw stvec, %[stvec]": :[stvec] "r"(stvec));
 110:src/../h/Riscv.hpp **** }
 111:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/ccRvmN9S.s 			page 8


 112:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 113:src/../h/Riscv.hpp **** 	__asm__ volatile("csrs sip, %[mask]": :[mask] "r"(mask));
 114:src/../h/Riscv.hpp **** }
 115:src/../h/Riscv.hpp **** 
 116:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 117:src/../h/Riscv.hpp **** 	__asm__ volatile("csrc sip, %[mask]": :[mask] "r"(mask));
 118:src/../h/Riscv.hpp **** }
 119:src/../h/Riscv.hpp **** 
 120:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip() {
 121:src/../h/Riscv.hpp **** 	uint64 volatile sip;
 122:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[sip], sip": [sip] "=r"(sip));
 123:src/../h/Riscv.hpp **** 	return sip;
 124:src/../h/Riscv.hpp **** }
 125:src/../h/Riscv.hpp **** 
 126:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip) {
 127:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw sip, %[sip]": :[sip] "r"(sip));
 128:src/../h/Riscv.hpp **** }
 129:src/../h/Riscv.hpp **** 
 130:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
 131:src/../h/Riscv.hpp **** 	__asm__ volatile("csrs sstatus, %[mask]": :[mask] "r"(mask));
 179              		.loc 3 131 2
 180              		.loc 3 131 62 is_stmt 0
 181 011c 93072000 		li	a5,2
 182              	#APP
 183              	# 131 "src/../h/Riscv.hpp" 1
 132              	}
 184              		csrs sstatus, a5
 185              	# 0 "" 2
 186              	.LVL14:
 187              	#NO_APP
 188              	.LBE17:
 189              	.LBE16:
  50:src/main.cpp  **** 
  51:src/main.cpp  ****     //cekanje da se userMain zavrsi
  52:src/main.cpp  ****     thread_join(userHandle);
 190              		.loc 1 52 5 is_stmt 1
 191              		.loc 1 52 16 is_stmt 0
 192 0124 033504FE 		ld	a0,-32(s0)
 193 0128 97000000 		call	_Z11thread_joinP3TCB@plt
 193      E7800000 
 194              	.LVL15:
 195              	.L10:
  53:src/main.cpp  **** 
  54:src/main.cpp  ****     //flush output bafera za konzolu
  55:src/main.cpp  ****     while (KConsole::outputHead != KConsole::outputTail) {}
 196              		.loc 1 55 5 is_stmt 1
 197              		.loc 1 55 33
 198 0130 97070000 		la	a5,_ZN8KConsole10outputHeadE
 198      83B70700 
 199 0138 03A70700 		lw	a4,0(a5)
 200 013c 97070000 		la	a5,_ZN8KConsole10outputTailE
 200      83B70700 
 201 0144 83A70700 		lw	a5,0(a5)
 202 0148 E314F7FE 		bne	a4,a5,.L10
  56:src/main.cpp  **** 
  57:src/main.cpp  ****     //maskiranje svih prekida
  58:src/main.cpp  ****     Riscv::mc_sstatus(Riscv::SSTATUS_SIE);
GAS LISTING /tmp/ccRvmN9S.s 			page 9


 203              		.loc 1 58 5
 204              	.LVL16:
 205              	.LBB18:
 206              	.LBB19:
 133:src/../h/Riscv.hpp **** 
 134:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask) {
 135:src/../h/Riscv.hpp **** 	__asm__ volatile("csrc sstatus, %[mask]": :[mask] "r"(mask));
 207              		.loc 3 135 2
 208              		.loc 3 135 62 is_stmt 0
 209 014c 93072000 		li	a5,2
 210              	#APP
 211              	# 135 "src/../h/Riscv.hpp" 1
 136              	}
 212              		csrc sstatus, a5
 213              	# 0 "" 2
 214              	.LVL17:
 215              	#NO_APP
 216              	.LBE19:
 217              	.LBE18:
  59:src/main.cpp  **** 
  60:src/main.cpp  ****     return 0;
 218              		.loc 1 60 5 is_stmt 1
  61:src/main.cpp  **** }...
 219              		.loc 1 61 1 is_stmt 0
 220 0154 13050000 		li	a0,0
 221 0158 83308102 		ld	ra,40(sp)
 222              		.cfi_restore 1
 223 015c 03340102 		ld	s0,32(sp)
 224              		.cfi_restore 8
 225              		.cfi_def_cfa 2, 48
 226 0160 13010103 		addi	sp,sp,48
 227              		.cfi_def_cfa_offset 0
 228 0164 67800000 		jr	ra
 229              		.cfi_endproc
 230              	.LFE48:
 232              	.Letext0:
 233              		.file 4 "src/../lib/hw.h"
 234              		.file 5 "src/../h/KMemory.hpp"
 235              		.file 6 "src/../h/../h/syscall_c.hpp"
 236              		.file 7 "src/../h/KConsole.hpp"
 237              		.file 8 "src/../h/../h/ThreadQueue.hpp"
GAS LISTING /tmp/ccRvmN9S.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/ccRvmN9S.s:9      .text:0000000000000000 _Z4idlePv
     /tmp/ccRvmN9S.s:13     .text:0000000000000000 .L0 
     /tmp/ccRvmN9S.s:14     .text:0000000000000000 .L0 
     /tmp/ccRvmN9S.s:15     .text:0000000000000004 .L0 
     /tmp/ccRvmN9S.s:18     .text:000000000000000c .L0 
     /tmp/ccRvmN9S.s:19     .text:000000000000000c .L0 
     /tmp/ccRvmN9S.s:21     .text:0000000000000010 .L0 
     /tmp/ccRvmN9S.s:24     .text:0000000000000010 .L0 
     /tmp/ccRvmN9S.s:25     .text:0000000000000010 .L0 
     /tmp/ccRvmN9S.s:26     .text:0000000000000010 .L0 
     /tmp/ccRvmN9S.s:29     .text:0000000000000018 .L0 
     /tmp/ccRvmN9S.s:30     .text:000000000000001c .L0 
     /tmp/ccRvmN9S.s:36     .text:000000000000001c _Z22kernelConsumerFunctionPv
     /tmp/ccRvmN9S.s:39     .text:000000000000001c .L0 
     /tmp/ccRvmN9S.s:40     .text:000000000000001c .L0 
     /tmp/ccRvmN9S.s:41     .text:0000000000000020 .L0 
     /tmp/ccRvmN9S.s:44     .text:0000000000000028 .L0 
     /tmp/ccRvmN9S.s:45     .text:0000000000000028 .L0 
     /tmp/ccRvmN9S.s:47     .text:000000000000002c .L0 
     /tmp/ccRvmN9S.s:53     .text:0000000000000030 .L0 
     /tmp/ccRvmN9S.s:56     .text:000000000000003c .L0 
     /tmp/ccRvmN9S.s:58     .text:0000000000000040 .L0 
     /tmp/ccRvmN9S.s:59     .text:0000000000000040 .L0 
     /tmp/ccRvmN9S.s:67     .text:0000000000000054 .L0 
     /tmp/ccRvmN9S.s:69     .text:0000000000000054 .L0 
     /tmp/ccRvmN9S.s:70     .text:0000000000000054 .L0 
     /tmp/ccRvmN9S.s:71     .text:0000000000000054 .L0 
     /tmp/ccRvmN9S.s:75     .text:000000000000005c .L0 
     /tmp/ccRvmN9S.s:76     .text:000000000000005c .L0 
     /tmp/ccRvmN9S.s:77     .text:000000000000005c .L0 
     /tmp/ccRvmN9S.s:81     .text:000000000000006c .L0 
     /tmp/ccRvmN9S.s:85     .text:0000000000000078 .L0 
     /tmp/ccRvmN9S.s:91     .text:0000000000000078 _Z5main2v
     /tmp/ccRvmN9S.s:94     .text:0000000000000078 .L0 
     /tmp/ccRvmN9S.s:95     .text:0000000000000078 .L0 
     /tmp/ccRvmN9S.s:96     .text:000000000000007c .L0 
     /tmp/ccRvmN9S.s:99     .text:0000000000000084 .L0 
     /tmp/ccRvmN9S.s:100    .text:0000000000000084 .L0 
     /tmp/ccRvmN9S.s:102    .text:0000000000000088 .L0 
     /tmp/ccRvmN9S.s:104    .text:0000000000000088 .L0 
     /tmp/ccRvmN9S.s:105    .text:0000000000000088 .L0 
     /tmp/ccRvmN9S.s:111    .text:0000000000000094 .L0 
     /tmp/ccRvmN9S.s:113    .text:0000000000000094 .L0 
     /tmp/ccRvmN9S.s:116    .text:000000000000009c .L0 
     /tmp/ccRvmN9S.s:117    .text:000000000000009c .L0 
     /tmp/ccRvmN9S.s:120    .text:00000000000000a4 .L0 
     /tmp/ccRvmN9S.s:121    .text:00000000000000a4 .L0 
     /tmp/ccRvmN9S.s:122    .text:00000000000000a4 .L0 
     /tmp/ccRvmN9S.s:123    .text:00000000000000a4 .L0 
     /tmp/ccRvmN9S.s:124    .text:00000000000000a4 .L0 
     /tmp/ccRvmN9S.s:125    .text:00000000000000a4 .L0 
     /tmp/ccRvmN9S.s:131    .text:00000000000000bc .L0 
     /tmp/ccRvmN9S.s:132    .text:00000000000000bc .L0 
     /tmp/ccRvmN9S.s:138    .text:00000000000000c0 .L0 
     /tmp/ccRvmN9S.s:139    .text:00000000000000c0 .L0 
GAS LISTING /tmp/ccRvmN9S.s 			page 11


     /tmp/ccRvmN9S.s:147    .text:00000000000000cc .L0 
     /tmp/ccRvmN9S.s:148    .text:00000000000000cc .L0 
     /tmp/ccRvmN9S.s:149    .text:00000000000000cc .L0 
     /tmp/ccRvmN9S.s:155    .text:00000000000000d4 .L0 
     /tmp/ccRvmN9S.s:156    .text:00000000000000d4 .L0 
     /tmp/ccRvmN9S.s:162    .text:00000000000000ec .L0 
     /tmp/ccRvmN9S.s:163    .text:00000000000000ec .L0 
     /tmp/ccRvmN9S.s:169    .text:0000000000000104 .L0 
     /tmp/ccRvmN9S.s:170    .text:0000000000000104 .L0 
     /tmp/ccRvmN9S.s:179    .text:000000000000011c .L0 
     /tmp/ccRvmN9S.s:180    .text:000000000000011c .L0 
     /tmp/ccRvmN9S.s:181    .text:000000000000011c .L0 
     /tmp/ccRvmN9S.s:191    .text:0000000000000124 .L0 
     /tmp/ccRvmN9S.s:192    .text:0000000000000124 .L0 
     /tmp/ccRvmN9S.s:197    .text:0000000000000130 .L0 
     /tmp/ccRvmN9S.s:198    .text:0000000000000130 .L0 
     /tmp/ccRvmN9S.s:207    .text:000000000000014c .L0 
     /tmp/ccRvmN9S.s:208    .text:000000000000014c .L0 
     /tmp/ccRvmN9S.s:209    .text:000000000000014c .L0 
     /tmp/ccRvmN9S.s:219    .text:0000000000000154 .L0 
     /tmp/ccRvmN9S.s:220    .text:0000000000000154 .L0 
     /tmp/ccRvmN9S.s:222    .text:000000000000015c .L0 
     /tmp/ccRvmN9S.s:224    .text:0000000000000160 .L0 
     /tmp/ccRvmN9S.s:225    .text:0000000000000160 .L0 
     /tmp/ccRvmN9S.s:227    .text:0000000000000164 .L0 
     /tmp/ccRvmN9S.s:229    .text:0000000000000168 .L0 
     /tmp/ccRvmN9S.s:238    .text:0000000000000168 .L0 
     /tmp/ccRvmN9S.s:53     .text:0000000000000030 .L0 
     /tmp/ccRvmN9S.s:59     .text:0000000000000040 .L0 
     /tmp/ccRvmN9S.s:77     .text:000000000000005c .L0 
     /tmp/ccRvmN9S.s:105    .text:0000000000000088 .L0 
     /tmp/ccRvmN9S.s:126    .text:00000000000000a8 .L0 
     /tmp/ccRvmN9S.s:139    .text:00000000000000c0 .L0 
     /tmp/ccRvmN9S.s:157    .text:00000000000000d8 .L0 
     /tmp/ccRvmN9S.s:164    .text:00000000000000f0 .L0 
     /tmp/ccRvmN9S.s:171    .text:0000000000000108 .L0 
     /tmp/ccRvmN9S.s:198    .text:0000000000000130 .L0 
     /tmp/ccRvmN9S.s:200    .text:000000000000013c .L0 
     /tmp/ccRvmN9S.s:22     .text:0000000000000010 .L2
     /tmp/ccRvmN9S.s:66     .text:0000000000000054 .L6
     /tmp/ccRvmN9S.s:73     .text:000000000000005c .L5
     /tmp/ccRvmN9S.s:50     .text:0000000000000030 .L8
     /tmp/ccRvmN9S.s:195    .text:0000000000000130 .L10
     /tmp/ccRvmN9S.s:1762   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccRvmN9S.s:3183   .debug_str:000000000000099c .LASF196
     /tmp/ccRvmN9S.s:2955   .debug_str:00000000000002ed .LASF197
     /tmp/ccRvmN9S.s:3143   .debug_str:000000000000087b .LASF198
     /tmp/ccRvmN9S.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccRvmN9S.s:232    .text:0000000000000168 .Letext0
     /tmp/ccRvmN9S.s:2855   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccRvmN9S.s:2993   .debug_str:00000000000003fc .LASF0
     /tmp/ccRvmN9S.s:3019   .debug_str:00000000000004a7 .LASF1
     /tmp/ccRvmN9S.s:3125   .debug_str:00000000000007ec .LASF2
     /tmp/ccRvmN9S.s:2941   .debug_str:0000000000000282 .LASF3
     /tmp/ccRvmN9S.s:3137   .debug_str:000000000000085a .LASF4
     /tmp/ccRvmN9S.s:3005   .debug_str:0000000000000444 .LASF5
     /tmp/ccRvmN9S.s:2867   .debug_str:0000000000000054 .LASF6
GAS LISTING /tmp/ccRvmN9S.s 			page 12


     /tmp/ccRvmN9S.s:3091   .debug_str:00000000000006ee .LASF7
     /tmp/ccRvmN9S.s:3085   .debug_str:00000000000006cb .LASF8
     /tmp/ccRvmN9S.s:3009   .debug_str:0000000000000468 .LASF9
     /tmp/ccRvmN9S.s:2965   .debug_str:000000000000031b .LASF10
     /tmp/ccRvmN9S.s:2979   .debug_str:0000000000000388 .LASF11
     /tmp/ccRvmN9S.s:2895   .debug_str:0000000000000114 .LASF12
     /tmp/ccRvmN9S.s:2953   .debug_str:00000000000002de .LASF13
     /tmp/ccRvmN9S.s:2907   .debug_str:000000000000015d .LASF14
     /tmp/ccRvmN9S.s:2893   .debug_str:0000000000000104 .LASF15
     /tmp/ccRvmN9S.s:3163   .debug_str:000000000000091e .LASF16
     /tmp/ccRvmN9S.s:2937   .debug_str:000000000000024e .LASF17
     /tmp/ccRvmN9S.s:3155   .debug_str:00000000000008ef .LASF18
     /tmp/ccRvmN9S.s:3233   .debug_str:0000000000000bac .LASF50
     /tmp/ccRvmN9S.s:3215   .debug_str:0000000000000b52 .LASF70
     /tmp/ccRvmN9S.s:2947   .debug_str:00000000000002ac .LASF19
     /tmp/ccRvmN9S.s:3181   .debug_str:000000000000098f .LASF20
     /tmp/ccRvmN9S.s:2919   .debug_str:00000000000001dd .LASF21
     /tmp/ccRvmN9S.s:3043   .debug_str:000000000000054f .LASF52
     /tmp/ccRvmN9S.s:3205   .debug_str:0000000000000b03 .LASF54
     /tmp/ccRvmN9S.s:3203   .debug_str:0000000000000afa .LASF22
     /tmp/ccRvmN9S.s:3195   .debug_str:0000000000000aa9 .LASF24
     /tmp/ccRvmN9S.s:3121   .debug_str:00000000000007d8 .LASF26
     /tmp/ccRvmN9S.s:3071   .debug_str:000000000000063f .LASF28
     /tmp/ccRvmN9S.s:3097   .debug_str:0000000000000707 .LASF23
     /tmp/ccRvmN9S.s:3105   .debug_str:0000000000000740 .LASF25
     /tmp/ccRvmN9S.s:3057   .debug_str:00000000000005d5 .LASF27
     /tmp/ccRvmN9S.s:3011   .debug_str:000000000000047b .LASF29
     /tmp/ccRvmN9S.s:3245   .debug_str:0000000000000c06 .LASF30
     /tmp/ccRvmN9S.s:3185   .debug_str:0000000000000a60 .LASF31
     /tmp/ccRvmN9S.s:3055   .debug_str:00000000000005cd .LASF32
     /tmp/ccRvmN9S.s:3069   .debug_str:000000000000062b .LASF33
     /tmp/ccRvmN9S.s:3159   .debug_str:000000000000090a .LASF34
     /tmp/ccRvmN9S.s:3139   .debug_str:0000000000000861 .LASF35
     /tmp/ccRvmN9S.s:3141   .debug_str:0000000000000874 .LASF36
     /tmp/ccRvmN9S.s:2901   .debug_str:0000000000000132 .LASF37
     /tmp/ccRvmN9S.s:2935   .debug_str:0000000000000248 .LASF38
     /tmp/ccRvmN9S.s:2987   .debug_str:00000000000003d3 .LASF39
     /tmp/ccRvmN9S.s:2999   .debug_str:0000000000000428 .LASF40
     /tmp/ccRvmN9S.s:2923   .debug_str:00000000000001f0 .LASF41
     /tmp/ccRvmN9S.s:2869   .debug_str:000000000000005b .LASF42
     /tmp/ccRvmN9S.s:3129   .debug_str:0000000000000804 .LASF43
     /tmp/ccRvmN9S.s:3123   .debug_str:00000000000007e1 .LASF44
     /tmp/ccRvmN9S.s:3257   .debug_str:0000000000000c68 .LASF45
     /tmp/ccRvmN9S.s:3235   .debug_str:0000000000000bb2 .LASF46
     /tmp/ccRvmN9S.s:3247   .debug_str:0000000000000c0e .LASF47
     /tmp/ccRvmN9S.s:3229   .debug_str:0000000000000b8c .LASF48
     /tmp/ccRvmN9S.s:3041   .debug_str:0000000000000539 .LASF49
     /tmp/ccRvmN9S.s:3189   .debug_str:0000000000000a7e .LASF64
     /tmp/ccRvmN9S.s:2913   .debug_str:000000000000019d .LASF66
     /tmp/ccRvmN9S.s:2945   .debug_str:00000000000002a4 .LASF51
     /tmp/ccRvmN9S.s:2889   .debug_str:00000000000000e4 .LASF53
     /tmp/ccRvmN9S.s:3099   .debug_str:000000000000070e .LASF55
     /tmp/ccRvmN9S.s:2957   .debug_str:00000000000002fa .LASF56
     /tmp/ccRvmN9S.s:2969   .debug_str:0000000000000331 .LASF58
     /tmp/ccRvmN9S.s:2961   .debug_str:0000000000000307 .LASF57
     /tmp/ccRvmN9S.s:2997   .debug_str:0000000000000413 .LASF59
     /tmp/ccRvmN9S.s:2991   .debug_str:00000000000003f0 .LASF60
GAS LISTING /tmp/ccRvmN9S.s 			page 13


     /tmp/ccRvmN9S.s:3039   .debug_str:000000000000052d .LASF61
     /tmp/ccRvmN9S.s:3131   .debug_str:000000000000081c .LASF62
     /tmp/ccRvmN9S.s:3103   .debug_str:0000000000000736 .LASF63
     /tmp/ccRvmN9S.s:3079   .debug_str:0000000000000699 .LASF65
     /tmp/ccRvmN9S.s:2871   .debug_str:0000000000000066 .LASF67
     /tmp/ccRvmN9S.s:3033   .debug_str:00000000000004ff .LASF68
     /tmp/ccRvmN9S.s:3227   .debug_str:0000000000000b83 .LASF69
     /tmp/ccRvmN9S.s:3149   .debug_str:00000000000008af .LASF71
     /tmp/ccRvmN9S.s:3095   .debug_str:00000000000006ff .LASF72
     /tmp/ccRvmN9S.s:2921   .debug_str:00000000000001e9 .LASF73
     /tmp/ccRvmN9S.s:2857   .debug_str:0000000000000000 .LASF74
     /tmp/ccRvmN9S.s:2971   .debug_str:0000000000000347 .LASF75
     /tmp/ccRvmN9S.s:3015   .debug_str:0000000000000493 .LASF76
     /tmp/ccRvmN9S.s:2887   .debug_str:00000000000000db .LASF77
     /tmp/ccRvmN9S.s:3167   .debug_str:0000000000000937 .LASF150
     /tmp/ccRvmN9S.s:2899   .debug_str:0000000000000128 .LASF78
     /tmp/ccRvmN9S.s:2981   .debug_str:0000000000000396 .LASF79
     /tmp/ccRvmN9S.s:3111   .debug_str:000000000000077c .LASF84
     /tmp/ccRvmN9S.s:3031   .debug_str:00000000000004eb .LASF86
     /tmp/ccRvmN9S.s:3161   .debug_str:0000000000000911 .LASF80
     /tmp/ccRvmN9S.s:3239   .debug_str:0000000000000bd1 .LASF81
     /tmp/ccRvmN9S.s:3077   .debug_str:0000000000000694 .LASF199
     /tmp/ccRvmN9S.s:3253   .debug_str:0000000000000c5c .LASF82
     /tmp/ccRvmN9S.s:3007   .debug_str:0000000000000456 .LASF83
     /tmp/ccRvmN9S.s:3025   .debug_str:00000000000004cd .LASF85
     /tmp/ccRvmN9S.s:3109   .debug_str:0000000000000764 .LASF87
     /tmp/ccRvmN9S.s:2927   .debug_str:000000000000021a .LASF88
     /tmp/ccRvmN9S.s:3133   .debug_str:0000000000000834 .LASF89
     /tmp/ccRvmN9S.s:3101   .debug_str:000000000000072e .LASF90
     /tmp/ccRvmN9S.s:3035   .debug_str:0000000000000504 .LASF91
     /tmp/ccRvmN9S.s:2931   .debug_str:0000000000000230 .LASF92
     /tmp/ccRvmN9S.s:3153   .debug_str:00000000000008d9 .LASF93
     /tmp/ccRvmN9S.s:2861   .debug_str:0000000000000011 .LASF94
     /tmp/ccRvmN9S.s:3175   .debug_str:000000000000095e .LASF95
     /tmp/ccRvmN9S.s:3201   .debug_str:0000000000000ae6 .LASF96
     /tmp/ccRvmN9S.s:3073   .debug_str:0000000000000654 .LASF97
     /tmp/ccRvmN9S.s:3199   .debug_str:0000000000000adb .LASF98
     /tmp/ccRvmN9S.s:2925   .debug_str:0000000000000202 .LASF99
     /tmp/ccRvmN9S.s:3261   .debug_str:0000000000000c8d .LASF100
     /tmp/ccRvmN9S.s:2951   .debug_str:00000000000002c5 .LASF101
     /tmp/ccRvmN9S.s:2929   .debug_str:0000000000000227 .LASF102
     /tmp/ccRvmN9S.s:2903   .debug_str:0000000000000145 .LASF103
     /tmp/ccRvmN9S.s:3027   .debug_str:00000000000004da .LASF104
     /tmp/ccRvmN9S.s:2873   .debug_str:000000000000007c .LASF105
     /tmp/ccRvmN9S.s:3259   .debug_str:0000000000000c80 .LASF106
     /tmp/ccRvmN9S.s:2975   .debug_str:0000000000000367 .LASF107
     /tmp/ccRvmN9S.s:2863   .debug_str:000000000000001c .LASF108
     /tmp/ccRvmN9S.s:3067   .debug_str:000000000000061e .LASF109
     /tmp/ccRvmN9S.s:3251   .debug_str:0000000000000c46 .LASF200
     /tmp/ccRvmN9S.s:3193   .debug_str:0000000000000aa1 .LASF110
     /tmp/ccRvmN9S.s:2891   .debug_str:00000000000000f5 .LASF111
     /tmp/ccRvmN9S.s:3255   .debug_str:0000000000000c62 .LASF112
     /tmp/ccRvmN9S.s:3207   .debug_str:0000000000000b24 .LASF113
     /tmp/ccRvmN9S.s:3187   .debug_str:0000000000000a74 .LASF114
     /tmp/ccRvmN9S.s:3119   .debug_str:00000000000007c8 .LASF115
     /tmp/ccRvmN9S.s:3081   .debug_str:00000000000006a1 .LASF116
     /tmp/ccRvmN9S.s:2949   .debug_str:00000000000002b8 .LASF117
GAS LISTING /tmp/ccRvmN9S.s 			page 14


     /tmp/ccRvmN9S.s:3135   .debug_str:000000000000084c .LASF118
     /tmp/ccRvmN9S.s:3223   .debug_str:0000000000000b77 .LASF119
     /tmp/ccRvmN9S.s:3179   .debug_str:0000000000000987 .LASF120
     /tmp/ccRvmN9S.s:3107   .debug_str:0000000000000753 .LASF121
     /tmp/ccRvmN9S.s:2915   .debug_str:00000000000001b5 .LASF156
     /tmp/ccRvmN9S.s:2865   .debug_str:000000000000002c .LASF157
     /tmp/ccRvmN9S.s:2967   .debug_str:000000000000032b .LASF122
     /tmp/ccRvmN9S.s:3157   .debug_str:0000000000000905 .LASF201
     /tmp/ccRvmN9S.s:3029   .debug_str:00000000000004e2 .LASF123
     /tmp/ccRvmN9S.s:3145   .debug_str:0000000000000899 .LASF124
     /tmp/ccRvmN9S.s:3063   .debug_str:00000000000005f4 .LASF125
     /tmp/ccRvmN9S.s:3089   .debug_str:00000000000006e8 .LASF126
     /tmp/ccRvmN9S.s:3053   .debug_str:00000000000005b8 .LASF127
     /tmp/ccRvmN9S.s:3177   .debug_str:0000000000000976 .LASF128
     /tmp/ccRvmN9S.s:3165   .debug_str:000000000000092a .LASF129
     /tmp/ccRvmN9S.s:3197   .debug_str:0000000000000abe .LASF130
     /tmp/ccRvmN9S.s:3211   .debug_str:0000000000000b35 .LASF131
     /tmp/ccRvmN9S.s:3249   .debug_str:0000000000000c24 .LASF132
     /tmp/ccRvmN9S.s:3003   .debug_str:0000000000000436 .LASF133
     /tmp/ccRvmN9S.s:3083   .debug_str:00000000000006ad .LASF134
     /tmp/ccRvmN9S.s:2985   .debug_str:00000000000003c6 .LASF135
     /tmp/ccRvmN9S.s:3117   .debug_str:00000000000007ab .LASF136
     /tmp/ccRvmN9S.s:2879   .debug_str:00000000000000a9 .LASF137
     /tmp/ccRvmN9S.s:2977   .debug_str:0000000000000373 .LASF138
     /tmp/ccRvmN9S.s:2963   .debug_str:000000000000030d .LASF139
     /tmp/ccRvmN9S.s:3171   .debug_str:000000000000094c .LASF140
     /tmp/ccRvmN9S.s:2859   .debug_str:0000000000000008 .LASF202
     /tmp/ccRvmN9S.s:3209   .debug_str:0000000000000b29 .LASF141
     /tmp/ccRvmN9S.s:2933   .debug_str:000000000000023b .LASF142
     /tmp/ccRvmN9S.s:2995   .debug_str:0000000000000409 .LASF143
     /tmp/ccRvmN9S.s:3093   .debug_str:00000000000006f5 .LASF144
     /tmp/ccRvmN9S.s:3021   .debug_str:00000000000004ba .LASF145
     /tmp/ccRvmN9S.s:3213   .debug_str:0000000000000b47 .LASF146
     /tmp/ccRvmN9S.s:3147   .debug_str:000000000000089f .LASF147
     /tmp/ccRvmN9S.s:3173   .debug_str:0000000000000959 .LASF148
     /tmp/ccRvmN9S.s:3059   .debug_str:00000000000005dc .LASF149
     /tmp/ccRvmN9S.s:3225   .debug_str:0000000000000b7e .LASF151
     /tmp/ccRvmN9S.s:3013   .debug_str:000000000000048e .LASF152
     /tmp/ccRvmN9S.s:2897   .debug_str:0000000000000123 .LASF153
     /tmp/ccRvmN9S.s:2939   .debug_str:0000000000000264 .LASF154
     /tmp/ccRvmN9S.s:2917   .debug_str:00000000000001c3 .LASF155
     /tmp/ccRvmN9S.s:2909   .debug_str:000000000000016d .LASF158
     /tmp/ccRvmN9S.s:2877   .debug_str:00000000000000a3 .LASF159
     /tmp/ccRvmN9S.s:3049   .debug_str:0000000000000594 .LASF160
     /tmp/ccRvmN9S.s:2875   .debug_str:000000000000008e .LASF161
     /tmp/ccRvmN9S.s:2973   .debug_str:000000000000034f .LASF162
     /tmp/ccRvmN9S.s:3127   .debug_str:00000000000007fa .LASF173
     /tmp/ccRvmN9S.s:3191   .debug_str:0000000000000a89 .LASF175
     /tmp/ccRvmN9S.s:3169   .debug_str:000000000000093f .LASF163
     /tmp/ccRvmN9S.s:3237   .debug_str:0000000000000bbc .LASF164
     /tmp/ccRvmN9S.s:3001   .debug_str:000000000000042e .LASF165
     /tmp/ccRvmN9S.s:2943   .debug_str:0000000000000288 .LASF166
     /tmp/ccRvmN9S.s:3023   .debug_str:00000000000004c5 .LASF167
     /tmp/ccRvmN9S.s:3051   .debug_str:0000000000000599 .LASF168
     /tmp/ccRvmN9S.s:2885   .debug_str:00000000000000d2 .LASF169
     /tmp/ccRvmN9S.s:3047   .debug_str:0000000000000578 .LASF170
     /tmp/ccRvmN9S.s:2911   .debug_str:0000000000000188 .LASF171
GAS LISTING /tmp/ccRvmN9S.s 			page 15


     /tmp/ccRvmN9S.s:3231   .debug_str:0000000000000b96 .LASF172
     /tmp/ccRvmN9S.s:3219   .debug_str:0000000000000b6c .LASF174
     /tmp/ccRvmN9S.s:3087   .debug_str:00000000000006de .LASF176
     /tmp/ccRvmN9S.s:92     .text:0000000000000078 .LFB48
     /tmp/ccRvmN9S.s:230    .text:0000000000000168 .LFE48
     /tmp/ccRvmN9S.s:2989   .debug_str:00000000000003e5 .LASF177
     /tmp/ccRvmN9S.s:3217   .debug_str:0000000000000b61 .LASF178
     /tmp/ccRvmN9S.s:2881   .debug_str:00000000000000bd .LASF179
     /tmp/ccRvmN9S.s:3263   .debug_str:0000000000000c9b .LASF180
     /tmp/ccRvmN9S.s:134    .text:00000000000000c0 .LBB12
     /tmp/ccRvmN9S.s:143    .text:00000000000000cc .LBE12
     /tmp/ccRvmN9S.s:2785   .debug_loc:0000000000000000 .LLST1
     /tmp/ccRvmN9S.s:145    .text:00000000000000cc .LBB14
     /tmp/ccRvmN9S.s:153    .text:00000000000000d4 .LBE14
     /tmp/ccRvmN9S.s:2792   .debug_loc:0000000000000023 .LLST2
     /tmp/ccRvmN9S.s:2800   .debug_loc:0000000000000047 .LLST3
     /tmp/ccRvmN9S.s:176    .text:000000000000011c .LBB16
     /tmp/ccRvmN9S.s:189    .text:0000000000000124 .LBE16
     /tmp/ccRvmN9S.s:2807   .debug_loc:000000000000006a .LLST4
     /tmp/ccRvmN9S.s:205    .text:000000000000014c .LBB18
     /tmp/ccRvmN9S.s:217    .text:0000000000000154 .LBE18
     /tmp/ccRvmN9S.s:2815   .debug_loc:000000000000008e .LLST5
     /tmp/ccRvmN9S.s:114    .text:000000000000009c .LVL5
     /tmp/ccRvmN9S.s:118    .text:00000000000000a4 .LVL6
     /tmp/ccRvmN9S.s:129    .text:00000000000000bc .LVL7
     /tmp/ccRvmN9S.s:160    .text:00000000000000ec .LVL11
     /tmp/ccRvmN9S.s:167    .text:0000000000000104 .LVL12
     /tmp/ccRvmN9S.s:174    .text:000000000000011c .LVL13
     /tmp/ccRvmN9S.s:194    .text:0000000000000130 .LVL15
     /tmp/ccRvmN9S.s:3037   .debug_str:0000000000000516 .LASF181
     /tmp/ccRvmN9S.s:3151   .debug_str:00000000000008bc .LASF182
     /tmp/ccRvmN9S.s:37     .text:000000000000001c .LFB47
     /tmp/ccRvmN9S.s:86     .text:0000000000000078 .LFE47
     /tmp/ccRvmN9S.s:2847   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccRvmN9S.s:2823   .debug_loc:00000000000000b2 .LLST0
     /tmp/ccRvmN9S.s:63     .text:0000000000000054 .LVL3
     /tmp/ccRvmN9S.s:72     .text:000000000000005c .LVL4
     /tmp/ccRvmN9S.s:3241   .debug_str:0000000000000bf3 .LASF183
     /tmp/ccRvmN9S.s:2883   .debug_str:00000000000000c8 .LASF184
     /tmp/ccRvmN9S.s:10     .text:0000000000000000 .LFB46
     /tmp/ccRvmN9S.s:31     .text:000000000000001c .LFE46
     /tmp/ccRvmN9S.s:27     .text:0000000000000018 .LVL0
     /tmp/ccRvmN9S.s:3017   .debug_str:000000000000049c .LASF185
     /tmp/ccRvmN9S.s:2959   .debug_str:0000000000000302 .LASF203
     /tmp/ccRvmN9S.s:2905   .debug_str:0000000000000158 .LASF186
     /tmp/ccRvmN9S.s:3221   .debug_str:0000000000000b72 .LASF187
     /tmp/ccRvmN9S.s:3075   .debug_str:0000000000000673 .LASF188
     /tmp/ccRvmN9S.s:3243   .debug_str:0000000000000bf8 .LASF190
     /tmp/ccRvmN9S.s:3065   .debug_str:0000000000000609 .LASF189
     /tmp/ccRvmN9S.s:3061   .debug_str:00000000000005e8 .LASF191
     /tmp/ccRvmN9S.s:3115   .debug_str:0000000000000796 .LASF192
     /tmp/ccRvmN9S.s:2983   .debug_str:00000000000003bb .LASF193
     /tmp/ccRvmN9S.s:3045   .debug_str:0000000000000563 .LASF194
     /tmp/ccRvmN9S.s:3113   .debug_str:0000000000000786 .LASF195
     /tmp/ccRvmN9S.s:133    .text:00000000000000c0 .LVL8
     /tmp/ccRvmN9S.s:141    .text:00000000000000cc .LVL9
     /tmp/ccRvmN9S.s:151    .text:00000000000000d4 .LVL10
GAS LISTING /tmp/ccRvmN9S.s 			page 16


     /tmp/ccRvmN9S.s:186    .text:0000000000000124 .LVL14
     /tmp/ccRvmN9S.s:204    .text:000000000000014c .LVL16
     /tmp/ccRvmN9S.s:214    .text:0000000000000154 .LVL17
     /tmp/ccRvmN9S.s:49     .text:0000000000000030 .LVL1
     /tmp/ccRvmN9S.s:61     .text:000000000000004c .LVL2
     /tmp/ccRvmN9S.s:239    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccRvmN9S.s:51     .text:0000000000000030 .LBB10
     /tmp/ccRvmN9S.s:64     .text:0000000000000054 .LBE10
     /tmp/ccRvmN9S.s:68     .text:0000000000000054 .LBB11
     /tmp/ccRvmN9S.s:84     .text:0000000000000078 .LBE11

UNDEFINED SYMBOLS
_Z15thread_dispatchv
_ZN8KConsole2drE
_ZN8KConsole20outputBufferHasSpaceE
_Z10sem_signalP4KSem
_ZN8KConsole13getFromOutputEv
_ZN8KConsole2srE
interruptHandler
_ZN7KMemory16initializeMemoryEv
_ZN8KConsole12initKConsoleEv
main
_Z13thread_createPP3TCBPFvPvES2_
_ZN3TCB7runningE
_Z8userMainv
_Z11thread_joinP3TCB
_ZN8KConsole10outputHeadE
_ZN8KConsole10outputTailE
