GAS LISTING /tmp/ccHXLpCe.s 			page 1


   1              		.file	"main.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.section	.rodata
   7              		.align	3
   8              	.LC0:
   9 0000 0A50726F 		.string	"\nProsao while"
   9      73616F20 
   9      7768696C 
   9      6500
  10              		.text
  11              		.align	2
  12              		.globl	main
  14              	main:
  15              	.LFB41:
  16              		.file 1 "src/main.cpp"
   1:src/main.cpp  **** #include "../lib/console.h"
   2:src/main.cpp  **** #include "../lib/hw.h"
   3:src/main.cpp  **** #include "../h/helper.hpp"
   4:src/main.cpp  **** #include "../h/Riscv.hpp"
   5:src/main.cpp  **** #include "../h/syscall_c.hpp"
   6:src/main.cpp  **** #include "../h/syscall_cpp.hpp"
   7:src/main.cpp  **** #include "../h/List.hpp"
   8:src/main.cpp  **** //#include "../h/MemoryAllocator.hpp"
   9:src/main.cpp  **** #include "../h/TCB.hpp"
  10:src/main.cpp  **** 
  11:src/main.cpp  **** 
  12:src/main.cpp  **** 
  13:src/main.cpp  **** extern "C" void interruptHandler();
  14:src/main.cpp  **** 
  15:src/main.cpp  **** void testMemory();
  16:src/main.cpp  **** //uint64 temp;
  17:src/main.cpp  **** //
  18:src/main.cpp  **** //void f() {
  19:src/main.cpp  **** //	__putc('a');
  20:src/main.cpp  **** //	__putc('\n');
  21:src/main.cpp  **** //	uint64 var = temp;
  22:src/main.cpp  **** //	__asm__ volatile ("mv ra, %[savedPC]": : [savedPC] "r"(var));
  23:src/main.cpp  **** //
  24:src/main.cpp  **** //	__asm__ volatile ("sd ra, 8(sp)");
  25:src/main.cpp  **** //}
  26:src/main.cpp  **** //
  27:src/main.cpp  **** //void dispatch() {
  28:src/main.cpp  **** //	__asm__ volatile ("mv %[savedPC], ra":[savedPC] "=r"(temp));
  29:src/main.cpp  **** //	__asm__ volatile("mv ra, %[fAddress]": : [fAddress] "r"(&f));
  30:src/main.cpp  **** //}
  31:src/main.cpp  **** 
  32:src/main.cpp  **** void nit1f(void*) {
  33:src/main.cpp  **** 	println("usao u nit 1");
  34:src/main.cpp  **** 	TCB::yield();
  35:src/main.cpp  **** 	println("opet u niti 1");
  36:src/main.cpp  **** }
  37:src/main.cpp  **** uint64 sstatus;
  38:src/main.cpp  **** #pragma GCC optimize("O0")
  39:src/main.cpp  **** int main() {
GAS LISTING /tmp/ccHXLpCe.s 			page 2


  17              		.loc 1 39 12
  18              		.cfi_startproc
  19 0000 130101FE 		addi	sp,sp,-32
  20              		.cfi_def_cfa_offset 32
  21 0004 233C1100 		sd	ra,24(sp)
  22 0008 23388100 		sd	s0,16(sp)
  23              		.cfi_offset 1, -8
  24              		.cfi_offset 8, -16
  25 000c 13040102 		addi	s0,sp,32
  26              		.cfi_def_cfa 8, 0
  40:src/main.cpp  **** 
  41:src/main.cpp  **** 	__asm__ volatile("csrr %[status], sstatus":[status] "=r"(
  27              		.loc 1 41 2
  42:src/main.cpp  **** 			sstatus): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7");
  28              		.loc 1 42 63 is_stmt 0
  29              	#APP
  30              	# 42 "src/main.cpp" 1
  43              		//zabrani prekide
  31              		csrr t1, sstatus
  32              	# 0 "" 2
  33              	#NO_APP
  34 0014 97070000 		lla	a5,sstatus
  34      93870700 
  35 001c 23B06700 		sd	t1,0(a5)
  44:src/main.cpp  **** 	Riscv::mc_sstatus(Riscv::SSTATUS_SIE);
  36              		.loc 1 44 2 is_stmt 1
  37              		.loc 1 44 19 is_stmt 0
  38 0020 13052000 		li	a0,2
  39 0024 97000000 		call	_ZN5Riscv10mc_sstatusEm
  39      E7800000 
  40              	.LVL0:
  45:src/main.cpp  **** 	__asm__ volatile("csrr %[status], sstatus":[status] "=r"(
  41              		.loc 1 45 2 is_stmt 1
  46:src/main.cpp  **** 			sstatus): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7");
  42              		.loc 1 46 63 is_stmt 0
  43              	#APP
  44              	# 46 "src/main.cpp" 1
  47              		//postavi adresu prekidne rutine u stvec
  45              		csrr t1, sstatus
  46              	# 0 "" 2
  47              	#NO_APP
  48 0030 97070000 		lla	a5,sstatus
  48      93870700 
  49 0038 23B06700 		sd	t1,0(a5)
  48:src/main.cpp  **** 	Riscv::w_stvec((uint64)&interruptHandler);
  50              		.loc 1 48 2 is_stmt 1
  51              		.loc 1 48 16 is_stmt 0
  52 003c 97070000 		la	a5,interruptHandler
  52      83B70700 
  53 0044 13850700 		mv	a0,a5
  54 0048 97000000 		call	_ZN5Riscv7w_stvecEm
  54      E7800000 
  55              	.LVL1:
  49:src/main.cpp  **** 	__asm__ volatile("csrr %[status], sstatus":[status] "=r"(
  56              		.loc 1 49 2 is_stmt 1
  50:src/main.cpp  **** 			sstatus): : "a5", "a0", "a1", "a2", "a3", "a4", "a6", "a7");
  57              		.loc 1 50 63 is_stmt 0
GAS LISTING /tmp/ccHXLpCe.s 			page 3


  58              	#APP
  59              	# 50 "src/main.cpp" 1
  51              	
  60              		csrr t1, sstatus
  61              	# 0 "" 2
  62              	#NO_APP
  63 0054 97070000 		lla	a5,sstatus
  63      93870700 
  64 005c 23B06700 		sd	t1,0(a5)
  52:src/main.cpp  **** 
  53:src/main.cpp  **** 	//testiranje alociranja memorije
  54:src/main.cpp  **** 	//testMemory();
  55:src/main.cpp  **** //	uint64* ptr = new uint64;
  56:src/main.cpp  **** //	*ptr = 6;
  57:src/main.cpp  **** //	printInteger(*ptr);
  58:src/main.cpp  **** 
  59:src/main.cpp  **** 	//testiranje liste
  60:src/main.cpp  **** //	List<uint64>* lista = new List<uint64>();
  61:src/main.cpp  **** //	uint64 num = 10;
  62:src/main.cpp  **** //	lista->addFirst(&num);
  63:src/main.cpp  **** //	println("");
  64:src/main.cpp  **** //	printInteger(*(lista->peekFirst()));
  65:src/main.cpp  **** //	delete lista;
  66:src/main.cpp  **** //	println("");
  67:src/main.cpp  **** 
  68:src/main.cpp  **** 	//testiranje kreiranja niti
  69:src/main.cpp  **** 	thread_t glavnaNit = nullptr;
  65              		.loc 1 69 2 is_stmt 1
  66              		.loc 1 69 11 is_stmt 0
  67 0060 233404FE 		sd	zero,-24(s0)
  70:src/main.cpp  **** 	thread_t nit1 = nullptr;
  68              		.loc 1 70 2 is_stmt 1
  69              		.loc 1 70 11 is_stmt 0
  70 0064 233004FE 		sd	zero,-32(s0)
  71:src/main.cpp  **** 	thread_create(&glavnaNit, nullptr, nullptr);
  71              		.loc 1 71 2 is_stmt 1
  72              		.loc 1 71 15 is_stmt 0
  73 0068 930784FE 		addi	a5,s0,-24
  74 006c 13060000 		li	a2,0
  75 0070 93050000 		li	a1,0
  76 0074 13850700 		mv	a0,a5
  77 0078 97000000 		call	_Z13thread_createPP3TCBPFvPvES2_@plt
  77      E7800000 
  78              	.LVL2:
  72:src/main.cpp  **** 	TCB::running = glavnaNit;
  79              		.loc 1 72 2 is_stmt 1
  80              		.loc 1 72 15 is_stmt 0
  81 0080 033784FE 		ld	a4,-24(s0)
  82 0084 97070000 		la	a5,_ZN3TCB7runningE
  82      83B70700 
  83 008c 23B0E700 		sd	a4,0(a5)
  73:src/main.cpp  **** 	thread_create(&nit1, nit1f, nullptr);
  84              		.loc 1 73 2 is_stmt 1
  85              		.loc 1 73 15 is_stmt 0
  86 0090 930704FE 		addi	a5,s0,-32
  87 0094 13060000 		li	a2,0
  88 0098 97050000 		lla	a1,_Z5nit1fPv
GAS LISTING /tmp/ccHXLpCe.s 			page 4


  88      93850500 
  89 00a0 13850700 		mv	a0,a5
  90 00a4 97000000 		call	_Z13thread_createPP3TCBPFvPvES2_@plt
  90      E7800000 
  91              	.LVL3:
  92              	.L3:
  74:src/main.cpp  **** 	while(!nit1->isFinished()){
  93              		.loc 1 74 2 is_stmt 1
  94              		.loc 1 74 8
  95              		.loc 1 74 25 is_stmt 0
  96 00ac 833704FE 		ld	a5,-32(s0)
  97 00b0 13850700 		mv	a0,a5
  98 00b4 97000000 		call	_ZN3TCB10isFinishedEv
  98      E7800000 
  99              	.LVL4:
 100 00bc 93070500 		mv	a5,a0
 101              		.loc 1 74 8
 102 00c0 93C71700 		xori	a5,a5,1
 103 00c4 93F7F70F 		andi	a5,a5,0xff
 104 00c8 63880700 		beqz	a5,.L2
  75:src/main.cpp  **** 		TCB::yield();
 105              		.loc 1 75 3 is_stmt 1
 106              		.loc 1 75 13 is_stmt 0
 107 00cc 97000000 		call	_ZN3TCB5yieldEv@plt
 107      E7800000 
 108              	.LVL5:
  74:src/main.cpp  **** 	while(!nit1->isFinished()){
 109              		.loc 1 74 2
 110 00d4 6FF09FFD 		j	.L3
 111              	.L2:
  76:src/main.cpp  **** 	}
  77:src/main.cpp  **** 	println("\nProsao while");
 112              		.loc 1 77 2 is_stmt 1
 113              		.loc 1 77 9 is_stmt 0
 114 00d8 17050000 		lla	a0,.LC0
 114      13050500 
 115 00e0 97000000 		call	_Z7printlnPKc@plt
 115      E7800000 
 116              	.LVL6:
  78:src/main.cpp  **** 
  79:src/main.cpp  **** 	//omoguci prekide
  80:src/main.cpp  **** 	Riscv::ms_sstatus(Riscv::SSTATUS_SIE);
 117              		.loc 1 80 2 is_stmt 1
 118              		.loc 1 80 19 is_stmt 0
 119 00e8 13052000 		li	a0,2
 120 00ec 97000000 		call	_ZN5Riscv10ms_sstatusEm
 120      E7800000 
 121              	.LVL7:
  81:src/main.cpp  **** 	return 0;
 122              		.loc 1 81 2 is_stmt 1
 123              		.loc 1 81 9 is_stmt 0
 124 00f4 93070000 		li	a5,0
  82:src/main.cpp  **** }...
 125              		.loc 1 82 1
 126 00f8 13850700 		mv	a0,a5
 127 00fc 83308101 		ld	ra,24(sp)
 128              		.cfi_restore 1
GAS LISTING /tmp/ccHXLpCe.s 			page 5


 129 0100 03340101 		ld	s0,16(sp)
 130              		.cfi_restore 8
 131              		.cfi_def_cfa 2, 32
 132 0104 13010102 		addi	sp,sp,32
 133              		.cfi_def_cfa_offset 0
 134 0108 67800000 		jr	ra
 135              		.cfi_endproc
 136              	.LFE41:
 138              		.align	2
 139              		.globl	_Z5nit1fPv
 141              	_Z5nit1fPv:
 142              	.LFB40:
  32:src/main.cpp  **** void nit1f(void*) {
 143              		.loc 1 32 19 is_stmt 1
 144              		.cfi_startproc
 145 010c 130101FF 		addi	sp,sp,-16
 146              		.cfi_def_cfa_offset 16
 147 0110 23341100 		sd	ra,8(sp)
 148 0114 23308100 		sd	s0,0(sp)
 149              		.cfi_offset 1, -8
 150              		.cfi_offset 8, -16
 151 0118 13040101 		addi	s0,sp,16
 152              		.cfi_def_cfa 8, 0
  33:src/main.cpp  **** 	println("usao u nit 1");
 153              		.loc 1 33 2
  33:src/main.cpp  **** 	println("usao u nit 1");
 154              		.loc 1 33 9 is_stmt 0
 155 011c 17050000 		lla	a0,.LANCHOR0
 155      13050500 
 156 0124 97000000 		call	_Z7printlnPKc@plt
 156      E7800000 
 157              	.LVL8:
  34:src/main.cpp  **** 	TCB::yield();
 158              		.loc 1 34 2 is_stmt 1
  34:src/main.cpp  **** 	TCB::yield();
 159              		.loc 1 34 12 is_stmt 0
 160 012c 97000000 		call	_ZN3TCB5yieldEv@plt
 160      E7800000 
 161              	.LVL9:
  35:src/main.cpp  **** 	println("opet u niti 1");
 162              		.loc 1 35 2 is_stmt 1
  35:src/main.cpp  **** 	println("opet u niti 1");
 163              		.loc 1 35 9 is_stmt 0
 164 0134 17050000 		lla	a0,.LANCHOR0+16
 164      13050500 
 165 013c 97000000 		call	_Z7printlnPKc@plt
 165      E7800000 
 166              	.LVL10:
  36:src/main.cpp  **** }
 167              		.loc 1 36 1
 168 0144 83308100 		ld	ra,8(sp)
 169              		.cfi_restore 1
 170 0148 03340100 		ld	s0,0(sp)
 171              		.cfi_restore 8
 172              		.cfi_def_cfa 2, 16
 173 014c 13010101 		addi	sp,sp,16
 174              		.cfi_def_cfa_offset 0
GAS LISTING /tmp/ccHXLpCe.s 			page 6


 175 0150 67800000 		jr	ra
 176              		.cfi_endproc
 177              	.LFE40:
 179              		.section	.text._ZN5Riscv7w_stvecEm,"axG",@progbits,_ZN5Riscv7w_stvecEm,comdat
 180              		.align	2
 181              		.weak	_ZN5Riscv7w_stvecEm
 183              	_ZN5Riscv7w_stvecEm:
 184              	.LFB5:
 185              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 5/17/23.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJEKAT2023_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJEKAT2023_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** class Riscv {
  11:src/../h/Riscv.hpp **** public:
  12:src/../h/Riscv.hpp **** 
  13:src/../h/Riscv.hpp **** 	//stavljanje registara x3-x31 na stek
  14:src/../h/Riscv.hpp **** 	static void pushRegisters();    //implementacija u asm
  15:src/../h/Riscv.hpp **** 
  16:src/../h/Riscv.hpp **** 	//skidanje registara x3-x31 sa steka
  17:src/../h/Riscv.hpp **** 	static void popRegisters();     //implementacija u asm
  18:src/../h/Riscv.hpp **** 
  19:src/../h/Riscv.hpp **** 	//read scause
  20:src/../h/Riscv.hpp **** 	static uint64 r_scause();
  21:src/../h/Riscv.hpp **** 
  22:src/../h/Riscv.hpp **** 	//write scause
  23:src/../h/Riscv.hpp **** 	static void w_scause(uint64 scause);
  24:src/../h/Riscv.hpp **** 
  25:src/../h/Riscv.hpp **** 	//read sepc
  26:src/../h/Riscv.hpp **** 	static uint64 r_sepc();
  27:src/../h/Riscv.hpp **** 
  28:src/../h/Riscv.hpp **** 	//write sepc
  29:src/../h/Riscv.hpp **** 	static void w_sepc(uint64 sepc);
  30:src/../h/Riscv.hpp **** 
  31:src/../h/Riscv.hpp **** 	//read stvec
  32:src/../h/Riscv.hpp **** 	static uint64 r_stvec();
  33:src/../h/Riscv.hpp **** 
  34:src/../h/Riscv.hpp **** 	//write stvec
  35:src/../h/Riscv.hpp **** 	static void w_stvec(uint64 stvec);
  36:src/../h/Riscv.hpp **** 
  37:src/../h/Riscv.hpp **** 	enum BitMaskSip {
  38:src/../h/Riscv.hpp **** 		//postoji zahtev za softverski prekid
  39:src/../h/Riscv.hpp **** 		SIP_SSIP = (1 << 1),
  40:src/../h/Riscv.hpp **** 		//postoji prekid od tajmera
  41:src/../h/Riscv.hpp **** 		SIP_STIP = (1 << 5),
  42:src/../h/Riscv.hpp **** 		//postoji zahtev za spoljasnji hardverski prekid
  43:src/../h/Riscv.hpp **** 		SIP_SEIP = (1 << 9)
  44:src/../h/Riscv.hpp **** 	};
  45:src/../h/Riscv.hpp **** 
  46:src/../h/Riscv.hpp **** 	//mask set sip
  47:src/../h/Riscv.hpp **** 	static void ms_sip(uint64 mask);
  48:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/ccHXLpCe.s 			page 7


  49:src/../h/Riscv.hpp **** 	//mask clear sip
  50:src/../h/Riscv.hpp **** 	static void mc_sip(uint64 mask);
  51:src/../h/Riscv.hpp **** 
  52:src/../h/Riscv.hpp **** 	//read sip
  53:src/../h/Riscv.hpp **** 	static uint64 r_sip();
  54:src/../h/Riscv.hpp **** 
  55:src/../h/Riscv.hpp **** 	//write sip
  56:src/../h/Riscv.hpp **** 	static void w_sip(uint64 sip);
  57:src/../h/Riscv.hpp **** 
  58:src/../h/Riscv.hpp **** 	enum BitMaskSstatus {
  59:src/../h/Riscv.hpp **** 		//1 - dozvoljeni prekidi; 0- nedozvoljeni prekidi; igonrise se u korisnickom rezimu
  60:src/../h/Riscv.hpp **** 		SSTATUS_SIE = (1 << 1),
  61:src/../h/Riscv.hpp **** 		//prethodna vrednost bita SIE
  62:src/../h/Riscv.hpp **** 		SSTATUS_SPIE = (1 << 5),
  63:src/../h/Riscv.hpp **** 		//iz kog rezima se desio skok; 0 - iz korisnickog; 1 - iz sistemskog
  64:src/../h/Riscv.hpp **** 		SSTATUS_SPP = (1 << 8)
  65:src/../h/Riscv.hpp **** 	};
  66:src/../h/Riscv.hpp **** 
  67:src/../h/Riscv.hpp **** 	//mask set sstatus
  68:src/../h/Riscv.hpp **** 	static void ms_sstatus(uint64 mask);
  69:src/../h/Riscv.hpp **** 
  70:src/../h/Riscv.hpp **** 	//mask clear sstatus
  71:src/../h/Riscv.hpp **** 	static void mc_sstatus(uint64 mask);
  72:src/../h/Riscv.hpp **** 
  73:src/../h/Riscv.hpp **** 	//read sstatus
  74:src/../h/Riscv.hpp **** 	static uint64 r_sstatus();
  75:src/../h/Riscv.hpp **** 
  76:src/../h/Riscv.hpp **** 	//write sstatus
  77:src/../h/Riscv.hpp **** 	static void w_sstatus(uint64 sstatus);
  78:src/../h/Riscv.hpp **** 
  79:src/../h/Riscv.hpp **** 	//upisuje kod sistemskog poziva u registar a0
  80:src/../h/Riscv.hpp **** 	static void loadOpCode(uint64 opCode);
  81:src/../h/Riscv.hpp **** 
  82:src/../h/Riscv.hpp **** };
  83:src/../h/Riscv.hpp **** 
  84:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause() {
  85:src/../h/Riscv.hpp **** 	uint64 volatile scause;
  86:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[scause], scause": [scause] "=r"(scause));
  87:src/../h/Riscv.hpp **** 	return scause;
  88:src/../h/Riscv.hpp **** }
  89:src/../h/Riscv.hpp **** 
  90:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
  91:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw scause, %[scause]": :[scause] "r"(scause));
  92:src/../h/Riscv.hpp **** }
  93:src/../h/Riscv.hpp **** 
  94:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc() {
  95:src/../h/Riscv.hpp **** 	uint64 volatile sepc;
  96:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[sepc], sepc": [sepc] "=r"(sepc));
  97:src/../h/Riscv.hpp **** 	return sepc;
  98:src/../h/Riscv.hpp **** }
  99:src/../h/Riscv.hpp **** 
 100:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
 101:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
 102:src/../h/Riscv.hpp **** }
 103:src/../h/Riscv.hpp **** 
 104:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec() {
 105:src/../h/Riscv.hpp **** 	uint64 volatile stvec;
GAS LISTING /tmp/ccHXLpCe.s 			page 8


 106:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[stvec], stvec": [stvec] "=r"(stvec));
 107:src/../h/Riscv.hpp **** 	return stvec;
 108:src/../h/Riscv.hpp **** }
 109:src/../h/Riscv.hpp **** 
 110:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 186              		.loc 2 110 42 is_stmt 1
 187              		.cfi_startproc
 188              	.LVL11:
 189 0000 130101FF 		addi	sp,sp,-16
 190              		.cfi_def_cfa_offset 16
 191 0004 23348100 		sd	s0,8(sp)
 192              		.cfi_offset 8, -8
 193 0008 13040101 		addi	s0,sp,16
 194              		.cfi_def_cfa 8, 0
 111:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw stvec, %[stvec]": :[stvec] "r"(stvec));
 195              		.loc 2 111 2
 196              		.loc 2 111 63 is_stmt 0
 197              	#APP
 198              	# 111 "src/../h/Riscv.hpp" 1
 112              	}
 199              		csrw stvec, a0
 200              	# 0 "" 2
 201              		.loc 2 112 1
 202              	#NO_APP
 203 0010 03348100 		ld	s0,8(sp)
 204              		.cfi_restore 8
 205              		.cfi_def_cfa 2, 16
 206 0014 13010101 		addi	sp,sp,16
 207              		.cfi_def_cfa_offset 0
 208 0018 67800000 		jr	ra
 209              		.cfi_endproc
 210              	.LFE5:
 212              		.section	.text._ZN5Riscv10ms_sstatusEm,"axG",@progbits,_ZN5Riscv10ms_sstatusEm,comdat
 213              		.align	2
 214              		.weak	_ZN5Riscv10ms_sstatusEm
 216              	_ZN5Riscv10ms_sstatusEm:
 217              	.LFB10:
 113:src/../h/Riscv.hpp **** 
 114:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 115:src/../h/Riscv.hpp **** 	__asm__ volatile("csrs sip, %[mask]": :[mask] "r"(mask));
 116:src/../h/Riscv.hpp **** }
 117:src/../h/Riscv.hpp **** 
 118:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 119:src/../h/Riscv.hpp **** 	__asm__ volatile("csrc sip, %[mask]": :[mask] "r"(mask));
 120:src/../h/Riscv.hpp **** }
 121:src/../h/Riscv.hpp **** 
 122:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip() {
 123:src/../h/Riscv.hpp **** 	uint64 volatile sip;
 124:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[sip], sip": [sip] "=r"(sip));
 125:src/../h/Riscv.hpp **** 	return sip;
 126:src/../h/Riscv.hpp **** }
 127:src/../h/Riscv.hpp **** 
 128:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip) {
 129:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw sip, %[sip]": :[sip] "r"(sip));
 130:src/../h/Riscv.hpp **** }
 131:src/../h/Riscv.hpp **** 
 132:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
GAS LISTING /tmp/ccHXLpCe.s 			page 9


 218              		.loc 2 132 44 is_stmt 1
 219              		.cfi_startproc
 220              	.LVL12:
 221 0000 130101FF 		addi	sp,sp,-16
 222              		.cfi_def_cfa_offset 16
 223 0004 23348100 		sd	s0,8(sp)
 224              		.cfi_offset 8, -8
 225 0008 13040101 		addi	s0,sp,16
 226              		.cfi_def_cfa 8, 0
 133:src/../h/Riscv.hpp **** 	__asm__ volatile("csrs sstatus, %[mask]": :[mask] "r"(mask));
 227              		.loc 2 133 2
 228              		.loc 2 133 62 is_stmt 0
 229              	#APP
 230              	# 133 "src/../h/Riscv.hpp" 1
 134              	}
 231              		csrs sstatus, a0
 232              	# 0 "" 2
 233              		.loc 2 134 1
 234              	#NO_APP
 235 0010 03348100 		ld	s0,8(sp)
 236              		.cfi_restore 8
 237              		.cfi_def_cfa 2, 16
 238 0014 13010101 		addi	sp,sp,16
 239              		.cfi_def_cfa_offset 0
 240 0018 67800000 		jr	ra
 241              		.cfi_endproc
 242              	.LFE10:
 244              		.section	.text._ZN5Riscv10mc_sstatusEm,"axG",@progbits,_ZN5Riscv10mc_sstatusEm,comdat
 245              		.align	2
 246              		.weak	_ZN5Riscv10mc_sstatusEm
 248              	_ZN5Riscv10mc_sstatusEm:
 249              	.LFB11:
 135:src/../h/Riscv.hpp **** 
 136:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask) {
 250              		.loc 2 136 44 is_stmt 1
 251              		.cfi_startproc
 252              	.LVL13:
 253 0000 130101FF 		addi	sp,sp,-16
 254              		.cfi_def_cfa_offset 16
 255 0004 23348100 		sd	s0,8(sp)
 256              		.cfi_offset 8, -8
 257 0008 13040101 		addi	s0,sp,16
 258              		.cfi_def_cfa 8, 0
 137:src/../h/Riscv.hpp **** 	__asm__ volatile("csrc sstatus, %[mask]": :[mask] "r"(mask));
 259              		.loc 2 137 2
 260              		.loc 2 137 62 is_stmt 0
 261              	#APP
 262              	# 137 "src/../h/Riscv.hpp" 1
 138              	}
 263              		csrc sstatus, a0
 264              	# 0 "" 2
 265              		.loc 2 138 1
 266              	#NO_APP
 267 0010 03348100 		ld	s0,8(sp)
 268              		.cfi_restore 8
 269              		.cfi_def_cfa 2, 16
 270 0014 13010101 		addi	sp,sp,16
GAS LISTING /tmp/ccHXLpCe.s 			page 10


 271              		.cfi_def_cfa_offset 0
 272 0018 67800000 		jr	ra
 273              		.cfi_endproc
 274              	.LFE11:
 276              		.section	.text._ZN3TCB10isFinishedEv,"axG",@progbits,_ZN3TCB10isFinishedEv,comdat
 277              		.align	2
 278              		.weak	_ZN3TCB10isFinishedEv
 280              	_ZN3TCB10isFinishedEv:
 281              	.LFB31:
 282              		.file 3 "src/../h/TCB.hpp"
   1:src/../h/TCB.hpp **** //
   2:src/../h/TCB.hpp **** // Created by os on 5/23/23.
   3:src/../h/TCB.hpp **** //
   4:src/../h/TCB.hpp **** 
   5:src/../h/TCB.hpp **** #ifndef PROJEKAT2023_TCB_HPP
   6:src/../h/TCB.hpp **** #define PROJEKAT2023_TCB_HPP
   7:src/../h/TCB.hpp **** 
   8:src/../h/TCB.hpp **** #include "../lib/hw.h"
   9:src/../h/TCB.hpp **** 
  10:src/../h/TCB.hpp **** class TCB {
  11:src/../h/TCB.hpp **** public:
  12:src/../h/TCB.hpp **** 	friend class Scheduler;
  13:src/../h/TCB.hpp **** 	using Body = void (*)(void*);
  14:src/../h/TCB.hpp **** 
  15:src/../h/TCB.hpp **** 	static TCB* createThread(Body function, void* args, uint64* stack);
  16:src/../h/TCB.hpp **** 
  17:src/../h/TCB.hpp **** 	bool isFinished() { return finished; }
 283              		.loc 3 17 7 is_stmt 1
 284              		.cfi_startproc
 285              	.LVL14:
 286 0000 130101FF 		addi	sp,sp,-16
 287              		.cfi_def_cfa_offset 16
 288 0004 23348100 		sd	s0,8(sp)
 289              		.cfi_offset 8, -8
 290 0008 13040101 		addi	s0,sp,16
 291              		.cfi_def_cfa 8, 0
 292              		.loc 3 17 22
 293              		.loc 3 17 39 is_stmt 0
 294 000c 03450503 		lbu	a0,48(a0)
 295              	.LVL15:
 296 0010 03348100 		ld	s0,8(sp)
 297              		.cfi_restore 8
 298              		.cfi_def_cfa 2, 16
 299 0014 13010101 		addi	sp,sp,16
 300              		.cfi_def_cfa_offset 0
 301 0018 67800000 		jr	ra
 302              		.cfi_endproc
 303              	.LFE31:
 305              		.globl	sstatus
 306              		.bss
 307              		.align	3
 310              	sstatus:
 311 0000 00000000 		.zero	8
 311      00000000 
 312              		.section	.rodata
 313 000e 0000     		.align	3
 314              		.set	.LANCHOR0,. + 0
GAS LISTING /tmp/ccHXLpCe.s 			page 11


 315              	.LC1:
 316 0010 7573616F 		.string	"usao u nit 1"
 316      2075206E 
 316      69742031 
 316      00
 317 001d 000000   		.zero	3
 318              	.LC2:
 319 0020 6F706574 		.string	"opet u niti 1"
 319      2075206E 
 319      69746920 
 319      3100
 320              		.text
 321              	.Letext0:
 322              		.file 4 "src/../lib/hw.h"
 323              		.file 5 "src/../h/syscall_c.hpp"
 324              		.file 6 "src/../h/helper.hpp"
GAS LISTING /tmp/ccHXLpCe.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/ccHXLpCe.s:14     .text:0000000000000000 main
     /tmp/ccHXLpCe.s:18     .text:0000000000000000 .L0 
     /tmp/ccHXLpCe.s:19     .text:0000000000000000 .L0 
     /tmp/ccHXLpCe.s:20     .text:0000000000000004 .L0 
     /tmp/ccHXLpCe.s:23     .text:000000000000000c .L0 
     /tmp/ccHXLpCe.s:24     .text:000000000000000c .L0 
     /tmp/ccHXLpCe.s:26     .text:0000000000000010 .L0 
     /tmp/ccHXLpCe.s:28     .text:0000000000000010 .L0 
        src/main.cpp:42     .text:0000000000000010 .L0 
     /tmp/ccHXLpCe.s:310    .bss:0000000000000000 sstatus
     /tmp/ccHXLpCe.s:37     .text:0000000000000020 .L0 
     /tmp/ccHXLpCe.s:38     .text:0000000000000020 .L0 
     /tmp/ccHXLpCe.s:248    .text._ZN5Riscv10mc_sstatusEm:0000000000000000 _ZN5Riscv10mc_sstatusEm
     /tmp/ccHXLpCe.s:42     .text:000000000000002c .L0 
        src/main.cpp:46     .text:000000000000002c .L0 
     /tmp/ccHXLpCe.s:51     .text:000000000000003c .L0 
     /tmp/ccHXLpCe.s:52     .text:000000000000003c .L0 
     /tmp/ccHXLpCe.s:183    .text._ZN5Riscv7w_stvecEm:0000000000000000 _ZN5Riscv7w_stvecEm
     /tmp/ccHXLpCe.s:57     .text:0000000000000050 .L0 
        src/main.cpp:50     .text:0000000000000050 .L0 
     /tmp/ccHXLpCe.s:66     .text:0000000000000060 .L0 
     /tmp/ccHXLpCe.s:67     .text:0000000000000060 .L0 
     /tmp/ccHXLpCe.s:69     .text:0000000000000064 .L0 
     /tmp/ccHXLpCe.s:70     .text:0000000000000064 .L0 
     /tmp/ccHXLpCe.s:72     .text:0000000000000068 .L0 
     /tmp/ccHXLpCe.s:73     .text:0000000000000068 .L0 
     /tmp/ccHXLpCe.s:80     .text:0000000000000080 .L0 
     /tmp/ccHXLpCe.s:81     .text:0000000000000080 .L0 
     /tmp/ccHXLpCe.s:85     .text:0000000000000090 .L0 
     /tmp/ccHXLpCe.s:86     .text:0000000000000090 .L0 
     /tmp/ccHXLpCe.s:141    .text:000000000000010c _Z5nit1fPv
     /tmp/ccHXLpCe.s:94     .text:00000000000000ac .L0 
     /tmp/ccHXLpCe.s:95     .text:00000000000000ac .L0 
     /tmp/ccHXLpCe.s:96     .text:00000000000000ac .L0 
     /tmp/ccHXLpCe.s:280    .text._ZN3TCB10isFinishedEv:0000000000000000 _ZN3TCB10isFinishedEv
     /tmp/ccHXLpCe.s:102    .text:00000000000000c0 .L0 
     /tmp/ccHXLpCe.s:106    .text:00000000000000cc .L0 
     /tmp/ccHXLpCe.s:107    .text:00000000000000cc .L0 
     /tmp/ccHXLpCe.s:110    .text:00000000000000d4 .L0 
     /tmp/ccHXLpCe.s:113    .text:00000000000000d8 .L0 
     /tmp/ccHXLpCe.s:114    .text:00000000000000d8 .L0 
     /tmp/ccHXLpCe.s:118    .text:00000000000000e8 .L0 
     /tmp/ccHXLpCe.s:119    .text:00000000000000e8 .L0 
     /tmp/ccHXLpCe.s:216    .text._ZN5Riscv10ms_sstatusEm:0000000000000000 _ZN5Riscv10ms_sstatusEm
     /tmp/ccHXLpCe.s:123    .text:00000000000000f4 .L0 
     /tmp/ccHXLpCe.s:124    .text:00000000000000f4 .L0 
     /tmp/ccHXLpCe.s:126    .text:00000000000000f8 .L0 
     /tmp/ccHXLpCe.s:128    .text:0000000000000100 .L0 
     /tmp/ccHXLpCe.s:130    .text:0000000000000104 .L0 
     /tmp/ccHXLpCe.s:131    .text:0000000000000104 .L0 
     /tmp/ccHXLpCe.s:133    .text:0000000000000108 .L0 
     /tmp/ccHXLpCe.s:135    .text:000000000000010c .L0 
     /tmp/ccHXLpCe.s:144    .text:000000000000010c .L0 
     /tmp/ccHXLpCe.s:145    .text:000000000000010c .L0 
     /tmp/ccHXLpCe.s:146    .text:0000000000000110 .L0 
GAS LISTING /tmp/ccHXLpCe.s 			page 13


     /tmp/ccHXLpCe.s:149    .text:0000000000000118 .L0 
     /tmp/ccHXLpCe.s:150    .text:0000000000000118 .L0 
     /tmp/ccHXLpCe.s:152    .text:000000000000011c .L0 
     /tmp/ccHXLpCe.s:154    .text:000000000000011c .L0 
     /tmp/ccHXLpCe.s:155    .text:000000000000011c .L0 
     /tmp/ccHXLpCe.s:159    .text:000000000000012c .L0 
     /tmp/ccHXLpCe.s:160    .text:000000000000012c .L0 
     /tmp/ccHXLpCe.s:163    .text:0000000000000134 .L0 
     /tmp/ccHXLpCe.s:164    .text:0000000000000134 .L0 
     /tmp/ccHXLpCe.s:168    .text:0000000000000144 .L0 
     /tmp/ccHXLpCe.s:169    .text:0000000000000148 .L0 
     /tmp/ccHXLpCe.s:171    .text:000000000000014c .L0 
     /tmp/ccHXLpCe.s:172    .text:000000000000014c .L0 
     /tmp/ccHXLpCe.s:174    .text:0000000000000150 .L0 
     /tmp/ccHXLpCe.s:176    .text:0000000000000154 .L0 
     /tmp/ccHXLpCe.s:187    .text._ZN5Riscv7w_stvecEm:0000000000000000 .L0 
     /tmp/ccHXLpCe.s:189    .text._ZN5Riscv7w_stvecEm:0000000000000000 .L0 
     /tmp/ccHXLpCe.s:190    .text._ZN5Riscv7w_stvecEm:0000000000000004 .L0 
     /tmp/ccHXLpCe.s:192    .text._ZN5Riscv7w_stvecEm:0000000000000008 .L0 
     /tmp/ccHXLpCe.s:194    .text._ZN5Riscv7w_stvecEm:000000000000000c .L0 
     /tmp/ccHXLpCe.s:196    .text._ZN5Riscv7w_stvecEm:000000000000000c .L0 
  src/../h/Riscv.hpp:111    .text._ZN5Riscv7w_stvecEm:000000000000000c .L0 
     /tmp/ccHXLpCe.s:203    .text._ZN5Riscv7w_stvecEm:0000000000000010 .L0 
     /tmp/ccHXLpCe.s:204    .text._ZN5Riscv7w_stvecEm:0000000000000014 .L0 
     /tmp/ccHXLpCe.s:205    .text._ZN5Riscv7w_stvecEm:0000000000000014 .L0 
     /tmp/ccHXLpCe.s:207    .text._ZN5Riscv7w_stvecEm:0000000000000018 .L0 
     /tmp/ccHXLpCe.s:209    .text._ZN5Riscv7w_stvecEm:000000000000001c .L0 
     /tmp/ccHXLpCe.s:219    .text._ZN5Riscv10ms_sstatusEm:0000000000000000 .L0 
     /tmp/ccHXLpCe.s:221    .text._ZN5Riscv10ms_sstatusEm:0000000000000000 .L0 
     /tmp/ccHXLpCe.s:222    .text._ZN5Riscv10ms_sstatusEm:0000000000000004 .L0 
     /tmp/ccHXLpCe.s:224    .text._ZN5Riscv10ms_sstatusEm:0000000000000008 .L0 
     /tmp/ccHXLpCe.s:226    .text._ZN5Riscv10ms_sstatusEm:000000000000000c .L0 
     /tmp/ccHXLpCe.s:228    .text._ZN5Riscv10ms_sstatusEm:000000000000000c .L0 
  src/../h/Riscv.hpp:133    .text._ZN5Riscv10ms_sstatusEm:000000000000000c .L0 
     /tmp/ccHXLpCe.s:235    .text._ZN5Riscv10ms_sstatusEm:0000000000000010 .L0 
     /tmp/ccHXLpCe.s:236    .text._ZN5Riscv10ms_sstatusEm:0000000000000014 .L0 
     /tmp/ccHXLpCe.s:237    .text._ZN5Riscv10ms_sstatusEm:0000000000000014 .L0 
     /tmp/ccHXLpCe.s:239    .text._ZN5Riscv10ms_sstatusEm:0000000000000018 .L0 
     /tmp/ccHXLpCe.s:241    .text._ZN5Riscv10ms_sstatusEm:000000000000001c .L0 
     /tmp/ccHXLpCe.s:251    .text._ZN5Riscv10mc_sstatusEm:0000000000000000 .L0 
     /tmp/ccHXLpCe.s:253    .text._ZN5Riscv10mc_sstatusEm:0000000000000000 .L0 
     /tmp/ccHXLpCe.s:254    .text._ZN5Riscv10mc_sstatusEm:0000000000000004 .L0 
     /tmp/ccHXLpCe.s:256    .text._ZN5Riscv10mc_sstatusEm:0000000000000008 .L0 
     /tmp/ccHXLpCe.s:258    .text._ZN5Riscv10mc_sstatusEm:000000000000000c .L0 
     /tmp/ccHXLpCe.s:260    .text._ZN5Riscv10mc_sstatusEm:000000000000000c .L0 
  src/../h/Riscv.hpp:137    .text._ZN5Riscv10mc_sstatusEm:000000000000000c .L0 
     /tmp/ccHXLpCe.s:267    .text._ZN5Riscv10mc_sstatusEm:0000000000000010 .L0 
     /tmp/ccHXLpCe.s:268    .text._ZN5Riscv10mc_sstatusEm:0000000000000014 .L0 
     /tmp/ccHXLpCe.s:269    .text._ZN5Riscv10mc_sstatusEm:0000000000000014 .L0 
     /tmp/ccHXLpCe.s:271    .text._ZN5Riscv10mc_sstatusEm:0000000000000018 .L0 
     /tmp/ccHXLpCe.s:273    .text._ZN5Riscv10mc_sstatusEm:000000000000001c .L0 
     /tmp/ccHXLpCe.s:284    .text._ZN3TCB10isFinishedEv:0000000000000000 .L0 
     /tmp/ccHXLpCe.s:286    .text._ZN3TCB10isFinishedEv:0000000000000000 .L0 
     /tmp/ccHXLpCe.s:287    .text._ZN3TCB10isFinishedEv:0000000000000004 .L0 
     /tmp/ccHXLpCe.s:289    .text._ZN3TCB10isFinishedEv:0000000000000008 .L0 
     /tmp/ccHXLpCe.s:291    .text._ZN3TCB10isFinishedEv:000000000000000c .L0 
     /tmp/ccHXLpCe.s:293    .text._ZN3TCB10isFinishedEv:000000000000000c .L0 
GAS LISTING /tmp/ccHXLpCe.s 			page 14


     /tmp/ccHXLpCe.s:294    .text._ZN3TCB10isFinishedEv:000000000000000c .L0 
     /tmp/ccHXLpCe.s:297    .text._ZN3TCB10isFinishedEv:0000000000000014 .L0 
     /tmp/ccHXLpCe.s:298    .text._ZN3TCB10isFinishedEv:0000000000000014 .L0 
     /tmp/ccHXLpCe.s:300    .text._ZN3TCB10isFinishedEv:0000000000000018 .L0 
     /tmp/ccHXLpCe.s:302    .text._ZN3TCB10isFinishedEv:000000000000001c .L0 
     /tmp/ccHXLpCe.s:314    .rodata:0000000000000010 .LANCHOR0
     /tmp/ccHXLpCe.s:325    .text:0000000000000154 .L0 
     /tmp/ccHXLpCe.s:212    .text._ZN5Riscv7w_stvecEm:000000000000001c .L0 
     /tmp/ccHXLpCe.s:244    .text._ZN5Riscv10ms_sstatusEm:000000000000001c .L0 
     /tmp/ccHXLpCe.s:276    .text._ZN5Riscv10mc_sstatusEm:000000000000001c .L0 
     /tmp/ccHXLpCe.s:306    .text._ZN3TCB10isFinishedEv:000000000000001c .L0 
     /tmp/ccHXLpCe.s:34     .text:0000000000000014 .L0 
     /tmp/ccHXLpCe.s:48     .text:0000000000000030 .L0 
     /tmp/ccHXLpCe.s:52     .text:000000000000003c .L0 
     /tmp/ccHXLpCe.s:63     .text:0000000000000054 .L0 
     /tmp/ccHXLpCe.s:82     .text:0000000000000084 .L0 
     /tmp/ccHXLpCe.s:88     .text:0000000000000098 .L0 
     /tmp/ccHXLpCe.s:8      .rodata:0000000000000000 .LC0
     /tmp/ccHXLpCe.s:114    .text:00000000000000d8 .L0 
     /tmp/ccHXLpCe.s:155    .text:000000000000011c .L0 
     /tmp/ccHXLpCe.s:164    .text:0000000000000134 .L0 
     /tmp/ccHXLpCe.s:111    .text:00000000000000d8 .L2
     /tmp/ccHXLpCe.s:92     .text:00000000000000ac .L3
     /tmp/ccHXLpCe.s:1209   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccHXLpCe.s:2232   .debug_str:0000000000000548 .LASF103
     /tmp/ccHXLpCe.s:2142   .debug_str:00000000000002d6 .LASF104
     /tmp/ccHXLpCe.s:2118   .debug_str:00000000000001fe .LASF105
     /tmp/ccHXLpCe.s:2022   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccHXLpCe.s:2036   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccHXLpCe.s:2166   .debug_str:0000000000000386 .LASF0
     /tmp/ccHXLpCe.s:2180   .debug_str:00000000000003be .LASF1
     /tmp/ccHXLpCe.s:2156   .debug_str:000000000000033f .LASF2
     /tmp/ccHXLpCe.s:2130   .debug_str:000000000000029b .LASF4
     /tmp/ccHXLpCe.s:2216   .debug_str:00000000000004ca .LASF3
     /tmp/ccHXLpCe.s:2062   .debug_str:0000000000000089 .LASF5
     /tmp/ccHXLpCe.s:2090   .debug_str:000000000000013e .LASF6
     /tmp/ccHXLpCe.s:2184   .debug_str:00000000000003f2 .LASF7
     /tmp/ccHXLpCe.s:2164   .debug_str:0000000000000373 .LASF8
     /tmp/ccHXLpCe.s:2242   .debug_str:000000000000064c .LASF9
     /tmp/ccHXLpCe.s:2116   .debug_str:00000000000001f0 .LASF10
     /tmp/ccHXLpCe.s:2196   .debug_str:0000000000000447 .LASF11
     /tmp/ccHXLpCe.s:2234   .debug_str:000000000000060c .LASF12
     /tmp/ccHXLpCe.s:2066   .debug_str:000000000000009c .LASF13
     /tmp/ccHXLpCe.s:2046   .debug_str:0000000000000033 .LASF14
     /tmp/ccHXLpCe.s:2072   .debug_str:00000000000000bb .LASF15
     /tmp/ccHXLpCe.s:2210   .debug_str:0000000000000496 .LASF16
     /tmp/ccHXLpCe.s:2082   .debug_str:00000000000000ee .LASF17
     /tmp/ccHXLpCe.s:2178   .debug_str:00000000000003b8 .LASF54
     /tmp/ccHXLpCe.s:2086   .debug_str:0000000000000118 .LASF106
     /tmp/ccHXLpCe.s:2078   .debug_str:00000000000000d7 .LASF18
     /tmp/ccHXLpCe.s:2144   .debug_str:00000000000002e3 .LASF19
     /tmp/ccHXLpCe.s:2064   .debug_str:0000000000000090 .LASF20
     /tmp/ccHXLpCe.s:2060   .debug_str:000000000000007b .LASF21
     /tmp/ccHXLpCe.s:2098   .debug_str:0000000000000171 .LASF23
     /tmp/ccHXLpCe.s:2226   .debug_str:0000000000000516 .LASF22
     /tmp/ccHXLpCe.s:2044   .debug_str:0000000000000019 .LASF24
     /tmp/ccHXLpCe.s:2048   .debug_str:0000000000000043 .LASF25
GAS LISTING /tmp/ccHXLpCe.s 			page 15


     /tmp/ccHXLpCe.s:2224   .debug_str:0000000000000501 .LASF27
     /tmp/ccHXLpCe.s:2096   .debug_str:0000000000000168 .LASF29
     /tmp/ccHXLpCe.s:2094   .debug_str:0000000000000153 .LASF31
     /tmp/ccHXLpCe.s:2218   .debug_str:00000000000004dc .LASF26
     /tmp/ccHXLpCe.s:2200   .debug_str:000000000000045e .LASF28
     /tmp/ccHXLpCe.s:2208   .debug_str:000000000000048f .LASF30
     /tmp/ccHXLpCe.s:2228   .debug_str:0000000000000523 .LASF32
     /tmp/ccHXLpCe.s:2108   .debug_str:00000000000001bf .LASF33
     /tmp/ccHXLpCe.s:2084   .debug_str:0000000000000104 .LASF34
     /tmp/ccHXLpCe.s:2042   .debug_str:0000000000000011 .LASF35
     /tmp/ccHXLpCe.s:2122   .debug_str:0000000000000232 .LASF36
     /tmp/ccHXLpCe.s:2168   .debug_str:0000000000000393 .LASF37
     /tmp/ccHXLpCe.s:2252   .debug_str:0000000000000692 .LASF38
     /tmp/ccHXLpCe.s:2056   .debug_str:0000000000000064 .LASF39
     /tmp/ccHXLpCe.s:2106   .debug_str:00000000000001ac .LASF40
     /tmp/ccHXLpCe.s:2112   .debug_str:00000000000001df .LASF41
     /tmp/ccHXLpCe.s:2230   .debug_str:0000000000000536 .LASF42
     /tmp/ccHXLpCe.s:2054   .debug_str:000000000000005e .LASF43
     /tmp/ccHXLpCe.s:2266   .debug_str:000000000000070d .LASF44
     /tmp/ccHXLpCe.s:2258   .debug_str:00000000000006dd .LASF45
     /tmp/ccHXLpCe.s:2214   .debug_str:00000000000004b2 .LASF46
     /tmp/ccHXLpCe.s:2136   .debug_str:00000000000002b6 .LASF47
     /tmp/ccHXLpCe.s:2146   .debug_str:00000000000002f0 .LASF48
     /tmp/ccHXLpCe.s:2070   .debug_str:00000000000000b1 .LASF49
     /tmp/ccHXLpCe.s:2126   .debug_str:000000000000025d .LASF50
     /tmp/ccHXLpCe.s:2160   .debug_str:0000000000000359 .LASF51
     /tmp/ccHXLpCe.s:2120   .debug_str:000000000000021c .LASF52
     /tmp/ccHXLpCe.s:2074   .debug_str:00000000000000c7 .LASF107
     /tmp/ccHXLpCe.s:2260   .debug_str:00000000000006e8 .LASF108
     /tmp/ccHXLpCe.s:2038   .debug_str:0000000000000000 .LASF53
     /tmp/ccHXLpCe.s:2052   .debug_str:0000000000000056 .LASF109
     /tmp/ccHXLpCe.s:2140   .debug_str:00000000000002c9 .LASF55
     /tmp/ccHXLpCe.s:2254   .debug_str:00000000000006a5 .LASF57
     /tmp/ccHXLpCe.s:2206   .debug_str:000000000000048a .LASF110
     /tmp/ccHXLpCe.s:2186   .debug_str:0000000000000405 .LASF59
     /tmp/ccHXLpCe.s:2148   .debug_str:0000000000000308 .LASF61
     /tmp/ccHXLpCe.s:2158   .debug_str:000000000000034d .LASF56
     /tmp/ccHXLpCe.s:2088   .debug_str:0000000000000127 .LASF58
     /tmp/ccHXLpCe.s:2050   .debug_str:000000000000004c .LASF60
     /tmp/ccHXLpCe.s:2192   .debug_str:000000000000041b .LASF62
     /tmp/ccHXLpCe.s:2132   .debug_str:00000000000002a2 .LASF63
     /tmp/ccHXLpCe.s:2238   .debug_str:0000000000000629 .LASF64
     /tmp/ccHXLpCe.s:2152   .debug_str:0000000000000323 .LASF65
     /tmp/ccHXLpCe.s:2194   .debug_str:000000000000042f .LASF66
     /tmp/ccHXLpCe.s:2240   .debug_str:000000000000063f .LASF67
     /tmp/ccHXLpCe.s:2244   .debug_str:000000000000065c .LASF68
     /tmp/ccHXLpCe.s:2222   .debug_str:00000000000004f5 .LASF69
     /tmp/ccHXLpCe.s:2124   .debug_str:0000000000000246 .LASF70
     /tmp/ccHXLpCe.s:2114   .debug_str:00000000000001e5 .LASF71
     /tmp/ccHXLpCe.s:2110   .debug_str:00000000000001c7 .LASF72
     /tmp/ccHXLpCe.s:2212   .debug_str:00000000000004ac .LASF73
     /tmp/ccHXLpCe.s:2162   .debug_str:0000000000000363 .LASF74
     /tmp/ccHXLpCe.s:2170   .debug_str:000000000000039a .LASF75
     /tmp/ccHXLpCe.s:2102   .debug_str:0000000000000194 .LASF76
     /tmp/ccHXLpCe.s:2264   .debug_str:0000000000000705 .LASF77
     /tmp/ccHXLpCe.s:2220   .debug_str:00000000000004e3 .LASF78
     /tmp/ccHXLpCe.s:2100   .debug_str:000000000000018c .LASF79
GAS LISTING /tmp/ccHXLpCe.s 			page 16


     /tmp/ccHXLpCe.s:2202   .debug_str:0000000000000471 .LASF80
     /tmp/ccHXLpCe.s:2138   .debug_str:00000000000002c1 .LASF81
     /tmp/ccHXLpCe.s:2154   .debug_str:0000000000000330 .LASF82
     /tmp/ccHXLpCe.s:2172   .debug_str:00000000000003a3 .LASF83
     /tmp/ccHXLpCe.s:2174   .debug_str:00000000000003a9 .LASF84
     /tmp/ccHXLpCe.s:2176   .debug_str:00000000000003ae .LASF85
     /tmp/ccHXLpCe.s:2134   .debug_str:00000000000002ad .LASF86
     /tmp/ccHXLpCe.s:2040   .debug_str:0000000000000009 .LASF87
     /tmp/ccHXLpCe.s:2058   .debug_str:000000000000006b .LASF88
     /tmp/ccHXLpCe.s:2256   .debug_str:00000000000006c7 .LASF111
     /tmp/ccHXLpCe.s:2248   .debug_str:000000000000067a .LASF112
     /tmp/ccHXLpCe.s:2128   .debug_str:0000000000000273 .LASF113
     /tmp/ccHXLpCe.s:2188   .debug_str:0000000000000410 .LASF89
     /tmp/ccHXLpCe.s:2104   .debug_str:00000000000001a7 .LASF90
     /tmp/ccHXLpCe.s:2204   .debug_str:0000000000000482 .LASF91
     /tmp/ccHXLpCe.s:2068   .debug_str:00000000000000ac .LASF92
     /tmp/ccHXLpCe.s:15     .text:0000000000000000 .LFB41
     /tmp/ccHXLpCe.s:136    .text:000000000000010c .LFE41
     /tmp/ccHXLpCe.s:2250   .debug_str:0000000000000688 .LASF93
     /tmp/ccHXLpCe.s:2076   .debug_str:00000000000000d2 .LASF94
     /tmp/ccHXLpCe.s:40     .text:000000000000002c .LVL0
     /tmp/ccHXLpCe.s:55     .text:0000000000000050 .LVL1
     /tmp/ccHXLpCe.s:78     .text:0000000000000080 .LVL2
     /tmp/ccHXLpCe.s:91     .text:00000000000000ac .LVL3
     /tmp/ccHXLpCe.s:99     .text:00000000000000bc .LVL4
     /tmp/ccHXLpCe.s:108    .text:00000000000000d4 .LVL5
     /tmp/ccHXLpCe.s:116    .text:00000000000000e8 .LVL6
     /tmp/ccHXLpCe.s:121    .text:00000000000000f4 .LVL7
     /tmp/ccHXLpCe.s:2246   .debug_str:0000000000000674 .LASF95
     /tmp/ccHXLpCe.s:2080   .debug_str:00000000000000e3 .LASF96
     /tmp/ccHXLpCe.s:142    .text:000000000000010c .LFB40
     /tmp/ccHXLpCe.s:177    .text:0000000000000154 .LFE40
     /tmp/ccHXLpCe.s:157    .text:000000000000012c .LVL8
     /tmp/ccHXLpCe.s:161    .text:0000000000000134 .LVL9
     /tmp/ccHXLpCe.s:166    .text:0000000000000144 .LVL10
     /tmp/ccHXLpCe.s:281    .text._ZN3TCB10isFinishedEv:0000000000000000 .LFB31
     /tmp/ccHXLpCe.s:303    .text._ZN3TCB10isFinishedEv:000000000000001c .LFE31
     /tmp/ccHXLpCe.s:2150   .debug_str:000000000000031e .LASF114
     /tmp/ccHXLpCe.s:1987   .debug_loc:0000000000000000 .LLST0
     /tmp/ccHXLpCe.s:249    .text._ZN5Riscv10mc_sstatusEm:0000000000000000 .LFB11
     /tmp/ccHXLpCe.s:274    .text._ZN5Riscv10mc_sstatusEm:000000000000001c .LFE11
     /tmp/ccHXLpCe.s:2262   .debug_str:0000000000000700 .LASF97
     /tmp/ccHXLpCe.s:217    .text._ZN5Riscv10ms_sstatusEm:0000000000000000 .LFB10
     /tmp/ccHXLpCe.s:242    .text._ZN5Riscv10ms_sstatusEm:000000000000001c .LFE10
     /tmp/ccHXLpCe.s:184    .text._ZN5Riscv7w_stvecEm:0000000000000000 .LFB5
     /tmp/ccHXLpCe.s:210    .text._ZN5Riscv7w_stvecEm:000000000000001c .LFE5
     /tmp/ccHXLpCe.s:2190   .debug_str:0000000000000415 .LASF98
     /tmp/ccHXLpCe.s:2182   .debug_str:00000000000003d1 .LASF99
     /tmp/ccHXLpCe.s:2092   .debug_str:0000000000000145 .LASF101
     /tmp/ccHXLpCe.s:2236   .debug_str:000000000000061b .LASF100
     /tmp/ccHXLpCe.s:2198   .debug_str:0000000000000456 .LASF102
     /tmp/ccHXLpCe.s:285    .text._ZN3TCB10isFinishedEv:0000000000000000 .LVL14
     /tmp/ccHXLpCe.s:295    .text._ZN3TCB10isFinishedEv:0000000000000010 .LVL15
     /tmp/ccHXLpCe.s:326    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccHXLpCe.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccHXLpCe.s:321    .text:0000000000000154 .Letext0

GAS LISTING /tmp/ccHXLpCe.s 			page 17


UNDEFINED SYMBOLS
interruptHandler
_Z13thread_createPP3TCBPFvPvES2_
_ZN3TCB7runningE
_ZN3TCB5yieldEv
_Z7printlnPKc
