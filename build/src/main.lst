GAS LISTING /tmp/cc9v6isO.s 			page 1


   1              		.file	"main.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_Znwm
   9              	_Znwm:
  10              	.LFB30:
  11              		.file 1 "src/main.cpp"
   1:src/main.cpp  **** #include "../lib/console.h"
   2:src/main.cpp  **** #include "../lib/hw.h"
   3:src/main.cpp  **** #include "../h/helper.hpp"
   4:src/main.cpp  **** #include "../h/riscv.hpp"
   5:src/main.cpp  **** #include "../h/syscall_c.hpp"
   6:src/main.cpp  **** #include "../h/List.hpp"
   7:src/main.cpp  **** //#include "../h/MemoryAllocator.hpp"
   8:src/main.cpp  **** 
   9:src/main.cpp  **** extern "C" void interruptHandler();
  10:src/main.cpp  **** 
  11:src/main.cpp  **** //override globalnog new
  12:src/main.cpp  **** void* operator new(size_t size) {
  12              		.loc 1 12 33
  13              		.cfi_startproc
  14              	.LVL0:
  15 0000 130101FF 		addi	sp,sp,-16
  16              		.cfi_def_cfa_offset 16
  17 0004 23341100 		sd	ra,8(sp)
  18 0008 23308100 		sd	s0,0(sp)
  19              		.cfi_offset 1, -8
  20              		.cfi_offset 8, -16
  21 000c 13040101 		addi	s0,sp,16
  22              		.cfi_def_cfa 8, 0
  13:src/main.cpp  **** 	return mem_alloc(size);
  23              		.loc 1 13 2
  24              		.loc 1 13 18 is_stmt 0
  25 0010 97000000 		call	_Z9mem_allocm@plt
  25      E7800000 
  26              	.LVL1:
  14:src/main.cpp  **** }
  27              		.loc 1 14 1
  28 0018 83308100 		ld	ra,8(sp)
  29              		.cfi_restore 1
  30 001c 03340100 		ld	s0,0(sp)
  31              		.cfi_restore 8
  32              		.cfi_def_cfa 2, 16
  33 0020 13010101 		addi	sp,sp,16
  34              		.cfi_def_cfa_offset 0
  35 0024 67800000 		jr	ra
  36              		.cfi_endproc
  37              	.LFE30:
  39              		.align	2
  40              		.globl	_Znam
  42              	_Znam:
  43              	.LFB31:
  15:src/main.cpp  **** 
  16:src/main.cpp  **** void* operator new[](size_t size) {
GAS LISTING /tmp/cc9v6isO.s 			page 2


  44              		.loc 1 16 35 is_stmt 1
  45              		.cfi_startproc
  46              	.LVL2:
  47 0028 130101FF 		addi	sp,sp,-16
  48              		.cfi_def_cfa_offset 16
  49 002c 23341100 		sd	ra,8(sp)
  50 0030 23308100 		sd	s0,0(sp)
  51              		.cfi_offset 1, -8
  52              		.cfi_offset 8, -16
  53 0034 13040101 		addi	s0,sp,16
  54              		.cfi_def_cfa 8, 0
  17:src/main.cpp  **** 	return mem_alloc(size);
  55              		.loc 1 17 2
  56              		.loc 1 17 18 is_stmt 0
  57 0038 97000000 		call	_Z9mem_allocm@plt
  57      E7800000 
  58              	.LVL3:
  18:src/main.cpp  **** }
  59              		.loc 1 18 1
  60 0040 83308100 		ld	ra,8(sp)
  61              		.cfi_restore 1
  62 0044 03340100 		ld	s0,0(sp)
  63              		.cfi_restore 8
  64              		.cfi_def_cfa 2, 16
  65 0048 13010101 		addi	sp,sp,16
  66              		.cfi_def_cfa_offset 0
  67 004c 67800000 		jr	ra
  68              		.cfi_endproc
  69              	.LFE31:
  71              		.align	2
  72              		.globl	_ZdlPv
  74              	_ZdlPv:
  75              	.LFB32:
  19:src/main.cpp  **** 
  20:src/main.cpp  **** void operator delete(void* ptr)noexcept {
  76              		.loc 1 20 41 is_stmt 1
  77              		.cfi_startproc
  78              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
  79              		.cfi_lsda 0x1b,.LLSDA32
  80              	.LVL4:
  81 0050 130101FF 		addi	sp,sp,-16
  82              		.cfi_def_cfa_offset 16
  83 0054 23341100 		sd	ra,8(sp)
  84 0058 23308100 		sd	s0,0(sp)
  85              		.cfi_offset 1, -8
  86              		.cfi_offset 8, -16
  87 005c 13040101 		addi	s0,sp,16
  88              		.cfi_def_cfa 8, 0
  21:src/main.cpp  **** mem_free(ptr);
  89              		.loc 1 21 1
  90              		.loc 1 21 9 is_stmt 0
  91 0060 97000000 		call	_Z8mem_freePv@plt
  91      E7800000 
  92              	.LVL5:
  22:src/main.cpp  **** }
  93              		.loc 1 22 1
  94 0068 83308100 		ld	ra,8(sp)
GAS LISTING /tmp/cc9v6isO.s 			page 3


  95              		.cfi_restore 1
  96 006c 03340100 		ld	s0,0(sp)
  97              		.cfi_restore 8
  98              		.cfi_def_cfa 2, 16
  99 0070 13010101 		addi	sp,sp,16
 100              		.cfi_def_cfa_offset 0
 101 0074 67800000 		jr	ra
 102              		.cfi_endproc
 103              	.LFE32:
 104              		.globl	__gxx_personality_v0
 105              		.section	.gcc_except_table,"a",@progbits
 106              	.LLSDA32:
 107 0000 FF       		.byte	0xff
 108 0001 FF       		.byte	0xff
 109 0002 03       		.byte	0x3
 110 0003 00       		.byte	0
 111              		.text
 113              		.align	2
 114              		.globl	_ZdaPv
 116              	_ZdaPv:
 117              	.LFB33:
  23:src/main.cpp  **** 
  24:src/main.cpp  **** void operator delete[](void* ptr)noexcept {
 118              		.loc 1 24 43 is_stmt 1
 119              		.cfi_startproc
 120              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 121              		.cfi_lsda 0x1b,.LLSDA33
 122              	.LVL6:
 123 0078 130101FF 		addi	sp,sp,-16
 124              		.cfi_def_cfa_offset 16
 125 007c 23341100 		sd	ra,8(sp)
 126 0080 23308100 		sd	s0,0(sp)
 127              		.cfi_offset 1, -8
 128              		.cfi_offset 8, -16
 129 0084 13040101 		addi	s0,sp,16
 130              		.cfi_def_cfa 8, 0
  25:src/main.cpp  **** mem_free(ptr);
 131              		.loc 1 25 1
 132              		.loc 1 25 9 is_stmt 0
 133 0088 97000000 		call	_Z8mem_freePv@plt
 133      E7800000 
 134              	.LVL7:
  26:src/main.cpp  **** }
 135              		.loc 1 26 1
 136 0090 83308100 		ld	ra,8(sp)
 137              		.cfi_restore 1
 138 0094 03340100 		ld	s0,0(sp)
 139              		.cfi_restore 8
 140              		.cfi_def_cfa 2, 16
 141 0098 13010101 		addi	sp,sp,16
 142              		.cfi_def_cfa_offset 0
 143 009c 67800000 		jr	ra
 144              		.cfi_endproc
 145              	.LFE33:
 146              		.section	.gcc_except_table
 147              	.LLSDA33:
 148 0004 FF       		.byte	0xff
GAS LISTING /tmp/cc9v6isO.s 			page 4


 149 0005 FF       		.byte	0xff
 150 0006 03       		.byte	0x3
 151 0007 00       		.byte	0
 152              		.text
 154              		.section	.rodata.str1.8,"aMS",@progbits,1
 155              		.align	3
 156              	.LC0:
 157 0000 00       		.string	""
 158              		.text
 159              		.align	2
 160              		.globl	main
 162              	main:
 163              	.LFB34:
  27:src/main.cpp  **** 
  28:src/main.cpp  **** //uint64 temp;
  29:src/main.cpp  **** //
  30:src/main.cpp  **** //void f() {
  31:src/main.cpp  **** //	__putc('a');
  32:src/main.cpp  **** //	__putc('\n');
  33:src/main.cpp  **** //	uint64 var = temp;
  34:src/main.cpp  **** //	__asm__ volatile ("mv ra, %[savedPC]": : [savedPC] "r"(var));
  35:src/main.cpp  **** //
  36:src/main.cpp  **** //	__asm__ volatile ("sd ra, 8(sp)");
  37:src/main.cpp  **** //}
  38:src/main.cpp  **** //
  39:src/main.cpp  **** //void dispatch() {
  40:src/main.cpp  **** //	__asm__ volatile ("mv %[savedPC], ra":[savedPC] "=r"(temp));
  41:src/main.cpp  **** //	__asm__ volatile("mv ra, %[fAddress]": : [fAddress] "r"(&f));
  42:src/main.cpp  **** //}
  43:src/main.cpp  **** 
  44:src/main.cpp  **** int main() {
 164              		.loc 1 44 12 is_stmt 1
 165              		.cfi_startproc
 166 00a0 130101FD 		addi	sp,sp,-48
 167              		.cfi_def_cfa_offset 48
 168 00a4 23341102 		sd	ra,40(sp)
 169 00a8 23308102 		sd	s0,32(sp)
 170              		.cfi_offset 1, -8
 171              		.cfi_offset 8, -16
 172 00ac 13040103 		addi	s0,sp,48
 173              		.cfi_def_cfa 8, 0
  45:src/main.cpp  **** 	//zabrani prekide
  46:src/main.cpp  **** 	Riscv::mc_sstatus(Riscv::SSTATUS_SIE);
 174              		.loc 1 46 2
 175              	.LVL8:
 176              	.LBB28:
 177              	.LBB29:
 178              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** //
   2:src/../h/riscv.hpp **** // Created by os on 5/17/23.
   3:src/../h/riscv.hpp **** //
   4:src/../h/riscv.hpp **** 
   5:src/../h/riscv.hpp **** #ifndef PROJEKAT2023_RISCV_HPP
   6:src/../h/riscv.hpp **** #define PROJEKAT2023_RISCV_HPP
   7:src/../h/riscv.hpp **** 
   8:src/../h/riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/riscv.hpp **** 
GAS LISTING /tmp/cc9v6isO.s 			page 5


  10:src/../h/riscv.hpp **** class Riscv {
  11:src/../h/riscv.hpp **** public:
  12:src/../h/riscv.hpp **** 
  13:src/../h/riscv.hpp **** 	//stavljanje registara x3-x31 na stek
  14:src/../h/riscv.hpp **** 	static void pushRegisters();    //implementacija u asm
  15:src/../h/riscv.hpp **** 
  16:src/../h/riscv.hpp **** 	//skidanje registara x3-x31 sa steka
  17:src/../h/riscv.hpp **** 	static void popRegisters();     //implementacija u asm
  18:src/../h/riscv.hpp **** 
  19:src/../h/riscv.hpp **** 	//read scause
  20:src/../h/riscv.hpp **** 	static uint64 r_scause();
  21:src/../h/riscv.hpp **** 
  22:src/../h/riscv.hpp **** 	//write scause
  23:src/../h/riscv.hpp **** 	static void w_scause(uint64 scause);
  24:src/../h/riscv.hpp **** 
  25:src/../h/riscv.hpp **** 	//read sepc
  26:src/../h/riscv.hpp **** 	static uint64 r_sepc();
  27:src/../h/riscv.hpp **** 
  28:src/../h/riscv.hpp **** 	//write sepc
  29:src/../h/riscv.hpp **** 	static void w_sepc(uint64 sepc);
  30:src/../h/riscv.hpp **** 
  31:src/../h/riscv.hpp **** 	//read stvec
  32:src/../h/riscv.hpp **** 	static uint64 r_stvec();
  33:src/../h/riscv.hpp **** 
  34:src/../h/riscv.hpp **** 	//write stvec
  35:src/../h/riscv.hpp **** 	static void w_stvec(uint64 stvec);
  36:src/../h/riscv.hpp **** 
  37:src/../h/riscv.hpp **** 	enum BitMaskSip {
  38:src/../h/riscv.hpp **** 		SIP_SSIP = (1 << 1),    //postoji zahtev za softverski prekid
  39:src/../h/riscv.hpp **** 		SIP_STIP = (1 << 5),    //postoji prekid od tajmera
  40:src/../h/riscv.hpp **** 		SIP_SEIP = (1 << 9)        //postoji zahtev za spoljasnji hardverski prekid
  41:src/../h/riscv.hpp **** 	};
  42:src/../h/riscv.hpp **** 
  43:src/../h/riscv.hpp **** 	//mask set sip
  44:src/../h/riscv.hpp **** 	static void ms_sip(uint64 mask);
  45:src/../h/riscv.hpp **** 
  46:src/../h/riscv.hpp **** 	//mask clear sip
  47:src/../h/riscv.hpp **** 	static void mc_sip(uint64 mask);
  48:src/../h/riscv.hpp **** 
  49:src/../h/riscv.hpp **** 	//read sip
  50:src/../h/riscv.hpp **** 	static uint64 r_sip();
  51:src/../h/riscv.hpp **** 
  52:src/../h/riscv.hpp **** 	//write sip
  53:src/../h/riscv.hpp **** 	static void w_sip(uint64 sip);
  54:src/../h/riscv.hpp **** 
  55:src/../h/riscv.hpp **** 	enum BitMaskSstatus {
  56:src/../h/riscv.hpp **** 		SSTATUS_SIE = (1 << 1),
  57:src/../h/riscv.hpp **** 		SSTATUS_SPIE = (1 << 5),
  58:src/../h/riscv.hpp **** 		SSTATUS_SPP = (1 << 8)
  59:src/../h/riscv.hpp **** 	};
  60:src/../h/riscv.hpp **** 
  61:src/../h/riscv.hpp **** 	//mask set sstatus
  62:src/../h/riscv.hpp **** 	static void ms_sstatus(uint64 mask);
  63:src/../h/riscv.hpp **** 
  64:src/../h/riscv.hpp **** 	//mask clear sstatus
  65:src/../h/riscv.hpp **** 	static void mc_sstatus(uint64 mask);
  66:src/../h/riscv.hpp **** 
GAS LISTING /tmp/cc9v6isO.s 			page 6


  67:src/../h/riscv.hpp **** 	//read sstatus
  68:src/../h/riscv.hpp **** 	static uint64 r_sstatus();
  69:src/../h/riscv.hpp **** 
  70:src/../h/riscv.hpp **** 	//write sstatus
  71:src/../h/riscv.hpp **** 	static void w_sstatus(uint64 sstatus);
  72:src/../h/riscv.hpp **** 
  73:src/../h/riscv.hpp **** };
  74:src/../h/riscv.hpp **** 
  75:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause() {
  76:src/../h/riscv.hpp **** 	uint64 volatile scause;
  77:src/../h/riscv.hpp **** 	__asm__ volatile("csrr %[scause], scause": [scause] "=r"(scause));
  78:src/../h/riscv.hpp **** 	return scause;
  79:src/../h/riscv.hpp **** }
  80:src/../h/riscv.hpp **** 
  81:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
  82:src/../h/riscv.hpp **** 	__asm__ volatile("csrw scause, %[scause]": :[scause] "r"(scause));
  83:src/../h/riscv.hpp **** }
  84:src/../h/riscv.hpp **** 
  85:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc() {
  86:src/../h/riscv.hpp **** 	uint64 volatile sepc;
  87:src/../h/riscv.hpp **** 	__asm__ volatile("csrr %[sepc], sepc": [sepc] "=r"(sepc));
  88:src/../h/riscv.hpp **** 	return sepc;
  89:src/../h/riscv.hpp **** }
  90:src/../h/riscv.hpp **** 
  91:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
  92:src/../h/riscv.hpp **** 	__asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
  93:src/../h/riscv.hpp **** }
  94:src/../h/riscv.hpp **** 
  95:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec() {
  96:src/../h/riscv.hpp **** 	uint64 volatile stvec;
  97:src/../h/riscv.hpp **** 	__asm__ volatile("csrr %[stvec], stvec": [stvec] "=r"(stvec));
  98:src/../h/riscv.hpp **** 	return stvec;
  99:src/../h/riscv.hpp **** }
 100:src/../h/riscv.hpp **** 
 101:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 102:src/../h/riscv.hpp **** 	__asm__ volatile("csrw stvec, %[stvec]": :[stvec] "r"(stvec));
 103:src/../h/riscv.hpp **** }
 104:src/../h/riscv.hpp **** 
 105:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 106:src/../h/riscv.hpp **** 	__asm__ volatile("csrs sip, %[mask]": :[mask] "r"(mask));
 107:src/../h/riscv.hpp **** }
 108:src/../h/riscv.hpp **** 
 109:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 110:src/../h/riscv.hpp **** 	__asm__ volatile("csrc sip, %[mask]": :[mask] "r"(mask));
 111:src/../h/riscv.hpp **** }
 112:src/../h/riscv.hpp **** 
 113:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip() {
 114:src/../h/riscv.hpp **** 	uint64 volatile sip;
 115:src/../h/riscv.hpp **** 	__asm__ volatile("csrr %[sip], sip": [sip] "=r"(sip));
 116:src/../h/riscv.hpp **** 	return sip;
 117:src/../h/riscv.hpp **** }
 118:src/../h/riscv.hpp **** 
 119:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip) {
 120:src/../h/riscv.hpp **** 	__asm__ volatile("csrw sip, %[sip]": :[sip] "r"(sip));
 121:src/../h/riscv.hpp **** }
 122:src/../h/riscv.hpp **** 
 123:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
GAS LISTING /tmp/cc9v6isO.s 			page 7


 124:src/../h/riscv.hpp **** 	__asm__ volatile("csrs sstatus, %[mask]": :[mask] "r"(mask));
 125:src/../h/riscv.hpp **** }
 126:src/../h/riscv.hpp **** 
 127:src/../h/riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask) {
 128:src/../h/riscv.hpp **** 	__asm__ volatile("csrc sstatus, %[mask]": :[mask] "r"(mask));
 179              		.loc 2 128 2
 180              		.loc 2 128 62 is_stmt 0
 181 00b0 93072000 		li	a5,2
 182              	#APP
 183              	# 128 "src/../h/riscv.hpp" 1
 129              	}
 184              		csrc sstatus, a5
 185              	# 0 "" 2
 186              	.LVL9:
 187              	#NO_APP
 188              	.LBE29:
 189              	.LBE28:
  47:src/main.cpp  **** 	//postavi adresu prekidne rutine u stvec
  48:src/main.cpp  **** 	Riscv::w_stvec((uint64)&interruptHandler);
 190              		.loc 1 48 2 is_stmt 1
 191              		.loc 1 48 16 is_stmt 0
 192 00b8 97070000 		la	a5,interruptHandler
 192      83B70700 
 193              	.LVL10:
 194              	.LBB30:
 195              	.LBB31:
 102:src/../h/riscv.hpp **** }
 196              		.loc 2 102 2 is_stmt 1
 102:src/../h/riscv.hpp **** }
 197              		.loc 2 102 63 is_stmt 0
 198              	#APP
 199              	# 102 "src/../h/riscv.hpp" 1
 200              		csrw stvec, a5
 201              	# 0 "" 2
 202              	.LVL11:
 203              	#NO_APP
 204              	.LBE31:
 205              	.LBE30:
  49:src/main.cpp  **** 	//omoguci prekide
  50:src/main.cpp  **** 	//Riscv::ms_sstatus(Riscv::SSTATUS_SIE);
  51:src/main.cpp  **** //	uint64 i = 0;
  52:src/main.cpp  **** //	for (; i < 10000; i++) {
  53:src/main.cpp  **** //		void* ptr = mem_alloc(0xffffff);
  54:src/main.cpp  **** //		if (ptr == nullptr) break;
  55:src/main.cpp  **** //		if (mem_free(ptr) == -1) {
  56:src/main.cpp  **** //			i = 11111111;
  57:src/main.cpp  **** //		}
  58:src/main.cpp  **** //	}
  59:src/main.cpp  **** //	printInteger(i);
  60:src/main.cpp  **** 
  61:src/main.cpp  **** 	List<uint64> lista;
 206              		.loc 1 61 2 is_stmt 1
 207              	.LBB32:
 208              	.LBB33:
 209              	.LBB34:
 210              		.file 3 "src/../h/List.hpp"
   1:src/../h/List.hpp **** #ifndef LIST_HPP
GAS LISTING /tmp/cc9v6isO.s 			page 8


   2:src/../h/List.hpp **** #define LIST_HPP
   3:src/../h/List.hpp **** 
   4:src/../h/List.hpp **** #include "../h/MemoryAllocator.hpp"
   5:src/../h/List.hpp **** #include "../lib/hw.h"
   6:src/../h/List.hpp **** 
   7:src/../h/List.hpp **** template<typename T>
   8:src/../h/List.hpp **** class List {
   9:src/../h/List.hpp **** private:
  10:src/../h/List.hpp **** 	struct Elem {
  11:src/../h/List.hpp **** 		T* data;
  12:src/../h/List.hpp **** 		Elem* next;
  13:src/../h/List.hpp **** 
  14:src/../h/List.hpp **** 		Elem(T* data, Elem* next) : data(data), next(next) {}
  15:src/../h/List.hpp **** 	};
  16:src/../h/List.hpp **** 
  17:src/../h/List.hpp **** 	Elem* head, * tail;
  18:src/../h/List.hpp **** 	uint64 numOfElements;
  19:src/../h/List.hpp **** public:
  20:src/../h/List.hpp **** 	List() : head(nullptr), tail(nullptr), numOfElements(0) {}
 211              		.loc 3 20 56 is_stmt 0
 212 00c4 233C04FC 		sd	zero,-40(s0)
 213 00c8 233004FE 		sd	zero,-32(s0)
 214              	.LVL12:
 215              	.LBE34:
 216              	.LBE33:
 217              	.LBE32:
  62:src/main.cpp  **** 	uint64 num = 10;
 218              		.loc 1 62 2 is_stmt 1
 219              		.loc 1 62 9 is_stmt 0
 220 00cc 9307A000 		li	a5,10
 221 00d0 2338F4FC 		sd	a5,-48(s0)
  63:src/main.cpp  **** 	lista.addFirst(&num);
 222              		.loc 1 63 2 is_stmt 1
 223              	.LVL13:
 224              	.LBB35:
 225              	.LBB36:
  21:src/../h/List.hpp **** 
  22:src/../h/List.hpp **** 	List(const List<T>&) = delete;
  23:src/../h/List.hpp **** 
  24:src/../h/List.hpp **** 	List<T>& operator=(const List<T>&) = delete;
  25:src/../h/List.hpp **** 
  26:src/../h/List.hpp **** 	uint64 getNumOfElems() { return numOfElements; }
  27:src/../h/List.hpp **** 
  28:src/../h/List.hpp **** 	void addFirst(T* data) {
  29:src/../h/List.hpp **** 		Elem* elem = new Elem(data, head);
 226              		.loc 3 29 16 is_stmt 0
 227 00d4 13050001 		li	a0,16
 228 00d8 97000000 		call	_Znwm
 228      E7800000 
 229              	.LVL14:
 230              	.LBB37:
 231              	.LBB38:
  14:src/../h/List.hpp **** 	};
 232              		.loc 3 14 52
 233 00e0 930704FD 		addi	a5,s0,-48
 234              	.LVL15:
 235 00e4 2330F500 		sd	a5,0(a0)
GAS LISTING /tmp/cc9v6isO.s 			page 9


 236 00e8 833784FD 		ld	a5,-40(s0)
 237              	.LVL16:
 238 00ec 2334F500 		sd	a5,8(a0)
 239              	.LVL17:
 240              	.LBE38:
 241              	.LBE37:
  30:src/../h/List.hpp **** 		head = elem;
 242              		.loc 3 30 3
 243 00f0 233CA4FC 		sd	a0,-40(s0)
 244              	.LVL18:
 245              	.LBE36:
 246              	.LBE35:
  64:src/main.cpp  **** 	println("");
 247              		.loc 1 64 2 is_stmt 1
 248              		.loc 1 64 9 is_stmt 0
 249 00f4 17050000 		lla	a0,.LC0
 249      13050500 
 250              	.LVL19:
 251 00fc 97000000 		call	_Z7printlnPKc@plt
 251      E7800000 
 252              	.LVL20:
  65:src/main.cpp  **** 	printInteger(*lista.peekFirst());
 253              		.loc 1 65 2 is_stmt 1
 254              	.LBB39:
 255              	.LBB40:
  31:src/../h/List.hpp **** 		if (!tail) { tail = head; }
  32:src/../h/List.hpp **** 		numOfElements++;
  33:src/../h/List.hpp **** 	}
  34:src/../h/List.hpp **** 
  35:src/../h/List.hpp **** 	void addLast(T* data) {
  36:src/../h/List.hpp **** 		Elem* elem = new Elem(data, nullptr);
  37:src/../h/List.hpp **** 		if (tail) {
  38:src/../h/List.hpp **** 			tail->next = elem;
  39:src/../h/List.hpp **** 			tail = elem;
  40:src/../h/List.hpp **** 		} else {
  41:src/../h/List.hpp **** 			head = tail = elem;
  42:src/../h/List.hpp **** 		}
  43:src/../h/List.hpp **** 		numOfElements++;
  44:src/../h/List.hpp **** 	}
  45:src/../h/List.hpp **** 
  46:src/../h/List.hpp **** 	T* removeFirst() {
  47:src/../h/List.hpp **** 		if (!head) { return nullptr; }
  48:src/../h/List.hpp **** 
  49:src/../h/List.hpp **** 		Elem* elem = head;
  50:src/../h/List.hpp **** 		head = head->next;
  51:src/../h/List.hpp **** 		if (!head) { tail = nullptr; }
  52:src/../h/List.hpp **** 
  53:src/../h/List.hpp **** 		T* ret = elem->data;
  54:src/../h/List.hpp **** 		delete elem;
  55:src/../h/List.hpp **** 		numOfElements--;
  56:src/../h/List.hpp **** 		return ret;
  57:src/../h/List.hpp **** 	}
  58:src/../h/List.hpp **** 
  59:src/../h/List.hpp **** 	T* peekFirst() {
  60:src/../h/List.hpp **** 		if (!head) { return nullptr; }
 256              		.loc 3 60 8 is_stmt 0
 257 0104 833784FD 		ld	a5,-40(s0)
GAS LISTING /tmp/cc9v6isO.s 			page 10


 258              		.loc 3 60 3
 259 0108 63840700 		beqz	a5,.L10
  61:src/../h/List.hpp **** 		return head->data;
 260              		.loc 3 61 16
 261 010c 83B70700 		ld	a5,0(a5)
 262              	.L10:
 263              	.LVL21:
 264              	.LBE40:
 265              	.LBE39:
 266              		.loc 1 65 14
 267 0110 03B50700 		ld	a0,0(a5)
 268 0114 97000000 		call	_Z12printIntegerm@plt
 268      E7800000 
 269              	.LVL22:
  66:src/main.cpp  **** 	println("");
 270              		.loc 1 66 2 is_stmt 1
 271              		.loc 1 66 9 is_stmt 0
 272 011c 17050000 		lla	a0,.LC0
 272      13050500 
 273 0124 97000000 		call	_Z7printlnPKc@plt
 273      E7800000 
 274              	.LVL23:
  67:src/main.cpp  **** 	/*
  68:src/main.cpp  ****     //omoguci prekide
  69:src/main.cpp  ****     Riscv::ms_sstatus(Riscv::SSTATUS_SIE);
  70:src/main.cpp  ****     scall();
  71:src/main.cpp  ****     println("\nprosao ecall");
  72:src/main.cpp  ****     //while (1) {}
  73:src/main.cpp  **** 
  74:src/main.cpp  ****     //maskiraj prekide
  75:src/main.cpp  ****     Riscv::mc_sstatus(Riscv::SSTATUS_SIE);
  76:src/main.cpp  ****     */
  77:src/main.cpp  **** 	return 0;
 275              		.loc 1 77 2 is_stmt 1
  78:src/main.cpp  **** }...
 276              		.loc 1 78 1 is_stmt 0
 277 012c 13050000 		li	a0,0
 278 0130 83308102 		ld	ra,40(sp)
 279              		.cfi_restore 1
 280 0134 03340102 		ld	s0,32(sp)
 281              		.cfi_restore 8
 282              		.cfi_def_cfa 2, 48
 283              	.LVL24:
 284 0138 13010103 		addi	sp,sp,48
 285              		.cfi_def_cfa_offset 0
 286              	.LVL25:
 287 013c 67800000 		jr	ra
 288              		.cfi_endproc
 289              	.LFE34:
 291              	.Letext0:
 292              		.file 4 "src/../lib/hw.h"
 293              		.file 5 "src/../h/syscall_c.hpp"
 294              		.file 6 "src/../h/helper.hpp"
 2551              		.align	3
 2554              	DW.ref.__gxx_personality_v0:
 2555 0000 00000000 		.dword	__gxx_personality_v0
 2555      00000000 
GAS LISTING /tmp/cc9v6isO.s 			page 11


 2556              		.ident	"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04) 9.4.0"
 2557              		.section	.note.GNU-stack,"",@progbits
GAS LISTING /tmp/cc9v6isO.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/cc9v6isO.s:9      .text:0000000000000000 _Znwm
     /tmp/cc9v6isO.s:13     .text:0000000000000000 .L0 
     /tmp/cc9v6isO.s:15     .text:0000000000000000 .L0 
     /tmp/cc9v6isO.s:16     .text:0000000000000004 .L0 
     /tmp/cc9v6isO.s:19     .text:000000000000000c .L0 
     /tmp/cc9v6isO.s:20     .text:000000000000000c .L0 
     /tmp/cc9v6isO.s:22     .text:0000000000000010 .L0 
     /tmp/cc9v6isO.s:24     .text:0000000000000010 .L0 
     /tmp/cc9v6isO.s:25     .text:0000000000000010 .L0 
     /tmp/cc9v6isO.s:28     .text:0000000000000018 .L0 
     /tmp/cc9v6isO.s:29     .text:000000000000001c .L0 
     /tmp/cc9v6isO.s:31     .text:0000000000000020 .L0 
     /tmp/cc9v6isO.s:32     .text:0000000000000020 .L0 
     /tmp/cc9v6isO.s:34     .text:0000000000000024 .L0 
     /tmp/cc9v6isO.s:36     .text:0000000000000028 .L0 
     /tmp/cc9v6isO.s:42     .text:0000000000000028 _Znam
     /tmp/cc9v6isO.s:45     .text:0000000000000028 .L0 
     /tmp/cc9v6isO.s:47     .text:0000000000000028 .L0 
     /tmp/cc9v6isO.s:48     .text:000000000000002c .L0 
     /tmp/cc9v6isO.s:51     .text:0000000000000034 .L0 
     /tmp/cc9v6isO.s:52     .text:0000000000000034 .L0 
     /tmp/cc9v6isO.s:54     .text:0000000000000038 .L0 
     /tmp/cc9v6isO.s:56     .text:0000000000000038 .L0 
     /tmp/cc9v6isO.s:57     .text:0000000000000038 .L0 
     /tmp/cc9v6isO.s:60     .text:0000000000000040 .L0 
     /tmp/cc9v6isO.s:61     .text:0000000000000044 .L0 
     /tmp/cc9v6isO.s:63     .text:0000000000000048 .L0 
     /tmp/cc9v6isO.s:64     .text:0000000000000048 .L0 
     /tmp/cc9v6isO.s:66     .text:000000000000004c .L0 
     /tmp/cc9v6isO.s:68     .text:0000000000000050 .L0 
     /tmp/cc9v6isO.s:74     .text:0000000000000050 _ZdlPv
     /tmp/cc9v6isO.s:77     .text:0000000000000050 .L0 
     /tmp/cc9v6isO.s:2554   .data.rel.local.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/cc9v6isO.s:81     .text:0000000000000050 .L0 
     /tmp/cc9v6isO.s:82     .text:0000000000000054 .L0 
     /tmp/cc9v6isO.s:85     .text:000000000000005c .L0 
     /tmp/cc9v6isO.s:86     .text:000000000000005c .L0 
     /tmp/cc9v6isO.s:88     .text:0000000000000060 .L0 
     /tmp/cc9v6isO.s:90     .text:0000000000000060 .L0 
     /tmp/cc9v6isO.s:91     .text:0000000000000060 .L0 
     /tmp/cc9v6isO.s:94     .text:0000000000000068 .L0 
     /tmp/cc9v6isO.s:95     .text:000000000000006c .L0 
     /tmp/cc9v6isO.s:97     .text:0000000000000070 .L0 
     /tmp/cc9v6isO.s:98     .text:0000000000000070 .L0 
     /tmp/cc9v6isO.s:100    .text:0000000000000074 .L0 
     /tmp/cc9v6isO.s:102    .text:0000000000000078 .L0 
     /tmp/cc9v6isO.s:116    .text:0000000000000078 _ZdaPv
     /tmp/cc9v6isO.s:119    .text:0000000000000078 .L0 
     /tmp/cc9v6isO.s:123    .text:0000000000000078 .L0 
     /tmp/cc9v6isO.s:124    .text:000000000000007c .L0 
     /tmp/cc9v6isO.s:127    .text:0000000000000084 .L0 
     /tmp/cc9v6isO.s:128    .text:0000000000000084 .L0 
     /tmp/cc9v6isO.s:130    .text:0000000000000088 .L0 
     /tmp/cc9v6isO.s:132    .text:0000000000000088 .L0 
     /tmp/cc9v6isO.s:133    .text:0000000000000088 .L0 
GAS LISTING /tmp/cc9v6isO.s 			page 13


     /tmp/cc9v6isO.s:136    .text:0000000000000090 .L0 
     /tmp/cc9v6isO.s:137    .text:0000000000000094 .L0 
     /tmp/cc9v6isO.s:139    .text:0000000000000098 .L0 
     /tmp/cc9v6isO.s:140    .text:0000000000000098 .L0 
     /tmp/cc9v6isO.s:142    .text:000000000000009c .L0 
     /tmp/cc9v6isO.s:144    .text:00000000000000a0 .L0 
     /tmp/cc9v6isO.s:162    .text:00000000000000a0 main
     /tmp/cc9v6isO.s:165    .text:00000000000000a0 .L0 
     /tmp/cc9v6isO.s:166    .text:00000000000000a0 .L0 
     /tmp/cc9v6isO.s:167    .text:00000000000000a4 .L0 
     /tmp/cc9v6isO.s:170    .text:00000000000000ac .L0 
     /tmp/cc9v6isO.s:171    .text:00000000000000ac .L0 
     /tmp/cc9v6isO.s:173    .text:00000000000000b0 .L0 
     /tmp/cc9v6isO.s:179    .text:00000000000000b0 .L0 
     /tmp/cc9v6isO.s:180    .text:00000000000000b0 .L0 
     /tmp/cc9v6isO.s:181    .text:00000000000000b0 .L0 
     /tmp/cc9v6isO.s:191    .text:00000000000000b8 .L0 
     /tmp/cc9v6isO.s:192    .text:00000000000000b8 .L0 
     /tmp/cc9v6isO.s:197    .text:00000000000000c0 .L0 
  src/../h/riscv.hpp:102    .text:00000000000000c0 .L0 
     /tmp/cc9v6isO.s:211    .text:00000000000000c4 .L0 
     /tmp/cc9v6isO.s:212    .text:00000000000000c4 .L0 
     /tmp/cc9v6isO.s:219    .text:00000000000000cc .L0 
     /tmp/cc9v6isO.s:220    .text:00000000000000cc .L0 
     /tmp/cc9v6isO.s:226    .text:00000000000000d4 .L0 
     /tmp/cc9v6isO.s:227    .text:00000000000000d4 .L0 
     /tmp/cc9v6isO.s:233    .text:00000000000000e0 .L0 
     /tmp/cc9v6isO.s:243    .text:00000000000000f0 .L0 
     /tmp/cc9v6isO.s:248    .text:00000000000000f4 .L0 
     /tmp/cc9v6isO.s:249    .text:00000000000000f4 .L0 
     /tmp/cc9v6isO.s:256    .text:0000000000000104 .L0 
     /tmp/cc9v6isO.s:257    .text:0000000000000104 .L0 
     /tmp/cc9v6isO.s:259    .text:0000000000000108 .L0 
     /tmp/cc9v6isO.s:261    .text:000000000000010c .L0 
     /tmp/cc9v6isO.s:267    .text:0000000000000110 .L0 
     /tmp/cc9v6isO.s:271    .text:000000000000011c .L0 
     /tmp/cc9v6isO.s:272    .text:000000000000011c .L0 
     /tmp/cc9v6isO.s:276    .text:000000000000012c .L0 
     /tmp/cc9v6isO.s:277    .text:000000000000012c .L0 
     /tmp/cc9v6isO.s:279    .text:0000000000000134 .L0 
     /tmp/cc9v6isO.s:281    .text:0000000000000138 .L0 
     /tmp/cc9v6isO.s:282    .text:0000000000000138 .L0 
     /tmp/cc9v6isO.s:285    .text:000000000000013c .L0 
     /tmp/cc9v6isO.s:288    .text:0000000000000140 .L0 
     /tmp/cc9v6isO.s:295    .text:0000000000000140 .L0 
     /tmp/cc9v6isO.s:192    .text:00000000000000b8 .L0 
     /tmp/cc9v6isO.s:156    .rodata.str1.8:0000000000000000 .LC0
     /tmp/cc9v6isO.s:249    .text:00000000000000f4 .L0 
     /tmp/cc9v6isO.s:272    .text:000000000000011c .L0 
     /tmp/cc9v6isO.s:262    .text:0000000000000110 .L10
     /tmp/cc9v6isO.s:1285   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cc9v6isO.s:2512   .debug_str:0000000000000542 .LASF109
     /tmp/cc9v6isO.s:2412   .debug_str:00000000000002a6 .LASF110
     /tmp/cc9v6isO.s:2390   .debug_str:00000000000001ec .LASF111
     /tmp/cc9v6isO.s:5      .text:0000000000000000 .Ltext0
     /tmp/cc9v6isO.s:291    .text:0000000000000140 .Letext0
     /tmp/cc9v6isO.s:2318   .debug_line:0000000000000000 .Ldebug_line0
GAS LISTING /tmp/cc9v6isO.s 			page 14


     /tmp/cc9v6isO.s:2444   .debug_str:0000000000000365 .LASF0
     /tmp/cc9v6isO.s:2460   .debug_str:00000000000003da .LASF1
     /tmp/cc9v6isO.s:2428   .debug_str:0000000000000310 .LASF2
     /tmp/cc9v6isO.s:2404   .debug_str:0000000000000277 .LASF4
     /tmp/cc9v6isO.s:2494   .debug_str:00000000000004b2 .LASF3
     /tmp/cc9v6isO.s:2338   .debug_str:0000000000000078 .LASF5
     /tmp/cc9v6isO.s:2462   .debug_str:00000000000003ed .LASF6
     /tmp/cc9v6isO.s:2442   .debug_str:0000000000000352 .LASF7
     /tmp/cc9v6isO.s:2522   .debug_str:0000000000000652 .LASF8
     /tmp/cc9v6isO.s:2388   .debug_str:00000000000001de .LASF9
     /tmp/cc9v6isO.s:2472   .debug_str:0000000000000429 .LASF10
     /tmp/cc9v6isO.s:2516   .debug_str:0000000000000623 .LASF11
     /tmp/cc9v6isO.s:2342   .debug_str:000000000000008b .LASF12
     /tmp/cc9v6isO.s:2326   .debug_str:0000000000000036 .LASF13
     /tmp/cc9v6isO.s:2350   .debug_str:00000000000000bf .LASF14
     /tmp/cc9v6isO.s:2484   .debug_str:0000000000000468 .LASF15
     /tmp/cc9v6isO.s:2358   .debug_str:00000000000000eb .LASF16
     /tmp/cc9v6isO.s:2458   .debug_str:00000000000003d4 .LASF51
     /tmp/cc9v6isO.s:2362   .debug_str:0000000000000115 .LASF112
     /tmp/cc9v6isO.s:2356   .debug_str:00000000000000df .LASF17
     /tmp/cc9v6isO.s:2414   .debug_str:00000000000002b3 .LASF18
     /tmp/cc9v6isO.s:2340   .debug_str:000000000000007f .LASF19
     /tmp/cc9v6isO.s:2336   .debug_str:000000000000006a .LASF20
     /tmp/cc9v6isO.s:2374   .debug_str:0000000000000172 .LASF22
     /tmp/cc9v6isO.s:2504   .debug_str:0000000000000507 .LASF21
     /tmp/cc9v6isO.s:2324   .debug_str:000000000000001c .LASF23
     /tmp/cc9v6isO.s:2328   .debug_str:0000000000000046 .LASF24
     /tmp/cc9v6isO.s:2502   .debug_str:00000000000004f2 .LASF26
     /tmp/cc9v6isO.s:2372   .debug_str:0000000000000169 .LASF28
     /tmp/cc9v6isO.s:2370   .debug_str:0000000000000154 .LASF30
     /tmp/cc9v6isO.s:2496   .debug_str:00000000000004c4 .LASF25
     /tmp/cc9v6isO.s:2478   .debug_str:0000000000000449 .LASF27
     /tmp/cc9v6isO.s:2482   .debug_str:0000000000000461 .LASF29
     /tmp/cc9v6isO.s:2506   .debug_str:0000000000000514 .LASF31
     /tmp/cc9v6isO.s:2382   .debug_str:00000000000001b5 .LASF32
     /tmp/cc9v6isO.s:2360   .debug_str:0000000000000101 .LASF33
     /tmp/cc9v6isO.s:2320   .debug_str:0000000000000000 .LASF34
     /tmp/cc9v6isO.s:2394   .debug_str:0000000000000220 .LASF35
     /tmp/cc9v6isO.s:2446   .debug_str:0000000000000372 .LASF36
     /tmp/cc9v6isO.s:2532   .debug_str:00000000000006a0 .LASF37
     /tmp/cc9v6isO.s:2332   .debug_str:0000000000000055 .LASF38
     /tmp/cc9v6isO.s:2380   .debug_str:00000000000001a2 .LASF39
     /tmp/cc9v6isO.s:2386   .debug_str:00000000000001d8 .LASF40
     /tmp/cc9v6isO.s:2508   .debug_str:0000000000000527 .LASF41
     /tmp/cc9v6isO.s:2330   .debug_str:000000000000004f .LASF42
     /tmp/cc9v6isO.s:2546   .debug_str:00000000000006ee .LASF43
     /tmp/cc9v6isO.s:2538   .debug_str:00000000000006c6 .LASF44
     /tmp/cc9v6isO.s:2490   .debug_str:0000000000000493 .LASF45
     /tmp/cc9v6isO.s:2408   .debug_str:0000000000000292 .LASF46
     /tmp/cc9v6isO.s:2416   .debug_str:00000000000002c0 .LASF47
     /tmp/cc9v6isO.s:2348   .debug_str:00000000000000b5 .LASF48
     /tmp/cc9v6isO.s:2400   .debug_str:000000000000025c .LASF49
     /tmp/cc9v6isO.s:2434   .debug_str:0000000000000332 .LASF55
     /tmp/cc9v6isO.s:2392   .debug_str:000000000000020a .LASF57
     /tmp/cc9v6isO.s:2378   .debug_str:000000000000019d .LASF50
     /tmp/cc9v6isO.s:2468   .debug_str:000000000000040b .LASF52
     /tmp/cc9v6isO.s:2420   .debug_str:00000000000002de .LASF56
GAS LISTING /tmp/cc9v6isO.s 			page 15


     /tmp/cc9v6isO.s:2480   .debug_str:000000000000045c .LASF53
     /tmp/cc9v6isO.s:2540   .debug_str:00000000000006d1 .LASF54
     /tmp/cc9v6isO.s:2528   .debug_str:0000000000000679 .LASF58
     /tmp/cc9v6isO.s:2364   .debug_str:0000000000000124 .LASF59
     /tmp/cc9v6isO.s:2424   .debug_str:00000000000002fb .LASF60
     /tmp/cc9v6isO.s:2448   .debug_str:0000000000000379 .LASF61
     /tmp/cc9v6isO.s:2402   .debug_str:0000000000000272 .LASF62
     /tmp/cc9v6isO.s:2344   .debug_str:000000000000009b .LASF67
     /tmp/cc9v6isO.s:2406   .debug_str:000000000000027e .LASF64
     /tmp/cc9v6isO.s:2438   .debug_str:0000000000000343 .LASF94
     /tmp/cc9v6isO.s:2322   .debug_str:0000000000000008 .LASF95
     /tmp/cc9v6isO.s:2334   .debug_str:000000000000005c .LASF63
     /tmp/cc9v6isO.s:2514   .debug_str:0000000000000606 .LASF65
     /tmp/cc9v6isO.s:2510   .debug_str:0000000000000539 .LASF66
     /tmp/cc9v6isO.s:2396   .debug_str:0000000000000234 .LASF68
     /tmp/cc9v6isO.s:2432   .debug_str:000000000000032a .LASF69
     /tmp/cc9v6isO.s:2500   .debug_str:00000000000004db .LASF70
     /tmp/cc9v6isO.s:2430   .debug_str:000000000000031e .LASF71
     /tmp/cc9v6isO.s:2384   .debug_str:00000000000001bd .LASF72
     /tmp/cc9v6isO.s:2346   .debug_str:00000000000000ab .LASF73
     /tmp/cc9v6isO.s:2422   .debug_str:00000000000002e3 .LASF74
     /tmp/cc9v6isO.s:2452   .debug_str:000000000000039e .LASF75
     /tmp/cc9v6isO.s:2456   .debug_str:00000000000003ba .LASF76
     /tmp/cc9v6isO.s:2410   .debug_str:000000000000029d .LASF77
     /tmp/cc9v6isO.s:2450   .debug_str:0000000000000387 .LASF78
     /tmp/cc9v6isO.s:2530   .debug_str:0000000000000693 .LASF79
     /tmp/cc9v6isO.s:2376   .debug_str:000000000000018d .LASF80
     /tmp/cc9v6isO.s:2486   .debug_str:000000000000047e .LASF81
     /tmp/cc9v6isO.s:2398   .debug_str:000000000000024c .LASF82
     /tmp/cc9v6isO.s:2498   .debug_str:00000000000004cb .LASF83
     /tmp/cc9v6isO.s:2454   .debug_str:00000000000003a9 .LASF84
     /tmp/cc9v6isO.s:2544   .debug_str:00000000000006db .LASF85
     /tmp/cc9v6isO.s:2368   .debug_str:0000000000000143 .LASF86
     /tmp/cc9v6isO.s:2534   .debug_str:00000000000006b3 .LASF87
     /tmp/cc9v6isO.s:2366   .debug_str:0000000000000129 .LASF88
     /tmp/cc9v6isO.s:2488   .debug_str:000000000000048e .LASF113
     /tmp/cc9v6isO.s:2426   .debug_str:0000000000000300 .LASF89
     /tmp/cc9v6isO.s:2464   .debug_str:0000000000000400 .LASF90
     /tmp/cc9v6isO.s:163    .text:00000000000000a0 .LFB34
     /tmp/cc9v6isO.s:289    .text:0000000000000140 .LFE34
     /tmp/cc9v6isO.s:2352   .debug_str:00000000000000cb .LASF91
     /tmp/cc9v6isO.s:176    .text:00000000000000b0 .LBB28
     /tmp/cc9v6isO.s:189    .text:00000000000000b8 .LBE28
     /tmp/cc9v6isO.s:2145   .debug_loc:0000000000000000 .LLST4
     /tmp/cc9v6isO.s:194    .text:00000000000000c0 .LBB30
     /tmp/cc9v6isO.s:205    .text:00000000000000c4 .LBE30
     /tmp/cc9v6isO.s:207    .text:00000000000000c4 .LBB32
     /tmp/cc9v6isO.s:217    .text:00000000000000cc .LBE32
     /tmp/cc9v6isO.s:2153   .debug_loc:0000000000000024 .LLST5
     /tmp/cc9v6isO.s:224    .text:00000000000000d4 .LBB35
     /tmp/cc9v6isO.s:246    .text:00000000000000f4 .LBE35
     /tmp/cc9v6isO.s:2162   .debug_loc:0000000000000049 .LLST6
     /tmp/cc9v6isO.s:2178   .debug_loc:0000000000000093 .LLST7
     /tmp/cc9v6isO.s:2187   .debug_loc:00000000000000b8 .LLST8
     /tmp/cc9v6isO.s:230    .text:00000000000000e0 .LBB37
     /tmp/cc9v6isO.s:241    .text:00000000000000f0 .LBE37
     /tmp/cc9v6isO.s:2209   .debug_loc:0000000000000117 .LLST9
GAS LISTING /tmp/cc9v6isO.s 			page 16


     /tmp/cc9v6isO.s:2217   .debug_loc:000000000000013b .LLST10
     /tmp/cc9v6isO.s:2233   .debug_loc:0000000000000185 .LLST11
     /tmp/cc9v6isO.s:229    .text:00000000000000e0 .LVL14
     /tmp/cc9v6isO.s:254    .text:0000000000000104 .LBB39
     /tmp/cc9v6isO.s:265    .text:0000000000000110 .LBE39
     /tmp/cc9v6isO.s:2240   .debug_loc:00000000000001a8 .LLST12
     /tmp/cc9v6isO.s:252    .text:0000000000000104 .LVL20
     /tmp/cc9v6isO.s:269    .text:000000000000011c .LVL22
     /tmp/cc9v6isO.s:274    .text:000000000000012c .LVL23
     /tmp/cc9v6isO.s:2492   .debug_str:00000000000004ab .LASF92
     /tmp/cc9v6isO.s:117    .text:0000000000000078 .LFB33
     /tmp/cc9v6isO.s:145    .text:00000000000000a0 .LFE33
     /tmp/cc9v6isO.s:2249   .debug_loc:00000000000001cd .LLST3
     /tmp/cc9v6isO.s:134    .text:0000000000000090 .LVL7
     /tmp/cc9v6isO.s:2436   .debug_str:000000000000033c .LASF93
     /tmp/cc9v6isO.s:75     .text:0000000000000050 .LFB32
     /tmp/cc9v6isO.s:103    .text:0000000000000078 .LFE32
     /tmp/cc9v6isO.s:2263   .debug_loc:0000000000000206 .LLST2
     /tmp/cc9v6isO.s:92     .text:0000000000000068 .LVL5
     /tmp/cc9v6isO.s:2470   .debug_str:0000000000000423 .LASF96
     /tmp/cc9v6isO.s:43     .text:0000000000000028 .LFB31
     /tmp/cc9v6isO.s:69     .text:0000000000000050 .LFE31
     /tmp/cc9v6isO.s:2440   .debug_str:000000000000034d .LASF97
     /tmp/cc9v6isO.s:2277   .debug_loc:000000000000023f .LLST1
     /tmp/cc9v6isO.s:58     .text:0000000000000040 .LVL3
     /tmp/cc9v6isO.s:2418   .debug_str:00000000000002d8 .LASF98
     /tmp/cc9v6isO.s:10     .text:0000000000000000 .LFB30
     /tmp/cc9v6isO.s:37     .text:0000000000000028 .LFE30
     /tmp/cc9v6isO.s:2291   .debug_loc:0000000000000278 .LLST0
     /tmp/cc9v6isO.s:26     .text:0000000000000018 .LVL1
     /tmp/cc9v6isO.s:2542   .debug_str:00000000000006d6 .LASF99
     /tmp/cc9v6isO.s:2466   .debug_str:0000000000000405 .LASF100
     /tmp/cc9v6isO.s:2518   .debug_str:0000000000000632 .LASF101
     /tmp/cc9v6isO.s:2474   .debug_str:0000000000000438 .LASF103
     /tmp/cc9v6isO.s:2520   .debug_str:0000000000000640 .LASF102
     /tmp/cc9v6isO.s:2526   .debug_str:000000000000066c .LASF104
     /tmp/cc9v6isO.s:2536   .debug_str:00000000000006b8 .LASF105
     /tmp/cc9v6isO.s:2476   .debug_str:0000000000000440 .LASF106
     /tmp/cc9v6isO.s:2354   .debug_str:00000000000000d1 .LASF107
     /tmp/cc9v6isO.s:2524   .debug_str:0000000000000662 .LASF108
     /tmp/cc9v6isO.s:175    .text:00000000000000b0 .LVL8
     /tmp/cc9v6isO.s:186    .text:00000000000000b8 .LVL9
     /tmp/cc9v6isO.s:202    .text:00000000000000c4 .LVL11
     /tmp/cc9v6isO.s:214    .text:00000000000000cc .LVL12
     /tmp/cc9v6isO.s:223    .text:00000000000000d4 .LVL13
     /tmp/cc9v6isO.s:234    .text:00000000000000e4 .LVL15
     /tmp/cc9v6isO.s:237    .text:00000000000000ec .LVL16
     /tmp/cc9v6isO.s:244    .text:00000000000000f4 .LVL18
     /tmp/cc9v6isO.s:239    .text:00000000000000f0 .LVL17
     /tmp/cc9v6isO.s:250    .text:00000000000000fc .LVL19
     /tmp/cc9v6isO.s:283    .text:0000000000000138 .LVL24
     /tmp/cc9v6isO.s:286    .text:000000000000013c .LVL25
     /tmp/cc9v6isO.s:263    .text:0000000000000110 .LVL21
     /tmp/cc9v6isO.s:122    .text:0000000000000078 .LVL6
     /tmp/cc9v6isO.s:80     .text:0000000000000050 .LVL4
     /tmp/cc9v6isO.s:46     .text:0000000000000028 .LVL2
     /tmp/cc9v6isO.s:14     .text:0000000000000000 .LVL0
GAS LISTING /tmp/cc9v6isO.s 			page 17


     /tmp/cc9v6isO.s:296    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/cc9v6isO.s:106    .gcc_except_table:0000000000000000 .LLSDA32
     /tmp/cc9v6isO.s:147    .gcc_except_table:0000000000000004 .LLSDA33

UNDEFINED SYMBOLS
_Z9mem_allocm
_Z8mem_freePv
__gxx_personality_v0
interruptHandler
_Z7printlnPKc
_Z12printIntegerm
