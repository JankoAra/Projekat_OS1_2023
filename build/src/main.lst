GAS LISTING /tmp/ccM8aqNX.s 			page 1


   1              		.file	"main.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_Z4idlePv
   9              	_Z4idlePv:
  10              	.LFB52:
  11              		.file 1 "src/main.cpp"
   1:src/main.cpp  **** #include "../lib/hw.h"
   2:src/main.cpp  **** #include "../h/Riscv.hpp"
   3:src/main.cpp  **** #include "../h/KMemory.hpp"
   4:src/main.cpp  **** #include "../h/KConsole.hpp"
   5:src/main.cpp  **** #include "../h/TCB.hpp"
   6:src/main.cpp  **** #include "../h/syscall_c.hpp"
   7:src/main.cpp  **** #include "../h/syscall_cpp.hpp"
   8:src/main.cpp  **** 
   9:src/main.cpp  **** extern "C" void interruptHandler();
  10:src/main.cpp  **** 
  11:src/main.cpp  **** void userMain();
  12:src/main.cpp  **** 
  13:src/main.cpp  **** void idle(void*) {
  12              		.loc 1 13 18
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23341100 		sd	ra,8(sp)
  17 0008 23308100 		sd	s0,0(sp)
  18              		.cfi_offset 1, -8
  19              		.cfi_offset 8, -16
  20 000c 13040101 		addi	s0,sp,16
  21              		.cfi_def_cfa 8, 0
  22              	.L2:
  14:src/main.cpp  ****     while (1) { thread_dispatch(); }
  23              		.loc 1 14 5 discriminator 1
  24              		.loc 1 14 17 discriminator 1
  25              		.loc 1 14 32 is_stmt 0 discriminator 1
  26 0010 97000000 		call	_Z15thread_dispatchv@plt
  26      E7800000 
  27              	.LVL0:
  28              		.loc 1 14 5 is_stmt 1 discriminator 1
  29 0018 6FF09FFF 		j	.L2
  30              		.cfi_endproc
  31              	.LFE52:
  33              		.align	2
  34              		.globl	_Z22kernelConsumerFunctionPv
  36              	_Z22kernelConsumerFunctionPv:
  37              	.LFB53:
  15:src/main.cpp  **** }
  16:src/main.cpp  **** 
  17:src/main.cpp  **** //salje na izlaz karakter iz izlaznog bafera KConsole
  18:src/main.cpp  **** void kernelConsumerFunction(void*) {
  38              		.loc 1 18 36
  39              		.cfi_startproc
  40 001c 130101FF 		addi	sp,sp,-16
  41              		.cfi_def_cfa_offset 16
GAS LISTING /tmp/ccM8aqNX.s 			page 2


  42 0020 23341100 		sd	ra,8(sp)
  43 0024 23308100 		sd	s0,0(sp)
  44              		.cfi_offset 1, -8
  45              		.cfi_offset 8, -16
  46 0028 13040101 		addi	s0,sp,16
  47              		.cfi_def_cfa 8, 0
  48 002c 6F008002 		j	.L6
  49              	.LVL1:
  50              	.L8:
  51              	.LBB19:
  19:src/main.cpp  ****     while (1) {
  20:src/main.cpp  ****         char c = KConsole::getFromOutput();
  21:src/main.cpp  ****         while (!(KConsole::getSRvalue() & CONSOLE_TX_STATUS_BIT)) {}
  22:src/main.cpp  ****         KConsole::setDRvalue(c);
  52              		.loc 1 22 9
  53              	.LBB20:
  54              	.LBB21:
  55              		.file 2 "src/../h/KConsole.hpp"
   1:src/../h/KConsole.hpp **** //
   2:src/../h/KConsole.hpp **** // Created by os on 6/7/23.
   3:src/../h/KConsole.hpp **** //
   4:src/../h/KConsole.hpp **** 
   5:src/../h/KConsole.hpp **** #ifndef PROJEKAT2023_KCONSOLE_HPP
   6:src/../h/KConsole.hpp **** #define PROJEKAT2023_KCONSOLE_HPP
   7:src/../h/KConsole.hpp **** 
   8:src/../h/KConsole.hpp **** #include "../lib/hw.h"
   9:src/../h/KConsole.hpp **** 
  10:src/../h/KConsole.hpp **** class KSem;
  11:src/../h/KConsole.hpp **** 
  12:src/../h/KConsole.hpp **** typedef KSem* sem_t;
  13:src/../h/KConsole.hpp **** 
  14:src/../h/KConsole.hpp **** class KConsole {
  15:src/../h/KConsole.hpp **** public:
  16:src/../h/KConsole.hpp ****     static void initKConsole();
  17:src/../h/KConsole.hpp **** 
  18:src/../h/KConsole.hpp ****     //stavlja karakter u izlazni bafer konzole
  19:src/../h/KConsole.hpp ****     static void kputc(char c);
  20:src/../h/KConsole.hpp **** 
  21:src/../h/KConsole.hpp ****     //uzima karakter iz ulaznog bafera konzole
  22:src/../h/KConsole.hpp ****     static char kgetc();
  23:src/../h/KConsole.hpp **** 
  24:src/../h/KConsole.hpp ****     //vraca karakter iz izlaznog bafera; ako je bafer prazan, blokira se dok se ne napuni
  25:src/../h/KConsole.hpp ****     static char getFromOutput();
  26:src/../h/KConsole.hpp **** 
  27:src/../h/KConsole.hpp ****     //stavlja karakter u ulazni bafer; ako je bafer pun, ignorise se
  28:src/../h/KConsole.hpp ****     static void placeInInput(char c);
  29:src/../h/KConsole.hpp **** 
  30:src/../h/KConsole.hpp ****     //ispis svih preostalih karaktera u izlaznom baferu
  31:src/../h/KConsole.hpp ****     static void flush() {
  32:src/../h/KConsole.hpp ****         __asm__ volatile("li a0, 0x43");
  33:src/../h/KConsole.hpp ****         __asm__ volatile("ecall");
  34:src/../h/KConsole.hpp ****     }
  35:src/../h/KConsole.hpp **** 
  36:src/../h/KConsole.hpp ****     static uint8 getSRvalue() { return *sr; }
  37:src/../h/KConsole.hpp **** 
  38:src/../h/KConsole.hpp ****     static uint8 getDRvalue() { return *dr; }
  39:src/../h/KConsole.hpp **** 
GAS LISTING /tmp/ccM8aqNX.s 			page 3


  40:src/../h/KConsole.hpp ****     static void setDRvalue(char c) { *dr = c; }
  56              		.loc 2 40 38
  57 0030 97070000 		la	a5,_ZN8KConsole2drE
  57      83B70700 
  58 0038 83B70700 		ld	a5,0(a5)
  59              		.loc 2 40 42 is_stmt 0
  60 003c 2380A700 		sb	a0,0(a5)
  61              	.LVL2:
  62              	.LBE21:
  63              	.LBE20:
  23:src/main.cpp  ****         sem_signal(KConsole::getOutputBufferHasSpace());
  64              		.loc 1 23 9 is_stmt 1
  65              	.LBB22:
  66              	.LBB23:
  41:src/../h/KConsole.hpp **** 
  42:src/../h/KConsole.hpp ****     static sem_t getOutputBufferHasSpace() { return outputBufferHasSpace; }
  67              		.loc 2 42 46
  68              	.LBE23:
  69              	.LBE22:
  70              		.loc 1 23 19 is_stmt 0
  71 0040 97070000 		la	a5,_ZN8KConsole20outputBufferHasSpaceE
  71      83B70700 
  72 0048 03B50700 		ld	a0,0(a5)
  73              	.LVL3:
  74 004c 97000000 		call	_Z10sem_signalP4KSem@plt
  74      E7800000 
  75              	.LVL4:
  76              	.LBE19:
  19:src/main.cpp  ****         char c = KConsole::getFromOutput();
  77              		.loc 1 19 5 is_stmt 1
  78              	.L6:
  19:src/main.cpp  ****         char c = KConsole::getFromOutput();
  79              		.loc 1 19 5
  80              	.LBB26:
  20:src/main.cpp  ****         while (!(KConsole::getSRvalue() & CONSOLE_TX_STATUS_BIT)) {}
  81              		.loc 1 20 9
  20:src/main.cpp  ****         while (!(KConsole::getSRvalue() & CONSOLE_TX_STATUS_BIT)) {}
  82              		.loc 1 20 41 is_stmt 0
  83 0054 97000000 		call	_ZN8KConsole13getFromOutputEv@plt
  83      E7800000 
  84              	.LVL5:
  85              	.L5:
  21:src/main.cpp  ****         KConsole::setDRvalue(c);
  86              		.loc 1 21 9 is_stmt 1
  21:src/main.cpp  ****         KConsole::setDRvalue(c);
  87              		.loc 1 21 16
  88              	.LBB24:
  89              	.LBB25:
  36:src/../h/KConsole.hpp **** 
  90              		.loc 2 36 33
  36:src/../h/KConsole.hpp **** 
  91              		.loc 2 36 40 is_stmt 0
  92 005c 97070000 		la	a5,_ZN8KConsole2srE
  92      83B70700 
  93 0064 83B70700 		ld	a5,0(a5)
  36:src/../h/KConsole.hpp **** 
  94              		.loc 2 36 41
GAS LISTING /tmp/ccM8aqNX.s 			page 4


  95 0068 83C70700 		lbu	a5,0(a5)
  96              	.LBE25:
  97              	.LBE24:
  21:src/main.cpp  ****         KConsole::setDRvalue(c);
  98              		.loc 1 21 16
  99 006c 93F70702 		andi	a5,a5,32
 100 0070 E38607FE 		beqz	a5,.L5
 101 0074 6FF0DFFB 		j	.L8
 102              	.LBE26:
 103              		.cfi_endproc
 104              	.LFE53:
 106              		.align	2
 107              		.globl	_Z5main1v
 109              	_Z5main1v:
 110              	.LFB54:
  24:src/main.cpp  ****     }
  25:src/main.cpp  **** }
  26:src/main.cpp  **** 
  27:src/main.cpp  **** int main1() {
 111              		.loc 1 27 13 is_stmt 1
 112              		.cfi_startproc
 113 0078 130101FC 		addi	sp,sp,-64
 114              		.cfi_def_cfa_offset 64
 115 007c 233C1102 		sd	ra,56(sp)
 116 0080 23388102 		sd	s0,48(sp)
 117 0084 23349102 		sd	s1,40(sp)
 118              		.cfi_offset 1, -8
 119              		.cfi_offset 8, -16
 120              		.cfi_offset 9, -24
 121 0088 13040104 		addi	s0,sp,64
 122              		.cfi_def_cfa 8, 0
  28:src/main.cpp  ****     //postavljanje adrese prekidne rutine u stvec
  29:src/main.cpp  ****     __asm__ volatile("csrw stvec, %[handler]": :[handler] "r"(&interruptHandler));
 123              		.loc 1 29 5
 124              		.loc 1 29 82 is_stmt 0
 125 008c 97070000 		la	a5,interruptHandler
 125      83B70700 
 126              	#APP
 127              	# 29 "src/main.cpp" 1
  30              	
  31:src/main.cpp  ****     //inicijalizacija alokatora memorije
  32:src/main.cpp  ****     KMemory::initializeMemory();
 128              		csrw stvec, a5
 129              	# 0 "" 2
 130              		.loc 1 32 5 is_stmt 1
 131              		.loc 1 32 30 is_stmt 0
 132              	#NO_APP
 133 0098 97000000 		call	_ZN7KMemory16initializeMemoryEv@plt
 133      E7800000 
 134              	.LVL6:
  33:src/main.cpp  **** 
  34:src/main.cpp  ****     //inicijalizacija komunikacije sa konzolom
  35:src/main.cpp  ****     KConsole::initKConsole();
 135              		.loc 1 35 5 is_stmt 1
 136              		.loc 1 35 27 is_stmt 0
 137 00a0 97000000 		call	_ZN8KConsole12initKConsoleEv@plt
 137      E7800000 
GAS LISTING /tmp/ccM8aqNX.s 			page 5


 138              	.LVL7:
  36:src/main.cpp  **** 
  37:src/main.cpp  ****     //pravljenje niti
  38:src/main.cpp  ****     thread_t mainHandle;
 139              		.loc 1 38 5 is_stmt 1
  39:src/main.cpp  ****     thread_t userHandle;
 140              		.loc 1 39 5
  40:src/main.cpp  ****     thread_t idleHandle;
 141              		.loc 1 40 5
  41:src/main.cpp  ****     thread_t consoleOutputHandle;
 142              		.loc 1 41 5
  42:src/main.cpp  ****     thread_create(&mainHandle, (TCB::Body)main, nullptr);
 143              		.loc 1 42 5
 144              		.loc 1 42 18 is_stmt 0
 145 00a8 13060000 		li	a2,0
 146 00ac 97050000 		la	a1,main
 146      83B50500 
 147 00b4 130584FD 		addi	a0,s0,-40
 148 00b8 97000000 		call	_Z13thread_createPP3TCBPFvPvES2_@plt
 148      E7800000 
 149              	.LVL8:
  43:src/main.cpp  ****     TCB::setRunning(mainHandle);
 150              		.loc 1 43 5 is_stmt 1
 151              		.loc 1 43 20 is_stmt 0
 152 00c0 833784FD 		ld	a5,-40(s0)
 153              	.LVL9:
 154              	.LBB27:
 155              	.LBB28:
 156              		.file 3 "src/../h/TCB.hpp"
   1:src/../h/TCB.hpp **** //
   2:src/../h/TCB.hpp **** // Created by os on 5/23/23.
   3:src/../h/TCB.hpp **** //
   4:src/../h/TCB.hpp **** 
   5:src/../h/TCB.hpp **** #ifndef PROJEKAT2023_TCB_HPP
   6:src/../h/TCB.hpp **** #define PROJEKAT2023_TCB_HPP
   7:src/../h/TCB.hpp **** 
   8:src/../h/TCB.hpp **** #include "../lib/hw.h"
   9:src/../h/TCB.hpp **** #include "../h/ThreadQueue.hpp"
  10:src/../h/TCB.hpp **** 
  11:src/../h/TCB.hpp **** int main();
  12:src/../h/TCB.hpp **** 
  13:src/../h/TCB.hpp **** class TCB {
  14:src/../h/TCB.hpp **** public:
  15:src/../h/TCB.hpp ****     friend class Scheduler;
  16:src/../h/TCB.hpp **** 
  17:src/../h/TCB.hpp ****     using Body = void (*)(void*);
  18:src/../h/TCB.hpp **** 
  19:src/../h/TCB.hpp ****     enum ThreadStatus {
  20:src/../h/TCB.hpp ****         CREATED, ACTIVE, BLOCKED, JOINING, SLEEPING, FINISHED
  21:src/../h/TCB.hpp ****     };
  22:src/../h/TCB.hpp **** 
  23:src/../h/TCB.hpp ****     static TCB* createThread(Body function, void* args, uint64* stack);
  24:src/../h/TCB.hpp **** 
  25:src/../h/TCB.hpp ****     void setStatus(ThreadStatus stat) { this->status = stat; }
  26:src/../h/TCB.hpp **** 
  27:src/../h/TCB.hpp ****     ThreadStatus getStatus() { return this->status; }
  28:src/../h/TCB.hpp **** 
GAS LISTING /tmp/ccM8aqNX.s 			page 6


  29:src/../h/TCB.hpp ****     uint64 getTimeSlice() { return timeSlice; }
  30:src/../h/TCB.hpp **** 
  31:src/../h/TCB.hpp ****     Body getBody() { return threadFunction; }
  32:src/../h/TCB.hpp **** 
  33:src/../h/TCB.hpp ****     ThreadQueue* getListOfJoiningThreads(){return &waitingToJoin;}
  34:src/../h/TCB.hpp **** 
  35:src/../h/TCB.hpp ****     static TCB* getRunning() { return running; }
  36:src/../h/TCB.hpp **** 
  37:src/../h/TCB.hpp ****     static void setRunning(TCB* newRunning) { running = newRunning; }
 157              		.loc 3 37 47 is_stmt 1
 158              		.loc 3 37 55 is_stmt 0
 159 00c4 17070000 		la	a4,_ZN3TCB7runningE
 159      03370700 
 160 00cc 2330F700 		sd	a5,0(a4)
 161              	.LVL10:
 162              	.LBE28:
 163              	.LBE27:
  44:src/main.cpp  ****     mainHandle->setStatus(TCB::ACTIVE);
 164              		.loc 1 44 5 is_stmt 1
 165              	.LBB29:
 166              	.LBB30:
  25:src/../h/TCB.hpp **** 
 167              		.loc 3 25 41
  25:src/../h/TCB.hpp **** 
 168              		.loc 3 25 54 is_stmt 0
 169 00d0 13071000 		li	a4,1
 170 00d4 23ACE704 		sw	a4,88(a5)
 171              	.LVL11:
 172              	.LBE30:
 173              	.LBE29:
  45:src/main.cpp  ****     thread_create(&userHandle, (TCB::Body)userMain, nullptr);
 174              		.loc 1 45 5 is_stmt 1
 175              		.loc 1 45 18 is_stmt 0
 176 00d8 13060000 		li	a2,0
 177 00dc 97050000 		la	a1,_Z8userMainv
 177      83B50500 
 178 00e4 130504FD 		addi	a0,s0,-48
 179 00e8 97000000 		call	_Z13thread_createPP3TCBPFvPvES2_@plt
 179      E7800000 
 180              	.LVL12:
  46:src/main.cpp  ****     thread_create(&consoleOutputHandle, kernelConsumerFunction, nullptr);
 181              		.loc 1 46 5 is_stmt 1
 182              		.loc 1 46 18 is_stmt 0
 183 00f0 13060000 		li	a2,0
 184 00f4 97050000 		lla	a1,_Z22kernelConsumerFunctionPv
 184      93850500 
 185 00fc 130504FC 		addi	a0,s0,-64
 186 0100 97000000 		call	_Z13thread_createPP3TCBPFvPvES2_@plt
 186      E7800000 
 187              	.LVL13:
  47:src/main.cpp  ****     thread_create(&idleHandle, idle, nullptr);
 188              		.loc 1 47 5 is_stmt 1
 189              		.loc 1 47 18 is_stmt 0
 190 0108 13060000 		li	a2,0
 191 010c 97050000 		lla	a1,_Z4idlePv
 191      93850500 
 192 0114 130584FC 		addi	a0,s0,-56
GAS LISTING /tmp/ccM8aqNX.s 			page 7


 193 0118 97000000 		call	_Z13thread_createPP3TCBPFvPvES2_@plt
 193      E7800000 
 194              	.LVL14:
  48:src/main.cpp  **** 
  49:src/main.cpp  ****     //omogucavanje prekida
  50:src/main.cpp  ****     Riscv::ms_sstatus(Riscv::SSTATUS_SIE);
 195              		.loc 1 50 5 is_stmt 1
 196              	.LBB31:
 197              	.LBB32:
 198              		.file 4 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 5/17/23.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJEKAT2023_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJEKAT2023_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** class Riscv {
  11:src/../h/Riscv.hpp **** public:
  12:src/../h/Riscv.hpp **** 
  13:src/../h/Riscv.hpp **** 	static void returnFromInterrupt();
  14:src/../h/Riscv.hpp **** 
  15:src/../h/Riscv.hpp **** 	//read scause
  16:src/../h/Riscv.hpp **** 	static uint64 r_scause();
  17:src/../h/Riscv.hpp **** 
  18:src/../h/Riscv.hpp **** 	//write scause
  19:src/../h/Riscv.hpp **** 	static void w_scause(uint64 scause);
  20:src/../h/Riscv.hpp **** 
  21:src/../h/Riscv.hpp **** 	//read sepc
  22:src/../h/Riscv.hpp **** 	static uint64 r_sepc();
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp **** 	//write sepc
  25:src/../h/Riscv.hpp **** 	static void w_sepc(uint64 sepc);
  26:src/../h/Riscv.hpp **** 
  27:src/../h/Riscv.hpp **** 	//read stvec
  28:src/../h/Riscv.hpp **** 	static uint64 r_stvec();
  29:src/../h/Riscv.hpp **** 
  30:src/../h/Riscv.hpp **** 	//write stvec
  31:src/../h/Riscv.hpp **** 	static void w_stvec(uint64 stvec);
  32:src/../h/Riscv.hpp **** 
  33:src/../h/Riscv.hpp **** 	enum BitMaskSip {
  34:src/../h/Riscv.hpp **** 		//postoji zahtev za softverski prekid
  35:src/../h/Riscv.hpp **** 		SIP_SSIP = (1 << 1),
  36:src/../h/Riscv.hpp **** 		//postoji prekid od tajmera
  37:src/../h/Riscv.hpp **** 		SIP_STIP = (1 << 5),
  38:src/../h/Riscv.hpp **** 		//postoji zahtev za spoljasnji hardverski prekid
  39:src/../h/Riscv.hpp **** 		SIP_SEIP = (1 << 9)
  40:src/../h/Riscv.hpp **** 	};
  41:src/../h/Riscv.hpp **** 
  42:src/../h/Riscv.hpp **** 	//mask set sip
  43:src/../h/Riscv.hpp **** 	static void ms_sip(uint64 mask);
  44:src/../h/Riscv.hpp **** 
  45:src/../h/Riscv.hpp **** 	//mask clear sip
  46:src/../h/Riscv.hpp **** 	static void mc_sip(uint64 mask);
  47:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/ccM8aqNX.s 			page 8


  48:src/../h/Riscv.hpp **** 	//read sip
  49:src/../h/Riscv.hpp **** 	static uint64 r_sip();
  50:src/../h/Riscv.hpp **** 
  51:src/../h/Riscv.hpp **** 	//write sip
  52:src/../h/Riscv.hpp **** 	static void w_sip(uint64 sip);
  53:src/../h/Riscv.hpp **** 
  54:src/../h/Riscv.hpp **** 	//kada se pozove sret, SIE dobija vrednost SPIE, SPIE se postavlja na 1,
  55:src/../h/Riscv.hpp **** 	//rezim se postavlja na osnovu SPP bita, SPP se postavlja na 0
  56:src/../h/Riscv.hpp **** 	enum BitMaskSstatus {
  57:src/../h/Riscv.hpp **** 		//1 - dozvoljeni prekidi; 0- nedozvoljeni prekidi; igonrise se u korisnickom rezimu
  58:src/../h/Riscv.hpp **** 		SSTATUS_SIE = (1 << 1),
  59:src/../h/Riscv.hpp **** 		//prethodna vrednost bita SIE
  60:src/../h/Riscv.hpp **** 		SSTATUS_SPIE = (1 << 5),
  61:src/../h/Riscv.hpp **** 		//iz kog rezima se desio skok; 0 - iz korisnickog; 1 - iz sistemskog
  62:src/../h/Riscv.hpp **** 		SSTATUS_SPP = (1 << 8)
  63:src/../h/Riscv.hpp **** 	};
  64:src/../h/Riscv.hpp **** 
  65:src/../h/Riscv.hpp **** 	//mask set sstatus
  66:src/../h/Riscv.hpp **** 	static void ms_sstatus(uint64 mask);
  67:src/../h/Riscv.hpp **** 
  68:src/../h/Riscv.hpp **** 	//mask clear sstatus
  69:src/../h/Riscv.hpp **** 	static void mc_sstatus(uint64 mask);
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp **** 	//read sstatus
  72:src/../h/Riscv.hpp **** 	static uint64 r_sstatus();
  73:src/../h/Riscv.hpp **** 
  74:src/../h/Riscv.hpp **** 	//write sstatus
  75:src/../h/Riscv.hpp **** 	static void w_sstatus(uint64 sstatus);
  76:src/../h/Riscv.hpp **** 
  77:src/../h/Riscv.hpp **** };
  78:src/../h/Riscv.hpp **** 
  79:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause() {
  80:src/../h/Riscv.hpp **** 	uint64 volatile scause;
  81:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[scause], scause": [scause] "=r"(scause));
  82:src/../h/Riscv.hpp **** 	return scause;
  83:src/../h/Riscv.hpp **** }
  84:src/../h/Riscv.hpp **** 
  85:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
  86:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw scause, %[scause]": :[scause] "r"(scause));
  87:src/../h/Riscv.hpp **** }
  88:src/../h/Riscv.hpp **** 
  89:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc() {
  90:src/../h/Riscv.hpp **** 	uint64 volatile sepc;
  91:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[sepc], sepc": [sepc] "=r"(sepc));
  92:src/../h/Riscv.hpp **** 	return sepc;
  93:src/../h/Riscv.hpp **** }
  94:src/../h/Riscv.hpp **** 
  95:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
  96:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw sepc, %[sepc]": :[sepc] "r"(sepc));
  97:src/../h/Riscv.hpp **** }
  98:src/../h/Riscv.hpp **** 
  99:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec() {
 100:src/../h/Riscv.hpp **** 	uint64 volatile stvec;
 101:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[stvec], stvec": [stvec] "=r"(stvec));
 102:src/../h/Riscv.hpp **** 	return stvec;
 103:src/../h/Riscv.hpp **** }
 104:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/ccM8aqNX.s 			page 9


 105:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 106:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw stvec, %[stvec]": :[stvec] "r"(stvec));
 107:src/../h/Riscv.hpp **** }
 108:src/../h/Riscv.hpp **** 
 109:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 110:src/../h/Riscv.hpp **** 	__asm__ volatile("csrs sip, %[mask]": :[mask] "r"(mask));
 111:src/../h/Riscv.hpp **** }
 112:src/../h/Riscv.hpp **** 
 113:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 114:src/../h/Riscv.hpp **** 	__asm__ volatile("csrc sip, %[mask]": :[mask] "r"(mask));
 115:src/../h/Riscv.hpp **** }
 116:src/../h/Riscv.hpp **** 
 117:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip() {
 118:src/../h/Riscv.hpp **** 	uint64 volatile sip;
 119:src/../h/Riscv.hpp **** 	__asm__ volatile("csrr %[sip], sip": [sip] "=r"(sip));
 120:src/../h/Riscv.hpp **** 	return sip;
 121:src/../h/Riscv.hpp **** }
 122:src/../h/Riscv.hpp **** 
 123:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip) {
 124:src/../h/Riscv.hpp **** 	__asm__ volatile("csrw sip, %[sip]": :[sip] "r"(sip));
 125:src/../h/Riscv.hpp **** }
 126:src/../h/Riscv.hpp **** 
 127:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
 128:src/../h/Riscv.hpp **** 	__asm__ volatile("csrs sstatus, %[mask]": :[mask] "r"(mask));
 199              		.loc 4 128 2
 200              		.loc 4 128 62 is_stmt 0
 201 0120 93042000 		li	s1,2
 202              	#APP
 203              	# 128 "src/../h/Riscv.hpp" 1
 129              	}
 204              		csrs sstatus, s1
 205              	# 0 "" 2
 206              	.LVL15:
 207              	#NO_APP
 208              	.LBE32:
 209              	.LBE31:
  51:src/main.cpp  **** 
  52:src/main.cpp  ****     //cekanje da se userMain zavrsi
  53:src/main.cpp  ****     thread_join(userHandle);
 210              		.loc 1 53 5 is_stmt 1
 211              		.loc 1 53 16 is_stmt 0
 212 0128 033504FD 		ld	a0,-48(s0)
 213 012c 97000000 		call	_Z11thread_joinP3TCB@plt
 213      E7800000 
 214              	.LVL16:
  54:src/main.cpp  **** 
  55:src/main.cpp  ****     //flush output bafera za konzolu
  56:src/main.cpp  ****     KConsole::flush();
 215              		.loc 1 56 5 is_stmt 1
 216              	.LBB33:
 217              	.LBB34:
  32:src/../h/KConsole.hpp ****         __asm__ volatile("ecall");
 218              		.loc 2 32 9
  32:src/../h/KConsole.hpp ****         __asm__ volatile("ecall");
 219              		.loc 2 32 40 is_stmt 0
 220              	#APP
 221              	# 32 "src/../h/KConsole.hpp" 1
GAS LISTING /tmp/ccM8aqNX.s 			page 10


  33:src/../h/KConsole.hpp ****     }
 222              		li a0, 0x43
 223              	# 0 "" 2
 224              		.loc 2 33 9 is_stmt 1
  33:src/../h/KConsole.hpp ****     }
 225              		.loc 2 33 34 is_stmt 0
 226              	# 33 "src/../h/KConsole.hpp" 1
 227              		ecall
 228              	# 0 "" 2
 229              	#NO_APP
 230              	.LBE34:
 231              	.LBE33:
  57:src/main.cpp  **** 
  58:src/main.cpp  ****     //maskiranje svih prekida
  59:src/main.cpp  ****     Riscv::mc_sstatus(Riscv::SSTATUS_SIE);
 232              		.loc 1 59 5 is_stmt 1
 233              	.LVL17:
 234              	.LBB35:
 235              	.LBB36:
 130:src/../h/Riscv.hpp **** 
 131:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask) {
 132:src/../h/Riscv.hpp **** 	__asm__ volatile("csrc sstatus, %[mask]": :[mask] "r"(mask));
 236              		.loc 4 132 2
 237              		.loc 4 132 62 is_stmt 0
 238              	#APP
 239              	# 132 "src/../h/Riscv.hpp" 1
 133              	}
 240              		csrc sstatus, s1
 241              	# 0 "" 2
 242              	.LVL18:
 243              	#NO_APP
 244              	.LBE36:
 245              	.LBE35:
  60:src/main.cpp  **** 
  61:src/main.cpp  ****     return 0;
 246              		.loc 1 61 5 is_stmt 1
  62:src/main.cpp  **** }...
 247              		.loc 1 62 1 is_stmt 0
 248 0140 13050000 		li	a0,0
 249 0144 83308103 		ld	ra,56(sp)
 250              		.cfi_restore 1
 251 0148 03340103 		ld	s0,48(sp)
 252              		.cfi_restore 8
 253              		.cfi_def_cfa 2, 64
 254 014c 83348102 		ld	s1,40(sp)
 255              		.cfi_restore 9
 256 0150 13010104 		addi	sp,sp,64
 257              		.cfi_def_cfa_offset 0
 258 0154 67800000 		jr	ra
 259              		.cfi_endproc
 260              	.LFE54:
 262              	.Letext0:
 263              		.file 5 "src/../lib/hw.h"
 264              		.file 6 "src/../h/KMemory.hpp"
 265              		.file 7 "src/../h/../h/../h/syscall_c.hpp"
 266              		.file 8 "src/../h/../h/ThreadQueue.hpp"
GAS LISTING /tmp/ccM8aqNX.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/ccM8aqNX.s:9      .text:0000000000000000 _Z4idlePv
     /tmp/ccM8aqNX.s:13     .text:0000000000000000 .L0 
     /tmp/ccM8aqNX.s:14     .text:0000000000000000 .L0 
     /tmp/ccM8aqNX.s:15     .text:0000000000000004 .L0 
     /tmp/ccM8aqNX.s:18     .text:000000000000000c .L0 
     /tmp/ccM8aqNX.s:19     .text:000000000000000c .L0 
     /tmp/ccM8aqNX.s:21     .text:0000000000000010 .L0 
     /tmp/ccM8aqNX.s:24     .text:0000000000000010 .L0 
     /tmp/ccM8aqNX.s:25     .text:0000000000000010 .L0 
     /tmp/ccM8aqNX.s:26     .text:0000000000000010 .L0 
     /tmp/ccM8aqNX.s:29     .text:0000000000000018 .L0 
     /tmp/ccM8aqNX.s:30     .text:000000000000001c .L0 
     /tmp/ccM8aqNX.s:36     .text:000000000000001c _Z22kernelConsumerFunctionPv
     /tmp/ccM8aqNX.s:39     .text:000000000000001c .L0 
     /tmp/ccM8aqNX.s:40     .text:000000000000001c .L0 
     /tmp/ccM8aqNX.s:41     .text:0000000000000020 .L0 
     /tmp/ccM8aqNX.s:44     .text:0000000000000028 .L0 
     /tmp/ccM8aqNX.s:45     .text:0000000000000028 .L0 
     /tmp/ccM8aqNX.s:47     .text:000000000000002c .L0 
     /tmp/ccM8aqNX.s:56     .text:0000000000000030 .L0 
     /tmp/ccM8aqNX.s:57     .text:0000000000000030 .L0 
     /tmp/ccM8aqNX.s:60     .text:000000000000003c .L0 
     /tmp/ccM8aqNX.s:67     .text:0000000000000040 .L0 
     /tmp/ccM8aqNX.s:70     .text:0000000000000040 .L0 
     /tmp/ccM8aqNX.s:71     .text:0000000000000040 .L0 
     /tmp/ccM8aqNX.s:79     .text:0000000000000054 .L0 
     /tmp/ccM8aqNX.s:81     .text:0000000000000054 .L0 
     /tmp/ccM8aqNX.s:82     .text:0000000000000054 .L0 
     /tmp/ccM8aqNX.s:83     .text:0000000000000054 .L0 
     /tmp/ccM8aqNX.s:87     .text:000000000000005c .L0 
     /tmp/ccM8aqNX.s:90     .text:000000000000005c .L0 
     /tmp/ccM8aqNX.s:91     .text:000000000000005c .L0 
     /tmp/ccM8aqNX.s:92     .text:000000000000005c .L0 
     /tmp/ccM8aqNX.s:95     .text:0000000000000068 .L0 
     /tmp/ccM8aqNX.s:99     .text:000000000000006c .L0 
     /tmp/ccM8aqNX.s:103    .text:0000000000000078 .L0 
     /tmp/ccM8aqNX.s:109    .text:0000000000000078 _Z5main1v
     /tmp/ccM8aqNX.s:112    .text:0000000000000078 .L0 
     /tmp/ccM8aqNX.s:113    .text:0000000000000078 .L0 
     /tmp/ccM8aqNX.s:114    .text:000000000000007c .L0 
     /tmp/ccM8aqNX.s:118    .text:0000000000000088 .L0 
     /tmp/ccM8aqNX.s:119    .text:0000000000000088 .L0 
     /tmp/ccM8aqNX.s:120    .text:0000000000000088 .L0 
     /tmp/ccM8aqNX.s:122    .text:000000000000008c .L0 
     /tmp/ccM8aqNX.s:124    .text:000000000000008c .L0 
     /tmp/ccM8aqNX.s:125    .text:000000000000008c .L0 
     /tmp/ccM8aqNX.s:131    .text:0000000000000098 .L0 
     /tmp/ccM8aqNX.s:133    .text:0000000000000098 .L0 
     /tmp/ccM8aqNX.s:136    .text:00000000000000a0 .L0 
     /tmp/ccM8aqNX.s:137    .text:00000000000000a0 .L0 
     /tmp/ccM8aqNX.s:140    .text:00000000000000a8 .L0 
     /tmp/ccM8aqNX.s:141    .text:00000000000000a8 .L0 
     /tmp/ccM8aqNX.s:142    .text:00000000000000a8 .L0 
     /tmp/ccM8aqNX.s:143    .text:00000000000000a8 .L0 
     /tmp/ccM8aqNX.s:144    .text:00000000000000a8 .L0 
GAS LISTING /tmp/ccM8aqNX.s 			page 12


     /tmp/ccM8aqNX.s:145    .text:00000000000000a8 .L0 
     /tmp/ccM8aqNX.s:151    .text:00000000000000c0 .L0 
     /tmp/ccM8aqNX.s:152    .text:00000000000000c0 .L0 
     /tmp/ccM8aqNX.s:158    .text:00000000000000c4 .L0 
     /tmp/ccM8aqNX.s:159    .text:00000000000000c4 .L0 
     /tmp/ccM8aqNX.s:167    .text:00000000000000d0 .L0 
     /tmp/ccM8aqNX.s:168    .text:00000000000000d0 .L0 
     /tmp/ccM8aqNX.s:169    .text:00000000000000d0 .L0 
     /tmp/ccM8aqNX.s:175    .text:00000000000000d8 .L0 
     /tmp/ccM8aqNX.s:176    .text:00000000000000d8 .L0 
     /tmp/ccM8aqNX.s:182    .text:00000000000000f0 .L0 
     /tmp/ccM8aqNX.s:183    .text:00000000000000f0 .L0 
     /tmp/ccM8aqNX.s:189    .text:0000000000000108 .L0 
     /tmp/ccM8aqNX.s:190    .text:0000000000000108 .L0 
     /tmp/ccM8aqNX.s:199    .text:0000000000000120 .L0 
     /tmp/ccM8aqNX.s:200    .text:0000000000000120 .L0 
     /tmp/ccM8aqNX.s:201    .text:0000000000000120 .L0 
     /tmp/ccM8aqNX.s:211    .text:0000000000000128 .L0 
     /tmp/ccM8aqNX.s:212    .text:0000000000000128 .L0 
     /tmp/ccM8aqNX.s:218    .text:0000000000000134 .L0 
     /tmp/ccM8aqNX.s:219    .text:0000000000000134 .L0 
src/../h/KConsole.hpp:32     .text:0000000000000134 .L0 
     /tmp/ccM8aqNX.s:225    .text:0000000000000138 .L0 
src/../h/KConsole.hpp:33     .text:0000000000000138 .L0 
     /tmp/ccM8aqNX.s:236    .text:000000000000013c .L0 
     /tmp/ccM8aqNX.s:237    .text:000000000000013c .L0 
  src/../h/Riscv.hpp:132    .text:000000000000013c .L0 
     /tmp/ccM8aqNX.s:247    .text:0000000000000140 .L0 
     /tmp/ccM8aqNX.s:248    .text:0000000000000140 .L0 
     /tmp/ccM8aqNX.s:250    .text:0000000000000148 .L0 
     /tmp/ccM8aqNX.s:252    .text:000000000000014c .L0 
     /tmp/ccM8aqNX.s:253    .text:000000000000014c .L0 
     /tmp/ccM8aqNX.s:255    .text:0000000000000150 .L0 
     /tmp/ccM8aqNX.s:257    .text:0000000000000154 .L0 
     /tmp/ccM8aqNX.s:259    .text:0000000000000158 .L0 
     /tmp/ccM8aqNX.s:267    .text:0000000000000158 .L0 
     /tmp/ccM8aqNX.s:57     .text:0000000000000030 .L0 
     /tmp/ccM8aqNX.s:71     .text:0000000000000040 .L0 
     /tmp/ccM8aqNX.s:92     .text:000000000000005c .L0 
     /tmp/ccM8aqNX.s:125    .text:000000000000008c .L0 
     /tmp/ccM8aqNX.s:146    .text:00000000000000ac .L0 
     /tmp/ccM8aqNX.s:159    .text:00000000000000c4 .L0 
     /tmp/ccM8aqNX.s:177    .text:00000000000000dc .L0 
     /tmp/ccM8aqNX.s:184    .text:00000000000000f4 .L0 
     /tmp/ccM8aqNX.s:191    .text:000000000000010c .L0 
     /tmp/ccM8aqNX.s:22     .text:0000000000000010 .L2
     /tmp/ccM8aqNX.s:78     .text:0000000000000054 .L6
     /tmp/ccM8aqNX.s:85     .text:000000000000005c .L5
     /tmp/ccM8aqNX.s:50     .text:0000000000000030 .L8
     /tmp/ccM8aqNX.s:1906   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccM8aqNX.s:3378   .debug_str:0000000000000ab6 .LASF211
     /tmp/ccM8aqNX.s:3134   .debug_str:0000000000000359 .LASF212
     /tmp/ccM8aqNX.s:3336   .debug_str:0000000000000987 .LASF213
     /tmp/ccM8aqNX.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccM8aqNX.s:262    .text:0000000000000158 .Letext0
     /tmp/ccM8aqNX.s:3022   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccM8aqNX.s:3172   .debug_str:0000000000000470 .LASF0
GAS LISTING /tmp/ccM8aqNX.s 			page 13


     /tmp/ccM8aqNX.s:3198   .debug_str:0000000000000516 .LASF1
     /tmp/ccM8aqNX.s:3316   .debug_str:00000000000008e7 .LASF2
     /tmp/ccM8aqNX.s:3120   .debug_str:00000000000002df .LASF3
     /tmp/ccM8aqNX.s:3328   .debug_str:000000000000094b .LASF4
     /tmp/ccM8aqNX.s:3184   .debug_str:00000000000004b8 .LASF5
     /tmp/ccM8aqNX.s:3042   .debug_str:000000000000008c .LASF6
     /tmp/ccM8aqNX.s:3280   .debug_str:00000000000007d1 .LASF7
     /tmp/ccM8aqNX.s:3272   .debug_str:000000000000079f .LASF8
     /tmp/ccM8aqNX.s:3188   .debug_str:00000000000004d7 .LASF9
     /tmp/ccM8aqNX.s:3146   .debug_str:00000000000003a2 .LASF10
     /tmp/ccM8aqNX.s:3158   .debug_str:00000000000003fc .LASF11
     /tmp/ccM8aqNX.s:3074   .debug_str:0000000000000167 .LASF12
     /tmp/ccM8aqNX.s:3132   .debug_str:000000000000034a .LASF13
     /tmp/ccM8aqNX.s:3088   .debug_str:00000000000001d2 .LASF14
     /tmp/ccM8aqNX.s:3072   .debug_str:0000000000000157 .LASF15
     /tmp/ccM8aqNX.s:3356   .debug_str:0000000000000a2a .LASF16
     /tmp/ccM8aqNX.s:3116   .debug_str:00000000000002ab .LASF17
     /tmp/ccM8aqNX.s:3348   .debug_str:00000000000009fb .LASF18
     /tmp/ccM8aqNX.s:3426   .debug_str:0000000000000cb8 .LASF48
     /tmp/ccM8aqNX.s:3408   .debug_str:0000000000000c5e .LASF108
     /tmp/ccM8aqNX.s:3126   .debug_str:0000000000000309 .LASF19
     /tmp/ccM8aqNX.s:3376   .debug_str:0000000000000aa9 .LASF20
     /tmp/ccM8aqNX.s:3098   .debug_str:000000000000023a .LASF21
     /tmp/ccM8aqNX.s:3226   .debug_str:00000000000005f4 .LASF50
     /tmp/ccM8aqNX.s:3398   .debug_str:0000000000000c12 .LASF52
     /tmp/ccM8aqNX.s:3396   .debug_str:0000000000000c09 .LASF22
     /tmp/ccM8aqNX.s:3388   .debug_str:0000000000000bb8 .LASF24
     /tmp/ccM8aqNX.s:3312   .debug_str:00000000000008d3 .LASF26
     /tmp/ccM8aqNX.s:3258   .debug_str:0000000000000713 .LASF28
     /tmp/ccM8aqNX.s:3286   .debug_str:00000000000007ea .LASF23
     /tmp/ccM8aqNX.s:3294   .debug_str:0000000000000823 .LASF25
     /tmp/ccM8aqNX.s:3244   .debug_str:00000000000006a9 .LASF27
     /tmp/ccM8aqNX.s:3190   .debug_str:00000000000004ea .LASF29
     /tmp/ccM8aqNX.s:3440   .debug_str:0000000000000d37 .LASF30
     /tmp/ccM8aqNX.s:3380   .debug_str:0000000000000b7a .LASF31
     /tmp/ccM8aqNX.s:3242   .debug_str:00000000000006a1 .LASF32
     /tmp/ccM8aqNX.s:3256   .debug_str:00000000000006ff .LASF33
     /tmp/ccM8aqNX.s:3352   .debug_str:0000000000000a16 .LASF34
     /tmp/ccM8aqNX.s:3330   .debug_str:0000000000000952 .LASF35
     /tmp/ccM8aqNX.s:3332   .debug_str:0000000000000965 .LASF36
     /tmp/ccM8aqNX.s:3082   .debug_str:00000000000001a7 .LASF37
     /tmp/ccM8aqNX.s:3114   .debug_str:00000000000002a5 .LASF38
     /tmp/ccM8aqNX.s:3166   .debug_str:0000000000000447 .LASF39
     /tmp/ccM8aqNX.s:3178   .debug_str:000000000000049c .LASF40
     /tmp/ccM8aqNX.s:3102   .debug_str:000000000000024d .LASF41
     /tmp/ccM8aqNX.s:3044   .debug_str:0000000000000093 .LASF42
     /tmp/ccM8aqNX.s:3320   .debug_str:00000000000008ff .LASF43
     /tmp/ccM8aqNX.s:3314   .debug_str:00000000000008dc .LASF44
     /tmp/ccM8aqNX.s:3452   .debug_str:0000000000000d99 .LASF45
     /tmp/ccM8aqNX.s:3428   .debug_str:0000000000000cbe .LASF46
     /tmp/ccM8aqNX.s:3444   .debug_str:0000000000000d49 .LASF47
     /tmp/ccM8aqNX.s:3422   .debug_str:0000000000000c98 .LASF63
     /tmp/ccM8aqNX.s:3224   .debug_str:00000000000005de .LASF65
     /tmp/ccM8aqNX.s:3124   .debug_str:0000000000000301 .LASF49
     /tmp/ccM8aqNX.s:3068   .debug_str:0000000000000137 .LASF51
     /tmp/ccM8aqNX.s:3288   .debug_str:00000000000007f1 .LASF53
     /tmp/ccM8aqNX.s:3136   .debug_str:0000000000000366 .LASF54
GAS LISTING /tmp/ccM8aqNX.s 			page 14


     /tmp/ccM8aqNX.s:3148   .debug_str:00000000000003b2 .LASF56
     /tmp/ccM8aqNX.s:3140   .debug_str:0000000000000373 .LASF55
     /tmp/ccM8aqNX.s:3176   .debug_str:0000000000000487 .LASF57
     /tmp/ccM8aqNX.s:3170   .debug_str:0000000000000464 .LASF58
     /tmp/ccM8aqNX.s:3222   .debug_str:00000000000005d2 .LASF59
     /tmp/ccM8aqNX.s:3322   .debug_str:0000000000000917 .LASF60
     /tmp/ccM8aqNX.s:3292   .debug_str:0000000000000819 .LASF61
     /tmp/ccM8aqNX.s:3276   .debug_str:00000000000007b8 .LASF62
     /tmp/ccM8aqNX.s:3266   .debug_str:000000000000076d .LASF64
     /tmp/ccM8aqNX.s:3046   .debug_str:000000000000009e .LASF66
     /tmp/ccM8aqNX.s:3216   .debug_str:00000000000005a4 .LASF67
     /tmp/ccM8aqNX.s:3066   .debug_str:0000000000000131 .LASF68
     /tmp/ccM8aqNX.s:3350   .debug_str:0000000000000a11 .LASF214
     /tmp/ccM8aqNX.s:3212   .debug_str:0000000000000587 .LASF69
     /tmp/ccM8aqNX.s:3106   .debug_str:0000000000000277 .LASF70
     /tmp/ccM8aqNX.s:3390   .debug_str:0000000000000bcd .LASF71
     /tmp/ccM8aqNX.s:3338   .debug_str:00000000000009a5 .LASF72
     /tmp/ccM8aqNX.s:3250   .debug_str:00000000000006c8 .LASF73
     /tmp/ccM8aqNX.s:3274   .debug_str:00000000000007b2 .LASF74
     /tmp/ccM8aqNX.s:3240   .debug_str:000000000000068c .LASF75
     /tmp/ccM8aqNX.s:3182   .debug_str:00000000000004aa .LASF76
     /tmp/ccM8aqNX.s:3270   .debug_str:0000000000000781 .LASF77
     /tmp/ccM8aqNX.s:3164   .debug_str:000000000000043a .LASF78
     /tmp/ccM8aqNX.s:3308   .debug_str:00000000000008a6 .LASF79
     /tmp/ccM8aqNX.s:3400   .debug_str:0000000000000c33 .LASF80
     /tmp/ccM8aqNX.s:3064   .debug_str:000000000000011c .LASF81
     /tmp/ccM8aqNX.s:3040   .debug_str:0000000000000081 .LASF82
     /tmp/ccM8aqNX.s:3430   .debug_str:0000000000000cc8 .LASF83
     /tmp/ccM8aqNX.s:3026   .debug_str:000000000000001b .LASF84
     /tmp/ccM8aqNX.s:3144   .debug_str:0000000000000387 .LASF85
     /tmp/ccM8aqNX.s:3362   .debug_str:0000000000000a53 .LASF86
     /tmp/ccM8aqNX.s:3024   .debug_str:0000000000000000 .LASF87
     /tmp/ccM8aqNX.s:3210   .debug_str:000000000000056f .LASF88
     /tmp/ccM8aqNX.s:3130   .debug_str:0000000000000322 .LASF89
     /tmp/ccM8aqNX.s:3324   .debug_str:000000000000092f .LASF90
     /tmp/ccM8aqNX.s:3078   .debug_str:000000000000017b .LASF91
     /tmp/ccM8aqNX.s:3080   .debug_str:0000000000000199 .LASF92
     /tmp/ccM8aqNX.s:3448   .debug_str:0000000000000d75 .LASF93
     /tmp/ccM8aqNX.s:3372   .debug_str:0000000000000a90 .LASF94
     /tmp/ccM8aqNX.s:3054   .debug_str:00000000000000e1 .LASF95
     /tmp/ccM8aqNX.s:3156   .debug_str:00000000000003e7 .LASF96
     /tmp/ccM8aqNX.s:3366   .debug_str:0000000000000a66 .LASF97
     /tmp/ccM8aqNX.s:3142   .debug_str:0000000000000379 .LASF98
     /tmp/ccM8aqNX.s:3030   .debug_str:000000000000002e .LASF215
     /tmp/ccM8aqNX.s:3402   .debug_str:0000000000000c39 .LASF99
     /tmp/ccM8aqNX.s:3112   .debug_str:0000000000000298 .LASF100
     /tmp/ccM8aqNX.s:3174   .debug_str:000000000000047d .LASF101
     /tmp/ccM8aqNX.s:3282   .debug_str:00000000000007d8 .LASF102
     /tmp/ccM8aqNX.s:3200   .debug_str:0000000000000529 .LASF103
     /tmp/ccM8aqNX.s:3406   .debug_str:0000000000000c53 .LASF104
     /tmp/ccM8aqNX.s:3340   .debug_str:00000000000009ab .LASF105
     /tmp/ccM8aqNX.s:3368   .debug_str:0000000000000a73 .LASF106
     /tmp/ccM8aqNX.s:3420   .debug_str:0000000000000c8f .LASF107
     /tmp/ccM8aqNX.s:3342   .debug_str:00000000000009bb .LASF109
     /tmp/ccM8aqNX.s:3284   .debug_str:00000000000007e2 .LASF110
     /tmp/ccM8aqNX.s:3100   .debug_str:0000000000000246 .LASF111
     /tmp/ccM8aqNX.s:3028   .debug_str:0000000000000026 .LASF112
GAS LISTING /tmp/ccM8aqNX.s 			page 15


     /tmp/ccM8aqNX.s:3150   .debug_str:00000000000003c8 .LASF113
     /tmp/ccM8aqNX.s:3194   .debug_str:0000000000000502 .LASF114
     /tmp/ccM8aqNX.s:3062   .debug_str:0000000000000113 .LASF115
     /tmp/ccM8aqNX.s:3364   .debug_str:0000000000000a5e .LASF163
     /tmp/ccM8aqNX.s:3354   .debug_str:0000000000000a1d .LASF116
     /tmp/ccM8aqNX.s:3436   .debug_str:0000000000000d10 .LASF117
     /tmp/ccM8aqNX.s:3264   .debug_str:0000000000000768 .LASF216
     /tmp/ccM8aqNX.s:3442   .debug_str:0000000000000d3f .LASF118
     /tmp/ccM8aqNX.s:3160   .debug_str:000000000000040a .LASF119
     /tmp/ccM8aqNX.s:3300   .debug_str:000000000000085f .LASF120
     /tmp/ccM8aqNX.s:3214   .debug_str:0000000000000590 .LASF122
     /tmp/ccM8aqNX.s:3204   .debug_str:000000000000053c .LASF121
     /tmp/ccM8aqNX.s:3298   .debug_str:0000000000000847 .LASF123
     /tmp/ccM8aqNX.s:3290   .debug_str:0000000000000811 .LASF124
     /tmp/ccM8aqNX.s:3218   .debug_str:00000000000005a9 .LASF125
     /tmp/ccM8aqNX.s:3434   .debug_str:0000000000000cf8 .LASF126
     /tmp/ccM8aqNX.s:3230   .debug_str:000000000000061d .LASF127
     /tmp/ccM8aqNX.s:3110   .debug_str:000000000000028d .LASF128
     /tmp/ccM8aqNX.s:3346   .debug_str:00000000000009e5 .LASF129
     /tmp/ccM8aqNX.s:3032   .debug_str:0000000000000037 .LASF130
     /tmp/ccM8aqNX.s:3370   .debug_str:0000000000000a78 .LASF131
     /tmp/ccM8aqNX.s:3394   .debug_str:0000000000000bf5 .LASF132
     /tmp/ccM8aqNX.s:3260   .debug_str:0000000000000728 .LASF133
     /tmp/ccM8aqNX.s:3392   .debug_str:0000000000000bea .LASF134
     /tmp/ccM8aqNX.s:3104   .debug_str:000000000000025f .LASF135
     /tmp/ccM8aqNX.s:3456   .debug_str:0000000000000dbe .LASF136
     /tmp/ccM8aqNX.s:3334   .debug_str:000000000000096c .LASF137
     /tmp/ccM8aqNX.s:3108   .debug_str:0000000000000284 .LASF138
     /tmp/ccM8aqNX.s:3084   .debug_str:00000000000001ba .LASF139
     /tmp/ccM8aqNX.s:3208   .debug_str:0000000000000567 .LASF140
     /tmp/ccM8aqNX.s:3048   .debug_str:00000000000000b4 .LASF141
     /tmp/ccM8aqNX.s:3152   .debug_str:00000000000003d0 .LASF142
     /tmp/ccM8aqNX.s:3304   .debug_str:0000000000000879 .LASF143
     /tmp/ccM8aqNX.s:3454   .debug_str:0000000000000db1 .LASF144
     /tmp/ccM8aqNX.s:3154   .debug_str:00000000000003db .LASF145
     /tmp/ccM8aqNX.s:3036   .debug_str:0000000000000049 .LASF146
     /tmp/ccM8aqNX.s:3254   .debug_str:00000000000006f2 .LASF147
     /tmp/ccM8aqNX.s:3446   .debug_str:0000000000000d5f .LASF217
     /tmp/ccM8aqNX.s:3386   .debug_str:0000000000000bb0 .LASF148
     /tmp/ccM8aqNX.s:3070   .debug_str:0000000000000148 .LASF149
     /tmp/ccM8aqNX.s:3450   .debug_str:0000000000000d93 .LASF150
     /tmp/ccM8aqNX.s:3360   .debug_str:0000000000000a4e .LASF151
     /tmp/ccM8aqNX.s:3382   .debug_str:0000000000000b8e .LASF152
     /tmp/ccM8aqNX.s:3310   .debug_str:00000000000008c3 .LASF153
     /tmp/ccM8aqNX.s:3268   .debug_str:0000000000000775 .LASF154
     /tmp/ccM8aqNX.s:3128   .debug_str:0000000000000315 .LASF155
     /tmp/ccM8aqNX.s:3326   .debug_str:000000000000093d .LASF156
     /tmp/ccM8aqNX.s:3416   .debug_str:0000000000000c83 .LASF157
     /tmp/ccM8aqNX.s:3238   .debug_str:0000000000000680 .LASF158
     /tmp/ccM8aqNX.s:3460   .debug_str:0000000000000de0 .LASF159
     /tmp/ccM8aqNX.s:3374   .debug_str:0000000000000aa1 .LASF160
     /tmp/ccM8aqNX.s:3296   .debug_str:0000000000000836 .LASF161
     /tmp/ccM8aqNX.s:3094   .debug_str:0000000000000212 .LASF169
     /tmp/ccM8aqNX.s:3038   .debug_str:0000000000000059 .LASF170
     /tmp/ccM8aqNX.s:3246   .debug_str:00000000000006b0 .LASF162
     /tmp/ccM8aqNX.s:3418   .debug_str:0000000000000c8a .LASF164
     /tmp/ccM8aqNX.s:3192   .debug_str:00000000000004fd .LASF165
GAS LISTING /tmp/ccM8aqNX.s 			page 16


     /tmp/ccM8aqNX.s:3076   .debug_str:0000000000000176 .LASF166
     /tmp/ccM8aqNX.s:3118   .debug_str:00000000000002c1 .LASF167
     /tmp/ccM8aqNX.s:3096   .debug_str:0000000000000220 .LASF168
     /tmp/ccM8aqNX.s:3090   .debug_str:00000000000001e2 .LASF171
     /tmp/ccM8aqNX.s:3052   .debug_str:00000000000000db .LASF172
     /tmp/ccM8aqNX.s:3234   .debug_str:000000000000065c .LASF173
     /tmp/ccM8aqNX.s:3050   .debug_str:00000000000000c6 .LASF174
     /tmp/ccM8aqNX.s:3358   .debug_str:0000000000000a36 .LASF175
     /tmp/ccM8aqNX.s:3318   .debug_str:00000000000008f5 .LASF188
     /tmp/ccM8aqNX.s:3384   .debug_str:0000000000000b98 .LASF190
     /tmp/ccM8aqNX.s:3186   .debug_str:00000000000004ca .LASF176
     /tmp/ccM8aqNX.s:3432   .debug_str:0000000000000ce3 .LASF177
     /tmp/ccM8aqNX.s:3180   .debug_str:00000000000004a2 .LASF178
     /tmp/ccM8aqNX.s:3122   .debug_str:00000000000002e5 .LASF179
     /tmp/ccM8aqNX.s:3202   .debug_str:0000000000000534 .LASF180
     /tmp/ccM8aqNX.s:3236   .debug_str:0000000000000661 .LASF181
     /tmp/ccM8aqNX.s:3060   .debug_str:000000000000010a .LASF182
     /tmp/ccM8aqNX.s:3232   .debug_str:0000000000000640 .LASF183
     /tmp/ccM8aqNX.s:3034   .debug_str:0000000000000042 .LASF184
     /tmp/ccM8aqNX.s:3206   .debug_str:0000000000000549 .LASF185
     /tmp/ccM8aqNX.s:3092   .debug_str:00000000000001fd .LASF186
     /tmp/ccM8aqNX.s:3424   .debug_str:0000000000000ca2 .LASF187
     /tmp/ccM8aqNX.s:3412   .debug_str:0000000000000c78 .LASF189
     /tmp/ccM8aqNX.s:3278   .debug_str:00000000000007c7 .LASF191
     /tmp/ccM8aqNX.s:110    .text:0000000000000078 .LFB54
     /tmp/ccM8aqNX.s:260    .text:0000000000000158 .LFE54
     /tmp/ccM8aqNX.s:3168   .debug_str:0000000000000459 .LASF192
     /tmp/ccM8aqNX.s:3410   .debug_str:0000000000000c6d .LASF193
     /tmp/ccM8aqNX.s:3056   .debug_str:00000000000000f5 .LASF194
     /tmp/ccM8aqNX.s:3458   .debug_str:0000000000000dcc .LASF195
     /tmp/ccM8aqNX.s:154    .text:00000000000000c4 .LBB27
     /tmp/ccM8aqNX.s:163    .text:00000000000000d0 .LBE27
     /tmp/ccM8aqNX.s:2945   .debug_loc:0000000000000000 .LLST2
     /tmp/ccM8aqNX.s:165    .text:00000000000000d0 .LBB29
     /tmp/ccM8aqNX.s:173    .text:00000000000000d8 .LBE29
     /tmp/ccM8aqNX.s:2952   .debug_loc:0000000000000023 .LLST3
     /tmp/ccM8aqNX.s:2960   .debug_loc:0000000000000047 .LLST4
     /tmp/ccM8aqNX.s:196    .text:0000000000000120 .LBB31
     /tmp/ccM8aqNX.s:209    .text:0000000000000128 .LBE31
     /tmp/ccM8aqNX.s:2967   .debug_loc:000000000000006a .LLST5
     /tmp/ccM8aqNX.s:216    .text:0000000000000134 .LBB33
     /tmp/ccM8aqNX.s:231    .text:000000000000013c .LBE33
     /tmp/ccM8aqNX.s:234    .text:000000000000013c .LBB35
     /tmp/ccM8aqNX.s:245    .text:0000000000000140 .LBE35
     /tmp/ccM8aqNX.s:2975   .debug_loc:000000000000008e .LLST6
     /tmp/ccM8aqNX.s:134    .text:00000000000000a0 .LVL6
     /tmp/ccM8aqNX.s:138    .text:00000000000000a8 .LVL7
     /tmp/ccM8aqNX.s:149    .text:00000000000000c0 .LVL8
     /tmp/ccM8aqNX.s:180    .text:00000000000000f0 .LVL12
     /tmp/ccM8aqNX.s:187    .text:0000000000000108 .LVL13
     /tmp/ccM8aqNX.s:194    .text:0000000000000120 .LVL14
     /tmp/ccM8aqNX.s:214    .text:0000000000000134 .LVL16
     /tmp/ccM8aqNX.s:3220   .debug_str:00000000000005bb .LASF196
     /tmp/ccM8aqNX.s:3344   .debug_str:00000000000009c8 .LASF197
     /tmp/ccM8aqNX.s:37     .text:000000000000001c .LFB53
     /tmp/ccM8aqNX.s:104    .text:0000000000000078 .LFE53
     /tmp/ccM8aqNX.s:3014   .debug_ranges:0000000000000000 .Ldebug_ranges0
GAS LISTING /tmp/ccM8aqNX.s 			page 17


     /tmp/ccM8aqNX.s:2983   .debug_loc:00000000000000b2 .LLST0
     /tmp/ccM8aqNX.s:53     .text:0000000000000030 .LBB20
     /tmp/ccM8aqNX.s:63     .text:0000000000000040 .LBE20
     /tmp/ccM8aqNX.s:2994   .debug_loc:00000000000000e8 .LLST1
     /tmp/ccM8aqNX.s:65     .text:0000000000000040 .LBB22
     /tmp/ccM8aqNX.s:69     .text:0000000000000040 .LBE22
     /tmp/ccM8aqNX.s:88     .text:000000000000005c .LBB24
     /tmp/ccM8aqNX.s:97     .text:000000000000006c .LBE24
     /tmp/ccM8aqNX.s:75     .text:0000000000000054 .LVL4
     /tmp/ccM8aqNX.s:84     .text:000000000000005c .LVL5
     /tmp/ccM8aqNX.s:3438   .debug_str:0000000000000d32 .LASF198
     /tmp/ccM8aqNX.s:3058   .debug_str:0000000000000100 .LASF199
     /tmp/ccM8aqNX.s:10     .text:0000000000000000 .LFB52
     /tmp/ccM8aqNX.s:31     .text:000000000000001c .LFE52
     /tmp/ccM8aqNX.s:27     .text:0000000000000018 .LVL0
     /tmp/ccM8aqNX.s:3196   .debug_str:000000000000050b .LASF200
     /tmp/ccM8aqNX.s:3138   .debug_str:000000000000036e .LASF218
     /tmp/ccM8aqNX.s:3086   .debug_str:00000000000001cd .LASF201
     /tmp/ccM8aqNX.s:3414   .debug_str:0000000000000c7e .LASF202
     /tmp/ccM8aqNX.s:3262   .debug_str:0000000000000747 .LASF203
     /tmp/ccM8aqNX.s:3404   .debug_str:0000000000000c45 .LASF205
     /tmp/ccM8aqNX.s:3252   .debug_str:00000000000006dd .LASF204
     /tmp/ccM8aqNX.s:3248   .debug_str:00000000000006bc .LASF206
     /tmp/ccM8aqNX.s:3306   .debug_str:0000000000000891 .LASF207
     /tmp/ccM8aqNX.s:3162   .debug_str:000000000000042f .LASF208
     /tmp/ccM8aqNX.s:3228   .debug_str:0000000000000608 .LASF209
     /tmp/ccM8aqNX.s:3302   .debug_str:0000000000000869 .LASF210
     /tmp/ccM8aqNX.s:153    .text:00000000000000c4 .LVL9
     /tmp/ccM8aqNX.s:161    .text:00000000000000d0 .LVL10
     /tmp/ccM8aqNX.s:171    .text:00000000000000d8 .LVL11
     /tmp/ccM8aqNX.s:206    .text:0000000000000128 .LVL15
     /tmp/ccM8aqNX.s:233    .text:000000000000013c .LVL17
     /tmp/ccM8aqNX.s:242    .text:0000000000000140 .LVL18
     /tmp/ccM8aqNX.s:49     .text:0000000000000030 .LVL1
     /tmp/ccM8aqNX.s:73     .text:000000000000004c .LVL3
     /tmp/ccM8aqNX.s:61     .text:0000000000000040 .LVL2
     /tmp/ccM8aqNX.s:268    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccM8aqNX.s:51     .text:0000000000000030 .LBB19
     /tmp/ccM8aqNX.s:76     .text:0000000000000054 .LBE19
     /tmp/ccM8aqNX.s:80     .text:0000000000000054 .LBB26
     /tmp/ccM8aqNX.s:102    .text:0000000000000078 .LBE26

UNDEFINED SYMBOLS
_Z15thread_dispatchv
_ZN8KConsole2drE
_ZN8KConsole20outputBufferHasSpaceE
_Z10sem_signalP4KSem
_ZN8KConsole13getFromOutputEv
_ZN8KConsole2srE
interruptHandler
_ZN7KMemory16initializeMemoryEv
_ZN8KConsole12initKConsoleEv
main
_Z13thread_createPP3TCBPFvPvES2_
_ZN3TCB7runningE
_Z8userMainv
_Z11thread_joinP3TCB
GAS LISTING /tmp/ccM8aqNX.s 			page 18


